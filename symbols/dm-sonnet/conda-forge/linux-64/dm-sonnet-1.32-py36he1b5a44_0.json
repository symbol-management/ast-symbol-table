{
 "sonnet": {
  "data": {
   "symbols_in_volume": [
    "sonnet._ensure_dependency_available_at_version"
   ]
  },
  "type": "module"
 },
 "sonnet.ACTCore": {
  "data": {
   "shadows": "sonnet.python.modules.pondering_rnn.ACTCore"
  },
  "type": "import"
 },
 "sonnet.AbstractModule": {
  "data": {
   "shadows": "sonnet.python.modules.base.AbstractModule"
  },
  "type": "import"
 },
 "sonnet.AddBias": {
  "data": {
   "shadows": "sonnet.python.modules.basic.AddBias"
  },
  "type": "import"
 },
 "sonnet.AffineGridWarper": {
  "data": {
   "shadows": "sonnet.python.modules.spatial_transformer.AffineGridWarper"
  },
  "type": "import"
 },
 "sonnet.AffineWarpConstraints": {
  "data": {
   "shadows": "sonnet.python.modules.spatial_transformer.AffineWarpConstraints"
  },
  "type": "import"
 },
 "sonnet.AttentiveRead": {
  "data": {
   "shadows": "sonnet.python.modules.attention.AttentiveRead"
  },
  "type": "import"
 },
 "sonnet.BatchApply": {
  "data": {
   "shadows": "sonnet.python.modules.basic.BatchApply"
  },
  "type": "import"
 },
 "sonnet.BatchFlatten": {
  "data": {
   "shadows": "sonnet.python.modules.basic.BatchFlatten"
  },
  "type": "import"
 },
 "sonnet.BatchNorm": {
  "data": {
   "shadows": "sonnet.python.modules.batch_norm.BatchNorm"
  },
  "type": "import"
 },
 "sonnet.BatchNormLSTM": {
  "data": {
   "shadows": "sonnet.python.modules.gated_rnn.BatchNormLSTM"
  },
  "type": "import"
 },
 "sonnet.BatchNormV2": {
  "data": {
   "shadows": "sonnet.python.modules.batch_norm_v2.BatchNormV2"
  },
  "type": "import"
 },
 "sonnet.BatchReshape": {
  "data": {
   "shadows": "sonnet.python.modules.basic.BatchReshape"
  },
  "type": "import"
 },
 "sonnet.BidirectionalRNN": {
  "data": {
   "shadows": "sonnet.python.modules.basic_rnn.BidirectionalRNN"
  },
  "type": "import"
 },
 "sonnet.CAUSAL": {
  "data": {
   "shadows": "sonnet.python.modules.conv.CAUSAL"
  },
  "type": "import"
 },
 "sonnet.CausalConv1D": {
  "data": {
   "shadows": "sonnet.python.modules.conv.CausalConv1D"
  },
  "type": "import"
 },
 "sonnet.ConcatLinear": {
  "data": {
   "shadows": "sonnet.python.modules.basic.ConcatLinear"
  },
  "type": "import"
 },
 "sonnet.Conv1D": {
  "data": {
   "shadows": "sonnet.python.modules.conv.Conv1D"
  },
  "type": "import"
 },
 "sonnet.Conv1DLSTM": {
  "data": {
   "shadows": "sonnet.python.modules.gated_rnn.Conv1DLSTM"
  },
  "type": "import"
 },
 "sonnet.Conv1DTranspose": {
  "data": {
   "shadows": "sonnet.python.modules.conv.Conv1DTranspose"
  },
  "type": "import"
 },
 "sonnet.Conv2D": {
  "data": {
   "shadows": "sonnet.python.modules.conv.Conv2D"
  },
  "type": "import"
 },
 "sonnet.Conv2DLSTM": {
  "data": {
   "shadows": "sonnet.python.modules.gated_rnn.Conv2DLSTM"
  },
  "type": "import"
 },
 "sonnet.Conv2DTranspose": {
  "data": {
   "shadows": "sonnet.python.modules.conv.Conv2DTranspose"
  },
  "type": "import"
 },
 "sonnet.Conv3D": {
  "data": {
   "shadows": "sonnet.python.modules.conv.Conv3D"
  },
  "type": "import"
 },
 "sonnet.Conv3DTranspose": {
  "data": {
   "shadows": "sonnet.python.modules.conv.Conv3DTranspose"
  },
  "type": "import"
 },
 "sonnet.DeepRNN": {
  "data": {
   "shadows": "sonnet.python.modules.basic_rnn.DeepRNN"
  },
  "type": "import"
 },
 "sonnet.DepthwiseConv2D": {
  "data": {
   "shadows": "sonnet.python.modules.conv.DepthwiseConv2D"
  },
  "type": "import"
 },
 "sonnet.DifferentGraphError": {
  "data": {
   "shadows": "sonnet.python.modules.base_errors.DifferentGraphError"
  },
  "type": "import"
 },
 "sonnet.Embed": {
  "data": {
   "shadows": "sonnet.python.modules.embed.Embed"
  },
  "type": "import"
 },
 "sonnet.Error": {
  "data": {
   "shadows": "sonnet.python.modules.base_errors.Error"
  },
  "type": "import"
 },
 "sonnet.FULL": {
  "data": {
   "shadows": "sonnet.python.modules.conv.FULL"
  },
  "type": "import"
 },
 "sonnet.FlattenTrailingDimensions": {
  "data": {
   "shadows": "sonnet.python.modules.basic.FlattenTrailingDimensions"
  },
  "type": "import"
 },
 "sonnet.GRU": {
  "data": {
   "shadows": "sonnet.python.modules.gated_rnn.GRU"
  },
  "type": "import"
 },
 "sonnet.GridWarper": {
  "data": {
   "shadows": "sonnet.python.modules.spatial_transformer.GridWarper"
  },
  "type": "import"
 },
 "sonnet.HighwayCore": {
  "data": {
   "shadows": "sonnet.python.modules.gated_rnn.HighwayCore"
  },
  "type": "import"
 },
 "sonnet.InPlaneConv2D": {
  "data": {
   "shadows": "sonnet.python.modules.conv.InPlaneConv2D"
  },
  "type": "import"
 },
 "sonnet.IncompatibleShapeError": {
  "data": {
   "shadows": "sonnet.python.modules.base_errors.IncompatibleShapeError"
  },
  "type": "import"
 },
 "sonnet.LSTM": {
  "data": {
   "shadows": "sonnet.python.modules.gated_rnn.LSTM"
  },
  "type": "import"
 },
 "sonnet.LSTMBlockCell": {
  "data": {
   "shadows": "sonnet.python.modules.gated_rnn.LSTMBlockCell"
  },
  "type": "import"
 },
 "sonnet.LSTMState": {
  "data": {
   "shadows": "sonnet.python.modules.gated_rnn.LSTMState"
  },
  "type": "import"
 },
 "sonnet.LayerNorm": {
  "data": {
   "shadows": "sonnet.python.modules.layer_norm.LayerNorm"
  },
  "type": "import"
 },
 "sonnet.Linear": {
  "data": {
   "shadows": "sonnet.python.modules.basic.Linear"
  },
  "type": "import"
 },
 "sonnet.MergeDims": {
  "data": {
   "shadows": "sonnet.python.modules.basic.MergeDims"
  },
  "type": "import"
 },
 "sonnet.ModelRNN": {
  "data": {
   "shadows": "sonnet.python.modules.basic_rnn.ModelRNN"
  },
  "type": "import"
 },
 "sonnet.Module": {
  "data": {
   "shadows": "sonnet.python.modules.base.Module"
  },
  "type": "import"
 },
 "sonnet.ModuleInfoError": {
  "data": {
   "shadows": "sonnet.python.modules.base_errors.ModuleInfoError"
  },
  "type": "import"
 },
 "sonnet.NotConnectedError": {
  "data": {
   "shadows": "sonnet.python.modules.base_errors.NotConnectedError"
  },
  "type": "import"
 },
 "sonnet.NotInitializedError": {
  "data": {
   "shadows": "sonnet.python.modules.base_errors.NotInitializedError"
  },
  "type": "import"
 },
 "sonnet.NotSupportedError": {
  "data": {
   "shadows": "sonnet.python.modules.base_errors.NotSupportedError"
  },
  "type": "import"
 },
 "sonnet.ParentNotBuiltError": {
  "data": {
   "shadows": "sonnet.python.modules.base_errors.ParentNotBuiltError"
  },
  "type": "import"
 },
 "sonnet.REVERSE_CAUSAL": {
  "data": {
   "shadows": "sonnet.python.modules.conv.REVERSE_CAUSAL"
  },
  "type": "import"
 },
 "sonnet.RNNCellWrapper": {
  "data": {
   "shadows": "sonnet.python.modules.rnn_core.RNNCellWrapper"
  },
  "type": "import"
 },
 "sonnet.RNNCore": {
  "data": {
   "shadows": "sonnet.python.modules.rnn_core.RNNCore"
  },
  "type": "import"
 },
 "sonnet.RelationalMemory": {
  "data": {
   "shadows": "sonnet.python.modules.relational_memory.RelationalMemory"
  },
  "type": "import"
 },
 "sonnet.Residual": {
  "data": {
   "shadows": "sonnet.python.modules.residual.Residual"
  },
  "type": "import"
 },
 "sonnet.ResidualCore": {
  "data": {
   "shadows": "sonnet.python.modules.residual.ResidualCore"
  },
  "type": "import"
 },
 "sonnet.SAME": {
  "data": {
   "shadows": "sonnet.python.modules.conv.SAME"
  },
  "type": "import"
 },
 "sonnet.SONNET_COLLECTION_NAME": {
  "data": {
   "shadows": "sonnet.python.modules.base_info.SONNET_COLLECTION_NAME"
  },
  "type": "import"
 },
 "sonnet.SelectInput": {
  "data": {
   "shadows": "sonnet.python.modules.basic.SelectInput"
  },
  "type": "import"
 },
 "sonnet.SeparableConv1D": {
  "data": {
   "shadows": "sonnet.python.modules.conv.SeparableConv1D"
  },
  "type": "import"
 },
 "sonnet.SeparableConv2D": {
  "data": {
   "shadows": "sonnet.python.modules.conv.SeparableConv2D"
  },
  "type": "import"
 },
 "sonnet.Sequential": {
  "data": {
   "shadows": "sonnet.python.modules.sequential.Sequential"
  },
  "type": "import"
 },
 "sonnet.SkipConnectionCore": {
  "data": {
   "shadows": "sonnet.python.modules.residual.SkipConnectionCore"
  },
  "type": "import"
 },
 "sonnet.SliceByDim": {
  "data": {
   "shadows": "sonnet.python.modules.basic.SliceByDim"
  },
  "type": "import"
 },
 "sonnet.TileByDim": {
  "data": {
   "shadows": "sonnet.python.modules.basic.TileByDim"
  },
  "type": "import"
 },
 "sonnet.TrainableInitialState": {
  "data": {
   "shadows": "sonnet.python.modules.rnn_core.TrainableInitialState"
  },
  "type": "import"
 },
 "sonnet.TrainableVariable": {
  "data": {
   "shadows": "sonnet.python.modules.basic.TrainableVariable"
  },
  "type": "import"
 },
 "sonnet.Transposable": {
  "data": {
   "shadows": "sonnet.python.modules.base.Transposable"
  },
  "type": "import"
 },
 "sonnet.UnderspecifiedError": {
  "data": {
   "shadows": "sonnet.python.modules.base_errors.UnderspecifiedError"
  },
  "type": "import"
 },
 "sonnet.VALID": {
  "data": {
   "shadows": "sonnet.python.modules.conv.VALID"
  },
  "type": "import"
 },
 "sonnet.VanillaRNN": {
  "data": {
   "shadows": "sonnet.python.modules.basic_rnn.VanillaRNN"
  },
  "type": "import"
 },
 "sonnet.__version__": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "sonnet._ensure_dependency_available_at_version": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ImportError",
    "SystemError",
    "sonnet.importlib",
    "sonnet.semantic_version"
   ]
  },
  "type": "function"
 },
 "sonnet.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.check_initializers": {
  "data": {
   "shadows": "sonnet.python.modules.util.check_initializers"
  },
  "type": "import"
 },
 "sonnet.check_partitioners": {
  "data": {
   "shadows": "sonnet.python.modules.util.check_partitioners"
  },
  "type": "import"
 },
 "sonnet.check_regularizers": {
  "data": {
   "shadows": "sonnet.python.modules.util.check_regularizers"
  },
  "type": "import"
 },
 "sonnet.clip_gradient": {
  "data": {
   "shadows": "sonnet.python.modules.clip_gradient.clip_gradient"
  },
  "type": "import"
 },
 "sonnet.count_variables_by_type": {
  "data": {
   "shadows": "sonnet.python.modules.util.count_variables_by_type"
  },
  "type": "import"
 },
 "sonnet.custom_getter_router": {
  "data": {
   "shadows": "sonnet.python.modules.util.custom_getter_router"
  },
  "type": "import"
 },
 "sonnet.custom_getters": {
  "data": {
   "shadows": "sonnet.python.custom_getters"
  },
  "type": "import"
 },
 "sonnet.deprecation_warning": {
  "data": {
   "shadows": "sonnet.python.modules.util.deprecation_warning"
  },
  "type": "import"
 },
 "sonnet.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.examples": {
  "data": {},
  "type": "module"
 },
 "sonnet.examples.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.examples.brnn_ptb": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.exp",
    "sonnet.examples.brnn_ptb.collections",
    "tensorflow.app.run",
    "tensorflow.contrib.framework.nest",
    "tensorflow.flags.DEFINE_float",
    "tensorflow.flags.DEFINE_integer",
    "tensorflow.flags.DEFINE_string",
    "tensorflow.flags.FLAGS",
    "tensorflow.logging.INFO",
    "tensorflow.logging.set_verbosity"
   ]
  },
  "type": "module"
 },
 "sonnet.examples.brnn_ptb.CustomScaleMixture": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.brnn_ptb.CustomScaleMixture.__init__": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.CustomScaleMixture.log_prob": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "numpy.float32",
    "tensorflow.log",
    "tensorflow.reduce_logsumexp",
    "tensorflow.reduce_sum",
    "tensorflow.stack",
    "tensorflow_probability.distributions.Normal"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.DataOps": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "sonnet.examples.brnn_ptb.FLAGS": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sonnet.examples.brnn_ptb.GlobalNormClippingOptimizer": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "tensorflow.train.Optimizer"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.brnn_ptb.GlobalNormClippingOptimizer.__init__": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "sonnet.examples.brnn_ptb.GlobalNormClippingOptimizer",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.GlobalNormClippingOptimizer.apply_gradients": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "list",
    "numpy.inf",
    "tensorflow.clip_by_global_norm",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.GlobalNormClippingOptimizer.compute_gradients": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.PTB": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.brnn_ptb.PTB.__call__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "sonnet.examples.brnn_ptb.DataOps",
    "sonnet.examples.ptb_reader.ptb_producer",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.PTB.__init__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "sonnet.examples.brnn_ptb._get_raw_data"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.PTB.num_batches": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.prod",
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.PTB.to_string": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.PTB.to_string_tensor": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "tensorflow.py_func",
    "tensorflow.string"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.PTB.to_string_tensor.p_func": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.PTB.vocab_size": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.brnn_ptb._LOADED": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "sonnet.examples.brnn_ptb._get_raw_data": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.array",
    "sonnet.examples.brnn_ptb.FLAGS",
    "sonnet.examples.brnn_ptb._LOADED",
    "sonnet.examples.ptb_reader.ptb_raw_data"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.brnn_ptb._run_session_with_no_hooks": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.examples.brnn_ptb.bbb": {
  "data": {
   "shadows": "sonnet.python.custom_getters.bayes_by_backprop"
  },
  "type": "import"
 },
 "sonnet.examples.brnn_ptb.build_logits": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "sonnet.BatchApply",
    "sonnet.examples.brnn_ptb.FLAGS",
    "sonnet.examples.brnn_ptb.nest",
    "tensorflow.assign",
    "tensorflow.control_dependencies",
    "tensorflow.get_local_variable",
    "tensorflow.group",
    "tensorflow.identity",
    "tensorflow.nn.dynamic_rnn",
    "tensorflow.zeros_like"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.build_loss": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "sonnet.examples.brnn_ptb.FLAGS",
    "tensorflow.nn.sparse_softmax_cross_entropy_with_logits",
    "tensorflow.reduce_mean",
    "tensorflow.reduce_sum",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.build_modules": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "range",
    "sonnet.DeepRNN",
    "sonnet.Embed",
    "sonnet.LSTM",
    "sonnet.Linear",
    "sonnet.examples.brnn_ptb.FLAGS",
    "sonnet.examples.brnn_ptb.custom_scale_mixture_prior_builder",
    "sonnet.examples.brnn_ptb.lstm_posterior_builder",
    "sonnet.examples.brnn_ptb.non_lstm_posterior_builder",
    "sonnet.python.custom_getters.bayes_by_backprop.EstimatorModes.mean",
    "sonnet.python.custom_getters.bayes_by_backprop.EstimatorModes.sample",
    "sonnet.python.custom_getters.bayes_by_backprop.bayes_by_backprop_getter",
    "sonnet.python.custom_getters.bayes_by_backprop.stochastic_kl_builder",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "sonnet.examples.brnn_ptb.custom_scale_mixture_prior_builder": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "sonnet.examples.brnn_ptb.CustomScaleMixture",
    "sonnet.examples.brnn_ptb.FLAGS"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.examples.brnn_ptb.lstm_posterior_builder": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "getter",
    "numpy.exp",
    "numpy.log",
    "numpy.sqrt",
    "numpy.square",
    "sonnet.examples.brnn_ptb.FLAGS",
    "tensorflow.float32",
    "tensorflow.nn.softplus",
    "tensorflow.random_uniform",
    "tensorflow_probability.distributions.Normal",
    "tensorflow_probability.distributions.Normal.param_static_shapes"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.main": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.examples.brnn_ptb.FLAGS",
    "sonnet.examples.brnn_ptb.os",
    "sonnet.examples.brnn_ptb.test",
    "sonnet.examples.brnn_ptb.train",
    "tensorflow.Graph",
    "tensorflow.logging.info"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.nest": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "sonnet.examples.brnn_ptb.non_lstm_posterior_builder": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "getter",
    "numpy.exp",
    "numpy.log",
    "numpy.sqrt",
    "numpy.square",
    "sonnet.examples.brnn_ptb.FLAGS",
    "tensorflow.float32",
    "tensorflow.nn.softplus",
    "tensorflow.random_uniform",
    "tensorflow_probability.distributions.Normal",
    "tensorflow_probability.distributions.Normal.param_static_shapes"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.examples.brnn_ptb.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sonnet.examples.brnn_ptb.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.examples.brnn_ptb.ptb_reader": {
  "data": {
   "shadows": "sonnet.examples.ptb_reader"
  },
  "type": "import"
 },
 "sonnet.examples.brnn_ptb.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.examples.brnn_ptb.test": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "numpy.exp",
    "ptb_test",
    "ptb_test.num_batches",
    "ptb_test.vocab_size",
    "range",
    "sonnet.examples.brnn_ptb.FLAGS",
    "sonnet.examples.brnn_ptb.PTB",
    "sonnet.examples.brnn_ptb._run_session_with_no_hooks",
    "sonnet.examples.brnn_ptb.build_logits",
    "sonnet.examples.brnn_ptb.build_loss",
    "sonnet.examples.brnn_ptb.build_modules",
    "tensorflow.GraphKeys.GLOBAL_STEP",
    "tensorflow.GraphKeys.GLOBAL_VARIABLES",
    "tensorflow.constant",
    "tensorflow.get_variable",
    "tensorflow.int32",
    "tensorflow.logging.info",
    "tensorflow.train.SingularMonitoredSession"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.examples.brnn_ptb.tfp": {
  "data": {
   "shadows": "tensorflow_probability"
  },
  "type": "import"
 },
 "sonnet.examples.brnn_ptb.train": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "divmod",
    "numpy.exp",
    "ptb_train",
    "ptb_train.num_batches",
    "ptb_train.to_string_tensor",
    "ptb_train.vocab_size",
    "ptb_valid",
    "ptb_valid.num_batches",
    "range",
    "sonnet.examples.brnn_ptb.FLAGS",
    "sonnet.examples.brnn_ptb.GlobalNormClippingOptimizer",
    "sonnet.examples.brnn_ptb.PTB",
    "sonnet.examples.brnn_ptb._run_session_with_no_hooks",
    "sonnet.examples.brnn_ptb.build_logits",
    "sonnet.examples.brnn_ptb.build_loss",
    "sonnet.examples.brnn_ptb.build_modules",
    "sonnet.examples.brnn_ptb.collections",
    "sonnet.examples.brnn_ptb.os",
    "sonnet.python.custom_getters.bayes_by_backprop.get_total_kl_cost",
    "tensorflow.GraphKeys.GLOBAL_STEP",
    "tensorflow.GraphKeys.GLOBAL_VARIABLES",
    "tensorflow.add",
    "tensorflow.argmax",
    "tensorflow.cast",
    "tensorflow.constant",
    "tensorflow.control_dependencies",
    "tensorflow.equal",
    "tensorflow.float32",
    "tensorflow.get_variable",
    "tensorflow.int32",
    "tensorflow.log",
    "tensorflow.logging.info",
    "tensorflow.nn.softmax",
    "tensorflow.reduce_mean",
    "tensorflow.subtract",
    "tensorflow.summary.FileWriterCache.get",
    "tensorflow.summary.Summary",
    "tensorflow.summary.scalar",
    "tensorflow.train.GradientDescentOptimizer",
    "tensorflow.train.MonitoredTrainingSession"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.brnn_ptb_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.flags.FLAGS",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.examples.brnn_ptb_test.BrnnPtbTest": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.brnn_ptb_test.BrnnPtbTest.testScriptRunsWithFakeData": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "sonnet.examples.brnn_ptb.main",
    "sonnet.examples.brnn_ptb_test.FLAGS",
    "sonnet.examples.brnn_ptb_test._make_fake_corpus_with_vocab",
    "sonnet.examples.brnn_ptb_test._make_random_vocab",
    "sonnet.examples.brnn_ptb_test.os",
    "tensorflow.gfile.GFile",
    "tensorflow.test.get_temp_dir"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.brnn_ptb_test.FLAGS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sonnet.examples.brnn_ptb_test._make_fake_corpus_with_vocab": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "range",
    "sonnet.examples.brnn_ptb_test._make_sentence_with_vocab"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.brnn_ptb_test._make_random_vocab": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "range",
    "sonnet.examples.brnn_ptb_test._make_random_word"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.brnn_ptb_test._make_random_word": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "range",
    "sonnet.examples.brnn_ptb_test.random",
    "sonnet.examples.brnn_ptb_test.string"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.brnn_ptb_test._make_sentence_with_vocab": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "len",
    "range",
    "sonnet.examples.brnn_ptb_test.random"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.brnn_ptb_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.examples.brnn_ptb_test.brnn_ptb": {
  "data": {
   "shadows": "sonnet.examples.brnn_ptb"
  },
  "type": "import"
 },
 "sonnet.examples.brnn_ptb_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.examples.brnn_ptb_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sonnet.examples.brnn_ptb_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.examples.brnn_ptb_test.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "sonnet.examples.brnn_ptb_test.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "sonnet.examples.brnn_ptb_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.examples.dataset_mnist_cifar10": {
  "data": {},
  "type": "module"
 },
 "sonnet.examples.dataset_mnist_cifar10.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.examples.dataset_mnist_cifar10.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.examples.dataset_mnist_cifar10.get_data": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "getattr",
    "len",
    "numpy.expand_dims",
    "numpy.float32",
    "numpy.int32",
    "tensorflow.data.Dataset.from_tensor_slices",
    "tensorflow.keras.datasets"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.dataset_mnist_cifar10.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.examples.dataset_mnist_cifar10.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.examples.dataset_mnist_cifar10.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.examples.dataset_nth_farthest": {
  "data": {},
  "type": "module"
 },
 "sonnet.examples.dataset_nth_farthest.NthFarthest": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.dataset_nth_farthest.NthFarthest.__init__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "sonnet.examples.dataset_nth_farthest.NthFarthest._get_batch_data": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.concatenate",
    "sonnet.examples.dataset_nth_farthest.six"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.dataset_nth_farthest.NthFarthest._get_single_set": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.concatenate",
    "numpy.expand_dims",
    "numpy.float32",
    "numpy.identity",
    "numpy.random.permutation",
    "numpy.random.randint",
    "numpy.random.uniform",
    "numpy.zeros",
    "scipy.spatial.distance.pdist",
    "scipy.spatial.distance.squareform"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.dataset_nth_farthest.NthFarthest.get_batch": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "tensorflow.float32",
    "tensorflow.py_func",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.dataset_nth_farthest.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.examples.dataset_nth_farthest.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.examples.dataset_nth_farthest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.examples.dataset_nth_farthest.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.examples.dataset_nth_farthest.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "sonnet.examples.dataset_nth_farthest.spdistance": {
  "data": {
   "shadows": "scipy.spatial.distance"
  },
  "type": "import"
 },
 "sonnet.examples.dataset_nth_farthest.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.examples.dataset_shakespeare": {
  "data": {
   "symbols_in_volume": [
    "sonnet.examples.dataset_shakespeare.collections",
    "tensorflow.flags.FLAGS"
   ]
  },
  "type": "module"
 },
 "sonnet.examples.dataset_shakespeare.FLAGS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sonnet.examples.dataset_shakespeare.SequenceDataOpsNoMask": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sonnet.examples.dataset_shakespeare.TinyShakespeareDataset": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "sonnet.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.dataset_shakespeare.TinyShakespeareDataset.__init__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.examples.dataset_shakespeare.TinyShakespeareDataset",
    "sonnet.examples.dataset_shakespeare.TokenDataSource",
    "super",
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.dataset_shakespeare.TinyShakespeareDataset._build": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "sonnet.examples.dataset_shakespeare.SequenceDataOpsNoMask",
    "tensorflow.FIFOQueue",
    "tensorflow.int32",
    "tensorflow.py_func",
    "tensorflow.train.QueueRunner",
    "tensorflow.train.add_queue_runner"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.dataset_shakespeare.TinyShakespeareDataset._get_batch": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.mod"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.dataset_shakespeare.TinyShakespeareDataset._one_hot": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "tensorflow.one_hot"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.dataset_shakespeare.TinyShakespeareDataset._reset_head_indices": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.dataset_shakespeare.TinyShakespeareDataset.cost": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "tensorflow.nn.softmax_cross_entropy_with_logits",
    "tensorflow.reduce_sum",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.dataset_shakespeare.TinyShakespeareDataset.to_human_readable": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "numpy.argmax",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.dataset_shakespeare.TinyShakespeareDataset.vocab_size": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.dataset_shakespeare.TokenDataSource": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "object",
    "sonnet.examples.dataset_shakespeare.os"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.dataset_shakespeare.TokenDataSource.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int32",
    "reading_function"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.dataset_shakespeare.TokenDataSource.__init__.reading_function": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "list",
    "open",
    "sonnet.examples.dataset_shakespeare.os"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.dataset_shakespeare.TokenDataSource.decode": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "sonnet.examples.dataset_shakespeare.TokenDataSource.tokenize": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "sonnet.examples.dataset_shakespeare.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.examples.dataset_shakespeare.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "sonnet.examples.dataset_shakespeare.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.examples.dataset_shakespeare.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.examples.dataset_shakespeare.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sonnet.examples.dataset_shakespeare.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.examples.dataset_shakespeare.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.examples.dataset_shakespeare.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.examples.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.examples.learn_to_execute": {
  "data": {},
  "type": "module"
 },
 "sonnet.examples.learn_to_execute.AddOp": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.CodeOp"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.AddOp.__init__": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.AddOp",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.AddOp.eval": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.AddOp.get_code": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.BaselineCurriculum": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.LTECurriculum"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.BaselineCurriculum.__init__": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.BaselineCurriculum",
    "sonnet.examples.learn_to_execute.DEFAULT_MIN_CURRICULUM_EVAL_TRIES",
    "super",
    "tensorflow.logging.info"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.BaselineCurriculum.friendly_name": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.CodeOp": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "object",
    "sonnet.examples.learn_to_execute._EOS",
    "sonnet.examples.learn_to_execute._PAD",
    "sonnet.examples.learn_to_execute._SOS",
    "sonnet.examples.learn_to_execute.abc",
    "sonnet.examples.learn_to_execute.six"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.CodeOp.__init__": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.CodeOp.check_elems": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.CodeOp.eval": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.abc"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.CodeOp.get_code": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.abc"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.CodeOp.is_memory": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.CodeOp.num_operands": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.CombineCurriculum": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.LTECurriculum"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.CombineCurriculum.__init__": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.CombineCurriculum",
    "sonnet.examples.learn_to_execute.DEFAULT_MIN_CURRICULUM_EVAL_TRIES",
    "super",
    "tensorflow.logging.info"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.CombineCurriculum.fetch": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.CombineCurriculum.friendly_name": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.CombineCurriculum.update": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.CombineCurriculum",
    "super",
    "tensorflow.logging.info"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.CopyOp": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.CodeOp"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.CopyOp.__init__": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.CopyOp",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.CopyOp.eval": {
  "data": {
   "lineno": 485
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.CopyOp.get_code": {
  "data": {
   "lineno": 496
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.DEFAULT_MIN_CURRICULUM_EVAL_TRIES": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "sonnet.examples.learn_to_execute.DivideOp": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.CodeOp"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.DivideOp.__init__": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.DivideOp",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.DivideOp.eval": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.DivideOp.get_code": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.DoubleCopyOp": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.CodeOp"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.DoubleCopyOp.__init__": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.DoubleCopyOp",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.DoubleCopyOp.eval": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.DoubleCopyOp.get_code": {
  "data": {
   "lineno": 527
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "sonnet.examples.learn_to_execute.ForOp": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.CodeOp"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.ForOp.__init__": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.ForOp",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.ForOp.eval": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "int",
    "list",
    "sonnet.examples.learn_to_execute.random",
    "sonnet.examples.learn_to_execute.six"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.ForOp.get_code": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.IfOp": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.CodeOp"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.IfOp.__init__": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.IfOp",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.IfOp.eval": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "sonnet.examples.learn_to_execute.random"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.IfOp.get_code": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LTECurriculum": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "object",
    "sonnet.examples.learn_to_execute.abc",
    "sonnet.examples.learn_to_execute.six"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.LTECurriculum.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.DEFAULT_MIN_CURRICULUM_EVAL_TRIES"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LTECurriculum._set_loss_window": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "max",
    "min",
    "sonnet.examples.learn_to_execute.collections"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LTECurriculum.current_level": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LTECurriculum.fetch": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LTECurriculum.friendly_name": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LTECurriculum.max_length": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LTECurriculum.max_nesting": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LTECurriculum.update": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "list",
    "numpy.mean",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecute": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.examples.learn_to_execute.BaselineCurriculum",
    "sonnet.examples.learn_to_execute.CombineCurriculum",
    "sonnet.examples.learn_to_execute.DEFAULT_MIN_CURRICULUM_EVAL_TRIES",
    "sonnet.examples.learn_to_execute.LearnToExecuteState",
    "sonnet.examples.learn_to_execute.MixCurriculum",
    "sonnet.examples.learn_to_execute.Mode",
    "sonnet.examples.learn_to_execute.NaiveCurriculum",
    "sonnet.examples.learn_to_execute.TaskType",
    "tensorflow.TensorShape",
    "tensorflow.data.Dataset.from_generator",
    "tensorflow.float32",
    "tensorflow.int64"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "object",
    "sonnet.examples.learn_to_execute.AddOp",
    "sonnet.examples.learn_to_execute.CopyOp",
    "sonnet.examples.learn_to_execute.DoubleCopyOp",
    "sonnet.examples.learn_to_execute.ForOp",
    "sonnet.examples.learn_to_execute.IfOp",
    "sonnet.examples.learn_to_execute.MultiplyOp",
    "sonnet.examples.learn_to_execute.ReverseOp",
    "sonnet.examples.learn_to_execute.SubtractOp",
    "sonnet.examples.learn_to_execute.TaskGroups",
    "sonnet.examples.learn_to_execute.TaskType"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.__init__": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "ValueError",
    "max",
    "sonnet.examples.learn_to_execute.LearnToExecuteState",
    "sonnet.examples.learn_to_execute.TaskGroups",
    "sonnet.examples.learn_to_execute.TokenDataSource",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState._np_one_hot": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.batch_size": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.curriculum": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.evaluate_curriculum": {
  "data": {
   "lineno": 896
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.get_task_ops": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "KeyError",
    "sonnet.examples.learn_to_execute.LearnToExecuteState",
    "sonnet.examples.learn_to_execute.TaskType",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.level": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.make_batch": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.int32",
    "numpy.ndarray",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.num_steps": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.num_steps_out": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.reset_data_source": {
  "data": {
   "lineno": 892
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.seq_sizes_in": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.seq_sizes_out": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.to_human_readable": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "numpy.argmax",
    "sonnet.examples.learn_to_execute.six"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.vocab_size": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.vocabulary": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.MixCurriculum": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.LTECurriculum"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.MixCurriculum.__init__": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.DEFAULT_MIN_CURRICULUM_EVAL_TRIES",
    "sonnet.examples.learn_to_execute.MixCurriculum",
    "super",
    "tensorflow.logging.info"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.MixCurriculum.fetch": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.MixCurriculum.friendly_name": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.Mode": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.MultiplyOp": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.CodeOp"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.MultiplyOp.__init__": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.MultiplyOp",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.MultiplyOp.eval": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.MultiplyOp.get_code": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.NaiveCurriculum": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.LTECurriculum"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.NaiveCurriculum.__init__": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.DEFAULT_MIN_CURRICULUM_EVAL_TRIES",
    "sonnet.examples.learn_to_execute.NaiveCurriculum",
    "super",
    "tensorflow.logging.info"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.NaiveCurriculum.friendly_name": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.NaiveCurriculum.update": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.NaiveCurriculum",
    "super",
    "tensorflow.logging.info"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.ReverseOp": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.CodeOp"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.ReverseOp.__init__": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.ReverseOp",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.ReverseOp.eval": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.ReverseOp.get_code": {
  "data": {
   "lineno": 465
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.SubtractOp": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.CodeOp"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.SubtractOp.__init__": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.SubtractOp",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.SubtractOp.eval": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.SubtractOp.get_code": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.TaskGroups": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.TaskType": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.TokenDataSource": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.TokenDataSource.__init__": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.collections",
    "sonnet.examples.learn_to_execute.get_tokens"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.TokenDataSource.decode_to_list": {
  "data": {
   "lineno": 753
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.TokenDataSource.decode_to_string": {
  "data": {
   "lineno": 749
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.TokenDataSource.generate_flat_data": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.int64",
    "sonnet.examples.learn_to_execute.generate_code",
    "sonnet.examples.learn_to_execute.get_end_token",
    "sonnet.examples.learn_to_execute.get_start_token",
    "sonnet.examples.learn_to_execute.six"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.TokenDataSource.tokenize": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "sonnet.examples.learn_to_execute.get_padding"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.TokenDataSource.vocabulary": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute._EOS": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "sonnet.examples.learn_to_execute._PAD": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "sonnet.examples.learn_to_execute._SOS": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "sonnet.examples.learn_to_execute.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "sonnet.examples.learn_to_execute.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.examples.learn_to_execute.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "sonnet.examples.learn_to_execute.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.examples.learn_to_execute.generate_code": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "fetch",
    "int",
    "sonnet.examples.learn_to_execute.random",
    "sonnet.examples.learn_to_execute.six",
    "str"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.generate_code.fetch": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "fetch_one",
    "sonnet.examples.learn_to_execute.six",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.generate_code.fetch_one": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.random",
    "str"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.get_end_token": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute._EOS"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.get_padding": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute._PAD"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.get_start_token": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute._SOS"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.get_tokens": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "range",
    "set",
    "sonnet.examples.learn_to_execute.CodeOp",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.examples.learn_to_execute.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.examples.learn_to_execute.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "sonnet.examples.learn_to_execute.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "sonnet.examples.learn_to_execute.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.examples.mnist_mlp": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.app.run",
    "tensorflow.flags.DEFINE_float",
    "tensorflow.flags.DEFINE_integer",
    "tensorflow.flags.FLAGS"
   ]
  },
  "type": "module"
 },
 "sonnet.examples.mnist_mlp.FLAGS": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sonnet.examples.mnist_mlp.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.examples.mnist_mlp.dataset_mnist": {
  "data": {
   "shadows": "sonnet.examples.dataset_mnist_cifar10"
  },
  "type": "import"
 },
 "sonnet.examples.mnist_mlp.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.examples.mnist_mlp.main": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "sonnet.examples.mnist_mlp.FLAGS",
    "sonnet.examples.mnist_mlp.train_and_eval"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.mnist_mlp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.examples.mnist_mlp.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.examples.mnist_mlp.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.examples.mnist_mlp.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.examples.mnist_mlp.train_and_eval": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "mlp",
    "numpy.count_nonzero",
    "range",
    "sonnet.BatchFlatten",
    "sonnet.examples.dataset_mnist_cifar10.get_data",
    "sonnet.nets.MLP",
    "tensorflow.logging.info",
    "tensorflow.nn.in_top_k",
    "tensorflow.nn.softmax",
    "tensorflow.nn.sparse_softmax_cross_entropy_with_logits",
    "tensorflow.reduce_mean",
    "tensorflow.train.GradientDescentOptimizer",
    "tensorflow.train.SingularMonitoredSession"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.module_with_build_args": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.app.run"
   ]
  },
  "type": "module"
 },
 "sonnet.examples.module_with_build_args.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.examples.module_with_build_args.custom_build": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "sonnet.BatchFlatten",
    "sonnet.BatchNorm",
    "sonnet.Conv2D",
    "sonnet.Linear",
    "tensorflow.nn.dropout",
    "tensorflow.nn.relu"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.module_with_build_args.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.examples.module_with_build_args.main": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "module_with_build_args",
    "range",
    "sonnet.Module",
    "sonnet.examples.module_with_build_args.custom_build",
    "tensorflow.GraphKeys.UPDATE_OPS",
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.control_dependencies",
    "tensorflow.get_collection",
    "tensorflow.global_variables_initializer",
    "tensorflow.nn.l2_loss",
    "tensorflow.random_uniform",
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.module_with_build_args.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.examples.module_with_build_args.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.examples.module_with_build_args.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.examples.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.examples.ptb_reader": {
  "data": {},
  "type": "module"
 },
 "sonnet.examples.ptb_reader._build_vocab": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "dict",
    "len",
    "list",
    "range",
    "sonnet.examples.ptb_reader._read_words",
    "sonnet.examples.ptb_reader.collections",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.ptb_reader._file_to_word_ids": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "sonnet.examples.ptb_reader._read_words"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.ptb_reader._read_words": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "sonnet.examples.ptb_reader.six",
    "tensorflow.gfile.GFile"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.ptb_reader.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.examples.ptb_reader.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "sonnet.examples.ptb_reader.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.examples.ptb_reader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sonnet.examples.ptb_reader.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.examples.ptb_reader.ptb_producer": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "tensorflow.assert_positive",
    "tensorflow.control_dependencies",
    "tensorflow.convert_to_tensor",
    "tensorflow.identity",
    "tensorflow.int32",
    "tensorflow.name_scope",
    "tensorflow.reshape",
    "tensorflow.size",
    "tensorflow.strided_slice",
    "tensorflow.train.range_input_producer"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.ptb_reader.ptb_raw_data": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "sonnet.examples.ptb_reader._build_vocab",
    "sonnet.examples.ptb_reader._file_to_word_ids",
    "sonnet.examples.ptb_reader.os"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.ptb_reader.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "sonnet.examples.ptb_reader.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_learn_to_execute": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.flags.DEFINE_float",
    "absl.flags.DEFINE_integer",
    "absl.flags.DEFINE_string",
    "absl.flags.FLAGS",
    "tensorflow.app.run"
   ]
  },
  "type": "module"
 },
 "sonnet.examples.rmc_learn_to_execute.FLAGS": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "sonnet.examples.rmc_learn_to_execute.SequenceModel": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "sonnet.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.rmc_learn_to_execute.SequenceModel.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "sonnet.examples.rmc_learn_to_execute.SequenceModel",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.rmc_learn_to_execute.SequenceModel._build": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "sonnet.BatchApply",
    "sonnet.Linear",
    "tensorflow.logging.info",
    "tensorflow.nn.dynamic_rnn",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.rmc_learn_to_execute.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_learn_to_execute.build_and_train": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "loss_fn",
    "sonnet.RelationalMemory",
    "sonnet.examples.learn_to_execute.LearnToExecute",
    "sonnet.examples.learn_to_execute.Mode.TEST",
    "sonnet.examples.rmc_learn_to_execute.FLAGS",
    "sonnet.examples.rmc_learn_to_execute.SequenceModel",
    "sonnet.examples.rmc_learn_to_execute.six",
    "sonnet.examples.rmc_learn_to_execute.time",
    "sonnet.nets.MLP",
    "tensorflow.Graph",
    "tensorflow.logging.info",
    "tensorflow.reduce_max",
    "tensorflow.train.AdamOptimizer",
    "tensorflow.train.SingularMonitoredSession",
    "tensorflow.train.exponential_decay",
    "tensorflow.train.get_or_create_global_step"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.rmc_learn_to_execute.build_and_train.loss_fn": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "model",
    "tensorflow.argmax",
    "tensorflow.boolean_mask",
    "tensorflow.cast",
    "tensorflow.equal",
    "tensorflow.expand_dims",
    "tensorflow.float32",
    "tensorflow.int32",
    "tensorflow.less",
    "tensorflow.nn.softmax_cross_entropy_with_logits",
    "tensorflow.range",
    "tensorflow.reduce_all",
    "tensorflow.reduce_mean",
    "tensorflow.reduce_sum",
    "tensorflow.reshape",
    "tensorflow.squeeze",
    "tensorflow.tile",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.rmc_learn_to_execute.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_learn_to_execute.flags": {
  "data": {
   "shadows": "absl.flags"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_learn_to_execute.learn_to_execute": {
  "data": {
   "shadows": "sonnet.examples.learn_to_execute"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_learn_to_execute.main": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "sonnet.examples.rmc_learn_to_execute.FLAGS",
    "sonnet.examples.rmc_learn_to_execute.build_and_train"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.rmc_learn_to_execute.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_learn_to_execute.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_learn_to_execute.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_learn_to_execute.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_learn_to_execute.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_learn_to_execute_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.examples.rmc_learn_to_execute_test.RMCLearnTest": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.rmc_learn_to_execute_test.RMCLearnTest.setUp": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "sonnet.examples.rmc_learn_to_execute_test.RMCLearnTest.test_build_and_train": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "sonnet.examples.rmc_learn_to_execute.build_and_train"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.rmc_learn_to_execute_test.RMCLearnTest.test_learn_to_execute_datset": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "sonnet.examples.learn_to_execute.LearnToExecute"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.rmc_learn_to_execute_test.RMCLearnTest.test_object_sequence_model": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "model",
    "sonnet.RelationalMemory",
    "sonnet.examples.rmc_learn_to_execute.SequenceModel",
    "sonnet.nets.MLP",
    "tensorflow.ones",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.rmc_learn_to_execute_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_learn_to_execute_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_learn_to_execute_test.learn_to_execute": {
  "data": {
   "shadows": "sonnet.examples.learn_to_execute"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_learn_to_execute_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_learn_to_execute_test.rmc_learn_to_execute": {
  "data": {
   "shadows": "sonnet.examples.rmc_learn_to_execute"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_learn_to_execute_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_learn_to_execute_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_nth_farthest": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.flags.DEFINE_float",
    "absl.flags.DEFINE_integer",
    "absl.flags.DEFINE_string",
    "absl.flags.FLAGS",
    "tensorflow.app.run"
   ]
  },
  "type": "module"
 },
 "sonnet.examples.rmc_nth_farthest.FLAGS": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sonnet.examples.rmc_nth_farthest.SequenceModel": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "sonnet.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.rmc_nth_farthest.SequenceModel.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "sonnet.examples.rmc_nth_farthest.SequenceModel",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.rmc_nth_farthest.SequenceModel._build": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "sonnet.BatchFlatten",
    "sonnet.Linear",
    "tensorflow.nn.dynamic_rnn"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.rmc_nth_farthest.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_nth_farthest.build_and_train": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "compute_accuracy",
    "loss_fn",
    "model",
    "sonnet.RelationalMemory",
    "sonnet.examples.dataset_nth_farthest.NthFarthest",
    "sonnet.examples.rmc_nth_farthest.FLAGS",
    "sonnet.examples.rmc_nth_farthest.SequenceModel",
    "sonnet.examples.rmc_nth_farthest.six",
    "sonnet.examples.rmc_nth_farthest.time",
    "sonnet.nets.MLP",
    "tensorflow.Graph",
    "tensorflow.GraphKeys.GLOBAL_STEP",
    "tensorflow.GraphKeys.GLOBAL_VARIABLES",
    "tensorflow.cast",
    "tensorflow.get_variable",
    "tensorflow.int32",
    "tensorflow.int64",
    "tensorflow.logging.info",
    "tensorflow.reduce_max",
    "tensorflow.train.AdamOptimizer",
    "tensorflow.train.SingularMonitoredSession",
    "tensorflow.train.exponential_decay",
    "tensorflow.zeros_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.rmc_nth_farthest.build_and_train.compute_accuracy": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "tensorflow.argmax",
    "tensorflow.cast",
    "tensorflow.equal",
    "tensorflow.float32",
    "tensorflow.int64",
    "tensorflow.reduce_mean"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.rmc_nth_farthest.build_and_train.loss_fn": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "compute_accuracy",
    "model",
    "tensorflow.cast",
    "tensorflow.int32",
    "tensorflow.nn.sparse_softmax_cross_entropy_with_logits",
    "tensorflow.reduce_mean"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.rmc_nth_farthest.dataset_nth_farthest": {
  "data": {
   "shadows": "sonnet.examples.dataset_nth_farthest"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_nth_farthest.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_nth_farthest.flags": {
  "data": {
   "shadows": "absl.flags"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_nth_farthest.main": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "sonnet.examples.rmc_nth_farthest.FLAGS",
    "sonnet.examples.rmc_nth_farthest.build_and_train"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.rmc_nth_farthest.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_nth_farthest.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_nth_farthest.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_nth_farthest.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_nth_farthest.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_nth_farthest_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.examples.rmc_nth_farthest_test.RMCNthFarthestTest": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.rmc_nth_farthest_test.RMCNthFarthestTest.setUp": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "sonnet.examples.rmc_nth_farthest_test.RMCNthFarthestTest.test_build_and_train": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "len",
    "sonnet.examples.rmc_nth_farthest.build_and_train"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.rmc_nth_farthest_test.RMCNthFarthestTest.test_nth_farthest_datset": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "sonnet.examples.dataset_nth_farthest.NthFarthest"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.rmc_nth_farthest_test.RMCNthFarthestTest.test_object_sequence_model": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "model",
    "sonnet.RelationalMemory",
    "sonnet.examples.rmc_nth_farthest.SequenceModel",
    "sonnet.nets.MLP",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.rmc_nth_farthest_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_nth_farthest_test.dataset_nth_farthest": {
  "data": {
   "shadows": "sonnet.examples.dataset_nth_farthest"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_nth_farthest_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_nth_farthest_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_nth_farthest_test.rmc_nth_farthest": {
  "data": {
   "shadows": "sonnet.examples.rmc_nth_farthest"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_nth_farthest_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.examples.rmc_nth_farthest_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.examples.rnn_shakespeare": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.app.run",
    "tensorflow.flags.DEFINE_float",
    "tensorflow.flags.DEFINE_integer",
    "tensorflow.flags.DEFINE_string",
    "tensorflow.flags.FLAGS"
   ]
  },
  "type": "module"
 },
 "sonnet.examples.rnn_shakespeare.FLAGS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sonnet.examples.rnn_shakespeare.TextModel": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "sonnet.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.rnn_shakespeare.TextModel.__init__": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "range",
    "sonnet.DeepRNN",
    "sonnet.LSTM",
    "sonnet.Linear",
    "sonnet.SkipConnectionCore",
    "sonnet.examples.rnn_shakespeare.TextModel",
    "super",
    "tensorflow.TensorShape"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.rnn_shakespeare.TextModel._build": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "batch_embed_module",
    "batch_output_module",
    "sonnet.BatchApply",
    "tensorflow.contrib.rnn.static_rnn",
    "tensorflow.nn.dynamic_rnn",
    "tensorflow.nn.relu",
    "tensorflow.stack",
    "tensorflow.unstack"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.rnn_shakespeare.TextModel.generate_string": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "range",
    "sonnet.reuse_variables",
    "tensorflow.multinomial",
    "tensorflow.nn.relu",
    "tensorflow.one_hot",
    "tensorflow.squeeze",
    "tensorflow.stack"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.rnn_shakespeare._configure_saver": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "tensorflow.train.CheckpointSaverHook",
    "tensorflow.train.Saver"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.rnn_shakespeare.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.examples.rnn_shakespeare.build_graph": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "TextModel",
    "dataset_test",
    "dataset_test.cost",
    "dataset_train",
    "dataset_train.cost",
    "dataset_valid",
    "dataset_valid.cost",
    "model",
    "model.generate_string",
    "sonnet.examples.dataset_shakespeare.TinyShakespeareDataset",
    "tensorflow.GraphKeys.GLOBAL_STEP",
    "tensorflow.GraphKeys.GLOBAL_VARIABLES",
    "tensorflow.clip_by_global_norm",
    "tensorflow.constant_initializer",
    "tensorflow.float32",
    "tensorflow.get_variable",
    "tensorflow.gradients",
    "tensorflow.int64",
    "tensorflow.train.AdamOptimizer",
    "tensorflow.trainable_variables",
    "tensorflow.zeros_initializer",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.rnn_shakespeare.dataset_shakespeare": {
  "data": {
   "shadows": "sonnet.examples.dataset_shakespeare"
  },
  "type": "import"
 },
 "sonnet.examples.rnn_shakespeare.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.examples.rnn_shakespeare.main": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "sonnet.examples.rnn_shakespeare.FLAGS",
    "sonnet.examples.rnn_shakespeare.train"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.rnn_shakespeare.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.examples.rnn_shakespeare.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.examples.rnn_shakespeare.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.examples.rnn_shakespeare.train": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "dataset_train",
    "dataset_train.to_human_readable",
    "range",
    "sonnet.examples.rnn_shakespeare.FLAGS",
    "sonnet.examples.rnn_shakespeare._configure_saver",
    "sonnet.examples.rnn_shakespeare.build_graph",
    "tensorflow.logging.info",
    "tensorflow.train.SingularMonitoredSession"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.rnn_shakespeare_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.examples.rnn_shakespeare_test.TinyShakespeareTest": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.examples.rnn_shakespeare_test.TinyShakespeareTest.testRun": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "sonnet.examples.rnn_shakespeare.train"
   ]
  },
  "type": "function"
 },
 "sonnet.examples.rnn_shakespeare_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.examples.rnn_shakespeare_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.examples.rnn_shakespeare_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.examples.rnn_shakespeare_test.rnn_shakespeare": {
  "data": {
   "shadows": "sonnet.examples.rnn_shakespeare"
  },
  "type": "import"
 },
 "sonnet.examples.rnn_shakespeare_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.format_variable_map": {
  "data": {
   "shadows": "sonnet.python.modules.util.format_variable_map"
  },
  "type": "import"
 },
 "sonnet.format_variables": {
  "data": {
   "shadows": "sonnet.python.modules.util.format_variables"
  },
  "type": "import"
 },
 "sonnet.get_normalized_variable_map": {
  "data": {
   "shadows": "sonnet.python.modules.util.get_normalized_variable_map"
  },
  "type": "import"
 },
 "sonnet.get_saver": {
  "data": {
   "shadows": "sonnet.python.modules.util.get_saver"
  },
  "type": "import"
 },
 "sonnet.get_variables_in_module": {
  "data": {
   "shadows": "sonnet.python.modules.util.get_variables_in_module"
  },
  "type": "import"
 },
 "sonnet.get_variables_in_scope": {
  "data": {
   "shadows": "sonnet.python.modules.util.get_variables_in_scope"
  },
  "type": "import"
 },
 "sonnet.has_variable_scope": {
  "data": {
   "shadows": "sonnet.python.modules.util.has_variable_scope"
  },
  "type": "import"
 },
 "sonnet.highway_core_with_recurrent_dropout": {
  "data": {
   "shadows": "sonnet.python.modules.gated_rnn.highway_core_with_recurrent_dropout"
  },
  "type": "import"
 },
 "sonnet.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "sonnet.log_variables": {
  "data": {
   "shadows": "sonnet.python.modules.util.log_variables"
  },
  "type": "import"
 },
 "sonnet.lstm_with_recurrent_dropout": {
  "data": {
   "shadows": "sonnet.python.modules.gated_rnn.lstm_with_recurrent_dropout"
  },
  "type": "import"
 },
 "sonnet.lstm_with_zoneout": {
  "data": {
   "shadows": "sonnet.python.modules.gated_rnn.lstm_with_zoneout"
  },
  "type": "import"
 },
 "sonnet.merge_leading_dims": {
  "data": {
   "shadows": "sonnet.python.modules.basic.merge_leading_dims"
  },
  "type": "import"
 },
 "sonnet.nest": {
  "data": {
   "shadows": "sonnet.python.ops.nest"
  },
  "type": "import"
 },
 "sonnet.nets": {
  "data": {
   "shadows": "sonnet.python.modules.nets"
  },
  "type": "import"
 },
 "sonnet.observe_connections": {
  "data": {
   "shadows": "sonnet.python.modules.base.observe_connections"
  },
  "type": "import"
 },
 "sonnet.parse_string_to_constructor": {
  "data": {
   "shadows": "sonnet.python.modules.util.parse_string_to_constructor"
  },
  "type": "import"
 },
 "sonnet.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.protos": {
  "data": {},
  "type": "module"
 },
 "sonnet.protos.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.protos.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.protos.module_pb2": {
  "data": {
   "symbols_in_volume": [
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor.OneofDescriptor",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "sonnet.protos.module_pb2.DESCRIPTOR",
    "sonnet.protos.module_pb2.NestedData",
    "sonnet.protos.module_pb2.SonnetModule",
    "sonnet.protos.module_pb2._NESTEDDATA",
    "sonnet.protos.module_pb2._NESTEDDATA_DICT",
    "sonnet.protos.module_pb2._NESTEDDATA_DICT_MAPENTRY",
    "sonnet.protos.module_pb2._NESTEDDATA_LIST",
    "sonnet.protos.module_pb2._NESTEDDATA_NAMEDTUPLE",
    "sonnet.protos.module_pb2._NESTEDDATA_NAMEDTUPLE_MAPENTRY",
    "sonnet.protos.module_pb2._NESTEDDATA_SPECIALTYPE",
    "sonnet.protos.module_pb2._NESTEDDATA_TUPLE",
    "sonnet.protos.module_pb2._SONNETMODULE",
    "sonnet.protos.module_pb2._SONNETMODULE_CONNECTEDSUBGRAPH",
    "sonnet.protos.module_pb2._b",
    "sonnet.protos.module_pb2._sym_db",
    "sonnet.protos.module_pb2.sys"
   ]
  },
  "type": "module"
 },
 "sonnet.protos.module_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sonnet.protos.module_pb2.NestedData": {
  "data": {
   "lineno": 476
  },
  "type": "constant"
 },
 "sonnet.protos.module_pb2.SonnetModule": {
  "data": {
   "lineno": 539
  },
  "type": "constant"
 },
 "sonnet.protos.module_pb2._NESTEDDATA": {
  "data": {
   "lineno": 267
  },
  "type": "constant"
 },
 "sonnet.protos.module_pb2._NESTEDDATA_DICT": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "sonnet.protos.module_pb2._NESTEDDATA_DICT_MAPENTRY": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "sonnet.protos.module_pb2._NESTEDDATA_LIST": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "sonnet.protos.module_pb2._NESTEDDATA_NAMEDTUPLE": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "sonnet.protos.module_pb2._NESTEDDATA_NAMEDTUPLE_MAPENTRY": {
  "data": {
   "lineno": 156
  },
  "type": "constant"
 },
 "sonnet.protos.module_pb2._NESTEDDATA_SPECIALTYPE": {
  "data": {
   "lineno": 230
  },
  "type": "constant"
 },
 "sonnet.protos.module_pb2._NESTEDDATA_TUPLE": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sonnet.protos.module_pb2._SONNETMODULE": {
  "data": {
   "lineno": 380
  },
  "type": "constant"
 },
 "sonnet.protos.module_pb2._SONNETMODULE_CONNECTEDSUBGRAPH": {
  "data": {
   "lineno": 336
  },
  "type": "constant"
 },
 "sonnet.protos.module_pb2._b": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "sonnet.protos.module_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "sonnet.protos.module_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "sonnet.protos.module_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "sonnet.protos.module_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "sonnet.protos.module_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "sonnet.protos.module_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sonnet.protos.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python": {
  "data": {},
  "type": "module"
 },
 "sonnet.python.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters": {
  "data": {},
  "type": "module"
 },
 "sonnet.python.custom_getters.Context": {
  "data": {
   "shadows": "sonnet.python.custom_getters.context.Context"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.bayes_by_backprop": {
  "data": {
   "shadows": "sonnet.python.custom_getters.bayes_by_backprop"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.EstimatorModes": {
  "data": {
   "lineno": 134
  },
  "type": "class"
 },
 "sonnet.python.custom_getters.bayes_by_backprop._DEFAULT_SCALE_TRANSFORM": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "sonnet.python.custom_getters.bayes_by_backprop._OK_DTYPES_FOR_BBB": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "sonnet.python.custom_getters.bayes_by_backprop._OK_PZATION_TYPE": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "sonnet.python.custom_getters.bayes_by_backprop._VariableMetadata": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "sonnet.python.custom_getters.bayes_by_backprop._WeakRegistry": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "sonnet.python.custom_getters.bayes_by_backprop.weakref"
   ]
  },
  "type": "class"
 },
 "sonnet.python.custom_getters.bayes_by_backprop._WeakRegistry.__getitem__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "KeyError",
    "sonnet.python.custom_getters.bayes_by_backprop.collections",
    "sonnet.python.custom_getters.bayes_by_backprop.weakref"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop._all_var_metadata_registry": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "sonnet.python.custom_getters.bayes_by_backprop._produce_posterior_estimate": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "hasattr",
    "sonnet.python.custom_getters.bayes_by_backprop.EstimatorModes",
    "tensorflow.case",
    "tensorflow.constant",
    "tensorflow.equal"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop._produce_posterior_estimate.default_case_branch_raising_error": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "tensorflow.Assert",
    "tensorflow.constant",
    "tensorflow.control_dependencies"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.adaptive_gaussian_prior_builder": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "getter",
    "sonnet.python.custom_getters.bayes_by_backprop.scale_variable_initializer",
    "tensorflow.nn.softplus",
    "tensorflow_probability.distributions.Normal"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.analytic_kl_builder": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "tensorflow.reduce_sum",
    "tensorflow_probability.distributions.kl_divergence"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.bayes_by_backprop_getter": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "sonnet.python.custom_getters.bayes_by_backprop.EstimatorModes",
    "sonnet.python.custom_getters.bayes_by_backprop.diagonal_gaussian_posterior_builder",
    "sonnet.python.custom_getters.bayes_by_backprop.fixed_gaussian_prior_builder",
    "sonnet.python.custom_getters.bayes_by_backprop.stochastic_kl_builder",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.bayes_by_backprop_getter.custom_getter": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "ValueError",
    "construct_subgraph",
    "get_variable_metadata",
    "getter",
    "len",
    "sonnet.python.custom_getters.bayes_by_backprop._OK_DTYPES_FOR_BBB",
    "sonnet.python.custom_getters.bayes_by_backprop._all_var_metadata_registry",
    "tensorflow.control_dependencies",
    "tensorflow.get_default_graph",
    "tensorflow.get_variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.bayes_by_backprop_getter.custom_getter.construct_subgraph": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "ValueError",
    "_produce_posterior_estimate",
    "getter",
    "isinstance",
    "kl_builder",
    "posterior_builder",
    "prior_builder",
    "sonnet.python.custom_getters.bayes_by_backprop._OK_PZATION_TYPE",
    "sonnet.python.custom_getters.bayes_by_backprop._VariableMetadata",
    "sonnet.python.custom_getters.bayes_by_backprop.collections"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.diagonal_gaussian_posterior_builder": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "getter",
    "tensorflow.nn.softplus",
    "tensorflow_probability.distributions.Normal",
    "tensorflow_probability.distributions.Normal.param_static_shapes"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.fixed_gaussian_prior_builder": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "getter",
    "tensorflow.constant",
    "tensorflow_probability.distributions.Normal"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.get_total_kl_cost": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "get_variable_metadata",
    "tensorflow.add_n",
    "tensorflow.constant",
    "tensorflow.logging.warning"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.get_variable_metadata": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "list",
    "sonnet.python.custom_getters.bayes_by_backprop._all_var_metadata_registry",
    "tensorflow.get_default_graph"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.inverse_softplus": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "sonnet.python.custom_getters.bayes_by_backprop.math"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.scale_variable_initializer": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "sonnet.python.custom_getters.bayes_by_backprop.inverse_softplus",
    "tensorflow.constant_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.stochastic_kl_builder": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "tensorflow.reduce_sum",
    "tensorflow.subtract"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.tfp": {
  "data": {
   "shadows": "tensorflow_probability"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.testFreshNoisePerConnection": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "create_custom_getter",
    "fresh_noise_mod",
    "numpy.linalg.norm",
    "reuse_noise_mod",
    "sonnet.Linear",
    "tensorflow.global_variables_initializer",
    "tensorflow.ones",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.testFreshNoisePerConnection.create_custom_getter": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "sonnet.python.custom_getters.bayes_by_backprop.EstimatorModes.sample",
    "sonnet.python.custom_getters.bayes_by_backprop.bayes_by_backprop_getter",
    "sonnet.python.custom_getters.bayes_by_backprop.diagonal_gaussian_posterior_builder",
    "sonnet.python.custom_getters.bayes_by_backprop.fixed_gaussian_prior_builder",
    "sonnet.python.custom_getters.bayes_by_backprop.stochastic_kl_builder",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.testLastSampleMode": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "len",
    "model",
    "numpy.random.normal",
    "sonnet.Linear",
    "sonnet.python.custom_getters.bayes_by_backprop.EstimatorModes.last_sample",
    "sonnet.python.custom_getters.bayes_by_backprop.EstimatorModes.sample",
    "sonnet.python.custom_getters.bayes_by_backprop.adaptive_gaussian_prior_builder",
    "sonnet.python.custom_getters.bayes_by_backprop.bayes_by_backprop_getter",
    "sonnet.python.custom_getters.bayes_by_backprop.stochastic_kl_builder",
    "sonnet.python.custom_getters.bayes_by_backprop_test.test_diag_gaussian_builder_builder",
    "tensorflow.assign",
    "tensorflow.constant",
    "tensorflow.constant_initializer",
    "tensorflow.float32",
    "tensorflow.get_variable",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder",
    "tensorflow.string",
    "tensorflow.trainable_variables",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.testLastSampleMode.CustomNormal": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "tensorflow_probability.distributions.Normal"
   ]
  },
  "type": "class"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.testLastSampleMode.CustomNormal.__init__": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "super",
    "tensorflow.get_variable",
    "tensorflow.random_normal_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.testLastSampleMode.CustomNormal.last_sample": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.testLastSampleMode.CustomNormal.sample": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "tensorflow.random_normal"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.testRecurrentNetSamplesWeightsOnce": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "NoStateLSTM",
    "numpy.linalg.norm",
    "sonnet.python.custom_getters.bayes_by_backprop.EstimatorModes.sample",
    "sonnet.python.custom_getters.bayes_by_backprop.bayes_by_backprop_getter",
    "sonnet.python.custom_getters.bayes_by_backprop.diagonal_gaussian_posterior_builder",
    "sonnet.python.custom_getters.bayes_by_backprop.fixed_gaussian_prior_builder",
    "sonnet.python.custom_getters.bayes_by_backprop.stochastic_kl_builder",
    "tensorflow.constant",
    "tensorflow.global_variables_initializer",
    "tensorflow.nn.dynamic_rnn",
    "tensorflow.ones",
    "tensorflow.variable_scope",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.testRecurrentNetSamplesWeightsOnce.NoStateLSTM": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "sonnet.LSTM"
   ]
  },
  "type": "class"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.testRecurrentNetSamplesWeightsOnce.NoStateLSTM._build": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.testWeightsResampledWithKeepControlDeps": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "NoStateLSTM",
    "numpy.linalg.norm",
    "sonnet.python.custom_getters.bayes_by_backprop.EstimatorModes.sample",
    "sonnet.python.custom_getters.bayes_by_backprop.bayes_by_backprop_getter",
    "sonnet.python.custom_getters.bayes_by_backprop.diagonal_gaussian_posterior_builder",
    "sonnet.python.custom_getters.bayes_by_backprop.fixed_gaussian_prior_builder",
    "sonnet.python.custom_getters.bayes_by_backprop.stochastic_kl_builder",
    "tensorflow.constant",
    "tensorflow.global_variables_initializer",
    "tensorflow.nn.dynamic_rnn",
    "tensorflow.ones",
    "tensorflow.variable_scope",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.testWeightsResampledWithKeepControlDeps.NoStateLSTM": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "sonnet.LSTM"
   ]
  },
  "type": "class"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.testWeightsResampledWithKeepControlDeps.NoStateLSTM._build": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "NoStateLSTM",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.test_mean_mode_is_deterministic_and_correct": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "len",
    "numpy.zeros",
    "sonnet.python.custom_getters.bayes_by_backprop.EstimatorModes.mean",
    "sonnet.python.custom_getters.bayes_by_backprop.bayes_by_backprop_getter",
    "sonnet.python.custom_getters.bayes_by_backprop.fixed_gaussian_prior_builder",
    "sonnet.python.custom_getters.bayes_by_backprop.get_variable_metadata",
    "sonnet.python.custom_getters.bayes_by_backprop_test.softplus",
    "sonnet.python.custom_getters.bayes_by_backprop_test.test_diag_gaussian_builder_builder",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.get_variable",
    "tensorflow.global_variables_initializer",
    "tensorflow.group",
    "tensorflow.local_variables_initializer",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.test_sample_mode_is_stochastic_and_can_be_switched": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "len",
    "numpy.sqrt",
    "numpy.square",
    "numpy.sum",
    "numpy.zeros",
    "sonnet.python.custom_getters.bayes_by_backprop.EstimatorModes.mean",
    "sonnet.python.custom_getters.bayes_by_backprop.EstimatorModes.sample",
    "sonnet.python.custom_getters.bayes_by_backprop.bayes_by_backprop_getter",
    "sonnet.python.custom_getters.bayes_by_backprop.fixed_gaussian_prior_builder",
    "sonnet.python.custom_getters.bayes_by_backprop.get_variable_metadata",
    "sonnet.python.custom_getters.bayes_by_backprop_test.softplus",
    "sonnet.python.custom_getters.bayes_by_backprop_test.test_diag_gaussian_builder_builder",
    "tensorflow.assign",
    "tensorflow.constant",
    "tensorflow.constant_initializer",
    "tensorflow.float32",
    "tensorflow.get_variable",
    "tensorflow.global_variables_initializer",
    "tensorflow.group",
    "tensorflow.local_variables_initializer",
    "tensorflow.string",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.test_variable_sharing": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "len",
    "mlp",
    "numpy.random.normal",
    "six.moves.xrange",
    "sonnet.nets.MLP",
    "sonnet.python.custom_getters.bayes_by_backprop.EstimatorModes.mean",
    "sonnet.python.custom_getters.bayes_by_backprop.EstimatorModes.sample",
    "sonnet.python.custom_getters.bayes_by_backprop.bayes_by_backprop_getter",
    "sonnet.python.custom_getters.bayes_by_backprop.diagonal_gaussian_posterior_builder",
    "sonnet.python.custom_getters.bayes_by_backprop.fixed_gaussian_prior_builder",
    "sonnet.python.custom_getters.bayes_by_backprop.get_total_kl_cost",
    "sonnet.python.custom_getters.bayes_by_backprop.stochastic_kl_builder",
    "tensorflow.assign",
    "tensorflow.constant",
    "tensorflow.constant_initializer",
    "tensorflow.float32",
    "tensorflow.get_variable",
    "tensorflow.get_variable_scope",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder",
    "tensorflow.reduce_mean",
    "tensorflow.reduce_sum",
    "tensorflow.square",
    "tensorflow.string",
    "tensorflow.train.GradientDescentOptimizer",
    "tensorflow.trainable_variables"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.bbb": {
  "data": {
   "shadows": "sonnet.python.custom_getters.bayes_by_backprop"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.softplus": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.test_diag_gaussian_builder_builder": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "tensorflow_probability.distributions.Normal"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.test_diag_gaussian_builder_builder.diagonal_gaussian_posterior_builder": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "dist_cls",
    "getter",
    "tensorflow.constant_initializer",
    "tensorflow.nn.softplus"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.tfp": {
  "data": {
   "shadows": "tensorflow_probability"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.uniform_builder": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "getter",
    "tensorflow_probability.distributions.Uniform",
    "tensorflow_probability.distributions.Uniform.param_static_shapes"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.context": {
  "data": {},
  "type": "module"
 },
 "sonnet.python.custom_getters.context.Context": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sonnet.python.custom_getters.context.Context.__call__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "getter",
    "tensorflow.logging.info"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.context.Context.__enter__": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.context.Context.__exit__": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.context.Context.__init__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.context.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.context.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.context.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.context.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.context_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.custom_getters.context_test.ContextTest": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.custom_getters.context_test.ContextTest.testContextCallsCustomGetterOnlyWhenInScope": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "lin",
    "lin.w.name",
    "sonnet.Linear",
    "sonnet.custom_getters.Context",
    "sonnet.python.custom_getters.context_test._suffix_getter",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.context_test.ContextTest.testNestedContextCallsCustomGetterOnlyWhenInScope": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "lin",
    "lin.w.name",
    "sonnet.Linear",
    "sonnet.custom_getters.Context",
    "sonnet.python.custom_getters.context_test._suffix_getter",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.context_test.ContextTest.testTwoContextsOperateIndependently": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "lin1",
    "lin1.w.name",
    "lin2",
    "lin2.w.name",
    "sonnet.Linear",
    "sonnet.custom_getters.Context",
    "sonnet.python.custom_getters.context_test._suffix_getter",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.context_test._suffix_getter": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "getter"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.context_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.context_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.context_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.context_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.context_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.non_trainable": {
  "data": {
   "shadows": "sonnet.python.custom_getters.non_trainable.non_trainable"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.non_trainable.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.non_trainable.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.non_trainable.non_trainable": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "getter"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.non_trainable.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.non_trainable_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "sonnet.VALID",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.custom_getters.non_trainable_test.NonTrainableTest": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.custom_getters.non_trainable_test.NonTrainableTest.testComplex": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "len",
    "module",
    "module_instance",
    "sonnet.custom_getters.non_trainable",
    "sonnet.nets.ConvNet2D",
    "sonnet.nets.MLP",
    "sonnet.python.custom_getters.non_trainable_test._CONV_NET_2D_KWARGS",
    "sonnet.python.custom_getters.non_trainable_test._MLP_KWARGS",
    "tensorflow.float32",
    "tensorflow.global_variables",
    "tensorflow.placeholder",
    "tensorflow.trainable_variables",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.non_trainable_test.NonTrainableTest.testNest": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "len",
    "sonnet.custom_getters.non_trainable",
    "sonnet.python.custom_getters.non_trainable_test._identity_getter",
    "tensorflow.float32",
    "tensorflow.get_variable",
    "tensorflow.global_variables",
    "tensorflow.trainable_variables",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.non_trainable_test.NonTrainableTest.testUsage": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "len",
    "lin1",
    "sonnet.Linear",
    "sonnet.custom_getters.non_trainable",
    "tensorflow.float32",
    "tensorflow.global_variables",
    "tensorflow.placeholder",
    "tensorflow.trainable_variables",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.non_trainable_test._CONV_NET_2D_KWARGS": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sonnet.python.custom_getters.non_trainable_test._MLP_KWARGS": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sonnet.python.custom_getters.non_trainable_test._identity_getter": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "getter"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.non_trainable_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.non_trainable_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.non_trainable_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.non_trainable_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.non_trainable_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.non_trainable_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.override_args": {
  "data": {
   "shadows": "sonnet.python.custom_getters.override_args.override_args"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.override_args.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.override_args.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.override_args.override_args": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.override_args.override_args.custom_getter": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "getter"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.override_args.override_default_args": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.override_args.override_default_args.custom_getter": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "getter",
    "sonnet.python.custom_getters.override_args.six"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.override_args.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.override_args.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.override_args_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.custom_getters.override_args_test.OverrideArgsTest": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.custom_getters.override_args_test.OverrideArgsTest.testExplicitArgNotOverridden": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "sonnet.custom_getters.override_default_args",
    "tensorflow.GraphKeys.GLOBAL_VARIABLES",
    "tensorflow.GraphKeys.LOCAL_VARIABLES",
    "tensorflow.get_variable",
    "tensorflow.global_variables",
    "tensorflow.local_variables",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.override_args_test.OverrideArgsTest.testExplicitArgOverridden": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "sonnet.custom_getters.override_args",
    "tensorflow.GraphKeys.GLOBAL_VARIABLES",
    "tensorflow.GraphKeys.LOCAL_VARIABLES",
    "tensorflow.get_variable",
    "tensorflow.global_variables",
    "tensorflow.local_variables",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.override_args_test.OverrideArgsTest.testNestedWithin": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "custom_getter_fn",
    "local_linear",
    "local_linear.w",
    "local_linear.w.op.name",
    "sonnet.Linear",
    "sonnet.custom_getters.override_args",
    "sonnet.custom_getters.override_default_args",
    "sonnet.python.custom_getters.override_args_test._suffix_custom_getter",
    "tensorflow.GraphKeys.LOCAL_VARIABLES",
    "tensorflow.float32",
    "tensorflow.global_variables",
    "tensorflow.local_variables",
    "tensorflow.placeholder",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.override_args_test.OverrideArgsTest.testUsage": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "custom_getter_fn",
    "linear",
    "linear.w",
    "local_linear",
    "local_linear.w",
    "sonnet.Linear",
    "sonnet.custom_getters.override_args",
    "sonnet.custom_getters.override_default_args",
    "tensorflow.GraphKeys.LOCAL_VARIABLES",
    "tensorflow.float32",
    "tensorflow.global_variables",
    "tensorflow.local_variables",
    "tensorflow.placeholder",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.override_args_test.OverrideArgsTest.testWithNested": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "custom_getter_fn",
    "local_linear",
    "local_linear.w",
    "local_linear.w.op.name",
    "sonnet.Linear",
    "sonnet.custom_getters.override_args",
    "sonnet.custom_getters.override_default_args",
    "sonnet.python.custom_getters.override_args_test._suffix_custom_getter",
    "tensorflow.GraphKeys.LOCAL_VARIABLES",
    "tensorflow.float32",
    "tensorflow.global_variables",
    "tensorflow.local_variables",
    "tensorflow.placeholder",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.override_args_test._suffix_custom_getter": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "getter"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.override_args_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.override_args_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.override_args_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.override_args_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.override_args_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.override_args_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.override_default_args": {
  "data": {
   "shadows": "sonnet.python.custom_getters.override_args.override_default_args"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.restore_initializer": {
  "data": {
   "shadows": "sonnet.python.custom_getters.restore_initializer.restore_initializer"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.restore_initializer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.restore_initializer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.restore_initializer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.restore_initializer.restore_initializer": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "tensorflow.GraphKeys.GLOBAL_VARIABLES"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.restore_initializer.restore_initializer._restore_initializer": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "getter",
    "name_fn",
    "sonnet.restore_initializer",
    "tensorflow.GraphKeys.GLOBAL_VARIABLES",
    "tensorflow.GraphKeys.TRAINABLE_VARIABLES",
    "tensorflow.logging.info"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.restore_initializer.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.restore_initializer.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.restore_initializer_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.custom_getters.restore_initializer_test.RestoreInitializerTest": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.custom_getters.restore_initializer_test.RestoreInitializerTest._save_test_checkpoint": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "net",
    "net.b",
    "net.w",
    "sonnet.Linear",
    "sonnet.python.custom_getters.restore_initializer_test.os",
    "tensorflow.Graph",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder",
    "tensorflow.test.get_temp_dir",
    "tensorflow.train.Saver"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.restore_initializer_test.RestoreInitializerTest.testCollections": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "lin1",
    "lin1.w",
    "numpy.allclose",
    "sonnet.Linear",
    "sonnet.custom_getters.restore_initializer",
    "tensorflow.Graph",
    "tensorflow.add_to_collection",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder",
    "tensorflow.train.latest_checkpoint",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.restore_initializer_test.RestoreInitializerTest.testNameFn": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "lin1",
    "lin1.b",
    "lin1.w",
    "sonnet.Linear",
    "sonnet.custom_getters.restore_initializer",
    "tensorflow.Graph",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder",
    "tensorflow.train.latest_checkpoint",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.restore_initializer_test.RestoreInitializerTest.testNameFn.name_fn": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.restore_initializer_test.RestoreInitializerTest.testSimpleUsage": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "lin1",
    "lin1.b",
    "lin1.w",
    "sonnet.Linear",
    "sonnet.custom_getters.restore_initializer",
    "tensorflow.Graph",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder",
    "tensorflow.train.latest_checkpoint",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.restore_initializer_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.restore_initializer_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.restore_initializer_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.restore_initializer_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.restore_initializer_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.restore_initializer_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.restore_initializer_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.stop_gradient": {
  "data": {
   "shadows": "sonnet.python.custom_getters.stop_gradient.stop_gradient"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.stop_gradient.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.stop_gradient.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.stop_gradient.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.stop_gradient.stop_gradient": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "getter",
    "tensorflow.stop_gradient"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.stop_gradient.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.stop_gradient_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "sonnet.VALID",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.custom_getters.stop_gradient_test.StopGradientTest": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.custom_getters.stop_gradient_test.StopGradientTest.testComplex": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv_net",
    "len",
    "module",
    "sonnet.custom_getters.stop_gradient",
    "sonnet.nets.ConvNet2D",
    "sonnet.nets.MLP",
    "sonnet.python.custom_getters.stop_gradient_test._CONV_NET_2D_KWARGS",
    "sonnet.python.custom_getters.stop_gradient_test._MLP_KWARGS",
    "tensorflow.float32",
    "tensorflow.global_variables",
    "tensorflow.gradients",
    "tensorflow.placeholder",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.stop_gradient_test.StopGradientTest.testNest": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "sonnet.custom_getters.stop_gradient",
    "sonnet.python.custom_getters.stop_gradient_test._identity_getter",
    "tensorflow.float32",
    "tensorflow.get_variable",
    "tensorflow.global_variables",
    "tensorflow.gradients",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.stop_gradient_test.StopGradientTest.testUsage": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "len",
    "lin1",
    "sonnet.Linear",
    "sonnet.custom_getters.stop_gradient",
    "tensorflow.float32",
    "tensorflow.gradients",
    "tensorflow.placeholder",
    "tensorflow.trainable_variables",
    "tensorflow.variable_scope",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.stop_gradient_test._CONV_NET_2D_KWARGS": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sonnet.python.custom_getters.stop_gradient_test._MLP_KWARGS": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sonnet.python.custom_getters.stop_gradient_test._identity_getter": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "getter"
   ]
  },
  "type": "function"
 },
 "sonnet.python.custom_getters.stop_gradient_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.stop_gradient_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.stop_gradient_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.stop_gradient_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.stop_gradient_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.python.custom_getters.stop_gradient_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules": {
  "data": {},
  "type": "module"
 },
 "sonnet.python.modules.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.attention": {
  "data": {
   "symbols_in_volume": [
    "sonnet.python.modules.attention.collections"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.attention.AttentionOutput": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sonnet.python.modules.attention.AttentiveRead": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.attention.AttentiveRead.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "sonnet.python.modules.attention.AttentiveRead",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.attention.AttentiveRead._build": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "batch_apply_attention_logit",
    "len",
    "numpy.finfo",
    "numpy.float32",
    "sonnet.python.modules.attention.AttentionOutput",
    "sonnet.python.modules.base.IncompatibleShapeError",
    "sonnet.python.modules.base.UnderspecifiedError",
    "sonnet.python.modules.basic.BatchApply",
    "tensorflow.assert_equal",
    "tensorflow.assert_positive",
    "tensorflow.cast",
    "tensorflow.concat",
    "tensorflow.control_dependencies",
    "tensorflow.expand_dims",
    "tensorflow.float32",
    "tensorflow.int32",
    "tensorflow.logical_not",
    "tensorflow.minimum",
    "tensorflow.nn.softmax",
    "tensorflow.reduce_sum",
    "tensorflow.reshape",
    "tensorflow.shape",
    "tensorflow.squeeze",
    "tensorflow.tile"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.attention.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.attention.base": {
  "data": {
   "shadows": "sonnet.python.modules.base"
  },
  "type": "import"
 },
 "sonnet.python.modules.attention.basic": {
  "data": {
   "shadows": "sonnet.python.modules.basic"
  },
  "type": "import"
 },
 "sonnet.python.modules.attention.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "sonnet.python.modules.attention.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.attention.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.modules.attention.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.attention.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.attention_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.setUp": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "sonnet.AttentiveRead",
    "sonnet.python.modules.attention_test.AttentiveReadTest",
    "sonnet.python.modules.attention_test.ConstantZero",
    "super",
    "tensorflow.bool",
    "tensorflow.cast",
    "tensorflow.convert_to_tensor",
    "tensorflow.float32",
    "tensorflow.range",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.testAttentionLogitsModuleShape": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "attention_mod",
    "sonnet.AttentiveRead",
    "sonnet.IncompatibleShapeError",
    "sonnet.python.modules.attention_test.ConstantZero"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.testAttentionWeightLogitsShape": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.testComputation": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.testInvalidBatchSize": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.zeros",
    "tensorflow.errors.InvalidArgumentError",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.testMemoryMask": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.testMemoryMaskShape": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "sonnet.IncompatibleShapeError",
    "tensorflow.bool",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.testMemoryMaskWithNonuniformLogits": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "attention",
    "numpy.array",
    "numpy.exp",
    "numpy.matmul",
    "numpy.newaxis",
    "numpy.random.randn",
    "numpy.sum",
    "numpy.zeros",
    "sonnet.AttentiveRead",
    "tensorflow.constant",
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.testMemoryShape": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "sonnet.IncompatibleShapeError",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.testNoMemorySlotsLeft": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "tensorflow.bool",
    "tensorflow.convert_to_tensor",
    "tensorflow.errors.InvalidArgumentError"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.testQueryShape": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "sonnet.IncompatibleShapeError",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.testShape": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.testUndefinedWordSizes": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "sonnet.UnderspecifiedError",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.testWeightsIsSoftmaxOfLogits": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "tensorflow.nn.softmax"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.testWorksWithCommonModules": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "attention_mod",
    "module_cstr",
    "sonnet.AttentiveRead",
    "sonnet.Linear",
    "sonnet.nets.MLP",
    "tensorflow.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.attention_test.ConstantZero": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "sonnet.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.attention_test.ConstantZero.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "sonnet.python.modules.attention_test.ConstantZero",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.attention_test.ConstantZero._build": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "tensorflow.shape",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.attention_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.attention_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.attention_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.modules.attention_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "sonnet.python.modules.attention_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.attention_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.python.modules.attention_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.base": {
  "data": {
   "symbols_in_volume": [
    "sonnet.python.modules.base._get_or_create_stack",
    "sonnet.python.modules.base.threading"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.base.AbstractModule": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "object",
    "sonnet.python.modules.base.abc",
    "sonnet.python.modules.base.six"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base.AbstractModule.__call__": {
  "data": {
   "lineno": 395
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.__getstate__": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "sonnet.python.modules.base_errors.NotSupportedError"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.__init__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "callable",
    "getattr",
    "isinstance",
    "len",
    "set",
    "sonnet.python.modules.base.collections",
    "sonnet.python.modules.base.six",
    "sonnet.python.modules.base.types",
    "sonnet.python.modules.util.custom_getter_router",
    "sonnet.python.modules.util.to_snake_case",
    "tensorflow.make_template",
    "type"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.__init__.__call__": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.__init__.copy_signature": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "method",
    "sonnet.python.modules.base.wrapt"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule._add_connected_subgraph": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "observer",
    "sonnet.python.modules.base.get_connection_stack",
    "sonnet.python.modules.base.inspect",
    "sonnet.python.modules.base_info.ConnectedSubGraph"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule._build": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "sonnet.python.modules.base.abc"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule._build_wrapper": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "len",
    "tensorflow.name_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule._call": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "tensorflow.executing_eagerly"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule._capture_variables": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "getattr",
    "sonnet.python.modules.base.contextlib",
    "sonnet.python.modules.base.contextlib2",
    "sonnet.python.modules.base.get_module_stack",
    "sonnet.python.modules.util.notify_about_new_variables"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule._check_init_called": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "AttributeError",
    "sonnet.python.modules.base_errors.NotInitializedError"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule._check_same_graph": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "sonnet.python.modules.base_errors.DifferentGraphError",
    "tensorflow.executing_eagerly",
    "tensorflow.get_default_graph",
    "tensorflow.init_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule._ensure_is_connected": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "sonnet.python.modules.base_errors.NotConnectedError"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule._enter_variable_scope": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "sonnet.python.modules.base.contextlib",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule._maybe_log": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "tensorflow.logging.info"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule._set_module_info": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "sonnet.python.modules.base_info.ModuleInfo",
    "sonnet.python.modules.base_info.SONNET_COLLECTION_NAME"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.connected_subgraphs": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "property",
    "sonnet.python.modules.base_errors.NotSupportedError",
    "tensorflow.executing_eagerly",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.defun": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "tensorflow.contrib.eager.defun"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.defun_wrapped": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.get_all_variables": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "set",
    "sonnet.python.modules.util.sort_by_name",
    "tensorflow.GraphKeys.TRAINABLE_VARIABLES",
    "tensorflow.get_collection"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.get_possible_initializer_keys": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "classmethod",
    "getattr",
    "set"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.get_variables": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "sonnet.python.modules.base_errors.NotSupportedError",
    "sonnet.python.modules.util.get_variables_in_scope",
    "tensorflow.GraphKeys.TRAINABLE_VARIABLES",
    "tensorflow.executing_eagerly"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.graph": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.is_connected": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.last_connected_subgraph": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "property",
    "sonnet.python.modules.base_errors.NotSupportedError",
    "tensorflow.executing_eagerly"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.module_name": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.name_scopes": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "property",
    "sonnet.python.modules.base_errors.NotSupportedError",
    "tensorflow.executing_eagerly",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.non_trainable_variables": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "property",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.scope_name": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.trainable_variables": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "property",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.variable_scope": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.variables": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "property",
    "sonnet.python.modules.util.sort_by_name"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.DifferentGraphError": {
  "data": {
   "shadows": "sonnet.python.modules.base_errors.DifferentGraphError"
  },
  "type": "import"
 },
 "sonnet.python.modules.base.Error": {
  "data": {
   "shadows": "sonnet.python.modules.base_errors.Error"
  },
  "type": "import"
 },
 "sonnet.python.modules.base.IncompatibleShapeError": {
  "data": {
   "shadows": "sonnet.python.modules.base_errors.IncompatibleShapeError"
  },
  "type": "import"
 },
 "sonnet.python.modules.base.Module": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base.Module.__init__": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "sonnet.python.modules.base.Module",
    "sonnet.python.modules.util.name_for_callable",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.Module._build": {
  "data": {
   "lineno": 829
  },
  "type": "function"
 },
 "sonnet.python.modules.base.ModuleInfoError": {
  "data": {
   "shadows": "sonnet.python.modules.base_errors.ModuleInfoError"
  },
  "type": "import"
 },
 "sonnet.python.modules.base.NotConnectedError": {
  "data": {
   "shadows": "sonnet.python.modules.base_errors.NotConnectedError"
  },
  "type": "import"
 },
 "sonnet.python.modules.base.NotInitializedError": {
  "data": {
   "shadows": "sonnet.python.modules.base_errors.NotInitializedError"
  },
  "type": "import"
 },
 "sonnet.python.modules.base.NotSupportedError": {
  "data": {
   "shadows": "sonnet.python.modules.base_errors.NotSupportedError"
  },
  "type": "import"
 },
 "sonnet.python.modules.base.ParentNotBuiltError": {
  "data": {
   "shadows": "sonnet.python.modules.base_errors.ParentNotBuiltError"
  },
  "type": "import"
 },
 "sonnet.python.modules.base.Transposable": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "object",
    "sonnet.python.modules.base.abc",
    "sonnet.python.modules.base.six"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base.Transposable.input_shape": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "sonnet.python.modules.base.abc"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.Transposable.transpose": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "sonnet.python.modules.base.abc"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.UnderspecifiedError": {
  "data": {
   "shadows": "sonnet.python.modules.base_errors.UnderspecifiedError"
  },
  "type": "import"
 },
 "sonnet.python.modules.base._LOCAL_STACKS": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "sonnet.python.modules.base._get_or_create_stack": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "getattr",
    "setattr",
    "sonnet.python.modules.base._LOCAL_STACKS"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "sonnet.python.modules.base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.base.base_info": {
  "data": {
   "shadows": "sonnet.python.modules.base_info"
  },
  "type": "import"
 },
 "sonnet.python.modules.base.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "sonnet.python.modules.base.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "sonnet.python.modules.base.contextlib2": {
  "data": {
   "shadows": "contextlib2"
  },
  "type": "import"
 },
 "sonnet.python.modules.base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.base.get_connection_stack": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "sonnet.python.modules.base.get_module_stack": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "sonnet.python.modules.base.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "sonnet.python.modules.base.observe_connections": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "sonnet.python.modules.base.contextlib",
    "sonnet.python.modules.base.get_connection_stack"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.base.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "sonnet.python.modules.base.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.base.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "sonnet.python.modules.base.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "sonnet.python.modules.base.util": {
  "data": {
   "shadows": "sonnet.python.modules.util"
  },
  "type": "import"
 },
 "sonnet.python.modules.base.wrapt": {
  "data": {
   "shadows": "wrapt"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_errors": {
  "data": {},
  "type": "module"
 },
 "sonnet.python.modules.base_errors.DifferentGraphError": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "sonnet.python.modules.base_errors.Error"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base_errors.Error": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base_errors.IncompatibleShapeError": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "sonnet.python.modules.base_errors.Error"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base_errors.ModuleInfoError": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "sonnet.python.modules.base_errors.Error"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base_errors.NotConnectedError": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "sonnet.python.modules.base_errors.Error"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base_errors.NotInitializedError": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "sonnet.python.modules.base_errors.Error"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base_errors.NotSupportedError": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "sonnet.python.modules.base_errors.Error"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base_errors.ParentNotBuiltError": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "sonnet.python.modules.base_errors.Error"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base_errors.UnderspecifiedError": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "sonnet.python.modules.base_errors.Error"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base_errors.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_errors.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_errors.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_info": {
  "data": {
   "symbols_in_volume": [
    "isinstance",
    "sonnet.protos.module_pb2.SonnetModule",
    "sonnet.python.modules.base_info.SONNET_COLLECTION_NAME",
    "sonnet.python.modules.base_info._SPARSE_TENSOR_NAME",
    "sonnet.python.modules.base_info._SpecialTypeInfo",
    "sonnet.python.modules.base_info._TO_PROTO_SPECIAL_TYPES",
    "sonnet.python.modules.base_info._from_proto_sparse_tensor",
    "sonnet.python.modules.base_info._module_info_from_proto_safe",
    "sonnet.python.modules.base_info._module_info_to_proto",
    "sonnet.python.modules.base_info._to_proto_sparse_tensor",
    "sonnet.python.modules.base_info.collections",
    "tensorflow.SparseTensor",
    "tensorflow.logging",
    "tensorflow.python.framework.ops.register_proto_function"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.base_info.ConnectedSubGraph": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sonnet.python.modules.base_info.ModuleInfo": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sonnet.python.modules.base_info.SONNET_COLLECTION_NAME": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sonnet.python.modules.base_info._MissingTensor": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "sonnet.python.modules.base_info._SPARSE_TENSOR_FIELD": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sonnet.python.modules.base_info._SPARSE_TENSOR_NAME": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "sonnet.python.modules.base_info._SpecialTypeInfo": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "sonnet.python.modules.base_info._TO_PROTO_SPECIAL_TYPES": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "sonnet.python.modules.base_info._UnserializableObject": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base_info._from_proto_sparse_tensor": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "process_leafs",
    "sonnet.python.modules.base_errors.ModuleInfoError",
    "sonnet.python.modules.base_info._SPARSE_TENSOR_NAME",
    "tensorflow.SparseTensor"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info._graph_element_to_path": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.Tensor"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info._is_iterable": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info._is_namedtuple": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info._module_info_from_proto": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "prepend_name_scope",
    "process_leafs",
    "sonnet.python.modules.base_info.ConnectedSubGraph",
    "sonnet.python.modules.base_info.ModuleInfo",
    "sonnet.python.modules.base_info._nested_from_proto",
    "tensorflow.get_default_graph"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info._module_info_from_proto.prepend_name_scope": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.prepend_name_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info._module_info_from_proto.process_leafs": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "prepend_name_scope",
    "sonnet.python.modules.base_info._path_to_graph_element"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info._module_info_from_proto_safe": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "Exception",
    "sonnet.python.modules.base_info._module_info_from_proto",
    "sonnet.python.modules.base_info.logging",
    "str"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info._module_info_to_proto": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "process_leafs",
    "set",
    "sonnet.protos.module_pb2.SonnetModule",
    "sonnet.python.modules.base_info._nested_to_proto",
    "strip_name_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info._module_info_to_proto.process_leafs": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "sonnet.python.modules.base_info._graph_element_to_path",
    "strip_name_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info._module_info_to_proto.strip_name_scope": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.strip_name_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info._nested_from_proto": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "NamedTuple",
    "isinstance",
    "process_leafs",
    "sonnet.protos.module_pb2.NestedData",
    "sonnet.python.modules.base_errors.ModuleInfoError",
    "sonnet.python.modules.base_info._TO_PROTO_SPECIAL_TYPES",
    "sonnet.python.modules.base_info._UnserializableObject",
    "sonnet.python.modules.base_info.collections",
    "sonnet.python.modules.base_info.six",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info._nested_to_proto": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "id",
    "isinstance",
    "process_leafs",
    "sonnet.protos.module_pb2.NestedData",
    "sonnet.python.modules.base_errors.ModuleInfoError",
    "sonnet.python.modules.base_info._TO_PROTO_SPECIAL_TYPES",
    "sonnet.python.modules.base_info._is_iterable",
    "sonnet.python.modules.base_info._is_namedtuple",
    "sonnet.python.modules.base_info.six",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info._path_to_graph_element": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "KeyError",
    "sonnet.python.modules.base_info._MissingTensor"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info._to_proto_sparse_tensor": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "getattr",
    "id",
    "process_leafs",
    "sonnet.python.modules.base_info._SPARSE_TENSOR_FIELD",
    "sonnet.python.modules.base_info._SPARSE_TENSOR_NAME"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_info.base_errors": {
  "data": {
   "shadows": "sonnet.python.modules.base_errors"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_info.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_info.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_info.logging": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sonnet.python.modules.base_info.module_pb2": {
  "data": {
   "shadows": "sonnet.protos.module_pb2"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_info.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_info.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_info.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_info.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_info_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "sonnet.python.modules.base_info_test.collections",
    "tensorflow.contrib.framework.nest",
    "tensorflow.logging",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.base_info_test.DumbModule": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base_info_test.DumbModule.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule.__init__"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.DumbModule._build": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "isinstance",
    "sonnet.python.modules.base_info_test.NotATensor",
    "sonnet.python.modules.base_info_test.nest",
    "tensorflow.SparseTensor",
    "tensorflow.identity"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.DumbNamedTuple": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "sonnet.python.modules.base_info_test.LINEAR_MODULE": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testIsIterable": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "set",
    "sonnet.python.modules.base_info._is_iterable",
    "sonnet.python.modules.base_info_test.DumbNamedTuple",
    "sonnet.python.modules.base_info_test.NotATensor",
    "sonnet.python.modules.base_info_test.collections",
    "tensorflow.SparseTensor",
    "tensorflow.float32",
    "tensorflow.int64",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testIsIterable.generator": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "xrange"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testIsNamedTuple": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "sonnet.python.modules.base_info._is_namedtuple",
    "sonnet.python.modules.base_info_test.DumbNamedTuple",
    "sonnet.python.modules.base_info_test.NotATensor"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_dict": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "check",
    "dumb",
    "sonnet.python.modules.base_info_test.DumbModule",
    "sonnet.python.modules.base_info_test._copy_default_graph",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_dict.check": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "dict",
    "sonnet.python.modules.base_info.SONNET_COLLECTION_NAME",
    "tensorflow.get_default_graph"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_multiple_modules": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "check",
    "dumb",
    "dumb_1",
    "linear",
    "sonnet.python.modules.base_info_test.DumbModule",
    "sonnet.python.modules.base_info_test._copy_default_graph",
    "sonnet.python.modules.basic.Linear",
    "tensorflow.float32",
    "tensorflow.name_scope",
    "tensorflow.placeholder",
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_multiple_modules.check": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "len",
    "sonnet.python.modules.base_info.SONNET_COLLECTION_NAME",
    "sonnet.python.modules.base_info_test.LINEAR_MODULE",
    "sonnet.python.modules.base_info_test.THIS_MODULE",
    "tensorflow.get_default_graph"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_multiple_subgraph": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "check",
    "dumb",
    "sonnet.python.modules.base_info_test.DumbModule",
    "sonnet.python.modules.base_info_test._copy_default_graph",
    "tensorflow.float32",
    "tensorflow.name_scope",
    "tensorflow.placeholder",
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_multiple_subgraph.check": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "len",
    "sonnet.python.modules.base_info.SONNET_COLLECTION_NAME",
    "tensorflow.get_default_graph"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_namedtuple": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "check",
    "dumb",
    "sonnet.python.modules.base_info_test.DumbModule",
    "sonnet.python.modules.base_info_test.DumbNamedTuple",
    "sonnet.python.modules.base_info_test._copy_default_graph",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_namedtuple.check": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "sonnet.python.modules.base_info.SONNET_COLLECTION_NAME",
    "sonnet.python.modules.base_info._is_namedtuple",
    "tensorflow.get_default_graph"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_not_a_tensor": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "check",
    "dumb",
    "sonnet.python.modules.base_info._UnserializableObject",
    "sonnet.python.modules.base_info_test.DumbModule",
    "sonnet.python.modules.base_info_test.NotATensor",
    "sonnet.python.modules.base_info_test._copy_default_graph",
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_not_a_tensor.check": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "sonnet.python.modules.base_info.SONNET_COLLECTION_NAME",
    "tensorflow.get_default_graph"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_recursion": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "check",
    "dict",
    "dumb",
    "sonnet.python.modules.base_info._UnserializableObject",
    "sonnet.python.modules.base_info_test.DumbModule",
    "sonnet.python.modules.base_info_test._copy_default_graph",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_recursion.check": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "sonnet.python.modules.base_info.SONNET_COLLECTION_NAME",
    "tensorflow.Tensor",
    "tensorflow.get_default_graph"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_sparsetensor": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "check",
    "dumb",
    "sonnet.python.modules.base_info_test.DumbModule",
    "sonnet.python.modules.base_info_test._copy_default_graph",
    "tensorflow.SparseTensor",
    "tensorflow.float32",
    "tensorflow.int64",
    "tensorflow.placeholder",
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_sparsetensor.check": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "sonnet.python.modules.base_info.SONNET_COLLECTION_NAME",
    "tensorflow.SparseTensor",
    "tensorflow.get_default_graph"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_tensor": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "check",
    "dumb",
    "sonnet.python.modules.base_info_test.DumbModule",
    "sonnet.python.modules.base_info_test._copy_default_graph",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_tensor.check": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "sonnet.python.modules.base_info.SONNET_COLLECTION_NAME",
    "tensorflow.Tensor",
    "tensorflow.get_default_graph"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_tuple": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "check",
    "dumb",
    "sonnet.python.modules.base_info_test.DumbModule",
    "sonnet.python.modules.base_info_test._copy_default_graph",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_tuple.check": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "sonnet.python.modules.base_info.SONNET_COLLECTION_NAME",
    "tensorflow.get_default_graph",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.NotATensor": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base_info_test.THIS_MODULE": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sonnet.python.modules.base_info_test._copy_default_graph": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "tensorflow.reset_default_graph",
    "tensorflow.train.export_meta_graph",
    "tensorflow.train.import_meta_graph"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_info_test.base": {
  "data": {
   "shadows": "sonnet.python.modules.base"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_info_test.base_info": {
  "data": {
   "shadows": "sonnet.python.modules.base_info"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_info_test.basic": {
  "data": {
   "shadows": "sonnet.python.modules.basic"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_info_test.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_info_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_info_test.logging": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sonnet.python.modules.base_info_test.nest": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sonnet.python.modules.base_info_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_info_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.contrib.eager",
    "tensorflow.logging",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testCallSignatureAndDocstring": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "sonnet.python.modules.base_test.SimpleModule",
    "sonnet.python.modules.base_test.inspect"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testCustomGetter": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "module",
    "sonnet.python.modules.base_test.SimpleModule",
    "tensorflow.float32",
    "tensorflow.ones",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testCustomGetter.custom_getter": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "getter"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testCustomGetterNested": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "module",
    "sonnet.python.modules.base_test.ComplexModule",
    "tensorflow.float32",
    "tensorflow.ones",
    "tensorflow.trainable_variables",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testCustomGetterNested.custom_getter": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "getter"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testGetAllLocalVariables": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "get_non_trainable_variables",
    "local_module",
    "local_module.get_all_variables",
    "sonnet.python.modules.base_test.ComplexModule",
    "sonnet.python.modules.base_test.ModuleWithSubmodules",
    "sonnet.python.modules.base_test.SimpleModule",
    "sorted",
    "str",
    "tensorflow.GraphKeys.LOCAL_VARIABLES",
    "tensorflow.all_variables",
    "tensorflow.float32",
    "tensorflow.local_variables",
    "tensorflow.ones",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testGetAllLocalVariables.local_custom_getter": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "getter",
    "tensorflow.GraphKeys.LOCAL_VARIABLES"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testGetAllTrainableVariables": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "all_trainable_variables",
    "module",
    "module.get_all_variables",
    "sonnet.python.modules.base.NotConnectedError",
    "sonnet.python.modules.base_test.ComplexModule",
    "sonnet.python.modules.base_test.ModuleWithSubmodules",
    "sonnet.python.modules.base_test.SimpleModule",
    "sorted",
    "str",
    "tensorflow.GraphKeys.LOCAL_VARIABLES",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testGetAllVariablesWithConditionalConstruction": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "module_a",
    "module_a.get_all_variables",
    "module_b",
    "module_b.get_all_variables",
    "sonnet.python.modules.base.NotConnectedError",
    "sonnet.python.modules.base_test.SimpleModule",
    "sorted",
    "str",
    "tensorflow.cond",
    "tensorflow.constant",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testInitInvalidTypeArgs": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "TypeError",
    "sonnet.python.modules.base_test.NoInitIdentityModule"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testInitNoArgs": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "sonnet.python.modules.base_test.NoInitIdentityModule"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testInitNoNamedArgs": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.modules.base_test.NoInitIdentityModule"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testInitNoSuper": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "module",
    "sonnet.python.modules.base.NotInitializedError",
    "sonnet.python.modules.base_test.NoSuperInitIdentityModule",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testInitializerKeys": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "TypeError",
    "set",
    "sonnet.python.modules.base_test.ModuleWithClassKeys",
    "sonnet.python.modules.base_test.ModuleWithCustomInitializerKeys",
    "sonnet.python.modules.base_test.ModuleWithNoInitializerKeys",
    "sonnet.python.modules.base_test.six"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testMultipleGraphs": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "id_mod",
    "id_mod._graph",
    "sonnet.python.modules.base.DifferentGraphError",
    "sonnet.python.modules.base_test.IdentityModule",
    "tensorflow.Graph",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testNameScopeRecording": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "id_mod",
    "id_mod.name_scopes",
    "sonnet.python.modules.base_test.IdentityModule",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.name_scope",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testNameScopeRecordingNotSupportedEager": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "id_mod",
    "id_mod.name_scopes",
    "sonnet.python.modules.base.NotSupportedError",
    "sonnet.python.modules.base_test.IdentityModule",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testPicklingNotSupported": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "module",
    "sonnet.python.modules.base.NotSupportedError",
    "sonnet.python.modules.base_test.IdentityModule",
    "sonnet.python.modules.base_test.pickle"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testSubgraphsNotRecordedEager": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "id_mod",
    "id_mod.connected_subgraphs",
    "id_mod.last_connected_subgraph",
    "sonnet.python.modules.base.NotSupportedError",
    "sonnet.python.modules.base_test.IdentityModule",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.name_scope",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testSubgraphsRecording": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "id_mod",
    "id_mod.connected_subgraphs",
    "id_mod.last_connected_subgraph",
    "id_mod.last_connected_subgraph.name_scope",
    "sonnet.python.modules.base.NotConnectedError",
    "sonnet.python.modules.base_test.IdentityModule",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.name_scope",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testVariablesFromNestedModule": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "len",
    "outer",
    "outer._b",
    "sonnet.python.modules.base_test.ComplexModule",
    "tensorflow.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.ComplexModule": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base_test.ComplexModule.__init__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "sonnet.python.modules.base_test.ComplexModule",
    "sonnet.python.modules.base_test.SimpleModule",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.ComplexModule._build": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "sonnet.python.modules.base_test.SimpleModule"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.ConnectionObserverTest": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base_test.ConnectionObserverTest._connection_observer": {
  "data": {
   "lineno": 649
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.ConnectionObserverTest.setUp": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "tensorflow.float32",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.ConnectionObserverTest.testObservesComplexModule": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "complex_module",
    "len",
    "sonnet.python.modules.base.observe_connections",
    "sonnet.python.modules.base_test.ComplexModule",
    "sonnet.python.modules.base_test.SimpleModule"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.ConnectionObserverTest.testObservesSimpleModule": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "len",
    "simple_module",
    "sonnet.python.modules.base.observe_connections",
    "sonnet.python.modules.base_test.SimpleModule"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.ConnectionObserverTest.testObservesWrappedFunction": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "activation_module",
    "len",
    "sonnet.python.modules.base.Module",
    "sonnet.python.modules.base.observe_connections",
    "tensorflow.nn.relu"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.DefunTest": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base_test.DefunTest.testCallWithDefun": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "module",
    "module.defun",
    "sonnet.python.modules.base_test.MatMulModule",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.DefunTest.testCallWithDefunTracingTwice": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "module",
    "module.call_count",
    "module.defun",
    "range",
    "sonnet.python.modules.base_test.MatMulModule",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.DefunTest.testDefunWrappedProperty": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "module",
    "module.defun",
    "module.defun_wrapped",
    "range",
    "sonnet.python.modules.base_test.MatMulModule"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.DefunTest.testGetVariablesDisabledWhenUsingDefun": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "module",
    "module.defun",
    "module.get_variables",
    "module.w",
    "sonnet.python.modules.base_errors.NotSupportedError",
    "sonnet.python.modules.base_test.MatMulModule",
    "tensorflow.executing_eagerly",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.IdentityModule": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base_test.IdentityModule._build": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "tensorflow.identity"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.MatMulModule": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base_test.MatMulModule._build": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "tensorflow.get_variable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.ModuleTest": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base_test.ModuleTest.testCustomGetter": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "create_module",
    "module",
    "sonnet.python.modules.base.Module",
    "sonnet.python.modules.base_test.functools",
    "tensorflow.float32",
    "tensorflow.ones",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.ModuleTest.testCustomGetter.custom_getter": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "getter"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.ModuleTest.testCustomGetter.simple_module_build": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "tensorflow.float32",
    "tensorflow.get_variable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.ModuleTest.testFunctionType": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "TypeError",
    "sonnet.python.modules.base.Module",
    "str"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.ModuleTest.testGetVariablesDifferentGraphScope": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "len",
    "numpy.random.rand",
    "simple_module",
    "simple_module.get_variables",
    "sonnet.python.modules.base_test.SimpleModule",
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.ModuleTest.testGraphProperty": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "id_a",
    "id_a.graph",
    "id_b",
    "id_b.graph",
    "id_c",
    "id_c.graph",
    "numpy.eye",
    "numpy.ones",
    "numpy.zeros",
    "sonnet.python.modules.base_test.IdentityModule",
    "tensorflow.Graph",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.ModuleTest.testSharing": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "model",
    "numpy.random.rand",
    "sonnet.python.modules.base.Module",
    "sonnet.python.modules.base_test._make_model_with_params",
    "sonnet.python.modules.base_test.functools",
    "tensorflow.constant",
    "tensorflow.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.ModuleWithClassKeys": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base_test.ModuleWithCustomInitializerKeys": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base_test.ModuleWithCustomInitializerKeys.get_possible_initializer_keys": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.ModuleWithNoInitializerKeys": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base_test.ModuleWithSubmodules": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base_test.ModuleWithSubmodules.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "sonnet.python.modules.base_test.ModuleWithSubmodules",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.ModuleWithSubmodules._build": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "c",
    "d",
    "sonnet.python.modules.base_test.ComplexModule",
    "sonnet.python.modules.base_test.SimpleModule"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.NoInitIdentityModule": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base_test.NoInitIdentityModule._build": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "tensorflow.identity"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.NoSuperInitIdentityModule": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base_test.NoSuperInitIdentityModule.__init__": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.NoSuperInitIdentityModule._build": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "tensorflow.identity"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.NotSupportedError": {
  "data": {
   "shadows": "sonnet.python.modules.base_errors.NotSupportedError"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_test.SimpleModule": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.base_test.SimpleModule.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "sonnet.python.modules.base_test.SimpleModule",
    "super",
    "tensorflow.float32",
    "tensorflow.get_variable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.SimpleModule._build": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "tensorflow.float32",
    "tensorflow.get_variable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test._make_model_with_params": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "tensorflow.get_variable",
    "tensorflow.matmul"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.base_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_test.base": {
  "data": {
   "shadows": "sonnet.python.modules.base"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_test.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_test.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_test.logging": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sonnet.python.modules.base_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_test.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_test.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.base_test.tfe": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sonnet.python.modules.basic": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.framework.nest"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.basic.AddBias": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule",
    "sonnet.python.modules.base.Transposable"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic.AddBias.__init__": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "sonnet.python.modules.basic.AddBias",
    "sonnet.python.modules.util.check_initializers",
    "sonnet.python.modules.util.check_partitioners",
    "sonnet.python.modules.util.check_regularizers",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.AddBias._build": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "callable",
    "len",
    "sonnet.python.modules.base.IncompatibleShapeError",
    "sonnet.python.modules.base.ParentNotBuiltError",
    "sonnet.python.modules.basic.calculate_bias_shape",
    "sonnet.python.modules.basic.create_bias_initializer",
    "tensorflow.get_variable",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.AddBias.b": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.AddBias.input_shape": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.AddBias.transpose": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "sonnet.python.modules.basic.AddBias"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.BatchApply": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic.BatchApply.__init__": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "sonnet.python.modules.basic.BatchApply",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.BatchApply._build": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "_split_to_original_leading_dims",
    "sonnet.python.modules.basic.merge_leading_dims",
    "sonnet.python.modules.basic.nest",
    "tensorflow.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.BatchApply._build._split_to_original_leading_dims": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "sonnet.python.modules.basic.split_leading_dim"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.BatchFlatten": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": [
    "sonnet.python.modules.basic.BatchReshape"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic.BatchFlatten.__init__": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "sonnet.python.modules.basic.BatchFlatten",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.BatchReshape": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule",
    "sonnet.python.modules.base.Transposable"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic.BatchReshape.__init__": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "sonnet.python.modules.basic.BatchReshape",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.BatchReshape._build": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "callable",
    "isinstance",
    "len",
    "numpy.prod",
    "sonnet.python.modules.basic.numbers",
    "tensorflow.concat",
    "tensorflow.reshape",
    "tensorflow.shape",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.BatchReshape._infer_shape": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "abs",
    "numpy.array",
    "numpy.prod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.BatchReshape.input_shape": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.BatchReshape.transpose": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "sonnet.python.modules.basic.BatchReshape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.ConcatLinear": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic.ConcatLinear.__init__": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "sonnet.python.modules.basic.ConcatLinear",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.ConcatLinear._build": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "enumerate",
    "sonnet.python.modules.basic.Linear",
    "tensorflow.add_n"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.FlattenTrailingDimensions": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "sonnet.python.modules.basic.BatchReshape"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic.FlattenTrailingDimensions.__init__": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.modules.basic.FlattenTrailingDimensions",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.Linear": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule",
    "sonnet.python.modules.base.Transposable"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic.Linear.__init__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "sonnet.python.modules.basic.Linear",
    "sonnet.python.modules.util.check_initializers",
    "sonnet.python.modules.util.check_partitioners",
    "sonnet.python.modules.util.check_regularizers",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.Linear._build": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "len",
    "sonnet.python.modules.base.IncompatibleShapeError",
    "sonnet.python.modules.basic.create_bias_initializer",
    "sonnet.python.modules.basic.create_linear_initializer",
    "tensorflow.get_variable",
    "tensorflow.matmul",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.Linear.b": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.Linear.clone": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "sonnet.python.modules.basic.Linear"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.Linear.get_possible_initializer_keys": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.Linear.has_bias": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.Linear.initializers": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.Linear.input_shape": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.Linear.output_size": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "callable",
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.Linear.partitioners": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.Linear.regularizers": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.Linear.transpose": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "sonnet.python.modules.basic.Linear"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.Linear.w": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.MergeDims": {
  "data": {
   "lineno": 1274,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic.MergeDims.__init__": {
  "data": {
   "lineno": 1296,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.modules.basic.MergeDims",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.MergeDims._build": {
  "data": {
   "lineno": 1354,
   "symbols_in_volume": [
    "sonnet.python.modules.basic.nest"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.MergeDims._merge": {
  "data": {
   "lineno": 1315,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.prod",
    "tensorflow.concat",
    "tensorflow.reduce_prod",
    "tensorflow.reshape",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.SelectInput": {
  "data": {
   "lineno": 1375,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic.SelectInput.__init__": {
  "data": {
   "lineno": 1413,
   "symbols_in_volume": [
    "sonnet.python.modules.basic.SelectInput",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.SelectInput._build": {
  "data": {
   "lineno": 1447
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.SelectInput._check_type": {
  "data": {
   "lineno": 1429,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.SelectInput._select": {
  "data": {
   "lineno": 1436,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "tensorflow.identity",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.SliceByDim": {
  "data": {
   "lineno": 1103,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic.SliceByDim.__init__": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.unique",
    "sonnet.python.modules.basic.SliceByDim",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.SliceByDim._build": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.max",
    "tensorflow.slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.TileByDim": {
  "data": {
   "lineno": 1200,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic.TileByDim.__init__": {
  "data": {
   "lineno": 1230,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.unique",
    "sonnet.python.modules.basic.TileByDim",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.TileByDim._build": {
  "data": {
   "lineno": 1252,
   "symbols_in_volume": [
    "len",
    "tensorflow.tile",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.TrainableVariable": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic.TrainableVariable.__init__": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "sonnet.python.modules.basic.TrainableVariable",
    "sonnet.python.modules.util.check_initializers",
    "sonnet.python.modules.util.check_partitioners",
    "sonnet.python.modules.util.check_regularizers",
    "super",
    "tensorflow.float32",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.TrainableVariable._build": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "numpy.prod",
    "sonnet.python.modules.basic.math",
    "tensorflow.get_variable",
    "tensorflow.truncated_normal_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.TrainableVariable.w": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic.base": {
  "data": {
   "shadows": "sonnet.python.modules.base"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic.calculate_bias_shape": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "six.moves.xrange",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.create_bias_initializer": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "tensorflow.float32",
    "tensorflow.zeros_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.create_linear_initializer": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "sonnet.python.modules.basic.math",
    "tensorflow.float32",
    "tensorflow.truncated_normal_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic.merge_leading_dims": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "len",
    "numpy.prod",
    "tensorflow.concat",
    "tensorflow.convert_to_tensor",
    "tensorflow.reduce_prod",
    "tensorflow.reshape",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.nest": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sonnet.python.modules.basic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic.split_leading_dim": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "tensorflow.concat",
    "tensorflow.reshape",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic.util": {
  "data": {
   "shadows": "sonnet.python.modules.util"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_rnn": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.framework.nest"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.basic_rnn.BidirectionalRNN": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic_rnn.BidirectionalRNN.__init__": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "ValueError",
    "_is_recurrent",
    "sonnet.python.modules.basic_rnn.BidirectionalRNN",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.BidirectionalRNN.__init__._is_recurrent": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "core",
    "hasattr",
    "isinstance",
    "sonnet.python.modules.rnn_core.RNNCore"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.BidirectionalRNN._build": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "sonnet.python.modules.basic_rnn.nest",
    "sonnet.python.modules.basic_rnn.six",
    "tensorflow.name_scope",
    "tensorflow.stack"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.BidirectionalRNN.initial_state": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.BidirectionalRNN.output_size": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.BidirectionalRNN.state_size": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.DeepRNN": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "sonnet.python.modules.rnn_core.RNNCore"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic_rnn.DeepRNN.__init__": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "isinstance",
    "sonnet.python.modules.basic_rnn.DeepRNN",
    "sonnet.python.modules.basic_rnn.collections",
    "sonnet.python.modules.rnn_core.RNNCore",
    "sum",
    "super",
    "tensorflow.logging.WARN",
    "tensorflow.logging.log_first_n",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.DeepRNN._build": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "core",
    "enumerate",
    "sonnet.python.modules.basic_rnn._get_shape_without_batch_dimension",
    "sonnet.python.modules.basic_rnn.nest",
    "tensorflow.concat",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.DeepRNN._check_cores_output_sizes": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "sonnet.python.modules.basic_rnn._get_flat_core_sizes",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.DeepRNN.initial_state": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "ValueError",
    "core",
    "core.initial_state",
    "len",
    "tensorflow.float32",
    "tensorflow.name_scope",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.DeepRNN.output_size": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "StopIteration",
    "ValueError",
    "core",
    "core.output_size",
    "hasattr",
    "next",
    "property",
    "reversed",
    "sonnet.python.modules.basic_rnn._get_flat_core_sizes",
    "sonnet.python.modules.basic_rnn.nest",
    "sum",
    "tensorflow.TensorShape",
    "tensorflow.logging.warning",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.DeepRNN.state_size": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "core",
    "core.state_size",
    "property",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.ModelRNN": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "sonnet.python.modules.rnn_core.RNNCore"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic_rnn.ModelRNN.__init__": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "callable",
    "isinstance",
    "sonnet.python.modules.basic_rnn.ModelRNN",
    "sonnet.python.modules.rnn_core.RNNCore",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.ModelRNN._build": {
  "data": {
   "lineno": 517
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.ModelRNN.output_size": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.ModelRNN.state_size": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.VanillaRNN": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "sonnet.python.modules.rnn_core.RNNCore"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic_rnn.VanillaRNN.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "sonnet.python.modules.basic_rnn.VanillaRNN",
    "sonnet.python.modules.util.check_initializers",
    "sonnet.python.modules.util.check_partitioners",
    "sonnet.python.modules.util.check_regularizers",
    "super",
    "tensorflow.tanh"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.VanillaRNN._build": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "sonnet.python.modules.basic.Linear"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.VanillaRNN.hidden_to_hidden_linear": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.VanillaRNN.hidden_to_hidden_variables": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.VanillaRNN.in_to_hidden_linear": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.VanillaRNN.in_to_hidden_variables": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.VanillaRNN.output_size": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "property",
    "tensorflow.TensorShape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.VanillaRNN.state_size": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "property",
    "tensorflow.TensorShape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn._get_flat_core_sizes": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "sonnet.python.modules.basic_rnn.nest",
    "tensorflow.TensorShape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn._get_shape_without_batch_dimension": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "sonnet.python.modules.basic_rnn.nest"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn._get_shape_without_batch_dimension._strip_batch_and_convert_to_shape": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_rnn.base": {
  "data": {
   "shadows": "sonnet.python.modules.base"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_rnn.basic": {
  "data": {
   "shadows": "sonnet.python.modules.basic"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_rnn.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_rnn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_rnn.nest": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "sonnet.python.modules.basic_rnn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_rnn.rnn_core": {
  "data": {
   "shadows": "sonnet.python.modules.rnn_core"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_rnn.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_rnn.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_rnn.util": {
  "data": {
   "shadows": "sonnet.python.modules.util"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_rnn_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.basic_rnn_test.BidirectionalRNNTest": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "sonnet.python.modules.basic_rnn_test.collections",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic_rnn_test.BidirectionalRNNTest.ToyRNN": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "sonnet.RNNCore"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic_rnn_test.BidirectionalRNNTest.ToyRNN.__init__": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "sonnet.LSTM",
    "sonnet.python.modules.basic_rnn_test.BidirectionalRNNTest",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.BidirectionalRNNTest.ToyRNN._build": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "sonnet.python.modules.basic_rnn_test.BidirectionalRNNTest"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.BidirectionalRNNTest.ToyRNN.initial_state": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.BidirectionalRNNTest.ToyRNN.output_size": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "property",
    "sonnet.python.modules.basic_rnn_test.BidirectionalRNNTest"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.BidirectionalRNNTest.ToyRNN.state_size": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.BidirectionalRNNTest.setUp": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "sonnet.LSTM",
    "sonnet.python.modules.basic_rnn_test.BidirectionalRNNTest"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.BidirectionalRNNTest.testShape": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "bidir_rnn",
    "sonnet.BidirectionalRNN",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testComputation": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "deep_rnn",
    "deep_rnn.initial_state",
    "numpy.random.randn",
    "sonnet.DeepRNN",
    "sonnet.VanillaRNN",
    "tensorflow.concat",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testFinalCoreHasNoSizeWarning": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "sonnet.DeepRNN",
    "sonnet.LSTM",
    "sonnet.Linear",
    "sonnet.python.modules.basic_rnn_test.mock",
    "tensorflow.logging",
    "tensorflow.nn.relu"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testIncompatibleOptions": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.DeepRNN",
    "sonnet.Linear",
    "sonnet.VanillaRNN",
    "tensorflow.contrib.rnn.BasicLSTMCell"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testInitialState": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "deep_rnn",
    "deep_rnn.initial_state",
    "enumerate",
    "sonnet.DeepRNN",
    "sonnet.Linear",
    "sonnet.VanillaRNN",
    "tensorflow.constant_initializer",
    "tensorflow.global_variables_initializer",
    "tensorflow.variable_scope",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testInitialStateInModule": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "initial_state_module",
    "sonnet.Module",
    "tensorflow.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testInitialStateInModule.module_build": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "sonnet.DeepRNN",
    "sonnet.LSTM",
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testInitialStateNames": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "deep_rnn",
    "deep_rnn.initial_state",
    "sonnet.DeepRNN",
    "sonnet.LSTM",
    "tensorflow.executing_eagerly"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testMLPFinalCore": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "deep_rnn",
    "deep_rnn.initial_state",
    "numpy.random.randn",
    "sonnet.DeepRNN",
    "sonnet.LSTM",
    "sonnet.nets.MLP",
    "tensorflow.TensorShape",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.nn.dynamic_rnn"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testMultiDimShape": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "_create_lstm",
    "deep_rnn",
    "deep_rnn.output_size.as_list",
    "list",
    "range",
    "sonnet.DeepRNN",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testMultiDimShape._create_lstm": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "sonnet.Conv2DLSTM"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testNoSizeButAlreadyConnected": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "rnn",
    "rnn.initial_state",
    "rnn.output_size",
    "sonnet.DeepRNN",
    "sonnet.LSTM",
    "sonnet.Linear",
    "sonnet.python.modules.basic_rnn_test.mock",
    "tensorflow.TensorShape",
    "tensorflow.logging",
    "tensorflow.nn.relu",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testNonRecurrentOnly": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "deep_rnn",
    "numpy.random.randn",
    "sonnet.DeepRNN",
    "sonnet.Linear",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testShape": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "deep_rnn",
    "deep_rnn.initial_state",
    "deep_rnn.output_size",
    "deep_rnn.state_size",
    "len",
    "numpy.ndarray",
    "sonnet.DeepRNN",
    "sonnet.VanillaRNN",
    "tensorflow.TensorShape",
    "tensorflow.float32",
    "tensorflow.ones",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testSkipConnectionOptions": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "numpy.random.normal",
    "six.moves.xrange",
    "sonnet.DeepRNN",
    "sonnet.LSTM",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.nn.dynamic_rnn"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testVariables": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "deep_rnn",
    "deep_rnn.get_variables",
    "deep_rnn.scope_name",
    "len",
    "sonnet.DeepRNN",
    "sonnet.Error",
    "sonnet.VanillaRNN",
    "sonnet.python.modules.basic_rnn_test.itertools",
    "tensorflow.float32",
    "tensorflow.ones",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.test_non_recurrent_mappings": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "sonnet.DeepRNN",
    "sonnet.LSTM",
    "sonnet.Linear",
    "tensorflow.global_variables_initializer",
    "tensorflow.nn.dynamic_rnn",
    "tensorflow.random_normal",
    "tensorflow.tanh"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.ModelRNNTest": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic_rnn_test.ModelRNNTest.setUp": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "sonnet.Module",
    "tensorflow.TensorShape",
    "tensorflow.identity"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.ModelRNNTest.testBadArguments": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "numpy.array",
    "sonnet.ModelRNN",
    "tensorflow.identity"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.ModelRNNTest.testComputation": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "model_rnn",
    "numpy.random.randn",
    "sonnet.ModelRNN",
    "tensorflow.convert_to_tensor",
    "tensorflow.global_variables_initializer",
    "tensorflow.random_normal"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.ModelRNNTest.testShape": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "model_rnn",
    "sonnet.ModelRNN",
    "tensorflow.TensorShape",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.VanillaRNNTest": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic_rnn_test.VanillaRNNTest.setUp": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "sonnet.python.modules.basic_rnn_test.VanillaRNNTest",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.VanillaRNNTest.testComputation": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.randn",
    "numpy.tanh",
    "sonnet.VanillaRNN",
    "tensorflow.convert_to_tensor",
    "tensorflow.global_variables_initializer",
    "vanilla_rnn",
    "vanilla_rnn.hidden_to_hidden_variables",
    "vanilla_rnn.in_to_hidden_variables"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.VanillaRNNTest.testInitializers": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "numpy.ones",
    "sonnet.VanillaRNN",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.ones",
    "tensorflow.ones_initializer",
    "tensorflow.zeros",
    "vanilla_rnn",
    "vanilla_rnn.hidden_to_hidden_linear.b",
    "vanilla_rnn.in_to_hidden_linear.w"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.VanillaRNNTest.testPartitioners": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "sonnet.VanillaRNN",
    "tensorflow.executing_eagerly",
    "tensorflow.fixed_size_partitioner",
    "tensorflow.float32",
    "tensorflow.ones",
    "tensorflow.python.ops.variables.PartitionedVariable",
    "tensorflow.zeros",
    "type",
    "vanilla_rnn",
    "vanilla_rnn.hidden_to_hidden_linear.b",
    "vanilla_rnn.hidden_to_hidden_linear.w",
    "vanilla_rnn.in_to_hidden_linear.b",
    "vanilla_rnn.in_to_hidden_linear.w"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.VanillaRNNTest.testRegularizers": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "len",
    "sonnet.VanillaRNN",
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.nn.l2_loss",
    "tensorflow.ones",
    "tensorflow.zeros",
    "vanilla_rnn"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.VanillaRNNTest.testShape": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.ndarray",
    "sonnet.VanillaRNN",
    "tensorflow.float32",
    "tensorflow.ones",
    "vanilla_rnn"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.VanillaRNNTest.testVariables": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "len",
    "next",
    "numpy.ndarray",
    "sonnet.Error",
    "sonnet.VanillaRNN",
    "tensorflow.convert_to_tensor",
    "tensorflow.float32",
    "tensorflow.ones",
    "vanilla_rnn",
    "vanilla_rnn.get_variables",
    "vanilla_rnn.scope_name"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_rnn_test.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_rnn_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_rnn_test.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_rnn_test.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_rnn_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_rnn_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_rnn_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_rnn_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_rnn_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_rnn_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_rnn_test.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.basic_test.AddBiasTest": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic_test.AddBiasTest.setUp": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "sonnet.python.modules.basic_test.AddBiasTest",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.AddBiasTest.testComputation": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "add",
    "add.b",
    "dict",
    "numpy.array",
    "numpy.random.randn",
    "numpy.random.seed",
    "sonnet.AddBias",
    "sonnet.python.modules.basic_test._test_initializer",
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.constant",
    "tensorflow.contrib.layers.l2_regularizer",
    "tensorflow.executing_eagerly",
    "tensorflow.float16",
    "tensorflow.float32",
    "tensorflow.float64",
    "tensorflow.get_collection",
    "tensorflow.global_variables_initializer",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.AddBiasTest.testInvalidInitializationParameters": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "absl.testing.parameterized.named_parameters",
    "sonnet.AddBias",
    "tensorflow.truncated_normal_initializer",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.AddBiasTest.testInvalidPartitionerParameters": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "absl.testing.parameterized.named_parameters",
    "sonnet.AddBias",
    "tensorflow.fixed_size_partitioner",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.AddBiasTest.testInvalidRegularizationParameters": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "absl.testing.parameterized.named_parameters",
    "sonnet.AddBias",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.AddBiasTest.testName": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "add",
    "add.module_name",
    "add.scope_name",
    "sonnet.AddBias",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.AddBiasTest.testPartitioners": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "bias",
    "bias.b",
    "sonnet.AddBias",
    "tensorflow.executing_eagerly",
    "tensorflow.python.ops.variables.PartitionedVariable",
    "tensorflow.variable_axis_size_partitioner",
    "tensorflow.zeros",
    "type"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.AddBiasTest.testShape": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "add",
    "sonnet.AddBias",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.AddBiasTest.testSharing": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "add",
    "numpy.float32",
    "numpy.random.randn",
    "numpy.random.seed",
    "sonnet.AddBias",
    "sonnet.python.modules.basic_test._test_initializer",
    "tensorflow.constant",
    "tensorflow.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.AddBiasTest.testTranspose": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "add",
    "add.b.get_shape",
    "add.transpose",
    "add_transpose",
    "add_transpose.b.get_shape",
    "sonnet.AddBias",
    "sonnet.ParentNotBuiltError",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.AddBiasTest.testUniquifying": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "add1",
    "add1.get_variables",
    "add1.module_name",
    "add1.scope_name",
    "add2",
    "add2.get_variables",
    "add2.module_name",
    "add2.scope_name",
    "add3",
    "add3.get_variables",
    "add3.module_name",
    "add3.scope_name",
    "sonnet.AddBias",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.AddBiasTest.testVariables": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "add",
    "add.b",
    "add.get_variables",
    "add.scope_name",
    "numpy.ndarray",
    "sonnet.AddBias",
    "sonnet.NotConnectedError",
    "tensorflow.convert_to_tensor",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest": {
  "data": {
   "lineno": 1303,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testComputation": {
  "data": {
   "lineno": 1333,
   "symbols_in_volume": [
    "linear",
    "merge_linear",
    "merge_tanh",
    "numpy.random.seed",
    "sonnet.BatchApply",
    "sonnet.Linear",
    "sonnet.python.modules.basic_test._test_initializer",
    "tensorflow.global_variables_initializer",
    "tensorflow.random_uniform",
    "tensorflow.reshape",
    "tensorflow.tanh"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testDifferentOutputStructure": {
  "data": {
   "lineno": 1384,
   "symbols_in_volume": [
    "module",
    "numpy.random.randn",
    "sonnet.BatchApply",
    "sonnet.Module",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testDifferentOutputStructure.build": {
  "data": {
   "lineno": 1389
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testHandlesReturnedNone": {
  "data": {
   "lineno": 1484,
   "symbols_in_volume": [
    "sonnet.BatchApply",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testHandlesReturnedNone.fn": {
  "data": {
   "lineno": 1485
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testInferShape": {
  "data": {
   "lineno": 1312,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "linear",
    "merge_linear",
    "merge_tanh",
    "sonnet.BatchApply",
    "sonnet.Linear",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.ones",
    "tensorflow.placeholder",
    "tensorflow.tanh"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testInputExampleIndex": {
  "data": {
   "lineno": 1435,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.BatchApply",
    "sonnet.Module",
    "tensorflow.errors.InvalidArgumentError",
    "tensorflow.executing_eagerly",
    "tensorflow.random_normal"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testInputExampleIndex.build": {
  "data": {
   "lineno": 1439
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testKWArgs": {
  "data": {
   "lineno": 1472,
   "symbols_in_volume": [
    "module",
    "numpy.random.randn",
    "sonnet.BatchApply",
    "tensorflow.matmul"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testMultipleArgs": {
  "data": {
   "lineno": 1460,
   "symbols_in_volume": [
    "module",
    "numpy.random.randn",
    "sonnet.BatchApply",
    "tensorflow.matmul"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testName": {
  "data": {
   "lineno": 1305,
   "symbols_in_volume": [
    "mod",
    "mod.module_name",
    "mod.scope_name",
    "sonnet.BatchApply",
    "sonnet.Linear",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testNested": {
  "data": {
   "lineno": 1401,
   "symbols_in_volume": [
    "SizeChecker",
    "ab_tuple",
    "numpy.zeros",
    "sonnet.BatchApply",
    "sonnet.nest.assert_same_structure",
    "sonnet.python.modules.basic_test.collections",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testNested.SizeChecker": {
  "data": {
   "lineno": 1410,
   "symbols_in_volume": [
    "sonnet.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testNested.SizeChecker.__init__": {
  "data": {
   "lineno": 1413,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testNested.SizeChecker._build": {
  "data": {
   "lineno": 1417,
   "symbols_in_volume": [
    "sonnet.nest.assert_same_structure"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testNonTensor": {
  "data": {
   "lineno": 1510,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "sonnet.BatchApply",
    "sonnet.Module",
    "sonnet.python.ops.nest.flatten_iterable",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testNonTensor._build": {
  "data": {
   "lineno": 1523,
   "symbols_in_volume": [
    "sonnet.BatchNorm",
    "sonnet.Linear"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testOverTwoDims": {
  "data": {
   "lineno": 1371,
   "symbols_in_volume": [
    "linear",
    "merge_linear",
    "sonnet.BatchApply",
    "sonnet.Linear",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testSomeInputsAreNone": {
  "data": {
   "lineno": 1491,
   "symbols_in_volume": [
    "module",
    "numpy.random.randn",
    "sonnet.BatchApply",
    "tensorflow.matmul"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testSomeInputsAreNone.build": {
  "data": {
   "lineno": 1496,
   "symbols_in_volume": [
    "tensorflow.matmul"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testVariables": {
  "data": {
   "lineno": 1357,
   "symbols_in_volume": [
    "linear",
    "merge_linear",
    "merge_linear.get_variables",
    "merge_tanh",
    "merge_tanh.get_variables",
    "sonnet.BatchApply",
    "sonnet.Linear",
    "tensorflow.float32",
    "tensorflow.ones",
    "tensorflow.tanh"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchFlattenTest": {
  "data": {
   "lineno": 1191,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic_test.BatchFlattenTest.testFlatten": {
  "data": {
   "lineno": 1200,
   "symbols_in_volume": [
    "mod",
    "numpy.prod",
    "sonnet.BatchFlatten",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchFlattenTest.testFlattenWithZeroDim": {
  "data": {
   "lineno": 1228,
   "symbols_in_volume": [
    "sonnet.BatchFlatten",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchFlattenTest.testName": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": [
    "mod",
    "mod.module_name",
    "mod.scope_name",
    "sonnet.BatchFlatten",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchFlattenTest.testPreserveDimsError": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": [
    "ValueError",
    "absl.testing.parameterized.parameters",
    "mod",
    "sonnet.BatchFlatten",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchFlattenTest.testPreserveDimsOk": {
  "data": {
   "lineno": 1209,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "mod",
    "numpy.prod",
    "sonnet.BatchFlatten",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testAddDimensions": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": [
    "mod",
    "mod.transpose",
    "mod_t",
    "sonnet.BatchReshape",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testBadUnknownNonPreservedDimensions": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "ValueError",
    "absl.testing.parameterized.named_parameters",
    "len",
    "mod",
    "sonnet.BatchReshape",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testBuildDimError": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "ValueError",
    "mod",
    "sonnet.BatchReshape",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testBuildUnknown": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": [
    "mod",
    "sonnet.BatchReshape",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testCallable": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "mod",
    "sonnet.BatchReshape",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testFlatten": {
  "data": {
   "lineno": 1030,
   "symbols_in_volume": [
    "mod",
    "numpy.prod",
    "sonnet.BatchReshape",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testInferShape": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "mod",
    "sonnet.BatchReshape",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testInvalidPreserveDimsError": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.BatchReshape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testInvalidReshapeParameters": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.BatchReshape",
    "tensorflow.float32",
    "tensorflow.ones",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testName": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "sonnet.BatchReshape",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testNoReshapeNeeded": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "mod",
    "sonnet.BatchReshape",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.ones",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testPreserve": {
  "data": {
   "lineno": 1093,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "len",
    "list",
    "mod",
    "sonnet.BatchReshape",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.ones",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testReshape": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "mod",
    "numpy.prod",
    "sonnet.BatchReshape",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testRun": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "len",
    "list",
    "mod",
    "numpy.float32",
    "numpy.random.RandomState",
    "numpy.zeros",
    "sonnet.BatchReshape",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testTranspose": {
  "data": {
   "lineno": 1053,
   "symbols_in_volume": [
    "mod",
    "mod.transpose",
    "mod_t",
    "mod_t.transpose",
    "mod_t_t",
    "sonnet.BatchReshape",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testUnknown": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "mod",
    "numpy.prod",
    "sonnet.BatchReshape",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.ConcatLinearTest": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic_test.ConcatLinearTest.setUp": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "sonnet.python.modules.basic_test.ConcatLinearTest",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.ConcatLinearTest.testName": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "lin",
    "lin.module_name",
    "lin.scope_name",
    "sonnet.ConcatLinear",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.ConcatLinearTest.testShape": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "lin",
    "sonnet.ConcatLinear",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.FlattenTrailingDimensionsTest": {
  "data": {
   "lineno": 1235,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic_test.FlattenTrailingDimensionsTest.testBuildDimError": {
  "data": {
   "lineno": 1248,
   "symbols_in_volume": [
    "ValueError",
    "mod",
    "sonnet.FlattenTrailingDimensions",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.FlattenTrailingDimensionsTest.testBuildUnknown": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": [
    "mod",
    "sonnet.FlattenTrailingDimensions",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.FlattenTrailingDimensionsTest.testFlatten": {
  "data": {
   "lineno": 1263,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "len",
    "mod",
    "numpy.prod",
    "six.moves.xrange",
    "sonnet.FlattenTrailingDimensions",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.ones",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.FlattenTrailingDimensionsTest.testInvalidFlattenFromError": {
  "data": {
   "lineno": 1244,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.FlattenTrailingDimensions"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.FlattenTrailingDimensionsTest.testName": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": [
    "mod",
    "mod.module_name",
    "mod.scope_name",
    "sonnet.FlattenTrailingDimensions",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.FlattenTrailingDimensionsTest.testTranspose": {
  "data": {
   "lineno": 1282,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "mod",
    "mod.transpose",
    "mod_trans",
    "sonnet.FlattenTrailingDimensions",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.ones",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic_test.LinearTest.setUp": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "sonnet.python.modules.basic_test.LinearTest",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testClone": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "clone1",
    "clone1.module_name",
    "clone1.output_size",
    "clone1.variable_scope.name",
    "clone2",
    "clone2.module_name",
    "clone2.variable_scope.name",
    "len",
    "linear",
    "linear.module_name",
    "linear.output_size",
    "linear.variable_scope.name",
    "sonnet.Linear",
    "tensorflow.GraphKeys.TRAINABLE_VARIABLES",
    "tensorflow.get_collection",
    "tensorflow.trainable_variables",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testComputation": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "dict",
    "lin",
    "lin.b",
    "lin.w",
    "numpy.dot",
    "numpy.random.randn",
    "numpy.random.seed",
    "sonnet.Linear",
    "sonnet.python.modules.basic_test._test_initializer",
    "tensorflow.constant",
    "tensorflow.float16",
    "tensorflow.float32",
    "tensorflow.float64",
    "tensorflow.global_variables_initializer",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testCustomGetter": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "lin1",
    "lin2",
    "sonnet.Linear",
    "tensorflow.float32",
    "tensorflow.global_variables",
    "tensorflow.ones",
    "tensorflow.trainable_variables"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testCustomGetter.custom_getter": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "getter"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testFloatDataTypeConsistent": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "linear",
    "linear.b.dtype.base_dtype",
    "linear.w.dtype.base_dtype",
    "sonnet.Linear",
    "tensorflow.bfloat16",
    "tensorflow.float16",
    "tensorflow.float32",
    "tensorflow.float64",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testGradientColocation": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "any",
    "linear",
    "numpy.ones",
    "sonnet.Linear",
    "tensorflow.contrib.nn.deprecated_flipped_sparse_softmax_cross_entropy_with_logits",
    "tensorflow.device",
    "tensorflow.errors.InvalidArgumentError",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.logging.warn",
    "tensorflow.ones",
    "tensorflow.python.client.device_lib.list_local_devices",
    "tensorflow.reduce_mean",
    "tensorflow.to_int64",
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testIntegerDataTypeConsistentWithCustomWeightInitializer": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "linear",
    "linear.b.dtype.base_dtype",
    "linear.w.dtype.base_dtype",
    "sonnet.Linear",
    "tensorflow.int32",
    "tensorflow.ones",
    "tensorflow.zeros_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testIntegerDataTypeFailsWithDefaultInitializers": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "ValueError",
    "linear",
    "sonnet.Linear",
    "tensorflow.int32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testInvalidInitializationParameters": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "sonnet.Linear",
    "tensorflow.truncated_normal_initializer",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testInvalidPartitionerParameters": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "sonnet.Linear",
    "tensorflow.fixed_size_partitioner",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testInvalidRegularizationParameters": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "sonnet.Linear",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testIsConnected": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "lin",
    "lin.is_connected",
    "sonnet.IncompatibleShapeError",
    "sonnet.Linear",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testName": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "lin",
    "lin.module_name",
    "lin.scope_name",
    "sonnet.Linear",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testPartitioners": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "linear",
    "linear.b",
    "linear.w",
    "sonnet.Linear",
    "tensorflow.executing_eagerly",
    "tensorflow.python.ops.variables.PartitionedVariable",
    "tensorflow.variable_axis_size_partitioner",
    "tensorflow.zeros",
    "type"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testRegularizersInRegularizationLosses": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "lin",
    "sonnet.Linear",
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.contrib.layers.l2_regularizer",
    "tensorflow.executing_eagerly",
    "tensorflow.get_collection",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testShape": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "lin",
    "sonnet.Linear",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testSharing": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "lin",
    "numpy.float32",
    "numpy.random.randn",
    "numpy.random.seed",
    "sonnet.Linear",
    "sonnet.python.modules.basic_test._test_initializer",
    "tensorflow.constant",
    "tensorflow.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testTranspose": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "linear1",
    "linear_transpose1",
    "linear_transpose1.has_bias",
    "sonnet.Linear",
    "sonnet.NotConnectedError",
    "tensorflow.float32",
    "tensorflow.ones",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testUniquifying": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "lin1",
    "lin1.get_variables",
    "lin1.module_name",
    "lin1.scope_name",
    "lin2",
    "lin2.get_variables",
    "lin2.module_name",
    "lin2.scope_name",
    "lin3",
    "lin3.get_variables",
    "lin3.module_name",
    "lin3.scope_name",
    "sonnet.Linear",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testUnknownInputSize": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "lin",
    "lin.is_connected",
    "sonnet.IncompatibleShapeError",
    "sonnet.Linear",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testVariables": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "AttributeError",
    "absl.testing.parameterized.named_parameters",
    "lin",
    "lin.b",
    "lin.get_variables",
    "lin.scope_name",
    "lin.w",
    "numpy.ndarray",
    "sonnet.Linear",
    "sonnet.NotConnectedError",
    "tensorflow.convert_to_tensor",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.MergeDimsTest": {
  "data": {
   "lineno": 1715,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic_test.MergeDimsTest.testComputation": {
  "data": {
   "lineno": 1778,
   "symbols_in_volume": [
    "mod",
    "sonnet.MergeDims",
    "tensorflow.random_uniform",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.MergeDimsTest.testInferShape": {
  "data": {
   "lineno": 1724,
   "symbols_in_volume": [
    "mod",
    "sonnet.MergeDims",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.MergeDimsTest.testInferShape_negStart": {
  "data": {
   "lineno": 1734,
   "symbols_in_volume": [
    "mod",
    "sonnet.MergeDims",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.MergeDimsTest.testInvalidDimsParameters": {
  "data": {
   "lineno": 1793,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.MergeDims"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.MergeDimsTest.testInvalidTensorRank": {
  "data": {
   "lineno": 1801,
   "symbols_in_volume": [
    "ValueError",
    "mod",
    "sonnet.MergeDims",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.MergeDimsTest.testName": {
  "data": {
   "lineno": 1717,
   "symbols_in_volume": [
    "mod",
    "mod.module_name",
    "mod.scope_name",
    "sonnet.MergeDims",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.MergeDimsTest.testNestedInput": {
  "data": {
   "lineno": 1813,
   "symbols_in_volume": [
    "mod",
    "namedtuple_type",
    "numpy.prod",
    "sonnet.MergeDims",
    "sonnet.python.modules.basic_test.collections",
    "sonnet.python.ops.nest.assert_same_structure",
    "sonnet.python.ops.nest.flatten",
    "tensorflow.random_uniform",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.MergeDimsTest.testWithUndefinedAndZeroDim": {
  "data": {
   "lineno": 1764,
   "symbols_in_volume": [
    "list",
    "mod",
    "numpy.zeros",
    "sonnet.MergeDims",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.MergeDimsTest.testWithUndefinedDims": {
  "data": {
   "lineno": 1744,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "list",
    "mod",
    "numpy.zeros",
    "sonnet.MergeDims",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.MergeLeadingDimsTest": {
  "data": {
   "lineno": 1149,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic_test.MergeLeadingDimsTest.testExceptionUnknownRank": {
  "data": {
   "lineno": 1165,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.modules.basic.merge_leading_dims",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.MergeLeadingDimsTest.testPartialShape": {
  "data": {
   "lineno": 1177,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "sonnet.python.modules.basic.merge_leading_dims",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.MergeLeadingDimsTest.testScalarInput": {
  "data": {
   "lineno": 1152,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "sonnet.python.modules.basic.merge_leading_dims"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.SelectInputTest": {
  "data": {
   "lineno": 1850,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic_test.SelectInputTest.testBasicSelect": {
  "data": {
   "lineno": 1859,
   "symbols_in_volume": [
    "mod",
    "sonnet.SelectInput",
    "tensorflow.identity",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.SelectInputTest.testInvalidIdxType": {
  "data": {
   "lineno": 1925,
   "symbols_in_volume": [
    "TypeError",
    "sonnet.SelectInput"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.SelectInputTest.testInvalidIdxValue": {
  "data": {
   "lineno": 1912,
   "symbols_in_volume": [
    "ValueError",
    "mod",
    "sonnet.SelectInput",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.SelectInputTest.testName": {
  "data": {
   "lineno": 1852,
   "symbols_in_volume": [
    "mod",
    "mod.module_name",
    "mod.scope_name",
    "sonnet.SelectInput",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.SelectInputTest.testNestedListSelect": {
  "data": {
   "lineno": 1891,
   "symbols_in_volume": [
    "mod",
    "sonnet.SelectInput",
    "tensorflow.identity",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.SelectInputTest.testTupleSelect": {
  "data": {
   "lineno": 1873,
   "symbols_in_volume": [
    "mod",
    "sonnet.SelectInput",
    "tensorflow.identity",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.SliceByDimTest": {
  "data": {
   "lineno": 1544,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic_test.SliceByDimTest.testComparison": {
  "data": {
   "lineno": 1565,
   "symbols_in_volume": [
    "mod",
    "sonnet.SliceByDim",
    "tensorflow.random_uniform",
    "tensorflow.slice"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.SliceByDimTest.testComputation": {
  "data": {
   "lineno": 1583,
   "symbols_in_volume": [
    "mod",
    "sonnet.SliceByDim",
    "tensorflow.constant",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.SliceByDimTest.testInferShape": {
  "data": {
   "lineno": 1554,
   "symbols_in_volume": [
    "mod",
    "sonnet.SliceByDim",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.SliceByDimTest.testInvalidSliceParameters": {
  "data": {
   "lineno": 1609,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "sonnet.SliceByDim"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.SliceByDimTest.testInvalidTensorRank": {
  "data": {
   "lineno": 1626,
   "symbols_in_volume": [
    "ValueError",
    "mod",
    "numpy.max",
    "sonnet.SliceByDim",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.SliceByDimTest.testName": {
  "data": {
   "lineno": 1546,
   "symbols_in_volume": [
    "mod",
    "mod.module_name",
    "mod.scope_name",
    "sonnet.SliceByDim",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.SliceByDimTest.testNegativeDim": {
  "data": {
   "lineno": 1596,
   "symbols_in_volume": [
    "mod",
    "sonnet.SliceByDim",
    "tensorflow.constant",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.SliceByDimTest.testUniqueDimensions": {
  "data": {
   "lineno": 1639,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.SliceByDim"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TileByDimTest": {
  "data": {
   "lineno": 1650,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic_test.TileByDimTest.testComparison": {
  "data": {
   "lineno": 1669,
   "symbols_in_volume": [
    "mod",
    "sonnet.TileByDim",
    "tensorflow.random_uniform",
    "tensorflow.tile"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TileByDimTest.testComputation": {
  "data": {
   "lineno": 1685,
   "symbols_in_volume": [
    "mod",
    "sonnet.TileByDim",
    "tensorflow.constant",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TileByDimTest.testInferShape": {
  "data": {
   "lineno": 1659,
   "symbols_in_volume": [
    "mod",
    "sonnet.TileByDim",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TileByDimTest.testInvalidTileParameters": {
  "data": {
   "lineno": 1697,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "sonnet.TileByDim"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TileByDimTest.testName": {
  "data": {
   "lineno": 1652,
   "symbols_in_volume": [
    "mod",
    "mod.module_name",
    "mod.scope_name",
    "sonnet.TileByDim",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TileByDimTest.testUniqueDimensions": {
  "data": {
   "lineno": 1705,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.TileByDim"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TrainableVariableTest": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.basic_test.TrainableVariableTest.testCallBeforeInstantiation": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "sonnet.NotConnectedError",
    "sonnet.TrainableVariable",
    "var",
    "var.get_variables",
    "var.w"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TrainableVariableTest.testCustomGetter": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "sonnet.TrainableVariable",
    "tensorflow.constant",
    "tensorflow.executing_eagerly",
    "tensorflow.gradients",
    "var",
    "var.get_variables"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TrainableVariableTest.testCustomGetter.maybe_stop_gradients_custom_getter": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "getter",
    "tensorflow.stop_gradient"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TrainableVariableTest.testInitialization": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "sonnet.TrainableVariable",
    "tensorflow.float32",
    "tensorflow.zeros_initializer",
    "var",
    "var.w.get_shape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TrainableVariableTest.testInvalidInitializationParameters": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "sonnet.TrainableVariable",
    "tensorflow.truncated_normal_initializer",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TrainableVariableTest.testInvalidPartitionerParameters": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "sonnet.TrainableVariable",
    "tensorflow.fixed_size_partitioner",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TrainableVariableTest.testInvalidRegularizationParameters": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "sonnet.TrainableVariable",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TrainableVariableTest.testName": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "sonnet.TrainableVariable",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TrainableVariableTest.testPartitioners": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "sonnet.TrainableVariable",
    "tensorflow.executing_eagerly",
    "tensorflow.python.ops.variables.PartitionedVariable",
    "tensorflow.variable_axis_size_partitioner",
    "type",
    "var",
    "var.w"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TrainableVariableTest.testRegularizersInRegularizationLosses": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "sonnet.TrainableVariable",
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.executing_eagerly",
    "tensorflow.get_collection",
    "var"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TrainableVariableTest.testVariableInitialization": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "dict",
    "numpy.dot",
    "numpy.random.randn",
    "numpy.random.seed",
    "sonnet.TrainableVariable",
    "sonnet.python.modules.basic_test._test_initializer",
    "tensorflow.constant",
    "tensorflow.float16",
    "tensorflow.float32",
    "tensorflow.float64",
    "tensorflow.global_variables_initializer",
    "tensorflow.matmul",
    "var",
    "var.w",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test._test_initializer": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test._test_initializer._initializer": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.random.randn",
    "tensorflow.python.ops.init_ops._assert_float_dtype"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.basic_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_test.basic": {
  "data": {
   "shadows": "sonnet.python.modules.basic"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_test.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_test.device_lib": {
  "data": {
   "shadows": "tensorflow.python.client.device_lib"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_test.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_test.nest": {
  "data": {
   "shadows": "sonnet.python.ops.nest"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "sonnet.python.modules.basic_test.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm": {
  "data": {},
  "type": "module"
 },
 "sonnet.python.modules.batch_norm.BatchNorm": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.batch_norm.BatchNorm.__init__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "sonnet.python.modules.batch_norm.BatchNorm",
    "sonnet.python.modules.util.check_initializers",
    "sonnet.python.modules.util.check_partitioners",
    "sonnet.python.modules.util.check_regularizers",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm._batch_norm_op": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "tensorflow.cast",
    "tensorflow.nn.batch_normalization"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm._build": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "len",
    "max",
    "min",
    "range",
    "sonnet.python.modules.base.IncompatibleShapeError",
    "sonnet.python.modules.base.NotSupportedError",
    "tensorflow.add_to_collection",
    "tensorflow.bfloat16",
    "tensorflow.control_dependencies",
    "tensorflow.float16",
    "tensorflow.float32",
    "tensorflow.identity",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm._build_scale_offset": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "sonnet.python.modules.batch_norm.create_beta_initializer",
    "sonnet.python.modules.batch_norm.create_gamma_initializer",
    "tensorflow.float16",
    "tensorflow.float32",
    "tensorflow.get_variable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm._build_statistics": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "sonnet.python.modules.batch_norm.create_mean_initializer",
    "sonnet.python.modules.batch_norm.create_variance_initializer",
    "tensorflow.GraphKeys.GLOBAL_VARIABLES",
    "tensorflow.GraphKeys.MOVING_AVERAGE_VARIABLES",
    "tensorflow.get_variable",
    "tensorflow.python.layers.utils.smart_cond"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm._build_statistics.build_batch_stats": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "tensorflow.nn.moments"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm._build_statistics.build_moving_stats": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "tensorflow.cast",
    "tensorflow.identity"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm._build_update_ops": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "tensorflow.python.layers.utils.constant_value",
    "tensorflow.python.layers.utils.smart_cond"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm._build_update_ops.build_no_ops": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "tensorflow.no_op"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm._build_update_ops.build_update_ops": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "tensorflow.python.training.moving_averages.assign_moving_average"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm._fused_batch_norm_op": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "tensorflow.convert_to_tensor",
    "tensorflow.python.layers.utils.smart_cond",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm._fused_batch_norm_op.moving_average_fused_batch_norm": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "tensorflow.nn.fused_batch_norm"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm._fused_batch_norm_op.use_batch_stats_fused_batch_norm": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "tensorflow.nn.fused_batch_norm"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm._infer_fused_data_format": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "len",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm.beta": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "property",
    "sonnet.python.modules.base.Error"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm.gamma": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "property",
    "sonnet.python.modules.base.Error"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm.initializers": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm.moving_mean": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm.moving_variance": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm.partitioners": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm.regularizers": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm.base": {
  "data": {
   "shadows": "sonnet.python.modules.base"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm.create_beta_initializer": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "tensorflow.zeros_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.create_gamma_initializer": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "tensorflow.ones_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.create_mean_initializer": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "tensorflow.zeros_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.create_variance_initializer": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "tensorflow.ones_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm.moving_averages": {
  "data": {
   "shadows": "tensorflow.python.training.moving_averages"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm.util": {
  "data": {
   "shadows": "sonnet.python.modules.util"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm.utils": {
  "data": {
   "shadows": "tensorflow.python.layers.utils"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest._get_inputs": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.constant",
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.test16Bit": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "batch_norm",
    "batch_norm.beta.dtype.base_dtype",
    "batch_norm.gamma.dtype.base_dtype",
    "batch_norm.moving_mean.dtype.base_dtype",
    "batch_norm.moving_variance.dtype.base_dtype",
    "sonnet.BatchNorm",
    "tensorflow.bfloat16",
    "tensorflow.float16",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testCheckStatsDouble": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "bn",
    "bn._decay_rate",
    "bn.moving_mean",
    "bn.moving_variance",
    "len",
    "numpy.ones",
    "numpy.reshape",
    "numpy.zeros",
    "sonnet.BatchNorm",
    "tensorflow.GraphKeys.UPDATE_OPS",
    "tensorflow.float16",
    "tensorflow.float32",
    "tensorflow.float64",
    "tensorflow.get_collection",
    "tensorflow.global_variables_initializer",
    "tensorflow.name_scope",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testCheckStatsInGraph": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "bn",
    "bn._decay_rate",
    "bn._eps",
    "bn.moving_mean",
    "bn.moving_variance",
    "len",
    "numpy.ones",
    "numpy.reshape",
    "numpy.sqrt",
    "numpy.zeros",
    "sonnet.BatchNorm",
    "tensorflow.GraphKeys.UPDATE_OPS",
    "tensorflow.bool",
    "tensorflow.control_dependencies",
    "tensorflow.get_collection",
    "tensorflow.global_variables_initializer",
    "tensorflow.identity",
    "tensorflow.placeholder",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testCheckStatsPython": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "bn",
    "bn._decay_rate",
    "bn._eps",
    "bn.moving_mean",
    "bn.moving_variance",
    "len",
    "numpy.ones",
    "numpy.reshape",
    "numpy.sqrt",
    "numpy.zeros",
    "sonnet.BatchNorm",
    "tensorflow.GraphKeys.UPDATE_OPS",
    "tensorflow.control_dependencies",
    "tensorflow.get_collection",
    "tensorflow.global_variables_initializer",
    "tensorflow.identity",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testConstruct": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "batch_norm1",
    "batch_norm1.beta",
    "batch_norm1.gamma",
    "batch_norm2",
    "batch_norm2.beta",
    "batch_norm3",
    "batch_norm3.gamma",
    "batch_norm4",
    "batch_norm4.beta",
    "batch_norm4.gamma",
    "sonnet.BatchNorm",
    "sonnet.Error",
    "tensorflow.bool",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testDataType": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "batch_norm",
    "batch_norm.beta.dtype.base_dtype",
    "batch_norm.gamma.dtype.base_dtype",
    "batch_norm.moving_mean.dtype.base_dtype",
    "batch_norm.moving_variance.dtype.base_dtype",
    "sonnet.BatchNorm",
    "tensorflow.float32",
    "tensorflow.float64",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testFusedBatchNorm": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "absl.testing.parameterized.named_parameters",
    "bn1",
    "bn1._moving_mean",
    "bn1._moving_variance",
    "bn2",
    "bn2._moving_mean",
    "bn2._moving_variance",
    "numpy.random.random",
    "range",
    "sonnet.BatchNorm",
    "tensorflow.bool",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testFusedBatchNormFloat16": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "bn1",
    "bn1._moving_mean",
    "bn1._moving_variance",
    "bn2",
    "bn2._moving_mean",
    "bn2._moving_variance",
    "numpy.random.random",
    "range",
    "sonnet.BatchNorm",
    "tensorflow.float16",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testInitializers": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "bn",
    "bn.beta.eval",
    "bn.gamma.eval",
    "bn.initializers",
    "bn.moving_mean.eval",
    "bn.moving_variance.eval",
    "numpy.ones",
    "sonnet.BatchNorm",
    "tensorflow.constant_initializer",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testInvalidInitializerParameters": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "sonnet.BatchNorm",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testInvalidPartitionerParameters": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "sonnet.BatchNorm",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testInvalidRegularizationParameters": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "sonnet.BatchNorm",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testPartitioners": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "bn",
    "bn.beta",
    "bn.gamma",
    "bn.partitioners",
    "sonnet.BatchNorm",
    "tensorflow.fixed_size_partitioner",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "tensorflow.python.ops.variables.PartitionedVariable",
    "type"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testReductionIndices": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "bn1",
    "bn1.moving_mean.get_shape",
    "bn2",
    "bn2.moving_mean.get_shape",
    "bn3",
    "bn3.moving_mean.get_shape",
    "bn4",
    "bn4.moving_mean.get_shape",
    "bn5",
    "bn6",
    "bn7",
    "sonnet.BatchNorm",
    "sonnet.IncompatibleShapeError",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testRegularizersInRegularizationLosses": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "bn",
    "bn.regularizers",
    "sonnet.BatchNorm",
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.contrib.layers.l2_regularizer",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testSharing": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "bn",
    "len",
    "sonnet.BatchNorm",
    "tensorflow.GraphKeys.GLOBAL_VARIABLES",
    "tensorflow.GraphKeys.UPDATE_OPS",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testUpdateImproveStatistics": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "bn",
    "numpy.abs",
    "numpy.max",
    "numpy.zeros",
    "sonnet.BatchNorm",
    "tensorflow.GraphKeys.UPDATE_OPS",
    "tensorflow.get_collection",
    "tensorflow.global_variables_initializer",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testUpdatesInsideCond": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "ValueError",
    "bn",
    "bn.moving_mean",
    "bn.moving_variance",
    "numpy.ones",
    "numpy.zeros",
    "sonnet.BatchNorm",
    "tensorflow.GraphKeys.UPDATE_OPS",
    "tensorflow.bool",
    "tensorflow.cond",
    "tensorflow.get_collection",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testVariableBatchSize": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "bn",
    "bn._eps",
    "numpy.random.rand",
    "numpy.sqrt",
    "sonnet.BatchNorm",
    "tensorflow.GraphKeys.UPDATE_OPS",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm_v2": {
  "data": {},
  "type": "module"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "set.union",
    "sonnet.python.modules.base.AbstractModule",
    "sonnet.python.modules.conv.SUPPORTED_1D_DATA_FORMATS",
    "sonnet.python.modules.conv.SUPPORTED_2D_DATA_FORMATS",
    "sonnet.python.modules.conv.SUPPORTED_3D_DATA_FORMATS"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2.__init__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.modules.batch_norm_v2.BatchNormV2",
    "sonnet.python.modules.util.check_initializers",
    "sonnet.python.modules.util.check_partitioners",
    "sonnet.python.modules.util.check_regularizers",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2._batch_norm_op": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "tensorflow.cast",
    "tensorflow.nn.batch_normalization",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2._build": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "range",
    "sonnet.python.modules.base.IncompatibleShapeError",
    "sonnet.python.modules.base.NotSupportedError",
    "tensorflow.add_to_collection",
    "tensorflow.bfloat16",
    "tensorflow.control_dependencies",
    "tensorflow.float16",
    "tensorflow.float32",
    "tensorflow.identity"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2._build_scale_offset": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "sonnet.python.modules.batch_norm_v2.create_beta_initializer",
    "sonnet.python.modules.batch_norm_v2.create_gamma_initializer",
    "tensorflow.float16",
    "tensorflow.float32",
    "tensorflow.get_variable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2._build_statistics": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "sonnet.python.modules.batch_norm_v2.create_mean_initializer",
    "sonnet.python.modules.batch_norm_v2.create_variance_initializer",
    "tensorflow.GraphKeys.GLOBAL_VARIABLES",
    "tensorflow.GraphKeys.MOVING_AVERAGE_VARIABLES",
    "tensorflow.get_variable",
    "tensorflow.python.layers.utils.smart_cond"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2._build_statistics.build_batch_stats": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "tensorflow.nn.moments"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2._build_statistics.build_moving_stats": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "tensorflow.cast",
    "tensorflow.identity"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2._build_update_ops": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "tensorflow.python.layers.utils.constant_value",
    "tensorflow.python.layers.utils.smart_cond"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2._build_update_ops.build_no_ops": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "tensorflow.no_op"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2._build_update_ops.build_update_ops": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "tensorflow.python.training.moving_averages.assign_moving_average",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2._fused_batch_norm_op": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "len",
    "numpy.int32",
    "numpy.prod",
    "tensorflow.convert_to_tensor",
    "tensorflow.python.layers.utils.smart_cond",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2._fused_batch_norm_op.moving_average_fused_batch_norm": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "tensorflow.nn.fused_batch_norm"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2._fused_batch_norm_op.use_batch_stats_fused_batch_norm": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "tensorflow.nn.fused_batch_norm"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2.beta": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "property",
    "sonnet.python.modules.base.Error",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2.gamma": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "property",
    "sonnet.python.modules.base.Error",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2.initializers": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2.moving_mean": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "property",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2.moving_variance": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "property",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2.partitioners": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2.regularizers": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm_v2.base": {
  "data": {
   "shadows": "sonnet.python.modules.base"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm_v2.conv": {
  "data": {
   "shadows": "sonnet.python.modules.conv"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm_v2.create_beta_initializer": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "tensorflow.zeros_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.create_gamma_initializer": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "tensorflow.ones_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.create_mean_initializer": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "tensorflow.zeros_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.create_variance_initializer": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "tensorflow.ones_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm_v2.moving_averages": {
  "data": {
   "shadows": "tensorflow.python.training.moving_averages"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm_v2.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm_v2.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm_v2.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm_v2.util": {
  "data": {
   "shadows": "sonnet.python.modules.util"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm_v2.utils": {
  "data": {
   "shadows": "tensorflow.python.layers.utils"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm_v2_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test._get_inputs": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.constant",
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.test16Bit": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "batch_norm",
    "batch_norm.beta.dtype.base_dtype",
    "batch_norm.gamma.dtype.base_dtype",
    "batch_norm.moving_mean.dtype.base_dtype",
    "batch_norm.moving_variance.dtype.base_dtype",
    "sonnet.BatchNormV2",
    "tensorflow.bfloat16",
    "tensorflow.float16",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testCheckStatsDouble": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "bn",
    "bn._decay_rate",
    "bn.moving_mean",
    "bn.moving_variance",
    "len",
    "numpy.ones",
    "numpy.reshape",
    "numpy.zeros",
    "sonnet.BatchNormV2",
    "tensorflow.GraphKeys.UPDATE_OPS",
    "tensorflow.float16",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.global_variables_initializer",
    "tensorflow.name_scope",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testCheckStatsInGraph": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "bn",
    "bn._decay_rate",
    "bn._eps",
    "bn.moving_mean",
    "bn.moving_variance",
    "len",
    "numpy.ones",
    "numpy.reshape",
    "numpy.sqrt",
    "numpy.zeros",
    "sonnet.BatchNormV2",
    "tensorflow.GraphKeys.UPDATE_OPS",
    "tensorflow.bool",
    "tensorflow.control_dependencies",
    "tensorflow.get_collection",
    "tensorflow.global_variables_initializer",
    "tensorflow.identity",
    "tensorflow.placeholder",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testCheckStatsPython": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "bn",
    "bn._decay_rate",
    "bn._eps",
    "bn.moving_mean",
    "bn.moving_variance",
    "len",
    "numpy.ones",
    "numpy.reshape",
    "numpy.sqrt",
    "numpy.zeros",
    "sonnet.BatchNormV2",
    "tensorflow.GraphKeys.UPDATE_OPS",
    "tensorflow.control_dependencies",
    "tensorflow.get_collection",
    "tensorflow.global_variables_initializer",
    "tensorflow.identity",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testCheckpointCompatibility": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "bn1",
    "bn2",
    "bn3",
    "sonnet.BatchNormV2",
    "sonnet.get_saver",
    "sonnet.python.modules.batch_norm_v2_test.os",
    "tensorflow.errors.InvalidArgumentError",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testConstruct": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "batch_norm1",
    "batch_norm1.beta",
    "batch_norm1.gamma",
    "batch_norm2",
    "batch_norm2.beta",
    "batch_norm3",
    "batch_norm3.gamma",
    "batch_norm4",
    "batch_norm4.beta",
    "batch_norm4.gamma",
    "sonnet.BatchNormV2",
    "sonnet.Error",
    "tensorflow.bool",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testDataFormats": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "bn",
    "bn.moving_mean.get_shape",
    "len",
    "sonnet.BatchNormV2",
    "sonnet.IncompatibleShapeError",
    "tensorflow.placeholder_with_default",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testDataType": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "batch_norm",
    "batch_norm.beta.dtype.base_dtype",
    "batch_norm.gamma.dtype.base_dtype",
    "batch_norm.moving_mean.dtype.base_dtype",
    "batch_norm.moving_variance.dtype.base_dtype",
    "sonnet.BatchNormV2",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testFusedBatchNormFloat16": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "bn1",
    "bn1._moving_mean",
    "bn1._moving_variance",
    "bn2",
    "bn2._moving_mean",
    "bn2._moving_variance",
    "numpy.random.random",
    "range",
    "sonnet.BatchNormV2",
    "tensorflow.float16",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testFusedBatchNormV2": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "bn1",
    "bn1._moving_mean",
    "bn1._moving_variance",
    "bn2",
    "bn2._moving_mean",
    "bn2._moving_variance",
    "numpy.random.random",
    "range",
    "sonnet.BatchNormV2",
    "tensorflow.bool",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testInitializers": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "bn",
    "bn.beta.eval",
    "bn.gamma.eval",
    "bn.initializers",
    "bn.moving_mean.eval",
    "bn.moving_variance.eval",
    "numpy.ones",
    "sonnet.BatchNormV2",
    "tensorflow.constant_initializer",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testInvalidInitializerParameters": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "sonnet.BatchNormV2",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testInvalidPartitionerParameters": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "sonnet.BatchNormV2",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testInvalidRegularizationParameters": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "sonnet.BatchNormV2",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testPartitioners": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "bn",
    "bn.partitioners",
    "sonnet.BatchNormV2",
    "tensorflow.fixed_size_partitioner",
    "tensorflow.float32",
    "tensorflow.global_variables",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testRegularizersInRegularizationLosses": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "bn",
    "bn.regularizers",
    "sonnet.BatchNormV2",
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.contrib.layers.l2_regularizer",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testSharing": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "bn",
    "len",
    "sonnet.BatchNormV2",
    "tensorflow.GraphKeys.GLOBAL_VARIABLES",
    "tensorflow.GraphKeys.UPDATE_OPS",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testUpdateImproveStatistics": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "bn",
    "numpy.abs",
    "numpy.max",
    "numpy.zeros",
    "sonnet.BatchNormV2",
    "tensorflow.GraphKeys.UPDATE_OPS",
    "tensorflow.get_collection",
    "tensorflow.global_variables_initializer",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testUpdatesInsideCond": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "ValueError",
    "bn",
    "bn.moving_mean",
    "bn.moving_variance",
    "numpy.ones",
    "numpy.zeros",
    "sonnet.BatchNormV2",
    "tensorflow.GraphKeys.UPDATE_OPS",
    "tensorflow.bool",
    "tensorflow.cond",
    "tensorflow.get_collection",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testVariableBatchSize": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "bn",
    "bn._eps",
    "numpy.random.rand",
    "numpy.sqrt",
    "sonnet.BatchNormV2",
    "tensorflow.GraphKeys.UPDATE_OPS",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm_v2_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm_v2_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm_v2_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm_v2_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm_v2_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm_v2_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.python.modules.batch_norm_v2_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.block_matrix": {
  "data": {},
  "type": "module"
 },
 "sonnet.python.modules.block_matrix.BlockDiagonalMatrix": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "sonnet.python.modules.block_matrix.BlockTriangularMatrix"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.block_matrix.BlockDiagonalMatrix.__init__": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "sonnet.python.modules.block_matrix.BlockDiagonalMatrix",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.block_matrix.BlockTriangularMatrix": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.block_matrix.BlockTriangularMatrix.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "six.moves.xrange",
    "sonnet.python.modules.block_matrix.BlockTriangularMatrix",
    "sum",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.block_matrix.BlockTriangularMatrix._build": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "six.moves.xrange",
    "str",
    "tensorflow.concat",
    "tensorflow.pad",
    "tensorflow.reshape",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.block_matrix.BlockTriangularMatrix._content_blocks": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "sonnet.python.modules.block_matrix.BlockTriangularMatrix._left_zero_blocks": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "sonnet.python.modules.block_matrix.BlockTriangularMatrix._right_zero_blocks": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "sonnet.python.modules.block_matrix.BlockTriangularMatrix.block_shape": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.block_matrix.BlockTriangularMatrix.block_size": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.block_matrix.BlockTriangularMatrix.input_size": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.block_matrix.BlockTriangularMatrix.num_blocks": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.block_matrix.BlockTriangularMatrix.output_shape": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.block_matrix.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.block_matrix.base": {
  "data": {
   "shadows": "sonnet.python.modules.base"
  },
  "type": "import"
 },
 "sonnet.python.modules.block_matrix.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.block_matrix.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.block_matrix.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.block_matrix.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "sonnet.python.modules.block_matrix_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.block_matrix_test.BlockDiagonalMatrixTest": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.block_matrix_test.BlockDiagonalMatrixTest.test_default": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "bdm",
    "bdm.input_size",
    "numpy.array",
    "sonnet.python.modules.block_matrix.BlockDiagonalMatrix",
    "sonnet.python.modules.block_matrix_test.create_input"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.block_matrix_test.BlockDiagonalMatrixTest.test_properties": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "bdm",
    "bdm.block_shape",
    "bdm.block_size",
    "bdm.input_size",
    "bdm.num_blocks",
    "bdm.output_shape",
    "sonnet.python.modules.block_matrix.BlockDiagonalMatrix"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.block_matrix_test.BlockTriangularMatrixTest": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.block_matrix_test.BlockTriangularMatrixTest._check_output_size": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "sonnet.python.modules.block_matrix_test.BlockTriangularMatrixTest.test_batch": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "btm",
    "numpy.array",
    "sonnet.python.modules.block_matrix.BlockTriangularMatrix",
    "sonnet.python.modules.block_matrix_test.create_input"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.block_matrix_test.BlockTriangularMatrixTest.test_lower": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "btm",
    "btm.input_size",
    "numpy.array",
    "sonnet.python.modules.block_matrix.BlockTriangularMatrix",
    "sonnet.python.modules.block_matrix_test.create_input"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.block_matrix_test.BlockTriangularMatrixTest.test_lower_no_diagonal": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "btm",
    "btm.block_size",
    "btm.input_size",
    "btm.num_blocks",
    "numpy.array",
    "sonnet.python.modules.block_matrix.BlockTriangularMatrix",
    "sonnet.python.modules.block_matrix_test.create_input"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.block_matrix_test.BlockTriangularMatrixTest.test_upper": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "btm",
    "btm.block_size",
    "btm.input_size",
    "btm.num_blocks",
    "numpy.array",
    "sonnet.python.modules.block_matrix.BlockTriangularMatrix",
    "sonnet.python.modules.block_matrix_test.create_input"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.block_matrix_test.BlockTriangularMatrixTest.test_upper_no_diagonal": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "btm",
    "btm.block_size",
    "btm.input_size",
    "btm.num_blocks",
    "numpy.array",
    "sonnet.python.modules.block_matrix.BlockTriangularMatrix",
    "sonnet.python.modules.block_matrix_test.create_input"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.block_matrix_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.block_matrix_test.block_matrix": {
  "data": {
   "shadows": "sonnet.python.modules.block_matrix"
  },
  "type": "import"
 },
 "sonnet.python.modules.block_matrix_test.create_input": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.range",
    "tensorflow.reshape",
    "tensorflow.to_float"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.block_matrix_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.block_matrix_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.modules.block_matrix_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.block_matrix_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.clip_gradient": {
  "data": {},
  "type": "module"
 },
 "sonnet.python.modules.clip_gradient._clip_gradient_op": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "tensorflow.python.framework.function.Defun"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.clip_gradient._clip_gradient_op.clip_gradient_backward": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "tensorflow.clip_by_value"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.clip_gradient._clip_gradient_op.clip_gradient_forward": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "sonnet.python.modules.clip_gradient.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.clip_gradient.clip_gradient": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ValueError",
    "clip_gradient_op",
    "sonnet.python.modules.clip_gradient._clip_gradient_op",
    "tensorflow.convert_to_tensor",
    "tensorflow.name_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.clip_gradient.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.clip_gradient.function": {
  "data": {
   "shadows": "tensorflow.python.framework.function"
  },
  "type": "import"
 },
 "sonnet.python.modules.clip_gradient.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.clip_gradient.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.clip_gradient_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.clip_gradient_test.ClipGradientTest": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.clip_gradient_test.ClipGradientTest.testOpClip": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.array",
    "sonnet.clip_gradient",
    "tensorflow.float32",
    "tensorflow.gradients",
    "tensorflow.placeholder",
    "tensorflow.reduce_sum"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.clip_gradient_test.ClipGradientTest.testOpClipDifferentClipValues": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.array",
    "sonnet.clip_gradient",
    "tensorflow.float32",
    "tensorflow.gradients",
    "tensorflow.placeholder",
    "tensorflow.reduce_sum"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.clip_gradient_test.ClipGradientTest.testOpClipDifferentDtypes": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "sonnet.clip_gradient",
    "tensorflow.float16",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.clip_gradient_test.ClipGradientTest.testShape": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "sonnet.clip_gradient",
    "tensorflow.float32",
    "tensorflow.gradients",
    "tensorflow.placeholder",
    "tensorflow.reduce_sum"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.clip_gradient_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.clip_gradient_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.clip_gradient_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.modules.clip_gradient_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.clip_gradient_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.python.modules.clip_gradient_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv": {
  "data": {
   "symbols_in_volume": [
    "sonnet.python.modules.conv.CAUSAL",
    "sonnet.python.modules.conv.DATA_FORMAT_NCDHW",
    "sonnet.python.modules.conv.DATA_FORMAT_NCHW",
    "sonnet.python.modules.conv.DATA_FORMAT_NCW",
    "sonnet.python.modules.conv.DATA_FORMAT_NDHWC",
    "sonnet.python.modules.conv.DATA_FORMAT_NHWC",
    "sonnet.python.modules.conv.DATA_FORMAT_NWC",
    "sonnet.python.modules.conv.FULL",
    "sonnet.python.modules.conv.REVERSE_CAUSAL",
    "sonnet.python.modules.conv.SAME",
    "sonnet.python.modules.conv.VALID"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.conv.ALLOWED_PADDINGS": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "sonnet.python.modules.conv.CAUSAL": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sonnet.python.modules.conv.CONV_OP_ALLOWED_PADDINGS": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "sonnet.python.modules.conv.CausalConv1D": {
  "data": {
   "lineno": 1548,
   "symbols_in_volume": [
    "sonnet.python.modules.conv._ConvND"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv.CausalConv1D.__init__": {
  "data": {
   "lineno": 1560,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.modules.conv.CAUSAL",
    "sonnet.python.modules.conv.CausalConv1D",
    "sonnet.python.modules.conv.DATA_FORMAT_NWC",
    "sonnet.python.modules.conv.SUPPORTED_1D_DATA_FORMATS",
    "sonnet.python.modules.util.deprecation_warning",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv1D": {
  "data": {
   "lineno": 1280,
   "symbols_in_volume": [
    "sonnet.python.modules.base.Transposable",
    "sonnet.python.modules.conv._ConvND"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv.Conv1D.__init__": {
  "data": {
   "lineno": 1286,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.modules.conv.Conv1D",
    "sonnet.python.modules.conv.DATA_FORMAT_NWC",
    "sonnet.python.modules.conv.SAME",
    "sonnet.python.modules.conv.SUPPORTED_1D_DATA_FORMATS",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv1D.transpose": {
  "data": {
   "lineno": 1387,
   "symbols_in_volume": [
    "Conv1DTranspose",
    "any",
    "sonnet.python.modules.base.NotSupportedError"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv1D.transpose.output_shape": {
  "data": {
   "lineno": 1409,
   "symbols_in_volume": [
    "sonnet.python.modules.conv.DATA_FORMAT_NCW"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv1DTranspose": {
  "data": {
   "lineno": 1431,
   "symbols_in_volume": [
    "sonnet.python.modules.base.Transposable",
    "sonnet.python.modules.conv._ConvNDTranspose"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv.Conv1DTranspose.__init__": {
  "data": {
   "lineno": 1439,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.modules.conv.Conv1DTranspose",
    "sonnet.python.modules.conv.DATA_FORMAT_NWC",
    "sonnet.python.modules.conv.SAME",
    "sonnet.python.modules.conv.SUPPORTED_1D_DATA_FORMATS",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv1DTranspose.transpose": {
  "data": {
   "lineno": 1517,
   "symbols_in_volume": [
    "sonnet.python.modules.conv.Conv1D",
    "sonnet.python.modules.conv.DATA_FORMAT_NWC"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv2D": {
  "data": {
   "lineno": 1652,
   "symbols_in_volume": [
    "sonnet.python.modules.base.Transposable",
    "sonnet.python.modules.conv._ConvND"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv.Conv2D.__init__": {
  "data": {
   "lineno": 1658,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.modules.conv.Conv2D",
    "sonnet.python.modules.conv.DATA_FORMAT_NHWC",
    "sonnet.python.modules.conv.SAME",
    "sonnet.python.modules.conv.SUPPORTED_2D_DATA_FORMATS",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv2D.transpose": {
  "data": {
   "lineno": 1760,
   "symbols_in_volume": [
    "Conv2DTranspose",
    "any",
    "sonnet.python.modules.base.NotSupportedError"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv2D.transpose.output_shape": {
  "data": {
   "lineno": 1785,
   "symbols_in_volume": [
    "sonnet.python.modules.conv.DATA_FORMAT_NCHW"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv2DTranspose": {
  "data": {
   "lineno": 1805,
   "symbols_in_volume": [
    "sonnet.python.modules.base.Transposable",
    "sonnet.python.modules.conv._ConvNDTranspose"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv.Conv2DTranspose.__init__": {
  "data": {
   "lineno": 1812,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.modules.conv.Conv2DTranspose",
    "sonnet.python.modules.conv.DATA_FORMAT_NHWC",
    "sonnet.python.modules.conv.SAME",
    "sonnet.python.modules.conv.SUPPORTED_2D_DATA_FORMATS",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv2DTranspose.transpose": {
  "data": {
   "lineno": 1892,
   "symbols_in_volume": [
    "sonnet.python.modules.conv.Conv2D",
    "sonnet.python.modules.conv.DATA_FORMAT_NHWC"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv3D": {
  "data": {
   "lineno": 1923,
   "symbols_in_volume": [
    "sonnet.python.modules.base.Transposable",
    "sonnet.python.modules.conv._ConvND"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv.Conv3D.__init__": {
  "data": {
   "lineno": 1929,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.modules.conv.Conv3D",
    "sonnet.python.modules.conv.DATA_FORMAT_NDHWC",
    "sonnet.python.modules.conv.SAME",
    "sonnet.python.modules.conv.SUPPORTED_3D_DATA_FORMATS",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv3D.transpose": {
  "data": {
   "lineno": 2028,
   "symbols_in_volume": [
    "Conv3DTranspose",
    "any",
    "sonnet.python.modules.base.NotSupportedError"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv3D.transpose.output_shape": {
  "data": {
   "lineno": 2050,
   "symbols_in_volume": [
    "sonnet.python.modules.conv.DATA_FORMAT_NCDHW"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv3DTranspose": {
  "data": {
   "lineno": 2072,
   "symbols_in_volume": [
    "sonnet.python.modules.base.Transposable",
    "sonnet.python.modules.conv._ConvNDTranspose"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv.Conv3DTranspose.__init__": {
  "data": {
   "lineno": 2079,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.modules.conv.Conv3DTranspose",
    "sonnet.python.modules.conv.DATA_FORMAT_NDHWC",
    "sonnet.python.modules.conv.SAME",
    "sonnet.python.modules.conv.SUPPORTED_3D_DATA_FORMATS",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv3DTranspose.transpose": {
  "data": {
   "lineno": 2159,
   "symbols_in_volume": [
    "sonnet.python.modules.conv.Conv3D",
    "sonnet.python.modules.conv.DATA_FORMAT_NDHWC"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.DATA_FORMAT_NCDHW": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "sonnet.python.modules.conv.DATA_FORMAT_NCHW": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "sonnet.python.modules.conv.DATA_FORMAT_NCW": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "sonnet.python.modules.conv.DATA_FORMAT_NDHWC": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "sonnet.python.modules.conv.DATA_FORMAT_NHWC": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "sonnet.python.modules.conv.DATA_FORMAT_NWC": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "sonnet.python.modules.conv.DepthwiseConv2D": {
  "data": {
   "lineno": 2317,
   "symbols_in_volume": [
    "sonnet.python.modules.conv._ConvND"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv.DepthwiseConv2D.__init__": {
  "data": {
   "lineno": 2324,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "sonnet.python.modules.conv.DATA_FORMAT_NHWC",
    "sonnet.python.modules.conv.DepthwiseConv2D",
    "sonnet.python.modules.conv.SAME",
    "sonnet.python.modules.conv.SUPPORTED_2D_DATA_FORMATS",
    "sonnet.python.modules.conv.numbers",
    "super",
    "tensorflow.Dimension"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.DepthwiseConv2D._apply_conv": {
  "data": {
   "lineno": 2469,
   "symbols_in_volume": [
    "tensorflow.nn.depthwise_conv2d"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.DepthwiseConv2D._construct_w": {
  "data": {
   "lineno": 2436,
   "symbols_in_volume": [
    "sonnet.python.modules.conv.create_weight_initializer",
    "tensorflow.get_variable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.DepthwiseConv2D.channel_multiplier": {
  "data": {
   "lineno": 2487,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.FULL": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "sonnet.python.modules.conv.InPlaneConv2D": {
  "data": {
   "lineno": 2182,
   "symbols_in_volume": [
    "sonnet.python.modules.conv._ConvND"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv.InPlaneConv2D.__init__": {
  "data": {
   "lineno": 2190,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.modules.conv.DATA_FORMAT_NHWC",
    "sonnet.python.modules.conv.InPlaneConv2D",
    "sonnet.python.modules.conv.SAME",
    "sonnet.python.modules.conv.SUPPORTED_2D_DATA_FORMATS",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.InPlaneConv2D._apply_conv": {
  "data": {
   "lineno": 2297,
   "symbols_in_volume": [
    "tensorflow.nn.depthwise_conv2d",
    "tensorflow.tile"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.InPlaneConv2D._construct_w": {
  "data": {
   "lineno": 2270,
   "symbols_in_volume": [
    "sonnet.python.modules.conv.create_weight_initializer",
    "tensorflow.get_variable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.REVERSE_CAUSAL": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "sonnet.python.modules.conv.SAME": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "sonnet.python.modules.conv.SUPPORTED_1D_DATA_FORMATS": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "sonnet.python.modules.conv.SUPPORTED_2D_DATA_FORMATS": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "sonnet.python.modules.conv.SUPPORTED_3D_DATA_FORMATS": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "sonnet.python.modules.conv.SeparableConv1D": {
  "data": {
   "lineno": 2720,
   "symbols_in_volume": [
    "sonnet.python.modules.conv._ConvND"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv.SeparableConv1D.__init__": {
  "data": {
   "lineno": 2727,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "sonnet.python.modules.conv.DATA_FORMAT_NWC",
    "sonnet.python.modules.conv.SAME",
    "sonnet.python.modules.conv.SUPPORTED_1D_DATA_FORMATS",
    "sonnet.python.modules.conv.SeparableConv1D",
    "sonnet.python.modules.conv.numbers",
    "super",
    "tensorflow.Dimension"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.SeparableConv1D._apply_conv": {
  "data": {
   "lineno": 2905,
   "symbols_in_volume": [
    "sonnet.python.modules.conv.DATA_FORMAT_NCHW",
    "sonnet.python.modules.conv.DATA_FORMAT_NHWC",
    "sonnet.python.modules.conv.DATA_FORMAT_NWC",
    "tensorflow.expand_dims",
    "tensorflow.nn.separable_conv2d",
    "tensorflow.squeeze"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.SeparableConv1D._construct_w": {
  "data": {
   "lineno": 2857,
   "symbols_in_volume": [
    "sonnet.python.modules.conv.create_weight_initializer",
    "tensorflow.get_variable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.SeparableConv1D.channel_multiplier": {
  "data": {
   "lineno": 2942,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.SeparableConv1D.get_possible_initializer_keys": {
  "data": {
   "lineno": 2853,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.SeparableConv1D.w_dw": {
  "data": {
   "lineno": 2947,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.SeparableConv1D.w_pw": {
  "data": {
   "lineno": 2953,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.SeparableConv2D": {
  "data": {
   "lineno": 2493,
   "symbols_in_volume": [
    "sonnet.python.modules.conv._ConvND"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv.SeparableConv2D.__init__": {
  "data": {
   "lineno": 2500,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "sonnet.python.modules.conv.DATA_FORMAT_NHWC",
    "sonnet.python.modules.conv.SAME",
    "sonnet.python.modules.conv.SUPPORTED_2D_DATA_FORMATS",
    "sonnet.python.modules.conv.SeparableConv2D",
    "sonnet.python.modules.conv.numbers",
    "super",
    "tensorflow.Dimension"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.SeparableConv2D._apply_conv": {
  "data": {
   "lineno": 2679,
   "symbols_in_volume": [
    "tensorflow.nn.separable_conv2d"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.SeparableConv2D._construct_w": {
  "data": {
   "lineno": 2631,
   "symbols_in_volume": [
    "sonnet.python.modules.conv.create_weight_initializer",
    "tensorflow.get_variable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.SeparableConv2D.channel_multiplier": {
  "data": {
   "lineno": 2702,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.SeparableConv2D.get_possible_initializer_keys": {
  "data": {
   "lineno": 2627,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.SeparableConv2D.w_dw": {
  "data": {
   "lineno": 2707,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.SeparableConv2D.w_pw": {
  "data": {
   "lineno": 2713,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.VALID": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sonnet.python.modules.conv._ConvND": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv._ConvND.__init__": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "TypeError",
    "any",
    "isinstance",
    "len",
    "list",
    "numpy.ndarray",
    "sonnet.python.modules.base.IncompatibleShapeError",
    "sonnet.python.modules.base.NotSupportedError",
    "sonnet.python.modules.conv.DATA_FORMAT_NHWC",
    "sonnet.python.modules.conv.SAME",
    "sonnet.python.modules.conv._ConvND",
    "sonnet.python.modules.conv._fill_and_verify_padding",
    "sonnet.python.modules.conv._fill_and_verify_parameter_shape",
    "sonnet.python.modules.conv._find_channel_index",
    "sonnet.python.modules.conv._padding_to_conv_op_padding",
    "sonnet.python.modules.conv.collections",
    "sonnet.python.modules.util.check_initializers",
    "sonnet.python.modules.util.check_partitioners",
    "sonnet.python.modules.util.check_regularizers",
    "super",
    "tensorflow.Tensor",
    "tensorflow.bfloat16.is_compatible_with",
    "tensorflow.convert_to_tensor",
    "tensorflow.float16.is_compatible_with",
    "tensorflow.float32.is_compatible_with",
    "tensorflow.float64.is_compatible_with",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND._apply_conv": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "tensorflow.nn.convolution"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND._apply_mask": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "len",
    "sonnet.python.modules.base.IncompatibleShapeError",
    "tensorflow.expand_dims"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND._build": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "sonnet.python.modules.conv._apply_bias",
    "sonnet.python.modules.conv._verify_inputs",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND._construct_w": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "sonnet.python.modules.conv.create_weight_initializer",
    "tensorflow.get_variable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND._pad_input": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "all",
    "list",
    "map",
    "sonnet.python.modules.conv.VALID",
    "tensorflow.pad"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND._pad_input.pad_amount": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "int",
    "sonnet.python.modules.conv.CAUSAL",
    "sonnet.python.modules.conv.FULL",
    "sonnet.python.modules.conv.REVERSE_CAUSAL",
    "sonnet.python.modules.conv.SAME"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.b": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.clone": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.conv_op_padding": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.data_format": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.get_possible_initializer_keys": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.has_bias": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.initializers": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.input_channels": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.input_shape": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.kernel_shape": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.mask": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.output_channels": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "callable",
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.padding": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.paddings": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.partitioners": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.rate": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.regularizers": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.stride": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "property",
    "sonnet.python.modules.conv._fill_and_one_pad_stride"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.w": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.__init__": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "isinstance",
    "len",
    "sonnet.python.modules.base.IncompatibleShapeError",
    "sonnet.python.modules.base.NotSupportedError",
    "sonnet.python.modules.conv.DATA_FORMAT_NHWC",
    "sonnet.python.modules.conv.SAME",
    "sonnet.python.modules.conv._ConvNDTranspose",
    "sonnet.python.modules.conv._fill_and_one_pad_stride",
    "sonnet.python.modules.conv._fill_and_verify_parameter_shape",
    "sonnet.python.modules.conv._find_channel_index",
    "sonnet.python.modules.conv._verify_conv_op_supported_padding",
    "sonnet.python.modules.conv.collections",
    "sonnet.python.modules.util.check_initializers",
    "sonnet.python.modules.util.check_partitioners",
    "sonnet.python.modules.util.check_regularizers",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose._build": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "len",
    "sonnet.python.modules.base.IncompatibleShapeError",
    "sonnet.python.modules.conv.DATA_FORMAT_NCHW",
    "sonnet.python.modules.conv.DATA_FORMAT_NHWC",
    "sonnet.python.modules.conv.DATA_FORMAT_NWC",
    "sonnet.python.modules.conv._apply_bias",
    "sonnet.python.modules.conv._verify_inputs",
    "tensorflow.expand_dims",
    "tensorflow.nn.conv2d_transpose",
    "tensorflow.nn.conv3d_transpose",
    "tensorflow.squeeze",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose._build._default_transpose_size_wrapper": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "sonnet.python.modules.conv._default_transpose_size"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose._construct_w": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": [
    "sonnet.python.modules.conv.create_weight_initializer",
    "tensorflow.get_variable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose._infer_all_output_dims": {
  "data": {
   "lineno": 1128,
   "symbols_in_volume": [
    "tensorflow.concat",
    "tensorflow.expand_dims",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose._recover_shape_information": {
  "data": {
   "lineno": 1159
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.b": {
  "data": {
   "lineno": 1229,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.conv_op_padding": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.get_possible_initializer_keys": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.has_bias": {
  "data": {
   "lineno": 1247,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.initializers": {
  "data": {
   "lineno": 1252,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.input_channels": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.input_shape": {
  "data": {
   "lineno": 1267,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.kernel_shape": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.output_channels": {
  "data": {
   "lineno": 1185,
   "symbols_in_volume": [
    "callable",
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.output_shape": {
  "data": {
   "lineno": 1204,
   "symbols_in_volume": [
    "callable",
    "property",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.padding": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.partitioners": {
  "data": {
   "lineno": 1257,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.regularizers": {
  "data": {
   "lineno": 1262,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.stride": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.w": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._apply_bias": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "len",
    "sonnet.python.modules.conv.DATA_FORMAT_NCHW",
    "sonnet.python.modules.conv.DATA_FORMAT_NHWC",
    "sonnet.python.modules.conv.create_bias_initializer",
    "tensorflow.get_variable",
    "tensorflow.nn.bias_add",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._default_transpose_size": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "TypeError",
    "_fill_and_verify_parameter_shape",
    "_verify_conv_op_supported_padding",
    "len",
    "sonnet.python.modules.conv.SAME",
    "sonnet.python.modules.conv.VALID",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._fill_and_one_pad_stride": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "sonnet.python.modules.base.IncompatibleShapeError",
    "sonnet.python.modules.conv.DATA_FORMAT_NHWC",
    "sonnet.python.modules.conv._fill_shape",
    "sonnet.python.modules.conv.collections",
    "sonnet.python.modules.conv.numbers",
    "type"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._fill_and_verify_padding": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "isinstance",
    "len",
    "sonnet.python.modules.conv.ALLOWED_PADDINGS",
    "sonnet.python.modules.conv.numbers",
    "sonnet.python.modules.conv.six",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._fill_and_verify_parameter_shape": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "TypeError",
    "sonnet.python.modules.base.IncompatibleShapeError",
    "sonnet.python.modules.conv._fill_shape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._fill_shape": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "isinstance",
    "len",
    "sonnet.python.modules.conv.numbers",
    "tensorflow.Dimension",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._find_channel_index": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "ValueError",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._padding_to_conv_op_padding": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "isinstance",
    "sonnet.python.modules.conv.SAME",
    "sonnet.python.modules.conv.VALID",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._verify_conv_op_supported_padding": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.modules.conv.CONV_OP_ALLOWED_PADDINGS"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv._verify_inputs": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "sonnet.python.modules.base.IncompatibleShapeError",
    "sonnet.python.modules.base.UnderspecifiedError",
    "tensorflow.bfloat16.is_compatible_with",
    "tensorflow.float16.is_compatible_with",
    "tensorflow.float32.is_compatible_with",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv.base": {
  "data": {
   "shadows": "sonnet.python.modules.base"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv.create_bias_initializer": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "tensorflow.float32",
    "tensorflow.zeros_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.create_weight_initializer": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "numpy.prod",
    "sonnet.python.modules.conv.math",
    "tensorflow.float32",
    "tensorflow.truncated_normal_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv.util": {
  "data": {
   "shadows": "sonnet.python.modules.util"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv_gpu_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "sonnet.python.modules.conv_gpu_test.collections",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.conv_gpu_test.CausalConv1DTestDataFormats": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "sonnet.python.modules.conv_gpu_test.Conv1DInput",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv_gpu_test.CausalConv1DTestDataFormats.checkEquality": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "tensorflow.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.CausalConv1DTestDataFormats.setUp": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "sonnet.python.modules.conv_gpu_test.CausalConv1DTestDataFormats",
    "super",
    "tensorflow.python.platform.test.is_gpu_available",
    "type"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.CausalConv1DTestDataFormats.testCausalConv1DDataFormats": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv_ncw",
    "conv_nwc",
    "func",
    "numpy.float32",
    "numpy.random.random",
    "sonnet.CausalConv1D",
    "sonnet.python.modules.conv_gpu_test.create_custom_field_getter",
    "sonnet.python.modules.conv_gpu_test.create_initializers",
    "sonnet.python.modules.conv_gpu_test.functools",
    "tensorflow.constant",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.CausalConv1DTestDataFormats.testCausalConv1DDataFormatsBatchNorm": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "func",
    "numpy.float32",
    "numpy.random.random",
    "seq_ncw",
    "seq_nwc",
    "seq_nwc.layers",
    "sonnet.python.modules.conv_gpu_test.create_custom_field_getter",
    "tensorflow.constant",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.CausalConv1DTestDataFormats.testCausalConv1DDataFormatsBatchNorm.func": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "sonnet.BatchNorm",
    "sonnet.CausalConv1D",
    "sonnet.Sequential",
    "sonnet.python.modules.conv_gpu_test.create_initializers",
    "sonnet.python.modules.conv_gpu_test.functools"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv1DInput": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sonnet.python.modules.conv_gpu_test.Conv1DTestDataFormats": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "sonnet.python.modules.conv_gpu_test.Conv1DInput",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv_gpu_test.Conv1DTestDataFormats.checkEquality": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "tensorflow.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv1DTestDataFormats.setUp": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "sonnet.python.modules.conv_gpu_test.Conv1DTestDataFormats",
    "super",
    "tensorflow.python.platform.test.is_gpu_available",
    "type"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv1DTestDataFormats.testConv1DDataFormats": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv_nwc",
    "func",
    "numpy.float32",
    "numpy.random.random",
    "sonnet.Conv1D",
    "sonnet.python.modules.conv_gpu_test.create_custom_field_getter",
    "sonnet.python.modules.conv_gpu_test.create_initializers",
    "sonnet.python.modules.conv_gpu_test.functools",
    "tensorflow.constant",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv1DTestDataFormats.testConv1DDataFormatsBatchNorm": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "func",
    "numpy.float32",
    "numpy.random.random",
    "seq_ncw",
    "seq_nwc",
    "seq_nwc.layers",
    "sonnet.python.modules.conv_gpu_test.create_custom_field_getter",
    "tensorflow.constant",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv1DTestDataFormats.testConv1DDataFormatsBatchNorm.func": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "sonnet.BatchNorm",
    "sonnet.Conv1D",
    "sonnet.Sequential",
    "sonnet.python.modules.conv_gpu_test.create_initializers",
    "sonnet.python.modules.conv_gpu_test.functools"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv1DTransposeTestDataFormats": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "sonnet.python.modules.conv_gpu_test.Conv1DInput",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv_gpu_test.Conv1DTransposeTestDataFormats.checkEquality": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "tensorflow.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv1DTransposeTestDataFormats.setUp": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "sonnet.python.modules.conv_gpu_test.Conv1DTransposeTestDataFormats",
    "super",
    "tensorflow.python.platform.test.is_gpu_available",
    "type"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv1DTransposeTestDataFormats.testConv1DTransposeDataFormats": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv_ncw",
    "conv_nwc",
    "func",
    "int",
    "numpy.ceil",
    "numpy.float32",
    "numpy.random.random",
    "sonnet.Conv1DTranspose",
    "sonnet.python.modules.conv_gpu_test.create_custom_field_getter",
    "sonnet.python.modules.conv_gpu_test.create_initializers",
    "sonnet.python.modules.conv_gpu_test.functools",
    "tensorflow.constant",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv1DTransposeTestDataFormats.testConv1DTransposeDataFormatsBatchNorm": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "func",
    "numpy.float32",
    "numpy.random.random",
    "seq_ncw",
    "seq_nwc",
    "seq_nwc.layers",
    "sonnet.python.modules.conv_gpu_test.create_custom_field_getter",
    "tensorflow.constant",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv1DTransposeTestDataFormats.testConv1DTransposeDataFormatsBatchNorm.func": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "sonnet.BatchNorm",
    "sonnet.Conv1DTranspose",
    "sonnet.Sequential",
    "sonnet.python.modules.conv_gpu_test.create_initializers",
    "sonnet.python.modules.conv_gpu_test.functools"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv2DInput": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "sonnet.python.modules.conv_gpu_test.Conv2DTestDataFormats": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "sonnet.python.modules.conv_gpu_test.Conv2DInput",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv_gpu_test.Conv2DTestDataFormats.checkEquality": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "tensorflow.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv2DTestDataFormats.setUp": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "sonnet.python.modules.conv_gpu_test.Conv2DTestDataFormats",
    "super",
    "tensorflow.python.platform.test.is_gpu_available",
    "type"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv2DTestDataFormats.testConv2DDataFormats": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv_nchw",
    "conv_nhwc",
    "func",
    "numpy.float32",
    "numpy.random.random",
    "sonnet.Conv2D",
    "sonnet.python.modules.conv_gpu_test.create_custom_field_getter",
    "sonnet.python.modules.conv_gpu_test.create_initializers",
    "sonnet.python.modules.conv_gpu_test.functools",
    "tensorflow.constant",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv2DTestDataFormats.testConv2DDataFormatsBatchNorm": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "func",
    "numpy.float32",
    "numpy.random.random",
    "seq_nchw",
    "seq_nhwc",
    "seq_nhwc.layers",
    "sonnet.python.modules.conv_gpu_test.create_custom_field_getter",
    "tensorflow.constant",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv2DTestDataFormats.testConv2DDataFormatsBatchNorm.func": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "sonnet.BatchNorm",
    "sonnet.Conv2D",
    "sonnet.Sequential",
    "sonnet.python.modules.conv_gpu_test.create_initializers",
    "sonnet.python.modules.conv_gpu_test.functools"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv2DTransposeTestDataFormats": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "sonnet.python.modules.conv_gpu_test.Conv2DInput",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv_gpu_test.Conv2DTransposeTestDataFormats.checkEquality": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "tensorflow.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv2DTransposeTestDataFormats.setUp": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "sonnet.python.modules.conv_gpu_test.Conv2DTransposeTestDataFormats",
    "super",
    "tensorflow.python.platform.test.is_gpu_available",
    "type"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv2DTransposeTestDataFormats.testConv2DTransposeDataFormats": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv_nchw",
    "conv_nhwc",
    "func",
    "int",
    "numpy.ceil",
    "numpy.float32",
    "numpy.random.random",
    "sonnet.Conv2DTranspose",
    "sonnet.python.modules.conv_gpu_test.create_custom_field_getter",
    "sonnet.python.modules.conv_gpu_test.create_initializers",
    "sonnet.python.modules.conv_gpu_test.functools",
    "tensorflow.constant",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv2DTransposeTestDataFormats.testConv2DTransposeDataFormatsBatchNorm": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "func",
    "numpy.float32",
    "numpy.random.random",
    "seq_nchw",
    "seq_nhwc",
    "seq_nhwc.layers",
    "sonnet.python.modules.conv_gpu_test.create_custom_field_getter",
    "tensorflow.constant",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv2DTransposeTestDataFormats.testConv2DTransposeDataFormatsBatchNorm.func": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "sonnet.BatchNorm",
    "sonnet.Conv2DTranspose",
    "sonnet.Sequential",
    "sonnet.python.modules.conv_gpu_test.create_initializers",
    "sonnet.python.modules.conv_gpu_test.functools"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv3DInput": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sonnet.python.modules.conv_gpu_test.Conv3DTestDataFormats": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "sonnet.python.modules.conv_gpu_test.Conv3DInput",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv_gpu_test.Conv3DTestDataFormats.checkEquality": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "tensorflow.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv3DTestDataFormats.setUp": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "sonnet.python.modules.conv_gpu_test.Conv3DTestDataFormats",
    "super",
    "tensorflow.python.platform.test.is_gpu_available",
    "type"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv3DTestDataFormats.testConv3DDataFormats": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv_ncdhw",
    "conv_ndhwc",
    "func",
    "numpy.float32",
    "numpy.random.random",
    "sonnet.Conv3D",
    "sonnet.python.modules.conv_gpu_test.create_custom_field_getter",
    "sonnet.python.modules.conv_gpu_test.create_initializers",
    "sonnet.python.modules.conv_gpu_test.functools",
    "tensorflow.constant",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv3DTestDataFormats.testConv3DDataFormatsBatchNorm": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "func",
    "numpy.float32",
    "numpy.random.random",
    "seq_ncdhw",
    "seq_ndhwc",
    "seq_ndhwc.layers",
    "sonnet.python.modules.conv_gpu_test.create_custom_field_getter",
    "tensorflow.constant",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv3DTestDataFormats.testConv3DDataFormatsBatchNorm.func": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "sonnet.BatchNorm",
    "sonnet.Conv3D",
    "sonnet.Sequential",
    "sonnet.python.modules.conv_gpu_test.create_initializers",
    "sonnet.python.modules.conv_gpu_test.functools"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv3DTransposeTestDataFormats": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "sonnet.python.modules.conv_gpu_test.Conv3DInput",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv_gpu_test.Conv3DTransposeTestDataFormats.checkEquality": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "tensorflow.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv3DTransposeTestDataFormats.setUp": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "sonnet.python.modules.conv_gpu_test.Conv3DTransposeTestDataFormats",
    "super",
    "tensorflow.python.platform.test.is_gpu_available",
    "type"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv3DTransposeTestDataFormats.testConv3DTransposeDataFormats": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv_ncdhw",
    "conv_ndhwc",
    "func",
    "int",
    "numpy.ceil",
    "numpy.float32",
    "numpy.random.random",
    "sonnet.Conv3DTranspose",
    "sonnet.python.modules.conv_gpu_test.create_custom_field_getter",
    "sonnet.python.modules.conv_gpu_test.create_initializers",
    "sonnet.python.modules.conv_gpu_test.functools",
    "tensorflow.constant",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv3DTransposeTestDataFormats.testConv3DTransposeDataFormatsBatchNorm": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "func",
    "numpy.float32",
    "numpy.random.random",
    "seq_ncdhw",
    "seq_ndhwc",
    "seq_ndhwc.layers",
    "sonnet.python.modules.conv_gpu_test.create_custom_field_getter",
    "tensorflow.constant",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv3DTransposeTestDataFormats.testConv3DTransposeDataFormatsBatchNorm.func": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "sonnet.BatchNorm",
    "sonnet.Conv3DTranspose",
    "sonnet.Sequential",
    "sonnet.python.modules.conv_gpu_test.create_initializers",
    "sonnet.python.modules.conv_gpu_test.functools"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv_gpu_test.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv_gpu_test.create_custom_field_getter": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.create_custom_field_getter.custom_getter": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.create_initializers": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "tensorflow.constant_initializer",
    "tensorflow.truncated_normal_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv_gpu_test.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv_gpu_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv_gpu_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv_gpu_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv_gpu_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv_gpu_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv_gpu_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "sonnet.CAUSAL",
    "sonnet.FULL",
    "sonnet.REVERSE_CAUSAL",
    "sonnet.SAME",
    "sonnet.VALID",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.conv_test.CausalConv1DTest": {
  "data": {
   "lineno": 2136,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv_test.CausalConv1DTest.testClone": {
  "data": {
   "lineno": 2257,
   "symbols_in_volume": [
    "clone1",
    "clone1.module_name",
    "clone1.output_channels",
    "clone1.variable_scope.name",
    "clone2",
    "clone2.module_name",
    "clone2.variable_scope.name",
    "len",
    "net",
    "net.clone",
    "net.module_name",
    "net.output_channels",
    "net.variable_scope.name",
    "sonnet.CausalConv1D",
    "tensorflow.GraphKeys.TRAINABLE_VARIABLES",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.placeholder",
    "tensorflow.trainable_variables"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.CausalConv1DTest.testComputation": {
  "data": {
   "lineno": 2138,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w",
    "numpy.array",
    "numpy.float32",
    "numpy.ones",
    "numpy.reshape",
    "sonnet.CausalConv1D",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.CausalConv1DTest.testComputationDilated": {
  "data": {
   "lineno": 2190,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w",
    "numpy.array",
    "numpy.float32",
    "numpy.ones",
    "numpy.reshape",
    "sonnet.CausalConv1D",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.CausalConv1DTest.testComputationStrided": {
  "data": {
   "lineno": 2164,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w",
    "numpy.array",
    "numpy.float32",
    "numpy.ones",
    "numpy.reshape",
    "sonnet.CausalConv1D",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.CausalConv1DTest.testDataFormatNotSupported": {
  "data": {
   "lineno": 2292,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.CausalConv1D",
    "sonnet.python.modules.conv.SUPPORTED_1D_DATA_FORMATS",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.CausalConv1DTest.testSharing": {
  "data": {
   "lineno": 2217,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w",
    "conv1.w.assign",
    "numpy.float32",
    "numpy.random.randn",
    "sonnet.CausalConv1D",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest": {
  "data": {
   "lineno": 1313,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testClone": {
  "data": {
   "lineno": 1739,
   "symbols_in_volume": [
    "clone1",
    "clone1.module_name",
    "clone1.output_channels",
    "clone1.variable_scope.name",
    "clone2",
    "clone2.module_name",
    "clone2.variable_scope.name",
    "len",
    "net",
    "net.clone",
    "net.module_name",
    "net.output_channels",
    "net.variable_scope.name",
    "sonnet.Conv1D",
    "tensorflow.GraphKeys.TRAINABLE_VARIABLES",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.placeholder",
    "tensorflow.trainable_variables"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testComputation": {
  "data": {
   "lineno": 1569,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "conv1",
    "conv1.b",
    "conv1.w",
    "numpy.asarray",
    "numpy.float32",
    "numpy.ones",
    "sonnet.CAUSAL",
    "sonnet.Conv1D",
    "sonnet.FULL",
    "sonnet.REVERSE_CAUSAL",
    "sonnet.SAME",
    "sonnet.VALID",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "sonnet.python.modules.conv_test.itertools",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testDataFormatNotSupported": {
  "data": {
   "lineno": 1774,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.Conv1D",
    "sonnet.python.modules.conv.SUPPORTED_1D_DATA_FORMATS",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testInitializerMutation": {
  "data": {
   "lineno": 1532,
   "symbols_in_volume": [
    "conv1",
    "dict",
    "sonnet.Conv1D",
    "tensorflow.constant_initializer",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testInitializers": {
  "data": {
   "lineno": 1490,
   "symbols_in_volume": [
    "TypeError",
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.b.eval",
    "conv1.w",
    "conv1.w.eval",
    "numpy.float32",
    "numpy.full",
    "sonnet.Conv1D",
    "sonnet.SAME",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "sonnet.python.modules.conv_test.random",
    "tensorflow.float32",
    "tensorflow.ones",
    "tensorflow.placeholder",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testInputTypeError": {
  "data": {
   "lineno": 1470,
   "symbols_in_volume": [
    "TypeError",
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "numpy.ones",
    "sonnet.Conv1D",
    "sonnet.VALID",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "tensorflow.constant",
    "tensorflow.float64",
    "tensorflow.uint32"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testKernelShape": {
  "data": {
   "lineno": 1405,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "sonnet.Conv1D",
    "sonnet.IncompatibleShapeError"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testMask1D": {
  "data": {
   "lineno": 1638,
   "symbols_in_volume": [
    "conv1",
    "conv1.w",
    "numpy.array",
    "numpy.float32",
    "numpy.ones",
    "numpy.reshape",
    "sonnet.Conv1D",
    "sonnet.VALID",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testMask2D": {
  "data": {
   "lineno": 1655,
   "symbols_in_volume": [
    "conv1",
    "conv1.w",
    "numpy.array",
    "numpy.float32",
    "numpy.ones",
    "numpy.reshape",
    "sonnet.Conv1D",
    "sonnet.VALID",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testMask3D": {
  "data": {
   "lineno": 1672,
   "symbols_in_volume": [
    "conv1",
    "conv1.w",
    "numpy.array",
    "numpy.float32",
    "numpy.ones",
    "numpy.reshape",
    "sonnet.Conv1D",
    "sonnet.VALID",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testMaskErrorIfIncorrectDtype": {
  "data": {
   "lineno": 1728,
   "symbols_in_volume": [
    "TypeError",
    "sonnet.Conv1D",
    "str",
    "tensorflow.constant",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testMaskErrorIncompatibleRank1": {
  "data": {
   "lineno": 1689,
   "symbols_in_volume": [
    "numpy.ones",
    "sonnet.Conv1D",
    "sonnet.Error",
    "str",
    "tensorflow.constant",
    "tensorflow.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testMaskErrorIncompatibleRank2": {
  "data": {
   "lineno": 1702,
   "symbols_in_volume": [
    "numpy.ones",
    "sonnet.Conv1D",
    "sonnet.Error",
    "str",
    "tensorflow.constant",
    "tensorflow.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testMaskErrorIncompatibleRank3": {
  "data": {
   "lineno": 1715,
   "symbols_in_volume": [
    "numpy.ones",
    "sonnet.Conv1D",
    "sonnet.Error",
    "str",
    "tensorflow.constant",
    "tensorflow.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testRateAndStrideError": {
  "data": {
   "lineno": 1460,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "sonnet.Conv1D",
    "sonnet.NotSupportedError"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testRateError": {
  "data": {
   "lineno": 1439,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "sonnet.Conv1D",
    "sonnet.IncompatibleShapeError"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testRegularizersInRegularizationLosses": {
  "data": {
   "lineno": 1549,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "sonnet.Conv1D",
    "sonnet.python.modules.conv_test.create_regularizers",
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testShapes": {
  "data": {
   "lineno": 1315,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "conv1",
    "conv1.b.get_shape",
    "conv1.w.get_shape",
    "sonnet.Conv1D",
    "sonnet.python.modules.conv.ALLOWED_PADDINGS",
    "sonnet.python.modules.conv.DATA_FORMAT_NWC",
    "sonnet.python.modules.conv.SUPPORTED_1D_DATA_FORMATS",
    "sonnet.python.modules.conv_test._PADDINGS_EXPECTED_SHAPE_TRANSFORMS",
    "sonnet.python.modules.conv_test.itertools",
    "sonnet.python.modules.conv_test.random",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testShapesNotKnown": {
  "data": {
   "lineno": 1368,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w",
    "numpy.zeros",
    "sonnet.Conv1D",
    "sonnet.SAME",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testSharing": {
  "data": {
   "lineno": 1601,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w",
    "conv1.w.assign",
    "numpy.float32",
    "numpy.random.randn",
    "sonnet.Conv1D",
    "sonnet.SAME",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testStrideError": {
  "data": {
   "lineno": 1420,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "sonnet.Conv1D",
    "sonnet.IncompatibleShapeError"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTransposeTest": {
  "data": {
   "lineno": 1785,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "enumerate",
    "sonnet.SAME",
    "sonnet.VALID",
    "tensorflow.test.TestCase",
    "tuple",
    "zip"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv_test.Conv1DTransposeTest.testInitializerMutation": {
  "data": {
   "lineno": 2117,
   "symbols_in_volume": [
    "conv1",
    "dict",
    "sonnet.Conv1DTranspose",
    "tensorflow.Dimension",
    "tensorflow.constant_initializer",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTransposeTest.testInputTypeError": {
  "data": {
   "lineno": 1960,
   "symbols_in_volume": [
    "TypeError",
    "absl.testing.parameterized.parameters",
    "conv1",
    "numpy.ones",
    "sonnet.Conv1DTranspose",
    "tensorflow.constant",
    "tensorflow.float64",
    "tensorflow.uint32",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTransposeTest.testKernelShape": {
  "data": {
   "lineno": 1886,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "sonnet.Conv1DTranspose",
    "sonnet.IncompatibleShapeError",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTransposeTest.testKernelsNotSpecified": {
  "data": {
   "lineno": 1811,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.Conv1DTranspose"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTransposeTest.testMissingBatchSize": {
  "data": {
   "lineno": 1816,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "conv1",
    "numpy.zeros",
    "sonnet.Conv1DTranspose",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTransposeTest.testShapesSame": {
  "data": {
   "lineno": 1846,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "conv1",
    "conv1.b.get_shape",
    "conv1.w.get_shape",
    "sonnet.Conv1DTranspose",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTransposeTest.testSharing": {
  "data": {
   "lineno": 1983,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "conv1",
    "conv1.b",
    "conv1.w",
    "conv1.w.assign",
    "numpy.float32",
    "numpy.random.randn",
    "sonnet.Conv1DTranspose",
    "tensorflow.constant",
    "tensorflow.variables_initializer",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTransposeTest.testStrideError": {
  "data": {
   "lineno": 1924,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "sonnet.Conv1DTranspose",
    "sonnet.IncompatibleShapeError",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTransposeTest.testTransposeNCW": {
  "data": {
   "lineno": 2070,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "conv1",
    "conv1.conv_op_padding",
    "conv1.input_shape",
    "conv1.kernel_shape",
    "conv1.output_channels",
    "conv1.stride",
    "conv1_transpose",
    "conv1_transpose.conv_op_padding",
    "conv1_transpose.kernel_shape",
    "conv1_transpose.output_shape",
    "conv1_transpose.stride",
    "conv1_transpose.transpose",
    "numpy.float32",
    "numpy.random.randn",
    "sonnet.Conv1DTranspose",
    "sonnet.NotConnectedError",
    "sonnet.python.modules.conv.DATA_FORMAT_NCW",
    "tensorflow.constant",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTransposeTest.testTransposeNWC": {
  "data": {
   "lineno": 2023,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "conv1",
    "conv1.conv_op_padding",
    "conv1.input_shape",
    "conv1.kernel_shape",
    "conv1.output_channels",
    "conv1.stride",
    "conv1_transpose",
    "conv1_transpose.output_shape",
    "numpy.float32",
    "numpy.random.randn",
    "sonnet.Conv1DTranspose",
    "sonnet.NotConnectedError",
    "sonnet.python.modules.conv.DATA_FORMAT_NWC",
    "tensorflow.constant",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testAtrousConvSame": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w",
    "numpy.array",
    "numpy.float32",
    "numpy.ones",
    "numpy.reshape",
    "sonnet.Conv2D",
    "sonnet.SAME",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testAtrousConvValid": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w",
    "numpy.float32",
    "numpy.ones",
    "numpy.reshape",
    "sonnet.Conv2D",
    "sonnet.VALID",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testClone": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "clone1",
    "clone1.module_name",
    "clone1.output_channels",
    "clone1.variable_scope.name",
    "clone2",
    "clone2.module_name",
    "clone2.variable_scope.name",
    "len",
    "net",
    "net.module_name",
    "net.output_channels",
    "net.variable_scope.name",
    "sonnet.Conv2D",
    "tensorflow.GraphKeys.TRAINABLE_VARIABLES",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.placeholder",
    "tensorflow.trainable_variables"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testComputation": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "conv1",
    "conv1.b",
    "conv1.w",
    "numpy.asarray",
    "numpy.float32",
    "numpy.ones",
    "sonnet.CAUSAL",
    "sonnet.Conv2D",
    "sonnet.FULL",
    "sonnet.REVERSE_CAUSAL",
    "sonnet.SAME",
    "sonnet.VALID",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "sonnet.python.modules.conv_test.itertools",
    "tensorflow.constant",
    "tensorflow.squeeze",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testDataFormatNotSupported": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.Conv2D",
    "sonnet.python.modules.conv.SUPPORTED_2D_DATA_FORMATS",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testInitializerMutation": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "conv1",
    "dict",
    "sonnet.Conv2D",
    "tensorflow.constant_initializer",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testInitializers": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "TypeError",
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.b.eval",
    "conv1.w",
    "conv1.w.eval",
    "numpy.float32",
    "numpy.full",
    "sonnet.Conv2D",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "sonnet.python.modules.conv_test.random",
    "tensorflow.float32",
    "tensorflow.ones",
    "tensorflow.placeholder",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testInputTypeError": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "TypeError",
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "numpy.ones",
    "sonnet.Conv2D",
    "sonnet.SAME",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "tensorflow.constant",
    "tensorflow.float64",
    "tensorflow.uint32"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testKernelShape": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "sonnet.Conv2D",
    "sonnet.IncompatibleShapeError"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testMask1D": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "conv1",
    "conv1.w",
    "numpy.float32",
    "numpy.ones",
    "sonnet.Conv2D",
    "sonnet.VALID",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testMask2D": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "conv1",
    "conv1.w",
    "numpy.array",
    "numpy.float32",
    "numpy.reshape",
    "sonnet.Conv2D",
    "sonnet.VALID",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testMask3D": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "conv1",
    "conv1.w",
    "numpy.float32",
    "numpy.ones",
    "sonnet.Conv2D",
    "sonnet.VALID",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testMask4D": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "conv1",
    "conv1.w",
    "numpy.array",
    "numpy.float32",
    "numpy.ones",
    "numpy.reshape",
    "sonnet.Conv2D",
    "sonnet.VALID",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testMaskErrorIfIncorrectDtype": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "TypeError",
    "sonnet.Conv2D",
    "str",
    "tensorflow.constant",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testMaskErrorIncompatibleRank1": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "numpy.ones",
    "sonnet.Conv2D",
    "sonnet.Error",
    "str",
    "tensorflow.constant",
    "tensorflow.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testMaskErrorIncompatibleRank2": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "numpy.ones",
    "sonnet.Conv2D",
    "sonnet.Error",
    "str",
    "tensorflow.constant",
    "tensorflow.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testMaskErrorIncompatibleRank3": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "numpy.ones",
    "sonnet.Conv2D",
    "sonnet.Error",
    "str",
    "tensorflow.constant",
    "tensorflow.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testMaskErrorIncompatibleRank4": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "numpy.ones",
    "sonnet.Conv2D",
    "sonnet.Error",
    "str",
    "tensorflow.constant",
    "tensorflow.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testRateAndStrideError": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "sonnet.Conv2D",
    "sonnet.NotSupportedError"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testRateError": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "sonnet.Conv2D",
    "sonnet.IncompatibleShapeError"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testRegularizersInRegularizationLosses": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "sonnet.Conv2D",
    "sonnet.python.modules.conv_test.create_regularizers",
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testShapes": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "conv1",
    "conv1.b.get_shape",
    "conv1.w.get_shape",
    "sonnet.Conv2D",
    "sonnet.python.modules.conv.ALLOWED_PADDINGS",
    "sonnet.python.modules.conv.DATA_FORMAT_NHWC",
    "sonnet.python.modules.conv.SUPPORTED_2D_DATA_FORMATS",
    "sonnet.python.modules.conv_test._PADDINGS_EXPECTED_SHAPE_TRANSFORMS",
    "sonnet.python.modules.conv_test.itertools",
    "sonnet.python.modules.conv_test.random",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testShapesNotKnown": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w",
    "numpy.zeros",
    "sonnet.Conv2D",
    "sonnet.SAME",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testShapesNotKnownAtrous": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "sonnet.Conv2D",
    "sonnet.SAME",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testSharing": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w",
    "conv1.w.assign",
    "numpy.float32",
    "numpy.random.randn",
    "sonnet.Conv2D",
    "sonnet.SAME",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testStrideError": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "sonnet.Conv2D",
    "sonnet.IncompatibleShapeError"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testTransposition": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "net",
    "net.scope_name",
    "net.transpose",
    "net_transpose",
    "sonnet.Conv2D",
    "sonnet.NotConnectedError",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTransposeTest": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv_test.Conv2DTransposeTest.setUp": {
  "data": {
   "lineno": 1069,
   "symbols_in_volume": [
    "sonnet.SAME",
    "sonnet.python.modules.conv_test.Conv2DTransposeTest",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTransposeTest.testInitializerMutation": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "conv1",
    "dict",
    "sonnet.Conv2DTranspose",
    "tensorflow.constant_initializer",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTransposeTest.testKernelsNotSpecified": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.Conv2DTranspose"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTransposeTest.testOutputShapeConsistency": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b.get_shape",
    "conv1.w.get_shape",
    "sonnet.Conv2DTranspose",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTransposeTest.testOutputShapeInteger": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "sonnet.Conv2DTranspose",
    "sonnet.SAME",
    "tensorflow.Dimension",
    "tensorflow.errors.InvalidArgumentError",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTransposeTest.testTransposeNCHW": {
  "data": {
   "lineno": 1259,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv2_transpose",
    "conv2_transpose.conv_op_padding",
    "conv2_transpose.kernel_shape",
    "conv2_transpose.output_shape",
    "conv2_transpose.stride",
    "conv2_transpose.transpose",
    "numpy.float32",
    "numpy.random.randn",
    "sonnet.Conv2DTranspose",
    "sonnet.NotConnectedError",
    "sonnet.VALID",
    "sonnet.python.modules.conv.DATA_FORMAT_NCHW",
    "tensorflow.TensorShape",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTransposeTest.testTransposeNHWC": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv2_transpose",
    "conv2_transpose.output_shape",
    "numpy.float32",
    "numpy.random.randn",
    "sonnet.Conv2DTranspose",
    "sonnet.NotConnectedError",
    "sonnet.VALID",
    "sonnet.python.modules.conv.DATA_FORMAT_NHWC",
    "tensorflow.TensorShape",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTransposeTest.testTransposition": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "net",
    "net.scope_name",
    "net.transpose",
    "net_transpose",
    "sonnet.Conv2DTranspose",
    "sonnet.NotConnectedError",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest": {
  "data": {
   "lineno": 3528,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testBiasInitializerIsZeroByDefault": {
  "data": {
   "lineno": 3741,
   "symbols_in_volume": [
    "conv1",
    "conv1.b",
    "conv1.b.eval",
    "conv1.w",
    "numpy.float32",
    "numpy.zeros",
    "sonnet.Conv3D",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testClone": {
  "data": {
   "lineno": 4043,
   "symbols_in_volume": [
    "clone1",
    "clone1.module_name",
    "clone1.output_channels",
    "clone1.variable_scope.name",
    "clone2",
    "clone2.module_name",
    "clone2.variable_scope.name",
    "len",
    "net",
    "net.clone",
    "net.module_name",
    "net.output_channels",
    "net.variable_scope.name",
    "sonnet.Conv3D",
    "tensorflow.GraphKeys.TRAINABLE_VARIABLES",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.placeholder",
    "tensorflow.trainable_variables"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testComputationSame": {
  "data": {
   "lineno": 3779,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w",
    "numpy.asarray",
    "numpy.float32",
    "numpy.ones",
    "numpy.reshape",
    "sonnet.Conv3D",
    "sonnet.SAME",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testComputationValid": {
  "data": {
   "lineno": 3817,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w",
    "numpy.asarray",
    "numpy.float32",
    "numpy.ones",
    "numpy.reshape",
    "sonnet.Conv3D",
    "sonnet.VALID",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testDataFormatNotSupported": {
  "data": {
   "lineno": 4078,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.Conv3D",
    "sonnet.python.modules.conv.SUPPORTED_3D_DATA_FORMATS",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testInitializerMutation": {
  "data": {
   "lineno": 3724,
   "symbols_in_volume": [
    "conv1",
    "dict",
    "sonnet.Conv3D",
    "tensorflow.constant_initializer",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testInitializers": {
  "data": {
   "lineno": 3689,
   "symbols_in_volume": [
    "TypeError",
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.b.eval",
    "conv1.w",
    "conv1.w.eval",
    "numpy.float32",
    "numpy.full",
    "sonnet.Conv3D",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "sonnet.python.modules.conv_test.random",
    "tensorflow.float32",
    "tensorflow.ones",
    "tensorflow.placeholder",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testInputTypeError": {
  "data": {
   "lineno": 3672,
   "symbols_in_volume": [
    "TypeError",
    "conv1",
    "numpy.ones",
    "sonnet.Conv3D",
    "sonnet.SAME",
    "tensorflow.constant",
    "tensorflow.constant_initializer",
    "tensorflow.float64",
    "tensorflow.uint32"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testKernelShape": {
  "data": {
   "lineno": 3611,
   "symbols_in_volume": [
    "sonnet.Conv3D",
    "sonnet.Error"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testMask1D": {
  "data": {
   "lineno": 3882,
   "symbols_in_volume": [
    "conv1",
    "conv1.w",
    "numpy.float32",
    "numpy.ones",
    "sonnet.Conv3D",
    "sonnet.VALID",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testMask2D": {
  "data": {
   "lineno": 3899,
   "symbols_in_volume": [
    "conv1",
    "conv1.w",
    "numpy.float32",
    "numpy.ones",
    "sonnet.Conv3D",
    "sonnet.VALID",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testMask3D": {
  "data": {
   "lineno": 3916,
   "symbols_in_volume": [
    "conv1",
    "conv1.w",
    "numpy.float32",
    "numpy.ones",
    "sonnet.Conv3D",
    "sonnet.VALID",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testMask4D": {
  "data": {
   "lineno": 3933,
   "symbols_in_volume": [
    "conv1",
    "conv1.w",
    "numpy.float32",
    "numpy.ones",
    "sonnet.Conv3D",
    "sonnet.VALID",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testMask5D": {
  "data": {
   "lineno": 3950,
   "symbols_in_volume": [
    "conv1",
    "conv1.w",
    "numpy.float32",
    "numpy.ones",
    "sonnet.Conv3D",
    "sonnet.VALID",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testMaskErrorIfIncorrectDtype": {
  "data": {
   "lineno": 4032,
   "symbols_in_volume": [
    "TypeError",
    "sonnet.Conv3D",
    "str",
    "tensorflow.constant",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testMaskErrorIncompatibleRank1": {
  "data": {
   "lineno": 3967,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.ones",
    "sonnet.Conv3D",
    "sonnet.Error",
    "str",
    "tensorflow.constant",
    "tensorflow.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testMaskErrorIncompatibleRank2": {
  "data": {
   "lineno": 3980,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.ones",
    "sonnet.Conv3D",
    "sonnet.Error",
    "str",
    "tensorflow.constant",
    "tensorflow.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testMaskErrorIncompatibleRank3": {
  "data": {
   "lineno": 3993,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.ones",
    "sonnet.Conv3D",
    "sonnet.Error",
    "str",
    "tensorflow.constant",
    "tensorflow.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testMaskErrorIncompatibleRank4": {
  "data": {
   "lineno": 4006,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.ones",
    "sonnet.Conv3D",
    "sonnet.Error",
    "str",
    "tensorflow.constant",
    "tensorflow.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testMaskErrorIncompatibleRank5": {
  "data": {
   "lineno": 4019,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.ones",
    "sonnet.Conv3D",
    "sonnet.Error",
    "str",
    "tensorflow.constant",
    "tensorflow.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testRateAndStrideError": {
  "data": {
   "lineno": 3659,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "sonnet.Conv3D",
    "sonnet.NotSupportedError"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testRateError": {
  "data": {
   "lineno": 3638,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "sonnet.Conv3D",
    "sonnet.IncompatibleShapeError"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testRegularizersInRegularizationLosses": {
  "data": {
   "lineno": 3758,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "sonnet.Conv3D",
    "sonnet.python.modules.conv_test.create_regularizers",
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testShapesSame": {
  "data": {
   "lineno": 3530,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b.get_shape",
    "conv1.w.get_shape",
    "sonnet.Conv3D",
    "sonnet.SAME",
    "sonnet.python.modules.conv_test.random",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testShapesWithUnknownInputShape": {
  "data": {
   "lineno": 3573,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w",
    "numpy.zeros",
    "sonnet.Conv3D",
    "sonnet.SAME",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testSharing": {
  "data": {
   "lineno": 3845,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w",
    "conv1.w.assign",
    "numpy.float32",
    "numpy.random.randn",
    "sonnet.Conv3D",
    "sonnet.SAME",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testStrideError": {
  "data": {
   "lineno": 3621,
   "symbols_in_volume": [
    "sonnet.Conv3D",
    "sonnet.Error"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTransposeTest": {
  "data": {
   "lineno": 4089,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv_test.Conv3DTransposeTest.setUp": {
  "data": {
   "lineno": 4091,
   "symbols_in_volume": [
    "sonnet.SAME",
    "sonnet.python.modules.conv_test.Conv3DTransposeTest",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTransposeTest.testBiasInitializerIsZeroByDefault": {
  "data": {
   "lineno": 4211,
   "symbols_in_volume": [
    "conv1",
    "conv1.b",
    "conv1.b.eval",
    "conv1.w",
    "numpy.float32",
    "numpy.zeros",
    "sonnet.Conv3DTranspose",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTransposeTest.testKernelsNotSpecified": {
  "data": {
   "lineno": 4124,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.Conv3DTranspose"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTransposeTest.testOutputShapeConsistency": {
  "data": {
   "lineno": 4128,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b.get_shape",
    "conv1.w.get_shape",
    "sonnet.Conv3DTranspose",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTransposeTest.testOutputShapeInference": {
  "data": {
   "lineno": 4192,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "sonnet.Conv3DTranspose",
    "sonnet.SAME",
    "tensorflow.float32",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTransposeTest.testOutputShapeInteger": {
  "data": {
   "lineno": 4165,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "sonnet.Conv3DTranspose",
    "sonnet.SAME",
    "tensorflow.errors.InvalidArgumentError",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTransposeTest.testTransposeNCDHW": {
  "data": {
   "lineno": 4299,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv3_transpose",
    "conv3_transpose.conv_op_padding",
    "conv3_transpose.kernel_shape",
    "conv3_transpose.output_shape",
    "conv3_transpose.transpose",
    "numpy.float32",
    "numpy.random.randn",
    "sonnet.Conv3DTranspose",
    "sonnet.NotConnectedError",
    "sonnet.python.modules.conv.DATA_FORMAT_NCDHW",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTransposeTest.testTransposeNDHWC": {
  "data": {
   "lineno": 4253,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv3_transpose",
    "conv3_transpose.output_shape",
    "numpy.float32",
    "numpy.random.randn",
    "sonnet.Conv3DTranspose",
    "sonnet.NotConnectedError",
    "sonnet.python.modules.conv.DATA_FORMAT_NDHWC",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTransposeTest.testTransposition": {
  "data": {
   "lineno": 4228,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "net",
    "net.scope_name",
    "net.transpose",
    "net_transpose",
    "sonnet.Conv3DTranspose",
    "sonnet.NotConnectedError",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DefaultTransposeSizeTest": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "enumerate",
    "sonnet.SAME",
    "sonnet.VALID",
    "tensorflow.test.TestCase",
    "zip"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv_test.DefaultTransposeSizeTest.testConnectTwice": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "conv1",
    "len",
    "module",
    "sonnet.Conv1DTranspose",
    "sonnet.Conv2DTranspose",
    "sonnet.Conv3DTranspose",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DefaultTransposeSizeTest.testFunction": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "sonnet.python.modules.conv._default_transpose_size",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DefaultTransposeSizeTest.testModules": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "len",
    "module",
    "sonnet.Conv1DTranspose",
    "sonnet.Conv2DTranspose",
    "sonnet.Conv3DTranspose",
    "tensorflow.float32",
    "tensorflow.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DepthwiseConv2DTest": {
  "data": {
   "lineno": 2360,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv_test.DepthwiseConv2DTest.setUp": {
  "data": {
   "lineno": 2362,
   "symbols_in_volume": [
    "sonnet.python.modules.conv_test.DepthwiseConv2DTest",
    "sonnet.python.modules.conv_test.random",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DepthwiseConv2DTest.testComputationSame": {
  "data": {
   "lineno": 2564,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w",
    "numpy.array",
    "numpy.float32",
    "numpy.ones",
    "numpy.reshape",
    "sonnet.DepthwiseConv2D",
    "sonnet.SAME",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DepthwiseConv2DTest.testComputationValid": {
  "data": {
   "lineno": 2592,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w",
    "numpy.array",
    "numpy.float32",
    "numpy.ones",
    "numpy.reshape",
    "sonnet.DepthwiseConv2D",
    "sonnet.VALID",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DepthwiseConv2DTest.testComputationValidMultiChannel": {
  "data": {
   "lineno": 2618,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w",
    "numpy.array",
    "numpy.float32",
    "numpy.ones",
    "numpy.reshape",
    "sonnet.DepthwiseConv2D",
    "sonnet.VALID",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DepthwiseConv2DTest.testInitializerMutation": {
  "data": {
   "lineno": 2548,
   "symbols_in_volume": [
    "conv1",
    "dict",
    "sonnet.DepthwiseConv2D",
    "tensorflow.constant_initializer",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DepthwiseConv2DTest.testInitializers": {
  "data": {
   "lineno": 2490,
   "symbols_in_volume": [
    "TypeError",
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.b.eval",
    "conv1.w",
    "conv1.w.eval",
    "numpy.float32",
    "numpy.full",
    "numpy.random.randn",
    "sonnet.DepthwiseConv2D",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "sonnet.python.modules.conv_test.random",
    "tensorflow.float32",
    "tensorflow.ones",
    "tensorflow.placeholder",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DepthwiseConv2DTest.testInputTypeError": {
  "data": {
   "lineno": 2471,
   "symbols_in_volume": [
    "TypeError",
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "numpy.ones",
    "sonnet.DepthwiseConv2D",
    "sonnet.SAME",
    "sonnet.python.modules.conv_test.create_constant_initializers",
    "tensorflow.constant",
    "tensorflow.float64",
    "tensorflow.uint32"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DepthwiseConv2DTest.testKernelShape": {
  "data": {
   "lineno": 2434,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "sonnet.DepthwiseConv2D",
    "sonnet.IncompatibleShapeError"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DepthwiseConv2DTest.testRegularizersInRegularizationLosses": {
  "data": {
   "lineno": 2527,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "sonnet.DepthwiseConv2D",
    "sonnet.python.modules.conv_test.create_regularizers",
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DepthwiseConv2DTest.testShapesNotKnown": {
  "data": {
   "lineno": 2411,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w",
    "numpy.zeros",
    "sonnet.DepthwiseConv2D",
    "sonnet.SAME",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "tensorflow.variables_initializer",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DepthwiseConv2DTest.testShapesSame": {
  "data": {
   "lineno": 2382,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b.get_shape",
    "conv1.w.get_shape",
    "sonnet.DepthwiseConv2D",
    "sonnet.SAME",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DepthwiseConv2DTest.testSharing": {
  "data": {
   "lineno": 2643,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w",
    "conv1.w.assign",
    "numpy.float32",
    "numpy.random.randn",
    "sonnet.DepthwiseConv2D",
    "sonnet.SAME",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DepthwiseConv2DTest.testStrideError": {
  "data": {
   "lineno": 2448,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "sonnet.DepthwiseConv2D",
    "sonnet.IncompatibleShapeError"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.FillListTest": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv_test.FillListTest.test": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "TypeError",
    "sonnet.python.modules.conv._fill_shape",
    "sonnet.python.modules.conv_test.random"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.InPlaneConv2DTest": {
  "data": {
   "lineno": 2304,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv_test.InPlaneConv2DTest.testInitializerMutation": {
  "data": {
   "lineno": 2348,
   "symbols_in_volume": [
    "conv1",
    "dict",
    "sonnet.InPlaneConv2D",
    "tensorflow.constant_initializer",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.InPlaneConv2DTest.testSameNumberOfOutputAndInputChannels": {
  "data": {
   "lineno": 2306,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.output_channels",
    "sonnet.InPlaneConv2D",
    "sonnet.NotConnectedError",
    "sonnet.python.modules.conv_test.random",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.InPlaneConv2DTest.testSharing": {
  "data": {
   "lineno": 2326,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w",
    "conv1.w.assign",
    "numpy.float32",
    "numpy.random.randn",
    "sonnet.InPlaneConv2D",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest": {
  "data": {
   "lineno": 3105,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.setUp": {
  "data": {
   "lineno": 3107,
   "symbols_in_volume": [
    "sonnet.python.modules.conv_test.SeparableConv1DTest",
    "sonnet.python.modules.conv_test.random",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.testComputationSame": {
  "data": {
   "lineno": 3344,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w_dw",
    "conv1.w_pw",
    "numpy.array",
    "numpy.float32",
    "numpy.ones",
    "sonnet.SAME",
    "sonnet.SeparableConv1D",
    "sonnet.python.modules.conv_test.create_separable_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.testComputationSameNon1Rate": {
  "data": {
   "lineno": 3372,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w_dw",
    "conv1.w_pw",
    "numpy.array",
    "numpy.float32",
    "numpy.ones",
    "sonnet.SAME",
    "sonnet.SeparableConv1D",
    "sonnet.python.modules.conv_test.create_separable_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.testComputationValid": {
  "data": {
   "lineno": 3405,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w_dw",
    "conv1.w_pw",
    "numpy.array",
    "numpy.float32",
    "numpy.ones",
    "sonnet.SeparableConv1D",
    "sonnet.VALID",
    "sonnet.python.modules.conv_test.create_separable_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.testComputationValidChannelMultiplier": {
  "data": {
   "lineno": 3459,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w_dw",
    "conv1.w_pw",
    "numpy.float32",
    "numpy.ones",
    "sonnet.SeparableConv1D",
    "sonnet.VALID",
    "sonnet.python.modules.conv_test.create_separable_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.testComputationValidMultiChannel": {
  "data": {
   "lineno": 3432,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w_dw",
    "conv1.w_pw",
    "numpy.array",
    "numpy.float32",
    "numpy.ones",
    "sonnet.SeparableConv1D",
    "sonnet.VALID",
    "sonnet.python.modules.conv_test.create_separable_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.testInitializerMutation": {
  "data": {
   "lineno": 3304,
   "symbols_in_volume": [
    "conv1",
    "dict",
    "sonnet.SeparableConv1D",
    "tensorflow.constant_initializer",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.testInitializers": {
  "data": {
   "lineno": 3260,
   "symbols_in_volume": [
    "TypeError",
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.b.eval",
    "conv1.w_dw",
    "conv1.w_dw.eval",
    "conv1.w_pw",
    "conv1.w_pw.eval",
    "numpy.float32",
    "numpy.full",
    "numpy.random.randn",
    "sonnet.SeparableConv1D",
    "sonnet.python.modules.conv_test.create_separable_constant_initializers",
    "sonnet.python.modules.conv_test.random",
    "tensorflow.float32",
    "tensorflow.ones",
    "tensorflow.placeholder",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.testInputTypeError": {
  "data": {
   "lineno": 3240,
   "symbols_in_volume": [
    "TypeError",
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "numpy.ones",
    "sonnet.SAME",
    "sonnet.SeparableConv1D",
    "sonnet.python.modules.conv_test.create_separable_constant_initializers",
    "tensorflow.constant",
    "tensorflow.float64",
    "tensorflow.uint32"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.testKernelShape": {
  "data": {
   "lineno": 3185,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "sonnet.IncompatibleShapeError",
    "sonnet.SeparableConv1D"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.testRegularizersInRegularizationLosses": {
  "data": {
   "lineno": 3321,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "sonnet.SeparableConv1D",
    "sonnet.python.modules.conv_test.create_separable_regularizers",
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.testShapesNotKnown": {
  "data": {
   "lineno": 3161,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w_dw",
    "conv1.w_pw",
    "numpy.zeros",
    "sonnet.SAME",
    "sonnet.SeparableConv1D",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "tensorflow.variables_initializer",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.testShapesSame": {
  "data": {
   "lineno": 3128,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b.get_shape",
    "conv1.w_dw.get_shape",
    "conv1.w_pw.get_shape",
    "sonnet.SAME",
    "sonnet.SeparableConv1D",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.testSharing": {
  "data": {
   "lineno": 3495,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w_dw",
    "conv1.w_dw.assign",
    "conv1.w_pw",
    "conv1.w_pw.assign",
    "numpy.float32",
    "numpy.random.randn",
    "sonnet.SeparableConv1D",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.testStrideError": {
  "data": {
   "lineno": 3210,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "sonnet.IncompatibleShapeError",
    "sonnet.SeparableConv1D"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest": {
  "data": {
   "lineno": 2673,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.setUp": {
  "data": {
   "lineno": 2675,
   "symbols_in_volume": [
    "sonnet.python.modules.conv_test.SeparableConv2DTest",
    "sonnet.python.modules.conv_test.random",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.testComputationSame": {
  "data": {
   "lineno": 2913,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w_dw",
    "conv1.w_pw",
    "numpy.array",
    "numpy.float32",
    "numpy.ones",
    "numpy.reshape",
    "sonnet.SAME",
    "sonnet.SeparableConv2D",
    "sonnet.python.modules.conv_test.create_separable_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.testComputationSameNon1Rate": {
  "data": {
   "lineno": 2945,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w_dw",
    "conv1.w_pw",
    "numpy.array",
    "numpy.float32",
    "numpy.ones",
    "numpy.reshape",
    "sonnet.SAME",
    "sonnet.SeparableConv2D",
    "sonnet.python.modules.conv_test.create_separable_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.testComputationValid": {
  "data": {
   "lineno": 2978,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w_dw",
    "conv1.w_pw",
    "numpy.array",
    "numpy.float32",
    "numpy.ones",
    "numpy.reshape",
    "sonnet.SeparableConv2D",
    "sonnet.VALID",
    "sonnet.python.modules.conv_test.create_separable_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.testComputationValidChannelMultiplier": {
  "data": {
   "lineno": 3034,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w_dw",
    "conv1.w_pw",
    "numpy.float32",
    "numpy.ones",
    "numpy.reshape",
    "sonnet.SeparableConv2D",
    "sonnet.VALID",
    "sonnet.python.modules.conv_test.create_separable_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.testComputationValidMultiChannel": {
  "data": {
   "lineno": 3007,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w_dw",
    "conv1.w_pw",
    "numpy.array",
    "numpy.float32",
    "numpy.ones",
    "numpy.reshape",
    "sonnet.SeparableConv2D",
    "sonnet.VALID",
    "sonnet.python.modules.conv_test.create_separable_constant_initializers",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.testInitializerMutation": {
  "data": {
   "lineno": 2873,
   "symbols_in_volume": [
    "conv1",
    "dict",
    "sonnet.SeparableConv2D",
    "tensorflow.constant_initializer",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.testInitializers": {
  "data": {
   "lineno": 2829,
   "symbols_in_volume": [
    "TypeError",
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.b.eval",
    "conv1.w_dw",
    "conv1.w_dw.eval",
    "conv1.w_pw",
    "conv1.w_pw.eval",
    "numpy.float32",
    "numpy.full",
    "numpy.random.randn",
    "sonnet.SeparableConv2D",
    "sonnet.python.modules.conv_test.create_separable_constant_initializers",
    "sonnet.python.modules.conv_test.random",
    "tensorflow.float32",
    "tensorflow.ones",
    "tensorflow.placeholder",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.testInputTypeError": {
  "data": {
   "lineno": 2809,
   "symbols_in_volume": [
    "TypeError",
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "numpy.ones",
    "sonnet.SAME",
    "sonnet.SeparableConv2D",
    "sonnet.python.modules.conv_test.create_separable_constant_initializers",
    "tensorflow.constant",
    "tensorflow.float64",
    "tensorflow.uint32"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.testKernelShape": {
  "data": {
   "lineno": 2755,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "sonnet.IncompatibleShapeError",
    "sonnet.SeparableConv2D"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.testRegularizersInRegularizationLosses": {
  "data": {
   "lineno": 2890,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "sonnet.SeparableConv2D",
    "sonnet.python.modules.conv_test.create_separable_regularizers",
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.testShapesNotKnown": {
  "data": {
   "lineno": 2731,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w_dw",
    "conv1.w_pw",
    "numpy.zeros",
    "sonnet.SAME",
    "sonnet.SeparableConv2D",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "tensorflow.variables_initializer",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.testShapesSame": {
  "data": {
   "lineno": 2698,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b.get_shape",
    "conv1.w_dw.get_shape",
    "conv1.w_pw.get_shape",
    "sonnet.SAME",
    "sonnet.SeparableConv2D",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.testSharing": {
  "data": {
   "lineno": 3072,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "conv1",
    "conv1.b",
    "conv1.w_dw",
    "conv1.w_dw.assign",
    "conv1.w_pw",
    "conv1.w_pw.assign",
    "numpy.float32",
    "numpy.random.randn",
    "sonnet.SeparableConv2D",
    "tensorflow.constant",
    "tensorflow.variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.testStrideError": {
  "data": {
   "lineno": 2779,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "sonnet.IncompatibleShapeError",
    "sonnet.SeparableConv2D"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SharedConvTest": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "numpy.float64",
    "numpy.zeros",
    "sonnet.CAUSAL",
    "sonnet.Conv1D",
    "sonnet.Conv1DTranspose",
    "sonnet.Conv2D",
    "sonnet.Conv2DTranspose",
    "sonnet.Conv3D",
    "sonnet.Conv3DTranspose",
    "sonnet.DepthwiseConv2D",
    "sonnet.FULL",
    "sonnet.InPlaneConv2D",
    "sonnet.SAME",
    "sonnet.SeparableConv1D",
    "sonnet.SeparableConv2D",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.conv_test.SharedConvTest.testCustomGetter": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "AttributeError",
    "absl.testing.parameterized.parameters",
    "conv_mod1",
    "conv_mod1.get_variables",
    "conv_mod2",
    "conv_mod2.get_variables",
    "conv_mod2.transpose",
    "conv_mod2_transpose",
    "conv_mod2_transpose.get_variables",
    "len",
    "list",
    "module",
    "sonnet.NotSupportedError",
    "tensorflow.Tensor",
    "tensorflow.float32",
    "tensorflow.gradients",
    "tensorflow.placeholder",
    "type"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SharedConvTest.testCustomGetter.stop_gradient": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "getter",
    "tensorflow.stop_gradient"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SharedConvTest.testFlattenedError": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "conv_mod",
    "module",
    "sonnet.BatchFlatten",
    "sonnet.IncompatibleShapeError",
    "sonnet.python.modules.conv_test.itertools",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SharedConvTest.testMissingChannelsError": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "conv_mod",
    "module",
    "sonnet.IncompatibleShapeError",
    "sonnet.python.modules.conv_test.itertools",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SharedConvTest.testNonDefinedChannelsDimension": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "conv_mod",
    "module",
    "sonnet.UnderspecifiedError",
    "sonnet.python.modules.conv_test.itertools",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SharedConvTest.testPartitioners": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "AttributeError",
    "absl.testing.parameterized.parameters",
    "convolution",
    "convolution.partitioners",
    "convolution.transpose",
    "getattr",
    "module",
    "module.get_possible_initializer_keys",
    "sonnet.NotSupportedError",
    "tensorflow.python.ops.variables.PartitionedVariable",
    "tensorflow.variable_axis_size_partitioner",
    "tensorflow.zeros",
    "type"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SharedConvTest.testVariables": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "conv_mod",
    "conv_mod.get_possible_initializer_keys",
    "conv_mod.get_variables",
    "len",
    "module",
    "numpy.random.rand",
    "sonnet.NotConnectedError",
    "sonnet.python.modules.conv_test.itertools",
    "tensorflow.GraphKeys.GLOBAL_VARIABLES",
    "tensorflow.float16",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test._PADDINGS_EXPECTED_SHAPE_TRANSFORMS": {
  "data": {
   "lineno": 410
  },
  "type": "constant"
 },
 "sonnet.python.modules.conv_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv_test.conv": {
  "data": {
   "shadows": "sonnet.python.modules.conv"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv_test.create_constant_initializers": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "tensorflow.constant_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.create_regularizers": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.create_separable_constant_initializers": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "tensorflow.constant_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.create_separable_regularizers": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "sonnet.python.modules.conv_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv_test.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv_test.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.conv_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "sonnet.python.modules.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.embed": {
  "data": {},
  "type": "module"
 },
 "sonnet.python.modules.embed.Embed": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.embed.Embed.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "sonnet.python.modules.embed.Embed",
    "sonnet.python.modules.embed._embedding_dim",
    "sonnet.python.modules.util.check_initializers",
    "sonnet.python.modules.util.check_partitioners",
    "sonnet.python.modules.util.check_regularizers",
    "super",
    "tensorflow.convert_to_tensor",
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.embed.Embed._build": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "sonnet.python.modules.util.convert_gradient_to_tensor",
    "tensorflow.float32",
    "tensorflow.get_variable",
    "tensorflow.initializers.random_normal",
    "tensorflow.nn.embedding_lookup"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.embed.Embed.embed_dim": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.embed.Embed.embeddings": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.embed.Embed.vocab_size": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.embed._embedding_dim": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "round",
    "sonnet.python.modules.embed.math"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.embed.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.embed.base": {
  "data": {
   "shadows": "sonnet.python.modules.base"
  },
  "type": "import"
 },
 "sonnet.python.modules.embed.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.embed.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "sonnet.python.modules.embed.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.embed.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.embed.util": {
  "data": {
   "shadows": "sonnet.python.modules.util"
  },
  "type": "import"
 },
 "sonnet.python.modules.embed_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.embed_test.EmbedTest": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.embed_test.EmbedTest.setUp": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.asarray",
    "sonnet.Embed",
    "sonnet.python.modules.embed_test.EmbedTest",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.embed_test.EmbedTest.testComputation": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "embed_mod",
    "list",
    "numpy.reshape",
    "sonnet.Embed",
    "tensorflow.constant_initializer",
    "tensorflow.convert_to_tensor",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.embed_test.EmbedTest.testDefaultVocabSize": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "embed_mod",
    "embed_mod.embed_dim",
    "sonnet.Embed"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.embed_test.EmbedTest.testExistingVocab": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "embed_mod",
    "embed_mod.embed_dim",
    "embed_mod.vocab_size",
    "numpy.array",
    "numpy.int32",
    "sonnet.Embed",
    "tensorflow.constant",
    "tensorflow.global_variables_initializer",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.embed_test.EmbedTest.testInitializers": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "embed_mod",
    "numpy.zeros_like",
    "sonnet.Embed",
    "tensorflow.convert_to_tensor",
    "tensorflow.global_variables_initializer",
    "tensorflow.zeros_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.embed_test.EmbedTest.testInvalidRegularizationParameters": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "sonnet.Embed",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.embed_test.EmbedTest.testNegativeIds": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "tensorflow.convert_to_tensor",
    "tensorflow.errors.InvalidArgumentError",
    "tensorflow.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.embed_test.EmbedTest.testOutputType": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "list",
    "tensorflow.convert_to_tensor",
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.embed_test.EmbedTest.testPartitioners": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "embed_mod",
    "embed_mod.embeddings",
    "len",
    "sonnet.Embed",
    "tensorflow.convert_to_tensor",
    "tensorflow.global_variables_initializer",
    "tensorflow.python.ops.variables.PartitionedVariable",
    "tensorflow.variable_axis_size_partitioner",
    "type"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.embed_test.EmbedTest.testProperties": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "sonnet.NotConnectedError",
    "tensorflow.Variable",
    "tensorflow.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.embed_test.EmbedTest.testRegularizersInRegularizationLosses": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "embed",
    "sonnet.Embed",
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.convert_to_tensor",
    "tensorflow.get_collection"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.embed_test.EmbedTest.testVocabTooSmall": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "tensorflow.convert_to_tensor",
    "tensorflow.errors.InvalidArgumentError",
    "tensorflow.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.embed_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.embed_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.embed_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.modules.embed_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "sonnet.python.modules.embed_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.embed_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.python.modules.embed_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.embed_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "sonnet.python.modules.gated_rnn": {
  "data": {
   "symbols_in_volume": [
    "sonnet.python.modules.gated_rnn.collections"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "sonnet.python.modules.rnn_core.RNNCore"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.CoreWithExtraBuildArgs": {
  "data": {
   "lineno": 1171,
   "symbols_in_volume": [
    "sonnet.python.modules.rnn_core.RNNCore"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.CoreWithExtraBuildArgs.__init__": {
  "data": {
   "lineno": 1178,
   "symbols_in_volume": [
    "sonnet.python.modules.gated_rnn.BatchNormLSTM",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.CoreWithExtraBuildArgs._build": {
  "data": {
   "lineno": 1192
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.CoreWithExtraBuildArgs.output_size": {
  "data": {
   "lineno": 1200,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.CoreWithExtraBuildArgs.state_size": {
  "data": {
   "lineno": 1195,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.IndexedStatsBatchNorm": {
  "data": {
   "lineno": 1112,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.IndexedStatsBatchNorm.__init__": {
  "data": {
   "lineno": 1133,
   "symbols_in_volume": [
    "sonnet.python.modules.gated_rnn.BatchNormLSTM",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.IndexedStatsBatchNorm._build": {
  "data": {
   "lineno": 1144,
   "symbols_in_volume": [
    "create_batch_norm",
    "six.moves.xrange",
    "tensorflow.case",
    "tensorflow.equal"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.IndexedStatsBatchNorm._build.create_batch_norm": {
  "data": {
   "lineno": 1158,
   "symbols_in_volume": [
    "sonnet.python.modules.batch_norm.BatchNorm"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.__init__": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "sonnet.python.modules.gated_rnn.BatchNormLSTM",
    "sonnet.python.modules.util.check_initializers",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM._build": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.clip_by_value",
    "tensorflow.concat",
    "tensorflow.matmul",
    "tensorflow.sigmoid",
    "tensorflow.split",
    "tensorflow.tanh"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM._create_batch_norm_variables": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "tensorflow.constant_initializer",
    "tensorflow.get_variable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM._create_gate_variables": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "sonnet.python.modules.basic.create_linear_initializer",
    "tensorflow.get_variable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM._create_peephole_variables": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "tensorflow.get_variable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.get_possible_initializer_keys": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.initial_state": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "sonnet.python.modules.gated_rnn.BatchNormLSTM",
    "sonnet.python.modules.rnn_core.trainable_initial_state",
    "super",
    "tensorflow.TensorShape",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.int32",
    "tensorflow.name_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.output_size": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": [
    "property",
    "tensorflow.TensorShape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.state_size": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "property",
    "tensorflow.TensorShape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.use_batch_norm_c": {
  "data": {
   "lineno": 1107,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.use_batch_norm_h": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.use_batch_norm_x": {
  "data": {
   "lineno": 1102,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.use_peepholes": {
  "data": {
   "lineno": 1092,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.with_batch_norm_control": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "sonnet.python.modules.gated_rnn.BatchNormLSTM"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.Conv1DLSTM": {
  "data": {
   "lineno": 1402,
   "symbols_in_volume": [
    "sonnet.python.modules.gated_rnn.ConvLSTM"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn.Conv1DLSTM.__init__": {
  "data": {
   "lineno": 1409,
   "symbols_in_volume": [
    "sonnet.python.modules.gated_rnn.Conv1DLSTM",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.Conv1DLSTM.get_possible_initializer_keys": {
  "data": {
   "lineno": 1405,
   "symbols_in_volume": [
    "classmethod",
    "sonnet.python.modules.gated_rnn.Conv1DLSTM",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.Conv2DLSTM": {
  "data": {
   "lineno": 1414,
   "symbols_in_volume": [
    "sonnet.python.modules.gated_rnn.ConvLSTM"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn.Conv2DLSTM.__init__": {
  "data": {
   "lineno": 1422,
   "symbols_in_volume": [
    "sonnet.python.modules.gated_rnn.Conv2DLSTM",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.Conv2DLSTM.get_possible_initializer_keys": {
  "data": {
   "lineno": 1418,
   "symbols_in_volume": [
    "classmethod",
    "sonnet.python.modules.gated_rnn.Conv2DLSTM",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ConvLSTM": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": [
    "sonnet.python.modules.rnn_core.RNNCore"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn.ConvLSTM.__init__": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "len",
    "sonnet.python.modules.conv.SAME",
    "sonnet.python.modules.gated_rnn.ConvLSTM",
    "sonnet.python.modules.util.deprecation_warning",
    "super",
    "tensorflow.logging.warning",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ConvLSTM._build": {
  "data": {
   "lineno": 1364,
   "symbols_in_volume": [
    "flatten",
    "hidden_conv",
    "input_conv",
    "sonnet.python.modules.basic.BatchFlatten",
    "sonnet.python.modules.basic.BatchReshape",
    "sonnet.python.modules.layer_norm.LayerNorm",
    "tensorflow.sigmoid",
    "tensorflow.split",
    "tensorflow.tanh",
    "unflatten"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ConvLSTM._get_conv_class": {
  "data": {
   "lineno": 1214,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "sonnet.python.modules.conv.Conv1D",
    "sonnet.python.modules.conv.Conv2D",
    "sonnet.python.modules.conv.Conv3D"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ConvLSTM._new_convolution": {
  "data": {
   "lineno": 1321,
   "symbols_in_volume": [
    "clean_dict"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ConvLSTM._new_convolution.clean_dict": {
  "data": {
   "lineno": 1329
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ConvLSTM.convolutions": {
  "data": {
   "lineno": 1347,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ConvLSTM.get_possible_initializer_keys": {
  "data": {
   "lineno": 1209,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ConvLSTM.output_size": {
  "data": {
   "lineno": 1358,
   "symbols_in_volume": [
    "property",
    "tensorflow.TensorShape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ConvLSTM.state_size": {
  "data": {
   "lineno": 1351,
   "symbols_in_volume": [
    "property",
    "tensorflow.TensorShape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ConvLSTM.use_layer_norm": {
  "data": {
   "lineno": 1396,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.GRU": {
  "data": {
   "lineno": 1427,
   "symbols_in_volume": [
    "sonnet.python.modules.rnn_core.RNNCore"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn.GRU.__init__": {
  "data": {
   "lineno": 1449,
   "symbols_in_volume": [
    "sonnet.python.modules.gated_rnn.GRU",
    "sonnet.python.modules.util.check_initializers",
    "sonnet.python.modules.util.check_partitioners",
    "sonnet.python.modules.util.check_regularizers",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.GRU._build": {
  "data": {
   "lineno": 1509,
   "symbols_in_volume": [
    "sonnet.python.modules.gated_rnn.GRU",
    "tensorflow.get_variable",
    "tensorflow.matmul",
    "tensorflow.sigmoid",
    "tensorflow.tanh"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.GRU.get_possible_initializer_keys": {
  "data": {
   "lineno": 1488,
   "symbols_in_volume": [
    "classmethod",
    "sonnet.python.modules.gated_rnn.GRU",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.GRU.output_size": {
  "data": {
   "lineno": 1589,
   "symbols_in_volume": [
    "property",
    "tensorflow.TensorShape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.GRU.state_size": {
  "data": {
   "lineno": 1585,
   "symbols_in_volume": [
    "property",
    "tensorflow.TensorShape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.HighwayCore": {
  "data": {
   "lineno": 1594,
   "symbols_in_volume": [
    "sonnet.python.modules.rnn_core.RNNCore"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn.HighwayCore.__init__": {
  "data": {
   "lineno": 1612,
   "symbols_in_volume": [
    "sonnet.python.modules.gated_rnn.HighwayCore",
    "sonnet.python.modules.util.check_initializers",
    "sonnet.python.modules.util.check_partitioners",
    "sonnet.python.modules.util.check_regularizers",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.HighwayCore._build": {
  "data": {
   "lineno": 1688,
   "symbols_in_volume": [
    "_get_variable",
    "six.moves.xrange",
    "str",
    "tensorflow.matmul",
    "tensorflow.sigmoid",
    "tensorflow.tanh"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.HighwayCore._build._get_variable": {
  "data": {
   "lineno": 1710,
   "symbols_in_volume": [
    "tensorflow.get_variable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.HighwayCore.get_possible_initializer_keys": {
  "data": {
   "lineno": 1660,
   "symbols_in_volume": [
    "classmethod",
    "set",
    "six.moves.xrange",
    "str"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.HighwayCore.output_size": {
  "data": {
   "lineno": 1743,
   "symbols_in_volume": [
    "property",
    "tensorflow.TensorShape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.HighwayCore.state_size": {
  "data": {
   "lineno": 1739,
   "symbols_in_volume": [
    "property",
    "tensorflow.TensorShape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.LSTM": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "sonnet.python.modules.rnn_core.RNNCore"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn.LSTM.__init__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.modules.gated_rnn.LSTM",
    "sonnet.python.modules.util.check_initializers",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.LSTM._build": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "sonnet.python.modules.gated_rnn.LSTMState",
    "sonnet.python.modules.layer_norm.LayerNorm",
    "tensorflow.clip_by_value",
    "tensorflow.concat",
    "tensorflow.matmul",
    "tensorflow.sigmoid",
    "tensorflow.split",
    "tensorflow.tanh"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.LSTM._create_gate_variables": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "sonnet.python.modules.basic.create_linear_initializer",
    "tensorflow.get_variable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.LSTM._create_peephole_variables": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "tensorflow.get_variable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.LSTM.get_possible_initializer_keys": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.LSTM.output_size": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "property",
    "tensorflow.TensorShape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.LSTM.state_size": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "property",
    "sonnet.python.modules.gated_rnn.LSTMState",
    "tensorflow.TensorShape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.LSTM.use_layer_norm": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.LSTM.use_peepholes": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.LSTMBlockCell": {
  "data": {
   "lineno": 1771,
   "symbols_in_volume": [
    "sonnet.python.modules.rnn_core.RNNCellWrapper"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn.LSTMBlockCell.__init__": {
  "data": {
   "lineno": 1774,
   "symbols_in_volume": [
    "sonnet.python.modules.gated_rnn.LSTMBlockCell",
    "sonnet.python.modules.rnn_core.with_doc",
    "super",
    "tensorflow.contrib.rnn.LSTMBlockCell",
    "tensorflow.contrib.rnn.LSTMBlockCell.__init__"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.LSTMState": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "sonnet.python.modules.gated_rnn.RecurrentDropoutWrapper": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "sonnet.python.modules.rnn_core.RNNCore"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn.RecurrentDropoutWrapper.__init__": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "sonnet.python.modules.gated_rnn.RecurrentDropoutWrapper",
    "super",
    "tensorflow.contrib.framework.nest.map_structure"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.RecurrentDropoutWrapper.__init__.set_dropout_state_size": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.RecurrentDropoutWrapper._build": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.nest.map_structure"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.RecurrentDropoutWrapper.initial_state": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.framework.nest.map_structure",
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.RecurrentDropoutWrapper.initial_state.set_dropout_mask": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "tensorflow.nn.dropout",
    "tensorflow.ones_like"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.RecurrentDropoutWrapper.output_size": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.RecurrentDropoutWrapper.state_size": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ZoneoutWrapper": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "sonnet.python.modules.rnn_core.RNNCore"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn.ZoneoutWrapper.__init__": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "sonnet.python.modules.gated_rnn.ZoneoutWrapper",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ZoneoutWrapper._build": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.nest.map_structure"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ZoneoutWrapper._build.apply_zoneout": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "tensorflow.nn.dropout"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ZoneoutWrapper.initial_state": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ZoneoutWrapper.output_size": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ZoneoutWrapper.state_size": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.gated_rnn.base": {
  "data": {
   "shadows": "sonnet.python.modules.base"
  },
  "type": "import"
 },
 "sonnet.python.modules.gated_rnn.basic": {
  "data": {
   "shadows": "sonnet.python.modules.basic"
  },
  "type": "import"
 },
 "sonnet.python.modules.gated_rnn.batch_norm": {
  "data": {
   "shadows": "sonnet.python.modules.batch_norm"
  },
  "type": "import"
 },
 "sonnet.python.modules.gated_rnn.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "sonnet.python.modules.gated_rnn.conv": {
  "data": {
   "shadows": "sonnet.python.modules.conv"
  },
  "type": "import"
 },
 "sonnet.python.modules.gated_rnn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.gated_rnn.highway_core_with_recurrent_dropout": {
  "data": {
   "lineno": 1748,
   "symbols_in_volume": [
    "sonnet.python.modules.gated_rnn.HighwayCore",
    "sonnet.python.modules.gated_rnn.RecurrentDropoutWrapper"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.layer_norm": {
  "data": {
   "shadows": "sonnet.python.modules.layer_norm"
  },
  "type": "import"
 },
 "sonnet.python.modules.gated_rnn.lstm_with_recurrent_dropout": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "sonnet.python.modules.gated_rnn.LSTM",
    "sonnet.python.modules.gated_rnn.LSTMState",
    "sonnet.python.modules.gated_rnn.RecurrentDropoutWrapper"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.lstm_with_zoneout": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "sonnet.python.modules.gated_rnn.LSTM",
    "sonnet.python.modules.gated_rnn.LSTMState",
    "sonnet.python.modules.gated_rnn.ZoneoutWrapper"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.gated_rnn.rnn_core": {
  "data": {
   "shadows": "sonnet.python.modules.rnn_core"
  },
  "type": "import"
 },
 "sonnet.python.modules.gated_rnn.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.gated_rnn.util": {
  "data": {
   "shadows": "sonnet.python.modules.util"
  },
  "type": "import"
 },
 "sonnet.python.modules.gated_rnn.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "sonnet.python.modules.gated_rnn_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.gated_rnn_test.ConvLSTMTest": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn_test.ConvLSTMTest.testDilatedConv": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "loss_fn",
    "lstm",
    "lstm.initial_state",
    "lstm_class",
    "sonnet.Conv1DLSTM",
    "sonnet.Conv2DLSTM",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.random_normal",
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.ConvLSTMTest.testDilatedConv.loss_fn": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": [
    "lstm",
    "tensorflow.float32",
    "tensorflow.nn.dynamic_rnn",
    "tensorflow.reduce_mean",
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.ConvLSTMTest.testInitializers": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "enumerate",
    "getattr",
    "hasattr",
    "lstm",
    "lstm.convolutions.items",
    "lstm_class",
    "numpy.float32",
    "numpy.full",
    "sonnet.Conv1DLSTM",
    "sonnet.Conv2DLSTM",
    "sonnet.Conv2DLSTM.get_possible_initializer_keys",
    "tensorflow.constant_initializer",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.ConvLSTMTest.testLayerNorm": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "loss_fn",
    "lstm",
    "lstm.initial_state",
    "lstm_class",
    "sonnet.Conv1DLSTM",
    "sonnet.Conv2DLSTM",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.random_normal",
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.ConvLSTMTest.testLayerNorm.loss_fn": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": [
    "lstm",
    "tensorflow.float32",
    "tensorflow.nn.dynamic_rnn",
    "tensorflow.reduce_mean",
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.ConvLSTMTest.testLayerNormVariables": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "lstm",
    "lstm.get_variables",
    "lstm.initial_state",
    "lstm.use_layer_norm",
    "lstm_class",
    "sonnet.Conv1DLSTM",
    "sonnet.Conv2DLSTM",
    "tensorflow.float32",
    "tensorflow.nn.dynamic_rnn",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.ConvLSTMTest.testPartitioners": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "getattr",
    "hasattr",
    "lstm",
    "lstm.convolutions.items",
    "lstm_class",
    "sonnet.Conv1DLSTM",
    "sonnet.Conv2DLSTM",
    "sonnet.Conv2DLSTM.get_possible_initializer_keys",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.ones",
    "tensorflow.python.ops.variables.PartitionedVariable",
    "tensorflow.variable_axis_size_partitioner",
    "type"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.ConvLSTMTest.testRegularizers": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "len",
    "lstm",
    "lstm.convolutions",
    "lstm_class",
    "sonnet.Conv1DLSTM",
    "sonnet.Conv2DLSTM",
    "sonnet.Conv2DLSTM.get_possible_initializer_keys",
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.nn.l2_loss",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.ConvLSTMTest.testShape": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "lstm",
    "lstm_class",
    "numpy.ndarray",
    "sonnet.Conv1DLSTM",
    "sonnet.Conv2DLSTM",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.ConvLSTMTest.testTraining": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "loss_fn",
    "lstm",
    "lstm.initial_state",
    "lstm_class",
    "sonnet.Conv1DLSTM",
    "sonnet.Conv2DLSTM",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.random_normal",
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.ConvLSTMTest.testTraining.loss_fn": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "lstm",
    "tensorflow.float32",
    "tensorflow.nn.dynamic_rnn",
    "tensorflow.reduce_mean",
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.GRUTest": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn_test.GRUTest.testComputation": {
  "data": {
   "lineno": 1192,
   "symbols_in_volume": [
    "gru",
    "gru.get_variables",
    "numpy.dot",
    "numpy.random.randn",
    "numpy.tanh",
    "sigmoid",
    "sonnet.GRU",
    "tensorflow.constant",
    "tensorflow.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.GRUTest.testComputation.sigmoid": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.GRUTest.testInitializers": {
  "data": {
   "lineno": 1231,
   "symbols_in_volume": [
    "enumerate",
    "getattr",
    "gru",
    "numpy.ones",
    "sonnet.GRU",
    "sonnet.GRU.POSSIBLE_INITIALIZER_KEYS",
    "tensorflow.constant_initializer",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.GRUTest.testPartitioners": {
  "data": {
   "lineno": 1255,
   "symbols_in_volume": [
    "getattr",
    "gru",
    "sonnet.GRU",
    "sonnet.GRU.POSSIBLE_INITIALIZER_KEYS",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.ones",
    "tensorflow.python.ops.variables.PartitionedVariable",
    "tensorflow.variable_axis_size_partitioner",
    "type"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.GRUTest.testRegularizers": {
  "data": {
   "lineno": 1278,
   "symbols_in_volume": [
    "gru",
    "len",
    "sonnet.GRU",
    "sonnet.GRU.POSSIBLE_INITIALIZER_KEYS",
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.nn.l2_loss",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.GRUTest.testShape": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": [
    "gru",
    "numpy.ndarray",
    "sonnet.GRU",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.GRUTest.testVariables": {
  "data": {
   "lineno": 1164,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "gru",
    "gru.get_variables",
    "gru.scope_name",
    "numpy.ndarray",
    "sonnet.Error",
    "sonnet.GRU",
    "tensorflow.convert_to_tensor",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.HighwayCoreTest": {
  "data": {
   "lineno": 1300,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn_test.HighwayCoreTest.testComputation": {
  "data": {
   "lineno": 1352,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "core",
    "core.get_variables",
    "core.initial_state",
    "numpy.dot",
    "numpy.random.randn",
    "numpy.tanh",
    "sigmoid",
    "sonnet.HighwayCore",
    "sonnet.highway_core_with_recurrent_dropout",
    "tensorflow.constant",
    "tensorflow.float64",
    "tensorflow.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.HighwayCoreTest.testComputation.sigmoid": {
  "data": {
   "lineno": 1356,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.HighwayCoreTest.testShape": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": [
    "core",
    "numpy.ndarray",
    "sonnet.HighwayCore",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.HighwayCoreTest.testVariables": {
  "data": {
   "lineno": 1313,
   "symbols_in_volume": [
    "core",
    "core.get_variables",
    "core.scope_name",
    "numpy.ndarray",
    "six.moves.xrange",
    "sonnet.Error",
    "sonnet.HighwayCore",
    "str",
    "tensorflow.convert_to_tensor",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMBlockCellTest": {
  "data": {
   "lineno": 1403,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMBlockCellTest.testShape": {
  "data": {
   "lineno": 1405,
   "symbols_in_volume": [
    "lstm",
    "lstm.output_size",
    "lstm.state_size",
    "numpy.ndarray",
    "sonnet.LSTMBlockCell",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMBlockCellTest.testVariables": {
  "data": {
   "lineno": 1423,
   "symbols_in_volume": [
    "lstm",
    "lstm.get_variables",
    "lstm.scope_name",
    "numpy.ndarray",
    "sonnet.Error",
    "sonnet.LSTMBlockCell",
    "tensorflow.convert_to_tensor",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testBatchNormBuildFlag": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "ValueError",
    "absl.testing.parameterized.parameters",
    "lstm",
    "sonnet.BatchNormLSTM",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testBatchNormInitializersCheck": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "KeyError",
    "sonnet.BatchNormLSTM",
    "sonnet.BatchNormLSTM.BETA_C",
    "sonnet.BatchNormLSTM.GAMMA_C",
    "sonnet.BatchNormLSTM.GAMMA_H",
    "sonnet.BatchNormLSTM.GAMMA_X",
    "tensorflow.constant_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testBatchNormVariables": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "sonnet.python.modules.gated_rnn_test._construct_lstm",
    "tensorflow.float32",
    "tensorflow.nn.dynamic_rnn",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testCellClipping": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "core",
    "numpy.float32",
    "numpy.random.rand",
    "sonnet.LSTM",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testCheckMaxUniqueStats": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.BatchNormLSTM"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testComputation": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "lstm",
    "lstm._forget_bias",
    "lstm.get_variables",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.exp",
    "numpy.float32",
    "numpy.hsplit",
    "numpy.matmul",
    "numpy.random.randn",
    "numpy.tanh",
    "sonnet.LSTM",
    "sonnet.LSTM.B_GATES",
    "sonnet.LSTM.W_GATES",
    "sonnet.LSTM.W_H_PROJECTION",
    "tensorflow.constant",
    "tensorflow.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testHiddenClipping": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "core",
    "numpy.float32",
    "numpy.random.rand",
    "sonnet.LSTM",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testInitialStateNames": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "lstm",
    "lstm.initial_state",
    "sonnet.LSTM",
    "tensorflow.executing_eagerly"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testInitializers": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "getattr",
    "lstm",
    "numpy.ones",
    "sonnet.python.modules.gated_rnn_test._construct_lstm",
    "sonnet.python.modules.gated_rnn_test._get_lstm_variable_names",
    "sonnet.python.modules.gated_rnn_test._get_possible_initializer_keys",
    "sonnet.python.modules.gated_rnn_test.itertools",
    "tensorflow.constant_initializer",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.ones",
    "wrapped_lstm"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testLayerNormVariables": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "sonnet.LSTM",
    "tensorflow.float32",
    "tensorflow.nn.dynamic_rnn",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testPartitioners": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "getattr",
    "lstm",
    "sonnet.python.modules.gated_rnn_test._construct_lstm",
    "sonnet.python.modules.gated_rnn_test._get_lstm_variable_names",
    "sonnet.python.modules.gated_rnn_test._get_possible_initializer_keys",
    "sonnet.python.modules.gated_rnn_test.itertools",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.ones",
    "tensorflow.python.ops.variables.PartitionedVariable",
    "tensorflow.variable_axis_size_partitioner",
    "type",
    "wrapped_lstm"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testPeephole": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "lstm",
    "lstm._forget_bias",
    "lstm.get_variables",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.exp",
    "numpy.float32",
    "numpy.hsplit",
    "numpy.ndarray",
    "numpy.random.randn",
    "numpy.tanh",
    "sonnet.LSTM",
    "sonnet.LSTM.B_GATES",
    "sonnet.LSTM.W_F_DIAG",
    "sonnet.LSTM.W_GATES",
    "sonnet.LSTM.W_I_DIAG",
    "sonnet.LSTM.W_O_DIAG",
    "tensorflow.constant",
    "tensorflow.convert_to_tensor",
    "tensorflow.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testPeepholeInitializersCheck": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "KeyError",
    "sonnet.LSTM",
    "sonnet.LSTM.W_F_DIAG",
    "sonnet.LSTM.W_I_DIAG",
    "sonnet.LSTM.W_O_DIAG",
    "tensorflow.constant_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testRecurrentDropout": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "abs",
    "absl.testing.parameterized.parameters",
    "numpy.float32",
    "numpy.max",
    "numpy.random.rand",
    "numpy.stack",
    "numpy.sum",
    "sonnet.lstm_with_recurrent_dropout",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.nn.dynamic_rnn"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testRegularizers": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "len",
    "sonnet.python.modules.gated_rnn_test._construct_lstm",
    "sonnet.python.modules.gated_rnn_test._get_possible_initializer_keys",
    "sonnet.python.modules.gated_rnn_test.itertools",
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.nn.l2_loss",
    "tensorflow.ones",
    "wrapped_lstm"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testSameInStaticAndDynamic": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "sonnet.LSTM",
    "tensorflow.contrib.rnn.static_rnn",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.nn.dynamic_rnn",
    "tensorflow.ones",
    "tensorflow.stack",
    "tensorflow.unstack"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testSameInStaticAndDynamicWithBatchNorm": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "connect",
    "range",
    "sonnet.BatchNormLSTM",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.ones",
    "tensorflow.unstack"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testSameInStaticAndDynamicWithBatchNorm.connect": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "tensorflow.contrib.rnn.static_rnn",
    "tensorflow.float32",
    "tensorflow.nn.dynamic_rnn",
    "tensorflow.stack"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testShape": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "lstm",
    "numpy.ndarray",
    "sonnet.LSTM",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testSideBySide": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "sonnet.LSTM"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testTraining": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "loss_fn",
    "numpy.random.rand",
    "sonnet.BatchNormLSTM",
    "tensorflow.constant",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testTraining.loss_fn": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "numpy.random.rand",
    "tensorflow.float32",
    "tensorflow.nn.dynamic_rnn",
    "tensorflow.reduce_mean",
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testVariables": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "lstm",
    "lstm.get_variables",
    "lstm.scope_name",
    "numpy.ndarray",
    "sonnet.Error",
    "sonnet.LSTM",
    "sonnet.LSTM.B_GATES",
    "sonnet.LSTM.W_GATES",
    "tensorflow.convert_to_tensor",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testZoneout": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "abs",
    "absl.testing.parameterized.parameters",
    "numpy.abs",
    "numpy.float32",
    "numpy.max",
    "numpy.random.rand",
    "numpy.stack",
    "numpy.sum",
    "sonnet.LSTMState",
    "sonnet.lstm_with_zoneout",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.nn.dynamic_rnn",
    "train_cell"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test._construct_lstm": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "any",
    "sonnet.BatchNormLSTM",
    "sonnet.LSTM"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test._get_lstm_variable_names": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "isinstance",
    "sonnet.BatchNormLSTM"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test._get_possible_initializer_keys": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "any",
    "sonnet.BatchNormLSTM.get_possible_initializer_keys",
    "sonnet.LSTM.get_possible_initializer_keys"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.gated_rnn_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.gated_rnn_test.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sonnet.python.modules.gated_rnn_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.modules.gated_rnn_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "sonnet.python.modules.gated_rnn_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.gated_rnn_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.python.modules.gated_rnn_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.gated_rnn_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "sonnet.python.modules.gated_rnn_test.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "sonnet.python.modules.layer_norm": {
  "data": {},
  "type": "module"
 },
 "sonnet.python.modules.layer_norm.LayerNorm": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.layer_norm.LayerNorm.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "bool",
    "int",
    "int_not_bool",
    "isinstance",
    "sonnet.python.modules.layer_norm.LayerNorm",
    "sonnet.python.modules.layer_norm.collections",
    "sonnet.python.modules.util.check_initializers",
    "sonnet.python.modules.util.check_partitioners",
    "sonnet.python.modules.util.check_regularizers",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.layer_norm.LayerNorm._build": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "create_beta_initializer",
    "create_gamma_initializer",
    "list",
    "range",
    "sonnet.python.modules.base.NotSupportedError",
    "tensorflow.bfloat16",
    "tensorflow.cast",
    "tensorflow.float16",
    "tensorflow.float32",
    "tensorflow.get_variable",
    "tensorflow.nn.batch_normalization",
    "tensorflow.nn.moments"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.layer_norm.LayerNorm.beta": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.layer_norm.LayerNorm.gamma": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.layer_norm.LayerNorm.initializers": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.layer_norm.LayerNorm.partitioners": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.layer_norm.LayerNorm.regularizers": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.layer_norm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.layer_norm.base": {
  "data": {
   "shadows": "sonnet.python.modules.base"
  },
  "type": "import"
 },
 "sonnet.python.modules.layer_norm.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "sonnet.python.modules.layer_norm.create_beta_initializer": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "tensorflow.zeros_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.layer_norm.create_gamma_initializer": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "tensorflow.ones_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.layer_norm.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.layer_norm.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.layer_norm.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.layer_norm.util": {
  "data": {
   "shadows": "sonnet.python.modules.util"
  },
  "type": "import"
 },
 "sonnet.python.modules.layer_norm_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.layer_norm_test.LayerNormTest": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.layer_norm_test.LayerNormTest.testAxesDefault": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "ln",
    "numpy.ones_like",
    "numpy.random.rand",
    "numpy.zeros_like",
    "sonnet.LayerNorm",
    "sonnet.python.modules.layer_norm_test._get_layer_norm_stats",
    "tensorflow.constant",
    "tensorflow.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.layer_norm_test.LayerNormTest.testDataType": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "layer_norm",
    "layer_norm.beta.dtype.base_dtype",
    "layer_norm.gamma.dtype.base_dtype",
    "sonnet.LayerNorm",
    "tensorflow.bfloat16",
    "tensorflow.float16",
    "tensorflow.float32",
    "tensorflow.float64",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.layer_norm_test.LayerNormTest.testInitializers": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "ln",
    "ln.beta.eval",
    "ln.gamma.eval",
    "ln.initializers",
    "numpy.ones",
    "sonnet.LayerNorm",
    "tensorflow.constant_initializer",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.layer_norm_test.LayerNormTest.testInvalidAxes": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "ValueError",
    "absl.testing.parameterized.parameters",
    "sonnet.LayerNorm"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.layer_norm_test.LayerNormTest.testInvalidInitializerParameters": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "sonnet.LayerNorm",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.layer_norm_test.LayerNormTest.testInvalidPartitionerParameters": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "sonnet.LayerNorm",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.layer_norm_test.LayerNormTest.testInvalidRegularizationParameters": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "sonnet.LayerNorm",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.layer_norm_test.LayerNormTest.testNormalization": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ln",
    "sonnet.LayerNorm",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.layer_norm_test.LayerNormTest.testPartitioners": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "ln",
    "ln.beta",
    "ln.gamma",
    "ln.partitioners",
    "sonnet.LayerNorm",
    "tensorflow.fixed_size_partitioner",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "tensorflow.python.ops.variables.PartitionedVariable",
    "type"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.layer_norm_test.LayerNormTest.testRegularizersInRegularizationLosses": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ln",
    "ln.regularizers",
    "sonnet.LayerNorm",
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.contrib.layers.l2_regularizer",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.layer_norm_test.LayerNormTest.testScaleAndOffset": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "module",
    "module.get_variables",
    "sonnet.LayerNorm",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.layer_norm_test.LayerNormTest.testSharing": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "ln",
    "sonnet.LayerNorm",
    "tensorflow.GraphKeys.GLOBAL_VARIABLES",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.layer_norm_test._get_layer_norm_stats": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "list",
    "numpy.mean",
    "numpy.reshape",
    "numpy.std",
    "numpy.transpose",
    "range",
    "set",
    "sonnet.python.modules.layer_norm_test.functools",
    "sonnet.python.modules.layer_norm_test.operator",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.layer_norm_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.layer_norm_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.layer_norm_test.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sonnet.python.modules.layer_norm_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.modules.layer_norm_test.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "sonnet.python.modules.layer_norm_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "sonnet.python.modules.layer_norm_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.layer_norm_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.python.modules.layer_norm_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.layer_norm_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets": {
  "data": {},
  "type": "module"
 },
 "sonnet.python.modules.nets.AlexNet": {
  "data": {
   "shadows": "sonnet.python.modules.nets.alexnet.AlexNet"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.AlexNetFull": {
  "data": {
   "shadows": "sonnet.python.modules.nets.alexnet.AlexNetFull"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.AlexNetMini": {
  "data": {
   "shadows": "sonnet.python.modules.nets.alexnet.AlexNetMini"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.ConvNet2D": {
  "data": {
   "shadows": "sonnet.python.modules.nets.convnet.ConvNet2D"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.ConvNet2DTranspose": {
  "data": {
   "shadows": "sonnet.python.modules.nets.convnet.ConvNet2DTranspose"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.Dilation": {
  "data": {
   "shadows": "sonnet.python.modules.nets.dilation.Dilation"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.MLP": {
  "data": {
   "shadows": "sonnet.python.modules.nets.mlp.MLP"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.VectorQuantizer": {
  "data": {
   "shadows": "sonnet.python.modules.nets.vqvae.VectorQuantizer"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.VectorQuantizerEMA": {
  "data": {
   "shadows": "sonnet.python.modules.nets.vqvae.VectorQuantizerEMA"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.alexnet": {
  "data": {},
  "type": "module"
 },
 "sonnet.python.modules.nets.alexnet.AlexNet": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.nets.alexnet.AlexNet.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "sonnet.python.modules.base.Error",
    "sonnet.python.modules.nets.alexnet.AlexNet",
    "sonnet.python.modules.util.check_initializers",
    "sonnet.python.modules.util.check_partitioners",
    "sonnet.python.modules.util.check_regularizers",
    "super",
    "tensorflow.logging.warn"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet.AlexNet._build": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "ValueError",
    "bn",
    "conv_mod",
    "enumerate",
    "linear_mod",
    "sonnet.python.modules.base.IncompatibleShapeError",
    "sonnet.python.modules.basic.BatchFlatten",
    "sonnet.python.modules.basic.Linear",
    "sonnet.python.modules.batch_norm.BatchNorm",
    "sonnet.python.modules.conv.Conv2D",
    "sonnet.python.modules.conv.VALID",
    "tensorflow.assert_equal",
    "tensorflow.control_dependencies",
    "tensorflow.equal",
    "tensorflow.identity",
    "tensorflow.logical_or",
    "tensorflow.nn.dropout",
    "tensorflow.nn.max_pool",
    "tensorflow.nn.relu"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet.AlexNet._calc_min_size": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "reversed"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet.AlexNet.conv_modules": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet.AlexNet.initializers": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet.AlexNet.linear_modules": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet.AlexNet.min_input_size": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet.AlexNet.partitioners": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet.AlexNet.regularizers": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet.AlexNetFull": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "sonnet.python.modules.nets.alexnet.AlexNet"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.nets.alexnet.AlexNetFull.__init__": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "sonnet.python.modules.nets.alexnet.AlexNetFull",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet.AlexNetMini": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "sonnet.python.modules.nets.alexnet.AlexNet"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.nets.alexnet.AlexNetMini.__init__": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "sonnet.python.modules.nets.alexnet.AlexNetMini",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.alexnet.base": {
  "data": {
   "shadows": "sonnet.python.modules.base"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.alexnet.basic": {
  "data": {
   "shadows": "sonnet.python.modules.basic"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.alexnet.batch_norm": {
  "data": {
   "shadows": "sonnet.python.modules.batch_norm"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.alexnet.conv": {
  "data": {
   "shadows": "sonnet.python.modules.conv"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.alexnet.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.alexnet.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.alexnet.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.alexnet.util": {
  "data": {
   "shadows": "sonnet.python.modules.util"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.alexnet_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testBatchNorm": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "absl.testing.parameterized.named_parameters",
    "len",
    "net",
    "net._min_size",
    "sonnet.nets.AlexNet",
    "sonnet.nets.AlexNet.FULL",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.global_variables",
    "tensorflow.global_variables_initializer",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testBatchNormConfig": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "len",
    "model",
    "model.get_variables",
    "sonnet.nets.AlexNetFull",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testCalcMinSize": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "sonnet.nets.AlexNetMini"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testCustomGetterUsed": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "alex_net",
    "alex_net.conv_modules",
    "alex_net.linear_modules",
    "alex_net.min_input_size",
    "module",
    "module.b",
    "module.w",
    "numpy.zeros_like",
    "sonnet.nets.AlexNetFull",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testCustomGetterUsed.set_to_const": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "getter"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testErrorHandling": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "sonnet.Error",
    "sonnet.nets.AlexNet"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testGetLinearModules": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "alex_net",
    "alex_net.linear_modules",
    "alex_net.min_input_size",
    "sonnet.nets.AlexNetFull",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testInitializers": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "alex_net",
    "alex_net.conv_modules",
    "alex_net.linear_modules",
    "alex_net.min_input_size",
    "module",
    "module.b",
    "module.w",
    "numpy.ones",
    "sonnet.nets.AlexNetFull",
    "tensorflow.constant_initializer",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testInputTooSmall": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "net",
    "net._min_size",
    "sonnet.IncompatibleShapeError",
    "sonnet.nets.AlexNetFull",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testInvalidInitializationParameters": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "sonnet.nets.AlexNetMini",
    "tensorflow.truncated_normal_initializer",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testInvalidRegularizationParameters": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "sonnet.nets.AlexNetMini",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testModes": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "module",
    "net",
    "sonnet.nets.AlexNet",
    "sonnet.nets.AlexNet.FULL",
    "sonnet.nets.AlexNet.MINI",
    "sonnet.nets.AlexNetFull",
    "sonnet.nets.AlexNetMini",
    "sonnet.python.modules.nets.alexnet_test.functools",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testNoDropoutInTesting": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "net",
    "net._min_size",
    "sonnet.nets.AlexNetFull",
    "tensorflow.errors.InvalidArgumentError",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testPartitioners": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "alex_net",
    "alex_net._min_size",
    "alex_net.conv_modules",
    "alex_net.linear_modules",
    "sonnet.nets.AlexNetMini",
    "tensorflow.executing_eagerly",
    "tensorflow.fixed_size_partitioner",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "tensorflow.python.ops.variables.PartitionedVariable",
    "type"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testRegularizersInRegularizationLosses": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "alex_net",
    "alex_net.conv_modules",
    "len",
    "sonnet.nets.AlexNetMini",
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.contrib.layers.l2_regularizer",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testSharing": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "len",
    "net",
    "net.get_variables",
    "sonnet.nets.AlexNetMini",
    "tensorflow.GraphKeys.GLOBAL_VARIABLES",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.alexnet_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.alexnet_test.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.alexnet_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.alexnet_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.alexnet_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.alexnet_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.alexnet_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.alexnet_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.convnet": {
  "data": {
   "symbols_in_volume": [
    "sonnet.python.modules.nets.convnet.DATA_FORMAT_NCHW",
    "sonnet.python.modules.nets.convnet.DATA_FORMAT_NHWC"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule",
    "sonnet.python.modules.base.Transposable"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bool",
    "callable",
    "isinstance",
    "len",
    "sonnet.python.modules.nets.convnet.ConvNet2D",
    "sonnet.python.modules.nets.convnet.DATA_FORMAT_NHWC",
    "sonnet.python.modules.nets.convnet.SUPPORTED_2D_DATA_FORMATS",
    "sonnet.python.modules.nets.convnet._replicate_elements",
    "sonnet.python.modules.nets.convnet.collections",
    "sonnet.python.modules.util.check_initializers",
    "sonnet.python.modules.util.check_partitioners",
    "sonnet.python.modules.util.check_regularizers",
    "sonnet.python.modules.util.deprecation_warning",
    "super",
    "tensorflow.nn.relu",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D._build": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "layer",
    "len",
    "normalizer",
    "sonnet.python.modules.batch_norm.BatchNorm",
    "sonnet.python.modules.batch_norm_v2.BatchNormV2",
    "sonnet.python.modules.util.remove_unsupported_kwargs",
    "tensorflow.logging.warning",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D._check_and_assign_normalization_members": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "isinstance",
    "sonnet.python.modules.nets.convnet.six",
    "sonnet.python.modules.util.parse_string_to_constructor"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D._instantiate_layers": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "six.moves.xrange",
    "sonnet.python.modules.conv.Conv2D",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D._parse_normalization_kwargs": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.modules.batch_norm.BatchNorm",
    "sonnet.python.modules.util.deprecation_warning"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D._transpose": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "ValueError",
    "l.input_shape",
    "layer",
    "len",
    "reversed",
    "sonnet.python.modules.nets.convnet.DATA_FORMAT_NHWC",
    "transpose_constructor"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.activate_final": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.activation": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.batch_norm_config": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "property",
    "sonnet.python.modules.util.deprecation_warning"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.initializers": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.input_shape": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.kernel_shapes": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.layers": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.normalization_ctor": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.normalization_kwargs": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.normalize_final": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.output_channels": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "callable",
    "l",
    "property",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.paddings": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.partitioners": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.rates": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.regularizers": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.strides": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.transpose": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "l.input_shape",
    "layer",
    "reversed",
    "sonnet.python.modules.nets.convnet.DATA_FORMAT_NCHW",
    "sonnet.python.modules.nets.convnet.DATA_FORMAT_NHWC",
    "sonnet.python.modules.nets.convnet.SUPPORTED_2D_DATA_FORMATS",
    "sonnet.python.modules.nets.convnet.functools",
    "tensorflow.logging.warning",
    "transpose_constructor"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.use_batch_norm": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "property",
    "sonnet.python.modules.batch_norm.BatchNorm",
    "sonnet.python.modules.util.deprecation_warning"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.use_bias": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2DTranspose": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "sonnet.python.modules.nets.convnet.ConvNet2D"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2DTranspose.__init__": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "len",
    "sonnet.python.modules.nets.convnet.ConvNet2DTranspose",
    "sonnet.python.modules.nets.convnet.DATA_FORMAT_NHWC",
    "sonnet.python.modules.nets.convnet._replicate_elements",
    "sonnet.python.modules.nets.convnet.collections",
    "super",
    "tensorflow.nn.relu",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2DTranspose._instantiate_layers": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "six.moves.xrange",
    "sonnet.python.modules.conv.Conv2DTranspose",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2DTranspose.output_shapes": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "callable",
    "l",
    "property",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2DTranspose.transpose": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.modules.batch_norm.BatchNorm",
    "sonnet.python.modules.nets.convnet.ConvNet2D",
    "sonnet.python.modules.nets.convnet.functools",
    "tensorflow.logging.warning",
    "transpose_constructor"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.DATA_FORMAT_NCHW": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sonnet.python.modules.nets.convnet.DATA_FORMAT_NHWC": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sonnet.python.modules.nets.convnet.SUPPORTED_2D_DATA_FORMATS": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "sonnet.python.modules.nets.convnet._replicate_elements": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.convnet.base": {
  "data": {
   "shadows": "sonnet.python.modules.base"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.convnet.batch_norm": {
  "data": {
   "shadows": "sonnet.python.modules.batch_norm"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.convnet.batch_norm_v2": {
  "data": {
   "shadows": "sonnet.python.modules.batch_norm_v2"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.convnet.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.convnet.conv": {
  "data": {
   "shadows": "sonnet.python.modules.conv"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.convnet.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.convnet.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.convnet.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.convnet.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.convnet.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.convnet.util": {
  "data": {
   "shadows": "sonnet.python.modules.util"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.convnet.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.convnet_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTest": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTest.setUp": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "sonnet.SAME",
    "sonnet.python.modules.nets.convnet_test.ConvNet2DTest",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTest.testAlwaysProvideIsTraining": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "mod",
    "sonnet.BatchNorm",
    "sonnet.LayerNorm",
    "sonnet.nets.ConvNet2D",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTest.testConstructor": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "net",
    "net.kernel_shapes",
    "net.layers",
    "net.output_channels",
    "net.paddings",
    "net.strides",
    "sonnet.nets.ConvNet2D",
    "sonnet.python.modules.conv._fill_shape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTest.testCustomGetter": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "len",
    "module",
    "sonnet.custom_getters.Context",
    "sonnet.custom_getters.stop_gradient",
    "sonnet.nets.ConvNet2D",
    "tensorflow.GradientTape",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.gradients",
    "tensorflow.random_normal",
    "tensorflow.trainable_variables"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTest.testCustomGetterTranspose": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "conv2d",
    "conv2d.transpose",
    "conv2d_transpose",
    "conv2d_transpose.get_variables",
    "len",
    "sonnet.custom_getters.stop_gradient",
    "sonnet.nets.ConvNet2D",
    "tensorflow.GradientTape",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.gradients",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTest.testIncorrectRatesLength": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "sonnet.nets.ConvNet2D"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTest.testNoCustomGetterTranspose": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "conv2d",
    "conv2d.get_variables",
    "conv2d.transpose",
    "conv2d_transpose",
    "conv2d_transpose.get_variables",
    "len",
    "sonnet.custom_getters.stop_gradient",
    "sonnet.nets.ConvNet2D",
    "tensorflow.GradientTape",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.gradients",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTest.testPartitioners": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "module",
    "module._layers",
    "sonnet.nets.ConvNet2D",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "tensorflow.python.ops.variables.PartitionedVariable",
    "tensorflow.variable_axis_size_partitioner",
    "type"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTest.testTranspose": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "net",
    "net.input_shape",
    "net.layers",
    "net.layers.input_shape",
    "net.layers.scope_name",
    "net.module_name",
    "net.scope_name",
    "net.transpose",
    "net_transpose",
    "net_transpose.layers.output_channels",
    "net_transpose.layers.output_shape",
    "range",
    "sonnet.Error",
    "sonnet.nets.ConvNet2D",
    "tensorflow.float32",
    "tensorflow.random_normal",
    "tensorflow.variable_scope",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTest.testVariableMap": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "module",
    "module.get_variables",
    "set",
    "sonnet.nets.ConvNet2D",
    "tensorflow.float32",
    "tensorflow.random_normal"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTransposeTest": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTransposeTest.setUp": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "sonnet.SAME",
    "sonnet.python.modules.nets.convnet_test.ConvNet2DTransposeTest",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTransposeTest.testAlwaysProvideIsTraining": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "mod",
    "sonnet.BatchNorm",
    "sonnet.LayerNorm",
    "sonnet.nets.ConvNet2DTranspose",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTransposeTest.testConstructor": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "enumerate",
    "len",
    "net",
    "net.kernel_shapes",
    "net.layers",
    "net.output_channels",
    "net.output_shapes",
    "net.paddings",
    "net.strides",
    "sonnet.nets.ConvNet2DTranspose",
    "sonnet.python.modules.conv._fill_shape",
    "tensorflow.truncated_normal_initializer",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTransposeTest.testCustomGetter": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "len",
    "module",
    "sonnet.custom_getters.Context",
    "sonnet.custom_getters.stop_gradient",
    "sonnet.nets.ConvNet2DTranspose",
    "tensorflow.GradientTape",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.gradients",
    "tensorflow.random_normal",
    "tensorflow.trainable_variables"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTransposeTest.testCustomGetterTranspose": {
  "data": {
   "lineno": 1058,
   "symbols_in_volume": [
    "conv2d",
    "conv2d.get_variables",
    "conv2d_t",
    "conv2d_t.transpose",
    "len",
    "sonnet.custom_getters.stop_gradient",
    "sonnet.nets.ConvNet2DTranspose",
    "tensorflow.GradientTape",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.gradients",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTransposeTest.testNoCustomGetterTranspose": {
  "data": {
   "lineno": 1086,
   "symbols_in_volume": [
    "conv2d",
    "conv2d.get_variables",
    "conv2d_t",
    "conv2d_t.get_variables",
    "conv2d_t.transpose",
    "len",
    "sonnet.custom_getters.stop_gradient",
    "sonnet.nets.ConvNet2DTranspose",
    "tensorflow.GradientTape",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.gradients",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTransposeTest.testPartitioners": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "module",
    "module._layers",
    "sonnet.nets.ConvNet2DTranspose",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "tensorflow.python.ops.variables.PartitionedVariable",
    "tensorflow.variable_axis_size_partitioner",
    "type"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTransposeTest.testTranspose": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "net",
    "net.layers",
    "net.layers.input_shape",
    "net.layers.output_shape",
    "net.layers.scope_name",
    "net.transpose",
    "net_transpose",
    "net_transpose.layers.input_shape",
    "net_transpose.layers.output_channels",
    "range",
    "sonnet.Error",
    "sonnet.nets.ConvNet2DTranspose",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.random_normal"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.DefunTest": {
  "data": {
   "lineno": 1130,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.nets.convnet_test.DefunTest.testDefun": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "model",
    "module",
    "sonnet.SAME",
    "sonnet.nets.ConvNet2D",
    "sonnet.nets.ConvNet2DTranspose",
    "sonnet.python.modules.nets.convnet_test.functools",
    "tensorflow.contrib.eager.defun",
    "tensorflow.random_normal"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.setUp": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "sonnet.SAME",
    "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.testActivateFinal": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "len",
    "model",
    "model.activate_final",
    "model.get_variables",
    "model.transpose",
    "module",
    "sonnet.nets.ConvNet2D",
    "sonnet.nets.ConvNet2DTranspose",
    "sonnet.python.modules.nets.convnet_test.functools",
    "tensorflow.float32",
    "tensorflow.random_normal"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.testBatchNorm": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "any",
    "len",
    "model",
    "model.get_variables",
    "model.use_batch_norm",
    "module",
    "sonnet.nets.ConvNet2D",
    "sonnet.nets.ConvNet2DTranspose",
    "sonnet.python.modules.nets.convnet_test.functools",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.global_variables",
    "tensorflow.random_normal"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.testBatchNormBuildFlag": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "ValueError",
    "absl.testing.parameterized.named_parameters",
    "model",
    "module",
    "sonnet.nets.ConvNet2D",
    "sonnet.nets.ConvNet2DTranspose",
    "sonnet.python.modules.nets.convnet_test.functools",
    "tensorflow.float32",
    "tensorflow.random_normal"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.testBatchNormConfig": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "len",
    "model",
    "model.get_variables",
    "module",
    "sonnet.nets.ConvNet2D",
    "sonnet.nets.ConvNet2DTranspose",
    "sonnet.python.modules.nets.convnet_test.functools",
    "tensorflow.float32",
    "tensorflow.random_normal"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.testConstructor": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "absl.testing.parameterized.named_parameters",
    "module",
    "sonnet.SAME",
    "sonnet.nets.ConvNet2D",
    "sonnet.nets.ConvNet2DTranspose",
    "sonnet.python.modules.nets.convnet_test.functools",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.truncated_normal_initializer",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.testDataFormat": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "module",
    "net",
    "sonnet.nets.ConvNet2D",
    "sonnet.nets.ConvNet2DTranspose",
    "sonnet.python.modules.nets.convnet_test.functools",
    "tensorflow.errors.InvalidArgumentError",
    "tensorflow.errors.UnimplementedError",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.random_normal"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.testName": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "module",
    "sonnet.nets.ConvNet2D",
    "sonnet.nets.ConvNet2DTranspose",
    "sonnet.python.modules.nets.convnet_test.functools",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.testNoBias": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "len",
    "model",
    "model.get_variables",
    "model.use_bias",
    "module",
    "sonnet.nets.ConvNet2D",
    "sonnet.nets.ConvNet2DTranspose",
    "sonnet.python.modules.nets.convnet_test.functools",
    "tensorflow.float32",
    "tensorflow.random_normal"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.testNoBiasIterable": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "len",
    "model",
    "model.layers",
    "model.transpose",
    "model.use_bias",
    "module",
    "reversed",
    "sonnet.nets.ConvNet2D",
    "sonnet.nets.ConvNet2DTranspose",
    "sonnet.python.modules.nets.convnet_test.functools",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.testNormalizationBadConfig": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "ValueError",
    "absl.testing.parameterized.parameters",
    "conv_ctor",
    "sonnet.LayerNorm",
    "sonnet.nets.ConvNet2D",
    "sonnet.nets.ConvNet2DTranspose",
    "sonnet.python.modules.nets.convnet_test.functools"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.testNormalizations": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "conv_ctor",
    "module",
    "numpy.mean",
    "numpy.ones_like",
    "numpy.reshape",
    "numpy.std",
    "numpy.zeros_like",
    "sonnet.LayerNorm",
    "sonnet.nets.ConvNet2D",
    "sonnet.nets.ConvNet2DTranspose",
    "sonnet.python.modules.nets.convnet_test.functools",
    "tensorflow.executing_eagerly",
    "tensorflow.random_uniform",
    "tensorflow.train.SingularMonitoredSession"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.testRegularizersInRegularizationLosses": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "model",
    "module",
    "sonnet.nets.ConvNet2D",
    "sonnet.nets.ConvNet2DTranspose",
    "sonnet.python.modules.nets.convnet_test.functools",
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.contrib.layers.l2_regularizer",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.random_normal"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.testTransposeDefaultParameter": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "getattr",
    "model",
    "model.transpose",
    "module",
    "reversed",
    "sonnet.SAME",
    "sonnet.VALID",
    "sonnet.nets.ConvNet2D",
    "sonnet.nets.ConvNet2DTranspose",
    "sonnet.python.modules.nets.convnet_test.functools",
    "sonnet.python.modules.nets.convnet_test.itertools",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.testTransposePassThroughParameter": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "getattr",
    "isinstance",
    "model",
    "model.transpose",
    "module",
    "sonnet.BatchNorm",
    "sonnet.SAME",
    "sonnet.VALID",
    "sonnet.nets.ConvNet2D",
    "sonnet.nets.ConvNet2DTranspose",
    "sonnet.python.modules.nets.convnet_test.collections",
    "sonnet.python.modules.nets.convnet_test.functools",
    "sonnet.python.modules.nets.convnet_test.itertools",
    "tensorflow.nn.tanh"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.convnet_test.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.convnet_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.convnet_test.fill_shape": {
  "data": {
   "shadows": "sonnet.python.modules.conv._fill_shape"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.convnet_test.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.convnet_test.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.convnet_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.convnet_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.convnet_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.convnet_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.convnet_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.convnet_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.dilation": {
  "data": {},
  "type": "module"
 },
 "sonnet.python.modules.nets.dilation.Dilation": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.nets.dilation.Dilation.__init__": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "sonnet.python.modules.nets.dilation.Dilation",
    "sonnet.python.modules.util.check_initializers",
    "sonnet.python.modules.util.check_regularizers",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation.Dilation._build": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "ValueError",
    "dilation_mod",
    "len",
    "sonnet.python.modules.base.IncompatibleShapeError",
    "sonnet.python.modules.nets.dilation.identity_kernel_initializer",
    "sonnet.python.modules.nets.dilation.noisy_identity_kernel_initializer",
    "sonnet.python.modules.sequential.Sequential",
    "tensorflow.zeros_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation.Dilation._dilated_conv_layer": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "sonnet.python.modules.conv.Conv2D",
    "sonnet.python.modules.sequential.Sequential",
    "tensorflow.nn.relu"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation.Dilation.conv_modules": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation._range_along_dimension": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "range",
    "tensorflow.range",
    "tensorflow.reshape",
    "tensorflow.tile"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.dilation.base": {
  "data": {
   "shadows": "sonnet.python.modules.base"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.dilation.conv": {
  "data": {
   "shadows": "sonnet.python.modules.conv"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.dilation.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.dilation.identity_kernel_initializer": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "sonnet.python.modules.nets.dilation._range_along_dimension",
    "tensorflow.cast",
    "tensorflow.equal",
    "tensorflow.float32",
    "tensorflow.logical_and"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation.noisy_identity_kernel_initializer": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation.noisy_identity_kernel_initializer._noisy_identity_kernel_initializer": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "sonnet.python.modules.nets.dilation._range_along_dimension",
    "tensorflow.equal",
    "tensorflow.float32",
    "tensorflow.floordiv",
    "tensorflow.logical_and",
    "tensorflow.ones",
    "tensorflow.truncated_normal",
    "tensorflow.where"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.dilation.sequential": {
  "data": {
   "shadows": "sonnet.python.modules.sequential"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.dilation.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.dilation.util": {
  "data": {
   "shadows": "sonnet.python.modules.util"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.dilation_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.nets.dilation_test.DilationTest": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.nets.dilation_test.DilationTest.setUpWithNumOutputClasses": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.float32",
    "numpy.random.RandomState",
    "sonnet.nets.Dilation"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation_test.DilationTest.testBasicComputation": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "tensorflow.convert_to_tensor",
    "tensorflow.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation_test.DilationTest.testInvalidModelSize": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "ValueError",
    "module",
    "sonnet.nets.Dilation",
    "sonnet.nets.noisy_identity_kernel_initializer",
    "tensorflow.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation_test.DilationTest.testInvalidRegularizationParameters": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "sonnet.nets.Dilation",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation_test.DilationTest.testInvalidShape": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "sonnet.IncompatibleShapeError",
    "tensorflow.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation_test.DilationTest.testLargeComputation": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "module",
    "numpy.sum",
    "sonnet.nets.Dilation",
    "tensorflow.convert_to_tensor",
    "tensorflow.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation_test.DilationTest.testRegularizersInRegularizationLosses": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "dilation_mod",
    "len",
    "range",
    "sonnet.nets.Dilation",
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.contrib.layers.l2_regularizer",
    "tensorflow.convert_to_tensor",
    "tensorflow.executing_eagerly",
    "tensorflow.get_collection"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation_test.DilationTest.testShapeInference": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "tensorflow.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation_test.DilationTest.testUtilities": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.modules.nets.dilation._range_along_dimension"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation_test.DilationTest.test_properties": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "list",
    "sonnet.NotConnectedError",
    "tensorflow.convert_to_tensor",
    "type"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation_test.IdentityKernelInitializerTest": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.nets.dilation_test.IdentityKernelInitializerTest.testComputation": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.nditer",
    "sonnet.nets.identity_kernel_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation_test.IdentityKernelInitializerTest.testInvalidShapes": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "absl.testing.parameterized.named_parameters",
    "sonnet.nets.identity_kernel_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation_test.NoisyIdentityKernelInitializerTest": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.nets.dilation_test.NoisyIdentityKernelInitializerTest.testComputation": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "initializer",
    "numpy.nditer",
    "sonnet.nets.noisy_identity_kernel_initializer",
    "tensorflow.reduce_sum",
    "tensorflow.set_random_seed"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation_test.NoisyIdentityKernelInitializerTest.testInvalidShapes": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ValueError",
    "absl.testing.parameterized.named_parameters",
    "initializer",
    "sonnet.nets.noisy_identity_kernel_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.dilation_test.dilation": {
  "data": {
   "shadows": "sonnet.python.modules.nets.dilation"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.dilation_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.dilation_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.dilation_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.dilation_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.dilation_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.dilation_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.identity_kernel_initializer": {
  "data": {
   "shadows": "sonnet.python.modules.nets.dilation.identity_kernel_initializer"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.mlp": {
  "data": {},
  "type": "module"
 },
 "sonnet.python.modules.nets.mlp.MLP": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule",
    "sonnet.python.modules.base.Transposable"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.nets.mlp.MLP.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "callable",
    "isinstance",
    "len",
    "sonnet.python.modules.nets.mlp.MLP",
    "sonnet.python.modules.nets.mlp.collections",
    "sonnet.python.modules.util.check_initializers",
    "sonnet.python.modules.util.check_partitioners",
    "sonnet.python.modules.util.check_regularizers",
    "super",
    "tensorflow.nn.relu",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP._build": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "six.moves.xrange",
    "tensorflow.constant",
    "tensorflow.nn.dropout",
    "tensorflow.python.layers.utils.smart_cond",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP._instantiate_layers": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "six.moves.xrange",
    "sonnet.python.modules.basic.Linear"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP.activate_final": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP.activation": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP.clone": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "sonnet.python.modules.nets.mlp.MLP"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP.get_possible_initializer_keys": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "classmethod",
    "sonnet.python.modules.basic.Linear.get_possible_initializer_keys"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP.initializers": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP.input_shape": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP.layers": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP.output_size": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "callable",
    "last_size",
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP.output_sizes": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "callable",
    "l",
    "property",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP.partitioners": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP.regularizers": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP.transpose": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "l.input_shape",
    "sonnet.python.modules.nets.mlp.MLP"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP.use_bias": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP.use_dropout": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.mlp.base": {
  "data": {
   "shadows": "sonnet.python.modules.base"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.mlp.basic": {
  "data": {
   "shadows": "sonnet.python.modules.basic"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.mlp.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.mlp.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.mlp.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.mlp.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.mlp.util": {
  "data": {
   "shadows": "sonnet.python.modules.util"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.mlp.utils": {
  "data": {
   "shadows": "tensorflow.python.layers.utils"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.mlp.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.mlp_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.setUp": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "sonnet.python.modules.nets.mlp_test.MLPTest",
    "super",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.fixed_size_partitioner",
    "tensorflow.truncated_normal_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.testActivateBiasFlags": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "len",
    "mlp",
    "mlp.get_variables",
    "sonnet.nets.MLP",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.random_normal"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.testClone": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "len",
    "mlp",
    "mlp.clone",
    "mlp.get_variables",
    "mlp.module_name",
    "mlp.scope_name",
    "mlp_clone",
    "mlp_clone.get_variables",
    "set",
    "sonnet.nets.MLP",
    "tensorflow.float32",
    "tensorflow.random_normal",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.testConstructor": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "absl.testing.parameterized.named_parameters",
    "len",
    "range",
    "sonnet.nets.MLP",
    "tensorflow.truncated_normal_initializer",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.testCustomGettersUsed": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "mlpi",
    "mlpi.layers.b",
    "mlpi.layers.w",
    "numpy.zeros_like",
    "sonnet.nets.MLP",
    "tensorflow.global_variables_initializer",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.testCustomGettersUsed.get_pi": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "getter"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.testDefun": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "mlp",
    "sonnet.nets.MLP",
    "tensorflow.contrib.eager.defun",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.testDropout": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "mlp",
    "sonnet.nets.MLP",
    "tensorflow.executing_eagerly",
    "tensorflow.get_default_graph",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.testDropoutOff": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "mlp",
    "sonnet.nets.MLP",
    "tensorflow.executing_eagerly",
    "tensorflow.get_default_graph",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.testDropoutTensor": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "mlp",
    "sonnet.nets.MLP",
    "tensorflow.bool",
    "tensorflow.convert_to_tensor",
    "tensorflow.executing_eagerly",
    "tensorflow.get_default_graph",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.testName": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "sonnet.nets.MLP",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.testRegularizersInRegularizationLosses": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "len",
    "mlp",
    "sonnet.nets.MLP",
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.contrib.layers.l2_regularizer",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.random_normal"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.testShape": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "list",
    "mlp",
    "mlp.input_shape",
    "mlp.output_sizes",
    "sonnet.nets.MLP",
    "tensorflow.float32",
    "tensorflow.random_normal"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.testTranspose": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "len",
    "mlp",
    "mlp.activate_final",
    "mlp.layers",
    "mlp.layers.input_shape",
    "mlp.layers.scope_name",
    "mlp.module_name",
    "mlp.scope_name",
    "mlp.transpose",
    "mlp.use_bias",
    "mlp_transpose",
    "mlp_transpose.activate_final",
    "mlp_transpose.get_variables",
    "mlp_transpose.layers.output_size",
    "mlp_transpose.use_bias",
    "range",
    "sonnet.Error",
    "sonnet.nets.MLP",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.random_normal",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.testVariableMap": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "mlp",
    "mlp.get_variables",
    "set",
    "sonnet.nets.MLP",
    "tensorflow.float32",
    "tensorflow.random_normal"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.mlp_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.mlp_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.mlp_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.mlp_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.mlp_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.mlp_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.noisy_identity_kernel_initializer": {
  "data": {
   "shadows": "sonnet.python.modules.nets.dilation.noisy_identity_kernel_initializer"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.vqvae": {
  "data": {},
  "type": "module"
 },
 "sonnet.python.modules.nets.vqvae.VectorQuantizer": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.nets.vqvae.VectorQuantizer.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "sonnet.python.modules.nets.vqvae.VectorQuantizer",
    "super",
    "tensorflow.get_variable",
    "tensorflow.uniform_unit_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.vqvae.VectorQuantizer._build": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "tensorflow.Assert",
    "tensorflow.argmax",
    "tensorflow.control_dependencies",
    "tensorflow.equal",
    "tensorflow.exp",
    "tensorflow.log",
    "tensorflow.matmul",
    "tensorflow.one_hot",
    "tensorflow.reduce_mean",
    "tensorflow.reduce_sum",
    "tensorflow.reshape",
    "tensorflow.shape",
    "tensorflow.stop_gradient"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.vqvae.VectorQuantizer.embeddings": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.vqvae.VectorQuantizer.quantize": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "tensorflow.control_dependencies",
    "tensorflow.nn.embedding_lookup",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.vqvae.VectorQuantizerEMA": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.nets.vqvae.VectorQuantizerEMA.__init__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "sonnet.python.modules.nets.vqvae.VectorQuantizerEMA",
    "super",
    "tensorflow.constant_initializer",
    "tensorflow.get_variable",
    "tensorflow.random_normal_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.vqvae.VectorQuantizerEMA._build": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "tensorflow.Assert",
    "tensorflow.argmax",
    "tensorflow.assign",
    "tensorflow.control_dependencies",
    "tensorflow.equal",
    "tensorflow.exp",
    "tensorflow.log",
    "tensorflow.matmul",
    "tensorflow.one_hot",
    "tensorflow.python.training.moving_averages.assign_moving_average",
    "tensorflow.reduce_mean",
    "tensorflow.reduce_sum",
    "tensorflow.reshape",
    "tensorflow.shape",
    "tensorflow.stop_gradient"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.vqvae.VectorQuantizerEMA.embeddings": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.vqvae.VectorQuantizerEMA.quantize": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "tensorflow.control_dependencies",
    "tensorflow.nn.embedding_lookup",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.vqvae.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.vqvae.base": {
  "data": {
   "shadows": "sonnet.python.modules.base"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.vqvae.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.vqvae.moving_averages": {
  "data": {
   "shadows": "tensorflow.python.training.moving_averages"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.vqvae.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.vqvae.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.vqvae_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.nets.vqvae_test.VqvaeTest": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.nets.vqvae_test.VqvaeTest.testConstruct": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "constructor",
    "numpy.argmax",
    "numpy.dot",
    "numpy.float32",
    "numpy.random.randn",
    "sonnet.nets.VectorQuantizer",
    "sonnet.nets.VectorQuantizerEMA",
    "tensorflow.constant",
    "tensorflow.global_variables_initializer",
    "vqvae",
    "vqvae.embeddings"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.vqvae_test.VqvaeTest.testEmaUpdating": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.random.randn",
    "range",
    "sonnet.nets.VectorQuantizerEMA",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder",
    "vqvae",
    "vqvae.embeddings"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.vqvae_test.VqvaeTest.testNoneBatch": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "constructor",
    "sonnet.nets.VectorQuantizer",
    "sonnet.nets.VectorQuantizerEMA",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "vqvae"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.vqvae_test.VqvaeTest.testShapeChecking": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ValueError",
    "absl.testing.parameterized.parameters",
    "constructor",
    "numpy.float32",
    "numpy.random.randn",
    "sonnet.nets.VectorQuantizer",
    "sonnet.nets.VectorQuantizerEMA",
    "tensorflow.constant",
    "vqvae"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.nets.vqvae_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.vqvae_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.vqvae_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.vqvae_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.vqvae_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.vqvae_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.python.modules.nets.vqvae_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.pondering_rnn": {
  "data": {},
  "type": "module"
 },
 "sonnet.python.modules.pondering_rnn.ACTCore": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "sonnet.python.modules.rnn_core.RNNCore"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.pondering_rnn.ACTCore.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "sonnet.python.modules.pondering_rnn.ACTCore",
    "super",
    "tensorflow.TensorShape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn.ACTCore._body": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "halting_linear",
    "sonnet.python.modules.pondering_rnn._nested_add",
    "sonnet.python.modules.pondering_rnn._nested_unary_mul",
    "tensorflow.constant",
    "tensorflow.equal",
    "tensorflow.greater_equal",
    "tensorflow.logical_or",
    "tensorflow.sigmoid",
    "tensorflow.where"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn.ACTCore._build": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "halting_linear",
    "sonnet.python.modules.basic.Linear",
    "sonnet.python.modules.pondering_rnn._nested_zeros_like",
    "sonnet.python.modules.pondering_rnn.functools",
    "tensorflow.concat",
    "tensorflow.ones",
    "tensorflow.while_loop",
    "tensorflow.zeros",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn.ACTCore._cond": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "tensorflow.reduce_any"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn.ACTCore.batch_size": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn.ACTCore.dtype": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn.ACTCore.initial_state": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn.ACTCore.output_size": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "property",
    "tensorflow.TensorShape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn.ACTCore.state_size": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn._nested_add": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "sonnet.python.ops.nest.map"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn._nested_unary_mul": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "sonnet.python.ops.nest.map"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn._nested_unary_mul.mul_with_broadcast": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn._nested_zeros_like": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "sonnet.python.ops.nest.map",
    "tensorflow.zeros_like"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.pondering_rnn.basic": {
  "data": {
   "shadows": "sonnet.python.modules.basic"
  },
  "type": "import"
 },
 "sonnet.python.modules.pondering_rnn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.pondering_rnn.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sonnet.python.modules.pondering_rnn.nest": {
  "data": {
   "shadows": "sonnet.python.ops.nest"
  },
  "type": "import"
 },
 "sonnet.python.modules.pondering_rnn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.pondering_rnn.rnn_core": {
  "data": {
   "shadows": "sonnet.python.modules.rnn_core"
  },
  "type": "import"
 },
 "sonnet.python.modules.pondering_rnn.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.pondering_rnn_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.array",
    "tensorflow.contrib.framework.nest",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.pondering_rnn_test.ACTCoreTest": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.pondering_rnn_test.ACTCoreTest._testACT": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "get_state_for_halting",
    "numpy.all",
    "numpy.floor",
    "sonnet.python.modules.pondering_rnn.ACTCore",
    "sonnet.python.modules.pondering_rnn_test.nest",
    "tensorflow.global_variables_initializer",
    "tensorflow.nn.dynamic_rnn",
    "tensorflow.random_uniform",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.ACTCoreTest._test_nested": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.equal"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.ACTCoreTest.testACTLSTM": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "sonnet.python.modules.gated_rnn.LSTM"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.ACTCoreTest.testACTLSTM.get_hidden_state": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.ACTCoreTest.testACTVanilla": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "sonnet.python.modules.basic_rnn.VanillaRNN"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.ACTCoreTest.testACTVanilla.get_state": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.ACTCoreTest.testNestedAdd": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "sonnet.python.modules.pondering_rnn._nested_add",
    "sonnet.python.modules.pondering_rnn_test._VALUES_A",
    "sonnet.python.modules.pondering_rnn_test._VALUES_B",
    "sonnet.python.modules.pondering_rnn_test._build_nested_tensor",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.ACTCoreTest.testNestedUnaryMul": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "sonnet.python.modules.pondering_rnn._nested_unary_mul",
    "sonnet.python.modules.pondering_rnn_test._VALUES_A",
    "sonnet.python.modules.pondering_rnn_test._build_nested_tensor",
    "tensorflow.constant",
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.ACTCoreTest.testNestedUnaryMul_multiDim": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "sonnet.python.modules.pondering_rnn._nested_unary_mul",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.ACTCoreTest.testNestedZerosLike": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.array",
    "sonnet.python.modules.pondering_rnn._nested_zeros_like",
    "sonnet.python.modules.pondering_rnn_test._VALUES_A",
    "sonnet.python.modules.pondering_rnn_test._build_nested_tensor"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.ACTCoreTest.testOutput2D": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.modules.pondering_rnn.ACTCore",
    "sonnet.python.modules.pondering_rnn_test.Output2DCore"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.ACTCoreTest.testOutputTuple": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.modules.pondering_rnn.ACTCore",
    "sonnet.python.modules.pondering_rnn_test.OutputTupleCore"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.Output2DCore": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "sonnet.python.modules.rnn_core.RNNCore"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.pondering_rnn_test.Output2DCore._build": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.Output2DCore.output_size": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "property",
    "tensorflow.TensorShape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.Output2DCore.state_size": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "property",
    "tensorflow.TensorShape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.OutputTupleCore": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "sonnet.python.modules.rnn_core.RNNCore"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.pondering_rnn_test.OutputTupleCore._build": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.OutputTupleCore.output_size": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "property",
    "tensorflow.TensorShape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.OutputTupleCore.state_size": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "property",
    "tensorflow.TensorShape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test._VALUES_A": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sonnet.python.modules.pondering_rnn_test._VALUES_B": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "sonnet.python.modules.pondering_rnn_test._build_nested_tensor": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.pondering_rnn_test.basic_rnn": {
  "data": {
   "shadows": "sonnet.python.modules.basic_rnn"
  },
  "type": "import"
 },
 "sonnet.python.modules.pondering_rnn_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.pondering_rnn_test.gated_rnn": {
  "data": {
   "shadows": "sonnet.python.modules.gated_rnn"
  },
  "type": "import"
 },
 "sonnet.python.modules.pondering_rnn_test.nest": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sonnet.python.modules.pondering_rnn_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.modules.pondering_rnn_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "sonnet.python.modules.pondering_rnn_test.pondering_rnn": {
  "data": {
   "shadows": "sonnet.python.modules.pondering_rnn"
  },
  "type": "import"
 },
 "sonnet.python.modules.pondering_rnn_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.pondering_rnn_test.rnn_core": {
  "data": {
   "shadows": "sonnet.python.modules.rnn_core"
  },
  "type": "import"
 },
 "sonnet.python.modules.pondering_rnn_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.relational_memory": {
  "data": {},
  "type": "module"
 },
 "sonnet.python.modules.relational_memory.RelationalMemory": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "sonnet.python.modules.rnn_core.RNNCore"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.relational_memory.RelationalMemory.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.modules.relational_memory.RelationalMemory",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.relational_memory.RelationalMemory._attend_over_memory": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "attention_mlp",
    "range",
    "sonnet.python.modules.basic.BatchApply",
    "sonnet.python.modules.layer_norm.LayerNorm",
    "sonnet.python.modules.nets.mlp.MLP"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.relational_memory.RelationalMemory._build": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "sonnet.python.modules.basic.BatchApply",
    "sonnet.python.modules.basic.BatchFlatten",
    "sonnet.python.modules.basic.Linear",
    "tensorflow.concat",
    "tensorflow.expand_dims",
    "tensorflow.tanh"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.relational_memory.RelationalMemory._calculate_gate_size": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "sonnet.python.modules.relational_memory.RelationalMemory._create_gates": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "sonnet.python.modules.basic.BatchApply",
    "sonnet.python.modules.basic.BatchFlatten",
    "sonnet.python.modules.basic.Linear",
    "tensorflow.expand_dims",
    "tensorflow.sigmoid",
    "tensorflow.split",
    "tensorflow.tanh"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.relational_memory.RelationalMemory._multihead_attention": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "sonnet.python.modules.basic.BatchApply",
    "sonnet.python.modules.basic.BatchFlatten",
    "sonnet.python.modules.basic.BatchReshape",
    "sonnet.python.modules.basic.Linear",
    "sonnet.python.modules.layer_norm.LayerNorm",
    "tensorflow.matmul",
    "tensorflow.nn.softmax",
    "tensorflow.split",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.relational_memory.RelationalMemory.forget_gate": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.relational_memory.RelationalMemory.initial_state": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "tensorflow.concat",
    "tensorflow.eye",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.relational_memory.RelationalMemory.input_gate": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.relational_memory.RelationalMemory.output_size": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "property",
    "tensorflow.TensorShape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.relational_memory.RelationalMemory.state_size": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "property",
    "tensorflow.TensorShape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.relational_memory.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.relational_memory.basic": {
  "data": {
   "shadows": "sonnet.python.modules.basic"
  },
  "type": "import"
 },
 "sonnet.python.modules.relational_memory.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.relational_memory.layer_norm": {
  "data": {
   "shadows": "sonnet.python.modules.layer_norm"
  },
  "type": "import"
 },
 "sonnet.python.modules.relational_memory.mlp": {
  "data": {
   "shadows": "sonnet.python.modules.nets.mlp"
  },
  "type": "import"
 },
 "sonnet.python.modules.relational_memory.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.relational_memory.rnn_core": {
  "data": {
   "shadows": "sonnet.python.modules.rnn_core"
  },
  "type": "import"
 },
 "sonnet.python.modules.relational_memory.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.relational_memory_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.relational_memory_test.RelationalMemoryTest": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.relational_memory_test.RelationalMemoryTest.testBadInputs": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.modules.relational_memory.RelationalMemory"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.relational_memory_test.RelationalMemoryTest.testDifferingKeyHeadSizes": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "mem",
    "mem._head_size",
    "mem.initial_state",
    "numpy.any",
    "numpy.not_equal",
    "numpy.ones",
    "sonnet.python.modules.relational_memory.RelationalMemory",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.relational_memory_test.RelationalMemoryTest.testGateShapes": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "mem",
    "mem._calculate_gate_size",
    "mem.forget_gate.get_shape",
    "mem.initial_state",
    "mem.input_gate.get_shape",
    "sonnet.python.modules.relational_memory.RelationalMemory",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.relational_memory_test.RelationalMemoryTest.testInputErasureWorking": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "float",
    "mem",
    "mem.initial_state",
    "numpy.ones",
    "sonnet.python.modules.relational_memory.RelationalMemory",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.relational_memory_test.RelationalMemoryTest.testMemoryUpdating": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "mem",
    "mem.initial_state",
    "numpy.any",
    "numpy.not_equal",
    "numpy.zeros",
    "sonnet.python.modules.relational_memory.RelationalMemory",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.relational_memory_test.RelationalMemoryTest.testOutputStateShapes": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "mem",
    "numpy.zeros",
    "sonnet.python.modules.relational_memory.RelationalMemory",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.relational_memory_test.RelationalMemoryTest.testRecurrence": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "mem",
    "mem.initial_state",
    "numpy.zeros",
    "sonnet.python.modules.relational_memory.RelationalMemory",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.relational_memory_test.RelationalMemoryTest.testStateSizeOutputSize": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "sonnet.python.modules.relational_memory.RelationalMemory"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.relational_memory_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.relational_memory_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.relational_memory_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.modules.relational_memory_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "sonnet.python.modules.relational_memory_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.relational_memory_test.relational_memory": {
  "data": {
   "shadows": "sonnet.python.modules.relational_memory"
  },
  "type": "import"
 },
 "sonnet.python.modules.relational_memory_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.residual": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.framework.nest"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.residual.Residual": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.residual.Residual.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "sonnet.python.modules.residual.Residual",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.residual.Residual._build": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "sonnet.python.modules.residual.nest"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.residual.ResidualCore": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "sonnet.python.modules.rnn_core.RNNCore"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.residual.ResidualCore.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "sonnet.python.modules.residual.ResidualCore",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.residual.ResidualCore._build": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "sonnet.python.modules.residual.nest"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.residual.ResidualCore.initial_state": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "sonnet.python.modules.residual.ResidualCore.output_size": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.residual.ResidualCore.state_size": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.residual.ResidualCore.zero_state": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "sonnet.python.modules.residual.SkipConnectionCore": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "sonnet.python.modules.rnn_core.RNNCore"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.residual.SkipConnectionCore.__init__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "sonnet.python.modules.residual.SkipConnectionCore",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.residual.SkipConnectionCore._build": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "sonnet.python.modules.residual.nest",
    "tensorflow.concat"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.residual.SkipConnectionCore.initial_state": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "sonnet.python.modules.residual.SkipConnectionCore.output_size": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "ValueError",
    "property",
    "tensorflow.TensorShape",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.residual.SkipConnectionCore.state_size": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.residual.SkipConnectionCore.zero_state": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "sonnet.python.modules.residual.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.residual.base": {
  "data": {
   "shadows": "sonnet.python.modules.base"
  },
  "type": "import"
 },
 "sonnet.python.modules.residual.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.residual.nest": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sonnet.python.modules.residual.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.residual.rnn_core": {
  "data": {
   "shadows": "sonnet.python.modules.rnn_core"
  },
  "type": "import"
 },
 "sonnet.python.modules.residual.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.residual_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.residual_test.HeterogeneousStateCore": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "sonnet.RNNCore"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.residual_test.HeterogeneousStateCore.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "sonnet.python.modules.residual_test.HeterogeneousStateCore",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.residual_test.HeterogeneousStateCore._build": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "sonnet.python.modules.residual_test.HeterogeneousStateCore.initial_state": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "tensorflow.float32",
    "tensorflow.int32",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.residual_test.HeterogeneousStateCore.output_size": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.residual_test.HeterogeneousStateCore.state_size": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "property",
    "tensorflow.TensorShape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.residual_test.ResidualCoreTest": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.residual_test.ResidualCoreTest.setUp": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "sonnet.python.modules.residual_test.ResidualCoreTest",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.residual_test.ResidualCoreTest.testComputation": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.randn",
    "numpy.tanh",
    "residual",
    "sonnet.ResidualCore",
    "sonnet.VanillaRNN",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.residual_test.ResidualCoreTest.testHeterogeneousState": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "residual",
    "residual.initial_state",
    "sonnet.ResidualCore",
    "sonnet.python.modules.residual_test.HeterogeneousStateCore"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.residual_test.ResidualCoreTest.testShape": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.ndarray",
    "residual_wrapper",
    "residual_wrapper.output_size",
    "sonnet.ResidualCore",
    "sonnet.VanillaRNN",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.residual_test.ResidualTest": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.residual_test.ResidualTest.setUp": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "sonnet.python.modules.residual_test.ResidualTest",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.residual_test.ResidualTest.testComputation": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.randn",
    "residual",
    "sonnet.Linear",
    "sonnet.Residual",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.residual_test.ResidualTest.testShape": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.ndarray",
    "residual_wrapper",
    "sonnet.Linear",
    "sonnet.Residual",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.residual_test.SkipConnectionCoreTest": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.residual_test.SkipConnectionCoreTest.setUp": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "sonnet.python.modules.residual_test.SkipConnectionCoreTest",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.residual_test.SkipConnectionCoreTest.testComputation": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.dot",
    "numpy.random.randn",
    "numpy.tanh",
    "residual",
    "sonnet.SkipConnectionCore",
    "sonnet.VanillaRNN",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.residual_test.SkipConnectionCoreTest.testHeterogeneousState": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "skip_wrapper",
    "skip_wrapper.initial_state",
    "sonnet.SkipConnectionCore",
    "sonnet.python.modules.residual_test.HeterogeneousStateCore"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.residual_test.SkipConnectionCoreTest.testOutputSize": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "ValueError",
    "skip_wrapper",
    "skip_wrapper.output_size.as_list",
    "sonnet.SkipConnectionCore",
    "sonnet.VanillaRNN",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.residual_test.SkipConnectionCoreTest.testShape": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "numpy.ndarray",
    "skip_wrapper",
    "sonnet.SkipConnectionCore",
    "sonnet.VanillaRNN",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.residual_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.residual_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.residual_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.modules.residual_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.residual_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.python.modules.residual_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.rnn_core": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.framework.nest"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.rnn_core.RNNCellWrapper": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "sonnet.python.modules.rnn_core.RNNCore"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.rnn_core.RNNCellWrapper.__init__": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "cell_ctor",
    "sonnet.python.modules.rnn_core.RNNCellWrapper",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.rnn_core.RNNCellWrapper._build": {
  "data": {
   "lineno": 373
  },
  "type": "function"
 },
 "sonnet.python.modules.rnn_core.RNNCellWrapper.output_size": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.rnn_core.RNNCellWrapper.state_size": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.rnn_core.RNNCore": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule",
    "sonnet.python.modules.rnn_core.abc",
    "sonnet.python.modules.rnn_core.six"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.rnn_core.RNNCore._initial_state_scope": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "sonnet.python.modules.rnn_core.RNNCore.initial_state": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "sonnet.python.modules.rnn_core.trainable_initial_state",
    "tensorflow.float32",
    "tensorflow.name_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.rnn_core.RNNCore.output_size": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.rnn_core.RNNCore.state_size": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.rnn_core.RNNCore.zero_state": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "tensorflow.name_scope",
    "tensorflow.python.ops.rnn_cell_impl._zero_state_tensors",
    "type"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.rnn_core.TrainableInitialState": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.rnn_core.TrainableInitialState.__init__": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "DeprecationWarning",
    "TypeError",
    "all",
    "bool",
    "isinstance",
    "sonnet.python.modules.rnn_core.TrainableInitialState",
    "sonnet.python.modules.rnn_core.nest",
    "sonnet.python.modules.rnn_core.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.rnn_core.TrainableInitialState._build": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "enumerate",
    "sonnet.python.modules.rnn_core._single_learnable_state",
    "sonnet.python.modules.rnn_core.nest",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.rnn_core._single_learnable_state": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "len",
    "tensorflow.assert_equal",
    "tensorflow.constant",
    "tensorflow.control_dependencies",
    "tensorflow.get_variable",
    "tensorflow.reshape",
    "tensorflow.tile",
    "tensorflow.unstack"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.rnn_core.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "sonnet.python.modules.rnn_core.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.rnn_core.base": {
  "data": {
   "shadows": "sonnet.python.modules.base"
  },
  "type": "import"
 },
 "sonnet.python.modules.rnn_core.basic": {
  "data": {
   "shadows": "sonnet.python.modules.basic"
  },
  "type": "import"
 },
 "sonnet.python.modules.rnn_core.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.rnn_core.nest": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "sonnet.python.modules.rnn_core.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.rnn_core.rnn_cell_impl": {
  "data": {
   "shadows": "tensorflow.python.ops.rnn_cell_impl"
  },
  "type": "import"
 },
 "sonnet.python.modules.rnn_core.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "sonnet.python.modules.rnn_core.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.rnn_core.trainable_initial_state": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "AttributeError",
    "IndexError",
    "ValueError",
    "all",
    "callable",
    "initial_state_module",
    "len",
    "range",
    "six.moves.xrange",
    "sonnet.python.modules.basic.TrainableVariable",
    "sonnet.python.modules.rnn_core.nest",
    "tensorflow.TensorShape",
    "tensorflow.tile",
    "tensorflow.zeros_initializer",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.rnn_core.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sonnet.python.modules.rnn_core.with_doc": {
  "data": {
   "lineno": 385
  },
  "type": "function"
 },
 "sonnet.python.modules.rnn_core.with_doc.decorator": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "wrapping_fn"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.rnn_core.with_doc.decorator.wrapping_fn": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "sonnet.python.modules.rnn_core.wrapt",
    "wrapper_init"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.rnn_core.wrapt": {
  "data": {
   "shadows": "wrapt"
  },
  "type": "import"
 },
 "sonnet.python.modules.rnn_core.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "sonnet.python.modules.rnn_core_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.contrib.framework.nest",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.rnn_core_test.BATCH_SIZE": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sonnet.python.modules.rnn_core_test.MASK_TUPLE": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sonnet.python.modules.rnn_core_test.RNNCoreTest": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "set",
    "sonnet.RNNCore",
    "sonnet.python.modules.rnn_core_test.mock",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.rnn_core_test.RNNCoreTest.testInitialStateTuple": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "len",
    "numpy.empty",
    "numpy.tile",
    "sonnet.RNNCore",
    "sonnet.RNNCore.state_size",
    "sonnet.python.modules.rnn_core_test._state_size_element",
    "sonnet.python.modules.rnn_core_test._state_size_tuple",
    "sonnet.python.modules.rnn_core_test.nest",
    "tensorflow.constant_initializer",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.rnn_core_test.RNNCoreTest.testRegularizers": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "len",
    "range",
    "sonnet.RNNCore",
    "sonnet.RNNCore.state_size",
    "sonnet.python.modules.rnn_core_test._state_size_element",
    "sonnet.python.modules.rnn_core_test._state_size_tuple",
    "sonnet.python.modules.rnn_core_test.nest",
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.executing_eagerly",
    "tensorflow.float32",
    "tensorflow.get_collection"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.rnn_core_test.TrainableInitialState": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.rnn_core_test.TrainableInitialState.testBadArguments": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "TypeError",
    "sonnet.TrainableInitialState",
    "sonnet.python.modules.rnn_core_test.BATCH_SIZE",
    "tensorflow.errors.InvalidArgumentError",
    "tensorflow.global_variables_initializer",
    "tensorflow.random_normal"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.rnn_core_test.TrainableInitialState.testInitialStateComputation": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "len",
    "numpy.ones_like",
    "sonnet.TrainableInitialState",
    "sonnet.python.modules.rnn_core_test.BATCH_SIZE",
    "sonnet.python.modules.rnn_core_test.MASK_TUPLE",
    "sonnet.python.modules.rnn_core_test.nest",
    "tensorflow.assign",
    "tensorflow.fill",
    "tensorflow.global_variables_initializer",
    "tensorflow.ones_like",
    "tensorflow.trainable_variables",
    "trainable_state_module",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.rnn_core_test._state_size_element": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sonnet.python.modules.rnn_core_test._state_size_tuple": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sonnet.python.modules.rnn_core_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.rnn_core_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.rnn_core_test.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "sonnet.python.modules.rnn_core_test.nest": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sonnet.python.modules.rnn_core_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.modules.rnn_core_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "sonnet.python.modules.rnn_core_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.rnn_core_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.python.modules.rnn_core_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.scale_gradient": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.eager"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.scale_gradient._scale_gradient_op": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.python.framework.function.Defun"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.scale_gradient._scale_gradient_op.scale_gradient_backward": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "sonnet.python.modules.scale_gradient._scale_gradient_op.scale_gradient_forward": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "sonnet.python.modules.scale_gradient.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.scale_gradient.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.scale_gradient.function": {
  "data": {
   "shadows": "tensorflow.python.framework.function"
  },
  "type": "import"
 },
 "sonnet.python.modules.scale_gradient.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.scale_gradient.scale_gradient": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "net",
    "net.dtype.base_dtype",
    "net.dtype.is_floating",
    "net.get_shape",
    "scale_gradient_op",
    "sonnet.python.modules.scale_gradient._scale_gradient_op",
    "sonnet.python.modules.scale_gradient.tfe",
    "tensorflow.convert_to_tensor",
    "tensorflow.executing_eagerly",
    "tensorflow.identity",
    "tensorflow.name_scope",
    "tensorflow.stop_gradient"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.scale_gradient.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.scale_gradient.tfe": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sonnet.python.modules.scale_gradient_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.contrib.eager",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.scale_gradient_test.ScaleGradientTest": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.scale_gradient_test.ScaleGradientTest.testOpScale": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "range",
    "sonnet.python.modules.scale_gradient_test.itertools",
    "sonnet.scale_gradient",
    "tensorflow.float32",
    "tensorflow.gradients",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.scale_gradient_test.ScaleGradientTest.testOpScaleDifferentDtypes": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "sonnet.scale_gradient",
    "tensorflow.float16",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.scale_gradient_test.ScaleGradientTest.testShape": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "sonnet.scale_gradient",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.scale_gradient_test.ScaleGradientTest.testTwoOps": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "sonnet.scale_gradient",
    "tensorflow.float32",
    "tensorflow.gradients",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.scale_gradient_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.scale_gradient_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.scale_gradient_test.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sonnet.python.modules.scale_gradient_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "sonnet.python.modules.scale_gradient_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.scale_gradient_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.python.modules.scale_gradient_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.scale_gradient_test.tfe": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sonnet.python.modules.sequential": {
  "data": {},
  "type": "module"
 },
 "sonnet.python.modules.sequential.Sequential": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.sequential.Sequential.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "enumerate",
    "sonnet.python.modules.sequential.Sequential",
    "str",
    "super",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.sequential.Sequential._build": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "isinstance",
    "layer",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.sequential.Sequential.get_variables": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "sonnet.python.modules.sequential.Sequential",
    "super",
    "tensorflow.logging.warning"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.sequential.Sequential.layers": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.sequential.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.sequential.base": {
  "data": {
   "shadows": "sonnet.python.modules.base"
  },
  "type": "import"
 },
 "sonnet.python.modules.sequential.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.sequential.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.sequential.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.sequential_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.sequential_test.SequentialTest": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.sequential_test.SequentialTest.testConstruct": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "len",
    "seq",
    "seq.get_variables",
    "seq.layers",
    "sonnet.Linear",
    "sonnet.Sequential",
    "tensorflow.float32",
    "tensorflow.nn.relu",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.sequential_test.SequentialTest.testConstructError": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "TypeError",
    "sonnet.Linear",
    "sonnet.Sequential"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.sequential_test.SequentialTest.testCopiesModules": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "sequential",
    "sonnet.Linear",
    "sonnet.Sequential",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "tensorflow.tanh"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.sequential_test.SequentialTest.testNameScopeRecording": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "sequential",
    "sequential.name_scopes",
    "sonnet.Linear",
    "sonnet.Sequential",
    "tensorflow.float32",
    "tensorflow.name_scope",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.sequential_test.SequentialTest.testNoLayers": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "isinstance",
    "seq_with_identity",
    "seq_with_no_layers",
    "sonnet.Sequential",
    "sonnet.python.modules.sequential_test.collections",
    "tensorflow.constant",
    "tensorflow.identity"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.sequential_test.SequentialTest.testNoneFails": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "TypeError",
    "sonnet.Sequential"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.sequential_test.SequentialTest.testTupleInput": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "TypeError",
    "sonnet.Sequential",
    "sonnet.python.modules.sequential_test.six"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.sequential_test.SequentialTest.testTupleInput.module1": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "sonnet.python.modules.sequential_test.SequentialTest.testTupleInput.module2": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "sonnet.python.modules.sequential_test.SequentialTest.testVariableProperties": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "len",
    "seq",
    "seq.non_trainable_variables",
    "seq.trainable_variables",
    "seq.variables",
    "sonnet.Linear",
    "sonnet.Sequential",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.sequential_test.SequentialTest.testWarning": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "seq",
    "seq.get_variables",
    "sonnet.Linear",
    "sonnet.Sequential",
    "sonnet.python.modules.sequential_test.mock",
    "tensorflow.float32",
    "tensorflow.logging",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.sequential_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.sequential_test.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "sonnet.python.modules.sequential_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.sequential_test.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "sonnet.python.modules.sequential_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.sequential_test.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "sonnet.python.modules.sequential_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.python.modules.sequential_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.spatial_transformer": {
  "data": {},
  "type": "module"
 },
 "sonnet.python.modules.spatial_transformer.AffineGridWarper": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "sonnet.python.modules.spatial_transformer.GridWarper"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.spatial_transformer.AffineGridWarper.__init__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "AffineWarpConstraints",
    "isinstance",
    "len",
    "sonnet.python.modules.base.Error",
    "sonnet.python.modules.spatial_transformer.AffineGridWarper",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineGridWarper._build": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "get_input_slice",
    "len",
    "numpy.prod",
    "six.moves.xrange",
    "sonnet.python.modules.base.Error",
    "sonnet.python.modules.basic.BatchReshape",
    "tensorflow.concat",
    "tensorflow.constant",
    "tensorflow.expand_dims",
    "tensorflow.matmul",
    "tensorflow.ones_like",
    "tensorflow.shape",
    "tensorflow.tile"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineGridWarper._build.get_input_slice": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "sonnet.python.modules.basic.SliceByDim"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineGridWarper._create_features": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "AffineWarpConstraints",
    "enumerate",
    "isinstance",
    "len",
    "numpy.array",
    "reversed",
    "sonnet.python.modules.spatial_transformer._create_affine_features",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineGridWarper.constraints": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineGridWarper.inverse": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "sonnet.python.modules.base.Module",
    "tensorflow.errors.UnimplementedError"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineGridWarper.inverse._affine_grid_warper_inverse": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "agw",
    "get_variable",
    "iter",
    "itertools.chain.from_iterable",
    "range",
    "sonnet.python.modules.basic.BatchFlatten",
    "sonnet.python.modules.basic.BatchReshape",
    "sonnet.python.modules.spatial_transformer.AffineGridWarper",
    "tensorflow.concat",
    "tensorflow.convert_to_tensor",
    "tensorflow.expand_dims",
    "tensorflow.matmul",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineGridWarper.inverse._affine_grid_warper_inverse.get_variable": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "next",
    "tensorflow.constant",
    "tensorflow.fill"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.__and__": {
  "data": {
   "lineno": 534
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.__getitem__": {
  "data": {
   "lineno": 522
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.__init__": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints._calc_mask": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints._calc_num_free_params": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints._combine": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.combine_with": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "isinstance",
    "sonnet.python.modules.spatial_transformer.AffineWarpConstraints",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.constraints": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.mask": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.no_constraints": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.no_shear_2d": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "classmethod",
    "cls.shear_2d"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.no_shear_3d": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.num_dim": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.num_free_params": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.scale_2d": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.scale_3d": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.shear_2d": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.translation_2d": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.translation_3d": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.GridWarper": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "sonnet.python.modules.base.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.spatial_transformer.GridWarper.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "len",
    "sonnet.python.modules.base.Error",
    "sonnet.python.modules.spatial_transformer.GridWarper",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.GridWarper._create_features": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "sonnet.python.modules.spatial_transformer.abc"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.GridWarper.n_coeff": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.GridWarper.output_shape": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.GridWarper.psi": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.GridWarper.source_shape": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer._create_affine_features": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "len",
    "numpy.float32",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.ones_like",
    "numpy.zeros_like",
    "reversed",
    "six.moves.xrange"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "sonnet.python.modules.spatial_transformer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.spatial_transformer.base": {
  "data": {
   "shadows": "sonnet.python.modules.base"
  },
  "type": "import"
 },
 "sonnet.python.modules.spatial_transformer.basic": {
  "data": {
   "shadows": "sonnet.python.modules.basic"
  },
  "type": "import"
 },
 "sonnet.python.modules.spatial_transformer.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "sonnet.python.modules.spatial_transformer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.spatial_transformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.modules.spatial_transformer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.spatial_transformer.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.spatial_transformer.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "sonnet.python.modules.spatial_transformer_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "sonnet.AffineWarpConstraints.no_constraints",
    "sonnet.AffineWarpConstraints.no_shear_2d",
    "sonnet.AffineWarpConstraints.no_shear_3d",
    "sonnet.AffineWarpConstraints.scale_2d",
    "sonnet.AffineWarpConstraints.scale_3d",
    "sonnet.AffineWarpConstraints.shear_2d",
    "sonnet.AffineWarpConstraints.translation_2d",
    "sonnet.AffineWarpConstraints.translation_3d",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.spatial_transformer_test.AffineGridWarperTest": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.spatial_transformer_test.AffineGridWarperTest.testIdentity": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "numpy.array",
    "sonnet.AffineGridWarper",
    "sonnet.AffineWarpConstraints.no_constraints",
    "tensorflow.float64",
    "tensorflow.placeholder",
    "warper"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer_test.AffineGridWarperTest.testInvSameAsNumPyRef": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "agw",
    "chain",
    "enumerate",
    "numpy.random.rand",
    "predict",
    "sonnet.AffineGridWarper",
    "sonnet.AffineWarpConstraints",
    "sonnet.python.modules.spatial_transformer_test.no_constraints",
    "sonnet.python.modules.spatial_transformer_test.scale_2d",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer_test.AffineGridWarperTest.testInvSameAsNumPyRef.chain": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "sonnet.python.modules.spatial_transformer_test.itertools"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer_test.AffineGridWarperTest.testInvSameAsNumPyRef.predict": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.array",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.float32",
    "numpy.linalg.inv",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.ones_like",
    "numpy.zeros_like",
    "range",
    "reversed",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer_test.AffineGridWarperTest.testSameAsNumPyReference": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "agw",
    "chain",
    "enumerate",
    "numpy.random.rand",
    "predict",
    "sonnet.AffineGridWarper",
    "sonnet.AffineWarpConstraints",
    "sonnet.python.modules.spatial_transformer_test.no_constraints",
    "sonnet.python.modules.spatial_transformer_test.scale_2d",
    "sonnet.python.modules.spatial_transformer_test.scale_3d",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer_test.AffineGridWarperTest.testSameAsNumPyReference.chain": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "sonnet.python.modules.spatial_transformer_test.itertools"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer_test.AffineGridWarperTest.testSameAsNumPyReference.predict": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.array",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.float32",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.ones_like",
    "numpy.zeros_like",
    "range",
    "reversed",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer_test.AffineGridWarperTest.testShapeInferenceAndChecks": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "agw2d",
    "agw3d",
    "agw3d.constraints.num_free_params",
    "sonnet.AffineGridWarper",
    "sonnet.Error",
    "sonnet.python.modules.spatial_transformer_test.no_constraints",
    "sonnet.python.modules.spatial_transformer_test.scale_2d",
    "sonnet.python.modules.spatial_transformer_test.translation_2d",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer_test.AffineWarpConstraintsTest": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.spatial_transformer_test.AffineWarpConstraintsTest.assertConstraintsEqual": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer_test.AffineWarpConstraintsTest.testConstraintsOperations": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.modules.spatial_transformer_test.no_constraints",
    "sonnet.python.modules.spatial_transformer_test.scale_2d",
    "sonnet.python.modules.spatial_transformer_test.translation_2d"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer_test.AffineWarpConstraintsTest.testCreateMasks": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "sonnet.python.modules.spatial_transformer_test.no_constraints",
    "sonnet.python.modules.spatial_transformer_test.no_shear_2d",
    "sonnet.python.modules.spatial_transformer_test.no_shear_3d",
    "sonnet.python.modules.spatial_transformer_test.scale_2d",
    "sonnet.python.modules.spatial_transformer_test.scale_3d",
    "sonnet.python.modules.spatial_transformer_test.shear_2d",
    "sonnet.python.modules.spatial_transformer_test.translation_2d",
    "sonnet.python.modules.spatial_transformer_test.translation_3d"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.spatial_transformer_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.spatial_transformer_test.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sonnet.python.modules.spatial_transformer_test.no_constraints": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sonnet.python.modules.spatial_transformer_test.no_shear_2d": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sonnet.python.modules.spatial_transformer_test.no_shear_3d": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sonnet.python.modules.spatial_transformer_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.modules.spatial_transformer_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "sonnet.python.modules.spatial_transformer_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.spatial_transformer_test.scale_2d": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sonnet.python.modules.spatial_transformer_test.scale_3d": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sonnet.python.modules.spatial_transformer_test.shear_2d": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "sonnet.python.modules.spatial_transformer_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.python.modules.spatial_transformer_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.spatial_transformer_test.translation_2d": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sonnet.python.modules.spatial_transformer_test.translation_3d": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sonnet.python.modules.util": {
  "data": {},
  "type": "module"
 },
 "sonnet.python.modules.util.MAYBE_SUPPORTED": {
  "data": {
   "lineno": 1036
  },
  "type": "constant"
 },
 "sonnet.python.modules.util.NOT_SUPPORTED": {
  "data": {
   "lineno": 1032
  },
  "type": "constant"
 },
 "sonnet.python.modules.util.SUPPORTED": {
  "data": {
   "lineno": 1029
  },
  "type": "constant"
 },
 "sonnet.python.modules.util._assert_is_dictlike": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "str"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util._check_nested_callables": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "hasattr",
    "sonnet.python.modules.util.six"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util._format_device": {
  "data": {
   "lineno": 509
  },
  "type": "function"
 },
 "sonnet.python.modules.util._format_table": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "len",
    "max",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util._get_sliced_variables": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "sonnet.python.modules.util.collections"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util._get_vars_to_collections": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "set",
    "sonnet.python.modules.util.collections",
    "sonnet.python.modules.util.variable_map_items",
    "tensorflow.GraphKeys.GLOBAL_VARIABLES",
    "tensorflow.Variable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util._is_scope_prefix": {
  "data": {
   "lineno": 263
  },
  "type": "function"
 },
 "sonnet.python.modules.util._num_bytes_to_human_readable": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util._recursive_getattr": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.util.check_initializers": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "set",
    "sonnet.python.modules.util._assert_is_dictlike",
    "sonnet.python.modules.util._check_nested_callables"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.check_partitioners": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "KeyError",
    "set",
    "sonnet.python.modules.util._assert_is_dictlike",
    "sonnet.python.modules.util._check_nested_callables"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.check_regularizers": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "set",
    "sonnet.python.modules.util._assert_is_dictlike",
    "sonnet.python.modules.util._check_nested_callables"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "sonnet.python.modules.util.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "sonnet.python.modules.util.convert_gradient_to_tensor": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "tensorflow.convert_to_tensor",
    "tensorflow.python.framework.function.Defun"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.count_variables_by_type": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "len",
    "set",
    "sum",
    "tensorflow.global_variables",
    "tensorflow.local_variables",
    "tensorflow.logging.warning",
    "tensorflow.string"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.custom_getter_router": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "TypeError",
    "callable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.custom_getter_router._custom_getter": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "KeyError",
    "custom_getter",
    "getter",
    "len",
    "name_fn",
    "sonnet.python.modules.util.re"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.deprecation_warning": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "tensorflow.logging.WARN",
    "tensorflow.logging.log_first_n"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.util.format_variable_map": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "repr",
    "sonnet.python.modules.util._format_device",
    "sonnet.python.modules.util._format_table",
    "sonnet.python.modules.util._get_vars_to_collections",
    "sonnet.python.modules.util.variable_map_items",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.format_variables": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "repr",
    "sonnet.python.modules.util._format_device",
    "sonnet.python.modules.util._format_table",
    "sonnet.python.modules.util._get_vars_to_collections",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.function": {
  "data": {
   "shadows": "tensorflow.python.framework.function"
  },
  "type": "import"
 },
 "sonnet.python.modules.util.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sonnet.python.modules.util.get_normalized_variable_map": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "len",
    "sonnet.python.modules.util._get_sliced_variables",
    "sonnet.python.modules.util._is_scope_prefix",
    "sonnet.python.modules.util.get_variable_scope_name",
    "sonnet.python.modules.util.get_variables_in_scope",
    "str",
    "tensorflow.GraphKeys.GLOBAL_VARIABLES"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.get_saver": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "sonnet.python.modules.util.collections",
    "sonnet.python.modules.util.get_normalized_variable_map",
    "tensorflow.GraphKeys.GLOBAL_VARIABLES",
    "tensorflow.train.Saver"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.get_variable_scope_name": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "isinstance",
    "sonnet.python.modules.util.six",
    "tensorflow.VariableScope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.get_variables_in_module": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "tensorflow.GraphKeys.TRAINABLE_VARIABLES"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.get_variables_in_scope": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "sonnet.python.modules.util.get_variable_scope_name",
    "sonnet.python.modules.util.re",
    "tensorflow.GraphKeys.TRAINABLE_VARIABLES",
    "tensorflow.get_collection",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.has_variable_scope": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "dir"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "sonnet.python.modules.util.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "sonnet.python.modules.util.log_variables": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "sonnet.python.modules.util.format_variables",
    "tensorflow.global_variables",
    "tensorflow.local_variables",
    "tensorflow.logging.info"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.name_for_callable": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "AttributeError",
    "isinstance",
    "sonnet.python.modules.util.functools",
    "to_snake_case"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.notify_about_new_variables": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "sonnet.python.modules.util.contextlib",
    "tensorflow.variable_creator_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.notify_about_new_variables._tracking_creator": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "callback",
    "getter"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.parse_string_to_constructor": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "len",
    "sonnet.python.modules.util._recursive_getattr",
    "sonnet.python.modules.util.importlib"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.util.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sonnet.python.modules.util.remove_unsupported_kwargs": {
  "data": {
   "lineno": 1102,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "sonnet.python.modules.util.NOT_SUPPORTED",
    "sonnet.python.modules.util.supports_kwargs"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.reuse_variables": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "TypeError",
    "call_method",
    "eager_test",
    "method",
    "set",
    "sonnet.python.modules.util.inspect",
    "sonnet.python.modules.util.weakref"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.reuse_variables.call_method": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "hasattr",
    "method",
    "method.__name__",
    "set",
    "sonnet.python.modules.util.wrapt",
    "tensorflow.executing_eagerly",
    "tensorflow.get_default_graph",
    "tensorflow.init_scope",
    "tensorflow.name_scope",
    "tensorflow.python.ops.variable_scope",
    "tensorflow.python.ops.variable_scope._pure_variable_scope",
    "tensorflow.python.ops.variable_scope.name",
    "to_snake_case",
    "variable_scope_context_manager"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.reuse_variables.call_method.default_context_manager": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.reuse_variables.eager_test": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "method",
    "sonnet.python.modules.util.wrapt",
    "tensorflow.executing_eagerly"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "sonnet.python.modules.util.sort_by_name": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.summarize_variables": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "count_variables_by_type",
    "sonnet.python.modules.util._num_bytes_to_human_readable",
    "sorted",
    "tensorflow.logging.info"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.supports_kwargs": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "sonnet.python.modules.util.MAYBE_SUPPORTED",
    "sonnet.python.modules.util.NOT_SUPPORTED",
    "sonnet.python.modules.util.SUPPORTED",
    "sonnet.python.modules.util.inspect",
    "sonnet.python.modules.util.six"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.util.to_snake_case": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.modules.util.re"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.variable_map_items": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "sonnet.python.modules.util.six",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util.variable_scope_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "sonnet.python.modules.util.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "sonnet.python.modules.util.wrapt": {
  "data": {
   "shadows": "wrapt"
  },
  "type": "import"
 },
 "sonnet.python.modules.util_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.modules.util_test.NameFunctionTest": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.util_test.NameFunctionTest.assertName": {
  "data": {
   "lineno": 1100,
   "symbols_in_volume": [
    "sonnet.python.modules.util.name_for_callable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.NameFunctionTest.testNameForCallable_Function": {
  "data": {
   "lineno": 1072
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.NameFunctionTest.testNameForCallable_Function.test": {
  "data": {
   "lineno": 1074
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.NameFunctionTest.testNameForCallable_Instance": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "Test"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.NameFunctionTest.testNameForCallable_Instance.Test": {
  "data": {
   "lineno": 1093,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.util_test.NameFunctionTest.testNameForCallable_Instance.Test.__call__": {
  "data": {
   "lineno": 1095
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.NameFunctionTest.testNameForCallable_Lambda": {
  "data": {
   "lineno": 1079
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.NameFunctionTest.testNameForCallable_Partial": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": [
    "sonnet.python.modules.util_test.functools"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.NameFunctionTest.testNameForCallable_Partial.test": {
  "data": {
   "lineno": 1085
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.NameFunctionTest.testToSnakeCase": {
  "data": {
   "lineno": 1052,
   "symbols_in_volume": [
    "sonnet.python.modules.util.to_snake_case"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.InheritedVariableContainer": {
  "data": {
   "lineno": 648
  },
  "type": "class"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.InheritedVariableContainer.not_inherited_method_with_reuse": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "sonnet.python.modules.util.reuse_variables",
    "tensorflow.get_variable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.ModuleReuse": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "sonnet.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.ModuleReuse.__init__": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "sonnet.python.modules.util_test.ReuseVarsTest",
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.ModuleReuse._build": {
  "data": {
   "lineno": 668
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.ModuleReuse.a": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "sonnet.python.modules.util.reuse_variables",
    "tensorflow.get_variable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.ModuleReuse.add_b": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "sonnet.python.modules.util.reuse_variables",
    "tensorflow.get_variable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.VariableContainer": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.VariableContainer.__init__": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.VariableContainer.method_with_reuse": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "sonnet.python.modules.util.reuse_variables",
    "tensorflow.get_variable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.VariableContainer.method_without_reuse": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "tensorflow.get_variable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_container_not_supported_in_eager": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.modules.util_test.ReuseVarsTest",
    "tensorflow.contrib.eager.run_test_in_graph_and_eager_modes",
    "tensorflow.executing_eagerly"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_defun": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "defun_module",
    "sonnet.python.modules.util_test.ReuseVarsTest",
    "tensorflow.contrib.eager.defun",
    "tensorflow.global_variables_initializer",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_get_all_variables": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "module",
    "module._all_variables",
    "module.a",
    "module.get_all_variables",
    "numpy.random.seed",
    "seq",
    "seq.get_all_variables",
    "sonnet.Sequential",
    "sonnet.python.modules.util_test.ReuseVarsTest",
    "sorted",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_multiple_graphs": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "sonnet.python.modules.util_test.ReuseVarsTest",
    "tensorflow.Graph"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_multiple_objects_per_variable_scope": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "sonnet.python.modules.util_test.ReuseVarsTest"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_name_scopes": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "VariableContainerWithOps",
    "get_tensor_names_from_default_graph",
    "len",
    "tensorflow.name_scope",
    "tensorflow.ones",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_name_scopes.VariableContainerWithOps": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "sonnet.python.modules.util_test.ReuseVarsTest"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_name_scopes.VariableContainerWithOps.add_a": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "sonnet.python.modules.util.reuse_variables"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_name_scopes.VariableContainerWithOps.add_b": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "sonnet.python.modules.util.reuse_variables",
    "tensorflow.get_variable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_name_scopes.VariableContainerWithOps.nested_add": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "sonnet.python.modules.util.reuse_variables",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_name_scopes.get_tensor_names_from_default_graph": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "tensorflow.get_default_graph"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_reuse_abstract_module": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "module1",
    "module2",
    "module2.a",
    "module2.add_b",
    "numpy.linalg.norm",
    "numpy.random.rand",
    "numpy.random.seed",
    "sonnet.python.modules.util_test.ReuseVarsTest",
    "tensorflow.float32",
    "tensorflow.global_variables_initializer",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_reuse_inherited_method": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.modules.util_test.ReuseVarsTest"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_reuse_method": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.modules.util_test.ReuseVarsTest"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_reuse_vars_subgraph_recording": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "sonnet.python.modules.util_test.ReuseVarsTest",
    "tensorflow.executing_eagerly"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_variable_reuse_defun": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "AssigningModule",
    "module",
    "module.a",
    "module.assign_a",
    "tensorflow.contrib.eager.defun",
    "tensorflow.contrib.eager.run_test_in_graph_and_eager_modes",
    "tensorflow.executing_eagerly"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_variable_reuse_defun.AssigningModule": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "sonnet.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_variable_reuse_defun.AssigningModule.assign_a": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "sonnet.python.modules.util.reuse_variables",
    "tensorflow.get_variable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_variable_scope_call_order": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "TestModule",
    "a1",
    "a2"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_variable_scope_call_order.TestModule": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "sonnet.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_variable_scope_call_order.TestModule.__init__": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_variable_scope_call_order.TestModule._build": {
  "data": {
   "lineno": 812
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_variable_scope_call_order.TestModule.a": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "sonnet.python.modules.util.reuse_variables"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_variable_scope_call_order.TestModule.variable_scope": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.TestNotifyAboutVariables": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.util_test.TestNotifyAboutVariables.assertVariableType": {
  "data": {
   "lineno": 1114,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.TestNotifyAboutVariables.testGetVariable": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "sonnet.python.modules.util.notify_about_new_variables",
    "tensorflow.executing_eagerly",
    "tensorflow.get_variable",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.TestNotifyAboutVariables.testNoVariables": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "sonnet.python.modules.util.notify_about_new_variables"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.TestNotifyAboutVariables.testVariableCreatingCustomGetter": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "AssertionError",
    "absl.testing.parameterized.parameters",
    "sonnet.python.modules.util.notify_about_new_variables",
    "sonnet.python.modules.util_test.contextlib2",
    "sonnet.python.modules.util_test.itertools",
    "tensorflow.executing_eagerly",
    "tensorflow.get_variable",
    "tensorflow.python.ops.variable_scope.variable_creator_scope",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.TestNotifyAboutVariables.testVariableCreatingCustomGetter.my_custom_getter": {
  "data": {
   "lineno": 1149,
   "symbols_in_volume": [
    "getter"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.util_test.UtilTest._create_conv": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "conv",
    "sonnet.Conv2D",
    "tensorflow.ones",
    "tensorflow.variable_axis_size_partitioner"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testCheckInitializers": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "sonnet.check_initializers",
    "tensorflow.truncated_normal_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testCheckPartitioners": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "sonnet.check_partitioners",
    "tensorflow.variable_axis_size_partitioner"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testCheckRegularizers": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "sonnet.check_regularizers",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.contrib.layers.l2_regularizer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testCollectionGetSaver": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "sonnet.BatchNorm",
    "sonnet.Linear",
    "sonnet.get_saver",
    "tensorflow.GraphKeys.TRAINABLE_VARIABLES",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "tensorflow.train.Saver",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testCollectionGetVariableInScope": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "sonnet.get_variables_in_scope",
    "tensorflow.get_variable",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testCountVariablesByType": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "graph_creator_fn",
    "sonnet.count_variables_by_type",
    "tensorflow.float16",
    "tensorflow.float32",
    "tensorflow.float64",
    "tensorflow.get_variable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testFormatVariableMap": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "sonnet.format_variable_map",
    "sonnet.python.modules.util_test._EXPECTED_FORMATTED_VARIABLE_MAP",
    "tensorflow.device",
    "tensorflow.get_local_variable",
    "tensorflow.get_variable",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testFormatVariables": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "sonnet.format_variables",
    "sonnet.python.modules.util_test._EXPECTED_FORMATTED_VARIABLE_LIST",
    "tensorflow.device",
    "tensorflow.get_local_variable",
    "tensorflow.get_variable",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testGetNormalizedVariableMapModule": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "conv",
    "conv.b",
    "conv.w",
    "sonnet.Conv2D",
    "sonnet.get_normalized_variable_map",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testGetNormalizedVariableMapScope": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "sonnet.get_normalized_variable_map",
    "tensorflow.get_variable",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testGetNormalizedVariableMapScopeContext": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.get_normalized_variable_map",
    "tensorflow.get_variable",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testGetNormalizedVariableMapWithPartitionedVariable": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "conv",
    "conv.b",
    "set",
    "sonnet.Conv2D",
    "sonnet.get_normalized_variable_map",
    "tensorflow.ones",
    "tensorflow.variable_axis_size_partitioner"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testGetSaverModule": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "conv",
    "sonnet.Conv2D",
    "sonnet.get_saver",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "tensorflow.train.Saver"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testGetSaverPartitioned": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "conv",
    "conv.w",
    "sonnet.get_saver",
    "sonnet.python.modules.util_test.os",
    "sonnet.python.modules.util_test.tempfile",
    "tensorflow.global_variables_initializer",
    "tensorflow.identity"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testGetSaverScope": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "set",
    "sonnet.get_saver",
    "tensorflow.get_variable",
    "tensorflow.train.Saver",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testHasVariableScope": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "linear",
    "sonnet.Linear",
    "sonnet.has_variable_scope",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testInvalidDicts": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "TypeError",
    "sonnet.GRU",
    "sonnet.LSTM",
    "sonnet.VanillaRNN",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.fixed_size_partitioner",
    "tensorflow.float32",
    "tensorflow.truncated_normal_initializer",
    "tensorflow.zeros",
    "vanilla_rnn",
    "vanilla_rnn.zero_state"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testIsScopePrefix": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "sonnet.python.modules.util._is_scope_prefix"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testLogVariables": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "sonnet.log_variables",
    "tensorflow.device",
    "tensorflow.get_default_graph",
    "tensorflow.get_local_variable",
    "tensorflow.get_variable",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testLogVariables_with_arg": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "sonnet.log_variables",
    "tensorflow.device",
    "tensorflow.get_default_graph",
    "tensorflow.get_local_variable",
    "tensorflow.get_variable",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testModuleSupportsKwargs": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "module_builder",
    "sonnet.BatchNorm",
    "sonnet.LayerNorm",
    "sonnet.Linear",
    "sonnet.python.modules.util.NOT_SUPPORTED",
    "sonnet.python.modules.util.SUPPORTED",
    "sonnet.supports_kwargs"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testModuleSupportsKwargsMaybe": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "sonnet.python.modules.util.MAYBE_SUPPORTED",
    "sonnet.python.modules.util.NOT_SUPPORTED",
    "sonnet.python.modules.util.SUPPORTED",
    "sonnet.supports_kwargs"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testModuleSupportsKwargsMaybe.bar": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testModuleSupportsKwargsMaybe.foo": {
  "data": {
   "lineno": 589
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testModuleSupportsKwargsReuseVariables": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "ChildModule",
    "ParentModule",
    "sonnet.python.modules.util.NOT_SUPPORTED",
    "sonnet.python.modules.util.SUPPORTED",
    "sonnet.supports_kwargs"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testModuleSupportsKwargsReuseVariables.ChildModule": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "ParentModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.util_test.UtilTest.testModuleSupportsKwargsReuseVariables.ChildModule.a": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "sonnet.reuse_variables"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testModuleSupportsKwargsReuseVariables.ChildModule.c": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "sonnet.reuse_variables"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testModuleSupportsKwargsReuseVariables.ParentModule": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "sonnet.AbstractModule"
   ]
  },
  "type": "class"
 },
 "sonnet.python.modules.util_test.UtilTest.testModuleSupportsKwargsReuseVariables.ParentModule._build": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testModuleSupportsKwargsReuseVariables.ParentModule.a": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "sonnet.reuse_variables"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testModuleSupportsKwargsReuseVariables.ParentModule.b": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "sonnet.reuse_variables"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testNumBytesToHumanReadable": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "sonnet.python.modules.util._num_bytes_to_human_readable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testParseStringToConstructor": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "sonnet.LayerNorm",
    "sonnet.nets.ConvNet2D",
    "sonnet.parse_string_to_constructor"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testParseStringToConstructorErrors": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "ValueError",
    "absl.testing.parameterized.parameters",
    "sonnet.parse_string_to_constructor"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testQueryInModule": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "module",
    "module.b",
    "module.get_variables",
    "module.w",
    "set",
    "sonnet.Error",
    "sonnet.Linear",
    "sonnet.get_variables_in_module",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testRemoveUnsupportedKwargs": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "module_builder",
    "sonnet.BatchNorm",
    "sonnet.Linear",
    "sonnet.nets.MLP",
    "sonnet.remove_unsupported_kwargs"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testRemoveUnsupportedKwargsWithMaybe": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "sonnet.remove_unsupported_kwargs"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testRemoveUnsupportedKwargsWithMaybe.bar": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testRemoveUnsupportedKwargsWithMaybe.foo": {
  "data": {
   "lineno": 617
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testScopeQuery": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "set",
    "sonnet.get_variables_in_scope",
    "tensorflow.get_variable",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testSummarizeVariables": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "graph_creator_fn",
    "len",
    "sonnet.python.modules.util_test.mock",
    "sonnet.summarize_variables",
    "tensorflow.float32",
    "tensorflow.get_variable",
    "tensorflow.int16",
    "tensorflow.int64",
    "tensorflow.logging",
    "zip"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testVariableMapItems": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "conv",
    "sonnet.Conv2D",
    "sonnet.get_normalized_variable_map",
    "sonnet.variable_map_items",
    "sorted",
    "tensorflow.ones",
    "tensorflow.variable_axis_size_partitioner"
   ]
  },
  "type": "function"
 },
 "sonnet.python.modules.util_test._EXPECTED_FORMATTED_VARIABLE_LIST": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sonnet.python.modules.util_test._EXPECTED_FORMATTED_VARIABLE_MAP": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sonnet.python.modules.util_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.modules.util_test.contextlib2": {
  "data": {
   "shadows": "contextlib2"
  },
  "type": "import"
 },
 "sonnet.python.modules.util_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.modules.util_test.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sonnet.python.modules.util_test.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sonnet.python.modules.util_test.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "sonnet.python.modules.util_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.modules.util_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sonnet.python.modules.util_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "sonnet.python.modules.util_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.modules.util_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "sonnet.python.modules.util_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "sonnet.python.modules.util_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.modules.util_test.util": {
  "data": {
   "shadows": "sonnet.python.modules.util"
  },
  "type": "import"
 },
 "sonnet.python.modules.util_test.variable_scope_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "sonnet.python.ops": {
  "data": {},
  "type": "module"
 },
 "sonnet.python.ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.ops.initializers": {
  "data": {
   "symbols_in_volume": [
    "sonnet.python.ops.initializers._Restore"
   ]
  },
  "type": "module"
 },
 "sonnet.python.ops.initializers._Restore": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.python.ops.init_ops.Initializer"
   ]
  },
  "type": "class"
 },
 "sonnet.python.ops.initializers._Restore.__call__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "callable",
    "tensorflow.get_variable_scope",
    "tensorflow.python.ops.io_ops.restore_v2"
   ]
  },
  "type": "function"
 },
 "sonnet.python.ops.initializers._Restore.__init__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "sonnet.python.ops.initializers._Restore._partition_spec": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "tensorflow.Variable.SaveSliceInfo"
   ]
  },
  "type": "function"
 },
 "sonnet.python.ops.initializers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.ops.initializers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.ops.initializers.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "sonnet.python.ops.initializers.io_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.io_ops"
  },
  "type": "import"
 },
 "sonnet.python.ops.initializers.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.ops.initializers.restore_initializer": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "sonnet.python.ops.initializers.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.ops.initializers_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.ops.initializers_test.RestoreInitializerTest": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.ops.initializers_test.RestoreInitializerTest.testFromDifferentScope": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "c",
    "numpy.linalg.norm",
    "sonnet.python.modules.conv.VALID",
    "sonnet.python.modules.nets.convnet.ConvNet2D",
    "sonnet.python.ops.initializers.restore_initializer",
    "sonnet.python.ops.initializers_test._TOLERANCE",
    "sonnet.python.ops.initializers_test._TWO_CONV_LAYERS_RELU",
    "sonnet.python.ops.initializers_test._checkpoint",
    "sonnet.python.ops.initializers_test.functools",
    "sonnet.python.ops.initializers_test.re",
    "tensorflow.constant",
    "tensorflow.get_default_graph",
    "tensorflow.global_variables_initializer",
    "tensorflow.nn.relu",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.ops.initializers_test.RestoreInitializerTest.testMoreMultipleRestore": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "c",
    "numpy.linalg.norm",
    "sonnet.python.modules.conv.VALID",
    "sonnet.python.modules.nets.convnet.ConvNet2D",
    "sonnet.python.ops.initializers.restore_initializer",
    "sonnet.python.ops.initializers_test._TOLERANCE",
    "sonnet.python.ops.initializers_test._TWO_CONV_LAYERS_RELU",
    "sonnet.python.ops.initializers_test._checkpoint",
    "tensorflow.constant",
    "tensorflow.get_default_graph",
    "tensorflow.global_variables_initializer",
    "tensorflow.nn.relu",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.ops.initializers_test.RestoreInitializerTest.testMultipleRestore": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "c1",
    "c2",
    "numpy.linalg.norm",
    "sonnet.python.modules.conv.Conv2D",
    "sonnet.python.modules.conv.VALID",
    "sonnet.python.ops.initializers.restore_initializer",
    "sonnet.python.ops.initializers_test._ONE_CONV_LAYER",
    "sonnet.python.ops.initializers_test._TOLERANCE",
    "sonnet.python.ops.initializers_test._TWO_CONV_LAYERS",
    "sonnet.python.ops.initializers_test._TWO_CONV_LAYERS_RELU",
    "sonnet.python.ops.initializers_test._checkpoint",
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.get_default_graph",
    "tensorflow.global_variables_initializer",
    "tensorflow.nn.relu",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.ops.initializers_test.RestoreInitializerTest.testPartitionedVariable": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "list",
    "sonnet.python.ops.initializers.restore_initializer",
    "sonnet.python.ops.initializers_test.os",
    "tensorflow.Graph",
    "tensorflow.bool",
    "tensorflow.device",
    "tensorflow.fixed_size_partitioner",
    "tensorflow.get_variable",
    "tensorflow.global_variables_initializer",
    "tensorflow.train.Saver"
   ]
  },
  "type": "function"
 },
 "sonnet.python.ops.initializers_test.RestoreInitializerTest.testPartitionedVariable.initializer1": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "sonnet.python.ops.initializers_test.RestoreInitializerTest.testScopeRestore": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "c1",
    "numpy.linalg.norm",
    "sonnet.python.modules.conv.Conv2D",
    "sonnet.python.modules.conv.VALID",
    "sonnet.python.ops.initializers.restore_initializer",
    "sonnet.python.ops.initializers_test._ONE_CONV_LAYER",
    "sonnet.python.ops.initializers_test._TOLERANCE",
    "sonnet.python.ops.initializers_test._checkpoint",
    "tensorflow.constant",
    "tensorflow.get_default_graph",
    "tensorflow.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "sonnet.python.ops.initializers_test.RestoreInitializerTest.testSimpleRestore": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "sonnet.python.ops.initializers.restore_initializer",
    "sonnet.python.ops.initializers_test._TOLERANCE",
    "sonnet.python.ops.initializers_test._checkpoint",
    "tensorflow.get_variable",
    "tensorflow.global_variables_initializer",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "sonnet.python.ops.initializers_test.RestoreInitializerTest.testTopLevelVariable": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "sonnet.python.ops.initializers.restore_initializer",
    "sonnet.python.ops.initializers_test.os",
    "tensorflow.Graph",
    "tensorflow.constant_initializer",
    "tensorflow.get_variable",
    "tensorflow.global_variables_initializer",
    "tensorflow.train.Saver"
   ]
  },
  "type": "function"
 },
 "sonnet.python.ops.initializers_test._ONE_CONV_LAYER": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sonnet.python.ops.initializers_test._TOLERANCE": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "sonnet.python.ops.initializers_test._TWO_CONV_LAYERS": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "sonnet.python.ops.initializers_test._TWO_CONV_LAYERS_RELU": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sonnet.python.ops.initializers_test._checkpoint": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "sonnet.python.ops.initializers_test.os"
   ]
  },
  "type": "function"
 },
 "sonnet.python.ops.initializers_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.ops.initializers_test.conv": {
  "data": {
   "shadows": "sonnet.python.modules.conv"
  },
  "type": "import"
 },
 "sonnet.python.ops.initializers_test.convnet": {
  "data": {
   "shadows": "sonnet.python.modules.nets.convnet"
  },
  "type": "import"
 },
 "sonnet.python.ops.initializers_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.ops.initializers_test.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sonnet.python.ops.initializers_test.initializers": {
  "data": {
   "shadows": "sonnet.python.ops.initializers"
  },
  "type": "import"
 },
 "sonnet.python.ops.initializers_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.ops.initializers_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sonnet.python.ops.initializers_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.ops.initializers_test.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sonnet.python.ops.initializers_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.ops.nest": {
  "data": {
   "symbols_in_volume": [
    "sonnet.python.ops.nest.nest",
    "sonnet.python.ops.nest.with_deprecation_warning",
    "tensorflow.contrib.framework.nest"
   ]
  },
  "type": "module"
 },
 "sonnet.python.ops.nest._DONE_WARN": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sonnet.python.ops.nest.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.ops.nest.assert_same_structure": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "sonnet.python.ops.nest.assert_shallow_structure": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "sonnet.python.ops.nest.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.ops.nest.flatten": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "sonnet.python.ops.nest.flatten_dict_items": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "sonnet.python.ops.nest.flatten_iterable": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "sonnet.python.ops.nest.flatten_up_to": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "sonnet.python.ops.nest.is_iterable": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "sonnet.python.ops.nest.is_sequence": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "sonnet.python.ops.nest.map": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "sonnet.python.ops.nest.map_up_to": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "sonnet.python.ops.nest.nest": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sonnet.python.ops.nest.pack_iterable_as": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "sonnet.python.ops.nest.pack_sequence_as": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "sonnet.python.ops.nest.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.ops.nest.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.ops.nest.with_deprecation_warning": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "sonnet.python.ops.nest.with_deprecation_warning.new_fn": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "fn",
    "sonnet.python.ops.nest._DONE_WARN",
    "tensorflow.logging.warning"
   ]
  },
  "type": "function"
 },
 "sonnet.python.ops.nest_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "sonnet.python.ops.nest_test.six",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "sonnet.python.ops.nest_test.NestTest": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "sonnet.python.ops.nest_test.NestTest.testEmptySequences": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "empty_nt",
    "sonnet.python.ops.nest.map",
    "sonnet.python.ops.nest_test.collections"
   ]
  },
  "type": "function"
 },
 "sonnet.python.ops.nest_test.NestTest.testFlattenAndPackIterable": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "named_tuple",
    "sonnet.python.ops.nest.flatten_iterable",
    "sonnet.python.ops.nest.pack_iterable_as",
    "sonnet.python.ops.nest_test.collections"
   ]
  },
  "type": "function"
 },
 "sonnet.python.ops.nest_test.NestTest.testFlattenIterable_numpyIsNotFlattened": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "sonnet.python.ops.nest.flatten_iterable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.ops.nest_test.NestTest.testFlattenIterable_stringIsNotFlattened": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "len",
    "sonnet.python.ops.nest.flatten_iterable"
   ]
  },
  "type": "function"
 },
 "sonnet.python.ops.nest_test.NestTest.testFlatternIterable_scalarStructure": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "sonnet.python.ops.nest.flatten_iterable",
    "sonnet.python.ops.nest.pack_iterable_as"
   ]
  },
  "type": "function"
 },
 "sonnet.python.ops.nest_test.NestTest.testMapOverTwoTuples": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.zeros",
    "sonnet.python.ops.nest.assert_same_structure",
    "sonnet.python.ops.nest.map",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "sonnet.python.ops.nest_test.NestTest.testMapSingleCollection": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ab_tuple",
    "sonnet.python.ops.nest.assert_same_structure",
    "sonnet.python.ops.nest.map",
    "sonnet.python.ops.nest_test.collections"
   ]
  },
  "type": "function"
 },
 "sonnet.python.ops.nest_test.NestTest.testMultiNest": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "sonnet.python.ops.nest.map"
   ]
  },
  "type": "function"
 },
 "sonnet.python.ops.nest_test.NestTest.testNoSequences": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.ops.nest.map"
   ]
  },
  "type": "function"
 },
 "sonnet.python.ops.nest_test.NestTest.testPackIterableAs_notIterableError": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "TypeError",
    "sonnet.python.ops.nest.pack_iterable_as"
   ]
  },
  "type": "function"
 },
 "sonnet.python.ops.nest_test.NestTest.testPackIterableAs_scalarStructureError": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.ops.nest.pack_iterable_as"
   ]
  },
  "type": "function"
 },
 "sonnet.python.ops.nest_test.NestTest.testPackIterableAs_wrongLengthsError": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.ops.nest.pack_iterable_as"
   ]
  },
  "type": "function"
 },
 "sonnet.python.ops.nest_test.NestTest.testStringRepeat": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ab_tuple",
    "sonnet.python.ops.nest.map",
    "sonnet.python.ops.nest_test.collections"
   ]
  },
  "type": "function"
 },
 "sonnet.python.ops.nest_test.NestTest.testStructureMustBeSame": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.python.ops.nest.map"
   ]
  },
  "type": "function"
 },
 "sonnet.python.ops.nest_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.python.ops.nest_test.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "sonnet.python.ops.nest_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.python.ops.nest_test.nest": {
  "data": {
   "shadows": "sonnet.python.ops.nest"
  },
  "type": "import"
 },
 "sonnet.python.ops.nest_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sonnet.python.ops.nest_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.ops.nest_test.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "sonnet.python.ops.nest_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.python.ops.nest_test.typekw": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sonnet.python.ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.python.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.remove_unsupported_kwargs": {
  "data": {
   "shadows": "sonnet.python.modules.util.remove_unsupported_kwargs"
  },
  "type": "import"
 },
 "sonnet.restore_initializer": {
  "data": {
   "shadows": "sonnet.python.ops.initializers.restore_initializer"
  },
  "type": "import"
 },
 "sonnet.reuse_variables": {
  "data": {
   "shadows": "sonnet.python.modules.util.reuse_variables"
  },
  "type": "import"
 },
 "sonnet.scale_gradient": {
  "data": {
   "shadows": "sonnet.python.modules.scale_gradient.scale_gradient"
  },
  "type": "import"
 },
 "sonnet.semantic_version": {
  "data": {
   "shadows": "semantic_version"
  },
  "type": "import"
 },
 "sonnet.split_leading_dim": {
  "data": {
   "shadows": "sonnet.python.modules.basic.split_leading_dim"
  },
  "type": "import"
 },
 "sonnet.summarize_variables": {
  "data": {
   "shadows": "sonnet.python.modules.util.summarize_variables"
  },
  "type": "import"
 },
 "sonnet.supports_kwargs": {
  "data": {
   "shadows": "sonnet.python.modules.util.supports_kwargs"
  },
  "type": "import"
 },
 "sonnet.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sonnet.trainable_initial_state": {
  "data": {
   "shadows": "sonnet.python.modules.rnn_core.trainable_initial_state"
  },
  "type": "import"
 },
 "sonnet.util.migrate_checkpoint": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.app.flags.DEFINE_boolean",
    "tensorflow.app.flags.DEFINE_string",
    "tensorflow.app.flags.FLAGS",
    "tensorflow.app.run"
   ]
  },
  "type": "module"
 },
 "sonnet.util.migrate_checkpoint.FLAGS": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sonnet.util.migrate_checkpoint._build_migrated_variables": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "name_value_fn",
    "tensorflow.Variable"
   ]
  },
  "type": "function"
 },
 "sonnet.util.migrate_checkpoint.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sonnet.util.migrate_checkpoint.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sonnet.util.migrate_checkpoint.main": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "name_value_fn",
    "sonnet.util.migrate_checkpoint.FLAGS",
    "sonnet.util.migrate_checkpoint._build_migrated_variables",
    "sonnet.util.migrate_checkpoint.remove_colon_zero",
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.global_variables_initializer",
    "tensorflow.train.NewCheckpointReader",
    "tensorflow.train.Saver"
   ]
  },
  "type": "function"
 },
 "sonnet.util.migrate_checkpoint.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sonnet.util.migrate_checkpoint.remove_colon_zero": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "sonnet.util.migrate_checkpoint.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "sonnet.variable_map_items": {
  "data": {
   "shadows": "sonnet.python.modules.util.variable_map_items"
  },
  "type": "import"
 }
}