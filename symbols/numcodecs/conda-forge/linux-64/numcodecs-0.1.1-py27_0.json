{
 "numcodecs": {
  "lineno": null,
  "symbols_in_volume": [
   "atexit.register",
   "multiprocessing.cpu_count",
   "numcodecs.astype.AsType",
   "numcodecs.blosc.Blosc",
   "numcodecs.blosc.destroy",
   "numcodecs.blosc.init",
   "numcodecs.blosc.set_nthreads",
   "numcodecs.bz2.BZ2",
   "numcodecs.categorize.Categorize",
   "numcodecs.checksum32.Adler32",
   "numcodecs.checksum32.CRC32",
   "numcodecs.delta.Delta",
   "numcodecs.fixedscaleoffset.FixedScaleOffset",
   "numcodecs.lz4.LZ4",
   "numcodecs.lzma.LZMA",
   "numcodecs.msgpacks.MsgPack",
   "numcodecs.packbits.PackBits",
   "numcodecs.pickles.Pickle",
   "numcodecs.registry.register_codec",
   "numcodecs.zlib.Zlib",
   "numcodecs.zstd.Zstd"
  ],
  "type": "module"
 },
 "numcodecs.abc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.abc.Codec": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numcodecs.abc.Codec.__eq__": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.abc.Codec.__repr__": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.abc.Codec.decode": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.abc.Codec.encode": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.abc.Codec.from_config": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.abc.Codec.get_config": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.astype": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.astype.AsType": {
  "lineno": 11,
  "symbols_in_volume": [
   "numcodecs.abc.Codec"
  ],
  "type": "class"
 },
 "numcodecs.astype.AsType.__init__": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numcodecs.astype.AsType.__repr__": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.astype.AsType.decode": {
  "lineno": 61,
  "symbols_in_volume": [
   "numcodecs.compat.buffer_copy",
   "numcodecs.compat.ndarray_from_buffer"
  ],
  "type": "function"
 },
 "numcodecs.astype.AsType.encode": {
  "lineno": 51,
  "symbols_in_volume": [
   "numcodecs.compat.ndarray_from_buffer"
  ],
  "type": "function"
 },
 "numcodecs.astype.AsType.get_config": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.bz2": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.bz2.BZ2": {
  "lineno": 14,
  "symbols_in_volume": [
   "numcodecs.abc.Codec"
  ],
  "type": "class"
 },
 "numcodecs.bz2.BZ2.__init__": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.bz2.BZ2.decode": {
  "lineno": 39,
  "symbols_in_volume": [
   "array.array",
   "bz2.decompress",
   "numcodecs.compat.buffer_copy"
  ],
  "type": "function"
 },
 "numcodecs.bz2.BZ2.encode": {
  "lineno": 29,
  "symbols_in_volume": [
   "bz2.compress",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numcodecs.categorize": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.categorize.Categorize": {
  "lineno": 13,
  "symbols_in_volume": [
   "numcodecs.abc.Codec"
  ],
  "type": "class"
 },
 "numcodecs.categorize.Categorize.__init__": {
  "lineno": 46,
  "symbols_in_volume": [
   "numcodecs.compat.ensure_bytes",
   "numcodecs.compat.ensure_text",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numcodecs.categorize.Categorize.__repr__": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.categorize.Categorize.decode": {
  "lineno": 70,
  "symbols_in_volume": [
   "numcodecs.compat.buffer_copy",
   "numcodecs.compat.ndarray_from_buffer",
   "numpy.ndarray",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numcodecs.categorize.Categorize.encode": {
  "lineno": 56,
  "symbols_in_volume": [
   "numcodecs.compat.ndarray_from_buffer",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numcodecs.categorize.Categorize.get_config": {
  "lineno": 94,
  "symbols_in_volume": [
   "numcodecs.compat.ensure_text"
  ],
  "type": "function"
 },
 "numcodecs.checksum32": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.checksum32.Adler32": {
  "lineno": 40,
  "symbols_in_volume": [
   "zlib.adler32"
  ],
  "type": "class"
 },
 "numcodecs.checksum32.CRC32": {
  "lineno": 34,
  "symbols_in_volume": [
   "zlib.crc32"
  ],
  "type": "class"
 },
 "numcodecs.checksum32.Checksum32": {
  "lineno": 13,
  "symbols_in_volume": [
   "numcodecs.abc.Codec"
  ],
  "type": "class"
 },
 "numcodecs.checksum32.Checksum32.decode": {
  "lineno": 25,
  "symbols_in_volume": [
   "numcodecs.compat.buffer_copy",
   "numcodecs.compat.ndarray_from_buffer"
  ],
  "type": "function"
 },
 "numcodecs.checksum32.Checksum32.encode": {
  "lineno": 17,
  "symbols_in_volume": [
   "numcodecs.compat.ndarray_from_buffer",
   "numpy.empty"
  ],
  "type": "function"
 },
 "numcodecs.compat": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "numcodecs.compat.buffer_copy": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.copyto",
   "numpy.frombuffer",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numcodecs.compat.buffer_tobytes": {
  "lineno": 30,
  "symbols_in_volume": [
   "array.array",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numcodecs.compat.ensure_bytes": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.compat.ensure_text": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.compat.ndarray_from_buffer": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numcodecs.delta": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.delta.Delta": {
  "lineno": 12,
  "symbols_in_volume": [
   "numcodecs.abc.Codec"
  ],
  "type": "class"
 },
 "numcodecs.delta.Delta.__init__": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numcodecs.delta.Delta.__repr__": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.delta.Delta.decode": {
  "lineno": 71,
  "symbols_in_volume": [
   "numcodecs.compat.buffer_copy",
   "numcodecs.compat.ndarray_from_buffer",
   "numpy.cumsum",
   "numpy.empty_like",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numcodecs.delta.Delta.encode": {
  "lineno": 55,
  "symbols_in_volume": [
   "numcodecs.compat.ndarray_from_buffer",
   "numpy.diff",
   "numpy.empty_like"
  ],
  "type": "function"
 },
 "numcodecs.delta.Delta.get_config": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.fixedscaleoffset": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.fixedscaleoffset.FixedScaleOffset": {
  "lineno": 12,
  "symbols_in_volume": [
   "numcodecs.abc.Codec"
  ],
  "type": "class"
 },
 "numcodecs.fixedscaleoffset.FixedScaleOffset.__init__": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numcodecs.fixedscaleoffset.FixedScaleOffset.__repr__": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.fixedscaleoffset.FixedScaleOffset.decode": {
  "lineno": 98,
  "symbols_in_volume": [
   "numcodecs.compat.buffer_copy",
   "numcodecs.compat.ndarray_from_buffer"
  ],
  "type": "function"
 },
 "numcodecs.fixedscaleoffset.FixedScaleOffset.encode": {
  "lineno": 82,
  "symbols_in_volume": [
   "numcodecs.compat.ndarray_from_buffer",
   "numpy.around"
  ],
  "type": "function"
 },
 "numcodecs.fixedscaleoffset.FixedScaleOffset.get_config": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.lzma": {
  "lineno": null,
  "symbols_in_volume": [
   "backports.lzma"
  ],
  "type": "module"
 },
 "numcodecs.lzma.LZMA": {
  "lineno": 22,
  "symbols_in_volume": [
   "numcodecs.abc.Codec"
  ],
  "type": "class"
 },
 "numcodecs.lzma.LZMA.__init__": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.lzma.LZMA.__repr__": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.lzma.LZMA.decode": {
  "lineno": 59,
  "symbols_in_volume": [
   "backports.lzma.decompress",
   "numcodecs.compat.buffer_copy"
  ],
  "type": "function"
 },
 "numcodecs.lzma.LZMA.encode": {
  "lineno": 49,
  "symbols_in_volume": [
   "backports.lzma.compress",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numcodecs.msgpacks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.msgpacks.MsgPack": {
  "lineno": 12,
  "symbols_in_volume": [
   "numcodecs.abc.Codec"
  ],
  "type": "class"
 },
 "numcodecs.msgpacks.MsgPack.__init__": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.msgpacks.MsgPack.__repr__": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.msgpacks.MsgPack.decode": {
  "lineno": 46,
  "symbols_in_volume": [
   "msgpack.unpackb",
   "numpy.array",
   "numpy.copyto"
  ],
  "type": "function"
 },
 "numcodecs.msgpacks.MsgPack.encode": {
  "lineno": 40,
  "symbols_in_volume": [
   "msgpack.packb",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "numcodecs.msgpacks.MsgPack.get_config": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.packbits": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.packbits.PackBits": {
  "lineno": 12,
  "symbols_in_volume": [
   "numcodecs.abc.Codec"
  ],
  "type": "class"
 },
 "numcodecs.packbits.PackBits.__init__": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.packbits.PackBits.decode": {
  "lineno": 67,
  "symbols_in_volume": [
   "numcodecs.compat.buffer_copy",
   "numcodecs.compat.ndarray_from_buffer",
   "numpy.unpackbits"
  ],
  "type": "function"
 },
 "numcodecs.packbits.PackBits.encode": {
  "lineno": 40,
  "symbols_in_volume": [
   "numcodecs.compat.ndarray_from_buffer",
   "numpy.empty",
   "numpy.packbits"
  ],
  "type": "function"
 },
 "numcodecs.pickles": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.pickles.Pickle": {
  "lineno": 16,
  "symbols_in_volume": [
   "numcodecs.abc.Codec"
  ],
  "type": "class"
 },
 "numcodecs.pickles.Pickle.__init__": {
  "lineno": 42,
  "symbols_in_volume": [
   "cPickle.HIGHEST_PROTOCOL"
  ],
  "type": "function"
 },
 "numcodecs.pickles.Pickle.__repr__": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.pickles.Pickle.decode": {
  "lineno": 48,
  "symbols_in_volume": [
   "cPickle.loads",
   "numpy.copyto"
  ],
  "type": "function"
 },
 "numcodecs.pickles.Pickle.encode": {
  "lineno": 45,
  "symbols_in_volume": [
   "cPickle.dumps"
  ],
  "type": "function"
 },
 "numcodecs.pickles.Pickle.get_config": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.registry": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.registry.get_codec": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.registry.register_codec": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.tests.common": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.tests.common.check_config": {
  "lineno": 122,
  "symbols_in_volume": [
   "json.dumps",
   "json.loads",
   "nose.tools.eq_"
  ],
  "type": "function"
 },
 "numcodecs.tests.common.check_encode_decode": {
  "lineno": 16,
  "symbols_in_volume": [
   "array.array",
   "numcodecs.compat.buffer_tobytes",
   "numpy.empty_like",
   "numpy.frombuffer"
  ],
  "type": "function"
 },
 "numcodecs.tests.common.check_encode_decode.compare": {
  "lineno": 35,
  "symbols_in_volume": [
   "nose.tools.eq_",
   "numcodecs.compat.buffer_tobytes",
   "numcodecs.compat.ndarray_from_buffer",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numcodecs.tests.common.check_encode_decode_array": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.empty_like"
  ],
  "type": "function"
 },
 "numcodecs.tests.common.check_encode_decode_array.compare": {
  "lineno": 96,
  "symbols_in_volume": [
   "nose.tools.assert_true",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numcodecs.tests.common.check_repr": {
  "lineno": 129,
  "symbols_in_volume": [
   "nose.tools.eq_"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_astype": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.linspace",
   "numpy.random.normal",
   "numpy.random.randint"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_astype.test_config": {
  "lineno": 53,
  "symbols_in_volume": [
   "numcodecs.astype.AsType",
   "numcodecs.tests.common.check_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_astype.test_decode": {
  "lineno": 33,
  "symbols_in_volume": [
   "nose.tools.eq_",
   "numcodecs.astype.AsType",
   "numpy.arange",
   "numpy.dtype",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_astype.test_encode": {
  "lineno": 43,
  "symbols_in_volume": [
   "nose.tools.eq_",
   "numcodecs.astype.AsType",
   "numpy.arange",
   "numpy.dtype",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_astype.test_encode_decode": {
  "lineno": 27,
  "symbols_in_volume": [
   "numcodecs.astype.AsType",
   "numcodecs.tests.common.check_encode_decode"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_astype.test_repr": {
  "lineno": 59,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_blosc": {
  "lineno": null,
  "symbols_in_volume": [
   "numcodecs.blosc.Blosc",
   "numcodecs.blosc.Blosc.BITSHUFFLE",
   "numcodecs.blosc.Blosc.NOSHUFFLE",
   "numcodecs.blosc.Blosc.SHUFFLE",
   "numpy.arange",
   "numpy.linspace",
   "numpy.random.choice",
   "numpy.random.normal",
   "numpy.random.randint"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_blosc.test_compress_blocksize": {
  "lineno": 67,
  "symbols_in_volume": [
   "numcodecs.blosc.Blosc.NOSHUFFLE",
   "numcodecs.blosc.cbuffer_sizes",
   "numcodecs.blosc.compress",
   "numcodecs.blosc.use_threads",
   "numpy.arange"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_blosc.test_config": {
  "lineno": 48,
  "symbols_in_volume": [
   "numcodecs.blosc.Blosc",
   "numcodecs.tests.common.check_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_blosc.test_config_blocksize": {
  "lineno": 90,
  "symbols_in_volume": [
   "numcodecs.blosc.Blosc.SHUFFLE",
   "numcodecs.blosc.Blosc.from_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_blosc.test_encode_decode": {
  "lineno": 43,
  "symbols_in_volume": [
   "itertools.product",
   "numcodecs.tests.common.check_encode_decode"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_blosc.test_repr": {
  "lineno": 55,
  "symbols_in_volume": [
   "numcodecs.blosc.Blosc",
   "numcodecs.blosc.Blosc.BITSHUFFLE",
   "numcodecs.blosc.Blosc.NOSHUFFLE",
   "numcodecs.blosc.Blosc.SHUFFLE"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_bz2": {
  "lineno": null,
  "symbols_in_volume": [
   "numcodecs.bz2.BZ2",
   "numpy.arange",
   "numpy.linspace",
   "numpy.random.choice",
   "numpy.random.normal",
   "numpy.random.randint"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_bz2.test_config": {
  "lineno": 39,
  "symbols_in_volume": [
   "numcodecs.bz2.BZ2",
   "numcodecs.tests.common.check_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_bz2.test_encode_decode": {
  "lineno": 34,
  "symbols_in_volume": [
   "itertools.product",
   "numcodecs.tests.common.check_encode_decode"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_bz2.test_repr": {
  "lineno": 44,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_categorize": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.choice"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_categorize.test_config": {
  "lineno": 94,
  "symbols_in_volume": [
   "numcodecs.categorize.Categorize",
   "numcodecs.tests.common.check_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_categorize.test_encode": {
  "lineno": 56,
  "symbols_in_volume": [
   "nose.tools.eq_",
   "numcodecs.categorize.Categorize",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_categorize.test_encode_decode": {
  "lineno": 38,
  "symbols_in_volume": [
   "numcodecs.categorize.Categorize",
   "numcodecs.tests.common.check_encode_decode"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_categorize.test_encode_unicode": {
  "lineno": 75,
  "symbols_in_volume": [
   "nose.tools.eq_",
   "numcodecs.categorize.Categorize",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_categorize.test_repr": {
  "lineno": 101,
  "symbols_in_volume": [
   "nose.tools.eq_",
   "numcodecs.categorize.Categorize",
   "numcodecs.compat.PY2"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_checksum32": {
  "lineno": null,
  "symbols_in_volume": [
   "numcodecs.checksum32.Adler32",
   "numcodecs.checksum32.CRC32",
   "numpy.arange",
   "numpy.linspace",
   "numpy.random.choice",
   "numpy.random.normal",
   "numpy.random.randint"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_checksum32.test_config": {
  "lineno": 41,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_checksum32.test_encode_decode": {
  "lineno": 29,
  "symbols_in_volume": [
   "itertools.product",
   "numcodecs.tests.common.check_encode_decode"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_checksum32.test_errors": {
  "lineno": 34,
  "symbols_in_volume": [
   "itertools.product",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_checksum32.test_repr": {
  "lineno": 46,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_delta": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.linspace",
   "numpy.random.normal",
   "numpy.random.randint"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_delta.test_config": {
  "lineno": 44,
  "symbols_in_volume": [
   "numcodecs.delta.Delta",
   "numcodecs.tests.common.check_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_delta.test_encode": {
  "lineno": 33,
  "symbols_in_volume": [
   "nose.tools.eq_",
   "numcodecs.delta.Delta",
   "numpy.arange",
   "numpy.array",
   "numpy.dtype",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_delta.test_encode_decode": {
  "lineno": 27,
  "symbols_in_volume": [
   "numcodecs.delta.Delta",
   "numcodecs.tests.common.check_encode_decode"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_delta.test_repr": {
  "lineno": 49,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_fixedscaleoffset": {
  "lineno": null,
  "symbols_in_volume": [
   "numcodecs.fixedscaleoffset.FixedScaleOffset",
   "numpy.linspace",
   "numpy.random.normal"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_fixedscaleoffset.test_config": {
  "lineno": 52,
  "symbols_in_volume": [
   "numcodecs.fixedscaleoffset.FixedScaleOffset",
   "numcodecs.tests.common.check_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_fixedscaleoffset.test_encode": {
  "lineno": 40,
  "symbols_in_volume": [
   "nose.tools.eq_",
   "numcodecs.fixedscaleoffset.FixedScaleOffset",
   "numpy.array",
   "numpy.dtype",
   "numpy.linspace",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_fixedscaleoffset.test_encode_decode": {
  "lineno": 34,
  "symbols_in_volume": [
   "itertools.product",
   "numcodecs.tests.common.check_encode_decode",
   "numpy.log10"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_fixedscaleoffset.test_repr": {
  "lineno": 57,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_lz4": {
  "lineno": null,
  "symbols_in_volume": [
   "numcodecs.lz4.LZ4",
   "numpy.arange",
   "numpy.linspace",
   "numpy.random.choice",
   "numpy.random.normal",
   "numpy.random.randint"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_lz4.test_config": {
  "lineno": 42,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_lz4.test_encode_decode": {
  "lineno": 37,
  "symbols_in_volume": [
   "itertools.product",
   "numcodecs.tests.common.check_encode_decode"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_lz4.test_repr": {
  "lineno": 47,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_lzma": {
  "lineno": null,
  "symbols_in_volume": [
   "nose.SkipTest",
   "numcodecs.lzma.LZMA",
   "numcodecs.lzma._lzma.FILTER_LZMA2",
   "numcodecs.lzma._lzma.FORMAT_RAW",
   "numpy.arange",
   "numpy.linspace",
   "numpy.random.choice",
   "numpy.random.normal",
   "numpy.random.randint"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_lzma.test_config": {
  "lineno": 43,
  "symbols_in_volume": [
   "numcodecs.lzma.LZMA",
   "numcodecs.lzma._lzma.CHECK_NONE",
   "numcodecs.lzma._lzma.FORMAT_XZ",
   "numcodecs.tests.common.check_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_lzma.test_encode_decode": {
  "lineno": 38,
  "symbols_in_volume": [
   "itertools.product",
   "numcodecs.tests.common.check_encode_decode"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_lzma.test_repr": {
  "lineno": 48,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_msgpacks": {
  "lineno": null,
  "symbols_in_volume": [
   "nose.SkipTest",
   "numpy.arange",
   "numpy.array",
   "numpy.nan"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_msgpacks.test_config": {
  "lineno": 34,
  "symbols_in_volume": [
   "numcodecs.msgpacks.MsgPack",
   "numcodecs.tests.common.check_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_msgpacks.test_encode_decode": {
  "lineno": 28,
  "symbols_in_volume": [
   "numcodecs.msgpacks.MsgPack",
   "numcodecs.tests.common.check_encode_decode_array"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_msgpacks.test_repr": {
  "lineno": 39,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_packbits": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.randint"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_packbits.test_config": {
  "lineno": 32,
  "symbols_in_volume": [
   "numcodecs.packbits.PackBits",
   "numcodecs.tests.common.check_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_packbits.test_encode_decode": {
  "lineno": 22,
  "symbols_in_volume": [
   "numcodecs.packbits.PackBits",
   "numcodecs.tests.common.check_encode_decode",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_packbits.test_repr": {
  "lineno": 37,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_pickles": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.nan"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_pickles.test_config": {
  "lineno": 30,
  "symbols_in_volume": [
   "numcodecs.pickles.Pickle",
   "numcodecs.tests.common.check_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_pickles.test_encode_decode": {
  "lineno": 24,
  "symbols_in_volume": [
   "numcodecs.pickles.Pickle",
   "numcodecs.tests.common.check_encode_decode_array"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_pickles.test_repr": {
  "lineno": 35,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_registry": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.tests.test_registry.test_registry_errors": {
  "lineno": 11,
  "symbols_in_volume": [
   "nose.tools.assert_raises",
   "numcodecs.registry.get_codec"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_zlib": {
  "lineno": null,
  "symbols_in_volume": [
   "numcodecs.zlib.Zlib",
   "numpy.arange",
   "numpy.linspace",
   "numpy.random.choice",
   "numpy.random.normal",
   "numpy.random.randint"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_zlib.test_config": {
  "lineno": 41,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_config",
   "numcodecs.zlib.Zlib"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_zlib.test_encode_decode": {
  "lineno": 36,
  "symbols_in_volume": [
   "itertools.product",
   "numcodecs.tests.common.check_encode_decode"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_zlib.test_repr": {
  "lineno": 46,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_zstd": {
  "lineno": null,
  "symbols_in_volume": [
   "numcodecs.zstd.Zstd",
   "numpy.arange",
   "numpy.linspace",
   "numpy.random.choice",
   "numpy.random.normal",
   "numpy.random.randint"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_zstd.test_config": {
  "lineno": 42,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_zstd.test_encode_decode": {
  "lineno": 37,
  "symbols_in_volume": [
   "itertools.product",
   "numcodecs.tests.common.check_encode_decode"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_zstd.test_repr": {
  "lineno": 47,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.zlib": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.zlib.Zlib": {
  "lineno": 13,
  "symbols_in_volume": [
   "numcodecs.abc.Codec"
  ],
  "type": "class"
 },
 "numcodecs.zlib.Zlib.__init__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.zlib.Zlib.decode": {
  "lineno": 38,
  "symbols_in_volume": [
   "numcodecs.compat.buffer_copy",
   "zlib.decompress"
  ],
  "type": "function"
 },
 "numcodecs.zlib.Zlib.encode": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.ndarray",
   "zlib.compress"
  ],
  "type": "function"
 }
}