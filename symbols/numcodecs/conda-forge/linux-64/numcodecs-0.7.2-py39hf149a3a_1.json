{
 "numcodecs": {
  "lineno": null,
  "symbols_in_volume": [
   "atexit.register",
   "multiprocessing.cpu_count",
   "numcodecs.astype.AsType",
   "numcodecs.base64.Base64",
   "numcodecs.blosc.Blosc",
   "numcodecs.blosc.destroy",
   "numcodecs.blosc.init",
   "numcodecs.blosc.set_nthreads",
   "numcodecs.bz2.BZ2",
   "numcodecs.categorize.Categorize",
   "numcodecs.checksum32.Adler32",
   "numcodecs.checksum32.CRC32",
   "numcodecs.delta.Delta",
   "numcodecs.fixedscaleoffset.FixedScaleOffset",
   "numcodecs.gzip.GZip",
   "numcodecs.json.JSON",
   "numcodecs.lz4.LZ4",
   "numcodecs.lzma.LZMA",
   "numcodecs.msgpacks.MsgPack",
   "numcodecs.packbits.PackBits",
   "numcodecs.pickles.Pickle",
   "numcodecs.quantize.Quantize",
   "numcodecs.registry.register_codec",
   "numcodecs.vlen.VLenArray",
   "numcodecs.vlen.VLenBytes",
   "numcodecs.vlen.VLenUTF8",
   "numcodecs.zlib.Zlib",
   "numcodecs.zstd.Zstd"
  ],
  "type": "module"
 },
 "numcodecs.abc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.abc.Codec": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numcodecs.abc.Codec.__eq__": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.abc.Codec.__repr__": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.abc.Codec.decode": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.abc.Codec.encode": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.abc.Codec.from_config": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.abc.Codec.get_config": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.astype": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.astype.AsType": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numcodecs.astype.AsType.__init__": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numcodecs.astype.AsType.__repr__": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.astype.AsType.decode": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.astype.AsType.encode": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.astype.AsType.get_config": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.base64": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.base64.Base64": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numcodecs.base64.Base64.decode": {
  "lineno": 19,
  "symbols_in_volume": [
   "base64.standard_b64decode"
  ],
  "type": "function"
 },
 "numcodecs.base64.Base64.encode": {
  "lineno": 12,
  "symbols_in_volume": [
   "base64.standard_b64encode"
  ],
  "type": "function"
 },
 "numcodecs.bz2": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.bz2.BZ2": {
  "lineno": 8,
  "symbols_in_volume": [
   "numcodecs.abc.Codec"
  ],
  "type": "class"
 },
 "numcodecs.bz2.BZ2.__init__": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.bz2.BZ2.decode": {
  "lineno": 32,
  "symbols_in_volume": [
   "bz2.decompress",
   "numcodecs.compat.ensure_contiguous_ndarray",
   "numcodecs.compat.ndarray_copy"
  ],
  "type": "function"
 },
 "numcodecs.bz2.BZ2.encode": {
  "lineno": 23,
  "symbols_in_volume": [
   "bz2.compress",
   "numcodecs.compat.ensure_contiguous_ndarray"
  ],
  "type": "function"
 },
 "numcodecs.categorize": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.categorize.Categorize": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numcodecs.categorize.Categorize.__init__": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numcodecs.categorize.Categorize.__repr__": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.categorize.Categorize.decode": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.full_like"
  ],
  "type": "function"
 },
 "numcodecs.categorize.Categorize.encode": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numcodecs.categorize.Categorize.get_config": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.checksum32": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.checksum32.Adler32": {
  "lineno": 38,
  "symbols_in_volume": [
   "zlib.adler32"
  ],
  "type": "class"
 },
 "numcodecs.checksum32.CRC32": {
  "lineno": 32,
  "symbols_in_volume": [
   "zlib.crc32"
  ],
  "type": "class"
 },
 "numcodecs.checksum32.Checksum32": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numcodecs.checksum32.Checksum32.decode": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.checksum32.Checksum32.encode": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "numcodecs.compat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.compat.ensure_bytes": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.compat.ensure_contiguous_ndarray": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.int64"
  ],
  "type": "function"
 },
 "numcodecs.compat.ensure_ndarray": {
  "lineno": 10,
  "symbols_in_volume": [
   "array.array",
   "numpy.array",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numcodecs.compat.ensure_text": {
  "lineno": 126,
  "symbols_in_volume": [
   "codecs.decode"
  ],
  "type": "function"
 },
 "numcodecs.compat.ndarray_copy": {
  "lineno": 133,
  "symbols_in_volume": [
   "numpy.copyto"
  ],
  "type": "function"
 },
 "numcodecs.delta": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.delta.Delta": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numcodecs.delta.Delta.__init__": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numcodecs.delta.Delta.__repr__": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.delta.Delta.decode": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.cumsum",
   "numpy.empty_like"
  ],
  "type": "function"
 },
 "numcodecs.delta.Delta.encode": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.diff",
   "numpy.empty_like"
  ],
  "type": "function"
 },
 "numcodecs.delta.Delta.get_config": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.fixedscaleoffset": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.fixedscaleoffset.FixedScaleOffset": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numcodecs.fixedscaleoffset.FixedScaleOffset.__init__": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numcodecs.fixedscaleoffset.FixedScaleOffset.__repr__": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.fixedscaleoffset.FixedScaleOffset.decode": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.fixedscaleoffset.FixedScaleOffset.encode": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.around"
  ],
  "type": "function"
 },
 "numcodecs.fixedscaleoffset.FixedScaleOffset.get_config": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.gzip": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.gzip.GZip": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numcodecs.gzip.GZip.__init__": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.gzip.GZip.decode": {
  "lineno": 39,
  "symbols_in_volume": [
   "gzip.GzipFile",
   "io.BytesIO"
  ],
  "type": "function"
 },
 "numcodecs.gzip.GZip.encode": {
  "lineno": 23,
  "symbols_in_volume": [
   "gzip.GzipFile",
   "io.BytesIO"
  ],
  "type": "function"
 },
 "numcodecs.json": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.json.JSON": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numcodecs.json.JSON.__init__": {
  "lineno": 36,
  "symbols_in_volume": [
   "json.JSONDecoder",
   "json.JSONEncoder"
  ],
  "type": "function"
 },
 "numcodecs.json.JSON.__repr__": {
  "lineno": 79,
  "symbols_in_volume": [
   "textwrap.fill"
  ],
  "type": "function"
 },
 "numcodecs.json.JSON.decode": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.copyto",
   "numpy.empty"
  ],
  "type": "function"
 },
 "numcodecs.json.JSON.encode": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "numcodecs.json.JSON.get_config": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.lzma": {
  "lineno": null,
  "symbols_in_volume": [
   "backports.lzma"
  ],
  "type": "module"
 },
 "numcodecs.lzma.LZMA": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numcodecs.lzma.LZMA.__init__": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.lzma.LZMA.__repr__": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.lzma.LZMA.decode": {
  "lineno": 53,
  "symbols_in_volume": [
   "backports.lzma.decompress"
  ],
  "type": "function"
 },
 "numcodecs.lzma.LZMA.encode": {
  "lineno": 44,
  "symbols_in_volume": [
   "backports.lzma.compress"
  ],
  "type": "function"
 },
 "numcodecs.msgpacks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.msgpacks.MsgPack": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numcodecs.msgpacks.MsgPack.__init__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.msgpacks.MsgPack.__repr__": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.msgpacks.MsgPack.decode": {
  "lineno": 62,
  "symbols_in_volume": [
   "msgpack.unpackb",
   "numpy.copyto",
   "numpy.empty"
  ],
  "type": "function"
 },
 "numcodecs.msgpacks.MsgPack.encode": {
  "lineno": 54,
  "symbols_in_volume": [
   "msgpack.packb",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "numcodecs.msgpacks.MsgPack.get_config": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.packbits": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.packbits.PackBits": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numcodecs.packbits.PackBits.__init__": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.packbits.PackBits.decode": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.unpackbits"
  ],
  "type": "function"
 },
 "numcodecs.packbits.PackBits.encode": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.packbits"
  ],
  "type": "function"
 },
 "numcodecs.pickles": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.pickles.Pickle": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numcodecs.pickles.Pickle.__init__": {
  "lineno": 35,
  "symbols_in_volume": [
   "pickle.HIGHEST_PROTOCOL"
  ],
  "type": "function"
 },
 "numcodecs.pickles.Pickle.__repr__": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.pickles.Pickle.decode": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.copyto",
   "pickle.loads"
  ],
  "type": "function"
 },
 "numcodecs.pickles.Pickle.encode": {
  "lineno": 38,
  "symbols_in_volume": [
   "pickle.dumps"
  ],
  "type": "function"
 },
 "numcodecs.pickles.Pickle.get_config": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.quantize": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.quantize.Quantize": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numcodecs.quantize.Quantize.__init__": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numcodecs.quantize.Quantize.__repr__": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.quantize.Quantize.decode": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.quantize.Quantize.encode": {
  "lineno": 62,
  "symbols_in_volume": [
   "math.ceil",
   "math.floor",
   "math.log",
   "numpy.around"
  ],
  "type": "function"
 },
 "numcodecs.quantize.Quantize.get_config": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.registry": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.registry.get_codec": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.registry.register_codec": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.tests": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.register_assert_rewrite"
  ],
  "type": "module"
 },
 "numcodecs.tests.common": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.tests.common.assert_array_items_equal": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numcodecs.tests.common.check_backwards_compatibility": {
  "lineno": 234,
  "symbols_in_volume": [
   "glob.glob",
   "json.dump",
   "json.load",
   "numcodecs.compat.ensure_bytes",
   "numcodecs.compat.ensure_ndarray",
   "numcodecs.registry.get_codec",
   "numpy.load",
   "numpy.save",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal",
   "os.makedirs",
   "os.path.exists",
   "os.path.join"
  ],
  "type": "function"
 },
 "numcodecs.tests.common.check_config": {
  "lineno": 220,
  "symbols_in_volume": [
   "json.dumps",
   "json.loads",
   "numcodecs.registry.get_codec"
  ],
  "type": "function"
 },
 "numcodecs.tests.common.check_encode_decode": {
  "lineno": 45,
  "symbols_in_volume": [
   "array.array",
   "numcodecs.compat.ensure_bytes",
   "numpy.empty_like",
   "numpy.frombuffer"
  ],
  "type": "function"
 },
 "numcodecs.tests.common.check_encode_decode_array": {
  "lineno": 205,
  "symbols_in_volume": [
   "numcodecs.compat.ensure_ndarray",
   "numpy.empty_like"
  ],
  "type": "function"
 },
 "numcodecs.tests.common.check_encode_decode_partial": {
  "lineno": 114,
  "symbols_in_volume": [
   "array.array",
   "numcodecs.compat.ensure_bytes",
   "numpy.empty_like",
   "numpy.frombuffer"
  ],
  "type": "function"
 },
 "numcodecs.tests.common.check_err_decode_object_buffer": {
  "lineno": 306,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.empty",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.common.check_err_encode_object_buffer": {
  "lineno": 315,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.common.check_max_buffer_size": {
  "lineno": 322,
  "symbols_in_volume": [
   "numpy.int16",
   "numpy.int32",
   "numpy.int8",
   "numpy.zeros",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.common.check_repr": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.tests.common.compare_arrays": {
  "lineno": 24,
  "symbols_in_volume": [
   "numcodecs.compat.ensure_ndarray",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_astype": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.linspace",
   "numpy.random.normal",
   "numpy.random.randint"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_astype.test_backwards_compatibility": {
  "lineno": 57,
  "symbols_in_volume": [
   "numcodecs.astype.AsType",
   "numcodecs.astype.AsType.codec_id",
   "numcodecs.tests.common.check_backwards_compatibility",
   "numpy.arange",
   "numpy.linspace",
   "numpy.random.normal",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_astype.test_config": {
  "lineno": 47,
  "symbols_in_volume": [
   "numcodecs.astype.AsType",
   "numcodecs.tests.common.check_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_astype.test_decode": {
  "lineno": 27,
  "symbols_in_volume": [
   "numcodecs.astype.AsType",
   "numpy.arange",
   "numpy.dtype",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_astype.test_encode": {
  "lineno": 37,
  "symbols_in_volume": [
   "numcodecs.astype.AsType",
   "numpy.arange",
   "numpy.dtype",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_astype.test_encode_decode": {
  "lineno": 21,
  "symbols_in_volume": [
   "numcodecs.astype.AsType",
   "numcodecs.tests.common.check_encode_decode"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_astype.test_repr": {
  "lineno": 53,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_base64": {
  "lineno": null,
  "symbols_in_volume": [
   "numcodecs.base64.Base64",
   "numpy.arange",
   "numpy.linspace",
   "numpy.random.choice",
   "numpy.random.normal",
   "numpy.random.randint"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_base64.test_backwards_compatibility": {
  "lineno": 60,
  "symbols_in_volume": [
   "numcodecs.base64.Base64.codec_id",
   "numcodecs.tests.common.check_backwards_compatibility"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_base64.test_encode_decode": {
  "lineno": 43,
  "symbols_in_volume": [
   "itertools.product",
   "numcodecs.tests.common.check_encode_decode"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_base64.test_eq": {
  "lineno": 52,
  "symbols_in_volume": [
   "numcodecs.base64.Base64"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_base64.test_err_decode_object_buffer": {
  "lineno": 64,
  "symbols_in_volume": [
   "numcodecs.base64.Base64",
   "numcodecs.tests.common.check_err_decode_object_buffer"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_base64.test_err_encode_list": {
  "lineno": 72,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_base64.test_err_encode_non_contiguous": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.arange",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_base64.test_err_encode_object_buffer": {
  "lineno": 68,
  "symbols_in_volume": [
   "numcodecs.base64.Base64",
   "numcodecs.tests.common.check_err_encode_object_buffer"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_base64.test_repr": {
  "lineno": 48,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_blosc": {
  "lineno": null,
  "symbols_in_volume": [
   "numcodecs.blosc.Blosc",
   "numcodecs.blosc.Blosc.BITSHUFFLE",
   "numcodecs.blosc.Blosc.NOSHUFFLE",
   "numcodecs.blosc.Blosc.SHUFFLE",
   "numpy.arange",
   "numpy.linspace",
   "numpy.random.choice",
   "numpy.random.normal",
   "numpy.random.randint",
   "pytest.skip"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_blosc._decode_worker": {
  "lineno": 216,
  "symbols_in_volume": [
   "numcodecs.blosc.Blosc"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_blosc._encode_worker": {
  "lineno": 210,
  "symbols_in_volume": [
   "numcodecs.blosc.Blosc",
   "numcodecs.blosc.Blosc.SHUFFLE"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_blosc.test_backwards_compatibility": {
  "lineno": 206,
  "symbols_in_volume": [
   "numcodecs.blosc.Blosc.codec_id",
   "numcodecs.tests.common.check_backwards_compatibility"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_blosc.test_compress_autoshuffle": {
  "lineno": 176,
  "symbols_in_volume": [
   "numcodecs.blosc.Blosc.AUTOSHUFFLE",
   "numcodecs.blosc.Blosc.BITSHUFFLE",
   "numcodecs.blosc.Blosc.SHUFFLE",
   "numcodecs.blosc.cbuffer_metainfo",
   "numcodecs.blosc.compress",
   "numcodecs.blosc.list_compressors",
   "numcodecs.blosc.use_threads",
   "numpy.arange"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_blosc.test_compress_blocksize": {
  "lineno": 129,
  "symbols_in_volume": [
   "numcodecs.blosc.Blosc.NOSHUFFLE",
   "numcodecs.blosc.cbuffer_sizes",
   "numcodecs.blosc.compress",
   "numcodecs.blosc.use_threads",
   "numpy.arange",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_blosc.test_compress_blocksize_default": {
  "lineno": 113,
  "symbols_in_volume": [
   "numcodecs.blosc.Blosc.NOSHUFFLE",
   "numcodecs.blosc.cbuffer_sizes",
   "numcodecs.blosc.compress",
   "numcodecs.blosc.use_threads",
   "numpy.arange"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_blosc.test_compress_complib": {
  "lineno": 140,
  "symbols_in_volume": [
   "numcodecs.blosc.Blosc.NOSHUFFLE",
   "numcodecs.blosc.cbuffer_complib",
   "numcodecs.blosc.compress",
   "numcodecs.blosc.list_compressors",
   "numcodecs.blosc.use_threads",
   "numpy.arange",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_blosc.test_compress_metainfo": {
  "lineno": 164,
  "symbols_in_volume": [
   "numcodecs.blosc.Blosc.BITSHUFFLE",
   "numcodecs.blosc.Blosc.NOSHUFFLE",
   "numcodecs.blosc.Blosc.SHUFFLE",
   "numcodecs.blosc.cbuffer_metainfo",
   "numcodecs.blosc.compress",
   "numcodecs.blosc.list_compressors",
   "numcodecs.blosc.use_threads",
   "numpy.arange",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_blosc.test_config": {
  "lineno": 83,
  "symbols_in_volume": [
   "numcodecs.blosc.Blosc",
   "numcodecs.tests.common.check_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_blosc.test_config_blocksize": {
  "lineno": 191,
  "symbols_in_volume": [
   "numcodecs.blosc.Blosc.SHUFFLE",
   "numcodecs.blosc.Blosc.from_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_blosc.test_decompression_error_handling": {
  "lineno": 258,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_blosc.test_encode_decode": {
  "lineno": 69,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_encode_decode",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_blosc.test_eq": {
  "lineno": 106,
  "symbols_in_volume": [
   "numcodecs.blosc.Blosc"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_blosc.test_err_decode_object_buffer": {
  "lineno": 250,
  "symbols_in_volume": [
   "numcodecs.blosc.Blosc",
   "numcodecs.tests.common.check_err_decode_object_buffer"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_blosc.test_err_encode_object_buffer": {
  "lineno": 254,
  "symbols_in_volume": [
   "numcodecs.blosc.Blosc",
   "numcodecs.tests.common.check_err_encode_object_buffer"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_blosc.test_max_buffer_size": {
  "lineno": 266,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_max_buffer_size"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_blosc.test_multiprocessing": {
  "lineno": 222,
  "symbols_in_volume": [
   "multiprocessing.Pool",
   "multiprocessing.pool.ThreadPool",
   "numcodecs.blosc.use_threads",
   "numpy.arange",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_blosc.test_partial_decode": {
  "lineno": 75,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_encode_decode_partial",
   "pytest.mark.parametrize",
   "pytest.mark.xfail",
   "pytest.param"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_blosc.test_repr": {
  "lineno": 90,
  "symbols_in_volume": [
   "numcodecs.blosc.Blosc",
   "numcodecs.blosc.Blosc.AUTOSHUFFLE",
   "numcodecs.blosc.Blosc.BITSHUFFLE",
   "numcodecs.blosc.Blosc.NOSHUFFLE",
   "numcodecs.blosc.Blosc.SHUFFLE"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_blosc.use_threads": {
  "lineno": 64,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_bz2": {
  "lineno": null,
  "symbols_in_volume": [
   "numcodecs.bz2.BZ2",
   "numpy.arange",
   "numpy.linspace",
   "numpy.random.choice",
   "numpy.random.normal",
   "numpy.random.randint"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_bz2.test_backwards_compatibility": {
  "lineno": 56,
  "symbols_in_volume": [
   "numcodecs.bz2.BZ2.codec_id",
   "numcodecs.tests.common.check_backwards_compatibility"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_bz2.test_config": {
  "lineno": 47,
  "symbols_in_volume": [
   "numcodecs.bz2.BZ2",
   "numcodecs.tests.common.check_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_bz2.test_encode_decode": {
  "lineno": 42,
  "symbols_in_volume": [
   "itertools.product",
   "numcodecs.tests.common.check_encode_decode"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_bz2.test_err_decode_object_buffer": {
  "lineno": 60,
  "symbols_in_volume": [
   "numcodecs.bz2.BZ2",
   "numcodecs.tests.common.check_err_decode_object_buffer"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_bz2.test_err_encode_object_buffer": {
  "lineno": 64,
  "symbols_in_volume": [
   "numcodecs.bz2.BZ2",
   "numcodecs.tests.common.check_err_encode_object_buffer"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_bz2.test_repr": {
  "lineno": 52,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_categorize": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.choice"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_categorize.test_backwards_compatibility": {
  "lineno": 78,
  "symbols_in_volume": [
   "numcodecs.categorize.Categorize",
   "numcodecs.categorize.Categorize.codec_id",
   "numcodecs.tests.common.check_backwards_compatibility"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_categorize.test_config": {
  "lineno": 56,
  "symbols_in_volume": [
   "numcodecs.categorize.Categorize",
   "numcodecs.tests.common.check_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_categorize.test_encode": {
  "lineno": 35,
  "symbols_in_volume": [
   "numcodecs.categorize.Categorize",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_categorize.test_encode_decode": {
  "lineno": 22,
  "symbols_in_volume": [
   "numcodecs.categorize.Categorize",
   "numcodecs.tests.common.check_encode_decode",
   "numcodecs.tests.common.check_encode_decode_array"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_categorize.test_errors": {
  "lineno": 87,
  "symbols_in_volume": [
   "numcodecs.categorize.Categorize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_categorize.test_repr": {
  "lineno": 61,
  "symbols_in_volume": [
   "numcodecs.categorize.Categorize"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_checksum32": {
  "lineno": null,
  "symbols_in_volume": [
   "numcodecs.checksum32.Adler32",
   "numcodecs.checksum32.CRC32",
   "numpy.arange",
   "numpy.linspace",
   "numpy.random.choice",
   "numpy.random.normal",
   "numpy.random.randint"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_checksum32.test_backwards_compatibility": {
  "lineno": 50,
  "symbols_in_volume": [
   "numcodecs.checksum32.Adler32",
   "numcodecs.checksum32.Adler32.codec_id",
   "numcodecs.checksum32.CRC32",
   "numcodecs.checksum32.CRC32.codec_id",
   "numcodecs.tests.common.check_backwards_compatibility"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_checksum32.test_config": {
  "lineno": 40,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_checksum32.test_encode_decode": {
  "lineno": 28,
  "symbols_in_volume": [
   "itertools.product",
   "numcodecs.tests.common.check_encode_decode"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_checksum32.test_err_encode_object_buffer": {
  "lineno": 55,
  "symbols_in_volume": [
   "numcodecs.checksum32.Adler32",
   "numcodecs.checksum32.CRC32",
   "numcodecs.tests.common.check_err_encode_object_buffer"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_checksum32.test_errors": {
  "lineno": 33,
  "symbols_in_volume": [
   "itertools.product",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_checksum32.test_repr": {
  "lineno": 45,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_compat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.tests.test_compat.test_ensure_bytes": {
  "lineno": 24,
  "symbols_in_volume": [
   "array.array",
   "numcodecs.compat.ensure_bytes",
   "numpy.arange"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_compat.test_ensure_bytes_invalid_inputs": {
  "lineno": 61,
  "symbols_in_volume": [
   "numcodecs.compat.ensure_bytes",
   "numpy.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_compat.test_ensure_contiguous_ndarray_invalid_inputs": {
  "lineno": 70,
  "symbols_in_volume": [
   "array.array",
   "numcodecs.compat.ensure_contiguous_ndarray",
   "numpy.arange",
   "numpy.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_compat.test_ensure_contiguous_ndarray_max_buffer_size": {
  "lineno": 99,
  "symbols_in_volume": [
   "numcodecs.compat.ensure_contiguous_ndarray",
   "numpy.int16",
   "numpy.int32",
   "numpy.int8",
   "numpy.zeros",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_compat.test_ensure_contiguous_ndarray_shares_memory": {
  "lineno": 36,
  "symbols_in_volume": [
   "array.array",
   "mmap.mmap",
   "numcodecs.compat.ensure_contiguous_ndarray",
   "numpy.arange",
   "numpy.float64",
   "numpy.int64",
   "numpy.linspace",
   "numpy.ndarray",
   "numpy.shares_memory"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_compat.test_ensure_contiguous_ndarray_writeable": {
  "lineno": 88,
  "symbols_in_volume": [
   "numcodecs.compat.ensure_contiguous_ndarray",
   "numpy.arange"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_compat.test_ensure_text": {
  "lineno": 12,
  "symbols_in_volume": [
   "array.array",
   "numcodecs.compat.ensure_text",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_delta": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.linspace",
   "numpy.random.normal",
   "numpy.random.randint"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_delta.test_backwards_compatibility": {
  "lineno": 48,
  "symbols_in_volume": [
   "numcodecs.delta.Delta",
   "numcodecs.delta.Delta.codec_id",
   "numcodecs.tests.common.check_backwards_compatibility"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_delta.test_config": {
  "lineno": 39,
  "symbols_in_volume": [
   "numcodecs.delta.Delta",
   "numcodecs.tests.common.check_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_delta.test_encode": {
  "lineno": 28,
  "symbols_in_volume": [
   "numcodecs.delta.Delta",
   "numpy.arange",
   "numpy.array",
   "numpy.dtype",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_delta.test_encode_decode": {
  "lineno": 22,
  "symbols_in_volume": [
   "numcodecs.delta.Delta",
   "numcodecs.tests.common.check_encode_decode"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_delta.test_errors": {
  "lineno": 54,
  "symbols_in_volume": [
   "numcodecs.delta.Delta",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_delta.test_repr": {
  "lineno": 44,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_fixedscaleoffset": {
  "lineno": null,
  "symbols_in_volume": [
   "numcodecs.fixedscaleoffset.FixedScaleOffset",
   "numpy.linspace",
   "numpy.random.normal"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_fixedscaleoffset.test_backwards_compatibility": {
  "lineno": 59,
  "symbols_in_volume": [
   "numcodecs.fixedscaleoffset.FixedScaleOffset.codec_id",
   "numcodecs.tests.common.check_backwards_compatibility",
   "numpy.log10"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_fixedscaleoffset.test_config": {
  "lineno": 49,
  "symbols_in_volume": [
   "numcodecs.fixedscaleoffset.FixedScaleOffset",
   "numcodecs.tests.common.check_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_fixedscaleoffset.test_encode": {
  "lineno": 38,
  "symbols_in_volume": [
   "numcodecs.fixedscaleoffset.FixedScaleOffset",
   "numpy.array",
   "numpy.dtype",
   "numpy.linspace",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_fixedscaleoffset.test_encode_decode": {
  "lineno": 32,
  "symbols_in_volume": [
   "itertools.product",
   "numcodecs.tests.common.check_encode_decode",
   "numpy.log10"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_fixedscaleoffset.test_errors": {
  "lineno": 64,
  "symbols_in_volume": [
   "numcodecs.fixedscaleoffset.FixedScaleOffset",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_fixedscaleoffset.test_repr": {
  "lineno": 54,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_gzip": {
  "lineno": null,
  "symbols_in_volume": [
   "numcodecs.gzip.GZip",
   "numpy.arange",
   "numpy.linspace",
   "numpy.random.choice",
   "numpy.random.normal",
   "numpy.random.randint"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_gzip.test_backwards_compatibility": {
  "lineno": 69,
  "symbols_in_volume": [
   "numcodecs.gzip.GZip.codec_id",
   "numcodecs.tests.common.check_backwards_compatibility"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_gzip.test_config": {
  "lineno": 50,
  "symbols_in_volume": [
   "numcodecs.gzip.GZip",
   "numcodecs.tests.common.check_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_gzip.test_encode_decode": {
  "lineno": 45,
  "symbols_in_volume": [
   "itertools.product",
   "numcodecs.tests.common.check_encode_decode"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_gzip.test_eq": {
  "lineno": 59,
  "symbols_in_volume": [
   "numcodecs.gzip.GZip"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_gzip.test_err_decode_object_buffer": {
  "lineno": 73,
  "symbols_in_volume": [
   "numcodecs.gzip.GZip",
   "numcodecs.tests.common.check_err_decode_object_buffer"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_gzip.test_err_encode_list": {
  "lineno": 81,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_gzip.test_err_encode_non_contiguous": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.arange",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_gzip.test_err_encode_object_buffer": {
  "lineno": 77,
  "symbols_in_volume": [
   "numcodecs.gzip.GZip",
   "numcodecs.tests.common.check_err_encode_object_buffer"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_gzip.test_err_out_too_small": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.empty_like",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_gzip.test_out_too_large": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_gzip.test_repr": {
  "lineno": 55,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_json": {
  "lineno": null,
  "symbols_in_volume": [
   "numcodecs.json.JSON",
   "numcodecs.tests.common.greetings",
   "numpy.arange",
   "numpy.array",
   "numpy.nan"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_json.test_backwards_compatibility": {
  "lineno": 52,
  "symbols_in_volume": [
   "numcodecs.json.JSON.codec_id",
   "numcodecs.tests.common.check_backwards_compatibility"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_json.test_config": {
  "lineno": 38,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_json.test_encode_decode": {
  "lineno": 33,
  "symbols_in_volume": [
   "itertools.product",
   "numcodecs.tests.common.check_encode_decode_array"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_json.test_non_numpy_inputs": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_json.test_repr": {
  "lineno": 43,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_lz4": {
  "lineno": null,
  "symbols_in_volume": [
   "numcodecs.lz4.LZ4",
   "numpy.arange",
   "numpy.linspace",
   "numpy.random.choice",
   "numpy.random.normal",
   "numpy.random.randint",
   "pytest.skip"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_lz4.test_backwards_compatibility": {
  "lineno": 69,
  "symbols_in_volume": [
   "numcodecs.lz4.LZ4.codec_id",
   "numcodecs.tests.common.check_backwards_compatibility"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_lz4.test_config": {
  "lineno": 59,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_lz4.test_encode_decode": {
  "lineno": 54,
  "symbols_in_volume": [
   "itertools.product",
   "numcodecs.tests.common.check_encode_decode"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_lz4.test_err_decode_object_buffer": {
  "lineno": 73,
  "symbols_in_volume": [
   "numcodecs.lz4.LZ4",
   "numcodecs.tests.common.check_err_decode_object_buffer"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_lz4.test_err_encode_object_buffer": {
  "lineno": 77,
  "symbols_in_volume": [
   "numcodecs.lz4.LZ4",
   "numcodecs.tests.common.check_err_encode_object_buffer"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_lz4.test_max_buffer_size": {
  "lineno": 81,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_max_buffer_size"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_lz4.test_repr": {
  "lineno": 64,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_lzma": {
  "lineno": null,
  "symbols_in_volume": [
   "numcodecs.lzma.LZMA",
   "numcodecs.lzma._lzma.FILTER_LZMA2",
   "numcodecs.lzma._lzma.FORMAT_RAW",
   "numpy.arange",
   "numpy.linspace",
   "numpy.random.choice",
   "numpy.random.normal",
   "numpy.random.randint",
   "unittest.SkipTest"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_lzma.test_backwards_compatibility": {
  "lineno": 65,
  "symbols_in_volume": [
   "numcodecs.lzma.LZMA.codec_id",
   "numcodecs.tests.common.check_backwards_compatibility"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_lzma.test_config": {
  "lineno": 56,
  "symbols_in_volume": [
   "numcodecs.lzma.LZMA",
   "numcodecs.lzma._lzma.CHECK_NONE",
   "numcodecs.lzma._lzma.FORMAT_XZ",
   "numcodecs.tests.common.check_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_lzma.test_encode_decode": {
  "lineno": 51,
  "symbols_in_volume": [
   "itertools.product",
   "numcodecs.tests.common.check_encode_decode"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_lzma.test_err_decode_object_buffer": {
  "lineno": 69,
  "symbols_in_volume": [
   "numcodecs.lzma.LZMA",
   "numcodecs.tests.common.check_err_decode_object_buffer"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_lzma.test_err_encode_list": {
  "lineno": 77,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_lzma.test_err_encode_non_contiguous": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.arange",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_lzma.test_err_encode_object_buffer": {
  "lineno": 73,
  "symbols_in_volume": [
   "numcodecs.lzma.LZMA",
   "numcodecs.tests.common.check_err_encode_object_buffer"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_lzma.test_repr": {
  "lineno": 61,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_msgpacks": {
  "lineno": null,
  "symbols_in_volume": [
   "numcodecs.tests.common.greetings",
   "numpy.arange",
   "numpy.array",
   "numpy.nan",
   "unittest.SkipTest"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_msgpacks.test_backwards_compatibility": {
  "lineno": 50,
  "symbols_in_volume": [
   "numcodecs.msgpacks.MsgPack",
   "numcodecs.tests.common.check_backwards_compatibility"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_msgpacks.test_bytes": {
  "lineno": 89,
  "symbols_in_volume": [
   "numcodecs.msgpacks.MsgPack",
   "numpy.array",
   "numpy.array_equal"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_msgpacks.test_config": {
  "lineno": 41,
  "symbols_in_volume": [
   "numcodecs.msgpacks.MsgPack",
   "numcodecs.tests.common.check_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_msgpacks.test_encode_decode": {
  "lineno": 36,
  "symbols_in_volume": [
   "numcodecs.msgpacks.MsgPack",
   "numcodecs.tests.common.check_encode_decode_array"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_msgpacks.test_encode_decode_shape_dtype_preserved": {
  "lineno": 81,
  "symbols_in_volume": [
   "numcodecs.msgpacks.MsgPack"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_msgpacks.test_non_numpy_inputs": {
  "lineno": 55,
  "symbols_in_volume": [
   "numcodecs.msgpacks.MsgPack",
   "numpy.array",
   "numpy.array_equal"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_msgpacks.test_repr": {
  "lineno": 45,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_packbits": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.randint"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_packbits.test_backwards_compatibility": {
  "lineno": 36,
  "symbols_in_volume": [
   "numcodecs.packbits.PackBits",
   "numcodecs.packbits.PackBits.codec_id",
   "numcodecs.tests.common.check_backwards_compatibility"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_packbits.test_config": {
  "lineno": 27,
  "symbols_in_volume": [
   "numcodecs.packbits.PackBits",
   "numcodecs.tests.common.check_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_packbits.test_encode_decode": {
  "lineno": 17,
  "symbols_in_volume": [
   "numcodecs.packbits.PackBits",
   "numcodecs.tests.common.check_encode_decode",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_packbits.test_repr": {
  "lineno": 32,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_pickles": {
  "lineno": null,
  "symbols_in_volume": [
   "numcodecs.pickles.Pickle",
   "numcodecs.tests.common.greetings",
   "numpy.arange",
   "numpy.array",
   "numpy.nan"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_pickles.test_backwards_compatibility": {
  "lineno": 46,
  "symbols_in_volume": [
   "numcodecs.pickles.Pickle.codec_id",
   "numcodecs.tests.common.check_backwards_compatibility",
   "pytest.mark.skipif",
   "sys.byteorder"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_pickles.test_config": {
  "lineno": 35,
  "symbols_in_volume": [
   "numcodecs.pickles.Pickle",
   "numcodecs.tests.common.check_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_pickles.test_encode_decode": {
  "lineno": 30,
  "symbols_in_volume": [
   "itertools.product",
   "numcodecs.tests.common.check_encode_decode_array"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_pickles.test_repr": {
  "lineno": 42,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_quantize": {
  "lineno": null,
  "symbols_in_volume": [
   "numcodecs.quantize.Quantize",
   "numpy.linspace",
   "numpy.random.normal"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_quantize.test_backwards_compatibility": {
  "lineno": 73,
  "symbols_in_volume": [
   "numcodecs.quantize.Quantize.codec_id",
   "numcodecs.tests.common.check_backwards_compatibility"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_quantize.test_config": {
  "lineno": 55,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_quantize.test_decode": {
  "lineno": 47,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_quantize.test_encode": {
  "lineno": 37,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_quantize.test_encode_decode": {
  "lineno": 32,
  "symbols_in_volume": [
   "itertools.product",
   "numcodecs.tests.common.check_encode_decode"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_quantize.test_errors": {
  "lineno": 64,
  "symbols_in_volume": [
   "numcodecs.quantize.Quantize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_quantize.test_repr": {
  "lineno": 60,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_registry": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.tests.test_registry.test_get_codec_argument": {
  "lineno": 12,
  "symbols_in_volume": [
   "numcodecs.registry.get_codec"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_registry.test_registry_errors": {
  "lineno": 7,
  "symbols_in_volume": [
   "numcodecs.registry.get_codec",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_vlen_array": {
  "lineno": null,
  "symbols_in_volume": [
   "numcodecs.vlen.VLenArray",
   "numpy.array",
   "unittest.SkipTest"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_vlen_array.test_backwards_compatibility": {
  "lineno": 53,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_backwards_compatibility",
   "numcodecs.vlen.VLenArray.codec_id"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_vlen_array.test_config": {
  "lineno": 44,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_config",
   "numcodecs.vlen.VLenArray"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_vlen_array.test_decode_errors": {
  "lineno": 65,
  "symbols_in_volume": [
   "numcodecs.vlen.VLenArray",
   "numpy.arange",
   "numpy.zeros",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_vlen_array.test_encode_decode": {
  "lineno": 38,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_encode_decode_array"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_vlen_array.test_encode_errors": {
  "lineno": 57,
  "symbols_in_volume": [
   "numcodecs.vlen.VLenArray",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_vlen_array.test_encode_none": {
  "lineno": 91,
  "symbols_in_volume": [
   "numcodecs.tests.common.assert_array_items_equal",
   "numcodecs.vlen.VLenArray",
   "numpy.array"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_vlen_array.test_repr": {
  "lineno": 49,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_vlen_bytes": {
  "lineno": null,
  "symbols_in_volume": [
   "numcodecs.tests.common.greetings",
   "numpy.array",
   "unittest.SkipTest"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_vlen_bytes.test_backwards_compatibility": {
  "lineno": 42,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_backwards_compatibility",
   "numcodecs.vlen.VLenBytes",
   "numcodecs.vlen.VLenBytes.codec_id"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_vlen_bytes.test_config": {
  "lineno": 33,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_config",
   "numcodecs.vlen.VLenBytes"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_vlen_bytes.test_decode_errors": {
  "lineno": 56,
  "symbols_in_volume": [
   "numcodecs.vlen.VLenBytes",
   "numpy.arange",
   "numpy.zeros",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_vlen_bytes.test_encode_decode": {
  "lineno": 27,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_encode_decode_array",
   "numcodecs.vlen.VLenBytes"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_vlen_bytes.test_encode_errors": {
  "lineno": 46,
  "symbols_in_volume": [
   "numcodecs.vlen.VLenBytes",
   "numpy.ones",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_vlen_bytes.test_encode_none": {
  "lineno": 82,
  "symbols_in_volume": [
   "numcodecs.tests.common.assert_array_items_equal",
   "numcodecs.vlen.VLenBytes",
   "numpy.array"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_vlen_bytes.test_repr": {
  "lineno": 38,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_vlen_utf8": {
  "lineno": null,
  "symbols_in_volume": [
   "numcodecs.tests.common.greetings",
   "numpy.array",
   "unittest.SkipTest"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_vlen_utf8.test_backwards_compatibility": {
  "lineno": 40,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_backwards_compatibility",
   "numcodecs.vlen.VLenUTF8",
   "numcodecs.vlen.VLenUTF8.codec_id"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_vlen_utf8.test_config": {
  "lineno": 31,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_config",
   "numcodecs.vlen.VLenUTF8"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_vlen_utf8.test_decode_errors": {
  "lineno": 54,
  "symbols_in_volume": [
   "numcodecs.vlen.VLenUTF8",
   "numpy.arange",
   "numpy.zeros",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_vlen_utf8.test_encode_decode": {
  "lineno": 25,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_encode_decode_array",
   "numcodecs.vlen.VLenUTF8"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_vlen_utf8.test_encode_errors": {
  "lineno": 44,
  "symbols_in_volume": [
   "numcodecs.vlen.VLenUTF8",
   "numpy.ones",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_vlen_utf8.test_encode_utf8": {
  "lineno": 80,
  "symbols_in_volume": [
   "numcodecs.tests.common.assert_array_items_equal",
   "numcodecs.vlen.VLenUTF8",
   "numpy.array"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_vlen_utf8.test_repr": {
  "lineno": 36,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_zlib": {
  "lineno": null,
  "symbols_in_volume": [
   "numcodecs.zlib.Zlib",
   "numpy.arange",
   "numpy.linspace",
   "numpy.random.choice",
   "numpy.random.normal",
   "numpy.random.randint"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_zlib.test_backwards_compatibility": {
  "lineno": 69,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_backwards_compatibility",
   "numcodecs.zlib.Zlib.codec_id"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_zlib.test_config": {
  "lineno": 50,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_config",
   "numcodecs.zlib.Zlib"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_zlib.test_encode_decode": {
  "lineno": 45,
  "symbols_in_volume": [
   "itertools.product",
   "numcodecs.tests.common.check_encode_decode"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_zlib.test_eq": {
  "lineno": 59,
  "symbols_in_volume": [
   "numcodecs.zlib.Zlib"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_zlib.test_err_decode_object_buffer": {
  "lineno": 73,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_err_decode_object_buffer",
   "numcodecs.zlib.Zlib"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_zlib.test_err_encode_list": {
  "lineno": 81,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_zlib.test_err_encode_non_contiguous": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.arange",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_zlib.test_err_encode_object_buffer": {
  "lineno": 77,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_err_encode_object_buffer",
   "numcodecs.zlib.Zlib"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_zlib.test_repr": {
  "lineno": 55,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_zstd": {
  "lineno": null,
  "symbols_in_volume": [
   "numcodecs.zstd.Zstd",
   "numpy.arange",
   "numpy.linspace",
   "numpy.random.choice",
   "numpy.random.normal",
   "numpy.random.randint",
   "pytest.skip"
  ],
  "type": "module"
 },
 "numcodecs.tests.test_zstd.test_backwards_compatibility": {
  "lineno": 67,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_backwards_compatibility",
   "numcodecs.zstd.Zstd.codec_id"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_zstd.test_config": {
  "lineno": 58,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_config"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_zstd.test_encode_decode": {
  "lineno": 53,
  "symbols_in_volume": [
   "itertools.product",
   "numcodecs.tests.common.check_encode_decode"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_zstd.test_err_decode_object_buffer": {
  "lineno": 71,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_err_decode_object_buffer",
   "numcodecs.zstd.Zstd"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_zstd.test_err_encode_object_buffer": {
  "lineno": 75,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_err_encode_object_buffer",
   "numcodecs.zstd.Zstd"
  ],
  "type": "function"
 },
 "numcodecs.tests.test_zstd.test_repr": {
  "lineno": 63,
  "symbols_in_volume": [
   "numcodecs.tests.common.check_repr"
  ],
  "type": "function"
 },
 "numcodecs.version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.zlib": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numcodecs.zlib.Zlib": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numcodecs.zlib.Zlib.__init__": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numcodecs.zlib.Zlib.decode": {
  "lineno": 32,
  "symbols_in_volume": [
   "zlib.decompress"
  ],
  "type": "function"
 },
 "numcodecs.zlib.Zlib.encode": {
  "lineno": 23,
  "symbols_in_volume": [
   "zlib.compress"
  ],
  "type": "function"
 }
}