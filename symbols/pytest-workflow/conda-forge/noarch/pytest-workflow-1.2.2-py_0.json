{
 "pytest_workflow": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pytest_workflow.content_tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pytest_workflow.content_tests.ContentTestCollector": {
  "lineno": 96,
  "symbols_in_volume": [
   "pytest.Collector"
  ],
  "type": "class"
 },
 "pytest_workflow.content_tests.ContentTestCollector.__init__": {
  "lineno": 97,
  "symbols_in_volume": [
   "pathlib.Path",
   "pytest.Collector",
   "typing.Optional"
  ],
  "type": "function"
 },
 "pytest_workflow.content_tests.ContentTestCollector.collect": {
  "lineno": 141,
  "symbols_in_volume": [
   "threading.Thread"
  ],
  "type": "function"
 },
 "pytest_workflow.content_tests.ContentTestCollector.find_strings": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_workflow.content_tests.ContentTestItem": {
  "lineno": 170,
  "symbols_in_volume": [
   "pytest.Item"
  ],
  "type": "class"
 },
 "pytest_workflow.content_tests.ContentTestItem.__init__": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_workflow.content_tests.ContentTestItem.repr_failure": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_workflow.content_tests.ContentTestItem.runtest": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_workflow.content_tests.check_content": {
  "lineno": 34,
  "symbols_in_volume": [
   "typing.Iterable",
   "typing.List",
   "typing.Set"
  ],
  "type": "function"
 },
 "pytest_workflow.content_tests.file_to_string_generator": {
  "lineno": 80,
  "symbols_in_volume": [
   "functools.partial",
   "gzip.open",
   "pathlib.Path",
   "typing.Iterable"
  ],
  "type": "function"
 },
 "pytest_workflow.file_tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pytest_workflow.file_tests.FileExists": {
  "lineno": 80,
  "symbols_in_volume": [
   "pytest.Item"
  ],
  "type": "class"
 },
 "pytest_workflow.file_tests.FileExists.__init__": {
  "lineno": 83,
  "symbols_in_volume": [
   "pathlib.Path",
   "pytest.Collector"
  ],
  "type": "function"
 },
 "pytest_workflow.file_tests.FileExists.repr_failure": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_workflow.file_tests.FileExists.runtest": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_workflow.file_tests.FileMd5": {
  "lineno": 118,
  "symbols_in_volume": [
   "pytest.Item"
  ],
  "type": "class"
 },
 "pytest_workflow.file_tests.FileMd5.__init__": {
  "lineno": 119,
  "symbols_in_volume": [
   "pathlib.Path",
   "pytest.Collector"
  ],
  "type": "function"
 },
 "pytest_workflow.file_tests.FileMd5.repr_failure": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_workflow.file_tests.FileMd5.runtest": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_workflow.file_tests.FileTestCollector": {
  "lineno": 28,
  "symbols_in_volume": [
   "pytest.Collector"
  ],
  "type": "class"
 },
 "pytest_workflow.file_tests.FileTestCollector.__init__": {
  "lineno": 31,
  "symbols_in_volume": [
   "pytest.Collector"
  ],
  "type": "function"
 },
 "pytest_workflow.file_tests.FileTestCollector.collect": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_workflow.file_tests.file_md5sum": {
  "lineno": 155,
  "symbols_in_volume": [
   "hashlib.md5",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "pytest_workflow.plugin": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pytest_workflow.plugin.ExitCodeTest": {
  "lineno": 399,
  "symbols_in_volume": [
   "pytest.Item"
  ],
  "type": "class"
 },
 "pytest_workflow.plugin.ExitCodeTest.__init__": {
  "lineno": 400,
  "symbols_in_volume": [
   "pytest.Collector"
  ],
  "type": "function"
 },
 "pytest_workflow.plugin.ExitCodeTest.repr_failure": {
  "lineno": 412,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_workflow.plugin.ExitCodeTest.runtest": {
  "lineno": 408,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_workflow.plugin.WorkflowTestsCollector": {
  "lineno": 291,
  "symbols_in_volume": [
   "pytest.Collector"
  ],
  "type": "class"
 },
 "pytest_workflow.plugin.WorkflowTestsCollector.__init__": {
  "lineno": 294,
  "symbols_in_volume": [
   "pytest.Collector"
  ],
  "type": "function"
 },
 "pytest_workflow.plugin.WorkflowTestsCollector.collect": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_workflow.plugin.WorkflowTestsCollector.queue_workflow": {
  "lineno": 301,
  "symbols_in_volume": [
   "pathlib.Path",
   "shutil.copytree",
   "shutil.rmtree",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pytest_workflow.plugin.YamlFile": {
  "lineno": 271,
  "symbols_in_volume": [
   "pytest.File"
  ],
  "type": "class"
 },
 "pytest_workflow.plugin.YamlFile.__init__": {
  "lineno": 276,
  "symbols_in_volume": [
   "pytest.Collector"
  ],
  "type": "function"
 },
 "pytest_workflow.plugin.YamlFile.collect": {
  "lineno": 281,
  "symbols_in_volume": [
   "yaml.safe_load"
  ],
  "type": "function"
 },
 "pytest_workflow.plugin.pytest_addoption": {
  "lineno": 40,
  "symbols_in_volume": [
   "_pytest.config.argparsing.Parser"
  ],
  "type": "function"
 },
 "pytest_workflow.plugin.pytest_collect_file": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_workflow.plugin.pytest_collection": {
  "lineno": 158,
  "symbols_in_volume": [
   "pytest.Session"
  ],
  "type": "function"
 },
 "pytest_workflow.plugin.pytest_collection_modifyitems": {
  "lineno": 171,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "pytest.Item",
   "pytest.mark.skip",
   "typing.List"
  ],
  "type": "function"
 },
 "pytest_workflow.plugin.pytest_collectstart": {
  "lineno": 207,
  "symbols_in_volume": [
   "pytest.Collector"
  ],
  "type": "function"
 },
 "pytest_workflow.plugin.pytest_configure": {
  "lineno": 97,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "pathlib.Path",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "pytest_workflow.plugin.pytest_runtestloop": {
  "lineno": 200,
  "symbols_in_volume": [
   "pytest.Session"
  ],
  "type": "function"
 },
 "pytest_workflow.plugin.pytest_sessionfinish": {
  "lineno": 227,
  "symbols_in_volume": [
   "pytest.Session"
  ],
  "type": "function"
 },
 "pytest_workflow.plugin.workflow_dir": {
  "lineno": 249,
  "symbols_in_volume": [
   "_pytest.fixtures.SubRequest",
   "pathlib.Path",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pytest_workflow.replace_whitespace": {
  "lineno": 25,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "pytest_workflow.rm_dirs": {
  "lineno": 35,
  "symbols_in_volume": [
   "pathlib.Path",
   "shutil.rmtree",
   "typing.List"
  ],
  "type": "function"
 },
 "pytest_workflow.schema": {
  "lineno": null,
  "symbols_in_volume": [
   "json.load",
   "pathlib.Path"
  ],
  "type": "module"
 },
 "pytest_workflow.schema.ContentTest": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_workflow.schema.ContentTest.__init__": {
  "lineno": 114,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "pytest_workflow.schema.ContentTest.from_dict": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_workflow.schema.FileTest": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_workflow.schema.FileTest.__init__": {
  "lineno": 138,
  "symbols_in_volume": [
   "pathlib.Path",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "pytest_workflow.schema.FileTest.from_dict": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_workflow.schema.WorkflowTest": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_workflow.schema.WorkflowTest.__init__": {
  "lineno": 181,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "pytest_workflow.schema.WorkflowTest.from_schema": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_workflow.schema.validate_schema": {
  "lineno": 41,
  "symbols_in_volume": [
   "jsonschema.ValidationError",
   "jsonschema.validate"
  ],
  "type": "function"
 },
 "pytest_workflow.schema.validate_schema.test_contains_concordance": {
  "lineno": 61,
  "symbols_in_volume": [
   "jsonschema.ValidationError"
  ],
  "type": "function"
 },
 "pytest_workflow.schema.workflow_tests_from_schema": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_workflow.workflow": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pytest_workflow.workflow.Workflow": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_workflow.workflow.Workflow.__init__": {
  "lineno": 37,
  "symbols_in_volume": [
   "pathlib.Path",
   "tempfile.NamedTemporaryFile",
   "threading.Lock",
   "typing.Optional"
  ],
  "type": "function"
 },
 "pytest_workflow.workflow.Workflow.exit_code": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_workflow.workflow.Workflow.run": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_workflow.workflow.Workflow.start": {
  "lineno": 75,
  "symbols_in_volume": [
   "shlex.split",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "pytest_workflow.workflow.Workflow.stderr": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_workflow.workflow.Workflow.stdout": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_workflow.workflow.Workflow.wait": {
  "lineno": 104,
  "symbols_in_volume": [
   "threading.main_thread",
   "time.sleep",
   "typing.Optional"
  ],
  "type": "function"
 },
 "pytest_workflow.workflow.WorkflowQueue": {
  "lineno": 164,
  "symbols_in_volume": [
   "queue.Queue"
  ],
  "type": "class"
 },
 "pytest_workflow.workflow.WorkflowQueue.__init__": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_workflow.workflow.WorkflowQueue.process": {
  "lineno": 184,
  "symbols_in_volume": [
   "threading.Thread"
  ],
  "type": "function"
 },
 "pytest_workflow.workflow.WorkflowQueue.put": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_workflow.workflow.WorkflowQueue.worker": {
  "lineno": 202,
  "symbols_in_volume": [
   "queue.Empty"
  ],
  "type": "function"
 }
}