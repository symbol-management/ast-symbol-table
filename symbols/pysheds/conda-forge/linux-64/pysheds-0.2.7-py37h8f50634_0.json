{
 "pysheds": {
  "data": {},
  "type": "module"
 },
 "pysheds.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pysheds.grid": {
  "data": {
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "pysheds.grid._OLD_PYPROJ",
    "pysheds.grid.pyproj"
   ]
  },
  "type": "module"
 },
 "pysheds.grid.Affine": {
  "data": {
   "shadows": "affine.Affine"
  },
  "type": "import"
 },
 "pysheds.grid.BaseViewFinder": {
  "data": {
   "shadows": "pysheds.view.BaseViewFinder"
  },
  "type": "import"
 },
 "pysheds.grid.Grid": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pysheds.grid.Grid.__init__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "affine.Affine",
    "numpy.ones",
    "pysheds.grid._pyproj_init",
    "pysheds.grid.pyproj"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._check_nodata_in": {
  "data": {
   "lineno": 2112,
   "symbols_in_volume": [
    "NameError",
    "getattr",
    "isinstance",
    "pysheds.view.Raster",
    "str"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._construct_matching": {
  "data": {
   "lineno": 2296
  },
  "type": "function"
 },
 "pysheds.grid.Grid._convert_grid_indices_crs": {
  "data": {
   "lineno": 2236,
   "symbols_in_volume": [
    "numpy.column_stack",
    "pysheds.grid._OLD_PYPROJ",
    "pysheds.grid.pyproj"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._d8_accumulation": {
  "data": {
   "lineno": 1215,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "numpy.add.at",
    "numpy.arange",
    "numpy.bincount",
    "numpy.in1d",
    "numpy.isnan",
    "numpy.max",
    "numpy.min",
    "numpy.min_scalar_type",
    "numpy.pad",
    "numpy.reshape",
    "numpy.subtract.at",
    "numpy.uint8",
    "numpy.unique",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._d8_catchment": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "d8_catchment_search",
    "int",
    "numpy.array",
    "numpy.place",
    "numpy.ravel_multi_index",
    "numpy.zeros",
    "pysheds.grid.sys"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._d8_catchment.d8_catchment_search": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "d8_catchment_search"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._d8_diff": {
  "data": {
   "lineno": 3247,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.subtract",
    "numpy.warnings.filterwarnings"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._d8_flow_distance": {
  "data": {
   "lineno": 1577,
   "symbols_in_volume": [
    "bool",
    "int",
    "numpy.arange",
    "numpy.isfinite",
    "numpy.isnan",
    "numpy.min_scalar_type",
    "numpy.ravel_multi_index",
    "numpy.zeros_like",
    "scipy.sparse.csgraph.shortest_path",
    "zip"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._d8_flowdir": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "RuntimeWarning",
    "abs",
    "list",
    "numpy.argmax",
    "numpy.array",
    "numpy.asarray",
    "numpy.dstack",
    "numpy.full",
    "numpy.meshgrid",
    "numpy.sqrt",
    "numpy.vstack",
    "numpy.warnings.filterwarnings",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._dinf_accumulation": {
  "data": {
   "lineno": 1308,
   "symbols_in_volume": [
    "RuntimeWarning",
    "bool",
    "float",
    "numpy.abs",
    "numpy.add.at",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.isnan",
    "numpy.max",
    "numpy.min",
    "numpy.min_scalar_type",
    "numpy.pad",
    "numpy.pi",
    "numpy.reshape",
    "numpy.subtract.at",
    "numpy.unique",
    "numpy.warnings.filterwarnings",
    "numpy.zeros",
    "numpy.zeros_like",
    "pandas.Series",
    "range"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._dinf_catchment": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": [
    "RuntimeWarning",
    "dinf_catchment_search",
    "numpy.arange",
    "numpy.array",
    "numpy.bool",
    "numpy.full",
    "numpy.min_scalar_type",
    "numpy.pi",
    "numpy.ravel_multi_index",
    "numpy.warnings.filterwarnings",
    "numpy.zeros",
    "pysheds.grid.sys"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._dinf_catchment.dinf_catchment_search": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": [
    "dinf_catchment_search"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._dinf_flow_distance": {
  "data": {
   "lineno": 1625,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeWarning",
    "bool",
    "int",
    "isinstance",
    "list",
    "numpy.arange",
    "numpy.isfinite",
    "numpy.isnan",
    "numpy.min_scalar_type",
    "numpy.ndarray",
    "numpy.pi",
    "numpy.ravel_multi_index",
    "numpy.warnings.filterwarnings",
    "numpy.zeros_like",
    "scipy.sparse.csgraph.shortest_path",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._dinf_flowdir": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "RuntimeWarning",
    "abs",
    "float",
    "numpy.arange",
    "numpy.argmax",
    "numpy.array",
    "numpy.asarray",
    "numpy.dstack",
    "numpy.full",
    "numpy.max",
    "numpy.meshgrid",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.vstack",
    "numpy.warnings.filterwarnings",
    "numpy.zeros",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._drainage_gradient": {
  "data": {
   "lineno": 3220,
   "symbols_in_volume": [
    "ImportError",
    "int",
    "numpy.arange",
    "numpy.bool",
    "numpy.zeros",
    "numpy.zeros_like",
    "pysheds.grid._HAS_SKIMAGE"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._dy_dx": {
  "data": {
   "lineno": 2220,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._flatten_fdir": {
  "data": {
   "lineno": 2259,
   "symbols_in_volume": [
    "dict",
    "pysheds.grid.copy",
    "zip"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._generate_grid_props": {
  "data": {
   "lineno": 2192,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._get_cycles": {
  "data": {
   "lineno": 1450,
   "symbols_in_volume": [
    "len",
    "numpy.where",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._get_high_edge_cells": {
  "data": {
   "lineno": 3192,
   "symbols_in_volume": [
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._get_low_edge_cells": {
  "data": {
   "lineno": 3201,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._get_nondraining_flats": {
  "data": {
   "lineno": 3483,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.bool",
    "numpy.isnan",
    "numpy.nan",
    "numpy.where",
    "numpy.zeros",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._grad_from_higher": {
  "data": {
   "lineno": 3126,
   "symbols_in_volume": [
    "numpy.bincount",
    "numpy.unique",
    "numpy.where",
    "numpy.zeros",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._grad_towards_lower": {
  "data": {
   "lineno": 3164,
   "symbols_in_volume": [
    "numpy.bincount",
    "numpy.unique",
    "numpy.where",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._input_handler": {
  "data": {
   "lineno": 2129,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "getattr",
    "hasattr",
    "isinstance",
    "numpy.ndarray",
    "pysheds.view.Raster",
    "pysheds.view.RegularViewFinder",
    "str"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._inside_indices": {
  "data": {
   "lineno": 3087,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.delete",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._num_cycles": {
  "data": {
   "lineno": 1441,
   "symbols_in_volume": [
    "numpy.min_scalar_type",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._output_handler": {
  "data": {
   "lineno": 2182,
   "symbols_in_volume": [
    "pysheds.view.Raster",
    "pysheds.view.RegularViewFinder",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._pop_rim": {
  "data": {
   "lineno": 2201
  },
  "type": "function"
 },
 "pysheds.grid.Grid._remove_dinf_cycles": {
  "data": {
   "lineno": 1470,
   "symbols_in_volume": [
    "numpy.where",
    "range",
    "reversed"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._replace_rim": {
  "data": {
   "lineno": 2213
  },
  "type": "function"
 },
 "pysheds.grid.Grid._select_surround": {
  "data": {
   "lineno": 3048
  },
  "type": "function"
 },
 "pysheds.grid.Grid._select_surround_ravel": {
  "data": {
   "lineno": 3073,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._set_dirmap": {
  "data": {
   "lineno": 3099,
   "symbols_in_volume": [
    "AssertionError",
    "KeyError",
    "ValueError",
    "getattr",
    "isinstance",
    "len",
    "pysheds.view.Raster",
    "str"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid._unflatten_fdir": {
  "data": {
   "lineno": 2279,
   "symbols_in_volume": [
    "dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.accumulation": {
  "data": {
   "lineno": 1139
  },
  "type": "function"
 },
 "pysheds.grid.Grid.add_gridded_data": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "TypeError",
    "affine.Affine",
    "dict",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "numpy.bool",
    "numpy.ndarray",
    "numpy.ones",
    "pysheds.grid.pyproj",
    "pysheds.view.Raster",
    "pysheds.view.RegularViewFinder",
    "setattr",
    "str",
    "sum",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.affine": {
  "data": {
   "lineno": 2397,
   "symbols_in_volume": [
    "affine.Affine",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.angle_to_d8": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.isnan",
    "numpy.pi",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.bbox": {
  "data": {
   "lineno": 2366,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.catchment": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.cell_area": {
  "data": {
   "lineno": 1856,
   "symbols_in_volume": [
    "getattr",
    "numpy.dstack",
    "numpy.gradient",
    "numpy.meshgrid",
    "numpy.sqrt",
    "numpy.vstack",
    "pysheds.grid._pyproj_crs",
    "pysheds.grid._pyproj_crs_is_geographic",
    "pysheds.grid.warnings"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.cell_dh": {
  "data": {
   "lineno": 1968,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "bool",
    "numpy.arange",
    "numpy.float64",
    "numpy.isnan",
    "numpy.min_scalar_type",
    "numpy.nan",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.cell_distances": {
  "data": {
   "lineno": 1896,
   "symbols_in_volume": [
    "NotImplementedError",
    "enumerate",
    "getattr",
    "numpy.dstack",
    "numpy.gradient",
    "numpy.meshgrid",
    "numpy.sqrt",
    "numpy.vstack",
    "numpy.zeros",
    "pysheds.grid._pyproj_crs",
    "pysheds.grid._pyproj_crs_is_geographic",
    "pysheds.grid.warnings"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.cell_slopes": {
  "data": {
   "lineno": 2052,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeWarning",
    "numpy.nan",
    "numpy.warnings.filterwarnings",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.cellsize": {
  "data": {
   "lineno": 2402,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.clip_to": {
  "data": {
   "lineno": 2304,
   "symbols_in_volume": [
    "affine.Affine",
    "bool",
    "getattr",
    "int",
    "numpy.around",
    "numpy.isnan",
    "numpy.nonzero",
    "numpy.ones",
    "numpy.pad",
    "numpy.testing.assert_almost_equal",
    "round"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.compute_hand": {
  "data": {
   "lineno": 1699,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.bool",
    "numpy.flatnonzero",
    "numpy.int",
    "numpy.nan",
    "numpy.ones",
    "numpy.pi",
    "numpy.tile",
    "numpy.unique",
    "numpy.where",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.crs": {
  "data": {
   "lineno": 2388,
   "symbols_in_volume": [
    "isinstance",
    "pysheds.grid.pyproj"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.defaults": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "affine.Affine",
    "property",
    "pysheds.grid._pyproj_init",
    "pysheds.grid.pyproj"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.detect_cycles": {
  "data": {
   "lineno": 2936,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.isnan",
    "numpy.min_scalar_type",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.detect_depressions": {
  "data": {
   "lineno": 3429,
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "NameError",
    "getattr",
    "isinstance",
    "numpy.bool",
    "numpy.nan",
    "numpy.zeros",
    "pysheds.grid._HAS_SKIMAGE",
    "str"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.detect_flats": {
  "data": {
   "lineno": 2892,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.bool",
    "numpy.isnan",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.detect_pits": {
  "data": {
   "lineno": 2848,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.bool",
    "numpy.isnan",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.extent": {
  "data": {
   "lineno": 2378,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.extract_profiles": {
  "data": {
   "lineno": 2582,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "len",
    "numpy.arange",
    "numpy.bincount",
    "numpy.column_stack",
    "numpy.flatnonzero",
    "numpy.in1d",
    "numpy.min_scalar_type",
    "numpy.uint8",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.extract_river_network": {
  "data": {
   "lineno": 2682,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "_get_spurious_indexes",
    "enumerate",
    "len",
    "numpy.arange",
    "numpy.argmax",
    "numpy.argsort",
    "numpy.asarray",
    "numpy.asscalar",
    "numpy.bincount",
    "numpy.dstack",
    "numpy.in1d",
    "numpy.isfinite",
    "numpy.meshgrid",
    "numpy.min_scalar_type",
    "numpy.ravel_multi_index",
    "numpy.sort",
    "numpy.uint8",
    "numpy.unique",
    "numpy.unravel_index",
    "numpy.vstack",
    "numpy.where",
    "pandas.Series",
    "pysheds.grid.geojson",
    "scipy.sparse.csgraph.connected_components",
    "scipy.sparse.csgraph.shortest_path",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.extract_river_network._get_spurious_indexes": {
  "data": {
   "lineno": 2741,
   "symbols_in_volume": [
    "int",
    "numpy.asarray",
    "numpy.in1d",
    "numpy.where",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.facet_flow": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arctan2",
    "numpy.hypot",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.fill_depressions": {
  "data": {
   "lineno": 3319,
   "symbols_in_volume": [
    "ImportError",
    "numpy.bool",
    "numpy.copy",
    "numpy.isnan",
    "numpy.ones",
    "pysheds.grid._HAS_SKIMAGE"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.fill_pits": {
  "data": {
   "lineno": 2996,
   "symbols_in_volume": [
    "int",
    "numpy.abs",
    "numpy.arange",
    "numpy.argmin",
    "numpy.array",
    "numpy.bool",
    "numpy.count_nonzero",
    "numpy.isnan",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.flow_distance": {
  "data": {
   "lineno": 1496,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "pysheds.grid._HAS_SCIPY"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.flowdir": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.isnan",
    "numpy.nan",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.from_ascii": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.from_raster": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.grid_indices": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.vstack",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.nearest_cell": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "TypeError",
    "affine.Affine",
    "int",
    "isinstance",
    "numpy.around"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.polygonize": {
  "data": {
   "lineno": 3517,
   "symbols_in_volume": [
    "ImportError",
    "numpy.uint8",
    "pysheds.grid._HAS_RASTERIO",
    "pysheds.grid.rasterio"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.rasterize": {
  "data": {
   "lineno": 3547,
   "symbols_in_volume": [
    "ImportError",
    "pysheds.grid._HAS_RASTERIO",
    "pysheds.grid.rasterio"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.read_ascii": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "affine.Affine",
    "int",
    "numpy.loadtxt",
    "open",
    "pysheds.grid._pyproj_init",
    "pysheds.grid.ast",
    "pysheds.grid.pyproj"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.read_raster": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "ImportError",
    "len",
    "numpy.ma.filled",
    "numpy.squeeze",
    "pysheds.grid._HAS_RASTERIO",
    "pysheds.grid._OLD_PYPROJ",
    "pysheds.grid.pyproj",
    "pysheds.grid.rasterio"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.resize": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "UserWarning",
    "isinstance",
    "numpy.nan",
    "numpy.warnings.filterwarnings",
    "str"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.resolve_flats": {
  "data": {
   "lineno": 3256,
   "symbols_in_volume": [
    "RuntimeWarning",
    "float",
    "int",
    "numpy.abs",
    "numpy.array",
    "numpy.float",
    "numpy.inf",
    "numpy.isnan",
    "numpy.nan",
    "numpy.nanmin",
    "numpy.warnings.filterwarnings",
    "numpy.where",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.set_bbox": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "affine.Affine",
    "int",
    "numpy.around",
    "numpy.bool",
    "numpy.ones",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.set_indices": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "affine.Affine",
    "all",
    "int",
    "isinstance",
    "numpy.asarray",
    "numpy.bool",
    "numpy.ones",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.set_nodata": {
  "data": {
   "lineno": 2409,
   "symbols_in_volume": [
    "getattr",
    "numpy.isnan",
    "numpy.place"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.size": {
  "data": {
   "lineno": 2374,
   "symbols_in_volume": [
    "numpy.prod",
    "property"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.snap_to_mask": {
  "data": {
   "lineno": 3590,
   "symbols_in_volume": [
    "ImportError",
    "getattr",
    "isinstance",
    "numpy.column_stack",
    "numpy.unravel_index",
    "numpy.vstack",
    "numpy.where",
    "pysheds.grid._HAS_SCIPY",
    "pysheds.view.Raster"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.to_ascii": {
  "data": {
   "lineno": 2432,
   "symbols_in_volume": [
    "getattr",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.savetxt"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.to_raster": {
  "data": {
   "lineno": 2506,
   "symbols_in_volume": [
    "getattr",
    "numpy.asarray",
    "pysheds.grid.rasterio"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.Grid.view": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "isinstance",
    "issubclass",
    "max",
    "numpy.column_stack",
    "numpy.dtype",
    "numpy.float32",
    "numpy.floating",
    "numpy.min_scalar_type",
    "numpy.ndarray",
    "numpy.place",
    "pysheds.grid._pyproj_crs",
    "pysheds.grid._pyproj_crs_is_geographic",
    "pysheds.grid.pyproj",
    "pysheds.view.BaseViewFinder",
    "pysheds.view.IrregularGridViewer._view_griddata",
    "pysheds.view.IrregularViewFinder",
    "pysheds.view.Raster",
    "pysheds.view.RegularGridViewer._view_affine",
    "pysheds.view.RegularGridViewer._view_rectbivariate",
    "pysheds.view.RegularGridViewer._view_rectspherebivariate",
    "pysheds.view.RegularViewFinder",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pysheds.grid.IrregularGridViewer": {
  "data": {
   "shadows": "pysheds.view.IrregularGridViewer"
  },
  "type": "import"
 },
 "pysheds.grid.IrregularViewFinder": {
  "data": {
   "shadows": "pysheds.view.IrregularViewFinder"
  },
  "type": "import"
 },
 "pysheds.grid.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pysheds.grid.Raster": {
  "data": {
   "shadows": "pysheds.view.Raster"
  },
  "type": "import"
 },
 "pysheds.grid.RegularGridViewer": {
  "data": {
   "shadows": "pysheds.view.RegularGridViewer"
  },
  "type": "import"
 },
 "pysheds.grid.RegularViewFinder": {
  "data": {
   "shadows": "pysheds.view.RegularViewFinder"
  },
  "type": "import"
 },
 "pysheds.grid._HAS_RASTERIO": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pysheds.grid._HAS_SCIPY": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pysheds.grid._HAS_SKIMAGE": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pysheds.grid._OLD_PYPROJ": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pysheds.grid._pyproj_crs": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pysheds.grid._pyproj_crs_is_geographic": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pysheds.grid._pyproj_init": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pysheds.grid.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "pysheds.grid.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pysheds.grid.csgraph": {
  "data": {
   "shadows": "scipy.sparse.csgraph"
  },
  "type": "import"
 },
 "pysheds.grid.geojson": {
  "data": {
   "shadows": "geojson"
  },
  "type": "import"
 },
 "pysheds.grid.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pysheds.grid.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pysheds.grid.pyproj": {
  "data": {
   "shadows": "pyproj"
  },
  "type": "import"
 },
 "pysheds.grid.rasterio": {
  "data": {
   "shadows": "rasterio"
  },
  "type": "import"
 },
 "pysheds.grid.rasterio.features": {
  "data": {
   "shadows": "rasterio.features"
  },
  "type": "import"
 },
 "pysheds.grid.scipy.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "pysheds.grid.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "pysheds.grid.scipy.spatial": {
  "data": {
   "shadows": "scipy.spatial"
  },
  "type": "import"
 },
 "pysheds.grid.skimage.measure": {
  "data": {
   "shadows": "skimage.measure"
  },
  "type": "import"
 },
 "pysheds.grid.skimage.morphology": {
  "data": {
   "shadows": "skimage.morphology"
  },
  "type": "import"
 },
 "pysheds.grid.skimage.transform": {
  "data": {
   "shadows": "skimage.transform"
  },
  "type": "import"
 },
 "pysheds.grid.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pysheds.grid.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pysheds.rfsm": {
  "data": {},
  "type": "module"
 },
 "pysheds.rfsm.Grid": {
  "data": {
   "shadows": "pysheds.grid.Grid"
  },
  "type": "import"
 },
 "pysheds.rfsm.Node": {
  "data": {
   "lineno": 592
  },
  "type": "class"
 },
 "pysheds.rfsm.Node.__init__": {
  "data": {
   "lineno": 593
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "pysheds.rfsm.RFSM.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "Node",
    "abs",
    "isinstance",
    "numpy.inf",
    "pysheds.view.Raster"
   ]
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.accumulate": {
  "data": {
   "lineno": 416
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.check_full": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "bool",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.check_overflow": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "bool",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.compute_depths": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.compute_runoff": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "int",
    "numpy.column_stack",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.compute_vol": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "abs",
    "itertools.chain.from_iterable",
    "itertools.combinations",
    "list",
    "numpy.asscalar",
    "numpy.isin"
   ]
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.compute_waterlevel": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.construct_topology": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.create_tree": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "Node",
    "dict",
    "int",
    "len",
    "numpy.asscalar",
    "pandas.DataFrame",
    "pandas.Series",
    "range",
    "set",
    "setattr",
    "zip"
   ]
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.enumerate_leaves": {
  "data": {
   "lineno": 357
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.find_connections": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "bool",
    "dict",
    "itertools.combinations",
    "len",
    "numpy.flatnonzero",
    "numpy.zeros",
    "pysheds.grid.Grid._select_surround_ravel",
    "range",
    "set",
    "sorted",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.find_depressions": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "bool",
    "enumerate",
    "itertools.combinations",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.copy",
    "numpy.ones",
    "numpy.where",
    "numpy.zeros",
    "range",
    "scipy.ndimage.label"
   ]
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.find_drop": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.arange",
    "numpy.column_stack",
    "numpy.concatenate",
    "numpy.repeat",
    "numpy.where",
    "pandas.DataFrame",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.find_hierarchy": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "bool",
    "dict",
    "len",
    "numpy.zeros",
    "pandas.Series",
    "range"
   ]
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.find_watersheds": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "len",
    "numpy.where",
    "range"
   ]
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.get_root": {
  "data": {
   "lineno": 351
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.initialize_volumes": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.map_nodes": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "op"
   ]
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.node_full": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.asscalar"
   ]
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.remove_volume": {
  "data": {
   "lineno": 509
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.reset_volumes": {
  "data": {
   "lineno": 506
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.set_cumulative_capacities": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "abs",
    "itertools.chain.from_iterable",
    "itertools.combinations",
    "list",
    "numpy.asscalar",
    "numpy.isin"
   ]
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.set_marginal_capacities": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.set_node_capacities": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.set_node_transfers": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "list",
    "numpy.column_stack",
    "pandas.DataFrame",
    "pysheds.grid.Grid._select_surround_ravel"
   ]
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.set_singleton_transfer": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.show_tree": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "print_tree"
   ]
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.show_tree.print_pop": {
  "data": {
   "lineno": 527
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.show_tree.print_push": {
  "data": {
   "lineno": 522
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.show_tree.print_tree": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "chr",
    "print_pop",
    "print_push",
    "print_tree"
   ]
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.show_vol": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "print_tree"
   ]
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.show_vol.print_pop": {
  "data": {
   "lineno": 565
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.show_vol.print_push": {
  "data": {
   "lineno": 560
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.show_vol.print_tree": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "chr",
    "print_pop",
    "print_push",
    "print_tree"
   ]
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.spill": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.spread_volumes": {
  "data": {
   "lineno": 437
  },
  "type": "function"
 },
 "pysheds.rfsm.RFSM.volume_to_level": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "itertools.chain.from_iterable",
    "itertools.combinations",
    "list",
    "numpy.flatnonzero",
    "numpy.isin",
    "numpy.nanmin",
    "scipy.optimize.bisect"
   ]
  },
  "type": "function"
 },
 "pysheds.rfsm.Raster": {
  "data": {
   "shadows": "pysheds.view.Raster"
  },
  "type": "import"
 },
 "pysheds.rfsm.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "pysheds.rfsm.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "pysheds.rfsm.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "pysheds.rfsm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pysheds.rfsm.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "pysheds.rfsm.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pysheds.rfsm.skimage.morphology": {
  "data": {
   "shadows": "skimage.morphology"
  },
  "type": "import"
 },
 "pysheds.view": {
  "data": {
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "pysheds.view._OLD_PYPROJ",
    "pysheds.view.pyproj"
   ]
  },
  "type": "module"
 },
 "pysheds.view.Affine": {
  "data": {
   "shadows": "affine.Affine"
  },
  "type": "import"
 },
 "pysheds.view.BaseViewFinder": {
  "data": {
   "lineno": 79
  },
  "type": "class"
 },
 "pysheds.view.BaseViewFinder.__init__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "bool",
    "numpy.nan",
    "numpy.ones",
    "pysheds.view._pyproj_init",
    "pysheds.view.pyproj"
   ]
  },
  "type": "function"
 },
 "pysheds.view.BaseViewFinder.crs": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "pysheds.view.BaseViewFinder.mask": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "pysheds.view.BaseViewFinder.nodata": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "pysheds.view.BaseViewFinder.shape": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "pysheds.view.BaseViewFinder.size": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.prod",
    "property"
   ]
  },
  "type": "function"
 },
 "pysheds.view.IrregularGridViewer": {
  "data": {
   "lineno": 417
  },
  "type": "class"
 },
 "pysheds.view.IrregularGridViewer.__init__": {
  "data": {
   "lineno": 418
  },
  "type": "function"
 },
 "pysheds.view.IrregularGridViewer._view_griddata": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "classmethod",
    "numpy.full",
    "numpy.sqrt",
    "scipy.interpolate.griddata"
   ]
  },
  "type": "function"
 },
 "pysheds.view.IrregularGridViewer._view_kd_2d": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "classmethod",
    "numpy.full",
    "numpy.sqrt",
    "scipy.spatial.cKDTree"
   ]
  },
  "type": "function"
 },
 "pysheds.view.IrregularViewFinder": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "pysheds.view.BaseViewFinder"
   ]
  },
  "type": "class"
 },
 "pysheds.view.IrregularViewFinder.__init__": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "pysheds.view._pyproj_init",
    "pysheds.view.pyproj",
    "super"
   ]
  },
  "type": "function"
 },
 "pysheds.view.IrregularViewFinder.bbox": {
  "data": {
   "lineno": 249
  },
  "type": "function"
 },
 "pysheds.view.IrregularViewFinder.coords": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "pysheds.view.IrregularViewFinder.extent": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pysheds.view.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pysheds.view.Raster": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "pysheds.view.Raster.__array_finalize__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pysheds.view.Raster.__new__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ValueError",
    "issubclass",
    "numpy.asarray",
    "type"
   ]
  },
  "type": "function"
 },
 "pysheds.view.Raster.affine": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pysheds.view.Raster.bbox": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pysheds.view.Raster.cellsize": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pysheds.view.Raster.coords": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pysheds.view.Raster.crs": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pysheds.view.Raster.dy_dx": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pysheds.view.Raster.extent": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pysheds.view.Raster.mask": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pysheds.view.Raster.nodata": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "pysheds.view.Raster.properties": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pysheds.view.Raster.view_shape": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pysheds.view.Raster.view_size": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.prod",
    "property"
   ]
  },
  "type": "function"
 },
 "pysheds.view.RegularGridViewer": {
  "data": {
   "lineno": 258
  },
  "type": "class"
 },
 "pysheds.view.RegularGridViewer.__init__": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "pysheds.view.RegularGridViewer._view_affine": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "numpy.abs",
    "numpy.around",
    "numpy.full",
    "numpy.ix_",
    "numpy.vstack",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pysheds.view.RegularGridViewer._view_df": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pysheds.view.RegularGridViewer._view_kd": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "classmethod",
    "numpy.full",
    "numpy.ix_",
    "scipy.spatial.cKDTree"
   ]
  },
  "type": "function"
 },
 "pysheds.view.RegularGridViewer._view_kd_2d": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "classmethod",
    "numpy.dstack",
    "numpy.full",
    "numpy.ix_",
    "numpy.meshgrid",
    "numpy.sqrt",
    "numpy.vstack",
    "scipy.spatial.cKDTree"
   ]
  },
  "type": "function"
 },
 "pysheds.view.RegularGridViewer._view_rectbivariate": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "classmethod",
    "numpy.dstack",
    "numpy.ix_",
    "numpy.meshgrid",
    "numpy.vstack",
    "scipy.interpolate.RectBivariateSpline"
   ]
  },
  "type": "function"
 },
 "pysheds.view.RegularGridViewer._view_rectspherebivariate": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "classmethod",
    "numpy.dstack",
    "numpy.ix_",
    "numpy.meshgrid",
    "numpy.pi",
    "numpy.radians",
    "numpy.sqrt",
    "numpy.vstack",
    "scipy.interpolate.RectBivariateSpline"
   ]
  },
  "type": "function"
 },
 "pysheds.view.RegularViewFinder": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "pysheds.view.BaseViewFinder"
   ]
  },
  "type": "class"
 },
 "pysheds.view.RegularViewFinder.__init__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "affine.Affine",
    "pysheds.view._pyproj_init",
    "pysheds.view.pyproj",
    "super"
   ]
  },
  "type": "function"
 },
 "pysheds.view.RegularViewFinder.affine": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "affine.Affine",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pysheds.view.RegularViewFinder.bbox": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pysheds.view.RegularViewFinder.coords": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "pysheds.view.RegularViewFinder.dy_dx": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pysheds.view.RegularViewFinder.extent": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pysheds.view.RegularViewFinder.grid_indices": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.vstack",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pysheds.view.RegularViewFinder.move_window": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "bool",
    "max",
    "min",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "pysheds.view.RegularViewFinder.properties": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pysheds.view._OLD_PYPROJ": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pysheds.view._pyproj_init": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pysheds.view.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "pysheds.view.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pysheds.view.pyproj": {
  "data": {
   "shadows": "pyproj"
  },
  "type": "import"
 },
 "pysheds.view.spatial": {
  "data": {
   "shadows": "scipy.spatial"
  },
  "type": "import"
 }
}