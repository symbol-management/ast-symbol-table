{
 "colorlog": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "colorlog.colorlog": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "colorlog.colorlog.ColoredFormatter": {
  "lineno": 60,
  "symbols_in_volume": [
   "logging.Formatter"
  ],
  "type": "class"
 },
 "colorlog.colorlog.ColoredFormatter.__init__": {
  "lineno": 67,
  "symbols_in_volume": [
   "logging.Formatter.__init__",
   "sys.version_info"
  ],
  "type": "function"
 },
 "colorlog.colorlog.ColoredFormatter.color": {
  "lineno": 111,
  "symbols_in_volume": [
   "colorlog.escape_codes.parse_colors"
  ],
  "type": "function"
 },
 "colorlog.colorlog.ColoredFormatter.format": {
  "lineno": 115,
  "symbols_in_volume": [
   "colorlog.escape_codes.escape_codes",
   "logging.Formatter.format",
   "sys.version_info"
  ],
  "type": "function"
 },
 "colorlog.colorlog.ColoredRecord": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "colorlog.colorlog.ColoredRecord.__dict": {
  "lineno": 39,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "class"
 },
 "colorlog.colorlog.ColoredRecord.__dict.__missing__": {
  "lineno": 40,
  "symbols_in_volume": [
   "colorlog.escape_codes.parse_colors"
  ],
  "type": "function"
 },
 "colorlog.colorlog.ColoredRecord.__getattr__": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "colorlog.colorlog.ColoredRecord.__init__": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "colorlog.escape_codes": {
  "lineno": null,
  "symbols_in_volume": [
   "colorama.init"
  ],
  "type": "module"
 },
 "colorlog.escape_codes.esc": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "colorlog.escape_codes.parse_colors": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "colorlog.logging": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.StreamHandler",
   "logging.critical",
   "logging.debug",
   "logging.error",
   "logging.exception",
   "logging.getLogger",
   "logging.info",
   "logging.log",
   "logging.root",
   "logging.warning"
  ],
  "type": "module"
 },
 "colorlog.logging.basicConfig": {
  "lineno": 13,
  "symbols_in_volume": [
   "colorlog.colorlog.ColoredFormatter",
   "logging._acquireLock",
   "logging._releaseLock",
   "logging.basicConfig",
   "logging.root.handlers"
  ],
  "type": "function"
 },
 "colorlog.logging.ensure_configured": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "colorlog.logging.ensure_configured.wrapper": {
  "lineno": 29,
  "symbols_in_volume": [
   "functools.wraps",
   "logging.root.handlers"
  ],
  "type": "function"
 },
 "colorlog.tests.conftest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "colorlog.tests.conftest.assert_log_message": {
  "lineno": 14,
  "symbols_in_volume": [
   "sys.stderr"
  ],
  "type": "function"
 },
 "colorlog.tests.conftest.create_and_test_logger": {
  "lineno": 51,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "colorlog.tests.conftest.create_and_test_logger.function": {
  "lineno": 53,
  "symbols_in_volume": [
   "colorlog.ColoredFormatter",
   "inspect.stack",
   "logging.DEBUG",
   "logging.StreamHandler",
   "logging.getLogger"
  ],
  "type": "function"
 },
 "colorlog.tests.conftest.reset_loggers": {
  "lineno": 25,
  "symbols_in_volume": [
   "logging.DEBUG",
   "logging.root.handlers",
   "logging.root.setLevel",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "colorlog.tests.conftest.test_logger": {
  "lineno": 31,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "colorlog.tests.conftest.test_logger.function": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "colorlog.tests.test_colorlog": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "colorlog.tests.test_colorlog.test_braces_style": {
  "lineno": 72,
  "symbols_in_volume": [
   "pytest.mark.skipif",
   "sys.version_info"
  ],
  "type": "function"
 },
 "colorlog.tests.test_colorlog.test_colored_formatter": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "colorlog.tests.test_colorlog.test_custom_colors": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "colorlog.tests.test_colorlog.test_no_reset": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "colorlog.tests.test_colorlog.test_reset": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "colorlog.tests.test_colorlog.test_secondary_colors": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "colorlog.tests.test_colorlog.test_some_secondary_colors": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "colorlog.tests.test_colorlog.test_template_style": {
  "lineno": 78,
  "symbols_in_volume": [
   "pytest.mark.skipif",
   "sys.version_info"
  ],
  "type": "function"
 },
 "colorlog.tests.test_config": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "colorlog.tests.test_config.path": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "colorlog.tests.test_config.test_build_from_dictionary": {
  "lineno": 21,
  "symbols_in_volume": [
   "logging.config.dictConfig",
   "logging.getLogger",
   "pytest.mark.skipif",
   "sys.version_info"
  ],
  "type": "function"
 },
 "colorlog.tests.test_config.test_build_from_file": {
  "lineno": 16,
  "symbols_in_volume": [
   "logging.config.fileConfig",
   "logging.getLogger"
  ],
  "type": "function"
 },
 "colorlog.tests.test_escape_codes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "colorlog.tests.test_escape_codes.test_bg_color": {
  "lineno": 24,
  "symbols_in_volume": [
   "colorlog.escape_codes.escape_codes"
  ],
  "type": "function"
 },
 "colorlog.tests.test_escape_codes.test_bold_color": {
  "lineno": 16,
  "symbols_in_volume": [
   "colorlog.escape_codes.escape_codes"
  ],
  "type": "function"
 },
 "colorlog.tests.test_escape_codes.test_esc": {
  "lineno": 8,
  "symbols_in_volume": [
   "colorlog.escape_codes.esc"
  ],
  "type": "function"
 },
 "colorlog.tests.test_escape_codes.test_fg_color": {
  "lineno": 20,
  "symbols_in_volume": [
   "colorlog.escape_codes.escape_codes"
  ],
  "type": "function"
 },
 "colorlog.tests.test_escape_codes.test_parse_colors": {
  "lineno": 45,
  "symbols_in_volume": [
   "colorlog.escape_codes.parse_colors"
  ],
  "type": "function"
 },
 "colorlog.tests.test_escape_codes.test_parse_invalid_colors": {
  "lineno": 53,
  "symbols_in_volume": [
   "colorlog.escape_codes.parse_colors",
   "pytest.raises"
  ],
  "type": "function"
 },
 "colorlog.tests.test_escape_codes.test_parse_multiple_colors": {
  "lineno": 49,
  "symbols_in_volume": [
   "colorlog.escape_codes.parse_colors"
  ],
  "type": "function"
 },
 "colorlog.tests.test_escape_codes.test_rainbow": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "colorlog.tests.test_escape_codes.test_reset": {
  "lineno": 12,
  "symbols_in_volume": [
   "colorlog.escape_codes.escape_codes"
  ],
  "type": "function"
 },
 "colorlog.tests.test_example": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "colorlog.tests.test_example.test_example": {
  "lineno": 1,
  "symbols_in_volume": [
   "colorlog.ColoredFormatter",
   "colorlog.StreamHandler",
   "colorlog.getLogger"
  ],
  "type": "function"
 },
 "colorlog.tests.test_exports": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "colorlog.tests.test_exports.test_exports": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "colorlog.tests.test_logging": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "colorlog.tests.test_logging.test_colorlog_basicConfig": {
  "lineno": 16,
  "symbols_in_volume": [
   "colorlog.basicConfig",
   "colorlog.getLogger"
  ],
  "type": "function"
 },
 "colorlog.tests.test_logging.test_colorlog_module": {
  "lineno": 12,
  "symbols_in_volume": [
   "colorlog"
  ],
  "type": "function"
 },
 "colorlog.tests.test_logging.test_logging_module": {
  "lineno": 8,
  "symbols_in_volume": [
   "logging"
  ],
  "type": "function"
 }
}