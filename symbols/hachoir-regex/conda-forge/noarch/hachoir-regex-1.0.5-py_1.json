{
 "hachoir_regex": {
  "data": {},
  "type": "module"
 },
 "hachoir_regex.PatternMatching": {
  "data": {
   "shadows": "hachoir_regex.pattern.PatternMatching"
  },
  "type": "import"
 },
 "hachoir_regex.RegexAnd": {
  "data": {
   "shadows": "hachoir_regex.regex.RegexAnd"
  },
  "type": "import"
 },
 "hachoir_regex.RegexDot": {
  "data": {
   "shadows": "hachoir_regex.regex.RegexDot"
  },
  "type": "import"
 },
 "hachoir_regex.RegexEmpty": {
  "data": {
   "shadows": "hachoir_regex.regex.RegexEmpty"
  },
  "type": "import"
 },
 "hachoir_regex.RegexEnd": {
  "data": {
   "shadows": "hachoir_regex.regex.RegexEnd"
  },
  "type": "import"
 },
 "hachoir_regex.RegexOr": {
  "data": {
   "shadows": "hachoir_regex.regex.RegexOr"
  },
  "type": "import"
 },
 "hachoir_regex.RegexRange": {
  "data": {
   "shadows": "hachoir_regex.regex.RegexRange"
  },
  "type": "import"
 },
 "hachoir_regex.RegexRangeCharacter": {
  "data": {
   "shadows": "hachoir_regex.regex.RegexRangeCharacter"
  },
  "type": "import"
 },
 "hachoir_regex.RegexRangeItem": {
  "data": {
   "shadows": "hachoir_regex.regex.RegexRangeItem"
  },
  "type": "import"
 },
 "hachoir_regex.RegexRepeat": {
  "data": {
   "shadows": "hachoir_regex.regex.RegexRepeat"
  },
  "type": "import"
 },
 "hachoir_regex.RegexStart": {
  "data": {
   "shadows": "hachoir_regex.regex.RegexStart"
  },
  "type": "import"
 },
 "hachoir_regex.RegexString": {
  "data": {
   "shadows": "hachoir_regex.regex.RegexString"
  },
  "type": "import"
 },
 "hachoir_regex.RegexWord": {
  "data": {
   "shadows": "hachoir_regex.regex.RegexWord"
  },
  "type": "import"
 },
 "hachoir_regex.compatibility": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "hachoir_regex.compatibility.__all__": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "hachoir_regex.compatibility.all": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "hachoir_regex.compatibility.operator",
    "reduce"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.compatibility.any": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "hachoir_regex.compatibility.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "hachoir_regex.createRange": {
  "data": {
   "shadows": "hachoir_regex.regex.createRange"
  },
  "type": "import"
 },
 "hachoir_regex.createString": {
  "data": {
   "shadows": "hachoir_regex.regex.createString"
  },
  "type": "import"
 },
 "hachoir_regex.parse": {
  "data": {
   "shadows": "hachoir_regex.parser.parse"
  },
  "type": "import"
 },
 "hachoir_regex.parser": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "hachoir_regex.RegexDot",
    "hachoir_regex.RegexEnd",
    "hachoir_regex.RegexStart",
    "hachoir_regex.parser.doctest",
    "hachoir_regex.parser.parseOr",
    "hachoir_regex.parser.parseRange",
    "hachoir_regex.parser.re"
   ]
  },
  "type": "module"
 },
 "hachoir_regex.parser.CHAR_TO_CLASS": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "hachoir_regex.parser.CHAR_TO_FUNC": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "hachoir_regex.parser.CHAR_TO_REPEAT": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "hachoir_regex.parser.REGEX_COMMAND_CHARACTERS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "hachoir_regex.parser.REPEAT_REGEX": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "hachoir_regex.parser.RegexDot": {
  "data": {
   "shadows": "hachoir_regex.RegexDot"
  },
  "type": "import"
 },
 "hachoir_regex.parser.RegexEmpty": {
  "data": {
   "shadows": "hachoir_regex.RegexEmpty"
  },
  "type": "import"
 },
 "hachoir_regex.parser.RegexEnd": {
  "data": {
   "shadows": "hachoir_regex.RegexEnd"
  },
  "type": "import"
 },
 "hachoir_regex.parser.RegexRange": {
  "data": {
   "shadows": "hachoir_regex.RegexRange"
  },
  "type": "import"
 },
 "hachoir_regex.parser.RegexRangeCharacter": {
  "data": {
   "shadows": "hachoir_regex.RegexRangeCharacter"
  },
  "type": "import"
 },
 "hachoir_regex.parser.RegexRangeItem": {
  "data": {
   "shadows": "hachoir_regex.RegexRangeItem"
  },
  "type": "import"
 },
 "hachoir_regex.parser.RegexRepeat": {
  "data": {
   "shadows": "hachoir_regex.RegexRepeat"
  },
  "type": "import"
 },
 "hachoir_regex.parser.RegexStart": {
  "data": {
   "shadows": "hachoir_regex.RegexStart"
  },
  "type": "import"
 },
 "hachoir_regex.parser.RegexString": {
  "data": {
   "shadows": "hachoir_regex.RegexString"
  },
  "type": "import"
 },
 "hachoir_regex.parser.RegexWord": {
  "data": {
   "shadows": "hachoir_regex.RegexWord"
  },
  "type": "import"
 },
 "hachoir_regex.parser._parse": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "NotImplementedError",
    "SyntaxError",
    "hachoir_regex.RegexEmpty",
    "hachoir_regex.RegexRepeat",
    "hachoir_regex.RegexString",
    "hachoir_regex.RegexWord",
    "hachoir_regex.parser.CHAR_TO_CLASS",
    "hachoir_regex.parser.CHAR_TO_FUNC",
    "hachoir_regex.parser.CHAR_TO_REPEAT",
    "hachoir_regex.parser.REGEX_COMMAND_CHARACTERS",
    "hachoir_regex.parser.parseRepeat",
    "len"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.parser.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "hachoir_regex.parser.parse": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "hachoir_regex.parser._parse",
    "len"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.parser.parseOr": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "NotImplementedError",
    "SyntaxError",
    "_parse",
    "hachoir_regex.RegexEmpty",
    "len"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.parser.parseRange": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "SyntaxError",
    "hachoir_regex.RegexRange",
    "hachoir_regex.RegexRangeCharacter",
    "hachoir_regex.RegexRangeItem",
    "len",
    "ord"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.parser.parseRepeat": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "SyntaxError",
    "hachoir_regex.parser.REPEAT_REGEX",
    "int"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.parser.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "hachoir_regex.pattern": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "hachoir_regex.pattern.doctest",
    "hachoir_regex.pattern.sys"
   ]
  },
  "type": "module"
 },
 "hachoir_regex.pattern.Pattern": {
  "data": {
   "lineno": 4
  },
  "type": "class"
 },
 "hachoir_regex.pattern.Pattern.__init__": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "hachoir_regex.pattern.PatternMatching": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "class"
 },
 "hachoir_regex.pattern.PatternMatching.__init__": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "hachoir_regex.pattern.PatternMatching.__str__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "hachoir_regex.tools.makePrintable",
    "str"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.pattern.PatternMatching._getAttribute": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.pattern.PatternMatching._getCompiledRegex": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "hachoir_regex.pattern.PatternMatching._getMaxLength": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "hachoir_regex.pattern.PatternMatching._getRegex": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "hachoir_regex.pattern.PatternMatching.addRegex": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ValueError",
    "hachoir_regex.pattern.RegexPattern"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.pattern.PatternMatching.addString": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "hachoir_regex.pattern.StringPattern"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.pattern.PatternMatching.commit": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "hachoir_regex.RegexEmpty",
    "hachoir_regex.createString",
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.pattern.PatternMatching.getPattern": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.pattern.PatternMatching.search": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "hachoir_regex.pattern.RegexEmpty": {
  "data": {
   "shadows": "hachoir_regex.RegexEmpty"
  },
  "type": "import"
 },
 "hachoir_regex.pattern.RegexOr": {
  "data": {
   "shadows": "hachoir_regex.RegexOr"
  },
  "type": "import"
 },
 "hachoir_regex.pattern.RegexPattern": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "hachoir_regex.pattern.Pattern",
    "property"
   ]
  },
  "type": "class"
 },
 "hachoir_regex.pattern.RegexPattern.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "hachoir_regex.parse",
    "hachoir_regex.pattern.Pattern"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.pattern.RegexPattern.__repr__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "hachoir_regex.pattern.RegexPattern.__str__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "hachoir_regex.tools.makePrintable",
    "str"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.pattern.RegexPattern._getCompiledRegex": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "hachoir_regex.pattern.RegexPattern.match": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "hachoir_regex.pattern.StringPattern": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "hachoir_regex.pattern.Pattern"
   ]
  },
  "type": "class"
 },
 "hachoir_regex.pattern.StringPattern.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "hachoir_regex.pattern.Pattern"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.pattern.StringPattern.__repr__": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "hachoir_regex.pattern.StringPattern.__str__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "hachoir_regex.tools.makePrintable"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.pattern.createString": {
  "data": {
   "shadows": "hachoir_regex.createString"
  },
  "type": "import"
 },
 "hachoir_regex.pattern.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "hachoir_regex.pattern.makePrintable": {
  "data": {
   "shadows": "hachoir_regex.tools.makePrintable"
  },
  "type": "import"
 },
 "hachoir_regex.pattern.parse": {
  "data": {
   "shadows": "hachoir_regex.parse"
  },
  "type": "import"
 },
 "hachoir_regex.pattern.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "hachoir_regex.regex": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "hachoir_regex.regex.doctest"
   ]
  },
  "type": "module"
 },
 "hachoir_regex.regex.Regex": {
  "data": {
   "lineno": 107
  },
  "type": "class"
 },
 "hachoir_regex.regex.Regex.__add__": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "hachoir_regex.regex.Regex.__and__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "RegexAnd",
    "RegexEmpty"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.Regex.__contains__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.Regex.__eq__": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "hachoir_regex.regex.Regex.__iter__": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.Regex.__or__": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "RegexOr"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.Regex.__repr__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "hachoir_regex.tools.makePrintable"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.Regex.__str__": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.Regex._and": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "hachoir_regex.regex.Regex._eq": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.Regex._match": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "hachoir_regex.regex.Regex._or_": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "hachoir_regex.regex.Regex._str": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.Regex.compile": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "hachoir_regex.regex.re"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.Regex.findPrefix": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "hachoir_regex.regex.Regex.match": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "hachoir_regex.regex.Regex.maxLength": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "hachoir_regex.regex.Regex.minLength": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.Regex.or_": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexAnd": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "hachoir_regex.regex.Regex"
   ]
  },
  "type": "class"
 },
 "hachoir_regex.regex.RegexAnd.__init__": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexAnd.__iter__": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexAnd._and": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "hachoir_regex.regex.RegexAnd"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexAnd._eq": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "hachoir_regex.compatibility.all",
    "hachoir_regex.regex.itertools",
    "len"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexAnd._minmaxLength": {
  "data": {
   "lineno": 554
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexAnd._or_": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "hachoir_regex.regex.RegexAnd",
    "hachoir_regex.regex.RegexString",
    "hachoir_regex.regex.matchSingleValue",
    "len",
    "min"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexAnd._str": {
  "data": {
   "lineno": 629
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexAnd.join": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "classmethod",
    "hachoir_regex.regex._join",
    "hachoir_regex.regex.operator"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexAnd.maxLength": {
  "data": {
   "lineno": 570
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexAnd.minLength": {
  "data": {
   "lineno": 562
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexDot": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "hachoir_regex.regex.Regex"
   ]
  },
  "type": "class"
 },
 "hachoir_regex.regex.RegexDot._eq": {
  "data": {
   "lineno": 322
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexDot._match": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "RegexRange",
    "RegexString",
    "len"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexDot._str": {
  "data": {
   "lineno": 312
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexDot.minLength": {
  "data": {
   "lineno": 309
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexEmpty": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "hachoir_regex.regex.Regex"
   ]
  },
  "type": "class"
 },
 "hachoir_regex.regex.RegexEmpty._and": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexEmpty._eq": {
  "data": {
   "lineno": 278
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexEmpty._str": {
  "data": {
   "lineno": 272
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexEmpty.minLength": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexEnd": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "hachoir_regex.regex.RegexStart"
   ]
  },
  "type": "class"
 },
 "hachoir_regex.regex.RegexEnd._and": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "hachoir_regex.regex.RegexEnd"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexEnd._str": {
  "data": {
   "lineno": 305
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexOr": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "hachoir_regex.regex.Regex"
   ]
  },
  "type": "class"
 },
 "hachoir_regex.regex.RegexOr.__contains__": {
  "data": {
   "lineno": 660
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexOr.__init__": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexOr.__iter__": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexOr._eq": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "hachoir_regex.compatibility.all",
    "hachoir_regex.regex.itertools",
    "len"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexOr._minmaxLength": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexOr._or_": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "enumerate",
    "hachoir_regex.regex.RegexOr",
    "list"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexOr._str": {
  "data": {
   "lineno": 690
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexOr.join": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "classmethod",
    "hachoir_regex.regex._join",
    "hachoir_regex.regex.operator"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexOr.maxLength": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexOr.minLength": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "min"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexRange": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "hachoir_regex.regex.Regex"
   ]
  },
  "type": "class"
 },
 "hachoir_regex.regex.RegexRange.__init__": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "hachoir_regex.regex.RegexRange",
    "tuple"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexRange._eq": {
  "data": {
   "lineno": 544
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexRange._match": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "hachoir_regex.compatibility.any",
    "hachoir_regex.regex.RegexRange",
    "hachoir_regex.regex.RegexRangeCharacter",
    "hachoir_regex.regex.RegexString",
    "len"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexRange._or_": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "hachoir_regex.regex.RegexRange",
    "hachoir_regex.regex.RegexRangeCharacter",
    "hachoir_regex.regex.RegexString",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexRange._str": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexRange.minLength": {
  "data": {
   "lineno": 487
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexRange.rangeAdd": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "enumerate",
    "hachoir_regex.regex.RegexRange",
    "hachoir_regex.regex.RegexRangeItem",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexRangeCharacter": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "hachoir_regex.regex.RegexRangeItem"
   ]
  },
  "type": "class"
 },
 "hachoir_regex.regex.RegexRangeCharacter.__init__": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "hachoir_regex.regex.RegexRangeItem",
    "ord"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexRangeItem": {
  "data": {
   "lineno": 407
  },
  "type": "class"
 },
 "hachoir_regex.regex.RegexRangeItem.__contains__": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "hachoir_regex.regex.RegexRangeItem",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexRangeItem.__init__": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "TypeError",
    "type"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexRangeItem.__len__": {
  "data": {
   "lineno": 421
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexRangeItem.__repr__": {
  "data": {
   "lineno": 439
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexRangeItem.__str__": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "chr"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexRepeat": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "hachoir_regex.regex.Regex"
   ]
  },
  "type": "class"
 },
 "hachoir_regex.regex.RegexRepeat.__init__": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "ValueError",
    "hachoir_regex.regex.RegexOr",
    "hachoir_regex.regex.RegexRepeat",
    "hachoir_regex.regex.optimizeRepeatOr"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexRepeat._eq": {
  "data": {
   "lineno": 855
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexRepeat._str": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "hachoir_regex.regex.RegexAnd",
    "hachoir_regex.regex.RegexString",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexRepeat.maxLength": {
  "data": {
   "lineno": 831
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexRepeat.minLength": {
  "data": {
   "lineno": 817
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexStart": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "hachoir_regex.regex.RegexEmpty"
   ]
  },
  "type": "class"
 },
 "hachoir_regex.regex.RegexStart._and": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "hachoir_regex.regex.RegexStart"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexStart._str": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexString": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "hachoir_regex.regex.Regex"
   ]
  },
  "type": "class"
 },
 "hachoir_regex.regex.RegexString.__init__": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexString._and": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "hachoir_regex.regex.RegexString"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexString._eq": {
  "data": {
   "lineno": 404
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexString._or_": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "hachoir_regex.regex.RegexString"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexString._str": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "hachoir_regex.regex.escapeRegex"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexString.findPrefix": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "hachoir_regex.regex.RegexEmpty",
    "hachoir_regex.regex.RegexString",
    "hachoir_regex.regex.createRange",
    "hachoir_regex.regex.createString",
    "len",
    "min",
    "xrange"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexString.minLength": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexWord": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "hachoir_regex.regex.RegexEmpty"
   ]
  },
  "type": "class"
 },
 "hachoir_regex.regex.RegexWord._and": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "hachoir_regex.regex.RegexWord"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.RegexWord._str": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "hachoir_regex.regex._join": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "RegexEmpty",
    "func",
    "isinstance",
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.all": {
  "data": {
   "shadows": "hachoir_regex.compatibility.all"
  },
  "type": "import"
 },
 "hachoir_regex.regex.any": {
  "data": {
   "shadows": "hachoir_regex.compatibility.any"
  },
  "type": "import"
 },
 "hachoir_regex.regex.createRange": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "RegexRange",
    "RegexRangeCharacter"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.createString": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "RegexEmpty",
    "RegexString"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "hachoir_regex.regex.escapeRegex": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "hachoir_regex.regex.re"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "hachoir_regex.regex.makePrintable": {
  "data": {
   "shadows": "hachoir_regex.tools.makePrintable"
  },
  "type": "import"
 },
 "hachoir_regex.regex.matchSingleValue": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "hachoir_regex.compatibility.all",
    "len"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "hachoir_regex.regex.optimizeRepeatOr": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "RegexRepeat",
    "hachoir_regex.regex.RegexEmpty",
    "hachoir_regex.regex.RegexOr"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.regex.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "hachoir_regex.tools": {
  "data": {
   "symbols_in_volume": [
    "hachoir_regex.tools.re",
    "ord",
    "tuple",
    "xrange"
   ]
  },
  "type": "module"
 },
 "hachoir_regex.tools.controlchars": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "hachoir_regex.tools.makePrintable": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "hachoir_regex.tools.controlchars",
    "hachoir_regex.tools.re",
    "hachoir_regex.tools.regex_control_code",
    "isinstance",
    "ord",
    "unicode"
   ]
  },
  "type": "function"
 },
 "hachoir_regex.tools.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "hachoir_regex.tools.regex_control_code": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "hachoir_regex.version": {
  "data": {},
  "type": "module"
 },
 "hachoir_regex.version.LICENSE": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "hachoir_regex.version.PACKAGE": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "hachoir_regex.version.WEBSITE": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "hachoir_regex.version.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 }
}