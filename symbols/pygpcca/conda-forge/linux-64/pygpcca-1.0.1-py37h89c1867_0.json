{
 "pygpcca": {
  "data": {},
  "type": "module"
 },
 "pygpcca.GPCCA": {
  "data": {
   "shadows": "pygpcca._gpcca.GPCCA"
  },
  "type": "import"
 },
 "pygpcca.__email__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pygpcca.__version__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pygpcca._gpcca": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "UserWarning",
    "numpy.ndarray",
    "pygpcca._gpcca.os",
    "pygpcca._gpcca.sys",
    "pygpcca._gpcca.warnings",
    "typing.Optional"
   ]
  },
  "type": "module"
 },
 "pygpcca._gpcca.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pygpcca._gpcca.DEFAULT_SCHUR_METHOD": {
  "data": {
   "shadows": "pygpcca.utils._constants.DEFAULT_SCHUR_METHOD"
  },
  "type": "import"
 },
 "pygpcca._gpcca.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pygpcca._gpcca.EPS": {
  "data": {
   "shadows": "pygpcca.utils._constants.EPS"
  },
  "type": "import"
 },
 "pygpcca._gpcca.GPCCA": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "pygpcca.utils._docs.d.dedent"
   ]
  },
  "type": "class"
 },
 "pygpcca._gpcca.GPCCA.__init__": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "len",
    "numpy.float64",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.shape",
    "numpy.true_divide",
    "pygpcca._gpcca.OArray",
    "pygpcca.utils._constants.DEFAULT_SCHUR_METHOD",
    "pygpcca.utils._utils.is_transition_matrix",
    "scipy.sparse.spmatrix",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca.GPCCA.__repr__": {
  "data": {
   "lineno": 1275,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca.GPCCA.__str__": {
  "data": {
   "lineno": 1278,
   "symbols_in_volume": [
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca.GPCCA._do_schur_helper": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "numpy.shape",
    "pygpcca._gpcca._do_schur",
    "pygpcca._gpcca.logging",
    "pygpcca._sorted_schur._check_conj_split"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca.GPCCA.coarse_grained_input_distribution": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": [
    "property",
    "pygpcca._gpcca.OArray"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca.GPCCA.coarse_grained_stationary_probability": {
  "data": {
   "lineno": 1081,
   "symbols_in_volume": [
    "property",
    "pygpcca._gpcca.OArray"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca.GPCCA.coarse_grained_transition_matrix": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "property",
    "pygpcca._gpcca.OArray"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca.GPCCA.crispness_values": {
  "data": {
   "lineno": 1101,
   "symbols_in_volume": [
    "property",
    "pygpcca._gpcca.OArray",
    "pygpcca.utils._docs.d.dedent"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca.GPCCA.dominant_eigenvalues": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "property",
    "pygpcca._gpcca.OArray",
    "pygpcca.utils._docs.d.dedent"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca.GPCCA.input_distribution": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": [
    "numpy.ndarray",
    "property"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca.GPCCA.macrostate_assignment": {
  "data": {
   "lineno": 1139,
   "symbols_in_volume": [
    "numpy.argmax",
    "property",
    "pygpcca._gpcca.OArray"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca.GPCCA.macrostate_sets": {
  "data": {
   "lineno": 1161,
   "symbols_in_volume": [
    "numpy.ndarray",
    "numpy.where",
    "property",
    "range",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca.GPCCA.memberships": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "property",
    "pygpcca._gpcca.OArray"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca.GPCCA.minChi": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "isinstance",
    "numpy.ndarray",
    "pygpcca._gpcca._cluster_by_isa",
    "range",
    "typing.List",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca.GPCCA.n_m": {
  "data": {
   "lineno": 1198,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca.GPCCA.optimal_crispness": {
  "data": {
   "lineno": 1203,
   "symbols_in_volume": [
    "float",
    "property",
    "pygpcca.utils._docs.d.dedent",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca.GPCCA.optimize": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "max",
    "min",
    "numpy.any",
    "numpy.argmax",
    "numpy.array",
    "numpy.count_nonzero",
    "numpy.dot",
    "numpy.ndarray",
    "numpy.sum",
    "numpy.zeros",
    "pygpcca._gpcca._coarsegrain",
    "pygpcca._gpcca._gpcca_core",
    "pygpcca._gpcca.warnings",
    "pygpcca._sorted_schur._check_conj_split",
    "pygpcca.utils._docs.d.dedent",
    "pygpcca.utils._utils.connected_sets",
    "range",
    "set",
    "str",
    "tuple",
    "type",
    "typing.Dict",
    "typing.List",
    "typing.TYPE_CHECKING",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca.GPCCA.rotation_matrix": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": [
    "property",
    "pygpcca._gpcca.OArray"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca.GPCCA.schur_matrix": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": [
    "property",
    "pygpcca._gpcca.OArray"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca.GPCCA.schur_vectors": {
  "data": {
   "lineno": 1236,
   "symbols_in_volume": [
    "property",
    "pygpcca._gpcca.OArray"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca.GPCCA.stationary_probability": {
  "data": {
   "lineno": 1245,
   "symbols_in_volume": [
    "ValueError",
    "functools.cached_property",
    "pygpcca._gpcca.OArray",
    "pygpcca._gpcca.warnings",
    "pygpcca.utils._utils.stationary_distribution"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca.GPCCA.top_eigenvalues": {
  "data": {
   "lineno": 1258,
   "symbols_in_volume": [
    "property",
    "pygpcca._gpcca.OArray"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca.GPCCA.transition_matrix": {
  "data": {
   "lineno": 1270,
   "symbols_in_volume": [
    "numpy.ndarray",
    "property",
    "scipy.sparse.spmatrix",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pygpcca._gpcca.OArray": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "pygpcca._gpcca.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pygpcca._gpcca.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "pygpcca._gpcca.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pygpcca._gpcca.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pygpcca._gpcca.__all__": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "pygpcca._gpcca.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pygpcca._gpcca.__credits__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pygpcca._gpcca.__email__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pygpcca._gpcca._check_conj_split": {
  "data": {
   "shadows": "pygpcca._sorted_schur._check_conj_split"
  },
  "type": "import"
 },
 "pygpcca._gpcca._cluster_by_isa": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "float",
    "numpy.amin",
    "numpy.dot",
    "numpy.ndarray",
    "pygpcca._gpcca._initialize_rot_matrix",
    "pygpcca.utils._docs.d.dedent",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca._coarsegrain": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "numpy.linalg.pinv",
    "numpy.ndarray",
    "pygpcca.utils._docs.d.dedent",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "scipy.sparse.spmatrix",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca._do_schur": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "numpy.all",
    "numpy.allclose",
    "numpy.diag",
    "numpy.dot",
    "numpy.eye",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.true_divide",
    "pygpcca._gpcca._gram_schmidt_mod",
    "pygpcca._gpcca.logging",
    "pygpcca._gpcca.warnings",
    "pygpcca._sorted_schur.sorted_schur",
    "pygpcca.utils._constants.DEFAULT_SCHUR_METHOD",
    "pygpcca.utils._constants.EPS",
    "pygpcca.utils._docs.d.dedent",
    "range",
    "scipy.linalg.subspace_angles",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dia_matrix",
    "scipy.sparse.issparse",
    "scipy.sparse.spmatrix",
    "str",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca._fill_matrix": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.dot",
    "numpy.max",
    "numpy.min",
    "numpy.ndarray",
    "numpy.sum",
    "pygpcca.utils._docs.d.dedent"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca._gpcca_core": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "float",
    "numpy.ndarray",
    "numpy.shape",
    "pygpcca._gpcca._initialize_rot_matrix",
    "pygpcca._gpcca._opt_soft",
    "pygpcca.utils._docs.d.dedent",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca._gram_schmidt_mod": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ValueError",
    "numpy.allclose",
    "numpy.copy",
    "numpy.dot",
    "numpy.eye",
    "numpy.linalg.norm",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.true_divide",
    "numpy.zeros",
    "pygpcca._gpcca.logging",
    "pygpcca.utils._docs.d.dedent",
    "range",
    "scipy.linalg.subspace_angles"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca._indexsearch": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "numpy.all",
    "numpy.copy",
    "numpy.int64",
    "numpy.isclose",
    "numpy.linalg.norm",
    "numpy.max",
    "numpy.min",
    "numpy.ndarray",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.sum",
    "numpy.zeros",
    "pygpcca.utils._docs.d.dedent",
    "range"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca._initialize_rot_matrix": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "ValueError",
    "_indexsearch",
    "numpy.linalg.cond",
    "numpy.linalg.pinv",
    "numpy.ndarray",
    "pygpcca._gpcca.warnings",
    "pygpcca.utils._constants.EPS",
    "pygpcca.utils._docs.d.dedent"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca._objective": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "ValueError",
    "_fill_matrix",
    "float",
    "numpy.diag",
    "numpy.float64",
    "numpy.ndarray",
    "numpy.reshape",
    "numpy.trace",
    "numpy.zeros",
    "pygpcca.utils._docs.d.dedent"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca._opt_soft": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "ValueError",
    "_fill_matrix",
    "float",
    "numpy.allclose",
    "numpy.any",
    "numpy.dot",
    "numpy.ndarray",
    "numpy.newaxis",
    "numpy.reshape",
    "numpy.sum",
    "numpy.true_divide",
    "pygpcca._gpcca._objective",
    "pygpcca.utils._constants.EPS",
    "pygpcca.utils._docs.d.dedent",
    "scipy.optimize.fmin",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca.cached_property": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "functools.lru_cache",
    "property",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca.connected_sets": {
  "data": {
   "shadows": "pygpcca.utils._utils.connected_sets"
  },
  "type": "import"
 },
 "pygpcca._gpcca.d": {
  "data": {
   "shadows": "pygpcca.utils._docs.d"
  },
  "type": "import"
 },
 "pygpcca._gpcca.fmin": {
  "data": {
   "shadows": "scipy.optimize.fmin"
  },
  "type": "import"
 },
 "pygpcca._gpcca.gpcca_coarsegrain": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "GPCCA",
    "int",
    "numpy.ndarray",
    "pygpcca._gpcca._coarsegrain",
    "pygpcca.utils._constants.DEFAULT_SCHUR_METHOD",
    "pygpcca.utils._docs.d.dedent",
    "scipy.sparse.spmatrix",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pygpcca._gpcca.is_transition_matrix": {
  "data": {
   "shadows": "pygpcca.utils._utils.is_transition_matrix"
  },
  "type": "import"
 },
 "pygpcca._gpcca.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "pygpcca._gpcca.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pygpcca._gpcca.lru_cache": {
  "data": {
   "shadows": "functools.lru_cache"
  },
  "type": "import"
 },
 "pygpcca._gpcca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pygpcca._gpcca.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pygpcca._gpcca.sorted_schur": {
  "data": {
   "shadows": "pygpcca._sorted_schur.sorted_schur"
  },
  "type": "import"
 },
 "pygpcca._gpcca.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "pygpcca._gpcca.spmatrix": {
  "data": {
   "shadows": "scipy.sparse.spmatrix"
  },
  "type": "import"
 },
 "pygpcca._gpcca.stationary_distribution": {
  "data": {
   "shadows": "pygpcca.utils._utils.stationary_distribution"
  },
  "type": "import"
 },
 "pygpcca._gpcca.subspace_angles": {
  "data": {
   "shadows": "scipy.linalg.subspace_angles"
  },
  "type": "import"
 },
 "pygpcca._gpcca.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pygpcca._gpcca.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pygpcca._sort_real_schur": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "float",
    "numpy.abs",
    "numpy.all",
    "numpy.allclose",
    "numpy.count_nonzero",
    "numpy.diag",
    "numpy.dot",
    "numpy.eye",
    "numpy.finfo",
    "numpy.inf",
    "numpy.isinf",
    "numpy.max",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.tril",
    "pygpcca._sort_real_schur.A",
    "pygpcca._sort_real_schur.delta",
    "pygpcca._sort_real_schur.eps",
    "pygpcca._sort_real_schur.ev",
    "pygpcca._sort_real_schur.ev_orig",
    "pygpcca._sort_real_schur.n",
    "pygpcca._sort_real_schur.r",
    "pygpcca._sort_real_schur.scipy",
    "pygpcca._sort_real_schur.sort_real_schur",
    "pygpcca._sort_real_schur.z",
    "range",
    "sorted"
   ]
  },
  "type": "module"
 },
 "pygpcca._sort_real_schur.A": {
  "data": {
   "lineno": 590
  },
  "type": "constant"
 },
 "pygpcca._sort_real_schur.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pygpcca._sort_real_schur.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pygpcca._sort_real_schur.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pygpcca._sort_real_schur.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pygpcca._sort_real_schur.d": {
  "data": {
   "shadows": "pygpcca.utils._docs.d"
  },
  "type": "import"
 },
 "pygpcca._sort_real_schur.delta": {
  "data": {
   "lineno": 622
  },
  "type": "constant"
 },
 "pygpcca._sort_real_schur.delta_orig": {
  "data": {
   "lineno": 600
  },
  "type": "constant"
 },
 "pygpcca._sort_real_schur.eps": {
  "data": {
   "lineno": 601
  },
  "type": "constant"
 },
 "pygpcca._sort_real_schur.ev": {
  "data": {
   "lineno": 617
  },
  "type": "constant"
 },
 "pygpcca._sort_real_schur.ev_orig": {
  "data": {
   "lineno": 599
  },
  "type": "constant"
 },
 "pygpcca._sort_real_schur.expensive_asserts": {
  "data": {
   "lineno": 587
  },
  "type": "constant"
 },
 "pygpcca._sort_real_schur.lu_complpiv": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "__debug__",
    "bool",
    "int",
    "numpy.abs",
    "numpy.allclose",
    "numpy.arange",
    "numpy.argmax",
    "numpy.dot",
    "numpy.eye",
    "numpy.ndarray",
    "numpy.newaxis",
    "numpy.tril",
    "numpy.unravel_index",
    "numpy.zeros",
    "pygpcca._sort_real_schur.expensive_asserts",
    "range",
    "slice",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pygpcca._sort_real_schur.n": {
  "data": {
   "lineno": 589
  },
  "type": "constant"
 },
 "pygpcca._sort_real_schur.normalize": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "bool",
    "int",
    "numpy.dot",
    "numpy.ndarray",
    "rot",
    "slice",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pygpcca._sort_real_schur.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pygpcca._sort_real_schur.r": {
  "data": {
   "lineno": 603
  },
  "type": "constant"
 },
 "pygpcca._sort_real_schur.rot": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.argmin",
    "numpy.array",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "pygpcca._sort_real_schur.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "pygpcca._sort_real_schur.scipy.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "pygpcca._sort_real_schur.select": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "NotImplementedError",
    "float",
    "int",
    "numpy.abs",
    "numpy.argmax",
    "numpy.ndarray",
    "numpy.real",
    "pygpcca.utils._docs.d.dedent",
    "str",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pygpcca._sort_real_schur.sort_real_schur": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "__debug__",
    "bool",
    "float",
    "len",
    "list",
    "normalize",
    "numpy.abs",
    "numpy.all",
    "numpy.complex128",
    "numpy.diag",
    "numpy.empty",
    "numpy.finfo",
    "numpy.inf",
    "numpy.lib.scimath.sqrt",
    "numpy.linalg.norm",
    "numpy.ndarray",
    "numpy.tril",
    "numpy.where",
    "pygpcca._sort_real_schur.expensive_asserts",
    "pygpcca.utils._docs.d.dedent",
    "range",
    "select",
    "slice",
    "str",
    "swap",
    "swaplist",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pygpcca._sort_real_schur.swap": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "RuntimeError",
    "bool",
    "int",
    "list",
    "lu_complpiv",
    "numpy.abs",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.diag",
    "numpy.dot",
    "numpy.eye",
    "numpy.kron",
    "numpy.linalg.LinAlgError",
    "numpy.linalg.cond",
    "numpy.linalg.qr",
    "numpy.linalg.solve",
    "numpy.min",
    "numpy.ndarray",
    "numpy.vstack",
    "range",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pygpcca._sort_real_schur.swaplist": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "__debug__",
    "float",
    "int",
    "len",
    "list",
    "numpy.all",
    "numpy.diff",
    "numpy.ndarray",
    "pygpcca._sort_real_schur.expensive_asserts",
    "pygpcca.utils._docs.d.dedent",
    "range",
    "select",
    "sorted",
    "str",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pygpcca._sort_real_schur.z": {
  "data": {
   "lineno": 594
  },
  "type": "constant"
 },
 "pygpcca._sorted_schur": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "UserWarning",
    "pygpcca._sorted_schur.os",
    "pygpcca._sorted_schur.sys",
    "pygpcca._sorted_schur.warnings"
   ]
  },
  "type": "module"
 },
 "pygpcca._sorted_schur.DEFAULT_SCHUR_METHOD": {
  "data": {
   "shadows": "pygpcca.utils._constants.DEFAULT_SCHUR_METHOD"
  },
  "type": "import"
 },
 "pygpcca._sorted_schur.EPS": {
  "data": {
   "shadows": "pygpcca.utils._constants.EPS"
  },
  "type": "import"
 },
 "pygpcca._sorted_schur.NO_PETSC_SLEPC_FOUND_MSG": {
  "data": {
   "shadows": "pygpcca.utils._constants.NO_PETSC_SLEPC_FOUND_MSG"
  },
  "type": "import"
 },
 "pygpcca._sorted_schur.PETSc": {
  "data": {
   "shadows": "petsc4py.PETSc"
  },
  "type": "import"
 },
 "pygpcca._sorted_schur.SLEPc": {
  "data": {
   "shadows": "slepc4py.SLEPc"
  },
  "type": "import"
 },
 "pygpcca._sorted_schur.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pygpcca._sorted_schur.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pygpcca._sorted_schur.__all__": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "pygpcca._sorted_schur._check_conj_split": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "bool",
    "numpy.conj",
    "numpy.isclose",
    "numpy.ndarray",
    "pygpcca.utils._constants.EPS",
    "pygpcca.utils._docs.d.dedent"
   ]
  },
  "type": "function"
 },
 "pygpcca._sorted_schur._check_schur": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "numpy.all",
    "numpy.allclose",
    "numpy.diag",
    "numpy.dot",
    "numpy.isreal",
    "numpy.ndarray",
    "pygpcca._sorted_schur.warnings",
    "pygpcca.utils._docs.d.dedent",
    "scipy.linalg.subspace_angles",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "str"
   ]
  },
  "type": "function"
 },
 "pygpcca._sorted_schur._initialize_matrix": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "list",
    "numpy.ndarray",
    "numpy.shape",
    "pygpcca._sorted_schur.warnings",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "scipy.sparse.isspmatrix_csr",
    "scipy.sparse.spmatrix",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pygpcca._sorted_schur.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pygpcca._sorted_schur.d": {
  "data": {
   "shadows": "pygpcca.utils._docs.d"
  },
  "type": "import"
 },
 "pygpcca._sorted_schur.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "pygpcca._sorted_schur.isspmatrix_csr": {
  "data": {
   "shadows": "scipy.sparse.isspmatrix_csr"
  },
  "type": "import"
 },
 "pygpcca._sorted_schur.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pygpcca._sorted_schur.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pygpcca._sorted_schur.petsc4py": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "pygpcca._sorted_schur.rsf2csf": {
  "data": {
   "shadows": "scipy.linalg.rsf2csf"
  },
  "type": "import"
 },
 "pygpcca._sorted_schur.schur": {
  "data": {
   "shadows": "scipy.linalg.schur"
  },
  "type": "import"
 },
 "pygpcca._sorted_schur.slepc4py": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "pygpcca._sorted_schur.sort_real_schur": {
  "data": {
   "shadows": "pygpcca._sort_real_schur.sort_real_schur"
  },
  "type": "import"
 },
 "pygpcca._sorted_schur.sorted_brandts_schur": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "int",
    "numpy.any",
    "numpy.array",
    "numpy.diag",
    "numpy.ndarray",
    "pygpcca._sort_real_schur.sort_real_schur",
    "pygpcca._sorted_schur.warnings",
    "pygpcca.utils._docs.d.dedent",
    "scipy.linalg.rsf2csf",
    "scipy.linalg.schur",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pygpcca._sorted_schur.sorted_krylov_schur": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "numpy.asarray",
    "numpy.column_stack",
    "numpy.float64",
    "numpy.ndarray",
    "petsc4py.PETSc.Mat",
    "pygpcca._sorted_schur._initialize_matrix",
    "pygpcca._sorted_schur.warnings",
    "pygpcca.utils._docs.d.dedent",
    "range",
    "scipy.sparse.spmatrix",
    "slepc4py.SLEPc.DS.MatType.A",
    "slepc4py.SLEPc.EPS",
    "slepc4py.SLEPc.EPS.Type.KRYLOVSCHUR",
    "str",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pygpcca._sorted_schur.sorted_schur": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "numpy.ndarray",
    "pygpcca._sorted_schur._check_conj_split",
    "pygpcca._sorted_schur._check_schur",
    "pygpcca._sorted_schur.petsc4py",
    "pygpcca._sorted_schur.slepc4py",
    "pygpcca._sorted_schur.sorted_brandts_schur",
    "pygpcca._sorted_schur.sorted_krylov_schur",
    "pygpcca._sorted_schur.warnings",
    "pygpcca.utils._constants.DEFAULT_SCHUR_METHOD",
    "pygpcca.utils._constants.NO_PETSC_SLEPC_FOUND_MSG",
    "pygpcca.utils._docs.d.dedent",
    "scipy.sparse.issparse",
    "scipy.sparse.spmatrix",
    "str",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pygpcca._sorted_schur.spmatrix": {
  "data": {
   "shadows": "scipy.sparse.spmatrix"
  },
  "type": "import"
 },
 "pygpcca._sorted_schur.subspace_angles": {
  "data": {
   "shadows": "scipy.linalg.subspace_angles"
  },
  "type": "import"
 },
 "pygpcca._sorted_schur.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pygpcca._sorted_schur.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pygpcca.gpcca_coarsegrain": {
  "data": {
   "shadows": "pygpcca._gpcca.gpcca_coarsegrain"
  },
  "type": "import"
 },
 "pygpcca.stationary_distribution": {
  "data": {
   "shadows": "pygpcca.utils.stationary_distribution"
  },
  "type": "import"
 },
 "pygpcca.utils": {
  "data": {},
  "type": "module"
 },
 "pygpcca.utils._checks": {
  "data": {},
  "type": "module"
 },
 "pygpcca.utils._checks.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pygpcca.utils._checks.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pygpcca.utils._checks.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pygpcca.utils._checks.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pygpcca.utils._checks.assert_array": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "bool",
    "int",
    "isinstance",
    "numpy.array",
    "numpy.array_equal",
    "numpy.count_nonzero",
    "numpy.dtype",
    "numpy.ndarray",
    "numpy.ndim",
    "numpy.shape",
    "numpy.size",
    "pygpcca.utils._docs.d.get_sections",
    "scipy.sparse.issparse",
    "scipy.sparse.spmatrix",
    "str",
    "type",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pygpcca.utils._checks.d": {
  "data": {
   "shadows": "pygpcca.utils._docs.d"
  },
  "type": "import"
 },
 "pygpcca.utils._checks.ensure_ndarray_or_sparse": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "bool",
    "int",
    "isinstance",
    "numpy.array",
    "numpy.dtype",
    "numpy.ndarray",
    "pygpcca.utils._checks.assert_array",
    "pygpcca.utils._docs.d.dedent",
    "scipy.sparse.issparse",
    "scipy.sparse.spmatrix",
    "str",
    "type",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pygpcca.utils._checks.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "pygpcca.utils._checks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pygpcca.utils._checks.spmatrix": {
  "data": {
   "shadows": "scipy.sparse.spmatrix"
  },
  "type": "import"
 },
 "pygpcca.utils._constants": {
  "data": {
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float64",
    "pygpcca.utils._constants.DEFAULT_SCHUR_METHOD"
   ]
  },
  "type": "module"
 },
 "pygpcca.utils._constants.DEFAULT_SCHUR_METHOD": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pygpcca.utils._constants.EPS": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "pygpcca.utils._constants.NO_PETSC_SLEPC_FOUND_MSG": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pygpcca.utils._constants.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pygpcca.utils._docs": {
  "data": {
   "symbols_in_volume": [
    "docrep.DocstringProcessor",
    "pygpcca.utils._docs.P",
    "pygpcca.utils._docs.Q_sort",
    "pygpcca.utils._docs.R_sort",
    "pygpcca.utils._docs.chi_ret",
    "pygpcca.utils._docs.crispness_ret",
    "pygpcca.utils._docs.eigenvalues_k",
    "pygpcca.utils._docs.eigenvalues_m",
    "pygpcca.utils._docs.eta",
    "pygpcca.utils._docs.k",
    "pygpcca.utils._docs.m",
    "pygpcca.utils._docs.m_optimize",
    "pygpcca.utils._docs.method",
    "pygpcca.utils._docs.rot_matrix_ret",
    "pygpcca.utils._docs.tol_krylov",
    "pygpcca.utils._docs.z",
    "pygpcca.utils._docs.z_P"
   ]
  },
  "type": "module"
 },
 "pygpcca.utils._docs.DocstringProcessor": {
  "data": {
   "shadows": "docrep.DocstringProcessor"
  },
  "type": "import"
 },
 "pygpcca.utils._docs.P": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "pygpcca.utils._docs.Q_sort": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "pygpcca.utils._docs.R_sort": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "pygpcca.utils._docs.chi_ret": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "pygpcca.utils._docs.crispness_ret": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "pygpcca.utils._docs.d": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "pygpcca.utils._docs.eigenvalues_k": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "pygpcca.utils._docs.eigenvalues_m": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "pygpcca.utils._docs.eta": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "pygpcca.utils._docs.k": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pygpcca.utils._docs.m": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "pygpcca.utils._docs.m_optimize": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pygpcca.utils._docs.method": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pygpcca.utils._docs.rot_matrix_ret": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "pygpcca.utils._docs.tol_krylov": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "pygpcca.utils._docs.z": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pygpcca.utils._docs.z_P": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pygpcca.utils._utils": {
  "data": {},
  "type": "module"
 },
 "pygpcca.utils._utils.EPS": {
  "data": {
   "shadows": "pygpcca.utils._constants.EPS"
  },
  "type": "import"
 },
 "pygpcca.utils._utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pygpcca.utils._utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pygpcca.utils._utils.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pygpcca.utils._utils._csd": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "bool",
    "numpy.ndarray",
    "pygpcca.utils._utils.connected_sets",
    "scipy.sparse.csr_matrix",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pygpcca.utils._utils._css": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.arange",
    "numpy.argsort",
    "numpy.bincount",
    "numpy.cumsum",
    "numpy.ndarray",
    "numpy.sort",
    "numpy.uint32",
    "numpy.zeros",
    "pygpcca.utils._utils.connected_sets",
    "range",
    "scipy.sparse.csgraph.connected_components",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.isspmatrix_csr",
    "scipy.sparse.spmatrix",
    "sorted",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pygpcca.utils._utils._itmd": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "bool",
    "float",
    "numpy.abs",
    "numpy.allclose",
    "pygpcca.utils._checks.ensure_ndarray_or_sparse",
    "pygpcca.utils._utils.is_transition_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.isspmatrix_csr",
    "scipy.sparse.spmatrix"
   ]
  },
  "type": "function"
 },
 "pygpcca.utils._utils._itms": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "bool",
    "float",
    "numpy.abs",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.sum",
    "pygpcca.utils._checks.ensure_ndarray_or_sparse",
    "pygpcca.utils._utils.is_transition_matrix"
   ]
  },
  "type": "function"
 },
 "pygpcca.utils._utils._sdd": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "RuntimeError",
    "numpy.any",
    "numpy.maximum",
    "numpy.ndarray",
    "pygpcca.utils._utils.stationary_distribution",
    "stationary_distribution_from_backward_iteration",
    "stationary_distribution_from_eigenvector"
   ]
  },
  "type": "function"
 },
 "pygpcca.utils._utils._sds": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "numpy.allclose",
    "numpy.argsort",
    "numpy.ndarray",
    "numpy.sum",
    "pygpcca.utils._constants.EPS",
    "pygpcca.utils._constants.EPS.all",
    "pygpcca.utils._utils.stationary_distribution",
    "scipy.sparse.linalg.eigs",
    "scipy.sparse.spmatrix"
   ]
  },
  "type": "function"
 },
 "pygpcca.utils._utils.backward_iteration": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "RuntimeError",
    "float",
    "int",
    "numpy.eye",
    "numpy.linalg.norm",
    "numpy.ndarray",
    "range",
    "scipy.linalg.lu_factor",
    "scipy.linalg.lu_solve"
   ]
  },
  "type": "function"
 },
 "pygpcca.utils._utils.connected_sets": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "functools.singledispatch",
    "numpy.ndarray",
    "scipy.sparse.spmatrix",
    "type",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pygpcca.utils._utils.csgraph": {
  "data": {
   "shadows": "scipy.sparse.csgraph"
  },
  "type": "import"
 },
 "pygpcca.utils._utils.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pygpcca.utils._utils.d": {
  "data": {
   "shadows": "pygpcca.utils._docs.d"
  },
  "type": "import"
 },
 "pygpcca.utils._utils.eig": {
  "data": {
   "shadows": "scipy.linalg.eig"
  },
  "type": "import"
 },
 "pygpcca.utils._utils.eigs": {
  "data": {
   "shadows": "scipy.sparse.linalg.eigs"
  },
  "type": "import"
 },
 "pygpcca.utils._utils.ensure_ndarray_or_sparse": {
  "data": {
   "shadows": "pygpcca.utils._checks.ensure_ndarray_or_sparse"
  },
  "type": "import"
 },
 "pygpcca.utils._utils.is_transition_matrix": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "float",
    "functools.singledispatch",
    "numpy.ndarray",
    "scipy.sparse.spmatrix",
    "type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pygpcca.utils._utils.isspmatrix_csr": {
  "data": {
   "shadows": "scipy.sparse.isspmatrix_csr"
  },
  "type": "import"
 },
 "pygpcca.utils._utils.lu_factor": {
  "data": {
   "shadows": "scipy.linalg.lu_factor"
  },
  "type": "import"
 },
 "pygpcca.utils._utils.lu_solve": {
  "data": {
   "shadows": "scipy.linalg.lu_solve"
  },
  "type": "import"
 },
 "pygpcca.utils._utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pygpcca.utils._utils.singledispatch": {
  "data": {
   "shadows": "functools.singledispatch"
  },
  "type": "import"
 },
 "pygpcca.utils._utils.spmatrix": {
  "data": {
   "shadows": "scipy.sparse.spmatrix"
  },
  "type": "import"
 },
 "pygpcca.utils._utils.stationary_distribution": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "NotImplementedError",
    "functools.singledispatch",
    "numpy.ndarray",
    "pygpcca.utils._docs.d.dedent",
    "scipy.sparse.spmatrix",
    "type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pygpcca.utils._utils.stationary_distribution_from_backward_iteration": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "float",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.sum",
    "numpy.transpose",
    "pygpcca.utils._docs.d.dedent",
    "pygpcca.utils._utils.backward_iteration"
   ]
  },
  "type": "function"
 },
 "pygpcca.utils._utils.stationary_distribution_from_eigenvector": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.argsort",
    "numpy.ndarray",
    "numpy.sum",
    "pygpcca.utils._docs.d.dedent",
    "scipy.linalg.eig"
   ]
  },
  "type": "function"
 },
 "pygpcca.utils.stationary_distribution": {
  "data": {
   "shadows": "pygpcca.utils._utils.stationary_distribution"
  },
  "type": "import"
 },
 "tests": {
  "data": {},
  "type": "module"
 },
 "tests.conftest": {
  "data": {
   "symbols_in_volume": [
    "tests.conftest._skip_if_no_petsc_slepc",
    "tests.conftest.pytest"
   ]
  },
  "type": "module"
 },
 "tests.conftest.A_mu0": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.A_mu0_init": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.A_mu0_krylov_dense": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.ndarray",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.A_mu0_krylov_dense_init": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.ndarray",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.A_mu0_krylov_sparse": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.ndarray",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.A_mu0_krylov_sparse_init": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.ndarray",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.A_mu1000": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.A_mu1000_init": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.M_1": {
  "data": {
   "lineno": 3137,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.ndarray",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.M_2": {
  "data": {
   "lineno": 3150,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.ndarray",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.M_3": {
  "data": {
   "lineno": 3163,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.ndarray",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.M_4": {
  "data": {
   "lineno": 3176,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.ndarray",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.M_5": {
  "data": {
   "lineno": 3189,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.ndarray",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.P": {
  "data": {
   "lineno": 2786,
   "symbols_in_volume": [
    "numpy.ndarray",
    "tests.conftest.count",
    "tests.conftest.get_known_input",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.P_2": {
  "data": {
   "lineno": 2850,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.P_3": {
  "data": {
   "lineno": 2871,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.P_4": {
  "data": {
   "lineno": 2893,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.P_5": {
  "data": {
   "lineno": 2915,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.P_6": {
  "data": {
   "lineno": 2937,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.P_7": {
  "data": {
   "lineno": 2959,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.P_i": {
  "data": {
   "lineno": 2982,
   "symbols_in_volume": [
    "locals",
    "numpy.ndarray",
    "range",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.P_mu": {
  "data": {
   "lineno": 2798,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.ndarray",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.R_i": {
  "data": {
   "lineno": 3203,
   "symbols_in_volume": [
    "locals",
    "numpy.ndarray",
    "range",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "tests.conftest._session_setup": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "DeprecationWarning",
    "PendingDeprecationWarning",
    "tests.conftest.pytest",
    "tests.conftest.warnings"
   ]
  },
  "type": "function"
 },
 "tests.conftest._skip_if_no_petsc_slepc": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ImportError",
    "bool"
   ]
  },
  "type": "function"
 },
 "tests.conftest.assert_allclose": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "tests.conftest.assert_allclose_np": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "tests.conftest.bdc": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "numpy.all",
    "numpy.asarray",
    "numpy.cumprod",
    "numpy.ndarray",
    "numpy.sum",
    "numpy.zeros",
    "scipy.sparse.diags",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "tests.conftest.chi_isa_mu0_n3": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.chi_isa_mu100_n3": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.count": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.count_A": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.count_A_sparse": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.count_Pc": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.count_chi": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.count_chi_sparse": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.count_sd": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.count_sd_weights": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.crispness_values_P_2_LM": {
  "data": {
   "lineno": 3015,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.ndarray",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.crispness_values_P_2_LR": {
  "data": {
   "lineno": 3086,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.ndarray",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.diags": {
  "data": {
   "shadows": "scipy.sparse.diags"
  },
  "type": "import"
 },
 "tests.conftest.example_matrix_mu": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "tests.conftest.mu",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.get_known_input": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.diag",
    "numpy.float64",
    "numpy.ndarray",
    "numpy.sum",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "tests.conftest.minChi_P_2_LM": {
  "data": {
   "lineno": 2995,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.ndarray",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.minChi_P_2_LR": {
  "data": {
   "lineno": 3066,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.ndarray",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.mpi4py": {
  "data": {
   "shadows": "mpi4py"
  },
  "type": "import"
 },
 "tests.conftest.mu": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "tests.conftest.n_m_P_2_LM": {
  "data": {
   "lineno": 3040,
   "symbols_in_volume": [
    "numpy.int64",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.n_m_P_2_LR": {
  "data": {
   "lineno": 3111,
   "symbols_in_volume": [
    "numpy.int64",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.conftest.optimal_crispness_P_2_LM": {
  "data": {
   "lineno": 3035,
   "symbols_in_volume": [
    "numpy.float64",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.optimal_crispness_P_2_LR": {
  "data": {
   "lineno": 3106,
   "symbols_in_volume": [
    "numpy.float64",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.petsc4py": {
  "data": {
   "shadows": "petsc4py"
  },
  "type": "import"
 },
 "tests.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.conftest.sd": {
  "data": {
   "lineno": 2792,
   "symbols_in_volume": [
    "numpy.ndarray",
    "tests.conftest.count",
    "tests.conftest.get_known_input",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.skip_if_no_petsc_slepc": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "tests.conftest.slepc4py": {
  "data": {
   "shadows": "slepc4py"
  },
  "type": "import"
 },
 "tests.conftest.svecs_mu0": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.svecs_mu0_krylov_dense": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.ndarray",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.svecs_mu0_krylov_sparse": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.ndarray",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.svecs_mu1000": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.top_eigenvalues_P_2_LM": {
  "data": {
   "lineno": 3045,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.complex128",
    "numpy.ndarray",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.top_eigenvalues_P_2_LR": {
  "data": {
   "lineno": 3116,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.complex128",
    "numpy.ndarray",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "tests.test_gpcca": {
  "data": {
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float64"
   ]
  },
  "type": "module"
 },
 "tests.test_gpcca.GPCCA": {
  "data": {
   "shadows": "pygpcca._gpcca.GPCCA"
  },
  "type": "import"
 },
 "tests.test_gpcca.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "tests.test_gpcca.TestCustom": {
  "data": {
   "lineno": 789
  },
  "type": "class"
 },
 "tests.test_gpcca.TestCustom.test_P_2_LM": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "len",
    "numpy.float64",
    "numpy.int64",
    "numpy.ndarray",
    "pygpcca._gpcca.GPCCA",
    "str",
    "tests.conftest.assert_allclose",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestCustom.test_P_2_LR": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "len",
    "numpy.float64",
    "numpy.int64",
    "numpy.ndarray",
    "pygpcca._gpcca.GPCCA",
    "str",
    "tests.conftest.assert_allclose",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestCustom.test_P_i": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "ValueError",
    "numpy.max",
    "numpy.ndarray",
    "numpy.testing.assert_allclose",
    "pygpcca._gpcca.GPCCA",
    "range",
    "scipy.linalg.subspace_angles",
    "str",
    "tests.conftest.assert_allclose",
    "tests.test_gpcca.eps",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestCustom.test_optimize_range_all_invalid": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "ValueError",
    "numpy.empty",
    "numpy.empty_like",
    "numpy.ndarray",
    "pygpcca._gpcca.GPCCA",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestCustom.test_split_raise_LM": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ndarray",
    "pygpcca._gpcca.GPCCA",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestCustom.test_split_raise_LR": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ndarray",
    "pygpcca._gpcca.GPCCA",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestCustom.test_split_warning_LM": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.ndarray",
    "pygpcca._gpcca.GPCCA",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestCustom.test_split_warning_LR": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.ndarray",
    "pygpcca._gpcca.GPCCA",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabRegression": {
  "data": {
   "lineno": 106
  },
  "type": "class"
 },
 "tests.test_gpcca.TestGPCCAMatlabRegression.test_empty_P": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "pygpcca._gpcca.GPCCA",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabRegression.test_empty_sd": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ndarray",
    "pygpcca._gpcca.GPCCA",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabRegression.test_init_final_rot_matrix_brandts": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "numpy.ndarray",
    "pygpcca._gpcca._gpcca_core",
    "pygpcca._gpcca._initialize_rot_matrix",
    "tests.conftest.assert_allclose"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabRegression.test_k_input": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ndarray",
    "pygpcca._gpcca.GPCCA",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabRegression.test_non_square_P": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.random.normal",
    "pygpcca._gpcca.GPCCA",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabRegression.test_normal_case": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.ndarray",
    "pygpcca._gpcca.GPCCA",
    "scipy.linalg.subspace_angles",
    "tests.conftest.assert_allclose",
    "tests.test_gpcca.eps"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabRegression.test_too_small_kkmin": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ndarray",
    "pygpcca._gpcca.GPCCA",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit": {
  "data": {
   "lineno": 164
  },
  "type": "class"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_cluster_by_first_col_not_1": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros",
    "pygpcca._gpcca._cluster_by_isa",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_cluster_by_isa": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "numpy.ndarray",
    "pygpcca._gpcca._cluster_by_isa",
    "pygpcca._gpcca._do_schur",
    "tests.conftest.assert_allclose",
    "tests.conftest.get_known_input",
    "tests.conftest.mu",
    "tests.test_gpcca._find_permutation",
    "zip"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_cluster_by_isa_shape_error": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros",
    "pygpcca._gpcca._cluster_by_isa",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_do_schur": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.ndarray",
    "pygpcca._gpcca._do_schur",
    "tests.conftest.get_known_input",
    "tests.test_gpcca._assert_schur"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_fill_matrix_not_square": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "ValueError",
    "numpy.empty",
    "numpy.zeros",
    "pygpcca._gpcca._fill_matrix",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_fill_matrix_shape_error": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ValueError",
    "numpy.empty",
    "numpy.zeros",
    "pygpcca._gpcca._fill_matrix",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_gpcca_brandts_sparse_is_not_densified": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ndarray",
    "pygpcca._gpcca.GPCCA",
    "scipy.sparse.csr_matrix",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_gram_schmidt_mod_R2": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.sqrt",
    "pygpcca._gpcca._gram_schmidt_mod",
    "tests.conftest.assert_allclose"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_gram_schmidt_mod_R4": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "d",
    "numpy.array",
    "numpy.float64",
    "numpy.sqrt",
    "numpy.true_divide",
    "pygpcca._gpcca._gram_schmidt_mod",
    "tests.conftest.assert_allclose"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_gram_schmidt_shape_error_1": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "pygpcca._gpcca._gram_schmidt_mod",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_gram_schmidt_shape_error_2": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.sqrt",
    "numpy.true_divide",
    "pygpcca._gpcca._gram_schmidt_mod",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_indexsearch_1": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "ValueError",
    "numpy.c_.T",
    "numpy.eye",
    "numpy.r_",
    "numpy.zeros",
    "pygpcca._gpcca._indexsearch",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_indexsearch_2": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.c_.T",
    "pygpcca._gpcca._indexsearch",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_indexshape_shape_error": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "pygpcca._gpcca._indexsearch",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_initialize_A": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "pygpcca._gpcca._do_schur",
    "pygpcca._gpcca._indexsearch",
    "pygpcca._gpcca._initialize_rot_matrix",
    "scipy.linalg.pinv",
    "tests.conftest.assert_allclose",
    "tests.conftest.get_known_input",
    "tests.conftest.mu"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_initialize_A_condition": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "ValueError",
    "pygpcca._gpcca._initialize_rot_matrix",
    "scipy.linalg.hilbert",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_initialize_A_condition_warning": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "UserWarning",
    "pygpcca._gpcca._initialize_rot_matrix",
    "scipy.linalg.hilbert",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_initialize_A_first_is_not_constant": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros",
    "pygpcca._gpcca._initialize_rot_matrix",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_initialize_A_second_and_rest_are_constant": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros",
    "pygpcca._gpcca._initialize_rot_matrix",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_initialize_A_shape_error_1": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros",
    "pygpcca._gpcca._initialize_rot_matrix",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_objective_1": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "numpy.ndarray",
    "numpy.sum",
    "numpy.true_divide",
    "numpy.zeros",
    "pygpcca._gpcca._objective",
    "range",
    "tests.conftest.assert_allclose"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_objective_1st_col": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.eye",
    "numpy.float64",
    "numpy.nan",
    "numpy.ones",
    "numpy.true_divide",
    "pygpcca._gpcca._do_schur",
    "scipy.linalg.lu",
    "tests.conftest.get_known_input",
    "tests.conftest.mu",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_objective_2": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "numpy.ndarray",
    "numpy.sum",
    "numpy.true_divide",
    "numpy.zeros",
    "pygpcca._gpcca._objective",
    "range",
    "tests.conftest.assert_allclose"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_objective_shape_error_1": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros",
    "pygpcca._gpcca._objective",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_objective_shape_error_2": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros",
    "pygpcca._gpcca._objective",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_opt_soft_nelder_mead_more": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "enumerate",
    "numpy.arange",
    "numpy.argmax",
    "numpy.inf",
    "numpy.testing.assert_array_equal",
    "pygpcca._gpcca._do_schur",
    "pygpcca._gpcca._initialize_rot_matrix",
    "pygpcca._gpcca._opt_soft",
    "range",
    "tests.conftest.get_known_input",
    "tests.conftest.mu"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_opt_soft_nelder_mead_mu0": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "numpy.ndarray",
    "numpy.true_divide",
    "pygpcca._gpcca._opt_soft",
    "tests.conftest.assert_allclose"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_opt_soft_nelder_mead_mu1000": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "numpy.ndarray",
    "numpy.true_divide",
    "pygpcca._gpcca._opt_soft",
    "tests.conftest.assert_allclose"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_opt_soft_shape_error_1": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "ValueError",
    "numpy.float64",
    "numpy.zeros",
    "pygpcca._gpcca._opt_soft",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_opt_soft_shape_error_2": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "ValueError",
    "numpy.float64",
    "numpy.zeros",
    "pygpcca._gpcca._opt_soft",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_opt_soft_shape_error_3": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "ValueError",
    "numpy.float64",
    "numpy.zeros",
    "pygpcca._gpcca._opt_soft",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_opt_soft_shape_error_4": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros",
    "pygpcca._gpcca._indexsearch",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_schur_b_neg": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "ValueError",
    "pygpcca._gpcca._do_schur",
    "tests.conftest.get_known_input",
    "tests.conftest.mu",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_schur_b_pos": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pygpcca._gpcca._do_schur",
    "tests.conftest.get_known_input",
    "tests.conftest.mu",
    "tests.test_gpcca._assert_schur"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_sort_real_schur": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.all",
    "numpy.array",
    "numpy.eye",
    "numpy.linalg.norm",
    "numpy.ndarray",
    "numpy.true_divide",
    "pygpcca._sort_real_schur.sort_real_schur",
    "scipy.linalg.eigvals",
    "sort_evals",
    "tests.conftest.assert_allclose",
    "tests.test_gpcca.eps"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_sort_real_schur.sort_evals": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "int",
    "numpy.argsort",
    "numpy.c_",
    "numpy.linalg.norm",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestGPCCAMatlabUnit.test_use_minChi": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.flipud",
    "numpy.testing.assert_array_equal",
    "pygpcca._gpcca.GPCCA",
    "tests.conftest.get_known_input",
    "tests.conftest.mu"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestPETScSLEPc": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "tests.conftest.skip_if_no_petsc_slepc"
   ]
  },
  "type": "class"
 },
 "tests.test_gpcca.TestPETScSLEPc._generate_ground_truth_rot_matrices": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "pygpcca._gpcca.GPCCA",
    "pygpcca._gpcca._initialize_rot_matrix",
    "scipy.sparse.csr_matrix",
    "tests.conftest.get_known_input",
    "tests.conftest.mu"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestPETScSLEPc.test_coarse_grain_sparse": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "numpy.ndarray",
    "pygpcca._gpcca.gpcca_coarsegrain",
    "scipy.sparse.csr_matrix",
    "tests.conftest.assert_allclose",
    "tests.test_gpcca.eps"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestPETScSLEPc.test_coarse_grain_sparse_eq_dense": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "numpy.ndarray",
    "pygpcca._gpcca.gpcca_coarsegrain",
    "scipy.sparse.csr_matrix",
    "tests.conftest.assert_allclose",
    "tests.conftest.get_known_input"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestPETScSLEPc.test_do_schur_krylov": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "numpy.ndarray",
    "pygpcca._gpcca._do_schur",
    "tests.conftest.get_known_input",
    "tests.test_gpcca._assert_schur"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestPETScSLEPc.test_do_schur_krylov_eq_brandts": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.ndarray",
    "pygpcca._gpcca._do_schur",
    "scipy.linalg.subspace_angles",
    "tests.conftest.get_known_input",
    "tests.test_gpcca._assert_schur",
    "tests.test_gpcca.eps"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestPETScSLEPc.test_do_schur_sparse": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "numpy.ndarray",
    "pygpcca._gpcca._do_schur",
    "scipy.sparse.csr_matrix",
    "tests.conftest.get_known_input",
    "tests.test_gpcca._assert_schur"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestPETScSLEPc.test_gpcca_krylov_sparse_eq_dense_count": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "AssertionError",
    "RuntimeError",
    "itertools.combinations",
    "locals",
    "numpy.max",
    "numpy.ndarray",
    "pygpcca._gpcca.GPCCA",
    "scipy.linalg.subspace_angles",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "tests.conftest.assert_allclose",
    "tests.test_gpcca._assert_schur",
    "tests.test_gpcca._find_permutation",
    "tests.test_gpcca.eps"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestPETScSLEPc.test_gpcca_krylov_sparse_eq_dense_mu": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "AssertionError",
    "RuntimeError",
    "int",
    "itertools.combinations",
    "locals",
    "numpy.max",
    "numpy.ndarray",
    "pygpcca._gpcca.GPCCA",
    "scipy.linalg.subspace_angles",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "tests.conftest.assert_allclose",
    "tests.conftest.get_known_input",
    "tests.conftest.mu",
    "tests.test_gpcca._assert_schur",
    "tests.test_gpcca._find_permutation",
    "tests.test_gpcca.eps",
    "tests.test_gpcca.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestPETScSLEPc.test_init_final_rot_matrix_krylov_dense": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "numpy.ndarray",
    "pygpcca._gpcca._gpcca_core",
    "pygpcca._gpcca._initialize_rot_matrix",
    "tests.conftest.assert_allclose"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestPETScSLEPc.test_init_final_rot_matrix_krylov_sparse": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "numpy.ndarray",
    "pygpcca._gpcca._gpcca_core",
    "pygpcca._gpcca._initialize_rot_matrix",
    "tests.conftest.assert_allclose"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestPETScSLEPc.test_memberships_normal_case_sparse_vs_dense": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "numpy.ndarray",
    "pygpcca._gpcca.GPCCA",
    "scipy.sparse.csr_matrix",
    "tests.conftest.assert_allclose",
    "tests.test_gpcca._find_permutation"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestPETScSLEPc.test_normal_case_sparse": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.max",
    "numpy.ndarray",
    "pygpcca._gpcca.GPCCA",
    "scipy.sparse.csr_matrix",
    "tests.conftest.assert_allclose",
    "tests.test_gpcca._find_permutation",
    "tests.test_gpcca.eps"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestUtils": {
  "data": {
   "lineno": 998
  },
  "type": "class"
 },
 "tests.test_gpcca.TestUtils.test_input_distribution_dtype": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "numpy.float16",
    "numpy.float64",
    "numpy.ndarray",
    "numpy.ones",
    "pygpcca._gpcca.GPCCA",
    "tests.test_gpcca.pytest",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca.TestUtils.test_transition_matrix_dtype": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.ndarray",
    "pygpcca._gpcca.GPCCA"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca._assert_schur": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "bool",
    "int",
    "numpy.abs",
    "numpy.all",
    "numpy.ndarray",
    "numpy.testing.assert_array_equal",
    "scipy.linalg.subspace_angles",
    "tests.conftest.assert_allclose",
    "tests.test_gpcca.eps",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca._cluster_by_isa": {
  "data": {
   "shadows": "pygpcca._gpcca._cluster_by_isa"
  },
  "type": "import"
 },
 "tests.test_gpcca._do_schur": {
  "data": {
   "shadows": "pygpcca._gpcca._do_schur"
  },
  "type": "import"
 },
 "tests.test_gpcca._fill_matrix": {
  "data": {
   "shadows": "pygpcca._gpcca._fill_matrix"
  },
  "type": "import"
 },
 "tests.test_gpcca._find_permutation": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "min",
    "numpy.array",
    "numpy.linalg.norm",
    "numpy.ndarray",
    "operator.itemgetter",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_gpcca._gpcca_core": {
  "data": {
   "shadows": "pygpcca._gpcca._gpcca_core"
  },
  "type": "import"
 },
 "tests.test_gpcca._gram_schmidt_mod": {
  "data": {
   "shadows": "pygpcca._gpcca._gram_schmidt_mod"
  },
  "type": "import"
 },
 "tests.test_gpcca._indexsearch": {
  "data": {
   "shadows": "pygpcca._gpcca._indexsearch"
  },
  "type": "import"
 },
 "tests.test_gpcca._initialize_rot_matrix": {
  "data": {
   "shadows": "pygpcca._gpcca._initialize_rot_matrix"
  },
  "type": "import"
 },
 "tests.test_gpcca._objective": {
  "data": {
   "shadows": "pygpcca._gpcca._objective"
  },
  "type": "import"
 },
 "tests.test_gpcca._opt_soft": {
  "data": {
   "shadows": "pygpcca._gpcca._opt_soft"
  },
  "type": "import"
 },
 "tests.test_gpcca.assert_allclose": {
  "data": {
   "shadows": "tests.conftest.assert_allclose"
  },
  "type": "import"
 },
 "tests.test_gpcca.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "tests.test_gpcca.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "tests.test_gpcca.eigvals": {
  "data": {
   "shadows": "scipy.linalg.eigvals"
  },
  "type": "import"
 },
 "tests.test_gpcca.eps": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "tests.test_gpcca.get_known_input": {
  "data": {
   "shadows": "tests.conftest.get_known_input"
  },
  "type": "import"
 },
 "tests.test_gpcca.gpcca_coarsegrain": {
  "data": {
   "shadows": "pygpcca._gpcca.gpcca_coarsegrain"
  },
  "type": "import"
 },
 "tests.test_gpcca.hilbert": {
  "data": {
   "shadows": "scipy.linalg.hilbert"
  },
  "type": "import"
 },
 "tests.test_gpcca.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "tests.test_gpcca.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "tests.test_gpcca.lu": {
  "data": {
   "shadows": "scipy.linalg.lu"
  },
  "type": "import"
 },
 "tests.test_gpcca.mu": {
  "data": {
   "shadows": "tests.conftest.mu"
  },
  "type": "import"
 },
 "tests.test_gpcca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_gpcca.pinv": {
  "data": {
   "shadows": "scipy.linalg.pinv"
  },
  "type": "import"
 },
 "tests.test_gpcca.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_gpcca.skip_if_no_petsc_slepc": {
  "data": {
   "shadows": "tests.conftest.skip_if_no_petsc_slepc"
  },
  "type": "import"
 },
 "tests.test_gpcca.sort_real_schur": {
  "data": {
   "shadows": "pygpcca._sort_real_schur.sort_real_schur"
  },
  "type": "import"
 },
 "tests.test_gpcca.subspace_angles": {
  "data": {
   "shadows": "scipy.linalg.subspace_angles"
  },
  "type": "import"
 },
 "tests.test_stat_dist": {
  "data": {},
  "type": "module"
 },
 "tests.test_stat_dist.TestStationaryDistribution": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "tests.test_stat_dist.TestStationaryDistribution.test_stat_dist_decomposition": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "int",
    "pygpcca.utils._utils.stationary_distribution_from_eigenvector",
    "tests.conftest.assert_allclose",
    "tests.conftest.bdc",
    "tests.test_stat_dist._create_qp",
    "tests.test_stat_dist.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_stat_dist.TestStationaryDistribution.test_stat_dist_iteration": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "int",
    "pygpcca.utils._utils.stationary_distribution_from_backward_iteration",
    "tests.conftest.assert_allclose",
    "tests.conftest.bdc",
    "tests.test_stat_dist._create_qp",
    "tests.test_stat_dist.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_stat_dist.TestStationaryDistribution.test_stat_dist_regression": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "bool",
    "numpy.ndarray",
    "pygpcca.utils._utils.stationary_distribution",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "tests.conftest.assert_allclose",
    "tests.test_stat_dist.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_stat_dist.TestStationaryDistribution.test_stat_dist_sparse_dense": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "bool",
    "pygpcca.utils._utils.stationary_distribution",
    "tests.conftest.assert_allclose",
    "tests.conftest.bdc",
    "tests.test_stat_dist._create_qp",
    "tests.test_stat_dist.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_stat_dist.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "tests.test_stat_dist._create_qp": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.zeros",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "tests.test_stat_dist.assert_allclose": {
  "data": {
   "shadows": "tests.conftest.assert_allclose"
  },
  "type": "import"
 },
 "tests.test_stat_dist.bdc": {
  "data": {
   "shadows": "tests.conftest.bdc"
  },
  "type": "import"
 },
 "tests.test_stat_dist.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "tests.test_stat_dist.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "tests.test_stat_dist.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_stat_dist.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_stat_dist.stationary_distribution": {
  "data": {
   "shadows": "pygpcca.utils._utils.stationary_distribution"
  },
  "type": "import"
 },
 "tests.test_stat_dist.stationary_distribution_from_backward_iteration": {
  "data": {
   "shadows": "pygpcca.utils._utils.stationary_distribution_from_backward_iteration"
  },
  "type": "import"
 },
 "tests.test_stat_dist.stationary_distribution_from_eigenvector": {
  "data": {
   "shadows": "pygpcca.utils._utils.stationary_distribution_from_eigenvector"
  },
  "type": "import"
 }
}