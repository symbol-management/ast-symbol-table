{
 "*": {
  "data": {
   "imports": [
    "nose.tools"
   ]
  },
  "type": "star-import"
 },
 "dipy": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dipy.sys",
    "numpy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "dipy.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "dipy.__config__": {
  "data": {},
  "type": "module"
 },
 "dipy.__config__.HAVE_OPENMP": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "dipy.__config__.USING_GCC_SSE2": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "dipy._get_pkg_info": {
  "data": {
   "shadows": "get_pkg_info"
  },
  "type": "import"
 },
 "dipy.align": {
  "data": {
   "symbols_in_volume": [
    "dipy.align.Bunch",
    "numpy.float32"
   ]
  },
  "type": "module"
 },
 "dipy.align.Bunch": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.align.Bunch.__init__": {
  "data": {
   "lineno": 5
  },
  "type": "function"
 },
 "dipy.align.VerbosityLevels": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "dipy.align.floating": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "dipy.align.imwarp": {
  "data": {
   "symbols_in_volume": [
    "dipy.align.Bunch"
   ]
  },
  "type": "module"
 },
 "dipy.align.imwarp.Bunch": {
  "data": {
   "shadows": "dipy.align.Bunch"
  },
  "type": "import"
 },
 "dipy.align.imwarp.DiffeomorphicMap": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.align.imwarp.DiffeomorphicMap.__init__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.int32",
    "numpy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "dipy.align.imwarp.DiffeomorphicMap._get_warping_function": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "dipy.align.vector_fields.warp_2d",
    "dipy.align.vector_fields.warp_2d_nn",
    "dipy.align.vector_fields.warp_3d",
    "dipy.align.vector_fields.warp_3d_nn"
   ]
  },
  "type": "function"
 },
 "dipy.align.imwarp.DiffeomorphicMap._warp_backward": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.floating",
    "dipy.align.imwarp.mult_aff",
    "numpy.asarray",
    "numpy.dtype",
    "numpy.float32",
    "numpy.int32",
    "warp_f"
   ]
  },
  "type": "function"
 },
 "dipy.align.imwarp.DiffeomorphicMap._warp_forward": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.floating",
    "dipy.align.imwarp.mult_aff",
    "numpy.asarray",
    "numpy.dtype",
    "numpy.float32",
    "numpy.int32",
    "warp_f"
   ]
  },
  "type": "function"
 },
 "dipy.align.imwarp.DiffeomorphicMap.allocate": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "dipy.align.floating",
    "numpy.zeros",
    "tuple"
   ]
  },
  "type": "function"
 },
 "dipy.align.imwarp.DiffeomorphicMap.compute_inversion_error": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "compose_f",
    "dipy.align.vector_fields.compose_vector_fields_2d",
    "dipy.align.vector_fields.compose_vector_fields_3d",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "dipy.align.imwarp.DiffeomorphicMap.expand_fields": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "dipy.align.imwarp.mult_aff",
    "dipy.align.vector_fields.resample_displacement_field_2d",
    "dipy.align.vector_fields.resample_displacement_field_3d",
    "expand_f",
    "numpy.append",
    "numpy.diag",
    "numpy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "dipy.align.imwarp.DiffeomorphicMap.get_backward_field": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "dipy.align.imwarp.DiffeomorphicMap.get_forward_field": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "dipy.align.imwarp.DiffeomorphicMap.get_simplified_transform": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "dipy.align.imwarp.DiffeomorphicMap",
    "dipy.align.imwarp.mult_aff",
    "dipy.align.vector_fields.simplify_warp_function_2d",
    "dipy.align.vector_fields.simplify_warp_function_3d",
    "simplify_f"
   ]
  },
  "type": "function"
 },
 "dipy.align.imwarp.DiffeomorphicMap.interpret_matrix": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.ndarray",
    "str"
   ]
  },
  "type": "function"
 },
 "dipy.align.imwarp.DiffeomorphicMap.inverse": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "dipy.align.imwarp.DiffeomorphicMap"
   ]
  },
  "type": "function"
 },
 "dipy.align.imwarp.DiffeomorphicMap.shallow_copy": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "dipy.align.imwarp.DiffeomorphicMap"
   ]
  },
  "type": "function"
 },
 "dipy.align.imwarp.DiffeomorphicMap.transform": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "dipy.align.imwarp.DiffeomorphicMap.transform_inverse": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "dipy.align.imwarp.DiffeomorphicMap.warp_endomorphism": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "compose_f",
    "dipy.align.vector_fields.compose_vector_fields_2d",
    "dipy.align.vector_fields.compose_vector_fields_3d"
   ]
  },
  "type": "function"
 },
 "dipy.align.imwarp.DiffeomorphicRegistration": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "dipy.align.imwarp.abc",
    "dipy.utils.six.with_metaclass",
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.align.imwarp.DiffeomorphicRegistration.__init__": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "dipy.align.imwarp.DiffeomorphicRegistration.get_map": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": [
    "dipy.align.imwarp.abc"
   ]
  },
  "type": "function"
 },
 "dipy.align.imwarp.DiffeomorphicRegistration.optimize": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "dipy.align.imwarp.abc"
   ]
  },
  "type": "function"
 },
 "dipy.align.imwarp.DiffeomorphicRegistration.set_level_iters": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.align.imwarp.RegistrationStages": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "dipy.align.imwarp.ScaleSpace": {
  "data": {
   "shadows": "dipy.align.scalespace.ScaleSpace"
  },
  "type": "import"
 },
 "dipy.align.imwarp.SymmetricDiffeomorphicRegistration": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "dipy.align.imwarp.DiffeomorphicRegistration"
   ]
  },
  "type": "class"
 },
 "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.__init__": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.VerbosityLevels.STATUS",
    "dipy.align.imwarp.SymmetricDiffeomorphicRegistration",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.__invert_models": {
  "data": {
   "lineno": 1290,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.__set_no_boundary_displacement": {
  "data": {
   "lineno": 1268
  },
  "type": "function"
 },
 "dipy.align.imwarp.SymmetricDiffeomorphicRegistration._approximate_derivative_direct": {
  "data": {
   "lineno": 1335,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.linalg.solve",
    "numpy.ones_like",
    "numpy.row_stack"
   ]
  },
  "type": "function"
 },
 "dipy.align.imwarp.SymmetricDiffeomorphicRegistration._connect_functions": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "dipy.align.vector_fields.compose_vector_fields_2d",
    "dipy.align.vector_fields.compose_vector_fields_3d",
    "dipy.align.vector_fields.invert_vector_field_fixed_point_2d",
    "dipy.align.vector_fields.invert_vector_field_fixed_point_3d"
   ]
  },
  "type": "function"
 },
 "dipy.align.imwarp.SymmetricDiffeomorphicRegistration._end_optimizer": {
  "data": {
   "lineno": 1137
  },
  "type": "function"
 },
 "dipy.align.imwarp.SymmetricDiffeomorphicRegistration._get_energy_derivative": {
  "data": {
   "lineno": 1364,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "dipy.align.imwarp.SymmetricDiffeomorphicRegistration._init_optimizer": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "dipy.align.VerbosityLevels.DEBUG",
    "dipy.align.VerbosityLevels.DIAGNOSE",
    "dipy.align.VerbosityLevels.STATUS",
    "dipy.align.imwarp.DiffeomorphicMap",
    "dipy.align.imwarp.get_direction_and_spacings",
    "dipy.align.scalespace.ScaleSpace",
    "numpy.eye",
    "numpy.linalg.inv",
    "print",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "dipy.align.imwarp.SymmetricDiffeomorphicRegistration._iterate": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "dipy.align.VerbosityLevels.DIAGNOSE",
    "dipy.align.imwarp.RegistrationStages",
    "len",
    "numpy.array",
    "numpy.inf",
    "numpy.isnan",
    "numpy.sqrt",
    "numpy.sum",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.align.imwarp.SymmetricDiffeomorphicRegistration._optimize": {
  "data": {
   "lineno": 1382,
   "symbols_in_volume": [
    "dipy.align.VerbosityLevels.DIAGNOSE",
    "dipy.align.VerbosityLevels.STATUS",
    "dipy.align.imwarp.RegistrationStages",
    "numpy.inf",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.get_map": {
  "data": {
   "lineno": 995
  },
  "type": "function"
 },
 "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.optimize": {
  "data": {
   "lineno": 1447,
   "symbols_in_volume": [
    "dipy.align.VerbosityLevels.DEBUG",
    "dipy.align.floating",
    "numpy.array",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.update": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "dipy.align.imwarp.VerbosityLevels": {
  "data": {
   "shadows": "dipy.align.VerbosityLevels"
  },
  "type": "import"
 },
 "dipy.align.imwarp.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "dipy.align.imwarp.floating": {
  "data": {
   "shadows": "dipy.align.floating"
  },
  "type": "import"
 },
 "dipy.align.imwarp.get_direction_and_spacings": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "numpy.asarray",
    "numpy.diag",
    "numpy.eye",
    "numpy.float64",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.align.imwarp.mult_aff": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "dipy.align.imwarp.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.align.imwarp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.align.imwarp.npl": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "dipy.align.imwarp.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.align.imwarp.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "dipy.align.imwarp.vfu": {
  "data": {
   "shadows": "dipy.align.vector_fields"
  },
  "type": "import"
 },
 "dipy.align.imwarp.with_metaclass": {
  "data": {
   "shadows": "dipy.utils.six.with_metaclass"
  },
  "type": "import"
 },
 "dipy.align.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.align.reslice": {
  "data": {},
  "type": "module"
 },
 "dipy.align.reslice.Pool": {
  "data": {
   "shadows": "multiprocessing.Pool"
  },
  "type": "import"
 },
 "dipy.align.reslice._affine_transform": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "scipy.ndimage.affine_transform"
   ]
  },
  "type": "function"
 },
 "dipy.align.reslice.affine_transform": {
  "data": {
   "shadows": "scipy.ndimage.affine_transform"
  },
  "type": "import"
 },
 "dipy.align.reslice.cpu_count": {
  "data": {
   "shadows": "multiprocessing.cpu_count"
  },
  "type": "import"
 },
 "dipy.align.reslice.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.align.reslice.reslice": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "dipy.align.reslice._affine_transform",
    "dipy.align.reslice.warnings",
    "enumerate",
    "multiprocessing.Pool",
    "multiprocessing.cpu_count",
    "numpy.array",
    "numpy.diag",
    "numpy.dot",
    "numpy.eye",
    "numpy.round",
    "numpy.zeros",
    "range",
    "scipy.ndimage.affine_transform",
    "tuple"
   ]
  },
  "type": "function"
 },
 "dipy.align.reslice.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "dipy.align.scalespace": {
  "data": {},
  "type": "module"
 },
 "dipy.align.scalespace.IsotropicScaleSpace": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "dipy.align.scalespace.ScaleSpace"
   ]
  },
  "type": "class"
 },
 "dipy.align.scalespace.IsotropicScaleSpace.__init__": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.floating",
    "len",
    "numpy.abs",
    "numpy.append",
    "numpy.argmin",
    "numpy.array",
    "numpy.asarray",
    "numpy.diag",
    "numpy.float64",
    "numpy.int32",
    "numpy.linalg.inv",
    "numpy.ones",
    "numpy.zeros",
    "range",
    "scipy.ndimage.filters.gaussian_filter"
   ]
  },
  "type": "function"
 },
 "dipy.align.scalespace.ScaleSpace": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.align.scalespace.ScaleSpace.__init__": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "dipy.align.floating",
    "len",
    "numpy.append",
    "numpy.array",
    "numpy.asarray",
    "numpy.diag",
    "numpy.int32",
    "numpy.linalg.inv",
    "numpy.min",
    "numpy.ones",
    "numpy.zeros",
    "range",
    "scipy.ndimage.filters.gaussian_filter"
   ]
  },
  "type": "function"
 },
 "dipy.align.scalespace.ScaleSpace._get_attribute": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "dipy.align.scalespace.ScaleSpace.get_affine": {
  "data": {
   "lineno": 253
  },
  "type": "function"
 },
 "dipy.align.scalespace.ScaleSpace.get_affine_inv": {
  "data": {
   "lineno": 273
  },
  "type": "function"
 },
 "dipy.align.scalespace.ScaleSpace.get_domain_shape": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "dipy.align.scalespace.ScaleSpace.get_expand_factors": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "dipy.align.scalespace.ScaleSpace.get_image": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "dipy.align.scalespace.ScaleSpace.get_scaling": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "dipy.align.scalespace.ScaleSpace.get_sigmas": {
  "data": {
   "lineno": 293
  },
  "type": "function"
 },
 "dipy.align.scalespace.ScaleSpace.get_spacing": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "dipy.align.scalespace.ScaleSpace.print_level": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.align.scalespace.filters": {
  "data": {
   "shadows": "scipy.ndimage.filters"
  },
  "type": "import"
 },
 "dipy.align.scalespace.floating": {
  "data": {
   "shadows": "dipy.align.floating"
  },
  "type": "import"
 },
 "dipy.align.scalespace.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.align.scalespace.npl": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "dipy.align.tests": {
  "data": {},
  "type": "module"
 },
 "dipy.align.tests.test_crosscorr": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.align.tests.test_crosscorr.test_cc_factors_2d",
    "dipy.align.tests.test_crosscorr.test_cc_factors_3d",
    "dipy.align.tests.test_crosscorr.test_compute_cc_steps_2d",
    "dipy.align.tests.test_crosscorr.test_compute_cc_steps_3d"
   ]
  },
  "type": "module"
 },
 "dipy.align.tests.test_crosscorr.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_crosscorr.cc": {
  "data": {
   "shadows": "dipy.align.crosscorr"
  },
  "type": "import"
 },
 "dipy.align.tests.test_crosscorr.floating": {
  "data": {
   "shadows": "dipy.align.floating"
  },
  "type": "import"
 },
 "dipy.align.tests.test_crosscorr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.align.tests.test_crosscorr.test_cc_factors_2d": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "dipy.align.crosscorr.precompute_cc_factors_2d",
    "dipy.align.crosscorr.precompute_cc_factors_2d_test",
    "dipy.align.floating",
    "numpy.array",
    "numpy.asarray",
    "numpy.testing.assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_crosscorr.test_cc_factors_3d": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "dipy.align.crosscorr.precompute_cc_factors_3d",
    "dipy.align.crosscorr.precompute_cc_factors_3d_test",
    "dipy.align.floating",
    "numpy.array",
    "numpy.asarray",
    "numpy.testing.assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_crosscorr.test_compute_cc_steps_2d": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "dipy.align.crosscorr.compute_cc_backward_step_2d",
    "dipy.align.crosscorr.compute_cc_forward_step_2d",
    "dipy.align.crosscorr.precompute_cc_factors_2d_test",
    "dipy.align.floating",
    "numpy.array",
    "numpy.asarray",
    "numpy.float64",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.random.ranf",
    "numpy.random.seed",
    "numpy.size",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_crosscorr.test_compute_cc_steps_3d": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "dipy.align.crosscorr.compute_cc_backward_step_3d",
    "dipy.align.crosscorr.compute_cc_forward_step_3d",
    "dipy.align.crosscorr.precompute_cc_factors_3d_test",
    "dipy.align.floating",
    "numpy.array",
    "numpy.asarray",
    "numpy.float64",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.random.ranf",
    "numpy.random.seed",
    "numpy.size",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_expectmax": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.align.tests.test_expectmax.test_compute_em_demons_step_2d",
    "dipy.align.tests.test_expectmax.test_compute_em_demons_step_3d",
    "dipy.align.tests.test_expectmax.test_compute_masked_class_stats_2d",
    "dipy.align.tests.test_expectmax.test_compute_masked_class_stats_3d",
    "dipy.align.tests.test_expectmax.test_quantize_positive_2d",
    "dipy.align.tests.test_expectmax.test_quantize_positive_3d"
   ]
  },
  "type": "module"
 },
 "dipy.align.tests.test_expectmax.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_expectmax.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_expectmax.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_expectmax.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "dipy.align.tests.test_expectmax.em": {
  "data": {
   "shadows": "dipy.align.expectmax"
  },
  "type": "import"
 },
 "dipy.align.tests.test_expectmax.floating": {
  "data": {
   "shadows": "dipy.align.floating"
  },
  "type": "import"
 },
 "dipy.align.tests.test_expectmax.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.align.tests.test_expectmax.test_compute_em_demons_step_2d": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "AssertionError",
    "dipy.align.expectmax.compute_em_demons_step_2d",
    "dipy.align.floating",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty_like",
    "numpy.float64",
    "numpy.inf",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_expectmax.test_compute_em_demons_step_3d": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "AssertionError",
    "dipy.align.expectmax.compute_em_demons_step_3d",
    "dipy.align.floating",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty_like",
    "numpy.float64",
    "numpy.inf",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_expectmax.test_compute_masked_class_stats_2d": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "dipy.align.expectmax.compute_masked_class_stats_2d",
    "dipy.align.floating",
    "numpy.inf",
    "numpy.int32",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.size",
    "numpy.testing.assert_array_almost_equal",
    "range",
    "vars"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_expectmax.test_compute_masked_class_stats_3d": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "dipy.align.expectmax.compute_masked_class_stats_3d",
    "dipy.align.floating",
    "numpy.inf",
    "numpy.int32",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.size",
    "numpy.testing.assert_array_almost_equal",
    "range",
    "vars"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_expectmax.test_quantize_positive_2d": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.expectmax.quantize_positive_2d",
    "dipy.align.floating",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float32",
    "numpy.int32",
    "numpy.linspace",
    "numpy.min",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.random.randint",
    "numpy.random.ranf",
    "numpy.random.seed",
    "numpy.size",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_expectmax.test_quantize_positive_3d": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.expectmax.quantize_positive_3d",
    "dipy.align.floating",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float32",
    "numpy.int32",
    "numpy.linspace",
    "numpy.min",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.random.randint",
    "numpy.random.ranf",
    "numpy.random.seed",
    "numpy.size",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_imaffine": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "dipy.align.tests.test_imaffine.AffineInvalidValuesError": {
  "data": {
   "shadows": "dipy.align.imaffine.AffineInvalidValuesError"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imaffine.AffineInversionError": {
  "data": {
   "shadows": "dipy.align.imaffine.AffineInversionError"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imaffine.AffineMap": {
  "data": {
   "shadows": "dipy.align.imaffine.AffineMap"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imaffine.Transform": {
  "data": {
   "shadows": "dipy.align.transforms.Transform"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imaffine._number_dim_affine_matrix": {
  "data": {
   "shadows": "dipy.align.imaffine._number_dim_affine_matrix"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imaffine.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imaffine.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imaffine.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imaffine.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imaffine.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imaffine.create_affine_transforms": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "dipy.core.geometry.rodrigues_axis_rotation",
    "numpy.array",
    "numpy.cos",
    "numpy.eye",
    "numpy.linalg.inv",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_imaffine.factors": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "dipy.align.tests.test_imaffine.floating": {
  "data": {
   "shadows": "dipy.align.floating"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imaffine.geometry": {
  "data": {
   "shadows": "dipy.core.geometry"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imaffine.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imaffine.imaffine": {
  "data": {
   "shadows": "dipy.align.imaffine"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imaffine.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imaffine.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imaffine.npl": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imaffine.regtransforms": {
  "data": {
   "shadows": "dipy.align.transforms.regtransforms"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imaffine.rt": {
  "data": {
   "shadows": "dipy.viz.regtools"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imaffine.sample_domain_regular": {
  "data": {
   "shadows": "dipy.align.tests.test_parzenhist.sample_domain_regular"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imaffine.setup_random_transform": {
  "data": {
   "shadows": "dipy.align.tests.test_parzenhist.setup_random_transform"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imaffine.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imaffine.test_MIMetric_invalid_params": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "dipy.align.imaffine.MutualInformationMetric",
    "dipy.align.transforms.regtransforms",
    "numpy.inf",
    "numpy.isinf",
    "numpy.nan",
    "numpy.random.rand",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_imaffine.test_affine_map": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.imaffine.AffineInvalidValuesError",
    "dipy.align.imaffine.AffineInversionError",
    "dipy.align.imaffine.AffineMap",
    "dipy.align.imaffine._number_dim_affine_matrix",
    "dipy.align.tests.test_imaffine.create_affine_transforms",
    "dipy.align.vector_fields.create_circle",
    "dipy.align.vector_fields.create_sphere",
    "dipy.align.vector_fields.transform_2d_affine",
    "dipy.align.vector_fields.transform_2d_affine_nn",
    "dipy.align.vector_fields.transform_3d_affine",
    "dipy.align.vector_fields.transform_3d_affine_nn",
    "format",
    "id",
    "numpy.array",
    "numpy.eye",
    "numpy.float64",
    "numpy.inf",
    "numpy.int32",
    "numpy.linalg.inv",
    "numpy.nan",
    "numpy.pi",
    "numpy.random.random",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros",
    "oracle_linear",
    "oracle_nn",
    "range",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_imaffine.test_affreg_all_transforms": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.imaffine.AffineRegistration",
    "dipy.align.imaffine.MutualInformationMetric",
    "dipy.align.tests.test_imaffine.factors",
    "dipy.align.tests.test_parzenhist.setup_random_transform",
    "dipy.align.transforms.regtransforms",
    "numpy.abs",
    "numpy.testing.assert_raises",
    "print",
    "sorted"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_imaffine.test_affreg_defaults": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "dipy.align.imaffine.AffineRegistration",
    "dipy.align.tests.test_imaffine.factors",
    "dipy.align.tests.test_parzenhist.setup_random_transform",
    "dipy.align.transforms.regtransforms",
    "numpy.abs",
    "numpy.eye",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_imaffine.test_mi_gradient": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "dipy.align.imaffine.MutualInformationMetric",
    "dipy.align.tests.test_imaffine.factors",
    "dipy.align.tests.test_parzenhist.setup_random_transform",
    "dipy.align.transforms.regtransforms",
    "numpy.empty",
    "numpy.float64",
    "numpy.linalg.norm",
    "numpy.random.randn",
    "numpy.random.seed",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_imaffine.test_transform_centers_of_mass_3d": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "dipy.align.imaffine.transform_centers_of_mass",
    "dipy.align.vector_fields.create_sphere",
    "dipy.core.geometry.rodrigues_axis_rotation",
    "numpy.array",
    "numpy.eye",
    "numpy.linalg.inv",
    "numpy.pi",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "scipy"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_imaffine.test_transform_geometric_centers_3d": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "dipy.align.imaffine.transform_geometric_centers",
    "dipy.core.geometry.rodrigues_axis_rotation",
    "numpy.array",
    "numpy.eye",
    "numpy.float64",
    "numpy.linalg.inv",
    "numpy.ndarray",
    "numpy.pi",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "tuple"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_imaffine.test_transform_origins_3d": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "dipy.align.imaffine.transform_origins",
    "dipy.core.geometry.rodrigues_axis_rotation",
    "numpy.array",
    "numpy.eye",
    "numpy.linalg.inv",
    "numpy.ndarray",
    "numpy.pi",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_imaffine.vf": {
  "data": {
   "shadows": "dipy.align.vector_fields"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imwarp": {
  "data": {},
  "type": "module"
 },
 "dipy.align.tests.test_imwarp.DiffeomorphicMap": {
  "data": {
   "shadows": "dipy.align.imwarp.DiffeomorphicMap"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imwarp.VerbosityLevels": {
  "data": {
   "shadows": "dipy.align.VerbosityLevels"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imwarp.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imwarp.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imwarp.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imwarp.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imwarp.eulerangles": {
  "data": {
   "shadows": "nibabel.eulerangles"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imwarp.floating": {
  "data": {
   "shadows": "dipy.align.floating"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imwarp.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imwarp.get_synthetic_warped_circle": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "dipy.align.floating",
    "dipy.align.imwarp.DiffeomorphicMap",
    "dipy.align.vector_fields.create_harmonic_fields_2d",
    "dipy.data.get_data",
    "numpy.asarray",
    "numpy.load",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_imwarp.get_warped_stacked_image": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "dipy.align.floating",
    "dipy.align.imwarp.DiffeomorphicMap",
    "dipy.align.vector_fields.create_harmonic_fields_2d",
    "numpy.asarray",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_imwarp.imwarp": {
  "data": {
   "shadows": "dipy.align.imwarp"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imwarp.metrics": {
  "data": {
   "shadows": "dipy.align.metrics"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imwarp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imwarp.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.align.tests.test_imwarp.simple_callback": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "dipy.align.imwarp.RegistrationStages.INIT_END",
    "dipy.align.imwarp.RegistrationStages.INIT_START",
    "dipy.align.imwarp.RegistrationStages.ITER_END",
    "dipy.align.imwarp.RegistrationStages.ITER_START",
    "dipy.align.imwarp.RegistrationStages.OPT_END",
    "dipy.align.imwarp.RegistrationStages.OPT_START",
    "dipy.align.imwarp.RegistrationStages.SCALE_END",
    "dipy.align.imwarp.RegistrationStages.SCALE_START"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_imwarp.test_cc_2d": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "dipy.align.VerbosityLevels.DEBUG",
    "dipy.align.imwarp.SymmetricDiffeomorphicRegistration",
    "dipy.align.metrics.CCMetric",
    "dipy.align.tests.test_imwarp.get_warped_stacked_image",
    "dipy.data.get_data",
    "numpy.load",
    "numpy.sum",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_imwarp.test_cc_3d": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "dipy.align.VerbosityLevels.DEBUG",
    "dipy.align.imwarp.SymmetricDiffeomorphicRegistration",
    "dipy.align.metrics.CCMetric",
    "dipy.align.tests.test_imwarp.get_warped_stacked_image",
    "dipy.data.get_data",
    "numpy.load",
    "numpy.sum",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_imwarp.test_diffeomorphic_map_2d": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.floating",
    "dipy.align.imwarp.DiffeomorphicMap",
    "dipy.align.vector_fields.create_random_displacement_2d",
    "numpy.array",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.linalg.inv",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.size",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "type"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_imwarp.test_diffeomorphic_map_simplification_2d": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "dipy.align.floating",
    "dipy.align.imwarp.DiffeomorphicMap",
    "dipy.align.imwarp.mult_aff",
    "dipy.align.vector_fields.create_circle",
    "dipy.align.vector_fields.create_harmonic_fields_2d",
    "numpy.array",
    "numpy.eye",
    "numpy.linalg.inv",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_imwarp.test_diffeomorphic_map_simplification_3d": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "dipy.align.floating",
    "dipy.align.imwarp.DiffeomorphicMap",
    "dipy.align.imwarp.mult_aff",
    "dipy.align.vector_fields.create_harmonic_fields_3d",
    "dipy.align.vector_fields.create_sphere",
    "numpy.array",
    "numpy.eye",
    "numpy.linalg.inv",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_imwarp.test_em_2d_demons": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "dipy.align.VerbosityLevels.DEBUG",
    "dipy.align.imwarp.SymmetricDiffeomorphicRegistration",
    "dipy.align.metrics.EMMetric",
    "dipy.align.tests.test_imwarp.get_warped_stacked_image",
    "dipy.data.get_data",
    "numpy.load",
    "numpy.sum",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_imwarp.test_em_2d_gauss_newton": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "dipy.align.VerbosityLevels.DEBUG",
    "dipy.align.imwarp.SymmetricDiffeomorphicRegistration",
    "dipy.align.metrics.EMMetric",
    "dipy.align.tests.test_imwarp.get_warped_stacked_image",
    "dipy.data.get_data",
    "numpy.load",
    "numpy.sum",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_imwarp.test_em_3d_demons": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "dipy.align.VerbosityLevels.DEBUG",
    "dipy.align.imwarp.SymmetricDiffeomorphicRegistration",
    "dipy.align.metrics.EMMetric",
    "dipy.align.tests.test_imwarp.get_warped_stacked_image",
    "dipy.data.get_data",
    "numpy.load",
    "numpy.sum",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_imwarp.test_em_3d_gauss_newton": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "dipy.align.VerbosityLevels.DEBUG",
    "dipy.align.imwarp.SymmetricDiffeomorphicRegistration",
    "dipy.align.metrics.EMMetric",
    "dipy.align.tests.test_imwarp.get_warped_stacked_image",
    "dipy.data.get_data",
    "numpy.load",
    "numpy.sum",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_imwarp.test_get_direction_and_spacings": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "dipy.align.imwarp.get_direction_and_spacings",
    "nibabel.eulerangles.euler2mat",
    "numpy.array",
    "numpy.diag",
    "numpy.eye",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_imwarp.test_mult_aff": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "dipy.align.imwarp.mult_aff",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_imwarp.test_optimizer_exceptions": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.imwarp.SymmetricDiffeomorphicRegistration",
    "dipy.align.metrics.SSDMetric",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_imwarp.test_ssd_2d_demons": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "dipy.align.VerbosityLevels.DEBUG",
    "dipy.align.floating",
    "dipy.align.imwarp.SymmetricDiffeomorphicRegistration",
    "dipy.align.metrics.SSDMetric",
    "dipy.align.tests.test_imwarp.simple_callback",
    "dipy.data.get_data",
    "numpy.array",
    "numpy.load",
    "numpy.sum",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_imwarp.test_ssd_2d_gauss_newton": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "dipy.align.VerbosityLevels.DEBUG",
    "dipy.align.floating",
    "dipy.align.imwarp.SymmetricDiffeomorphicRegistration",
    "dipy.align.metrics.SSDMetric",
    "dipy.data.get_data",
    "id",
    "numpy.array",
    "numpy.eye",
    "numpy.load",
    "numpy.sum",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_imwarp.test_ssd_3d_demons": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "dipy.align.VerbosityLevels.DEBUG",
    "dipy.align.imwarp.SymmetricDiffeomorphicRegistration",
    "dipy.align.metrics.SSDMetric",
    "dipy.align.tests.test_imwarp.get_synthetic_warped_circle",
    "numpy.sum",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_imwarp.test_ssd_3d_gauss_newton": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "dipy.align.VerbosityLevels.DEBUG",
    "dipy.align.imwarp.SymmetricDiffeomorphicRegistration",
    "dipy.align.metrics.SSDMetric",
    "dipy.align.tests.test_imwarp.get_synthetic_warped_circle",
    "numpy.sum",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_imwarp.vfu": {
  "data": {
   "shadows": "dipy.align.vector_fields"
  },
  "type": "import"
 },
 "dipy.align.tests.test_metrics": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.align.tests.test_metrics.test_EMMetric_image_dynamics",
    "dipy.align.tests.test_metrics.test_em_demons_step_2d",
    "dipy.align.tests.test_metrics.test_em_demons_step_3d",
    "dipy.align.tests.test_metrics.test_exceptions"
   ]
  },
  "type": "module"
 },
 "dipy.align.tests.test_metrics.CCMetric": {
  "data": {
   "shadows": "dipy.align.metrics.CCMetric"
  },
  "type": "import"
 },
 "dipy.align.tests.test_metrics.EMMetric": {
  "data": {
   "shadows": "dipy.align.metrics.EMMetric"
  },
  "type": "import"
 },
 "dipy.align.tests.test_metrics.SSDMetric": {
  "data": {
   "shadows": "dipy.align.metrics.SSDMetric"
  },
  "type": "import"
 },
 "dipy.align.tests.test_metrics.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_metrics.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_metrics.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "dipy.align.tests.test_metrics.floating": {
  "data": {
   "shadows": "dipy.align.floating"
  },
  "type": "import"
 },
 "dipy.align.tests.test_metrics.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "dipy.align.tests.test_metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.align.tests.test_metrics.test_EMMetric_image_dynamics": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "dipy.align.floating",
    "dipy.align.metrics.EMMetric",
    "numpy.int32",
    "numpy.ndarray",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.size",
    "numpy.testing.assert_array_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_metrics.test_em_demons_step_2d": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "dipy.align.floating",
    "dipy.align.metrics.EMMetric",
    "numpy.array",
    "numpy.asarray",
    "numpy.float64",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "range",
    "scipy.ndimage.filters.gaussian_filter"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_metrics.test_em_demons_step_3d": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "dipy.align.floating",
    "dipy.align.metrics.EMMetric",
    "numpy.array",
    "numpy.asarray",
    "numpy.float64",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "range",
    "scipy.ndimage.filters.gaussian_filter"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_metrics.test_exceptions": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.metrics.CCMetric",
    "dipy.align.metrics.EMMetric",
    "dipy.align.metrics.SSDMetric",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_parzenhist": {
  "data": {},
  "type": "module"
 },
 "dipy.align.tests.test_parzenhist.ParzenJointHistogram": {
  "data": {
   "shadows": "dipy.align.parzenhist.ParzenJointHistogram"
  },
  "type": "import"
 },
 "dipy.align.tests.test_parzenhist.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_parzenhist.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_parzenhist.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_parzenhist.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_parzenhist.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "dipy.align.tests.test_parzenhist.create_random_image_pair": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "functools.reduce",
    "numpy.float64",
    "numpy.random.randint",
    "numpy.random.seed",
    "operator.mul",
    "tuple"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_parzenhist.cubic_spline": {
  "data": {
   "shadows": "dipy.align.parzenhist.cubic_spline"
  },
  "type": "import"
 },
 "dipy.align.tests.test_parzenhist.cubic_spline_derivative": {
  "data": {
   "shadows": "dipy.align.parzenhist.cubic_spline_derivative"
  },
  "type": "import"
 },
 "dipy.align.tests.test_parzenhist.factors": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "dipy.align.tests.test_parzenhist.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.align.tests.test_parzenhist.mul": {
  "data": {
   "shadows": "operator.mul"
  },
  "type": "import"
 },
 "dipy.align.tests.test_parzenhist.ndindex": {
  "data": {
   "shadows": "dipy.core.ndindex.ndindex"
  },
  "type": "import"
 },
 "dipy.align.tests.test_parzenhist.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.align.tests.test_parzenhist.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "dipy.align.tests.test_parzenhist.regtransforms": {
  "data": {
   "shadows": "dipy.align.transforms.regtransforms"
  },
  "type": "import"
 },
 "dipy.align.tests.test_parzenhist.sample_domain_regular": {
  "data": {
   "shadows": "dipy.align.parzenhist.sample_domain_regular"
  },
  "type": "import"
 },
 "dipy.align.tests.test_parzenhist.setup_random_transform": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.vector_fields.transform_2d_affine",
    "dipy.align.vector_fields.transform_3d_affine",
    "dipy.data.get_data",
    "numpy.array",
    "numpy.eye",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.load",
    "numpy.ones_like",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.zeros",
    "scipy.ndimage.filters.gaussian_filter",
    "transform_method"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_parzenhist.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "dipy.align.tests.test_parzenhist.test_cubic_spline": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "dipy.align.parzenhist.cubic_spline",
    "numpy.abs",
    "numpy.array",
    "numpy.float64",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_parzenhist.test_cubic_spline_derivative": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "dipy.align.parzenhist.cubic_spline",
    "dipy.align.parzenhist.cubic_spline_derivative",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_parzenhist.test_exceptions": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.parzenhist.ParzenJointHistogram",
    "dipy.align.transforms.regtransforms",
    "len",
    "numpy.empty",
    "numpy.eye",
    "numpy.float64",
    "numpy.int32",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_parzenhist.test_joint_pdf_gradients_dense": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "dipy.align.parzenhist.ParzenJointHistogram",
    "dipy.align.tests.test_parzenhist.factors",
    "dipy.align.tests.test_parzenhist.setup_random_transform",
    "dipy.align.transforms.regtransforms",
    "dipy.align.vector_fields.gradient",
    "dipy.align.vector_fields.transform_2d_affine",
    "dipy.align.vector_fields.transform_3d_affine",
    "id",
    "numpy.array",
    "numpy.copy",
    "numpy.empty_like",
    "numpy.eye",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.ones",
    "numpy.sqrt",
    "range",
    "sorted",
    "transform_method"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_parzenhist.test_joint_pdf_gradients_sparse": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "dipy.align.parzenhist.ParzenJointHistogram",
    "dipy.align.parzenhist.sample_domain_regular",
    "dipy.align.tests.test_parzenhist.factors",
    "dipy.align.tests.test_parzenhist.setup_random_transform",
    "dipy.align.transforms.regtransforms",
    "dipy.align.vector_fields.interpolate_scalar_2d",
    "dipy.align.vector_fields.interpolate_scalar_3d",
    "dipy.align.vector_fields.sparse_gradient",
    "interp_method",
    "numpy.array",
    "numpy.copy",
    "numpy.empty_like",
    "numpy.float32",
    "numpy.float64",
    "numpy.hstack",
    "numpy.int32",
    "numpy.linalg.inv",
    "numpy.ones",
    "numpy.sqrt",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_parzenhist.test_parzen_densities": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "dipy.align.parzenhist.ParzenJointHistogram",
    "dipy.align.parzenhist.cubic_spline",
    "dipy.align.tests.test_parzenhist.create_random_image_pair",
    "dipy.core.ndindex.ndindex",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_parzenhist.test_parzen_joint_histogram": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "dipy.align.parzenhist.ParzenJointHistogram",
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_parzenhist.test_sample_domain_regular": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.parzenhist.sample_domain_regular",
    "len",
    "numpy.array",
    "numpy.eye",
    "numpy.int32",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "set"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_parzenhist.vf": {
  "data": {
   "shadows": "dipy.align.vector_fields"
  },
  "type": "import"
 },
 "dipy.align.tests.test_reslice": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.align.tests.test_reslice.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "dipy.align.tests.test_reslice.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_reslice.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_reslice.estimate_sigma": {
  "data": {
   "shadows": "dipy.denoise.noise_estimate.estimate_sigma"
  },
  "type": "import"
 },
 "dipy.align.tests.test_reslice.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.align.tests.test_reslice.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.align.tests.test_reslice.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.align.tests.test_reslice.reslice": {
  "data": {
   "shadows": "dipy.align.reslice.reslice"
  },
  "type": "import"
 },
 "dipy.align.tests.test_reslice.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.align.tests.test_reslice.test_resample": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "dipy.align.reslice.reslice",
    "dipy.data.get_data",
    "dipy.denoise.noise_estimate.estimate_sigma",
    "nibabel.Nifti1Image",
    "nibabel.load",
    "numpy.all",
    "numpy.array",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_scalespace": {
  "data": {},
  "type": "module"
 },
 "dipy.align.tests.test_scalespace.IsotropicScaleSpace": {
  "data": {
   "shadows": "dipy.align.scalespace.IsotropicScaleSpace"
  },
  "type": "import"
 },
 "dipy.align.tests.test_scalespace.ScaleSpace": {
  "data": {
   "shadows": "dipy.align.scalespace.ScaleSpace"
  },
  "type": "import"
 },
 "dipy.align.tests.test_scalespace.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_scalespace.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_scalespace.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_scalespace.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_scalespace.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "dipy.align.tests.test_scalespace.floating": {
  "data": {
   "shadows": "dipy.align.floating"
  },
  "type": "import"
 },
 "dipy.align.tests.test_scalespace.get_direction_and_spacings": {
  "data": {
   "shadows": "dipy.align.imwarp.get_direction_and_spacings"
  },
  "type": "import"
 },
 "dipy.align.tests.test_scalespace.get_synthetic_warped_circle": {
  "data": {
   "shadows": "dipy.align.tests.test_imwarp.get_synthetic_warped_circle"
  },
  "type": "import"
 },
 "dipy.align.tests.test_scalespace.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.align.tests.test_scalespace.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "dipy.align.tests.test_scalespace.test_scale_space": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "dipy.align.imwarp.get_direction_and_spacings",
    "dipy.align.scalespace.IsotropicScaleSpace",
    "dipy.align.scalespace.ScaleSpace",
    "dipy.align.tests.test_imwarp.get_synthetic_warped_circle",
    "numpy.array",
    "numpy.diag",
    "numpy.eye",
    "numpy.testing.assert_array_almost_equal",
    "print",
    "range",
    "scipy.ndimage.filters.gaussian_filter",
    "test_class",
    "tuple"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_scalespace.test_scale_space_exceptions": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.floating",
    "dipy.align.scalespace.ScaleSpace",
    "numpy.int32",
    "numpy.ndarray",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.size",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_streamlinear": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.align.tests.test_streamlinear.BundleMinDistanceMatrixMetric": {
  "data": {
   "shadows": "dipy.align.streamlinear.BundleMinDistanceMatrixMetric"
  },
  "type": "import"
 },
 "dipy.align.tests.test_streamlinear.BundleMinDistanceMetric": {
  "data": {
   "shadows": "dipy.align.streamlinear.BundleMinDistanceMetric"
  },
  "type": "import"
 },
 "dipy.align.tests.test_streamlinear.BundleSumDistanceMatrixMetric": {
  "data": {
   "shadows": "dipy.align.streamlinear.BundleSumDistanceMatrixMetric"
  },
  "type": "import"
 },
 "dipy.align.tests.test_streamlinear.SCIPY_LESS_0_12": {
  "data": {
   "shadows": "dipy.core.optimize.SCIPY_LESS_0_12"
  },
  "type": "import"
 },
 "dipy.align.tests.test_streamlinear.StreamlineDistanceMetric": {
  "data": {
   "shadows": "dipy.align.streamlinear.StreamlineDistanceMetric"
  },
  "type": "import"
 },
 "dipy.align.tests.test_streamlinear.StreamlineLinearRegistration": {
  "data": {
   "shadows": "dipy.align.streamlinear.StreamlineLinearRegistration"
  },
  "type": "import"
 },
 "dipy.align.tests.test_streamlinear._bundle_minimum_distance": {
  "data": {
   "shadows": "dipy.align.bundlemin._bundle_minimum_distance"
  },
  "type": "import"
 },
 "dipy.align.tests.test_streamlinear._bundle_minimum_distance_matrix": {
  "data": {
   "shadows": "dipy.align.bundlemin._bundle_minimum_distance_matrix"
  },
  "type": "import"
 },
 "dipy.align.tests.test_streamlinear.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "dipy.align.tests.test_streamlinear.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_streamlinear.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_streamlinear.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_streamlinear.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_streamlinear.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "dipy.align.tests.test_streamlinear.center_streamlines": {
  "data": {
   "shadows": "dipy.tracking.streamline.center_streamlines"
  },
  "type": "import"
 },
 "dipy.align.tests.test_streamlinear.compose_matrix": {
  "data": {
   "shadows": "dipy.core.geometry.compose_matrix"
  },
  "type": "import"
 },
 "dipy.align.tests.test_streamlinear.compose_matrix44": {
  "data": {
   "shadows": "dipy.align.streamlinear.compose_matrix44"
  },
  "type": "import"
 },
 "dipy.align.tests.test_streamlinear.decompose_matrix44": {
  "data": {
   "shadows": "dipy.align.streamlinear.decompose_matrix44"
  },
  "type": "import"
 },
 "dipy.align.tests.test_streamlinear.distance_matrix_mdf": {
  "data": {
   "shadows": "dipy.align.bundlemin.distance_matrix_mdf"
  },
  "type": "import"
 },
 "dipy.align.tests.test_streamlinear.evaluate_convergence": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_streamlinear.fornix_streamlines": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "dipy.data.get_data",
    "dipy.tracking.streamline.set_number_of_points",
    "nibabel.trackvis.read"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_streamlinear.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.align.tests.test_streamlinear.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.align.tests.test_streamlinear.relist_streamlines": {
  "data": {
   "shadows": "dipy.tracking.streamline.relist_streamlines"
  },
  "type": "import"
 },
 "dipy.align.tests.test_streamlinear.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.align.tests.test_streamlinear.set_number_of_points": {
  "data": {
   "shadows": "dipy.tracking.streamline.set_number_of_points"
  },
  "type": "import"
 },
 "dipy.align.tests.test_streamlinear.simulated_bundle": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "dipy.tracking.streamline.set_number_of_points",
    "numpy.cos",
    "numpy.linspace",
    "numpy.ones",
    "numpy.vstack",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_streamlinear.test_abstract_metric_class": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "TypeError",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_streamlinear.test_abstract_metric_class.DummyStreamlineMetric": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "dipy.align.streamlinear.StreamlineDistanceMetric"
   ]
  },
  "type": "class"
 },
 "dipy.align.tests.test_streamlinear.test_abstract_metric_class.DummyStreamlineMetric.test": {
  "data": {
   "lineno": 313
  },
  "type": "function"
 },
 "dipy.align.tests.test_streamlinear.test_affine_real_bundles": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "dipy.align.streamlinear.BundleMinDistanceMatrixMetric",
    "dipy.align.streamlinear.StreamlineLinearRegistration",
    "dipy.align.streamlinear.compose_matrix44",
    "dipy.align.tests.test_streamlinear.evaluate_convergence",
    "dipy.align.tests.test_streamlinear.fornix_streamlines",
    "dipy.tracking.streamline.center_streamlines",
    "dipy.tracking.streamline.transform_streamlines",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_streamlinear.test_cascade_of_optimizations_and_threading": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "dipy.align.streamlinear.StreamlineLinearRegistration",
    "dipy.align.streamlinear.compose_matrix44",
    "dipy.data.two_cingulum_bundles",
    "dipy.tracking.streamline.set_number_of_points",
    "dipy.tracking.streamline.transform_streamlines",
    "numpy.array",
    "numpy.testing.assert_",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_streamlinear.test_compose_decompose_matrix44": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.streamlinear.compose_matrix44",
    "dipy.align.streamlinear.decompose_matrix44",
    "numpy.random.rand",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_streamlinear.test_efficient_bmd": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "dipy.align.bundlemin._bundle_minimum_distance",
    "dipy.align.bundlemin._bundle_minimum_distance_matrix",
    "dipy.align.bundlemin.distance_matrix_mdf",
    "dipy.tracking.streamline.relist_streamlines",
    "dipy.tracking.streamline.unlist_streamlines",
    "float",
    "len",
    "numpy.array",
    "numpy.diag",
    "numpy.double",
    "numpy.min",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_streamlinear.test_evolution_of_previous_iterations": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "dipy.align.streamlinear.StreamlineLinearRegistration",
    "dipy.align.tests.test_streamlinear.fornix_streamlines",
    "dipy.core.optimize.SCIPY_LESS_0_12",
    "len",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_streamlinear.test_from_to_rigid": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "dipy.align.streamlinear.compose_matrix44",
    "dipy.align.streamlinear.decompose_matrix44",
    "numpy.array",
    "numpy.eye",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_streamlinear.test_matrix44": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.streamlinear.compose_matrix44",
    "numpy.ones",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_streamlinear.test_min_vs_min_fast_precision": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "dipy.align.streamlinear.BundleMinDistanceMatrixMetric",
    "dipy.align.streamlinear.BundleMinDistanceMetric",
    "dipy.align.tests.test_streamlinear.fornix_streamlines",
    "numpy.testing.assert_equal",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_streamlinear.test_openmp_locks": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "dipy.align.bundlemin._bundle_minimum_distance",
    "dipy.align.bundlemin._bundle_minimum_distance_matrix",
    "dipy.tracking.streamline.unlist_streamlines",
    "float",
    "len",
    "numpy.min",
    "numpy.random.rand",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_streamlinear.test_rigid_parallel_lines": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "dipy.align.streamlinear.BundleSumDistanceMatrixMetric",
    "dipy.align.streamlinear.StreamlineLinearRegistration",
    "dipy.align.streamlinear.compose_matrix44",
    "dipy.align.tests.test_streamlinear.evaluate_convergence",
    "dipy.align.tests.test_streamlinear.simulated_bundle",
    "dipy.tracking.streamline.center_streamlines",
    "dipy.tracking.streamline.transform_streamlines",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_streamlinear.test_rigid_partial_real_bundles": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "dipy.align.streamlinear.StreamlineLinearRegistration",
    "dipy.align.tests.test_streamlinear.fornix_streamlines",
    "dipy.core.geometry.compose_matrix",
    "dipy.tracking.streamline.center_streamlines",
    "dipy.tracking.streamline.set_number_of_points",
    "dipy.tracking.streamline.transform_streamlines",
    "float",
    "numpy.array",
    "numpy.concatenate",
    "numpy.deg2rad",
    "numpy.int",
    "numpy.logical_and",
    "numpy.round",
    "numpy.sum",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_streamlinear.test_rigid_real_bundles": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.streamlinear.BundleMinDistanceMatrixMetric",
    "dipy.align.streamlinear.BundleSumDistanceMatrixMetric",
    "dipy.align.streamlinear.StreamlineLinearRegistration",
    "dipy.align.streamlinear.compose_matrix44",
    "dipy.align.tests.test_streamlinear.evaluate_convergence",
    "dipy.align.tests.test_streamlinear.fornix_streamlines",
    "dipy.tracking.streamline.center_streamlines",
    "dipy.tracking.streamline.transform_streamlines",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_streamlinear.test_same_number_of_points": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.streamlinear.StreamlineLinearRegistration",
    "numpy.random.rand",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_streamlinear.test_similarity_real_bundles": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "dipy.align.streamlinear.BundleMinDistanceMatrixMetric",
    "dipy.align.streamlinear.StreamlineLinearRegistration",
    "dipy.align.streamlinear.compose_matrix44",
    "dipy.align.tests.test_streamlinear.evaluate_convergence",
    "dipy.align.tests.test_streamlinear.fornix_streamlines",
    "dipy.tracking.streamline.center_streamlines",
    "dipy.tracking.streamline.transform_streamlines",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_streamlinear.test_stream_rigid": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "dipy.align.streamlinear.StreamlineLinearRegistration",
    "dipy.align.streamlinear.compose_matrix44",
    "dipy.align.tests.test_streamlinear.fornix_streamlines",
    "dipy.tracking.streamline.center_streamlines",
    "dipy.tracking.streamline.transform_streamlines",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_streamlinear.test_vectorize_streamlines": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "dipy.data.two_cingulum_bundles",
    "dipy.tracking.streamline.set_number_of_points",
    "numpy.all",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_streamlinear.test_x0_input": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.streamlinear.StreamlineLinearRegistration",
    "enumerate",
    "numpy.array",
    "numpy.random.rand",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_streamlinear.transform_streamlines": {
  "data": {
   "shadows": "dipy.tracking.streamline.transform_streamlines"
  },
  "type": "import"
 },
 "dipy.align.tests.test_streamlinear.tv": {
  "data": {
   "shadows": "nibabel.trackvis"
  },
  "type": "import"
 },
 "dipy.align.tests.test_streamlinear.two_cingulum_bundles": {
  "data": {
   "shadows": "dipy.data.two_cingulum_bundles"
  },
  "type": "import"
 },
 "dipy.align.tests.test_streamlinear.unlist_streamlines": {
  "data": {
   "shadows": "dipy.tracking.streamline.unlist_streamlines"
  },
  "type": "import"
 },
 "dipy.align.tests.test_sumsqdiff": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.align.tests.test_sumsqdiff.test_compute_energy_ssd_2d",
    "dipy.align.tests.test_sumsqdiff.test_compute_energy_ssd_3d",
    "dipy.align.tests.test_sumsqdiff.test_compute_residual_displacement_field_ssd_2d",
    "dipy.align.tests.test_sumsqdiff.test_compute_residual_displacement_field_ssd_3d",
    "dipy.align.tests.test_sumsqdiff.test_compute_ssd_demons_step_2d",
    "dipy.align.tests.test_sumsqdiff.test_compute_ssd_demons_step_3d"
   ]
  },
  "type": "module"
 },
 "dipy.align.tests.test_sumsqdiff.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "dipy.align.tests.test_sumsqdiff.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_sumsqdiff.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_sumsqdiff.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_sumsqdiff.floating": {
  "data": {
   "shadows": "dipy.align.floating"
  },
  "type": "import"
 },
 "dipy.align.tests.test_sumsqdiff.iterate_residual_field_ssd_2d": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.isinf",
    "numpy.linalg.det",
    "numpy.linalg.solve",
    "numpy.outer",
    "numpy.sum",
    "numpy.zeros",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_sumsqdiff.iterate_residual_field_ssd_3d": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.isinf",
    "numpy.linalg.linalg.LinAlgError",
    "numpy.linalg.solve",
    "numpy.ndarray",
    "numpy.outer",
    "numpy.sum",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_sumsqdiff.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.align.tests.test_sumsqdiff.ssd": {
  "data": {
   "shadows": "dipy.align.sumsqdiff"
  },
  "type": "import"
 },
 "dipy.align.tests.test_sumsqdiff.test_compute_energy_ssd_2d": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "dipy.align.floating",
    "dipy.align.sumsqdiff.compute_energy_ssd_2d",
    "numpy.array",
    "numpy.asarray",
    "numpy.float64",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_sumsqdiff.test_compute_energy_ssd_3d": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "dipy.align.floating",
    "dipy.align.sumsqdiff.compute_energy_ssd_3d",
    "numpy.array",
    "numpy.asarray",
    "numpy.float64",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_sumsqdiff.test_compute_residual_displacement_field_ssd_2d": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "dipy.align.floating",
    "dipy.align.sumsqdiff.compute_residual_displacement_field_ssd_2d",
    "dipy.align.sumsqdiff.iterate_residual_displacement_field_ssd_2d",
    "dipy.align.tests.test_sumsqdiff.iterate_residual_field_ssd_2d",
    "iut",
    "numpy.array",
    "numpy.asarray",
    "numpy.float64",
    "numpy.inf",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.random.ranf",
    "numpy.random.seed",
    "numpy.size",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_sumsqdiff.test_compute_residual_displacement_field_ssd_3d": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "dipy.align.floating",
    "dipy.align.sumsqdiff.compute_residual_displacement_field_ssd_3d",
    "dipy.align.sumsqdiff.iterate_residual_displacement_field_ssd_3d",
    "dipy.align.tests.test_sumsqdiff.iterate_residual_field_ssd_3d",
    "iut",
    "numpy.array",
    "numpy.asarray",
    "numpy.float64",
    "numpy.inf",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.random.ranf",
    "numpy.random.seed",
    "numpy.size",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_sumsqdiff.test_compute_ssd_demons_step_2d": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "dipy.align.floating",
    "dipy.align.sumsqdiff.compute_ssd_demons_step_2d",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty_like",
    "numpy.float64",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.random.randint",
    "numpy.random.ranf",
    "numpy.random.seed",
    "numpy.size",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_sumsqdiff.test_compute_ssd_demons_step_3d": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "dipy.align.floating",
    "dipy.align.sumsqdiff.compute_ssd_demons_step_3d",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty_like",
    "numpy.float64",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.random.randint",
    "numpy.random.ranf",
    "numpy.random.seed",
    "numpy.size",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_sumsqdiff.test_solve_2d_symmetric_positive_definite": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "dipy.align.sumsqdiff.solve_2d_symmetric_positive_definite",
    "numpy.array",
    "numpy.linalg.det",
    "numpy.linalg.solve",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_sumsqdiff.test_solve_3d_symmetric_positive_definite": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "dipy.align.sumsqdiff.solve_3d_symmetric_positive_definite",
    "numpy.array",
    "numpy.eye",
    "numpy.linalg.solve",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_transforms": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.align.tests.test_transforms.test_identity_parameters",
    "dipy.align.tests.test_transforms.test_invalid_transform",
    "dipy.align.tests.test_transforms.test_jacobian_functions",
    "dipy.align.tests.test_transforms.test_number_of_parameters",
    "dipy.align.tests.test_transforms.test_param_to_matrix_2d",
    "dipy.align.tests.test_transforms.test_param_to_matrix_3d"
   ]
  },
  "type": "module"
 },
 "dipy.align.tests.test_transforms.Transform": {
  "data": {
   "shadows": "dipy.align.transforms.Transform"
  },
  "type": "import"
 },
 "dipy.align.tests.test_transforms.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_transforms.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_transforms.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_transforms.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_transforms.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "dipy.align.tests.test_transforms.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.align.tests.test_transforms.regtransforms": {
  "data": {
   "shadows": "dipy.align.transforms.regtransforms"
  },
  "type": "import"
 },
 "dipy.align.tests.test_transforms.test_identity_parameters": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "dipy.align.transforms.regtransforms.values",
    "numpy.eye",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_transforms.test_invalid_transform": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.transforms.Transform",
    "numpy.ndarray",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_transforms.test_jacobian_functions": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.transforms.regtransforms.values",
    "numpy.array",
    "numpy.empty",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_transforms.test_number_of_parameters": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "dipy.align.transforms.regtransforms.items",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_transforms.test_param_to_matrix_2d": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.transforms.regtransforms",
    "dipy.align.transforms.regtransforms.values",
    "numpy.array",
    "numpy.cos",
    "numpy.eye",
    "numpy.float64",
    "numpy.random.RandomState",
    "numpy.sin",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_transforms.test_param_to_matrix_3d": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.transforms.regtransforms",
    "dipy.align.transforms.regtransforms.values",
    "numpy.array",
    "numpy.cos",
    "numpy.eye",
    "numpy.float64",
    "numpy.random.RandomState",
    "numpy.sin",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields": {
  "data": {},
  "type": "module"
 },
 "dipy.align.tests.test_vector_fields.apply_affine": {
  "data": {
   "shadows": "nibabel.affines.apply_affine"
  },
  "type": "import"
 },
 "dipy.align.tests.test_vector_fields.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_vector_fields.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_vector_fields.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_vector_fields.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_vector_fields.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "dipy.align.tests.test_vector_fields.floating": {
  "data": {
   "shadows": "dipy.align.floating"
  },
  "type": "import"
 },
 "dipy.align.tests.test_vector_fields.from_matvec": {
  "data": {
   "shadows": "nibabel.affines.from_matvec"
  },
  "type": "import"
 },
 "dipy.align.tests.test_vector_fields.geometry": {
  "data": {
   "shadows": "dipy.core.geometry"
  },
  "type": "import"
 },
 "dipy.align.tests.test_vector_fields.imwarp": {
  "data": {
   "shadows": "dipy.align.imwarp"
  },
  "type": "import"
 },
 "dipy.align.tests.test_vector_fields.map_coordinates": {
  "data": {
   "shadows": "scipy.ndimage.interpolation.map_coordinates"
  },
  "type": "import"
 },
 "dipy.align.tests.test_vector_fields.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.align.tests.test_vector_fields.regtransforms": {
  "data": {
   "shadows": "dipy.align.transforms.regtransforms"
  },
  "type": "import"
 },
 "dipy.align.tests.test_vector_fields.sample_domain_regular": {
  "data": {
   "shadows": "dipy.align.parzenhist.sample_domain_regular"
  },
  "type": "import"
 },
 "dipy.align.tests.test_vector_fields.test_affine_transforms_2d": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.floating",
    "dipy.align.vector_fields.create_circle",
    "dipy.align.vector_fields.transform_2d_affine",
    "dipy.align.vector_fields.transform_2d_affine_nn",
    "numpy.apply_along_axis",
    "numpy.array",
    "numpy.asarray",
    "numpy.cos",
    "numpy.empty",
    "numpy.float64",
    "numpy.int32",
    "numpy.linalg.inv",
    "numpy.nan",
    "numpy.ones",
    "numpy.pi",
    "numpy.sin",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros",
    "range",
    "scipy.ndimage.interpolation.map_coordinates"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_affine_transforms_3d": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.floating",
    "dipy.align.vector_fields.create_sphere",
    "dipy.align.vector_fields.transform_3d_affine",
    "dipy.align.vector_fields.transform_3d_affine_nn",
    "dipy.core.geometry.rodrigues_axis_rotation",
    "numpy.apply_along_axis",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float64",
    "numpy.int32",
    "numpy.linalg.inv",
    "numpy.nan",
    "numpy.ones",
    "numpy.pi",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros",
    "range",
    "scipy.ndimage.interpolation.map_coordinates"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_circle": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "dipy.align.vector_fields.create_circle",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float64",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_compose_vector_fields_2d": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.floating",
    "dipy.align.vector_fields.compose_vector_fields_2d",
    "dipy.align.vector_fields.create_random_displacement_2d",
    "dipy.align.vector_fields.warp_2d",
    "dipy.align.vector_fields.warp_2d_nn",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float64",
    "numpy.int32",
    "numpy.linalg.inv",
    "numpy.ones",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.size",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_compose_vector_fields_3d": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.floating",
    "dipy.align.vector_fields.compose_vector_fields_3d",
    "dipy.align.vector_fields.create_random_displacement_3d",
    "dipy.align.vector_fields.warp_3d",
    "dipy.align.vector_fields.warp_3d_nn",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float64",
    "numpy.int32",
    "numpy.linalg.inv",
    "numpy.ones",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.size",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_downsample_displacement_field_2d": {
  "data": {
   "lineno": 1381,
   "symbols_in_volume": [
    "dipy.align.floating",
    "dipy.align.vector_fields.downsample_displacement_field_2d",
    "numpy.empty",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.size",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_downsample_displacement_field_3d": {
  "data": {
   "lineno": 1456,
   "symbols_in_volume": [
    "dipy.align.floating",
    "dipy.align.vector_fields.downsample_displacement_field_3d",
    "numpy.empty",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.size",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_downsample_scalar_field_2d": {
  "data": {
   "lineno": 1349,
   "symbols_in_volume": [
    "dipy.align.floating",
    "dipy.align.vector_fields.downsample_scalar_field_2d",
    "numpy.array",
    "numpy.empty",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.size",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_downsample_scalar_field_3d": {
  "data": {
   "lineno": 1413,
   "symbols_in_volume": [
    "dipy.align.floating",
    "dipy.align.vector_fields.downsample_scalar_field_3d",
    "numpy.empty",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.size",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_gradient_2d": {
  "data": {
   "lineno": 1587,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.floating",
    "dipy.align.parzenhist.sample_domain_regular",
    "dipy.align.transforms.regtransforms",
    "dipy.align.vector_fields.gradient",
    "dipy.align.vector_fields.sparse_gradient",
    "numpy.abs",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.eye",
    "numpy.float64",
    "numpy.int32",
    "numpy.linalg.inv",
    "numpy.ones",
    "numpy.random.seed",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_gradient_3d": {
  "data": {
   "lineno": 1660,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.floating",
    "dipy.align.parzenhist.sample_domain_regular",
    "dipy.align.transforms.regtransforms",
    "dipy.align.vector_fields.gradient",
    "dipy.align.vector_fields.sparse_gradient",
    "numpy.abs",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.eye",
    "numpy.float64",
    "numpy.int32",
    "numpy.linalg.inv",
    "numpy.ones",
    "numpy.random.seed",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_harmonic_fields_2d": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "dipy.align.vector_fields.create_harmonic_fields_2d",
    "numpy.arctan2",
    "numpy.cos",
    "numpy.empty",
    "numpy.testing.assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_harmonic_fields_3d": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "dipy.align.vector_fields.create_harmonic_fields_3d",
    "numpy.arctan2",
    "numpy.cos",
    "numpy.empty",
    "numpy.testing.assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_interpolate_scalar_2d": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "dipy.align.floating",
    "dipy.align.vector_fields.interpolate_scalar_2d",
    "numpy.array",
    "numpy.empty",
    "numpy.int32",
    "numpy.random.randint",
    "numpy.random.ranf",
    "numpy.random.seed",
    "numpy.size",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "range",
    "scipy.ndimage.interpolation.map_coordinates"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_interpolate_scalar_3d": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "dipy.align.floating",
    "dipy.align.vector_fields.interpolate_scalar_3d",
    "numpy.array",
    "numpy.empty",
    "numpy.int32",
    "numpy.random.randint",
    "numpy.random.ranf",
    "numpy.random.seed",
    "numpy.size",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "range",
    "scipy.ndimage.interpolation.map_coordinates"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_interpolate_scalar_nn_2d": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "dipy.align.floating",
    "dipy.align.vector_fields.interpolate_scalar_nn_2d",
    "numpy.empty",
    "numpy.random.randint",
    "numpy.random.ranf",
    "numpy.random.seed",
    "numpy.size",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "range",
    "scipy.ndimage.interpolation.map_coordinates"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_interpolate_scalar_nn_3d": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "dipy.align.floating",
    "dipy.align.vector_fields.interpolate_scalar_nn_3d",
    "numpy.empty",
    "numpy.random.randint",
    "numpy.random.ranf",
    "numpy.random.seed",
    "numpy.size",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "range",
    "scipy.ndimage.interpolation.map_coordinates"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_interpolate_vector_2d": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "dipy.align.floating",
    "dipy.align.vector_fields.interpolate_vector_2d",
    "numpy.array",
    "numpy.empty",
    "numpy.int32",
    "numpy.random.randint",
    "numpy.random.ranf",
    "numpy.random.seed",
    "numpy.size",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "scipy.ndimage.interpolation.map_coordinates"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_interpolate_vector_3d": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "dipy.align.floating",
    "dipy.align.vector_fields.interpolate_vector_3d",
    "numpy.array",
    "numpy.empty",
    "numpy.int32",
    "numpy.random.randint",
    "numpy.random.ranf",
    "numpy.random.seed",
    "numpy.size",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "scipy.ndimage.interpolation.map_coordinates"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_invert_vector_field_2d": {
  "data": {
   "lineno": 1191,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.floating",
    "dipy.align.imwarp.DiffeomorphicMap",
    "dipy.align.vector_fields.create_harmonic_fields_2d",
    "dipy.align.vector_fields.invert_vector_field_fixed_point_2d",
    "dipy.align.vector_fields.reorient_vector_field_2d",
    "numpy.array",
    "numpy.asarray",
    "numpy.copy",
    "numpy.cos",
    "numpy.float64",
    "numpy.linalg.inv",
    "numpy.pi",
    "numpy.sin",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_invert_vector_field_3d": {
  "data": {
   "lineno": 1248,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.floating",
    "dipy.align.imwarp.DiffeomorphicMap",
    "dipy.align.vector_fields.create_harmonic_fields_3d",
    "dipy.align.vector_fields.invert_vector_field_fixed_point_3d",
    "dipy.align.vector_fields.reorient_vector_field_3d",
    "dipy.core.geometry.rodrigues_axis_rotation",
    "numpy.array",
    "numpy.asarray",
    "numpy.copy",
    "numpy.float64",
    "numpy.linalg.inv",
    "numpy.pi",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_random_displacement_field_2d": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.floating",
    "dipy.align.vector_fields.create_random_displacement_2d",
    "numpy.apply_along_axis",
    "numpy.array",
    "numpy.asarray",
    "numpy.cos",
    "numpy.empty",
    "numpy.float64",
    "numpy.int32",
    "numpy.linalg.inv",
    "numpy.ones",
    "numpy.pi",
    "numpy.random.seed",
    "numpy.sin",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_random_displacement_field_3d": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.floating",
    "dipy.align.vector_fields.create_random_displacement_2d",
    "dipy.align.vector_fields.create_random_displacement_3d",
    "dipy.core.geometry.rodrigues_axis_rotation",
    "numpy.apply_along_axis",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float64",
    "numpy.int32",
    "numpy.linalg.inv",
    "numpy.ones",
    "numpy.pi",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_reorient_random_vector_fields": {
  "data": {
   "lineno": 1563,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.floating",
    "dipy.align.vector_fields.reorient_vector_field_2d",
    "dipy.align.vector_fields.reorient_vector_field_3d",
    "func",
    "nibabel.affines.apply_affine",
    "nibabel.affines.from_matvec",
    "numpy.arange",
    "numpy.eye",
    "numpy.random.normal",
    "numpy.random.seed",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_reorient_vector_field_2d": {
  "data": {
   "lineno": 1500,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.floating",
    "dipy.align.vector_fields.create_harmonic_fields_2d",
    "dipy.align.vector_fields.reorient_vector_field_2d",
    "numpy.array",
    "numpy.empty",
    "numpy.float64",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_reorient_vector_field_3d": {
  "data": {
   "lineno": 1524,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.floating",
    "dipy.align.vector_fields.create_harmonic_fields_3d",
    "dipy.align.vector_fields.reorient_vector_field_3d",
    "numpy.array",
    "numpy.empty",
    "numpy.float64",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_resample_vector_field_2d": {
  "data": {
   "lineno": 1313,
   "symbols_in_volume": [
    "dipy.align.floating",
    "dipy.align.vector_fields.create_harmonic_fields_2d",
    "dipy.align.vector_fields.resample_displacement_field_2d",
    "numpy.array",
    "numpy.int32",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_resample_vector_field_3d": {
  "data": {
   "lineno": 1331,
   "symbols_in_volume": [
    "dipy.align.floating",
    "dipy.align.vector_fields.create_harmonic_fields_3d",
    "dipy.align.vector_fields.resample_displacement_field_3d",
    "numpy.array",
    "numpy.int32",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_sphere": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "dipy.align.vector_fields.create_sphere",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float64",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_warping_2d": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.floating",
    "dipy.align.vector_fields.create_circle",
    "dipy.align.vector_fields.create_harmonic_fields_2d",
    "dipy.align.vector_fields.reorient_vector_field_2d",
    "dipy.align.vector_fields.warp_2d",
    "dipy.align.vector_fields.warp_2d_nn",
    "numpy.apply_along_axis",
    "numpy.array",
    "numpy.asarray",
    "numpy.copy",
    "numpy.cos",
    "numpy.empty",
    "numpy.float64",
    "numpy.int32",
    "numpy.linalg.inv",
    "numpy.ones",
    "numpy.pi",
    "numpy.sin",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "scipy.ndimage.interpolation.map_coordinates"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.test_warping_3d": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.floating",
    "dipy.align.vector_fields.create_harmonic_fields_3d",
    "dipy.align.vector_fields.create_sphere",
    "dipy.align.vector_fields.reorient_vector_field_3d",
    "dipy.align.vector_fields.warp_3d",
    "dipy.align.vector_fields.warp_3d_nn",
    "dipy.core.geometry.rodrigues_axis_rotation",
    "numpy.apply_along_axis",
    "numpy.array",
    "numpy.asarray",
    "numpy.copy",
    "numpy.empty",
    "numpy.float64",
    "numpy.int32",
    "numpy.linalg.inv",
    "numpy.ones",
    "numpy.pi",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "scipy.ndimage.interpolation.map_coordinates"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_vector_fields.vfu": {
  "data": {
   "shadows": "dipy.align.vector_fields"
  },
  "type": "import"
 },
 "dipy.align.tests.test_whole_brain_slr": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.align.tests.test_whole_brain_slr.Streamlines": {
  "data": {
   "shadows": "dipy.tracking.streamline.Streamlines"
  },
  "type": "import"
 },
 "dipy.align.tests.test_whole_brain_slr.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_whole_brain_slr.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.align.tests.test_whole_brain_slr.bundles_distances_mam": {
  "data": {
   "shadows": "dipy.tracking.distances.bundles_distances_mam"
  },
  "type": "import"
 },
 "dipy.align.tests.test_whole_brain_slr.compose_matrix44": {
  "data": {
   "shadows": "dipy.align.streamlinear.compose_matrix44"
  },
  "type": "import"
 },
 "dipy.align.tests.test_whole_brain_slr.decompose_matrix44": {
  "data": {
   "shadows": "dipy.align.streamlinear.decompose_matrix44"
  },
  "type": "import"
 },
 "dipy.align.tests.test_whole_brain_slr.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.align.tests.test_whole_brain_slr.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.align.tests.test_whole_brain_slr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.align.tests.test_whole_brain_slr.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.align.tests.test_whole_brain_slr.slr_with_qb": {
  "data": {
   "shadows": "dipy.align.streamlinear.slr_with_qb"
  },
  "type": "import"
 },
 "dipy.align.tests.test_whole_brain_slr.test_whole_brain_slr": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "dipy.align.streamlinear.compose_matrix44",
    "dipy.align.streamlinear.decompose_matrix44",
    "dipy.align.streamlinear.slr_with_qb",
    "dipy.align.streamlinear.transform_streamlines",
    "dipy.align.streamlinear.whole_brain_slr",
    "dipy.data.get_data",
    "dipy.tracking.distances.bundles_distances_mam",
    "dipy.tracking.streamline.Streamlines",
    "nibabel.trackvis.read",
    "numpy.array",
    "numpy.inf",
    "numpy.min",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.align.tests.test_whole_brain_slr.transform_streamlines": {
  "data": {
   "shadows": "dipy.align.streamlinear.transform_streamlines"
  },
  "type": "import"
 },
 "dipy.align.tests.test_whole_brain_slr.whole_brain_slr": {
  "data": {
   "shadows": "dipy.align.streamlinear.whole_brain_slr"
  },
  "type": "import"
 },
 "dipy.bench": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "dipy.boots": {
  "data": {},
  "type": "module"
 },
 "dipy.core": {
  "data": {
   "symbols_in_volume": [
    "numpy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "dipy.core.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "dipy.core.geometry": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "dipy.core.geometry._AXES2TUPLE",
    "float",
    "numpy.finfo"
   ]
  },
  "type": "module"
 },
 "dipy.core.geometry._AXES2TUPLE": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "dipy.core.geometry._EPS": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "dipy.core.geometry._NEXT_AXIS": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "dipy.core.geometry._TUPLE2AXES": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "dipy.core.geometry.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.core.geometry.cart2sphere": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.arccos",
    "numpy.arctan2",
    "numpy.broadcast_arrays",
    "numpy.divide",
    "numpy.sqrt",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "dipy.core.geometry.cart_distance": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.subtract",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "dipy.core.geometry.circumradius": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cross",
    "numpy.dot",
    "numpy.linalg.inv",
    "numpy.linalg.norm",
    "numpy.max",
    "numpy.sqrt",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "dipy.core.geometry.compose_matrix": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "dipy.core.geometry.euler_matrix",
    "numpy.dot",
    "numpy.identity"
   ]
  },
  "type": "function"
 },
 "dipy.core.geometry.compose_transformations": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "dipy.core.geometry.decompose_matrix": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "any",
    "dipy.core.geometry._EPS",
    "dipy.core.geometry.math",
    "dipy.core.geometry.vector_norm",
    "numpy.array",
    "numpy.cross",
    "numpy.dot",
    "numpy.float64",
    "numpy.linalg.det",
    "numpy.linalg.inv",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.core.geometry.dist_to_corner": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.linalg.cholesky",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "dipy.core.geometry.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.core.geometry.euler_matrix": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "dipy.core.geometry._AXES2TUPLE",
    "dipy.core.geometry._NEXT_AXIS",
    "dipy.core.geometry.math",
    "numpy.identity"
   ]
  },
  "type": "function"
 },
 "dipy.core.geometry.lambert_equal_area_projection_cart": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "dipy.core.geometry.cart2sphere",
    "dipy.core.geometry.lambert_equal_area_projection_polar"
   ]
  },
  "type": "function"
 },
 "dipy.core.geometry.lambert_equal_area_projection_polar": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "numpy.column_stack",
    "numpy.cos",
    "numpy.repeat",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "dipy.core.geometry.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "dipy.core.geometry.nearest_pos_semi_def": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.asarray",
    "numpy.diag",
    "numpy.dot",
    "numpy.linalg.eigh",
    "numpy.max",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.core.geometry.normalized_vector": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "dipy.core.geometry.vector_norm"
   ]
  },
  "type": "function"
 },
 "dipy.core.geometry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.core.geometry.npl": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "dipy.core.geometry.perpendicular_directions": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "abs",
    "dipy.core.geometry.math",
    "float",
    "numpy.array",
    "numpy.cos",
    "numpy.finfo",
    "numpy.linspace",
    "numpy.sin",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "dipy.core.geometry.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.core.geometry.rodrigues_axis_rotation": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cos",
    "numpy.deg2rad",
    "numpy.dot",
    "numpy.eye",
    "numpy.linalg.norm",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "dipy.core.geometry.setup_test": {
  "data": {
   "shadows": "dipy.testing.setup_test"
  },
  "type": "import"
 },
 "dipy.core.geometry.sph2latlon": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.rad2deg"
   ]
  },
  "type": "function"
 },
 "dipy.core.geometry.sphere2cart": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.broadcast_arrays",
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "dipy.core.geometry.sphere_distance": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "ValueError",
    "numpy.allclose",
    "numpy.arccos",
    "numpy.asarray",
    "numpy.inner",
    "numpy.mean",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "dipy.core.geometry.vec2vec_rotmat": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "float",
    "numpy.any",
    "numpy.array",
    "numpy.cross",
    "numpy.dot",
    "numpy.eye",
    "numpy.finfo",
    "numpy.isnan",
    "numpy.linalg.norm",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "dipy.core.geometry.vector_cosine": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.inner",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "dipy.core.geometry.vector_norm": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "list",
    "numpy.asarray",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "dipy.core.gradients": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "dipy.core.gradients.GradientTable": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.core.gradients.GradientTable.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "dipy.io.gradients",
    "dipy.io.gradients.ndim",
    "dipy.io.gradients.shape",
    "numpy.asarray",
    "numpy.isnan",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "dipy.core.gradients.GradientTable.b0s_mask": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "dipy.core.onetime.auto_attr"
   ]
  },
  "type": "function"
 },
 "dipy.core.gradients.GradientTable.bvals": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "dipy.core.geometry.vector_norm",
    "dipy.core.onetime.auto_attr"
   ]
  },
  "type": "function"
 },
 "dipy.core.gradients.GradientTable.bvecs": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "dipy.core.onetime.auto_attr"
   ]
  },
  "type": "function"
 },
 "dipy.core.gradients.GradientTable.info": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "print",
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.core.gradients.GradientTable.qvals": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "dipy.core.onetime.auto_attr",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "dipy.core.gradients.HemiSphere": {
  "data": {
   "shadows": "dipy.core.sphere.HemiSphere"
  },
  "type": "import"
 },
 "dipy.core.gradients.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.core.gradients.auto_attr": {
  "data": {
   "shadows": "dipy.core.onetime.auto_attr"
  },
  "type": "import"
 },
 "dipy.core.gradients.check_multi_b": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "int",
    "numpy.log10",
    "numpy.max",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "dipy.core.gradients.disperse_charges": {
  "data": {
   "shadows": "dipy.core.sphere.disperse_charges"
  },
  "type": "import"
 },
 "dipy.core.gradients.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.core.gradients.generate_bvecs": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "dipy.core.sphere.HemiSphere",
    "dipy.core.sphere.disperse_charges",
    "numpy.pi",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "dipy.core.gradients.gradient_table": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ValueError",
    "dipy.core.gradients.gradient_table_from_bvals_bvecs",
    "dipy.io.gradients.read_bvals_bvecs",
    "dipy.utils.six.string_types",
    "isinstance",
    "numpy.asarray",
    "numpy.squeeze"
   ]
  },
  "type": "function"
 },
 "dipy.core.gradients.gradient_table_from_bvals_bvecs": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "dipy.core.geometry.vector_norm",
    "dipy.core.gradients.GradientTable",
    "dipy.io.gradients",
    "numpy.all",
    "numpy.asarray",
    "numpy.float",
    "numpy.isnan",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "dipy.core.gradients.inv": {
  "data": {
   "shadows": "scipy.linalg.inv"
  },
  "type": "import"
 },
 "dipy.core.gradients.io": {
  "data": {
   "shadows": "dipy.io.gradients"
  },
  "type": "import"
 },
 "dipy.core.gradients.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.core.gradients.polar": {
  "data": {
   "shadows": "dipy.fixes.scipy.polar"
  },
  "type": "import"
 },
 "dipy.core.gradients.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.core.gradients.reorient_bvecs": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "ValueError",
    "dipy.core.gradients.gradient_table",
    "dipy.fixes.scipy.polar",
    "enumerate",
    "len",
    "numpy.dot",
    "numpy.zeros",
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "dipy.core.gradients.string_types": {
  "data": {
   "shadows": "dipy.utils.six.string_types"
  },
  "type": "import"
 },
 "dipy.core.gradients.vector_norm": {
  "data": {
   "shadows": "dipy.core.geometry.vector_norm"
  },
  "type": "import"
 },
 "dipy.core.graph": {
  "data": {},
  "type": "module"
 },
 "dipy.core.graph.Graph": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.core.graph.Graph.__init__": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "dipy.core.graph.Graph.add_edge": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "dipy.core.graph.Graph.add_node": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "dipy.core.graph.Graph.all_paths": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "dipy.core.graph.Graph.children": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "dipy.core.graph.Graph.del_node": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "dipy.core.graph.Graph.del_node_and_edges": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "dipy.core.graph.Graph.down": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "dipy.core.graph.Graph.down_short": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "dipy.core.graph.Graph.parents": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "dipy.core.graph.Graph.shortest_path": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.core.graph.Graph.up": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "dipy.core.graph.Graph.up_short": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "dipy.core.graph.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.core.graph.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.core.graph.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.core.histeq": {
  "data": {},
  "type": "module"
 },
 "dipy.core.histeq.histeq": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.histogram",
    "numpy.interp"
   ]
  },
  "type": "function"
 },
 "dipy.core.histeq.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.core.ndindex": {
  "data": {},
  "type": "module"
 },
 "dipy.core.ndindex.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.core.ndindex.as_strided": {
  "data": {
   "shadows": "numpy.lib.stride_tricks.as_strided"
  },
  "type": "import"
 },
 "dipy.core.ndindex.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.core.ndindex.ndindex": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "AttributeError",
    "len",
    "numpy.lib.stride_tricks.as_strided",
    "numpy.ndindex",
    "numpy.nditer",
    "numpy.zeros",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "dipy.core.ndindex.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.core.ndindex.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.core.onetime": {
  "data": {
   "symbols_in_volume": [
    "dipy.core.onetime.auto_attr"
   ]
  },
  "type": "module"
 },
 "dipy.core.onetime.OneTimeProperty": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.core.onetime.OneTimeProperty.__get__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "dipy.core.onetime.OneTimeProperty.__init__": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "dipy.core.onetime.ResetMixin": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.core.onetime.ResetMixin.reset": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "delattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "dipy.core.onetime.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.core.onetime.auto_attr": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "dipy.core.onetime.OneTimeProperty"
   ]
  },
  "type": "function"
 },
 "dipy.core.onetime.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.core.onetime.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.core.onetime.setattr_on_read": {
  "data": {
   "lineno": 214
  },
  "type": "constant"
 },
 "dipy.core.optimize": {
  "data": {
   "symbols_in_volume": [
    "dipy.core.optimize.SCIPY_LESS_0_12",
    "dipy.core.optimize.scipy",
    "distutils.version.LooseVersion"
   ]
  },
  "type": "module"
 },
 "dipy.core.optimize.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "dipy.core.optimize.NonNegativeLeastSquares": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "dipy.core.optimize.SKLearnLinearSolver"
   ]
  },
  "type": "class"
 },
 "dipy.core.optimize.NonNegativeLeastSquares.fit": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "scipy.optimize.nnls"
   ]
  },
  "type": "function"
 },
 "dipy.core.optimize.Optimizer": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.core.optimize.Optimizer.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "dipy.core.optimize.SCIPY_LESS_0_12",
    "dipy.core.optimize.scipy",
    "float",
    "len",
    "numpy.finfo",
    "print",
    "scipy.optimize.fmin_l_bfgs_b",
    "scipy.optimize.fmin_powell",
    "scipy.optimize.minimize"
   ]
  },
  "type": "function"
 },
 "dipy.core.optimize.Optimizer.__init__.history_of_x": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "dipy.core.optimize.Optimizer.evolution": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "numpy.asarray",
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.core.optimize.Optimizer.fopt": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.core.optimize.Optimizer.message": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.core.optimize.Optimizer.nfev": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.core.optimize.Optimizer.nit": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.core.optimize.Optimizer.print_summary": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.core.optimize.Optimizer.xopt": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.core.optimize.SCIPY_LESS_0_12": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "dipy.core.optimize.SKLearnLinearSolver": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "dipy.core.optimize.abc",
    "dipy.utils.six.with_metaclass",
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.core.optimize.SKLearnLinearSolver.__init__": {
  "data": {
   "lineno": 404
  },
  "type": "function"
 },
 "dipy.core.optimize.SKLearnLinearSolver.fit": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "dipy.core.optimize.abc"
   ]
  },
  "type": "function"
 },
 "dipy.core.optimize.SKLearnLinearSolver.predict": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "dipy.core.optimize.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "dipy.core.optimize.fmin_l_bfgs_b": {
  "data": {
   "shadows": "scipy.optimize.fmin_l_bfgs_b"
  },
  "type": "import"
 },
 "dipy.core.optimize.fmin_powell": {
  "data": {
   "shadows": "scipy.optimize.fmin_powell"
  },
  "type": "import"
 },
 "dipy.core.optimize.minimize": {
  "data": {
   "shadows": "scipy.optimize.minimize"
  },
  "type": "import"
 },
 "dipy.core.optimize.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.core.optimize.opt": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "dipy.core.optimize.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "dipy.core.optimize.sparse_nnls": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "dipy.core.optimize.spdot",
    "numpy.dot",
    "numpy.inf",
    "numpy.mod",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.core.optimize.spdot": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "numpy.dot",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "dipy.core.optimize.sps": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "dipy.core.optimize.with_metaclass": {
  "data": {
   "shadows": "dipy.utils.six.with_metaclass"
  },
  "type": "import"
 },
 "dipy.core.profile": {
  "data": {
   "symbols_in_volume": [
    "dipy.utils.optpkg.optional_package"
   ]
  },
  "type": "module"
 },
 "dipy.core.profile.Profiler": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "dipy.core.profile.Profiler.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "Exception",
    "dipy.core.profile.os",
    "dipy.core.profile.pyximport",
    "dipy.core.profile.subprocess",
    "globals",
    "locals",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.core.profile.Profiler._profile_function": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "dipy.core.profile.Profiler.print_stats": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "dipy.core.profile.optional_package": {
  "data": {
   "shadows": "dipy.utils.optpkg.optional_package"
  },
  "type": "import"
 },
 "dipy.core.profile.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dipy.core.profile.pyximport": {
  "data": {
   "shadows": "pyximport"
  },
  "type": "import"
 },
 "dipy.core.profile.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "dipy.core.rng": {
  "data": {},
  "type": "module"
 },
 "dipy.core.rng.LEcuyer": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "dipy.core.rng.WichmannHill1982": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.float",
    "numpy.remainder"
   ]
  },
  "type": "function"
 },
 "dipy.core.rng.WichmannHill2006": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "math.floor",
    "platform.architecture"
   ]
  },
  "type": "function"
 },
 "dipy.core.rng.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.core.rng.architecture": {
  "data": {
   "shadows": "platform.architecture"
  },
  "type": "import"
 },
 "dipy.core.rng.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.core.rng.floor": {
  "data": {
   "shadows": "math.floor"
  },
  "type": "import"
 },
 "dipy.core.rng.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.core.rng.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.core.sphere": {
  "data": {
   "symbols_in_volume": [
    "dipy.core.geometry.vector_norm",
    "dipy.core.sphere.HemiSphere",
    "dipy.core.sphere.Sphere",
    "dipy.core.sphere.icosahedron_faces",
    "dipy.core.sphere.icosahedron_vertices",
    "dipy.core.sphere.octahedron_faces",
    "dipy.core.sphere.octahedron_vertices",
    "dipy.core.sphere.t",
    "dipy.core.sphere.unit_icosahedron",
    "numpy.array",
    "numpy.sqrt"
   ]
  },
  "type": "module"
 },
 "dipy.core.sphere.Delaunay": {
  "data": {
   "shadows": "scipy.spatial.Delaunay"
  },
  "type": "import"
 },
 "dipy.core.sphere.HemiSphere": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "dipy.core.sphere.Sphere"
   ]
  },
  "type": "class"
 },
 "dipy.core.sphere.HemiSphere.__init__": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "dipy.core.sphere.Sphere",
    "dipy.core.sphere.unique_sets",
    "dipy.reconst.recspeed.remove_similar_vertices",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "dipy.core.sphere.HemiSphere.faces": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "dipy.core.onetime.auto_attr",
    "dipy.core.sphere.faces_from_sphere_vertices",
    "dipy.core.sphere.unique_sets",
    "len",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "dipy.core.sphere.HemiSphere.find_closest": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "abs",
    "numpy.argmax",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "dipy.core.sphere.HemiSphere.from_sphere": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "classmethod",
    "klass"
   ]
  },
  "type": "function"
 },
 "dipy.core.sphere.HemiSphere.mirror": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "dipy.core.sphere.Sphere",
    "dipy.core.sphere._switch_vertex",
    "len",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "dipy.core.sphere.HemiSphere.subdivide": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "dipy.core.sphere.HemiSphere"
   ]
  },
  "type": "function"
 },
 "dipy.core.sphere.Rbf": {
  "data": {
   "shadows": "scipy.interpolate.Rbf"
  },
  "type": "import"
 },
 "dipy.core.sphere.Sphere": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.core.sphere.Sphere.__init__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "ValueError",
    "dipy.core.geometry.cart2sphere",
    "dipy.core.sphere._all_specified",
    "dipy.core.sphere._some_specified",
    "dipy.core.sphere.warnings",
    "numpy.allclose",
    "numpy.array",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "dipy.core.sphere.Sphere.edges": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "dipy.core.onetime.auto_attr",
    "dipy.core.sphere.unique_edges"
   ]
  },
  "type": "function"
 },
 "dipy.core.sphere.Sphere.faces": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "dipy.core.onetime.auto_attr",
    "dipy.core.sphere.faces_from_sphere_vertices"
   ]
  },
  "type": "function"
 },
 "dipy.core.sphere.Sphere.find_closest": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "dipy.core.sphere.Sphere.subdivide": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "dipy.core.geometry.vector_norm",
    "dipy.core.sphere.Sphere",
    "dipy.core.sphere.unique_edges",
    "dipy.utils.six.moves.xrange",
    "len",
    "numpy.asarray",
    "numpy.column_stack",
    "numpy.concatenate",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "dipy.core.sphere.Sphere.vertices": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "dipy.core.geometry.sphere2cart",
    "dipy.core.onetime.auto_attr",
    "numpy.column_stack"
   ]
  },
  "type": "function"
 },
 "dipy.core.sphere.Sphere.x": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.core.sphere.Sphere.y": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.core.sphere.Sphere.z": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.core.sphere.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "dipy.core.sphere._all_specified": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "dipy.core.sphere._get_forces": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "dipy.core.sphere.warnings",
    "len",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "dipy.core.sphere._some_specified": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "dipy.core.sphere._switch_vertex": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.core.sphere.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.core.sphere.auto_attr": {
  "data": {
   "shadows": "dipy.core.onetime.auto_attr"
  },
  "type": "import"
 },
 "dipy.core.sphere.cart2sphere": {
  "data": {
   "shadows": "dipy.core.geometry.cart2sphere"
  },
  "type": "import"
 },
 "dipy.core.sphere.disperse_charges": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "ValueError",
    "dipy.core.sphere.HemiSphere",
    "dipy.core.sphere._get_forces",
    "dipy.utils.six.moves.xrange",
    "isinstance",
    "numpy.empty",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "dipy.core.sphere.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.core.sphere.euler_characteristic_check": {
  "data": {
   "lineno": 576
  },
  "type": "function"
 },
 "dipy.core.sphere.faces_from_sphere_vertices": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.uint16",
    "scipy.spatial.Delaunay"
   ]
  },
  "type": "function"
 },
 "dipy.core.sphere.hemi_icosahedron": {
  "data": {
   "lineno": 674
  },
  "type": "constant"
 },
 "dipy.core.sphere.icosahedron_faces": {
  "data": {
   "lineno": 650
  },
  "type": "constant"
 },
 "dipy.core.sphere.icosahedron_vertices": {
  "data": {
   "lineno": 635
  },
  "type": "constant"
 },
 "dipy.core.sphere.interp_rbf": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "DeprecationWarning",
    "dipy.core.sphere.warnings",
    "rbfi",
    "scipy.interpolate.Rbf"
   ]
  },
  "type": "function"
 },
 "dipy.core.sphere.interp_rbf.angle": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "numpy.arccos",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "dipy.core.sphere.interp_rbf.euclidean_norm": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "dipy.core.sphere.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.core.sphere.octahedron_faces": {
  "data": {
   "lineno": 624
  },
  "type": "constant"
 },
 "dipy.core.sphere.octahedron_vertices": {
  "data": {
   "lineno": 617
  },
  "type": "constant"
 },
 "dipy.core.sphere.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.core.sphere.remove_similar_vertices": {
  "data": {
   "shadows": "dipy.reconst.recspeed.remove_similar_vertices"
  },
  "type": "import"
 },
 "dipy.core.sphere.sphere2cart": {
  "data": {
   "shadows": "dipy.core.geometry.sphere2cart"
  },
  "type": "import"
 },
 "dipy.core.sphere.t": {
  "data": {
   "lineno": 634
  },
  "type": "constant"
 },
 "dipy.core.sphere.unique_edges": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "dipy.core.sphere.unique_sets",
    "numpy.asarray",
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "dipy.core.sphere.unique_sets": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.empty_like",
    "numpy.lexsort",
    "numpy.ones",
    "numpy.sort"
   ]
  },
  "type": "function"
 },
 "dipy.core.sphere.unit_icosahedron": {
  "data": {
   "lineno": 673
  },
  "type": "constant"
 },
 "dipy.core.sphere.unit_octahedron": {
  "data": {
   "lineno": 672
  },
  "type": "constant"
 },
 "dipy.core.sphere.vector_norm": {
  "data": {
   "shadows": "dipy.core.geometry.vector_norm"
  },
  "type": "import"
 },
 "dipy.core.sphere.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "dipy.core.sphere.xrange": {
  "data": {
   "shadows": "dipy.utils.six.moves.xrange"
  },
  "type": "import"
 },
 "dipy.core.sphere_stats": {
  "data": {},
  "type": "module"
 },
 "dipy.core.sphere_stats.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.core.sphere_stats.angular_similarity": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "itertools.permutations",
    "len",
    "numpy.abs",
    "numpy.dot",
    "numpy.float",
    "numpy.max",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.core.sphere_stats.compare_orientation_sets": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "itertools.permutations",
    "len",
    "numpy.abs",
    "numpy.dot",
    "numpy.float",
    "numpy.max",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.core.sphere_stats.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.core.sphere_stats.eigenstats": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "dipy.core.geometry.cart2sphere",
    "numpy.arcsin",
    "numpy.argsort",
    "numpy.array",
    "numpy.dot",
    "numpy.linalg.eig",
    "numpy.linalg.eigh",
    "numpy.log",
    "numpy.pi",
    "numpy.sign",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.core.sphere_stats.geometry": {
  "data": {
   "shadows": "dipy.core.geometry"
  },
  "type": "import"
 },
 "dipy.core.sphere_stats.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.core.sphere_stats.permutations": {
  "data": {
   "shadows": "itertools.permutations"
  },
  "type": "import"
 },
 "dipy.core.sphere_stats.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.core.sphere_stats.random_uniform_on_sphere": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "dipy.core.geometry.sphere2cart",
    "numpy.arccos",
    "numpy.ones",
    "numpy.pi",
    "numpy.rad2deg",
    "numpy.random.uniform",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "dipy.core.subdivide_octahedron": {
  "data": {},
  "type": "module"
 },
 "dipy.core.subdivide_octahedron.HemiSphere": {
  "data": {
   "shadows": "dipy.core.sphere.HemiSphere"
  },
  "type": "import"
 },
 "dipy.core.subdivide_octahedron.create_unit_hemisphere": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "dipy.core.sphere.HemiSphere.from_sphere",
    "dipy.core.subdivide_octahedron.create_unit_sphere"
   ]
  },
  "type": "function"
 },
 "dipy.core.subdivide_octahedron.create_unit_sphere": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ValueError",
    "dipy.core.sphere.unit_octahedron.subdivide"
   ]
  },
  "type": "function"
 },
 "dipy.core.subdivide_octahedron.unit_octahedron": {
  "data": {
   "shadows": "dipy.core.sphere.unit_octahedron"
  },
  "type": "import"
 },
 "dipy.core.test": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "dipy.core.tests": {
  "data": {
   "symbols_in_volume": [
    "numpy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "dipy.core.tests.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "dipy.core.tests.test": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "dipy.core.tests.test_geometry": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.core.tests.test_geometry._rotation_from_angles": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cos",
    "numpy.dot",
    "numpy.linalg.inv",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_geometry.assert_almost_equal": {
  "data": {
   "shadows": "nose.tools.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.core.tests.test_geometry.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.core.tests.test_geometry.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.core.tests.test_geometry.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "dipy.core.tests.test_geometry.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "dipy.core.tests.test_geometry.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "dipy.core.tests.test_geometry.cart2sphere": {
  "data": {
   "shadows": "dipy.core.geometry.cart2sphere"
  },
  "type": "import"
 },
 "dipy.core.tests.test_geometry.cart_distance": {
  "data": {
   "shadows": "dipy.core.geometry.cart_distance"
  },
  "type": "import"
 },
 "dipy.core.tests.test_geometry.circumradius": {
  "data": {
   "shadows": "dipy.core.geometry.circumradius"
  },
  "type": "import"
 },
 "dipy.core.tests.test_geometry.compose_matrix": {
  "data": {
   "shadows": "dipy.core.geometry.compose_matrix"
  },
  "type": "import"
 },
 "dipy.core.tests.test_geometry.compose_transformations": {
  "data": {
   "shadows": "dipy.core.geometry.compose_transformations"
  },
  "type": "import"
 },
 "dipy.core.tests.test_geometry.decompose_matrix": {
  "data": {
   "shadows": "dipy.core.geometry.decompose_matrix"
  },
  "type": "import"
 },
 "dipy.core.tests.test_geometry.dist_to_corner": {
  "data": {
   "shadows": "dipy.core.geometry.dist_to_corner"
  },
  "type": "import"
 },
 "dipy.core.tests.test_geometry.lambert_equal_area_projection_polar": {
  "data": {
   "shadows": "dipy.core.geometry.lambert_equal_area_projection_polar"
  },
  "type": "import"
 },
 "dipy.core.tests.test_geometry.nearest_pos_semi_def": {
  "data": {
   "shadows": "dipy.core.geometry.nearest_pos_semi_def"
  },
  "type": "import"
 },
 "dipy.core.tests.test_geometry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.core.tests.test_geometry.permutations": {
  "data": {
   "shadows": "itertools.permutations"
  },
  "type": "import"
 },
 "dipy.core.tests.test_geometry.perpendicular_directions": {
  "data": {
   "shadows": "dipy.core.geometry.perpendicular_directions"
  },
  "type": "import"
 },
 "dipy.core.tests.test_geometry.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "dipy.core.tests.test_geometry.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.core.tests.test_geometry.sphere2cart": {
  "data": {
   "shadows": "dipy.core.geometry.sphere2cart"
  },
  "type": "import"
 },
 "dipy.core.tests.test_geometry.sphere_distance": {
  "data": {
   "shadows": "dipy.core.geometry.sphere_distance"
  },
  "type": "import"
 },
 "dipy.core.tests.test_geometry.sphere_points": {
  "data": {
   "shadows": "dipy.testing.sphere_points"
  },
  "type": "import"
 },
 "dipy.core.tests.test_geometry.test_cart_distance": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "dipy.core.geometry.cart_distance",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_geometry.test_circumradius": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "dipy.core.geometry.circumradius",
    "numpy.array",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_geometry.test_compose_decompose_matrix": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "dipy.core.geometry.compose_matrix",
    "dipy.core.geometry.decompose_matrix",
    "itertools.permutations",
    "numpy.deg2rad",
    "numpy.random.rand",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_geometry.test_compose_transformations": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "ValueError",
    "dipy.core.geometry.compose_transformations",
    "nose.tools.assert_raises",
    "numpy.eye",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_geometry.test_dist_to_corner": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "dipy.core.geometry.dist_to_corner",
    "dipy.core.tests.test_geometry._rotation_from_angles",
    "numpy.diag",
    "numpy.dot",
    "numpy.eye",
    "numpy.pi",
    "numpy.random.randn",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_geometry.test_invert_transform": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "dipy.core.geometry.cart2sphere",
    "dipy.core.geometry.sphere2cart",
    "numpy.arange",
    "numpy.pi",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_geometry.test_lambert_equal_area_projection_cart": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "dipy.core.geometry.cart2sphere",
    "dipy.core.geometry.lambert_equal_area_projection_polar",
    "numpy.array",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_geometry.test_lambert_equal_area_projection_polar": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "dipy.core.geometry.lambert_equal_area_projection_polar",
    "numpy.array",
    "numpy.linspace",
    "numpy.pi",
    "numpy.repeat",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_geometry.test_nearest_pos_semi_def": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "dipy.core.geometry.nearest_pos_semi_def",
    "numpy.array",
    "numpy.diag",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_geometry.test_perpendicular_directions": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "dipy.core.geometry.perpendicular_directions",
    "dipy.core.geometry.sphere2cart",
    "dipy.core.tests.test_geometry.random",
    "len",
    "nose.tools.assert_almost_equal",
    "nose.tools.assert_equal",
    "numpy.arccos",
    "numpy.dot",
    "numpy.pi",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_geometry.test_sphere_cart": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "dipy.core.geometry.cart2sphere",
    "dipy.core.geometry.sphere2cart",
    "dipy.testing.sphere_points",
    "dipy.testing.sphere_points.T",
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_geometry.test_sphere_distance": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "ValueError",
    "dipy.core.geometry.sphere_distance",
    "nose.tools.assert_raises",
    "numpy.c_",
    "numpy.cos",
    "numpy.cumsum",
    "numpy.diff",
    "numpy.linspace",
    "numpy.pi",
    "numpy.r_",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_geometry.test_vec2vec_rotmat": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "dipy.core.geometry.vec2vec_rotmat",
    "numpy.array",
    "numpy.dot",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_geometry.test_vector_cosine": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "dipy.core.geometry.vector_cosine",
    "nose.tools.assert_false",
    "numpy.allclose",
    "numpy.corrcoef",
    "numpy.mean",
    "numpy.random.uniform",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_geometry.test_vector_norm": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "dipy.core.geometry.vector_norm",
    "numpy.array",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_geometry.vec2vec_rotmat": {
  "data": {
   "shadows": "dipy.core.geometry.vec2vec_rotmat"
  },
  "type": "import"
 },
 "dipy.core.tests.test_geometry.vector_cosine": {
  "data": {
   "shadows": "dipy.core.geometry.vector_cosine"
  },
  "type": "import"
 },
 "dipy.core.tests.test_geometry.vector_norm": {
  "data": {
   "shadows": "dipy.core.geometry.vector_norm"
  },
  "type": "import"
 },
 "dipy.core.tests.test_gradients": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.core.tests.test_gradients.GradientTable": {
  "data": {
   "shadows": "dipy.core.gradients.GradientTable"
  },
  "type": "import"
 },
 "dipy.core.tests.test_gradients.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "dipy.core.tests.test_gradients.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "dipy.core.tests.test_gradients.check_multi_b": {
  "data": {
   "shadows": "dipy.core.gradients.check_multi_b"
  },
  "type": "import"
 },
 "dipy.core.tests.test_gradients.generate_bvecs": {
  "data": {
   "shadows": "dipy.core.gradients.generate_bvecs"
  },
  "type": "import"
 },
 "dipy.core.tests.test_gradients.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.core.tests.test_gradients.gradient_table": {
  "data": {
   "shadows": "dipy.core.gradients.gradient_table"
  },
  "type": "import"
 },
 "dipy.core.tests.test_gradients.gradient_table_from_bvals_bvecs": {
  "data": {
   "shadows": "dipy.core.gradients.gradient_table_from_bvals_bvecs"
  },
  "type": "import"
 },
 "dipy.core.tests.test_gradients.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.core.tests.test_gradients.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.core.tests.test_gradients.read_bvals_bvecs": {
  "data": {
   "shadows": "dipy.io.gradients.read_bvals_bvecs"
  },
  "type": "import"
 },
 "dipy.core.tests.test_gradients.reorient_bvecs": {
  "data": {
   "shadows": "dipy.core.gradients.reorient_bvecs"
  },
  "type": "import"
 },
 "dipy.core.tests.test_gradients.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.core.tests.test_gradients.test_GradientTable": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "dipy.core.gradients.GradientTable",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_gradients.test_b0s": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.testing.assert_array_equal",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_gradients.test_btable_prepare": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ValueError",
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.concatenate",
    "numpy.isnan",
    "numpy.load",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.testing.assert_array_equal",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_gradients.test_check_multi_b": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "dipy.core.gradients.check_multi_b",
    "dipy.core.gradients.generate_bvecs",
    "dipy.core.gradients.gradient_table",
    "numpy.array",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_gradients.test_deltas": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "numpy.array",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_gradients.test_generate_bvecs": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "dipy.core.gradients.generate_bvecs",
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.ones",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_gradients.test_gradient_table_from_bvals_bvecs": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "dipy.core.gradients.gradient_table_from_bvals_bvecs",
    "numpy.array",
    "numpy.nan",
    "numpy.ones",
    "numpy.reshape",
    "numpy.sqrt",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_gradients.test_gtable_from_files": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.io.gradients.read_bvals_bvecs",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_gradients.test_nan_bvecs": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.core.tests.test_gradients.warnings",
    "dipy.data.get_data",
    "len",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_gradients.test_qvalues": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "numpy.array",
    "numpy.ones",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_gradients.test_reorient_bvecs": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "ValueError",
    "dipy.core.gradients.gradient_table_from_bvals_bvecs",
    "dipy.core.gradients.reorient_bvecs",
    "len",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.concatenate",
    "numpy.cos",
    "numpy.dot",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.where",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_gradients.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "dipy.core.tests.test_graph": {
  "data": {},
  "type": "module"
 },
 "dipy.core.tests.test_graph.Graph": {
  "data": {
   "shadows": "dipy.core.graph.Graph"
  },
  "type": "import"
 },
 "dipy.core.tests.test_graph.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "dipy.core.tests.test_graph.test_graph": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "dipy.core.graph.Graph",
    "len",
    "nose.tools.assert_equal",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_ndindex": {
  "data": {},
  "type": "module"
 },
 "dipy.core.tests.test_ndindex.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.core.tests.test_ndindex.ndindex": {
  "data": {
   "shadows": "dipy.core.ndindex.ndindex"
  },
  "type": "import"
 },
 "dipy.core.tests.test_ndindex.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.core.tests.test_ndindex.test_ndindex": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "dipy.core.ndindex.ndindex",
    "list",
    "numpy.ndenumerate",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_ndindex.test_ndindex_0d": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "dipy.core.ndindex.ndindex",
    "list",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_optimize": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.core.tests.test_optimize.Optimizer": {
  "data": {
   "shadows": "dipy.core.optimize.Optimizer"
  },
  "type": "import"
 },
 "dipy.core.tests.test_optimize.SCIPY_LESS_0_12": {
  "data": {
   "shadows": "dipy.core.optimize.SCIPY_LESS_0_12"
  },
  "type": "import"
 },
 "dipy.core.tests.test_optimize.func": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "dipy.core.tests.test_optimize.func2": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "dipy.core.tests.test_optimize.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.core.tests.test_optimize.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.core.tests.test_optimize.opt": {
  "data": {
   "shadows": "dipy.core.optimize"
  },
  "type": "import"
 },
 "dipy.core.tests.test_optimize.sparse_nnls": {
  "data": {
   "shadows": "dipy.core.optimize.sparse_nnls"
  },
  "type": "import"
 },
 "dipy.core.tests.test_optimize.spdot": {
  "data": {
   "shadows": "dipy.core.optimize.spdot"
  },
  "type": "import"
 },
 "dipy.core.tests.test_optimize.sps": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "dipy.core.tests.test_optimize.test_nonnegativeleastsquares": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "dipy.core.optimize.NonNegativeLeastSquares",
    "numpy.dot",
    "numpy.eye",
    "numpy.random.rand",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_optimize.test_optimize_new_scipy": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "dipy.core.optimize",
    "dipy.core.optimize.Optimizer",
    "dipy.core.optimize.SCIPY_LESS_0_12",
    "dipy.core.optimize.evolution",
    "dipy.core.optimize.evolution.shape",
    "dipy.core.optimize.fopt",
    "dipy.core.optimize.nit",
    "dipy.core.optimize.print_summary",
    "dipy.core.optimize.xopt",
    "dipy.core.tests.test_optimize.func",
    "dipy.core.tests.test_optimize.func2",
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_optimize.test_optimize_old_scipy": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "dipy.core.optimize",
    "dipy.core.optimize.Optimizer",
    "dipy.core.optimize.SCIPY_LESS_0_12",
    "dipy.core.optimize.fopt",
    "dipy.core.optimize.xopt",
    "dipy.core.tests.test_optimize.func",
    "dipy.core.tests.test_optimize.func2",
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_optimize.test_sklearn_linear_solver": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "SillySolver",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_optimize.test_sklearn_linear_solver.SillySolver": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "dipy.core.optimize.SKLearnLinearSolver"
   ]
  },
  "type": "class"
 },
 "dipy.core.tests.test_optimize.test_sklearn_linear_solver.SillySolver.fit": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_optimize.test_sparse_nnls": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "dipy.core.optimize.sparse_nnls",
    "numpy.dot",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.testing.assert_array_almost_equal",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_optimize.test_spdot": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "dipy.core.optimize.spdot",
    "numpy.dot",
    "numpy.random.randn",
    "numpy.testing.assert_array_almost_equal",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_sphere": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "dipy.core.geometry.cart2sphere",
    "dipy.core.sphere.unit_octahedron.edges",
    "dipy.core.sphere.unit_octahedron.faces",
    "dipy.core.sphere.unit_octahedron.vertices",
    "dipy.core.tests.test_sphere.verts",
    "numpy.testing.decorators.skipif",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.core.tests.test_sphere.Delaunay": {
  "data": {
   "shadows": "scipy.spatial.Delaunay"
  },
  "type": "import"
 },
 "dipy.core.tests.test_sphere.HemiSphere": {
  "data": {
   "shadows": "dipy.core.sphere.HemiSphere"
  },
  "type": "import"
 },
 "dipy.core.tests.test_sphere.Sphere": {
  "data": {
   "shadows": "dipy.core.sphere.Sphere"
  },
  "type": "import"
 },
 "dipy.core.tests.test_sphere._get_forces": {
  "data": {
   "shadows": "dipy.core.sphere._get_forces"
  },
  "type": "import"
 },
 "dipy.core.tests.test_sphere.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.core.tests.test_sphere.array_to_set": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "frozenset",
    "set"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_sphere.cart2sphere": {
  "data": {
   "shadows": "dipy.core.geometry.cart2sphere"
  },
  "type": "import"
 },
 "dipy.core.tests.test_sphere.create_unit_sphere": {
  "data": {
   "shadows": "dipy.core.subdivide_octahedron.create_unit_sphere"
  },
  "type": "import"
 },
 "dipy.core.tests.test_sphere.disperse_charges": {
  "data": {
   "shadows": "dipy.core.sphere.disperse_charges"
  },
  "type": "import"
 },
 "dipy.core.tests.test_sphere.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.core.tests.test_sphere.edges": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "dipy.core.tests.test_sphere.faces_from_sphere_vertices": {
  "data": {
   "shadows": "dipy.core.sphere.faces_from_sphere_vertices"
  },
  "type": "import"
 },
 "dipy.core.tests.test_sphere.hemi_icosahedron": {
  "data": {
   "shadows": "dipy.core.sphere.hemi_icosahedron"
  },
  "type": "import"
 },
 "dipy.core.tests.test_sphere.interp_rbf": {
  "data": {
   "shadows": "dipy.core.sphere.interp_rbf"
  },
  "type": "import"
 },
 "dipy.core.tests.test_sphere.needs_delaunay": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "dipy.core.tests.test_sphere.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.core.tests.test_sphere.nt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.core.tests.test_sphere.oct_faces": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "dipy.core.tests.test_sphere.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.core.tests.test_sphere.skipif": {
  "data": {
   "shadows": "numpy.testing.decorators.skipif"
  },
  "type": "import"
 },
 "dipy.core.tests.test_sphere.sphere2cart": {
  "data": {
   "shadows": "dipy.core.geometry.sphere2cart"
  },
  "type": "import"
 },
 "dipy.core.tests.test_sphere.test_bad_edges_faces": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "dipy.core.sphere.Sphere",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_sphere.test_disperse_charges": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "dipy.core.sphere.HemiSphere",
    "dipy.core.sphere.disperse_charges",
    "dipy.utils.six.moves.xrange",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.sqrt",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_sphere.test_edges_faces": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "dipy.core.sphere.Sphere",
    "dipy.core.tests.test_sphere.array_to_set",
    "dipy.core.tests.test_sphere.edges",
    "dipy.core.tests.test_sphere.needs_delaunay",
    "dipy.core.tests.test_sphere.oct_faces",
    "dipy.core.tests.test_sphere.verts",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_sphere.test_faces_from_sphere_vertices": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "dipy.core.sphere.faces_from_sphere_vertices",
    "dipy.core.tests.test_sphere.array_to_set",
    "dipy.core.tests.test_sphere.needs_delaunay",
    "dipy.core.tests.test_sphere.oct_faces",
    "dipy.core.tests.test_sphere.verts",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_sphere.test_get_force": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "dipy.core.sphere._get_forces",
    "numpy.array",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_sphere.test_hemisphere_constructor": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "dipy.core.geometry.cart2sphere",
    "dipy.core.sphere.HemiSphere",
    "dipy.core.tests.test_sphere.verts",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_sphere.test_hemisphere_faces": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "dipy.core.geometry.vector_norm",
    "dipy.core.sphere.HemiSphere",
    "dipy.core.tests.test_sphere.array_to_set",
    "dipy.core.tests.test_sphere.edges",
    "dipy.core.tests.test_sphere.needs_delaunay",
    "len",
    "numpy.array",
    "numpy.sqrt",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_sphere.test_hemisphere_find_closest": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "dipy.core.sphere.hemi_icosahedron.subdivide",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_sphere.test_hemisphere_subdivide": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "dipy.core.sphere.HemiSphere",
    "dipy.core.sphere.HemiSphere.from_sphere",
    "dipy.core.sphere.unit_icosahedron",
    "dipy.core.sphere.unit_icosahedron.subdivide",
    "dipy.core.tests.test_sphere.needs_delaunay",
    "flip",
    "numpy.lexsort",
    "numpy.round",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_sphere.test_hemisphere_subdivide.flip": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "dipy.core.tests.test_sphere.test_interp_rbf": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "DeprecationWarning",
    "data_func",
    "dipy.core.sphere.interp_rbf",
    "dipy.core.subdivide_octahedron.create_unit_sphere",
    "dipy.core.tests.test_sphere.warnings",
    "issubclass",
    "len",
    "numpy.abs",
    "numpy.mean",
    "numpy.testing.assert_",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_sphere.test_interp_rbf.data_func": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_sphere.test_mirror": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "_angle",
    "dipy.core.sphere.HemiSphere",
    "dipy.core.tests.test_sphere.needs_delaunay",
    "dipy.core.tests.test_sphere.verts",
    "len",
    "numpy.array",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_sphere.test_mirror._angle": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "numpy.arccos",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_sphere.test_sphere_attrs": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "dipy.core.sphere.Sphere",
    "dipy.core.tests.test_sphere.verts",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_sphere.test_sphere_construct": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "dipy.core.sphere.Sphere",
    "dipy.core.tests.test_sphere.verts",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_sphere.test_sphere_construct_args": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "dipy.core.sphere.Sphere",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_sphere.test_sphere_edges_faces": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "dipy.core.sphere.Sphere",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_sphere.test_sphere_find_closest": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "dipy.core.sphere.unit_octahedron.subdivide",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_sphere.test_sphere_not_unit": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "UserWarning",
    "dipy.core.sphere.Sphere",
    "dipy.core.tests.test_sphere.warnings",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_sphere.test_sphere_subdivide": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "dipy.core.sphere.Sphere",
    "dipy.core.sphere.unit_icosahedron.subdivide",
    "dipy.core.sphere.unit_octahedron.subdivide",
    "dipy.core.tests.test_sphere.array_to_set",
    "dipy.core.tests.test_sphere.needs_delaunay",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_sphere.test_unique_edges": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "dipy.core.sphere.unique_edges",
    "dipy.core.tests.test_sphere.array_to_set",
    "dipy.core.tests.test_sphere.edges",
    "numpy.array",
    "numpy.sort",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_sphere.test_unique_sets": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "dipy.core.sphere.unique_sets",
    "dipy.core.tests.test_sphere.array_to_set",
    "len",
    "numpy.array",
    "numpy.sort",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_sphere.unique_edges": {
  "data": {
   "shadows": "dipy.core.sphere.unique_edges"
  },
  "type": "import"
 },
 "dipy.core.tests.test_sphere.unique_sets": {
  "data": {
   "shadows": "dipy.core.sphere.unique_sets"
  },
  "type": "import"
 },
 "dipy.core.tests.test_sphere.unit_icosahedron": {
  "data": {
   "shadows": "dipy.core.sphere.unit_icosahedron"
  },
  "type": "import"
 },
 "dipy.core.tests.test_sphere.unit_octahedron": {
  "data": {
   "shadows": "dipy.core.sphere.unit_octahedron"
  },
  "type": "import"
 },
 "dipy.core.tests.test_sphere.vector_norm": {
  "data": {
   "shadows": "dipy.core.geometry.vector_norm"
  },
  "type": "import"
 },
 "dipy.core.tests.test_sphere.verts": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "dipy.core.tests.test_sphere.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "dipy.core.tests.test_sphere.xrange": {
  "data": {
   "shadows": "dipy.utils.six.moves.xrange"
  },
  "type": "import"
 },
 "dipy.core.tests.test_subdivide_octahedron": {
  "data": {},
  "type": "module"
 },
 "dipy.core.tests.test_subdivide_octahedron.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.core.tests.test_subdivide_octahedron.create_half_unit_sphere": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.tests.test_subdivide_octahedron.create_unit_sphere": {
  "data": {
   "shadows": "dipy.core.subdivide_octahedron.create_unit_sphere"
  },
  "type": "import"
 },
 "dipy.core.tests.test_subdivide_octahedron.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.core.tests.test_subdivide_octahedron.test_create_unit_sphere": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "dipy.core.subdivide_octahedron.create_unit_sphere",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.core.wavelet": {
  "data": {},
  "type": "module"
 },
 "dipy.core.wavelet.afb3D": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "dipy.core.wavelet.afb3D_A"
   ]
  },
  "type": "function"
 },
 "dipy.core.wavelet.afb3D_A": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "dipy.core.wavelet.cshift3D",
    "dipy.core.wavelet.permutationinverse",
    "dipy.denoise.nlmeans_block.firdn",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.core.wavelet.cshift3D": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.core.wavelet.dwt3D": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "dipy.core.wavelet.afb3D",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.core.wavelet.idwt3D": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "dipy.core.wavelet.sfb3D",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.core.wavelet.nlmeans_block": {
  "data": {
   "shadows": "dipy.denoise.nlmeans_block"
  },
  "type": "import"
 },
 "dipy.core.wavelet.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.core.wavelet.permutationinverse": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.core.wavelet.sfb3D": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "dipy.core.wavelet.sfb3D_A"
   ]
  },
  "type": "function"
 },
 "dipy.core.wavelet.sfb3D_A": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "dipy.core.wavelet.cshift3D",
    "dipy.core.wavelet.permutationinverse",
    "dipy.denoise.nlmeans_block.upfir",
    "numpy.array",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.data": {
  "data": {
   "symbols_in_volume": [
    "dipy.core.sphere.HemiSphere.from_sphere",
    "dipy.data.DATA_DIR",
    "dipy.data._gradient_from_file",
    "dipy.data.get_sphere",
    "dipy.data.sys",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "dipy.data.DATA_DIR": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "dipy.data.DataError": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "dipy.data.GradientTable": {
  "data": {
   "shadows": "dipy.core.gradients.GradientTable"
  },
  "type": "import"
 },
 "dipy.data.HemiSphere": {
  "data": {
   "shadows": "dipy.core.sphere.HemiSphere"
  },
  "type": "import"
 },
 "dipy.data.SPHERE_FILES": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "dipy.data.Sphere": {
  "data": {
   "shadows": "dipy.core.sphere.Sphere"
  },
  "type": "import"
 },
 "dipy.data.SticksAndBall": {
  "data": {
   "shadows": "dipy.sims.voxel.SticksAndBall"
  },
  "type": "import"
 },
 "dipy.data._gradient_from_file": {
  "data": {
   "lineno": 293
  },
  "type": "function"
 },
 "dipy.data._gradient_from_file.gtab_getter": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "dipy.core.gradients.GradientTable",
    "dipy.data.DATA_DIR",
    "numpy.loadtxt",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "dipy.data.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.data.cPickle": {
  "data": {
   "shadows": "cPickle"
  },
  "type": "import"
 },
 "dipy.data.default_sphere": {
  "data": {
   "lineno": 199
  },
  "type": "constant"
 },
 "dipy.data.dipy_cmaps": {
  "data": {
   "lineno": 365
  },
  "type": "constant"
 },
 "dipy.data.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "dipy.data.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.data.dsi_deconv_voxels": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.sims.voxel.SticksAndBall",
    "numpy.loadtxt",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.data.dsi_voxels": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "nibabel.load",
    "numpy.loadtxt"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetch_bundles_2_subjects": {
  "data": {
   "shadows": "dipy.data.fetcher.fetch_bundles_2_subjects"
  },
  "type": "import"
 },
 "dipy.data.fetch_cenir_multib": {
  "data": {
   "shadows": "dipy.data.fetcher.fetch_cenir_multib"
  },
  "type": "import"
 },
 "dipy.data.fetch_cfin_multib": {
  "data": {
   "shadows": "dipy.data.fetcher.fetch_cfin_multib"
  },
  "type": "import"
 },
 "dipy.data.fetch_isbi2013_2shell": {
  "data": {
   "shadows": "dipy.data.fetcher.fetch_isbi2013_2shell"
  },
  "type": "import"
 },
 "dipy.data.fetch_ivim": {
  "data": {
   "shadows": "dipy.data.fetcher.fetch_ivim"
  },
  "type": "import"
 },
 "dipy.data.fetch_mni_template": {
  "data": {
   "shadows": "dipy.data.fetcher.fetch_mni_template"
  },
  "type": "import"
 },
 "dipy.data.fetch_scil_b0": {
  "data": {
   "shadows": "dipy.data.fetcher.fetch_scil_b0"
  },
  "type": "import"
 },
 "dipy.data.fetch_sherbrooke_3shell": {
  "data": {
   "shadows": "dipy.data.fetcher.fetch_sherbrooke_3shell"
  },
  "type": "import"
 },
 "dipy.data.fetch_stanford_hardi": {
  "data": {
   "shadows": "dipy.data.fetcher.fetch_stanford_hardi"
  },
  "type": "import"
 },
 "dipy.data.fetch_stanford_pve_maps": {
  "data": {
   "shadows": "dipy.data.fetcher.fetch_stanford_pve_maps"
  },
  "type": "import"
 },
 "dipy.data.fetch_stanford_t1": {
  "data": {
   "shadows": "dipy.data.fetcher.fetch_stanford_t1"
  },
  "type": "import"
 },
 "dipy.data.fetch_syn_data": {
  "data": {
   "shadows": "dipy.data.fetcher.fetch_syn_data"
  },
  "type": "import"
 },
 "dipy.data.fetch_taiwan_ntu_dsi": {
  "data": {
   "shadows": "dipy.data.fetcher.fetch_taiwan_ntu_dsi"
  },
  "type": "import"
 },
 "dipy.data.fetch_tissue_data": {
  "data": {
   "shadows": "dipy.data.fetcher.fetch_tissue_data"
  },
  "type": "import"
 },
 "dipy.data.fetch_viz_icons": {
  "data": {
   "shadows": "dipy.data.fetcher.fetch_viz_icons"
  },
  "type": "import"
 },
 "dipy.data.fetcher": {
  "data": {
   "symbols_in_volume": [
    "dipy.data.fetcher.CENIR_notes",
    "dipy.data.fetcher.UW_RW_URL",
    "dipy.data.fetcher._make_fetcher",
    "dipy.data.fetcher.dipy_home",
    "dipy.data.fetcher.fetch_cenir_multib",
    "dipy.data.fetcher.fetch_mni_template",
    "dipy.data.fetcher.mni_notes",
    "dipy.data.fetcher.os",
    "dipy.data.fetcher.read_cenir_multib",
    "dipy.data.fetcher.read_mni_template",
    "dipy.data.fetcher.sys",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "dipy.data.fetcher.CENIR_notes": {
  "data": {
   "lineno": 879
  },
  "type": "constant"
 },
 "dipy.data.fetcher.FetcherError": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "dipy.data.fetcher.UW_RW_URL": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "dipy.data.fetcher._already_there_msg": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "dipy.data.fetcher._log"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetcher._get_file_data": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "KeyError",
    "dipy.data.fetcher.contextlib",
    "dipy.data.fetcher.copyfileobj_withprogress",
    "dipy.data.fetcher.sys",
    "open",
    "shutil.copyfileobj",
    "urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetcher._get_file_md5": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "hashlib.md5",
    "iter",
    "open"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetcher._log": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetcher._make_fetcher": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "dipy.data.fetcher._make_fetcher.fetcher": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "ValueError",
    "dipy.data.fetcher.fetch_data",
    "dipy.data.fetcher.os",
    "dipy.data.fetcher.tarfile",
    "dipy.data.fetcher.zipfile",
    "enumerate",
    "os.path.join",
    "print",
    "zip"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetcher.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.data.fetcher.check_md5": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "dipy.data.fetcher.FetcherError",
    "dipy.data.fetcher._get_file_md5"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetcher.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "dipy.data.fetcher.copyfileobj": {
  "data": {
   "shadows": "shutil.copyfileobj"
  },
  "type": "import"
 },
 "dipy.data.fetcher.copyfileobj_withprogress": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "dipy.data.fetcher.update_progressbar",
    "float",
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetcher.dipy_home": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "dipy.data.fetcher.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.data.fetcher.fetch_bundles_2_subjects": {
  "data": {
   "lineno": 390
  },
  "type": "constant"
 },
 "dipy.data.fetcher.fetch_cenir_multib": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "dipy.data.fetcher.UW_RW_URL",
    "dipy.data.fetcher.dipy_home",
    "dipy.data.fetcher.fetch_data",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetcher.fetch_cfin_multib": {
  "data": {
   "lineno": 412
  },
  "type": "constant"
 },
 "dipy.data.fetcher.fetch_data": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "dipy.data.fetcher._already_there_msg",
    "dipy.data.fetcher._get_file_data",
    "dipy.data.fetcher._get_file_md5",
    "dipy.data.fetcher._log",
    "dipy.data.fetcher.check_md5",
    "dipy.data.fetcher.os",
    "hashlib.md5",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetcher.fetch_isbi2013_2shell": {
  "data": {
   "lineno": 258
  },
  "type": "constant"
 },
 "dipy.data.fetcher.fetch_ivim": {
  "data": {
   "lineno": 401
  },
  "type": "constant"
 },
 "dipy.data.fetcher.fetch_mni_template": {
  "data": {
   "lineno": 349
  },
  "type": "constant"
 },
 "dipy.data.fetcher.fetch_scil_b0": {
  "data": {
   "lineno": 368
  },
  "type": "constant"
 },
 "dipy.data.fetcher.fetch_sherbrooke_3shell": {
  "data": {
   "lineno": 282
  },
  "type": "constant"
 },
 "dipy.data.fetcher.fetch_stanford_hardi": {
  "data": {
   "lineno": 294
  },
  "type": "constant"
 },
 "dipy.data.fetcher.fetch_stanford_labels": {
  "data": {
   "lineno": 272
  },
  "type": "constant"
 },
 "dipy.data.fetcher.fetch_stanford_pve_maps": {
  "data": {
   "lineno": 313
  },
  "type": "constant"
 },
 "dipy.data.fetcher.fetch_stanford_t1": {
  "data": {
   "lineno": 305
  },
  "type": "constant"
 },
 "dipy.data.fetcher.fetch_syn_data": {
  "data": {
   "lineno": 338
  },
  "type": "constant"
 },
 "dipy.data.fetcher.fetch_taiwan_ntu_dsi": {
  "data": {
   "lineno": 323
  },
  "type": "constant"
 },
 "dipy.data.fetcher.fetch_tissue_data": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "dipy.data.fetcher._already_there_msg",
    "dipy.data.fetcher._get_file_data",
    "dipy.data.fetcher.check_md5",
    "dipy.data.fetcher.dipy_home",
    "dipy.data.fetcher.os",
    "len",
    "os.path.join",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetcher.fetch_viz_icons": {
  "data": {
   "lineno": 380
  },
  "type": "constant"
 },
 "dipy.data.fetcher.gradient_table": {
  "data": {
   "shadows": "dipy.core.gradients.gradient_table"
  },
  "type": "import"
 },
 "dipy.data.fetcher.md5": {
  "data": {
   "shadows": "hashlib.md5"
  },
  "type": "import"
 },
 "dipy.data.fetcher.mni_notes": {
  "data": {
   "lineno": 667
  },
  "type": "constant"
 },
 "dipy.data.fetcher.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.data.fetcher.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.data.fetcher.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dipy.data.fetcher.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "dipy.data.fetcher.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.data.fetcher.read_bundles_2_subjects": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "dipy.data.fetcher.dipy_home",
    "nibabel.load",
    "nibabel.trackvis.read",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetcher.read_bvals_bvecs": {
  "data": {
   "shadows": "dipy.io.gradients.read_bvals_bvecs"
  },
  "type": "import"
 },
 "dipy.data.fetcher.read_cenir_multib": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.fetcher.fetch_cenir_multib",
    "int",
    "isinstance",
    "nibabel.Nifti1Image",
    "nibabel.load",
    "numpy.concatenate",
    "numpy.loadtxt",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetcher.read_cfin_dwi": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.fetcher.fetch_cfin_multib",
    "dipy.io.gradients.read_bvals_bvecs",
    "nibabel.load",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetcher.read_cfin_t1": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "dipy.data.fetcher.fetch_cfin_multib",
    "nibabel.load",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetcher.read_isbi2013_2shell": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.fetcher.fetch_isbi2013_2shell",
    "dipy.io.gradients.read_bvals_bvecs",
    "nibabel.load",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetcher.read_ivim": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.fetcher.fetch_ivim",
    "dipy.io.gradients.read_bvals_bvecs",
    "nibabel.load",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetcher.read_mni_template": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "ValueError",
    "dipy.data.fetcher.fetch_mni_template",
    "isinstance",
    "nibabel.load",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetcher.read_scil_b0": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "dipy.data.fetcher.dipy_home",
    "nibabel.load",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetcher.read_sherbrooke_3shell": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.fetcher.fetch_sherbrooke_3shell",
    "dipy.io.gradients.read_bvals_bvecs",
    "nibabel.load",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetcher.read_siemens_scil_b0": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "dipy.data.fetcher.dipy_home",
    "nibabel.load",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetcher.read_stanford_hardi": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.fetcher.fetch_stanford_hardi",
    "dipy.io.gradients.read_bvals_bvecs",
    "nibabel.load",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetcher.read_stanford_labels": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "dipy.data.fetcher.fetch_stanford_hardi",
    "dipy.data.fetcher.fetch_stanford_labels",
    "dipy.data.fetcher.read_stanford_hardi",
    "nibabel.load",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetcher.read_stanford_pve_maps": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "dipy.data.fetcher.fetch_stanford_pve_maps",
    "nibabel.load",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetcher.read_stanford_t1": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "dipy.data.fetcher.fetch_stanford_t1",
    "nibabel.load",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetcher.read_syn_data": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "dipy.data.fetcher.fetch_syn_data",
    "nibabel.load",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetcher.read_taiwan_ntu_dsi": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.fetcher.fetch_taiwan_ntu_dsi",
    "dipy.io.gradients.read_bvals_bvecs",
    "nibabel.load",
    "numpy.sqrt",
    "numpy.sum",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetcher.read_tissue_data": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "dipy.data.fetcher.check_md5",
    "dipy.data.fetcher.dipy_home",
    "nibabel.load",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetcher.read_viz_icons": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "dipy.data.fetcher.dipy_home",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetcher.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "dipy.data.fetcher.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "dipy.data.fetcher.tv": {
  "data": {
   "shadows": "nibabel.trackvis"
  },
  "type": "import"
 },
 "dipy.data.fetcher.update_progressbar": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "Exception",
    "dipy.data.fetcher.os",
    "dipy.data.fetcher.sys",
    "float",
    "int",
    "round"
   ]
  },
  "type": "function"
 },
 "dipy.data.fetcher.urlopen": {
  "data": {
   "shadows": "urllib.request.urlopen"
  },
  "type": "import"
 },
 "dipy.data.fetcher.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "dipy.data.get_3shell_gtab": {
  "data": {
   "lineno": 304
  },
  "type": "constant"
 },
 "dipy.data.get_cmap": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "DeprecationWarning",
    "dipy.data.DATA_DIR",
    "dipy.data.dipy_cmaps",
    "dipy.data.json",
    "dipy.data.warnings",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "dipy.data.get_cmap.simple_cmap": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.interp",
    "numpy.ones",
    "zip"
   ]
  },
  "type": "function"
 },
 "dipy.data.get_data": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "dipy.data.DATA_DIR",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "dipy.data.get_gtab_taiwan_dsi": {
  "data": {
   "lineno": 306
  },
  "type": "constant"
 },
 "dipy.data.get_isbi2013_2shell_gtab": {
  "data": {
   "lineno": 305
  },
  "type": "constant"
 },
 "dipy.data.get_sim_voxels": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "dipy.data.DATA_DIR",
    "dipy.data.gzip",
    "dipy.data.loads_compat",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "dipy.data.get_skeleton": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "dipy.data.DATA_DIR",
    "dipy.data.gzip",
    "dipy.data.loads_compat",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "dipy.data.get_sphere": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "as_native_array",
    "dipy.core.sphere.Sphere",
    "dipy.data.DataError",
    "dipy.data.SPHERE_FILES",
    "numpy.load"
   ]
  },
  "type": "function"
 },
 "dipy.data.gradient_table": {
  "data": {
   "shadows": "dipy.core.gradients.gradient_table"
  },
  "type": "import"
 },
 "dipy.data.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "dipy.data.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "dipy.data.load": {
  "data": {
   "shadows": "nibabel.load"
  },
  "type": "import"
 },
 "dipy.data.loads_compat": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "bytes",
    "dipy.data.pickle"
   ]
  },
  "type": "function"
 },
 "dipy.data.matlab_life_results": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "dipy.data.DATA_DIR",
    "numpy.load",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "dipy.data.mrtrix_spherical_functions": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "dipy.core.sphere.Sphere",
    "dipy.data.DATA_DIR",
    "nibabel.load",
    "numpy.loadtxt",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "dipy.data.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.data.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "dipy.data.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "dipy.data.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.data.read_bundles_2_subjects": {
  "data": {
   "shadows": "dipy.data.fetcher.read_bundles_2_subjects"
  },
  "type": "import"
 },
 "dipy.data.read_cenir_multib": {
  "data": {
   "shadows": "dipy.data.fetcher.read_cenir_multib"
  },
  "type": "import"
 },
 "dipy.data.read_cfin_dwi": {
  "data": {
   "shadows": "dipy.data.fetcher.read_cfin_dwi"
  },
  "type": "import"
 },
 "dipy.data.read_cfin_t1": {
  "data": {
   "shadows": "dipy.data.fetcher.read_cfin_t1"
  },
  "type": "import"
 },
 "dipy.data.read_isbi2013_2shell": {
  "data": {
   "shadows": "dipy.data.fetcher.read_isbi2013_2shell"
  },
  "type": "import"
 },
 "dipy.data.read_ivim": {
  "data": {
   "shadows": "dipy.data.fetcher.read_ivim"
  },
  "type": "import"
 },
 "dipy.data.read_mni_template": {
  "data": {
   "shadows": "dipy.data.fetcher.read_mni_template"
  },
  "type": "import"
 },
 "dipy.data.read_scil_b0": {
  "data": {
   "shadows": "dipy.data.fetcher.read_scil_b0"
  },
  "type": "import"
 },
 "dipy.data.read_sherbrooke_3shell": {
  "data": {
   "shadows": "dipy.data.fetcher.read_sherbrooke_3shell"
  },
  "type": "import"
 },
 "dipy.data.read_stanford_hardi": {
  "data": {
   "shadows": "dipy.data.fetcher.read_stanford_hardi"
  },
  "type": "import"
 },
 "dipy.data.read_stanford_labels": {
  "data": {
   "shadows": "dipy.data.fetcher.read_stanford_labels"
  },
  "type": "import"
 },
 "dipy.data.read_stanford_pve_maps": {
  "data": {
   "shadows": "dipy.data.fetcher.read_stanford_pve_maps"
  },
  "type": "import"
 },
 "dipy.data.read_stanford_t1": {
  "data": {
   "shadows": "dipy.data.fetcher.read_stanford_t1"
  },
  "type": "import"
 },
 "dipy.data.read_syn_data": {
  "data": {
   "shadows": "dipy.data.fetcher.read_syn_data"
  },
  "type": "import"
 },
 "dipy.data.read_taiwan_ntu_dsi": {
  "data": {
   "shadows": "dipy.data.fetcher.read_taiwan_ntu_dsi"
  },
  "type": "import"
 },
 "dipy.data.read_tissue_data": {
  "data": {
   "shadows": "dipy.data.fetcher.read_tissue_data"
  },
  "type": "import"
 },
 "dipy.data.read_viz_icons": {
  "data": {
   "shadows": "dipy.data.fetcher.read_viz_icons"
  },
  "type": "import"
 },
 "dipy.data.relist_streamlines": {
  "data": {
   "shadows": "dipy.tracking.streamline.relist_streamlines"
  },
  "type": "import"
 },
 "dipy.data.small_sphere": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "dipy.data.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "dipy.data.tests.test_data": {
  "data": {},
  "type": "module"
 },
 "dipy.data.tests.test_fetcher": {
  "data": {
   "symbols_in_volume": [
    "dipy.data.tests.test_fetcher.sys"
   ]
  },
  "type": "module"
 },
 "dipy.data.tests.test_fetcher.HTTPServer": {
  "data": {
   "shadows": "http.server.HTTPServer"
  },
  "type": "import"
 },
 "dipy.data.tests.test_fetcher.SPHERE_FILES": {
  "data": {
   "shadows": "dipy.data.SPHERE_FILES"
  },
  "type": "import"
 },
 "dipy.data.tests.test_fetcher.SimpleHTTPRequestHandler": {
  "data": {
   "shadows": "http.server.SimpleHTTPRequestHandler"
  },
  "type": "import"
 },
 "dipy.data.tests.test_fetcher.TemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.TemporaryDirectory"
  },
  "type": "import"
 },
 "dipy.data.tests.test_fetcher.Thread": {
  "data": {
   "shadows": "threading.Thread"
  },
  "type": "import"
 },
 "dipy.data.tests.test_fetcher.fetcher": {
  "data": {
   "shadows": "dipy.data.fetcher"
  },
  "type": "import"
 },
 "dipy.data.tests.test_fetcher.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.data.tests.test_fetcher.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "dipy.data.tests.test_fetcher.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dipy.data.tests.test_fetcher.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "dipy.data.tests.test_fetcher.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "dipy.data.tests.test_fetcher.test_check_md5": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "dipy.data.fetcher.FetcherError",
    "dipy.data.fetcher._get_file_md5",
    "dipy.data.fetcher.check_md5",
    "dipy.data.tests.test_fetcher.tempfile",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.data.tests.test_fetcher.test_fetch_data": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "dipy.data.SPHERE_FILES",
    "dipy.data.fetcher.FetcherError",
    "dipy.data.fetcher._get_file_md5",
    "dipy.data.fetcher.fetch_data",
    "dipy.data.tests.test_fetcher.os",
    "http.server.HTTPServer",
    "http.server.SimpleHTTPRequestHandler",
    "len",
    "nibabel.tmpdirs.TemporaryDirectory",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "open",
    "os.path.exists",
    "os.path.join",
    "os.path.split",
    "print",
    "threading.Thread"
   ]
  },
  "type": "function"
 },
 "dipy.data.tests.test_fetcher.test_fetch_data.test_dipy_home": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "dipy.data.fetcher",
    "dipy.data.fetcher.dipy_home",
    "dipy.data.tests.test_fetcher.os",
    "numpy.testing.assert_string_equal",
    "os.path.join",
    "reload"
   ]
  },
  "type": "function"
 },
 "dipy.data.tests.test_fetcher.test_make_fetcher": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "dipy.data.SPHERE_FILES",
    "dipy.data.fetcher._get_file_md5",
    "dipy.data.fetcher._make_fetcher",
    "dipy.data.tests.test_fetcher.os",
    "http.server.HTTPServer",
    "http.server.SimpleHTTPRequestHandler",
    "nibabel.tmpdirs.TemporaryDirectory",
    "numpy.testing.assert_equal",
    "os.path.isfile",
    "os.path.join",
    "os.path.split",
    "print",
    "sphere_fetcher",
    "threading.Thread"
   ]
  },
  "type": "function"
 },
 "dipy.data.two_cingulum_bundles": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "dipy.data.get_data",
    "dipy.tracking.streamline.relist_streamlines",
    "numpy.load"
   ]
  },
  "type": "function"
 },
 "dipy.data.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "dipy.denoise": {
  "data": {
   "symbols_in_volume": [
    "numpy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "dipy.denoise.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "dipy.denoise.adaptive_soft_matching": {
  "data": {},
  "type": "module"
 },
 "dipy.denoise.adaptive_soft_matching.adaptive_soft_matching": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "abs",
    "dipy.core.wavelet.dwt3D",
    "dipy.core.wavelet.idwt3D",
    "dipy.denoise.adaptive_soft_matching.math",
    "numpy.array",
    "numpy.exp",
    "numpy.int",
    "numpy.std",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.adaptive_soft_matching.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "dipy.denoise.adaptive_soft_matching.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.denoise.adaptive_soft_matching.wavelet": {
  "data": {
   "shadows": "dipy.core.wavelet"
  },
  "type": "import"
 },
 "dipy.denoise.bench": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "dipy.denoise.localpca": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "dipy.denoise.localpca.eigh": {
  "data": {
   "shadows": "scipy.linalg.eigh"
  },
  "type": "import"
 },
 "dipy.denoise.localpca.localpca": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "dipy.denoise.localpca.svd_args",
    "isinstance",
    "numpy.float32",
    "numpy.float64",
    "numpy.mean",
    "numpy.median",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.ones_like",
    "numpy.sum",
    "numpy.transpose",
    "numpy.zeros",
    "range",
    "scipy.linalg.eigh",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.localpca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.denoise.localpca.svd": {
  "data": {
   "shadows": "scipy.linalg.svd"
  },
  "type": "import"
 },
 "dipy.denoise.localpca.svd_args": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "dipy.denoise.nlmeans": {
  "data": {},
  "type": "module"
 },
 "dipy.denoise.nlmeans.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.denoise.nlmeans.nlmeans": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "dipy.denoise.denspeed.nlmeans_3d",
    "isinstance",
    "numpy.float64",
    "numpy.ndarray",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.nlmeans.nlmeans_3d": {
  "data": {
   "shadows": "dipy.denoise.denspeed.nlmeans_3d"
  },
  "type": "import"
 },
 "dipy.denoise.nlmeans.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.denoise.nlmeans.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.denoise.noise_estimate": {
  "data": {},
  "type": "module"
 },
 "dipy.denoise.noise_estimate._inv_nchi_cdf": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "scipy.special.gammainccinv"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.noise_estimate._piesno_3D": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "dipy.denoise.noise_estimate._inv_nchi_cdf",
    "dipy.denoise.noise_estimate.opt_quantile",
    "numpy.abs",
    "numpy.all",
    "numpy.arange",
    "numpy.bool",
    "numpy.float32",
    "numpy.int16",
    "numpy.logical_and",
    "numpy.percentile",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.noise_estimate.convolve": {
  "data": {
   "shadows": "scipy.ndimage.filters.convolve"
  },
  "type": "import"
 },
 "dipy.denoise.noise_estimate.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.denoise.noise_estimate.estimate_sigma": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.bool",
    "numpy.float32",
    "numpy.float64",
    "numpy.int8",
    "numpy.mean",
    "numpy.ones_like",
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "scipy.ndimage.filters.convolve",
    "sorted"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.noise_estimate.gammainccinv": {
  "data": {
   "shadows": "scipy.special.gammainccinv"
  },
  "type": "import"
 },
 "dipy.denoise.noise_estimate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.denoise.noise_estimate.opt_quantile": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "dipy.denoise.noise_estimate.piesno": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "dipy.denoise.noise_estimate._inv_nchi_cdf",
    "dipy.denoise.noise_estimate._piesno_3D",
    "dipy.denoise.noise_estimate.opt_quantile",
    "numpy.bool",
    "numpy.float32",
    "numpy.percentile",
    "numpy.sqrt",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.noise_estimate.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.denoise.non_local_means": {
  "data": {},
  "type": "module"
 },
 "dipy.denoise.non_local_means.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.denoise.non_local_means.nlmeans_block": {
  "data": {
   "shadows": "dipy.denoise.nlmeans_block.nlmeans_block"
  },
  "type": "import"
 },
 "dipy.denoise.non_local_means.non_local_means": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ValueError",
    "dipy.denoise.nlmeans_block.nlmeans_block",
    "numpy.array",
    "numpy.ascontiguousarray",
    "numpy.double",
    "numpy.int",
    "numpy.isscalar",
    "numpy.ones",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.non_local_means.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.denoise.non_local_means.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.denoise.test": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "dipy.denoise.tests": {
  "data": {},
  "type": "module"
 },
 "dipy.denoise.tests.test_ascm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.denoise.tests.test_ascm.adaptive_soft_matching": {
  "data": {
   "shadows": "dipy.denoise.adaptive_soft_matching.adaptive_soft_matching"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_ascm.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_ascm.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_ascm.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_ascm.dpd": {
  "data": {
   "shadows": "dipy.data"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_ascm.estimate_sigma": {
  "data": {
   "shadows": "dipy.denoise.noise_estimate.estimate_sigma"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_ascm.fetch_stanford_t1": {
  "data": {
   "shadows": "dipy.data.fetch_stanford_t1"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_ascm.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_ascm.non_local_means": {
  "data": {
   "shadows": "dipy.denoise.non_local_means.non_local_means"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_ascm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_ascm.read_stanford_t1": {
  "data": {
   "shadows": "dipy.data.read_stanford_t1"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_ascm.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_ascm.test_ascm_accuracy": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "dipy.data.get_data",
    "dipy.denoise.adaptive_soft_matching.adaptive_soft_matching",
    "dipy.denoise.noise_estimate.estimate_sigma",
    "dipy.denoise.non_local_means.non_local_means",
    "nibabel.load",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_ascm.test_ascm_random_noise": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "dipy.denoise.adaptive_soft_matching.adaptive_soft_matching",
    "dipy.denoise.non_local_means.non_local_means",
    "numpy.random.standard_normal",
    "numpy.round",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_ascm.test_ascm_rmse_with_nlmeans": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "dipy.denoise.adaptive_soft_matching.adaptive_soft_matching",
    "dipy.denoise.non_local_means.non_local_means",
    "numpy.abs",
    "numpy.mean",
    "numpy.ones",
    "numpy.random.standard_normal",
    "numpy.sum",
    "numpy.testing.assert_",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_ascm.test_ascm_static": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "dipy.denoise.adaptive_soft_matching.adaptive_soft_matching",
    "dipy.denoise.non_local_means.non_local_means",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_ascm.test_sharpness": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "dipy.denoise.adaptive_soft_matching.adaptive_soft_matching",
    "dipy.denoise.non_local_means.non_local_means",
    "numpy.abs",
    "numpy.mean",
    "numpy.ones",
    "numpy.random.standard_normal",
    "numpy.testing.assert_",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_denoise": {
  "data": {},
  "type": "module"
 },
 "dipy.denoise.tests.test_denoise.dpd": {
  "data": {
   "shadows": "dipy.data"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_denoise.estimate_sigma": {
  "data": {
   "shadows": "dipy.denoise.noise_estimate.estimate_sigma"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_denoise.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_denoise.nlmeans": {
  "data": {
   "shadows": "dipy.denoise.nlmeans.nlmeans"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_denoise.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_denoise.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_denoise.test_denoise": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "dipy.data.get_data",
    "dipy.denoise.nlmeans.nlmeans",
    "dipy.denoise.noise_estimate.estimate_sigma",
    "nibabel.load"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_kernel": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.denoise.tests.test_kernel.EnhancementKernel": {
  "data": {
   "shadows": "dipy.denoise.enhancement_kernel.EnhancementKernel"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_kernel.Sphere": {
  "data": {
   "shadows": "dipy.core.sphere.Sphere"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_kernel.convolve": {
  "data": {
   "shadows": "dipy.denoise.shift_twist_convolution.convolve"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_kernel.convolve_sf": {
  "data": {
   "shadows": "dipy.denoise.shift_twist_convolution.convolve_sf"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_kernel.get_sphere": {
  "data": {
   "shadows": "dipy.data.get_sphere"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_kernel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_kernel.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_kernel.sf_to_sh": {
  "data": {
   "shadows": "dipy.reconst.shm.sf_to_sh"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_kernel.sh_to_sf": {
  "data": {
   "shadows": "dipy.reconst.shm.sh_to_sf"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_kernel.test_enhancement_kernel": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "dipy.denoise.enhancement_kernel.EnhancementKernel",
    "len",
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_kernel.test_kernel_input": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "dipy.core.sphere.Sphere",
    "dipy.denoise.enhancement_kernel.EnhancementKernel",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_kernel.test_normalization": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "dipy.denoise.enhancement_kernel.EnhancementKernel",
    "dipy.denoise.shift_twist_convolution.convolve",
    "dipy.reconst.shm.sf_to_sh",
    "dipy.reconst.shm.sh_to_sf",
    "numpy.amax",
    "numpy.float64",
    "numpy.ones",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_kernel.test_spike": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "dipy.denoise.enhancement_kernel.EnhancementKernel",
    "dipy.denoise.shift_twist_convolution.convolve_sf",
    "numpy.array",
    "numpy.float64",
    "numpy.sum",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_lpca": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.denoise.tests.test_lpca.HemiSphere": {
  "data": {
   "shadows": "dipy.core.sphere.HemiSphere"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_lpca.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_lpca.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_lpca.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_lpca.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_lpca.disperse_charges": {
  "data": {
   "shadows": "dipy.core.sphere.disperse_charges"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_lpca.gen_gtab": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "dipy.core.gradients.generate_bvecs",
    "dipy.core.gradients.gradient_table",
    "numpy.hstack",
    "numpy.ones",
    "numpy.vstack",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_lpca.generate_bvecs": {
  "data": {
   "shadows": "dipy.core.gradients.generate_bvecs"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_lpca.gradient_table": {
  "data": {
   "shadows": "dipy.core.gradients.gradient_table"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_lpca.localpca": {
  "data": {
   "shadows": "dipy.denoise.localpca.localpca"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_lpca.multi_tensor": {
  "data": {
   "shadows": "dipy.sims.voxel.multi_tensor"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_lpca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_lpca.rfiw_phantom": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "dipy.sims.voxel.multi_tensor",
    "numpy.array",
    "numpy.random.normal",
    "numpy.sqrt",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_lpca.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_lpca.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_lpca.sps": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_lpca.test_lpca_boundary_behaviour": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "dipy.denoise.localpca.localpca",
    "numpy.abs",
    "numpy.ones",
    "numpy.random.standard_normal",
    "numpy.round",
    "numpy.std",
    "numpy.sum",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_lpca.test_lpca_dtype": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "dipy.denoise.localpca.localpca",
    "numpy.all",
    "numpy.float32",
    "numpy.float64",
    "numpy.ones",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.uint16"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_lpca.test_lpca_ill_conditioned": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "ValueError",
    "dipy.denoise.localpca.localpca",
    "dipy.denoise.tests.test_lpca.gen_gtab",
    "dipy.denoise.tests.test_lpca.rfiw_phantom",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_lpca.test_lpca_random_noise": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "dipy.denoise.localpca.localpca",
    "numpy.random.standard_normal",
    "numpy.round",
    "numpy.std",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_lpca.test_lpca_rmse": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "dipy.denoise.localpca.localpca",
    "numpy.mean",
    "numpy.random.standard_normal",
    "numpy.sqrt",
    "numpy.std",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_lpca.test_lpca_sharpness": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "dipy.denoise.localpca.localpca",
    "numpy.abs",
    "numpy.float64",
    "numpy.mean",
    "numpy.ones",
    "numpy.random.standard_normal",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_lpca.test_lpca_sigma_wrong_shape": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "ValueError",
    "dipy.denoise.localpca.localpca",
    "dipy.denoise.tests.test_lpca.gen_gtab",
    "dipy.denoise.tests.test_lpca.rfiw_phantom",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_lpca.test_lpca_static": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "dipy.denoise.localpca.localpca",
    "numpy.float64",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_lpca.test_lpca_wrong": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "ValueError",
    "dipy.denoise.localpca.localpca",
    "numpy.ones",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_lpca.test_phantom": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "dipy.denoise.localpca.localpca",
    "dipy.denoise.tests.test_lpca.gen_gtab",
    "dipy.denoise.tests.test_lpca.rfiw_phantom",
    "numpy.abs",
    "numpy.exp",
    "numpy.max",
    "numpy.ones",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros_like",
    "scipy.special.iv"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_nlmeans": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.denoise.tests.test_nlmeans.add_padding_reflection": {
  "data": {
   "shadows": "dipy.denoise.denspeed.add_padding_reflection"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_nlmeans.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_nlmeans.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_nlmeans.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_nlmeans.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_nlmeans.cpu_count": {
  "data": {
   "shadows": "dipy.utils.omp.cpu_count"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_nlmeans.have_openmp": {
  "data": {
   "shadows": "dipy.utils.omp.have_openmp"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_nlmeans.nlmeans": {
  "data": {
   "shadows": "dipy.denoise.nlmeans.nlmeans"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_nlmeans.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_nlmeans.remove_padding": {
  "data": {
   "shadows": "dipy.denoise.denspeed.remove_padding"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_nlmeans.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_nlmeans.test_nlmeans_4D_and_mask": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "dipy.denoise.nlmeans.nlmeans",
    "numpy.ones",
    "numpy.round",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_nlmeans.test_nlmeans_4d_3dsigma_and_threads": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "dipy.denoise.nlmeans.nlmeans",
    "dipy.utils.omp.cpu_count",
    "dipy.utils.omp.have_openmp",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif",
    "numpy.zeros",
    "print",
    "time.time"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_nlmeans.test_nlmeans_boundary": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "dipy.denoise.nlmeans.nlmeans",
    "numpy.ones",
    "numpy.random.standard_normal",
    "numpy.std",
    "numpy.testing.assert_",
    "numpy.zeros",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_nlmeans.test_nlmeans_dtype": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "dipy.denoise.nlmeans.nlmeans",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.uint16",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_nlmeans.test_nlmeans_padding": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "dipy.denoise.denspeed.add_padding_reflection",
    "dipy.denoise.denspeed.remove_padding",
    "numpy.random.standard_normal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_nlmeans.test_nlmeans_random_noise": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "dipy.denoise.nlmeans.nlmeans",
    "numpy.ones",
    "numpy.random.standard_normal",
    "numpy.round",
    "numpy.std",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_nlmeans.test_nlmeans_static": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "dipy.denoise.nlmeans.nlmeans",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_nlmeans.test_nlmeans_wrong": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "dipy.denoise.nlmeans.nlmeans",
    "numpy.ones",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_nlmeans.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_noise_estimate": {
  "data": {},
  "type": "module"
 },
 "dipy.denoise.tests.test_noise_estimate._inv_nchi_cdf": {
  "data": {
   "shadows": "dipy.denoise.noise_estimate._inv_nchi_cdf"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_noise_estimate._piesno_3D": {
  "data": {
   "shadows": "dipy.denoise.noise_estimate._piesno_3D"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_noise_estimate.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_noise_estimate.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_noise_estimate.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_noise_estimate.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_noise_estimate.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_noise_estimate.dpd": {
  "data": {
   "shadows": "dipy.data"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_noise_estimate.dpg": {
  "data": {
   "shadows": "dipy.core.gradients"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_noise_estimate.estimate_sigma": {
  "data": {
   "shadows": "dipy.denoise.noise_estimate.estimate_sigma"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_noise_estimate.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_noise_estimate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_noise_estimate.pca_noise_estimate": {
  "data": {
   "shadows": "dipy.denoise.pca_noise_estimate.pca_noise_estimate"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_noise_estimate.piesno": {
  "data": {
   "shadows": "dipy.denoise.noise_estimate.piesno"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_noise_estimate.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_noise_estimate.test_estimate_sigma": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "dipy.denoise.noise_estimate.estimate_sigma",
    "numpy.array",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_noise_estimate.test_inv_nchi": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "dipy.denoise.noise_estimate._inv_nchi_cdf",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_noise_estimate.test_pca_noise_estimate": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.denoise.pca_noise_estimate.pca_noise_estimate",
    "numpy.concatenate",
    "numpy.eye",
    "numpy.float64",
    "numpy.int16",
    "numpy.mean",
    "numpy.ones",
    "numpy.random.normal",
    "numpy.random.seed",
    "numpy.sqrt",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_noise_estimate.test_piesno": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "dipy.data.get_data",
    "dipy.denoise.noise_estimate._inv_nchi_cdf",
    "dipy.denoise.noise_estimate._piesno_3D",
    "dipy.denoise.noise_estimate.piesno",
    "nibabel.load",
    "numpy.abs",
    "numpy.all",
    "numpy.median",
    "numpy.ones_like",
    "numpy.random.randn",
    "numpy.sqrt",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_noise_estimate.test_piesno_type": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "dipy.denoise.noise_estimate.piesno",
    "numpy.int16",
    "numpy.ones",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_non_local_means": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.denoise.tests.test_non_local_means.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_non_local_means.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_non_local_means.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_non_local_means.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_non_local_means.non_local_means": {
  "data": {
   "shadows": "dipy.denoise.non_local_means.non_local_means"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_non_local_means.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_non_local_means.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.denoise.tests.test_non_local_means.test_nlmeans_4D_and_mask": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "dipy.denoise.non_local_means.non_local_means",
    "numpy.ones",
    "numpy.round",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_non_local_means.test_nlmeans_boundary": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "dipy.denoise.non_local_means.non_local_means",
    "numpy.random.standard_normal",
    "numpy.std",
    "numpy.testing.assert_",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_non_local_means.test_nlmeans_dtype": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "dipy.denoise.non_local_means.non_local_means",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.uint16",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_non_local_means.test_nlmeans_random_noise": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "bool",
    "dipy.denoise.non_local_means.non_local_means",
    "numpy.random.standard_normal",
    "numpy.round",
    "numpy.std",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_non_local_means.test_nlmeans_static": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "dipy.denoise.non_local_means.non_local_means",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_non_local_means.test_nlmeans_wrong": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "dipy.denoise.non_local_means.non_local_means",
    "numpy.ones",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.denoise.tests.test_non_local_means.test_scalar_sigma": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "dipy.denoise.non_local_means.non_local_means",
    "numpy.random.standard_normal",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.direction": {
  "data": {},
  "type": "module"
 },
 "dipy.direction.tests": {
  "data": {},
  "type": "module"
 },
 "dipy.direction.tests.test_bootstrap_direction_getter": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.direction.tests.test_bootstrap_direction_getter.BootDirectionGetter": {
  "data": {
   "shadows": "dipy.direction.bootstrap_direction_getter.BootDirectionGetter"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_bootstrap_direction_getter.BootPmfGen": {
  "data": {
   "shadows": "dipy.direction.pmf.BootPmfGen"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_bootstrap_direction_getter.ConstrainedSphericalDeconvModel": {
  "data": {
   "shadows": "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_bootstrap_direction_getter.DEFAULT_SH": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "dipy.direction.tests.test_bootstrap_direction_getter.HemiSphere": {
  "data": {
   "shadows": "dipy.core.sphere.HemiSphere"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_bootstrap_direction_getter.SimplePmfGen": {
  "data": {
   "shadows": "dipy.direction.pmf.SimplePmfGen"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_bootstrap_direction_getter.cart2sphere": {
  "data": {
   "shadows": "dipy.core.geometry.cart2sphere"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_bootstrap_direction_getter.dti": {
  "data": {
   "shadows": "dipy.reconst.dti"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_bootstrap_direction_getter.gradient_table": {
  "data": {
   "shadows": "dipy.core.gradients.gradient_table"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_bootstrap_direction_getter.multi_tensor": {
  "data": {
   "shadows": "dipy.sims.voxel.multi_tensor"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_bootstrap_direction_getter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_bootstrap_direction_getter.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_bootstrap_direction_getter.shm": {
  "data": {
   "shadows": "dipy.reconst.shm"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_bootstrap_direction_getter.single_tensor": {
  "data": {
   "shadows": "dipy.sims.voxel.single_tensor"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_bootstrap_direction_getter.test_bdg_get_direction": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError",
    "dipy.core.sphere.HemiSphere.from_sphere",
    "dipy.core.sphere.unit_icosahedron.subdivide",
    "dipy.direction.bootstrap_direction_getter.BootDirectionGetter",
    "dipy.direction.pmf.SimplePmfGen",
    "len",
    "numpy.rad2deg",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.direction.tests.test_bootstrap_direction_getter.test_bdg_initial_direction": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.core.sphere.HemiSphere.from_sphere",
    "dipy.core.sphere.unit_icosahedron",
    "dipy.direction.bootstrap_direction_getter.BootDirectionGetter.from_data",
    "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel",
    "dipy.reconst.dti.TensorModel",
    "dipy.sims.voxel.multi_tensor",
    "dipy.sims.voxel.single_tensor",
    "len",
    "numpy.array",
    "numpy.insert",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.direction.tests.test_bootstrap_direction_getter.test_bdg_residual": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "dipy.core.geometry.cart2sphere",
    "dipy.core.gradients.gradient_table",
    "dipy.core.sphere.HemiSphere.from_sphere",
    "dipy.core.sphere.unit_icosahedron",
    "dipy.direction.pmf.BootPmfGen",
    "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel",
    "dipy.reconst.shm.real_sym_sh_basis",
    "len",
    "numpy.any",
    "numpy.array",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.insert",
    "numpy.ones",
    "numpy.random.random",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises",
    "numpy.tile",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.direction.tests.test_bootstrap_direction_getter.unit_icosahedron": {
  "data": {
   "shadows": "dipy.core.sphere.unit_icosahedron"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_peaks": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.core.gradients.GradientTable",
    "dipy.core.subdivide_octahedron.create_unit_hemisphere",
    "dipy.direction.tests.test_peaks._sphere",
    "numpy.ones",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.direction.tests.test_peaks.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_peaks.CsaOdfModel": {
  "data": {
   "shadows": "dipy.reconst.shm.CsaOdfModel"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_peaks.GradientTable": {
  "data": {
   "shadows": "dipy.core.gradients.GradientTable"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_peaks.HemiSphere": {
  "data": {
   "shadows": "dipy.core.sphere.HemiSphere"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_peaks.OdfFit": {
  "data": {
   "shadows": "dipy.reconst.odf.OdfFit"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_peaks.OdfModel": {
  "data": {
   "shadows": "dipy.reconst.odf.OdfModel"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_peaks.SimpleOdfFit": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "dipy.reconst.odf.OdfFit"
   ]
  },
  "type": "class"
 },
 "dipy.direction.tests.test_peaks.SimpleOdfFit.odf": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.ascontiguousarray"
   ]
  },
  "type": "function"
 },
 "dipy.direction.tests.test_peaks.SimpleOdfModel": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "dipy.direction.tests.test_peaks._sphere",
    "dipy.reconst.odf.OdfModel"
   ]
  },
  "type": "class"
 },
 "dipy.direction.tests.test_peaks.SimpleOdfModel.fit": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "dipy.direction.tests.test_peaks.SimpleOdfFit"
   ]
  },
  "type": "function"
 },
 "dipy.direction.tests.test_peaks._create_mt_sim": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.core.sphere.HemiSphere.from_sphere",
    "dipy.data.get_data",
    "dipy.data.get_sphere",
    "dipy.sims.voxel.multi_tensor",
    "dipy.sims.voxel.multi_tensor_odf",
    "numpy.load"
   ]
  },
  "type": "function"
 },
 "dipy.direction.tests.test_peaks._gtab": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "dipy.direction.tests.test_peaks._odf": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "dipy.direction.tests.test_peaks._sphere": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "dipy.direction.tests.test_peaks.angular_similarity": {
  "data": {
   "shadows": "dipy.core.sphere_stats.angular_similarity"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_peaks.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_peaks.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_peaks.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_peaks.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_peaks.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_peaks.create_unit_hemisphere": {
  "data": {
   "shadows": "dipy.core.subdivide_octahedron.create_unit_hemisphere"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_peaks.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_peaks.get_sphere": {
  "data": {
   "shadows": "dipy.data.get_sphere"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_peaks.gfa": {
  "data": {
   "shadows": "dipy.reconst.odf.gfa"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_peaks.gradient_table": {
  "data": {
   "shadows": "dipy.core.gradients.gradient_table"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_peaks.multi_tensor": {
  "data": {
   "shadows": "dipy.sims.voxel.multi_tensor"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_peaks.multi_tensor_odf": {
  "data": {
   "shadows": "dipy.sims.voxel.multi_tensor_odf"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_peaks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_peaks.peak_directions": {
  "data": {
   "shadows": "dipy.direction.peaks.peak_directions"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_peaks.peak_directions_nl": {
  "data": {
   "shadows": "dipy.direction.peaks.peak_directions_nl"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_peaks.peaks_from_model": {
  "data": {
   "shadows": "dipy.direction.peaks.peaks_from_model"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_peaks.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_peaks.reshape_peaks_for_visualization": {
  "data": {
   "shadows": "dipy.direction.peaks.reshape_peaks_for_visualization"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_peaks.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_peaks.test_OdfFit": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "dipy.direction.tests.test_peaks.SimpleOdfModel",
    "dipy.direction.tests.test_peaks._gtab",
    "dipy.direction.tests.test_peaks._sphere",
    "len",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.direction.tests.test_peaks.test_degenerative_cases": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "all",
    "dipy.data.get_sphere",
    "dipy.direction.peaks.peak_directions",
    "len",
    "numpy.finfo",
    "numpy.float",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.direction.tests.test_peaks.test_difference_with_minmax": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "dipy.direction.peaks.peak_directions",
    "dipy.direction.tests.test_peaks._create_mt_sim",
    "len",
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.direction.tests.test_peaks.test_peak_directions": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "dipy.direction.peaks.peak_directions",
    "dipy.direction.tests.test_peaks.SimpleOdfModel",
    "dipy.direction.tests.test_peaks._gtab",
    "dir",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.direction.tests.test_peaks.test_peak_directions_nl": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "abs",
    "dipy.core.sphere.unit_icosahedron.subdivide",
    "dipy.direction.peaks.peak_directions_nl",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.direction.tests.test_peaks.test_peak_directions_nl.discrete_eval": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "dipy.direction.tests.test_peaks.test_peak_directions_thorough": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "abs",
    "dipy.core.sphere_stats.angular_similarity",
    "dipy.direction.peaks.peak_directions",
    "dipy.direction.tests.test_peaks._create_mt_sim",
    "len",
    "numpy.arccos",
    "numpy.array",
    "numpy.dot",
    "numpy.rad2deg",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.direction.tests.test_peaks.test_peaksFromModel": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "dipy.direction.peaks.peaks_from_model",
    "dipy.direction.tests.test_peaks.SimpleOdfModel",
    "dipy.direction.tests.test_peaks._gtab",
    "dipy.direction.tests.test_peaks._odf",
    "dipy.direction.tests.test_peaks._sphere",
    "dipy.direction.tests.test_peaks.pickle",
    "dipy.reconst.odf.gfa",
    "getattr",
    "io.BytesIO",
    "len",
    "numpy.arange",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.direction.tests.test_peaks.test_peaksFromModelParallel": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.direction.peaks.peaks_from_model",
    "dipy.direction.tests.test_peaks.SimpleOdfModel",
    "dipy.direction.tests.test_peaks._sphere",
    "dipy.sims.voxel.multi_tensor",
    "numpy.array",
    "numpy.load",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.direction.tests.test_peaks.test_peaks_shm_coeff": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.data.get_sphere",
    "dipy.direction.peaks.peaks_from_model",
    "dipy.reconst.shm.CsaOdfModel",
    "dipy.sims.voxel.multi_tensor",
    "numpy.array",
    "numpy.dot",
    "numpy.load",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.direction.tests.test_peaks.test_reshape_peaks_for_visualization": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "dipy.direction.peaks.reshape_peaks_for_visualization",
    "numpy.random.randn",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.direction.tests.test_peaks.unit_icosahedron": {
  "data": {
   "shadows": "dipy.core.sphere.unit_icosahedron"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_pmf": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.direction.tests.test_pmf.BootPmfGen": {
  "data": {
   "shadows": "dipy.direction.pmf.BootPmfGen"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_pmf.ConstrainedSphericalDeconvModel": {
  "data": {
   "shadows": "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_pmf.HemiSphere": {
  "data": {
   "shadows": "dipy.core.sphere.HemiSphere"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_pmf.SHCoeffPmfGen": {
  "data": {
   "shadows": "dipy.direction.pmf.SHCoeffPmfGen"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_pmf.SimplePmfGen": {
  "data": {
   "shadows": "dipy.direction.pmf.SimplePmfGen"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_pmf.TensorModel": {
  "data": {
   "shadows": "dipy.reconst.dti.TensorModel"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_pmf.gradient_table": {
  "data": {
   "shadows": "dipy.core.gradients.gradient_table"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_pmf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_pmf.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_pmf.single_tensor": {
  "data": {
   "shadows": "dipy.sims.voxel.single_tensor"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_pmf.test_boot_pmf": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.core.sphere.HemiSphere.from_sphere",
    "dipy.core.sphere.unit_octahedron",
    "dipy.direction.pmf.BootPmfGen",
    "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel",
    "dipy.reconst.dti.TensorModel",
    "dipy.sims.voxel.single_tensor",
    "len",
    "numpy.array",
    "numpy.insert",
    "numpy.ones",
    "numpy.sum",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "dipy.direction.tests.test_pmf.test_pmf_from_array": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "dipy.core.sphere.HemiSphere.from_sphere",
    "dipy.core.sphere.unit_octahedron",
    "dipy.direction.pmf.SimplePmfGen",
    "len",
    "numpy.array",
    "numpy.ones",
    "numpy.sum",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.direction.tests.test_pmf.test_pmf_from_sh": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "dipy.core.sphere.HemiSphere.from_sphere",
    "dipy.core.sphere.unit_octahedron",
    "dipy.direction.pmf.SHCoeffPmfGen",
    "len",
    "numpy.array",
    "numpy.ones",
    "numpy.sum",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.direction.tests.test_pmf.unit_octahedron": {
  "data": {
   "shadows": "dipy.core.sphere.unit_octahedron"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_prob_direction_getter": {
  "data": {},
  "type": "module"
 },
 "dipy.direction.tests.test_prob_direction_getter.ProbabilisticDirectionGetter": {
  "data": {
   "shadows": "dipy.direction.ProbabilisticDirectionGetter"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_prob_direction_getter.SphHarmFit": {
  "data": {
   "shadows": "dipy.reconst.shm.SphHarmFit"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_prob_direction_getter.SphHarmModel": {
  "data": {
   "shadows": "dipy.reconst.shm.SphHarmModel"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_prob_direction_getter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_prob_direction_getter.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.direction.tests.test_prob_direction_getter.test_ProbabilisticDirectionGetter": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "SillyModel",
    "ValueError",
    "dipy.core.sphere.unit_octahedron",
    "dipy.core.sphere.unit_octahedron.theta.shape",
    "dipy.core.sphere.unit_octahedron.vertices.copy",
    "dipy.direction.ProbabilisticDirectionGetter.from_pmf",
    "dipy.direction.ProbabilisticDirectionGetter.from_shcoeff",
    "dir",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.direction.tests.test_prob_direction_getter.test_ProbabilisticDirectionGetter.SillyModel": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "dipy.reconst.shm.SphHarmModel"
   ]
  },
  "type": "class"
 },
 "dipy.direction.tests.test_prob_direction_getter.test_ProbabilisticDirectionGetter.SillyModel.fit": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "dipy.reconst.shm.SphHarmFit",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.direction.tests.test_prob_direction_getter.unit_octahedron": {
  "data": {
   "shadows": "dipy.core.sphere.unit_octahedron"
  },
  "type": "import"
 },
 "dipy.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "dipy.external": {
  "data": {
   "symbols_in_volume": [
    "numpy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "dipy.external.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "dipy.external.fsl": {
  "data": {},
  "type": "module"
 },
 "dipy.external.fsl.Dpy": {
  "data": {
   "shadows": "dipy.io.dpy.Dpy"
  },
  "type": "import"
 },
 "dipy.external.fsl.FSLError": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "dipy.external.fsl.InTemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.InTemporaryDirectory"
  },
  "type": "import"
 },
 "dipy.external.fsl.PIPE": {
  "data": {
   "shadows": "subprocess.PIPE"
  },
  "type": "import"
 },
 "dipy.external.fsl.Popen": {
  "data": {
   "shadows": "subprocess.Popen"
  },
  "type": "import"
 },
 "dipy.external.fsl._VAL_FMT": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "dipy.external.fsl._x_flipper": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.diag"
   ]
  },
  "type": "function"
 },
 "dipy.external.fsl.affine_transform": {
  "data": {
   "shadows": "scipy.ndimage.affine_transform"
  },
  "type": "import"
 },
 "dipy.external.fsl.apply_warp": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "dipy.external.fsl.pipe",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.external.fsl.bet": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "dipy.external.fsl.pipe",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.external.fsl.create_displacements": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "dipy.external.fsl.pipe",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.external.fsl.dcm2nii": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "dipy.external.fsl.pipe",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.external.fsl.eddy_correct": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "dipy.external.fsl.pipe",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "dipy.external.fsl.flirt2aff": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "dipy.external.fsl._x_flipper",
    "numpy.diag",
    "numpy.dot",
    "numpy.linalg.det",
    "numpy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "dipy.external.fsl.flirt2aff_files": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "dipy.external.fsl.flirt2aff",
    "nibabel.load",
    "numpy.loadtxt"
   ]
  },
  "type": "function"
 },
 "dipy.external.fsl.have_flirt": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "subprocess.PIPE",
    "subprocess.Popen"
   ]
  },
  "type": "function"
 },
 "dipy.external.fsl.mc": {
  "data": {
   "shadows": "scipy.ndimage.map_coordinates"
  },
  "type": "import"
 },
 "dipy.external.fsl.newaxis": {
  "data": {
   "shadows": "numpy.newaxis"
  },
  "type": "import"
 },
 "dipy.external.fsl.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.external.fsl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.external.fsl.npl": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "dipy.external.fsl.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dipy.external.fsl.pipe": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "print",
    "subprocess.PIPE",
    "subprocess.Popen"
   ]
  },
  "type": "function"
 },
 "dipy.external.fsl.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "dipy.external.fsl.run_flirt_imgs": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "dipy.external.fsl.FSLError",
    "dipy.external.fsl.flirt2aff",
    "dipy.external.fsl.os",
    "nibabel.save",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "numpy.loadtxt",
    "subprocess.PIPE",
    "subprocess.Popen"
   ]
  },
  "type": "function"
 },
 "dipy.external.fsl.warp_displacements": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "dipy.external.fsl.flirt2aff_files",
    "nibabel.Nifti1Image",
    "nibabel.load",
    "nibabel.save",
    "numpy.arange",
    "numpy.dot",
    "numpy.linalg.inv",
    "numpy.newaxis",
    "numpy.zeros",
    "scipy.ndimage.map_coordinates"
   ]
  },
  "type": "function"
 },
 "dipy.external.fsl.warp_displacements_tracks": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "dipy.external.fsl.flirt2aff_files",
    "dipy.io.dpy.Dpy",
    "int",
    "len",
    "nibabel.load",
    "numpy.dot",
    "numpy.linspace",
    "numpy.round",
    "numpy.vstack",
    "range",
    "scipy.ndimage.affine_transform",
    "scipy.ndimage.map_coordinates"
   ]
  },
  "type": "function"
 },
 "dipy.external.fsl.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "dipy.external.fsl.write_bvals_bvecs": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "dipy.external.fsl._VAL_FMT",
    "dipy.external.fsl.os",
    "len",
    "numpy.asarray",
    "numpy.isnan",
    "open",
    "os.path.join",
    "tuple"
   ]
  },
  "type": "function"
 },
 "dipy.external.test": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "dipy.external.tests": {
  "data": {},
  "type": "module"
 },
 "dipy.fixes": {
  "data": {},
  "type": "module"
 },
 "dipy.fixes.argparse": {
  "data": {
   "symbols_in_volume": [
    "DeprecationWarning",
    "NameError",
    "dipy.fixes.argparse.warnings",
    "set",
    "sorted",
    "str",
    "sys.version_info"
   ]
  },
  "type": "module"
 },
 "dipy.fixes.argparse.Action": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "dipy.fixes.argparse._AttributeHolder"
   ]
  },
  "type": "class"
 },
 "dipy.fixes.argparse.Action.__call__": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "NotImplementedError",
    "gettext.gettext"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.Action.__init__": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "help",
    "type"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.Action._get_kwargs": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentDefaultsHelpFormatter": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "dipy.fixes.argparse.HelpFormatter"
   ]
  },
  "type": "class"
 },
 "dipy.fixes.argparse.ArgumentDefaultsHelpFormatter._get_help_string": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "dipy.fixes.argparse.OPTIONAL",
    "dipy.fixes.argparse.SUPPRESS",
    "dipy.fixes.argparse.ZERO_OR_MORE",
    "help"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentError": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "dipy.fixes.argparse.ArgumentError.__init__": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "dipy.fixes.argparse._get_action_name"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentError.__str__": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "dict",
    "format"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser": {
  "data": {
   "lineno": 1515,
   "symbols_in_volume": [
    "dipy.fixes.argparse._ActionsContainer",
    "dipy.fixes.argparse._AttributeHolder"
   ]
  },
  "type": "class"
 },
 "dipy.fixes.argparse.ArgumentParser.__init__": {
  "data": {
   "lineno": 1534,
   "symbols_in_volume": [
    "AttributeError",
    "add_group",
    "conflict_handler",
    "dipy.fixes.argparse.ArgumentParser",
    "dipy.fixes.argparse.HelpFormatter",
    "dipy.fixes.argparse.SUPPRESS",
    "gettext.gettext",
    "os.path.basename",
    "super",
    "superinit",
    "sys.argv"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser.__init__.identity": {
  "data": {
   "lineno": 1572
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser._add_action": {
  "data": {
   "lineno": 1646
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser._check_value": {
  "data": {
   "lineno": 2200,
   "symbols_in_volume": [
    "action",
    "action.choices",
    "dipy.fixes.argparse.ArgumentError",
    "gettext.gettext",
    "map",
    "repr"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser._get_formatter": {
  "data": {
   "lineno": 2244
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser._get_kwargs": {
  "data": {
   "lineno": 1600,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser._get_nargs_pattern": {
  "data": {
   "lineno": 2095,
   "symbols_in_volume": [
    "action.nargs",
    "action.option_strings",
    "dipy.fixes.argparse.ONE_OR_MORE",
    "dipy.fixes.argparse.OPTIONAL",
    "dipy.fixes.argparse.PARSER",
    "dipy.fixes.argparse.ZERO_OR_MORE"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser._get_option_tuples": {
  "data": {
   "lineno": 2051,
   "symbols_in_volume": [
    "action",
    "gettext.gettext"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser._get_optional_actions": {
  "data": {
   "lineno": 1653
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser._get_positional_actions": {
  "data": {
   "lineno": 1658
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser._get_value": {
  "data": {
   "lineno": 2180,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "action",
    "action.type",
    "dipy.fixes.argparse.ArgumentError",
    "getattr",
    "gettext.gettext",
    "hasattr",
    "repr",
    "type_func"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser._get_values": {
  "data": {
   "lineno": 2135,
   "symbols_in_volume": [
    "action",
    "action.const",
    "action.default",
    "action.nargs",
    "action.option_strings",
    "dipy.fixes.argparse.OPTIONAL",
    "dipy.fixes.argparse.PARSER",
    "dipy.fixes.argparse.ZERO_OR_MORE",
    "dipy.fixes.argparse._basestring",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser._match_argument": {
  "data": {
   "lineno": 1965,
   "symbols_in_volume": [
    "action",
    "action.nargs",
    "dipy.fixes.argparse.ArgumentError",
    "dipy.fixes.argparse.ONE_OR_MORE",
    "dipy.fixes.argparse.OPTIONAL",
    "gettext.gettext",
    "len",
    "re.match"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser._match_arguments_partial": {
  "data": {
   "lineno": 1984,
   "symbols_in_volume": [
    "action",
    "len",
    "range",
    "re.match"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser._parse_known_args": {
  "data": {
   "lineno": 1704,
   "symbols_in_volume": [
    "action",
    "action.help",
    "action.required",
    "consume_optional",
    "consume_positionals",
    "dipy.fixes.argparse.SUPPRESS",
    "dipy.fixes.argparse._get_action_name",
    "enumerate",
    "gettext.gettext",
    "iter",
    "max",
    "min",
    "sets.Set"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser._parse_known_args.consume_optional": {
  "data": {
   "lineno": 1772,
   "symbols_in_volume": [
    "action",
    "dipy.fixes.argparse.ArgumentError",
    "gettext.gettext",
    "match_argument",
    "take_action"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser._parse_known_args.consume_positionals": {
  "data": {
   "lineno": 1849,
   "symbols_in_volume": [
    "action",
    "len",
    "match_partial",
    "take_action",
    "zip"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser._parse_known_args.take_action": {
  "data": {
   "lineno": 1751,
   "symbols_in_volume": [
    "action",
    "dipy.fixes.argparse.ArgumentError",
    "dipy.fixes.argparse.SUPPRESS",
    "dipy.fixes.argparse._get_action_name",
    "gettext.gettext"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser._parse_optional": {
  "data": {
   "lineno": 2000,
   "symbols_in_volume": [
    "action",
    "gettext.gettext",
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser._print_message": {
  "data": {
   "lineno": 2259,
   "symbols_in_volume": [
    "sys.stderr"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser._read_args_from_files": {
  "data": {
   "lineno": 1939,
   "symbols_in_volume": [
    "IOError",
    "open",
    "str",
    "sys.exc_info"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser.add_subparsers": {
  "data": {
   "lineno": 1615,
   "symbols_in_volume": [
    "gettext.gettext",
    "parsers_class",
    "type"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser.error": {
  "data": {
   "lineno": 2273,
   "symbols_in_volume": [
    "gettext.gettext",
    "sys.stderr"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser.exit": {
  "data": {
   "lineno": 2268,
   "symbols_in_volume": [
    "sys.exit",
    "sys.stderr.write"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser.format_help": {
  "data": {
   "lineno": 2216
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser.format_usage": {
  "data": {
   "lineno": 2210
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser.format_version": {
  "data": {
   "lineno": 2239
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser.parse_args": {
  "data": {
   "lineno": 1666,
   "symbols_in_volume": [
    "gettext.gettext"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser.parse_known_args": {
  "data": {
   "lineno": 1673,
   "symbols_in_volume": [
    "dipy.fixes.argparse.ArgumentError",
    "dipy.fixes.argparse.Namespace",
    "dipy.fixes.argparse.SUPPRESS",
    "dipy.fixes.argparse._basestring",
    "hasattr",
    "isinstance",
    "setattr",
    "str",
    "sys.argv",
    "sys.exc_info"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser.print_help": {
  "data": {
   "lineno": 2253
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser.print_usage": {
  "data": {
   "lineno": 2250
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ArgumentParser.print_version": {
  "data": {
   "lineno": 2256
  },
  "type": "function"
 },
 "dipy.fixes.argparse.FileType": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.fixes.argparse.FileType.__call__": {
  "data": {
   "lineno": 1128,
   "symbols_in_volume": [
    "ValueError",
    "gettext.gettext",
    "open",
    "sys.stdin",
    "sys.stdout"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.FileType.__init__": {
  "data": {
   "lineno": 1124
  },
  "type": "function"
 },
 "dipy.fixes.argparse.FileType.__repr__": {
  "data": {
   "lineno": 1145,
   "symbols_in_volume": [
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.HelpFormatter": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.fixes.argparse.HelpFormatter._Section": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.fixes.argparse.HelpFormatter._Section.__init__": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "dipy.fixes.argparse.HelpFormatter._Section.format_help": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "dipy.fixes.argparse.SUPPRESS",
    "func",
    "join"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.HelpFormatter.__init__": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "int",
    "os.environ",
    "re.compile"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.HelpFormatter._add_item": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.HelpFormatter._dedent": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "dipy.fixes.argparse.HelpFormatter._expand_help": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "dict",
    "dipy.fixes.argparse.SUPPRESS",
    "list",
    "str",
    "vars"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.HelpFormatter._fill_text": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "textwrap.fill"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.HelpFormatter._format_action": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "len",
    "min"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.HelpFormatter._format_action_invocation": {
  "data": {
   "lineno": 564
  },
  "type": "function"
 },
 "dipy.fixes.argparse.HelpFormatter._format_actions_usage": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "ValueError",
    "dipy.fixes.argparse.SUPPRESS",
    "dipy.fixes.argparse._sorted",
    "enumerate",
    "len",
    "open",
    "range",
    "re.sub",
    "sets.Set"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.HelpFormatter._format_args": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "dipy.fixes.argparse.ONE_OR_MORE",
    "dipy.fixes.argparse.OPTIONAL",
    "dipy.fixes.argparse.PARSER",
    "dipy.fixes.argparse.ZERO_OR_MORE",
    "get_metavar",
    "gettext.gettext",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.HelpFormatter._format_text": {
  "data": {
   "lineno": 512
  },
  "type": "function"
 },
 "dipy.fixes.argparse.HelpFormatter._format_usage": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "dict",
    "format",
    "get_lines",
    "gettext.gettext",
    "len",
    "re.findall"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.HelpFormatter._format_usage.get_lines": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.HelpFormatter._get_help_string": {
  "data": {
   "lineno": 650
  },
  "type": "function"
 },
 "dipy.fixes.argparse.HelpFormatter._indent": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "dipy.fixes.argparse.HelpFormatter._iter_indented_subactions": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "AttributeError",
    "get_subactions"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.HelpFormatter._join_parts": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "dipy.fixes.argparse.SUPPRESS"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.HelpFormatter._metavar_formatter": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "format",
    "str"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.HelpFormatter._metavar_formatter.format": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.HelpFormatter._split_lines": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "textwrap.wrap"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.HelpFormatter.add_argument": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "dipy.fixes.argparse.SUPPRESS",
    "get_invocation",
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.HelpFormatter.add_arguments": {
  "data": {
   "lineno": 311
  },
  "type": "function"
 },
 "dipy.fixes.argparse.HelpFormatter.add_text": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "dipy.fixes.argparse.SUPPRESS"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.HelpFormatter.add_usage": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "dipy.fixes.argparse.SUPPRESS"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.HelpFormatter.end_section": {
  "data": {
   "lineno": 280
  },
  "type": "function"
 },
 "dipy.fixes.argparse.HelpFormatter.format_help": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "help",
    "help.strip"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.HelpFormatter.start_section": {
  "data": {
   "lineno": 274
  },
  "type": "function"
 },
 "dipy.fixes.argparse.Namespace": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": [
    "dipy.fixes.argparse._AttributeHolder"
   ]
  },
  "type": "class"
 },
 "dipy.fixes.argparse.Namespace.__eq__": {
  "data": {
   "lineno": 1166,
   "symbols_in_volume": [
    "vars"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.Namespace.__init__": {
  "data": {
   "lineno": 1162,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.Namespace.__ne__": {
  "data": {
   "lineno": 1169
  },
  "type": "function"
 },
 "dipy.fixes.argparse.ONE_OR_MORE": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "dipy.fixes.argparse.OPTIONAL": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "dipy.fixes.argparse.PARSER": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "dipy.fixes.argparse.RawDescriptionHelpFormatter": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "dipy.fixes.argparse.HelpFormatter"
   ]
  },
  "type": "class"
 },
 "dipy.fixes.argparse.RawDescriptionHelpFormatter._fill_text": {
  "data": {
   "lineno": 661
  },
  "type": "function"
 },
 "dipy.fixes.argparse.RawTextHelpFormatter": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "dipy.fixes.argparse.RawDescriptionHelpFormatter"
   ]
  },
  "type": "class"
 },
 "dipy.fixes.argparse.RawTextHelpFormatter._split_lines": {
  "data": {
   "lineno": 672
  },
  "type": "function"
 },
 "dipy.fixes.argparse.SUPPRESS": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "dipy.fixes.argparse.ZERO_OR_MORE": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "dipy.fixes.argparse._": {
  "data": {
   "shadows": "gettext.gettext"
  },
  "type": "import"
 },
 "dipy.fixes.argparse._ActionsContainer": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.fixes.argparse._ActionsContainer.__init__": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": [
    "dipy.fixes.argparse._ActionsContainer",
    "dipy.fixes.argparse._AppendAction",
    "dipy.fixes.argparse._AppendConstAction",
    "dipy.fixes.argparse._CountAction",
    "dipy.fixes.argparse._HelpAction",
    "dipy.fixes.argparse._StoreAction",
    "dipy.fixes.argparse._StoreConstAction",
    "dipy.fixes.argparse._StoreFalseAction",
    "dipy.fixes.argparse._StoreTrueAction",
    "dipy.fixes.argparse._SubParsersAction",
    "dipy.fixes.argparse._VersionAction",
    "re.compile",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._ActionsContainer._add_action": {
  "data": {
   "lineno": 1289
  },
  "type": "function"
 },
 "dipy.fixes.argparse._ActionsContainer._add_container_actions": {
  "data": {
   "lineno": 1313,
   "symbols_in_volume": [
    "ValueError",
    "gettext.gettext"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._ActionsContainer._check_conflict": {
  "data": {
   "lineno": 1426,
   "symbols_in_volume": [
    "conflict_handler"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._ActionsContainer._get_handler": {
  "data": {
   "lineno": 1417,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "getattr",
    "gettext.gettext"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._ActionsContainer._get_optional_kwargs": {
  "data": {
   "lineno": 1369,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "gettext.gettext",
    "len",
    "sets.Set"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._ActionsContainer._get_positional_kwargs": {
  "data": {
   "lineno": 1353,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "dipy.fixes.argparse.OPTIONAL",
    "dipy.fixes.argparse.ZERO_OR_MORE",
    "gettext.gettext"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._ActionsContainer._handle_conflict_error": {
  "data": {
   "lineno": 1440,
   "symbols_in_volume": [
    "dipy.fixes.argparse.ArgumentError",
    "gettext.gettext"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._ActionsContainer._handle_conflict_resolve": {
  "data": {
   "lineno": 1447
  },
  "type": "function"
 },
 "dipy.fixes.argparse._ActionsContainer._pop_action_class": {
  "data": {
   "lineno": 1413
  },
  "type": "function"
 },
 "dipy.fixes.argparse._ActionsContainer._registry_get": {
  "data": {
   "lineno": 1231
  },
  "type": "function"
 },
 "dipy.fixes.argparse._ActionsContainer._remove_action": {
  "data": {
   "lineno": 1310
  },
  "type": "function"
 },
 "dipy.fixes.argparse._ActionsContainer.add_argument": {
  "data": {
   "lineno": 1249,
   "symbols_in_volume": [
    "action_class",
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._ActionsContainer.add_argument_group": {
  "data": {
   "lineno": 1279,
   "symbols_in_volume": [
    "dipy.fixes.argparse._ArgumentGroup"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._ActionsContainer.add_mutually_exclusive_group": {
  "data": {
   "lineno": 1284,
   "symbols_in_volume": [
    "dipy.fixes.argparse._MutuallyExclusiveGroup"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._ActionsContainer.register": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._ActionsContainer.set_defaults": {
  "data": {
   "lineno": 1237
  },
  "type": "function"
 },
 "dipy.fixes.argparse._AppendAction": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "dipy.fixes.argparse.Action"
   ]
  },
  "type": "class"
 },
 "dipy.fixes.argparse._AppendAction.__call__": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "copy.copy",
    "dipy.fixes.argparse._ensure_value",
    "setattr"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._AppendAction.__init__": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "ValueError",
    "dipy.fixes.argparse.OPTIONAL",
    "dipy.fixes.argparse._AppendAction",
    "help",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._AppendConstAction": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "dipy.fixes.argparse.Action"
   ]
  },
  "type": "class"
 },
 "dipy.fixes.argparse._AppendConstAction.__call__": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "copy.copy",
    "dipy.fixes.argparse._ensure_value",
    "setattr"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._AppendConstAction.__init__": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "dipy.fixes.argparse._AppendConstAction",
    "help",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._ArgumentGroup": {
  "data": {
   "lineno": 1462,
   "symbols_in_volume": [
    "dipy.fixes.argparse._ActionsContainer"
   ]
  },
  "type": "class"
 },
 "dipy.fixes.argparse._ArgumentGroup.__init__": {
  "data": {
   "lineno": 1464,
   "symbols_in_volume": [
    "dipy.fixes.argparse._ArgumentGroup",
    "super",
    "super_init",
    "update"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._ArgumentGroup._add_action": {
  "data": {
   "lineno": 1485,
   "symbols_in_volume": [
    "dipy.fixes.argparse._ArgumentGroup",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._ArgumentGroup._remove_action": {
  "data": {
   "lineno": 1490,
   "symbols_in_volume": [
    "dipy.fixes.argparse._ArgumentGroup",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._AttributeHolder": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.fixes.argparse._AttributeHolder.__repr__": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._AttributeHolder._get_args": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "dipy.fixes.argparse._AttributeHolder._get_kwargs": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "dipy.fixes.argparse._sorted"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._CountAction": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "dipy.fixes.argparse.Action"
   ]
  },
  "type": "class"
 },
 "dipy.fixes.argparse._CountAction.__call__": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "dipy.fixes.argparse._ensure_value",
    "setattr"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._CountAction.__init__": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "dipy.fixes.argparse._CountAction",
    "help",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._HelpAction": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "dipy.fixes.argparse.Action"
   ]
  },
  "type": "class"
 },
 "dipy.fixes.argparse._HelpAction.__call__": {
  "data": {
   "lineno": 1015
  },
  "type": "function"
 },
 "dipy.fixes.argparse._HelpAction.__init__": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "dipy.fixes.argparse.SUPPRESS",
    "dipy.fixes.argparse._HelpAction",
    "help",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._MutuallyExclusiveGroup": {
  "data": {
   "lineno": 1495,
   "symbols_in_volume": [
    "dipy.fixes.argparse._ArgumentGroup"
   ]
  },
  "type": "class"
 },
 "dipy.fixes.argparse._MutuallyExclusiveGroup.__init__": {
  "data": {
   "lineno": 1497,
   "symbols_in_volume": [
    "dipy.fixes.argparse._MutuallyExclusiveGroup",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._MutuallyExclusiveGroup._add_action": {
  "data": {
   "lineno": 1502,
   "symbols_in_volume": [
    "ValueError",
    "gettext.gettext"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._MutuallyExclusiveGroup._remove_action": {
  "data": {
   "lineno": 1510
  },
  "type": "function"
 },
 "dipy.fixes.argparse._StoreAction": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "dipy.fixes.argparse.Action"
   ]
  },
  "type": "class"
 },
 "dipy.fixes.argparse._StoreAction.__call__": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._StoreAction.__init__": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "ValueError",
    "dipy.fixes.argparse.OPTIONAL",
    "dipy.fixes.argparse._StoreAction",
    "help",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._StoreConstAction": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "dipy.fixes.argparse.Action"
   ]
  },
  "type": "class"
 },
 "dipy.fixes.argparse._StoreConstAction.__call__": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._StoreConstAction.__init__": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "dipy.fixes.argparse._StoreConstAction",
    "help",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._StoreFalseAction": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "dipy.fixes.argparse._StoreConstAction"
   ]
  },
  "type": "class"
 },
 "dipy.fixes.argparse._StoreFalseAction.__init__": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "dipy.fixes.argparse._StoreFalseAction",
    "help",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._StoreTrueAction": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "dipy.fixes.argparse._StoreConstAction"
   ]
  },
  "type": "class"
 },
 "dipy.fixes.argparse._StoreTrueAction.__init__": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "dipy.fixes.argparse._StoreTrueAction",
    "help",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._SubParsersAction": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "dipy.fixes.argparse.Action"
   ]
  },
  "type": "class"
 },
 "dipy.fixes.argparse._SubParsersAction._ChoicesPseudoAction": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "dipy.fixes.argparse.Action"
   ]
  },
  "type": "class"
 },
 "dipy.fixes.argparse._SubParsersAction._ChoicesPseudoAction.__init__": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "dipy.fixes.argparse._SubParsersAction",
    "help",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._SubParsersAction.__call__": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": [
    "KeyError",
    "dipy.fixes.argparse.ArgumentError",
    "dipy.fixes.argparse.SUPPRESS",
    "gettext.gettext",
    "setattr"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._SubParsersAction.__init__": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "dipy.fixes.argparse.PARSER",
    "dipy.fixes.argparse.SUPPRESS",
    "dipy.fixes.argparse._SubParsersAction",
    "help",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._SubParsersAction._get_subactions": {
  "data": {
   "lineno": 1084
  },
  "type": "function"
 },
 "dipy.fixes.argparse._SubParsersAction.add_parser": {
  "data": {
   "lineno": 1068,
   "symbols_in_volume": [
    "help"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._VersionAction": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": [
    "dipy.fixes.argparse.Action"
   ]
  },
  "type": "class"
 },
 "dipy.fixes.argparse._VersionAction.__call__": {
  "data": {
   "lineno": 1034
  },
  "type": "function"
 },
 "dipy.fixes.argparse._VersionAction.__init__": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "dipy.fixes.argparse.SUPPRESS",
    "dipy.fixes.argparse._VersionAction",
    "help",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse.__all__": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "dipy.fixes.argparse.__version__": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "dipy.fixes.argparse._basestring": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "dipy.fixes.argparse._copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "dipy.fixes.argparse._ensure_value": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._get_action_name": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "dipy.fixes.argparse.SUPPRESS"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dipy.fixes.argparse._re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "dipy.fixes.argparse._set": {
  "data": {
   "shadows": "sets.Set"
  },
  "type": "import"
 },
 "dipy.fixes.argparse._sorted": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.argparse._sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "dipy.fixes.argparse._textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "dipy.fixes.argparse.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "dipy.fixes.scipy": {
  "data": {},
  "type": "module"
 },
 "dipy.fixes.scipy.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "dipy.fixes.scipy.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.fixes.scipy.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.fixes.scipy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.fixes.scipy.polar": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "dipy.fixes.scipy.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.fixes.scipy.svd": {
  "data": {
   "shadows": "scipy.linalg.svd"
  },
  "type": "import"
 },
 "dipy.get_info": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "os.path.dirname"
   ]
  },
  "type": "function"
 },
 "dipy.info": {
  "data": {
   "symbols_in_volume": [
    "dipy.info.H5PY_MIN_VERSION",
    "dipy.info.NIBABEL_MIN_VERSION",
    "dipy.info.NUMPY_MIN_VERSION",
    "dipy.info.SCIPY_MIN_VERSION",
    "dipy.info.__version__",
    "dipy.info._version_extra",
    "dipy.info._version_major",
    "dipy.info._version_micro",
    "dipy.info._version_minor",
    "dipy.info.description",
    "dipy.info.long_description"
   ]
  },
  "type": "module"
 },
 "dipy.info.AUTHOR": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "dipy.info.AUTHOR_EMAIL": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "dipy.info.CLASSIFIERS": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "dipy.info.CYTHON_MIN_VERSION": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "dipy.info.DESCRIPTION": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "dipy.info.DOWNLOAD_URL": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "dipy.info.H5PY_MIN_VERSION": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "dipy.info.ISRELEASE": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "dipy.info.LICENSE": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "dipy.info.LONG_DESCRIPTION": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "dipy.info.MAINTAINER": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "dipy.info.MAINTAINER_EMAIL": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "dipy.info.MAJOR": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "dipy.info.MICRO": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "dipy.info.MINOR": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "dipy.info.NAME": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "dipy.info.NIBABEL_MIN_VERSION": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "dipy.info.NUMPY_MIN_VERSION": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "dipy.info.PLATFORMS": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "dipy.info.PROVIDES": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "dipy.info.REQUIRES": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "dipy.info.SCIPY_MIN_VERSION": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "dipy.info.URL": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "dipy.info.VERSION": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "dipy.info.__version__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "dipy.info._version_extra": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "dipy.info._version_major": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "dipy.info._version_micro": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "dipy.info._version_minor": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "dipy.info.description": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "dipy.info.long_description": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "dipy.io": {
  "data": {},
  "type": "module"
 },
 "dipy.io.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.io.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.io.dpy": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "dipy.io.dpy.Dpy": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.io.dpy.Dpy.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "dipy.io.dpy.h5py",
    "len",
    "numpy.array",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "dipy.io.dpy.Dpy.close": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "dipy.io.dpy.Dpy.read_track": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "dipy.io.dpy.Dpy.read_tracks": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "len",
    "nibabel.streamlines.ArraySequence",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.io.dpy.Dpy.read_tracksi": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "nibabel.streamlines.ArraySequence"
   ]
  },
  "type": "function"
 },
 "dipy.io.dpy.Dpy.version": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "dipy.io.dpy.Dpy.write_track": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "dipy.io.dpy.Dpy.write_tracks": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "dipy.io.dpy.Streamlines": {
  "data": {
   "shadows": "nibabel.streamlines.ArraySequence"
  },
  "type": "import"
 },
 "dipy.io.dpy.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "dipy.io.dpy.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "dipy.io.dpy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.io.gradients": {
  "data": {},
  "type": "module"
 },
 "dipy.io.gradients.InTemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.InTemporaryDirectory"
  },
  "type": "import"
 },
 "dipy.io.gradients.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.io.gradients.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.io.gradients.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.io.gradients.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.io.gradients.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "dipy.io.gradients.read_bvals_bvecs": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "dipy.io.gradients.re",
    "dipy.utils.six.string_types",
    "isinstance",
    "len",
    "max",
    "min",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "numpy.load",
    "numpy.loadtxt",
    "numpy.squeeze",
    "open",
    "os.path.splitext"
   ]
  },
  "type": "function"
 },
 "dipy.io.gradients.splitext": {
  "data": {
   "shadows": "os.path.splitext"
  },
  "type": "import"
 },
 "dipy.io.gradients.string_types": {
  "data": {
   "shadows": "dipy.utils.six.string_types"
  },
  "type": "import"
 },
 "dipy.io.image": {
  "data": {},
  "type": "module"
 },
 "dipy.io.image.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.io.image.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.io.image.load_nifti": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "nibabel.aff2axcodes",
    "nibabel.load",
    "tuple"
   ]
  },
  "type": "function"
 },
 "dipy.io.image.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.io.image.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.io.image.save_nifti": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "nibabel.Nifti1Image"
   ]
  },
  "type": "function"
 },
 "dipy.io.peaks": {
  "data": {},
  "type": "module"
 },
 "dipy.io.peaks.PeaksAndMetrics": {
  "data": {
   "shadows": "dipy.direction.peaks.PeaksAndMetrics"
  },
  "type": "import"
 },
 "dipy.io.peaks.Sphere": {
  "data": {
   "shadows": "dipy.core.sphere.Sphere"
  },
  "type": "import"
 },
 "dipy.io.peaks._safe_save": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "dipy.io.peaks.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.io.peaks.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.io.peaks.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "dipy.io.peaks.load_peaks": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "IOError",
    "KeyError",
    "dipy.core.sphere.Sphere",
    "dipy.direction.peaks.PeaksAndMetrics",
    "dipy.io.peaks.h5py",
    "dipy.io.peaks.os",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.io.peaks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.io.peaks.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dipy.io.peaks.peaks_to_niftis": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "dipy.direction.peaks.reshape_peaks_for_visualization",
    "dipy.io.image.save_nifti",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "dipy.io.peaks.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.io.peaks.reshape_peaks_for_visualization": {
  "data": {
   "shadows": "dipy.direction.peaks.reshape_peaks_for_visualization"
  },
  "type": "import"
 },
 "dipy.io.peaks.save_nifti": {
  "data": {
   "shadows": "dipy.io.image.save_nifti"
  },
  "type": "import"
 },
 "dipy.io.peaks.save_peaks": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "dipy.io.peaks._safe_save",
    "dipy.io.peaks.h5py",
    "dipy.io.peaks.os",
    "hasattr",
    "numpy.array",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.io.pickles": {
  "data": {},
  "type": "module"
 },
 "dipy.io.pickles.cPickle": {
  "data": {
   "shadows": "dipy.utils.six.moves.cPickle"
  },
  "type": "import"
 },
 "dipy.io.pickles.load_pickle": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "dipy.utils.six.moves.cPickle.load",
    "open"
   ]
  },
  "type": "function"
 },
 "dipy.io.pickles.save_pickle": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "dipy.utils.six.moves.cPickle.HIGHEST_PROTOCOL",
    "dipy.utils.six.moves.cPickle.dump",
    "open"
   ]
  },
  "type": "function"
 },
 "dipy.io.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.io.streamline": {
  "data": {},
  "type": "module"
 },
 "dipy.io.streamline.Field": {
  "data": {
   "shadows": "nibabel.streamlines.Field"
  },
  "type": "import"
 },
 "dipy.io.streamline.aff2axcodes": {
  "data": {
   "shadows": "nibabel.orientations.aff2axcodes"
  },
  "type": "import"
 },
 "dipy.io.streamline.load_trk": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "nibabel.streamlines.load"
   ]
  },
  "type": "function"
 },
 "dipy.io.streamline.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.io.streamline.save_trk": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "nibabel.orientations.aff2axcodes",
    "nibabel.streamlines.Field.DIMENSIONS",
    "nibabel.streamlines.Field.VOXEL_ORDER",
    "nibabel.streamlines.Field.VOXEL_SIZES",
    "nibabel.streamlines.Field.VOXEL_TO_RASMM",
    "nibabel.streamlines.Tractogram",
    "nibabel.streamlines.TrkFile",
    "nibabel.streamlines.save"
   ]
  },
  "type": "function"
 },
 "dipy.io.tests": {
  "data": {
   "symbols_in_volume": [
    "numpy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "dipy.io.tests.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "dipy.io.tests.test": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "dipy.io.tests.test_bvectxt": {
  "data": {},
  "type": "module"
 },
 "dipy.io.tests.test_bvectxt.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.io.tests.test_bvectxt.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "dipy.io.tests.test_bvectxt.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.io.tests.test_bvectxt.orientation_from_string": {
  "data": {
   "shadows": "dipy.io.bvectxt.orientation_from_string"
  },
  "type": "import"
 },
 "dipy.io.tests.test_bvectxt.orientation_to_string": {
  "data": {
   "shadows": "dipy.io.bvectxt.orientation_to_string"
  },
  "type": "import"
 },
 "dipy.io.tests.test_bvectxt.reorient_vectors": {
  "data": {
   "shadows": "dipy.io.bvectxt.reorient_vectors"
  },
  "type": "import"
 },
 "dipy.io.tests.test_bvectxt.test_orientation_from_to_string": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ValueError",
    "dipy.io.bvectxt.orientation_from_string",
    "dipy.io.bvectxt.orientation_to_string",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.io.tests.test_bvectxt.test_reorient_vectors": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ValueError",
    "dipy.io.bvectxt.reorient_vectors",
    "nose.tools.assert_raises",
    "numpy.arange",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.io.tests.test_dpy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.io.tests.test_dpy.Dpy": {
  "data": {
   "shadows": "dipy.io.dpy.Dpy"
  },
  "type": "import"
 },
 "dipy.io.tests.test_dpy.InTemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.InTemporaryDirectory"
  },
  "type": "import"
 },
 "dipy.io.tests.test_dpy.Streamlines": {
  "data": {
   "shadows": "dipy.tracking.streamline.Streamlines"
  },
  "type": "import"
 },
 "dipy.io.tests.test_dpy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.io.tests.test_dpy.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.io.tests.test_dpy.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dipy.io.tests.test_dpy.test_dpy": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "dipy.io.dpy.Dpy",
    "dipy.tracking.streamline.Streamlines",
    "len",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "numpy.ascontiguousarray",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "dipy.io.tests.test_io": {
  "data": {},
  "type": "module"
 },
 "dipy.io.tests.test_io.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "dipy.io.tests.test_io.io": {
  "data": {
   "shadows": "dipy.io"
  },
  "type": "import"
 },
 "dipy.io.tests.test_io.test_imports": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "dipy.io",
    "hasattr",
    "nose.tools.assert_false"
   ]
  },
  "type": "function"
 },
 "dipy.io.tests.test_io_gradients": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.io.tests.test_io_gradients.InTemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.InTemporaryDirectory"
  },
  "type": "import"
 },
 "dipy.io.tests.test_io_gradients.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.io.tests.test_io_gradients.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.io.tests.test_io_gradients.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.io.tests.test_io_gradients.gradient_table": {
  "data": {
   "shadows": "dipy.core.gradients.gradient_table"
  },
  "type": "import"
 },
 "dipy.io.tests.test_io_gradients.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.io.tests.test_io_gradients.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.io.tests.test_io_gradients.osp": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "dipy.io.tests.test_io_gradients.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.io.tests.test_io_gradients.read_bvals_bvecs": {
  "data": {
   "shadows": "dipy.io.gradients.read_bvals_bvecs"
  },
  "type": "import"
 },
 "dipy.io.tests.test_io_gradients.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.io.tests.test_io_gradients.test_read_bvals_bvecs": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.io.gradients.read_bvals_bvecs",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "numpy.array",
    "numpy.ravel",
    "numpy.save",
    "numpy.savetxt",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "open",
    "os.path.splitext",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.io.tests.test_io_peaks": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.io.tests.test_io_peaks.test_io_peaks",
    "dipy.io.tests.test_io_peaks.test_io_save_peaks_error"
   ]
  },
  "type": "module"
 },
 "dipy.io.tests.test_io_peaks.InTemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.InTemporaryDirectory"
  },
  "type": "import"
 },
 "dipy.io.tests.test_io_peaks.PeaksAndMetrics": {
  "data": {
   "shadows": "dipy.reconst.peaks.PeaksAndMetrics"
  },
  "type": "import"
 },
 "dipy.io.tests.test_io_peaks.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.io.tests.test_io_peaks.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.io.tests.test_io_peaks.get_sphere": {
  "data": {
   "shadows": "dipy.data.get_sphere"
  },
  "type": "import"
 },
 "dipy.io.tests.test_io_peaks.load_peaks": {
  "data": {
   "shadows": "dipy.io.peaks.load_peaks"
  },
  "type": "import"
 },
 "dipy.io.tests.test_io_peaks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.io.tests.test_io_peaks.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.io.tests.test_io_peaks.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dipy.io.tests.test_io_peaks.peaks_to_niftis": {
  "data": {
   "shadows": "dipy.io.peaks.peaks_to_niftis"
  },
  "type": "import"
 },
 "dipy.io.tests.test_io_peaks.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.io.tests.test_io_peaks.save_peaks": {
  "data": {
   "shadows": "dipy.io.peaks.save_peaks"
  },
  "type": "import"
 },
 "dipy.io.tests.test_io_peaks.test_io_peaks": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "dipy.data.get_sphere",
    "dipy.io.peaks.load_peaks",
    "dipy.io.peaks.peaks_to_niftis",
    "dipy.io.peaks.save_peaks",
    "dipy.io.tests.test_io_peaks.os",
    "dipy.reconst.peaks.PeaksAndMetrics",
    "getattr",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "numpy.eye",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.io.tests.test_io_peaks.test_io_save_peaks_error": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "dipy.data.get_sphere",
    "dipy.io.peaks.save_peaks",
    "dipy.reconst.peaks.PeaksAndMetrics",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "numpy.eye",
    "numpy.random.rand",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.io.tests.test_streamline": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.io.tests.test_streamline.streamline",
    "numpy.array",
    "numpy.float32",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.io.tests.test_streamline.InTemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.InTemporaryDirectory"
  },
  "type": "import"
 },
 "dipy.io.tests.test_streamline.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.io.tests.test_streamline.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.io.tests.test_streamline.load_trk": {
  "data": {
   "shadows": "dipy.io.streamline.load_trk"
  },
  "type": "import"
 },
 "dipy.io.tests.test_streamline.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.io.tests.test_streamline.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.io.tests.test_streamline.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.io.tests.test_streamline.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dipy.io.tests.test_streamline.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.io.tests.test_streamline.save_trk": {
  "data": {
   "shadows": "dipy.io.streamline.save_trk"
  },
  "type": "import"
 },
 "dipy.io.tests.test_streamline.streamline": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "dipy.io.tests.test_streamline.streamlines": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "dipy.io.tests.test_streamline.test_io_streamline": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "dipy.io.streamline.load_trk",
    "dipy.io.tests.test_streamline.streamline",
    "dipy.io.tests.test_streamline.streamlines",
    "dipy.io.trackvis.save_trk",
    "len",
    "nibabel.streamlines.load",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "numpy.array",
    "numpy.eye",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "dipy.io.tests.test_streamline.test_trackvis": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "DeprecationWarning",
    "dipy.io.tests.test_streamline.streamline",
    "dipy.io.tests.test_streamline.streamlines",
    "dipy.io.trackvis.save_trk",
    "len",
    "nibabel.streamlines.load",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "numpy.array",
    "numpy.eye",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "dipy.io.tests.test_streamline.trackvis_save_trk": {
  "data": {
   "shadows": "dipy.io.trackvis.save_trk"
  },
  "type": "import"
 },
 "dipy.io.trackvis": {
  "data": {
   "symbols_in_volume": [
    "DeprecationWarning",
    "dipy.io.trackvis.warnings"
   ]
  },
  "type": "module"
 },
 "dipy.io.trackvis.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.io.trackvis.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.io.trackvis.save_trk": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "DeprecationWarning",
    "dipy.io.trackvis.warnings",
    "dipy.tracking.utils.move_streamlines",
    "nibabel.orientations.aff2axcodes",
    "nibabel.trackvis.empty_header",
    "nibabel.trackvis.write",
    "numpy.diag",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "dipy.io.trackvis.utils": {
  "data": {
   "shadows": "dipy.tracking.utils"
  },
  "type": "import"
 },
 "dipy.io.trackvis.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "dipy.io.utils": {
  "data": {},
  "type": "module"
 },
 "dipy.io.utils.Nifti1Image": {
  "data": {
   "shadows": "nibabel.Nifti1Image"
  },
  "type": "import"
 },
 "dipy.io.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.io.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.io.utils.make5d": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "input",
    "input.ndim",
    "input.reshape",
    "input.shape",
    "len",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "dipy.io.utils.nifti1_symmat": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ValueError",
    "dipy.io.utils.make5d",
    "nibabel.Nifti1Image",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "dipy.io.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.io.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.io.vtk": {
  "data": {
   "symbols_in_volume": [
    "dipy.utils.optpkg.optional_package"
   ]
  },
  "type": "module"
 },
 "dipy.io.vtk.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.io.vtk.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.io.vtk.load_polydata": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "dipy.io.vtk.major_version": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "dipy.io.vtk.optional_package": {
  "data": {
   "shadows": "dipy.utils.optpkg.optional_package"
  },
  "type": "import"
 },
 "dipy.io.vtk.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.io.vtk.save_polydata": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "Exception",
    "dipy.viz.utils.set_input"
   ]
  },
  "type": "function"
 },
 "dipy.io.vtk.set_input": {
  "data": {
   "shadows": "dipy.viz.utils.set_input"
  },
  "type": "import"
 },
 "dipy.io.vtk.version": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "dipy.pkg_info": {
  "data": {},
  "type": "module"
 },
 "dipy.pkg_info.COMMIT_INFO_FNAME": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "dipy.pkg_info.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.pkg_info.configparser": {
  "data": {
   "shadows": "dipy.utils.six.moves.configparser"
  },
  "type": "import"
 },
 "dipy.pkg_info.dipy": {
  "data": {
   "shadows": "dipy"
  },
  "type": "import"
 },
 "dipy.pkg_info.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.pkg_info.get_pkg_info": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "dict",
    "dipy.pkg_info.dipy",
    "dipy.pkg_info.numpy",
    "dipy.pkg_info.pkg_commit_hash",
    "dipy.pkg_info.sys"
   ]
  },
  "type": "function"
 },
 "dipy.pkg_info.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.pkg_info.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dipy.pkg_info.pkg_commit_hash": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "IOError",
    "dipy.pkg_info.COMMIT_INFO_FNAME",
    "dipy.pkg_info.os",
    "dipy.pkg_info.subprocess",
    "dipy.utils.six.moves.configparser.RawConfigParser"
   ]
  },
  "type": "function"
 },
 "dipy.pkg_info.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.pkg_info.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "dipy.pkg_info.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "dipy.reconst": {
  "data": {
   "symbols_in_volume": [
    "numpy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "dipy.reconst.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "dipy.reconst.base": {
  "data": {},
  "type": "module"
 },
 "dipy.reconst.base.ReconstFit": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.base.ReconstFit.__init__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "dipy.reconst.base.ReconstModel": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.base.ReconstModel.__init__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "dipy.reconst.base.ReconstModel.fit": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "dipy.reconst.base.ReconstFit"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.bench": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "dipy.reconst.benchmarks": {
  "data": {},
  "type": "module"
 },
 "dipy.reconst.benchmarks.bench_bounding_box": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.reconst.benchmarks.bench_bounding_box.bench_bounding_box"
   ]
  },
  "type": "module"
 },
 "dipy.reconst.benchmarks.bench_bounding_box.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_bounding_box.bench_bounding_box": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.testing.measure",
    "numpy.zeros",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.benchmarks.bench_bounding_box.bounding_box": {
  "data": {
   "shadows": "dipy.segment.mask.bounding_box"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_bounding_box.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_bounding_box.measure": {
  "data": {
   "shadows": "numpy.testing.measure"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_bounding_box.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_bounding_box.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_csd": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.reconst.benchmarks.bench_csd.bench_csdeconv"
   ]
  },
  "type": "module"
 },
 "dipy.reconst.benchmarks.bench_csd.ConstrainedSphericalDeconvModel": {
  "data": {
   "shadows": "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_csd.GradientTable": {
  "data": {
   "shadows": "dipy.core.gradients.GradientTable"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_csd.bench_csdeconv": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "dipy.core.gradients.GradientTable",
    "dipy.data.read_stanford_labels",
    "dipy.reconst.benchmarks.bench_csd.num_grad",
    "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel",
    "numpy.in1d",
    "numpy.testing.measure",
    "print",
    "slice"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.benchmarks.bench_csd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_csd.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_csd.num_grad": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "dipy.reconst.benchmarks.bench_csd.read_stanford_labels": {
  "data": {
   "shadows": "dipy.data.read_stanford_labels"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_peaks": {
  "data": {},
  "type": "module"
 },
 "dipy.reconst.benchmarks.bench_peaks.bench_local_maxima": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "dipy.data.get_sphere",
    "len",
    "numpy.testing.measure",
    "numpy.zeros",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.benchmarks.bench_peaks.get_sphere": {
  "data": {
   "shadows": "dipy.data.get_sphere"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_peaks.local_maxima": {
  "data": {
   "shadows": "dipy.reconst.recspeed.local_maxima"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_peaks.measure": {
  "data": {
   "shadows": "numpy.testing.measure"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_peaks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_peaks.unique_edges": {
  "data": {
   "shadows": "dipy.core.sphere.unique_edges"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_squash": {
  "data": {},
  "type": "module"
 },
 "dipy.reconst.benchmarks.bench_squash.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_squash.bench_quick_squash": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "dipy.core.ndindex.ndindex",
    "float",
    "int",
    "numpy.float32",
    "numpy.ones",
    "numpy.testing.measure",
    "numpy.zeros",
    "object",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.benchmarks.bench_squash.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_squash.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_squash.measure": {
  "data": {
   "shadows": "numpy.testing.measure"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_squash.ndindex": {
  "data": {
   "shadows": "dipy.core.ndindex.ndindex"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_squash.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_squash.old_squash": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "AttributeError",
    "all",
    "dipy.core.ndindex.ndindex",
    "functools.reduce",
    "numpy.add",
    "numpy.asarray",
    "numpy.empty",
    "numpy.isscalar",
    "numpy.ndarray",
    "numpy.vectorize",
    "numpy.zeros",
    "set",
    "sum",
    "type"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.benchmarks.bench_squash.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_squash.quick_squash": {
  "data": {
   "shadows": "dipy.reconst.quick_squash.quick_squash"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_squash.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_vec_val_sum": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "numpy.einsum",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "module"
 },
 "dipy.reconst.benchmarks.bench_vec_val_sum.bench_vec_val_vect": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "dipy.reconst.benchmarks.bench_vec_val_sum.with_einsum",
    "numpy.testing.measure",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.benchmarks.bench_vec_val_sum.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_vec_val_sum.measure": {
  "data": {
   "shadows": "numpy.testing.measure"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_vec_val_sum.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_vec_val_sum.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_vec_val_sum.vec_val_vect": {
  "data": {
   "shadows": "dipy.reconst.vec_val_sum.vec_val_vect"
  },
  "type": "import"
 },
 "dipy.reconst.benchmarks.bench_vec_val_sum.with_einsum": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "dipy.reconst.cache": {
  "data": {},
  "type": "module"
 },
 "dipy.reconst.cache.Cache": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.cache.Cache._cache": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "dipy.core.onetime.auto_attr"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.cache.Cache.cache_clear": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "dipy.reconst.cache.Cache.cache_get": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "dipy.reconst.cache.Cache.cache_set": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "dipy.reconst.cache.auto_attr": {
  "data": {
   "shadows": "dipy.core.onetime.auto_attr"
  },
  "type": "import"
 },
 "dipy.reconst.cross_validation": {
  "data": {},
  "type": "module"
 },
 "dipy.reconst.cross_validation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.reconst.cross_validation.coeff_of_determination": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.mean",
    "numpy.nan",
    "numpy.newaxis",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.cross_validation.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.reconst.cross_validation.gt": {
  "data": {
   "shadows": "dipy.core.gradients"
  },
  "type": "import"
 },
 "dipy.reconst.cross_validation.kfold_xval": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "dipy.core.gradients.gradient_table",
    "dipy.utils.six.moves.range",
    "gtgt",
    "hasattr",
    "int",
    "numpy.concatenate",
    "numpy.hstack",
    "numpy.mean",
    "numpy.mod",
    "numpy.ones",
    "numpy.random.permutation",
    "numpy.sum",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.cross_validation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.cross_validation.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.reconst.cross_validation.range": {
  "data": {
   "shadows": "dipy.utils.six.moves.range"
  },
  "type": "import"
 },
 "dipy.reconst.dki_micro": {
  "data": {},
  "type": "module"
 },
 "dipy.reconst.dki_micro.DiffusionKurtosisFit": {
  "data": {
   "shadows": "dipy.reconst.dki.DiffusionKurtosisFit"
  },
  "type": "import"
 },
 "dipy.reconst.dki_micro.DiffusionKurtosisModel": {
  "data": {
   "shadows": "dipy.reconst.dki.DiffusionKurtosisModel"
  },
  "type": "import"
 },
 "dipy.reconst.dki_micro.KurtosisMicrostructuralFit": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "dipy.reconst.dki.DiffusionKurtosisFit"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.__init__": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "dipy.reconst.dki.DiffusionKurtosisFit.__init__"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dki_micro.KurtosisMicrostructuralFit._is_awfonly": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.awf": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.axonal_diffusivity": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "dipy.reconst.dti.trace",
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_ad": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "dipy.reconst.dti.axial_diffusivity",
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_evals": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "dipy.reconst.dki_micro._compartments_eigenvalues",
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_rd": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "dipy.reconst.dti.radial_diffusivity",
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.predict": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "dipy.reconst.dki_micro.dkimicro_prediction"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.restricted_evals": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "dipy.reconst.dki_micro._compartments_eigenvalues",
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.tortuosity": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "dipy.reconst.dki_micro.tortuosity",
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dki_micro.KurtosisMicrostructureModel": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "dipy.reconst.dki.DiffusionKurtosisModel"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.dki_micro.KurtosisMicrostructureModel.__init__": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "dipy.reconst.dki.DiffusionKurtosisModel.__init__"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dki_micro.KurtosisMicrostructureModel.fit": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "dipy.reconst.dki_micro.KurtosisMicrostructuralFit",
    "dipy.reconst.dki_micro.axonal_water_fraction",
    "dipy.reconst.dki_micro.diffusion_components",
    "dipy.reconst.dti.MIN_POSITIVE_SIGNAL",
    "numpy.array",
    "numpy.concatenate",
    "numpy.maximum",
    "numpy.reshape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dki_micro.KurtosisMicrostructureModel.predict": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "dipy.reconst.dki_micro.dkimicro_prediction"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dki_micro.MIN_POSITIVE_SIGNAL": {
  "data": {
   "shadows": "dipy.reconst.dti.MIN_POSITIVE_SIGNAL"
  },
  "type": "import"
 },
 "dipy.reconst.dki_micro._compartments_eigenvalues": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "dipy.reconst.dti.decompose_tensor",
    "dipy.reconst.dti.from_lower_triangular"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dki_micro._positive_evals": {
  "data": {
   "shadows": "dipy.reconst.dki._positive_evals"
  },
  "type": "import"
 },
 "dipy.reconst.dki_micro.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.reconst.dki_micro.axial_diffusivity": {
  "data": {
   "shadows": "dipy.reconst.dti.axial_diffusivity"
  },
  "type": "import"
 },
 "dipy.reconst.dki_micro.axonal_water_fraction": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "dipy.reconst.dki.kurtosis_maximum"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dki_micro.decompose_tensor": {
  "data": {
   "shadows": "dipy.reconst.dti.decompose_tensor"
  },
  "type": "import"
 },
 "dipy.reconst.dki_micro.diffusion_components": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "dipy.core.ndindex.ndindex",
    "dipy.core.sphere.Sphere",
    "dipy.data.get_sphere",
    "dipy.reconst.dki.directional_diffusion",
    "dipy.reconst.dki.directional_kurtosis",
    "dipy.reconst.dki.split_dki_param",
    "dipy.reconst.dki_micro.axonal_water_fraction",
    "dipy.reconst.dti.lower_triangular",
    "dipy.reconst.dti.mean_diffusivity",
    "dipy.reconst.vec_val_sum.vec_val_vect",
    "isinstance",
    "numpy.array",
    "numpy.dot",
    "numpy.linalg.pinv",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dki_micro.directional_diffusion": {
  "data": {
   "shadows": "dipy.reconst.dki.directional_diffusion"
  },
  "type": "import"
 },
 "dipy.reconst.dki_micro.directional_kurtosis": {
  "data": {
   "shadows": "dipy.reconst.dki.directional_kurtosis"
  },
  "type": "import"
 },
 "dipy.reconst.dki_micro.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.reconst.dki_micro.dkimicro_prediction": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "dipy.core.ndindex.ndindex",
    "dipy.reconst.dki._positive_evals",
    "dipy.reconst.dti.design_matrix",
    "isinstance",
    "numpy.dot",
    "numpy.exp",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dki_micro.dps": {
  "data": {
   "shadows": "dipy.core.sphere"
  },
  "type": "import"
 },
 "dipy.reconst.dki_micro.dti_design_matrix": {
  "data": {
   "shadows": "dipy.reconst.dti.design_matrix"
  },
  "type": "import"
 },
 "dipy.reconst.dki_micro.from_lower_triangular": {
  "data": {
   "shadows": "dipy.reconst.dti.from_lower_triangular"
  },
  "type": "import"
 },
 "dipy.reconst.dki_micro.get_sphere": {
  "data": {
   "shadows": "dipy.data.get_sphere"
  },
  "type": "import"
 },
 "dipy.reconst.dki_micro.kurtosis_maximum": {
  "data": {
   "shadows": "dipy.reconst.dki.kurtosis_maximum"
  },
  "type": "import"
 },
 "dipy.reconst.dki_micro.lower_triangular": {
  "data": {
   "shadows": "dipy.reconst.dti.lower_triangular"
  },
  "type": "import"
 },
 "dipy.reconst.dki_micro.mean_diffusivity": {
  "data": {
   "shadows": "dipy.reconst.dti.mean_diffusivity"
  },
  "type": "import"
 },
 "dipy.reconst.dki_micro.ndindex": {
  "data": {
   "shadows": "dipy.core.ndindex.ndindex"
  },
  "type": "import"
 },
 "dipy.reconst.dki_micro.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.dki_micro.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.reconst.dki_micro.radial_diffusivity": {
  "data": {
   "shadows": "dipy.reconst.dti.radial_diffusivity"
  },
  "type": "import"
 },
 "dipy.reconst.dki_micro.split_dki_param": {
  "data": {
   "shadows": "dipy.reconst.dki.split_dki_param"
  },
  "type": "import"
 },
 "dipy.reconst.dki_micro.tortuosity": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.ndarray",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dki_micro.trace": {
  "data": {
   "shadows": "dipy.reconst.dti.trace"
  },
  "type": "import"
 },
 "dipy.reconst.dki_micro.vec_val_vect": {
  "data": {
   "shadows": "dipy.reconst.vec_val_sum.vec_val_vect"
  },
  "type": "import"
 },
 "dipy.reconst.dsi": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "dipy.reconst.dsi.Cache": {
  "data": {
   "shadows": "dipy.reconst.cache.Cache"
  },
  "type": "import"
 },
 "dipy.reconst.dsi.DiffusionSpectrumDeconvFit": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "dipy.reconst.dsi.DiffusionSpectrumFit"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.dsi.DiffusionSpectrumDeconvFit.pdf": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "dipy.reconst.dsi.LR_deconv",
    "dipy.reconst.dsi.gen_PSF",
    "dipy.reconst.dsi.threshold_propagator",
    "len",
    "numpy.abs",
    "numpy.real",
    "numpy.zeros",
    "range",
    "scipy.fftpack.fftn",
    "scipy.fftpack.fftshift",
    "scipy.fftpack.ifftshift"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dsi.DiffusionSpectrumDeconvModel": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "dipy.reconst.dsi.DiffusionSpectrumModel"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.dsi.DiffusionSpectrumDeconvModel.__init__": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "dipy.reconst.dsi.DiffusionSpectrumModel",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dsi.DiffusionSpectrumDeconvModel.fit": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "dipy.reconst.dsi.DiffusionSpectrumDeconvFit",
    "dipy.reconst.multi_voxel.multi_voxel_fit"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dsi.DiffusionSpectrumFit": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "dipy.reconst.odf.OdfFit"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.dsi.DiffusionSpectrumFit.__init__": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "dipy.reconst.dsi.DiffusionSpectrumFit.msd_discrete": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.sum",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dsi.DiffusionSpectrumFit.odf": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "dipy.reconst.dsi.pdf_interp_coords",
    "dipy.reconst.dsi.pdf_odf"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dsi.DiffusionSpectrumFit.pdf": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "len",
    "numpy.clip",
    "numpy.real",
    "numpy.zeros",
    "range",
    "scipy.fftpack.fftn",
    "scipy.fftpack.fftshift",
    "scipy.fftpack.ifftshift"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dsi.DiffusionSpectrumFit.rtop_pdf": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "dipy.reconst.dsi.DiffusionSpectrumFit.rtop_signal": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "dipy.reconst.dsi.DiffusionSpectrumModel": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "dipy.reconst.cache.Cache",
    "dipy.reconst.odf.OdfModel"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.dsi.DiffusionSpectrumModel.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError",
    "dipy.reconst.dsi.create_qspace",
    "dipy.reconst.dsi.hanning_filter",
    "len",
    "numpy.arange",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dsi.DiffusionSpectrumModel.fit": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "dipy.reconst.dsi.DiffusionSpectrumFit",
    "dipy.reconst.multi_voxel.multi_voxel_fit"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dsi.LR_deconv": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.fft.fftn",
    "numpy.fft.ifftn",
    "numpy.fft.ifftshift",
    "numpy.inf",
    "numpy.real",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dsi.OdfFit": {
  "data": {
   "shadows": "dipy.reconst.odf.OdfFit"
  },
  "type": "import"
 },
 "dipy.reconst.dsi.OdfModel": {
  "data": {
   "shadows": "dipy.reconst.odf.OdfModel"
  },
  "type": "import"
 },
 "dipy.reconst.dsi.create_qspace": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "dipy.reconst.dsi.create_qtable"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dsi.create_qtable": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "len",
    "numpy.bitwise_not",
    "numpy.floor",
    "numpy.sort",
    "numpy.sqrt",
    "numpy.vstack",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dsi.fftn": {
  "data": {
   "shadows": "scipy.fftpack.fftn"
  },
  "type": "import"
 },
 "dipy.reconst.dsi.fftshift": {
  "data": {
   "shadows": "scipy.fftpack.fftshift"
  },
  "type": "import"
 },
 "dipy.reconst.dsi.gen_PSF": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "numpy.fft.fftshift",
    "numpy.fft.ifftn",
    "numpy.fft.ifftshift",
    "numpy.real",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dsi.half_to_full_qspace": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "numpy.append"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dsi.hanning_filter": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "dipy.reconst.dsi.create_qtable",
    "numpy.cos",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dsi.ifftshift": {
  "data": {
   "shadows": "scipy.fftpack.ifftshift"
  },
  "type": "import"
 },
 "dipy.reconst.dsi.map_coordinates": {
  "data": {
   "shadows": "scipy.ndimage.map_coordinates"
  },
  "type": "import"
 },
 "dipy.reconst.dsi.multi_voxel_fit": {
  "data": {
   "shadows": "dipy.reconst.multi_voxel.multi_voxel_fit"
  },
  "type": "import"
 },
 "dipy.reconst.dsi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.dsi.pdf_interp_coords": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "numpy.newaxis.T",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dsi.pdf_odf": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "scipy.ndimage.map_coordinates"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dsi.project_hemisph_bvecs": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.argsort",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.dsi.threshold_propagator": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.gqi": {
  "data": {},
  "type": "module"
 },
 "dipy.reconst.gqi.Cache": {
  "data": {
   "shadows": "dipy.reconst.cache.Cache"
  },
  "type": "import"
 },
 "dipy.reconst.gqi.GeneralizedQSamplingFit": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "dipy.reconst.odf.OdfFit"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.gqi.GeneralizedQSamplingFit.__init__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "dipy.reconst.odf.OdfFit.__init__"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.gqi.GeneralizedQSamplingFit.odf": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "H",
    "numpy.dot",
    "numpy.pi",
    "numpy.real",
    "numpy.sinc"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.gqi.GeneralizedQSamplingModel": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "dipy.reconst.cache.Cache",
    "dipy.reconst.odf.OdfModel"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.gqi.GeneralizedQSamplingModel.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "dipy.reconst.odf.OdfModel.__init__",
    "numpy.sqrt",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.gqi.GeneralizedQSamplingModel.fit": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "dipy.reconst.gqi.GeneralizedQSamplingFit",
    "dipy.reconst.multi_voxel.multi_voxel_fit"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.gqi.OdfFit": {
  "data": {
   "shadows": "dipy.reconst.odf.OdfFit"
  },
  "type": "import"
 },
 "dipy.reconst.gqi.OdfModel": {
  "data": {
   "shadows": "dipy.reconst.odf.OdfModel"
  },
  "type": "import"
 },
 "dipy.reconst.gqi.equatorial_maximum": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "dipy.reconst.gqi.equatorial_zone_vertices",
    "len",
    "numpy.argmax",
    "numpy.array_str",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.gqi.equatorial_zone_vertices": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "enumerate",
    "numpy.abs",
    "numpy.dot",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.gqi.gfa": {
  "data": {
   "shadows": "dipy.reconst.odf.gfa"
  },
  "type": "import"
 },
 "dipy.reconst.gqi.local_maxima": {
  "data": {
   "shadows": "dipy.reconst.recspeed.local_maxima"
  },
  "type": "import"
 },
 "dipy.reconst.gqi.multi_voxel_fit": {
  "data": {
   "shadows": "dipy.reconst.multi_voxel.multi_voxel_fit"
  },
  "type": "import"
 },
 "dipy.reconst.gqi.normalize_qa": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "dipy.reconst.gqi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.gqi.npa": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "dipy.reconst.gqi.triple_odf_maxima",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.gqi.odf_sum": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.gqi.patch_maximum": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "dipy.reconst.gqi.patch_vertices",
    "len",
    "numpy.Null",
    "numpy.argmax",
    "numpy.array_str",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.gqi.patch_sum": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "dipy.reconst.gqi.patch_vertices",
    "len",
    "numpy.Null",
    "numpy.array_str",
    "numpy.sum",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.gqi.patch_vertices": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "enumerate",
    "numpy.abs",
    "numpy.cos",
    "numpy.dot",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.gqi.polar_zone_vertices": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "enumerate",
    "numpy.abs",
    "numpy.cos",
    "numpy.dot",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.gqi.remove_similar_vertices": {
  "data": {
   "shadows": "dipy.reconst.recspeed.remove_similar_vertices"
  },
  "type": "import"
 },
 "dipy.reconst.gqi.squared_radial_component": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "dipy.reconst.gqi.warnings",
    "numpy.cos",
    "numpy.sin",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.gqi.triple_odf_maxima": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "dipy.reconst.gqi.equatorial_maximum",
    "dipy.reconst.gqi.equatorial_zone_vertices",
    "enumerate",
    "numpy.abs",
    "numpy.argmax",
    "numpy.argmin",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.gqi.upper_hemi_map": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.gqi.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "dipy.reconst.interpolate": {
  "data": {},
  "type": "module"
 },
 "dipy.reconst.interpolate.Interpolator": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.interpolate.Interpolator.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "float",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.interpolate.NearestNeighborInterpolator": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "dipy.reconst.interpolate.Interpolator"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.interpolate.NearestNeighborInterpolator.__getitem__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "IndexError",
    "dipy.reconst.interpolate.OutsideImage",
    "int",
    "min",
    "numpy.array",
    "tuple"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.interpolate.OutsideImage": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.interpolate.TriLinearInterpolator": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "dipy.reconst.interpolate.Interpolator"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.interpolate.TriLinearInterpolator.__getitem__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "IndexError",
    "dipy.reconst.interpolate.OutsideImage",
    "dipy.reconst.recspeed.trilinear_interp",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.interpolate.TriLinearInterpolator.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "dipy.reconst.interpolate.TriLinearInterpolator",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.interpolate.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "dipy.reconst.interpolate.trilinear_interp": {
  "data": {
   "shadows": "dipy.reconst.recspeed.trilinear_interp"
  },
  "type": "import"
 },
 "dipy.reconst.ivim": {
  "data": {
   "symbols_in_volume": [
    "dipy.reconst.ivim.SCIPY_LESS_0_17",
    "dipy.reconst.ivim.scipy",
    "distutils.version.LooseVersion"
   ]
  },
  "type": "module"
 },
 "dipy.reconst.ivim.IvimFit": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.ivim.IvimFit.D": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.ivim.IvimFit.D_star": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.ivim.IvimFit.S0_predicted": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.ivim.IvimFit.__getitem__": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "slice",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.ivim.IvimFit.__init__": {
  "data": {
   "lineno": 504
  },
  "type": "function"
 },
 "dipy.reconst.ivim.IvimFit.perfusion_fraction": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.ivim.IvimFit.predict": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "dipy.reconst.ivim.ivim_prediction"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.ivim.IvimFit.shape": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.ivim.IvimModel": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "dipy.reconst.base.ReconstModel"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.ivim.IvimModel.__init__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ValueError",
    "dipy.reconst.base.ReconstModel.__init__",
    "dipy.reconst.ivim.SCIPY_LESS_0_17",
    "numpy.any",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.ivim.IvimModel._leastsq": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "dipy.reconst.ivim.SCIPY_LESS_0_17",
    "dipy.reconst.ivim._ivim_error",
    "dipy.reconst.ivim.warnings",
    "numpy.all",
    "numpy.array",
    "numpy.isnan",
    "scipy.optimize.least_squares",
    "scipy.optimize.leastsq"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.ivim.IvimModel.estimate_f_D_star": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "dipy.reconst.ivim.SCIPY_LESS_0_17",
    "dipy.reconst.ivim.f_D_star_error",
    "dipy.reconst.ivim.warnings",
    "scipy.optimize.least_squares",
    "scipy.optimize.leastsq"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.ivim.IvimModel.estimate_linear_fit": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log",
    "numpy.polyfit"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.ivim.IvimModel.fit": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "UserWarning",
    "dipy.reconst.ivim.IvimFit",
    "dipy.reconst.ivim.warnings",
    "dipy.reconst.multi_voxel.multi_voxel_fit",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.ivim.IvimModel.predict": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "dipy.reconst.ivim.ivim_prediction"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.ivim.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "dipy.reconst.ivim.ReconstModel": {
  "data": {
   "shadows": "dipy.reconst.base.ReconstModel"
  },
  "type": "import"
 },
 "dipy.reconst.ivim.SCIPY_LESS_0_17": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "dipy.reconst.ivim._ivim_error": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "dipy.reconst.ivim.ivim_prediction"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.ivim.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.reconst.ivim.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.reconst.ivim.f_D_star_error": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "dipy.reconst.ivim.f_D_star_prediction"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.ivim.f_D_star_prediction": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.ivim.ivim_prediction": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.ivim.least_squares": {
  "data": {
   "shadows": "scipy.optimize.least_squares"
  },
  "type": "import"
 },
 "dipy.reconst.ivim.leastsq": {
  "data": {
   "shadows": "scipy.optimize.leastsq"
  },
  "type": "import"
 },
 "dipy.reconst.ivim.multi_voxel_fit": {
  "data": {
   "shadows": "dipy.reconst.multi_voxel.multi_voxel_fit"
  },
  "type": "import"
 },
 "dipy.reconst.ivim.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.ivim.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.reconst.ivim.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "dipy.reconst.ivim.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "dipy.reconst.multi_voxel": {
  "data": {},
  "type": "module"
 },
 "dipy.reconst.multi_voxel.CallableArray": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.multi_voxel.CallableArray.__call__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "dipy.core.ndindex.ndindex",
    "dipy.reconst.quick_squash.quick_squash",
    "item",
    "numpy.empty",
    "object"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.multi_voxel.MultiVoxelFit": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "dipy.reconst.base.ReconstFit"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.multi_voxel.MultiVoxelFit.__getattr__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "dipy.core.ndindex.ndindex",
    "dipy.reconst.multi_voxel.CallableArray",
    "dipy.reconst.quick_squash.quick_squash",
    "getattr",
    "object"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.multi_voxel.MultiVoxelFit.__getitem__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "dipy.reconst.multi_voxel.MultiVoxelFit",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.multi_voxel.MultiVoxelFit.__init__": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "dipy.reconst.multi_voxel.MultiVoxelFit.predict": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "NotImplementedError",
    "dipy.core.ndindex.ndindex",
    "gimme_S0",
    "hasattr",
    "next",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.multi_voxel.MultiVoxelFit.predict.gimme_S0": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.multi_voxel.MultiVoxelFit.shape": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.multi_voxel.ReconstFit": {
  "data": {
   "shadows": "dipy.reconst.base.ReconstFit"
  },
  "type": "import"
 },
 "dipy.reconst.multi_voxel._squash": {
  "data": {
   "shadows": "dipy.reconst.quick_squash.quick_squash"
  },
  "type": "import"
 },
 "dipy.reconst.multi_voxel.as_strided": {
  "data": {
   "shadows": "numpy.lib.stride_tricks.as_strided"
  },
  "type": "import"
 },
 "dipy.reconst.multi_voxel.multi_voxel_fit": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "dipy.reconst.multi_voxel.multi_voxel_fit.new_fit": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "dipy.core.ndindex.ndindex",
    "dipy.reconst.multi_voxel.MultiVoxelFit",
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.lib.stride_tricks.as_strided",
    "object",
    "single_voxel_fit"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.multi_voxel.ndindex": {
  "data": {
   "shadows": "dipy.core.ndindex.ndindex"
  },
  "type": "import"
 },
 "dipy.reconst.multi_voxel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.odf": {
  "data": {},
  "type": "module"
 },
 "dipy.reconst.odf.OdfFit": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "dipy.reconst.base.ReconstFit"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.odf.OdfFit.odf": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.odf.OdfModel": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "dipy.reconst.base.ReconstModel"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.odf.OdfModel.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "dipy.reconst.base.ReconstModel.__init__"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.odf.OdfModel.fit": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.odf.ReconstFit": {
  "data": {
   "shadows": "dipy.reconst.base.ReconstFit"
  },
  "type": "import"
 },
 "dipy.reconst.odf.ReconstModel": {
  "data": {
   "shadows": "dipy.reconst.base.ReconstModel"
  },
  "type": "import"
 },
 "dipy.reconst.odf.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.reconst.odf.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.reconst.odf.gfa": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.ones_like",
    "numpy.sqrt",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.odf.minmax_normalize": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.common_type",
    "numpy.empty",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.odf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.odf.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.reconst.peaks": {
  "data": {
   "symbols_in_volume": [
    "DeprecationWarning",
    "dipy.reconst.peaks.w_s",
    "dipy.reconst.peaks.warnings"
   ]
  },
  "type": "module"
 },
 "dipy.reconst.peaks.w_s": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "dipy.reconst.peaks.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "dipy.reconst.sfm": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dipy.reconst.sfm.w",
    "dipy.reconst.sfm.warnings",
    "dipy.utils.optpkg.optional_package"
   ]
  },
  "type": "module"
 },
 "dipy.reconst.sfm.Cache": {
  "data": {
   "shadows": "dipy.reconst.cache.Cache"
  },
  "type": "import"
 },
 "dipy.reconst.sfm.ExponentialIsotropicFit": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "dipy.reconst.sfm.IsotropicFit"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.sfm.ExponentialIsotropicFit.predict": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.newaxis",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.sfm.ExponentialIsotropicModel": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "dipy.reconst.sfm.IsotropicModel"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.sfm.ExponentialIsotropicModel.fit": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "dipy.reconst.sfm.ExponentialIsotropicFit",
    "dipy.reconst.sfm._to_fit_iso",
    "numpy.inf",
    "numpy.log",
    "scipy.stats.nanmean"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.sfm.IsotropicFit": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "dipy.reconst.base.ReconstFit"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.sfm.IsotropicFit.__init__": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "dipy.reconst.sfm.IsotropicFit.predict": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.sfm.IsotropicModel": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "dipy.reconst.base.ReconstModel"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.sfm.IsotropicModel.__init__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "dipy.reconst.base.ReconstModel.__init__"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.sfm.IsotropicModel.fit": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "dipy.reconst.sfm.IsotropicFit",
    "dipy.reconst.sfm._to_fit_iso",
    "numpy.mean",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.sfm.ReconstFit": {
  "data": {
   "shadows": "dipy.reconst.base.ReconstFit"
  },
  "type": "import"
 },
 "dipy.reconst.sfm.ReconstModel": {
  "data": {
   "shadows": "dipy.reconst.base.ReconstModel"
  },
  "type": "import"
 },
 "dipy.reconst.sfm.SparseFascicleFit": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "dipy.reconst.base.ReconstFit"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.sfm.SparseFascicleFit.__init__": {
  "data": {
   "lineno": 445
  },
  "type": "function"
 },
 "dipy.reconst.sfm.SparseFascicleFit.odf": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "dipy.reconst.sfm.sfm_design_matrix",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.sfm.SparseFascicleFit.predict": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "dipy.reconst.sfm.sfm_design_matrix",
    "isinstance",
    "numpy.dot",
    "numpy.ndarray",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.sfm.SparseFascicleModel": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "dipy.reconst.base.ReconstModel",
    "dipy.reconst.cache.Cache"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.sfm.SparseFascicleModel.__init__": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "ValueError",
    "dipy.core.optimize.NonNegativeLeastSquares",
    "dipy.core.optimize.SKLearnLinearSolver",
    "dipy.data.get_sphere",
    "dipy.reconst.base.ReconstModel.__init__",
    "dipy.reconst.sfm.IsotropicModel",
    "isinstance",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.sfm.SparseFascicleModel.design_matrix": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "dipy.core.onetime.auto_attr",
    "dipy.reconst.sfm.sfm_design_matrix"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.sfm.SparseFascicleModel.fit": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "dipy.reconst.sfm.SparseFascicleFit",
    "dipy.reconst.sfm.warnings",
    "enumerate",
    "numpy.all",
    "numpy.any",
    "numpy.array",
    "numpy.isfinite",
    "numpy.mean",
    "numpy.reshape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.sfm._to_fit_iso": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.mean",
    "numpy.sum",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.sfm.auto_attr": {
  "data": {
   "shadows": "dipy.core.onetime.auto_attr"
  },
  "type": "import"
 },
 "dipy.reconst.sfm.dpd": {
  "data": {
   "shadows": "dipy.data"
  },
  "type": "import"
 },
 "dipy.reconst.sfm.dti": {
  "data": {
   "shadows": "dipy.reconst.dti"
  },
  "type": "import"
 },
 "dipy.reconst.sfm.geo": {
  "data": {
   "shadows": "dipy.core.geometry"
  },
  "type": "import"
 },
 "dipy.reconst.sfm.grad": {
  "data": {
   "shadows": "dipy.core.gradients"
  },
  "type": "import"
 },
 "dipy.reconst.sfm.nanmean": {
  "data": {
   "shadows": "scipy.stats.nanmean"
  },
  "type": "import"
 },
 "dipy.reconst.sfm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.sfm.opt": {
  "data": {
   "shadows": "dipy.core.optimize"
  },
  "type": "import"
 },
 "dipy.reconst.sfm.optional_package": {
  "data": {
   "shadows": "dipy.utils.optpkg.optional_package"
  },
  "type": "import"
 },
 "dipy.reconst.sfm.sfm_design_matrix": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.sims.voxel.all_tensor_evecs",
    "dipy.sims.voxel.single_tensor",
    "dipy.sims.voxel.single_tensor_odf",
    "enumerate",
    "numpy.empty",
    "numpy.exp",
    "numpy.mean",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.sfm.sims": {
  "data": {
   "shadows": "dipy.sims.voxel"
  },
  "type": "import"
 },
 "dipy.reconst.sfm.w": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "dipy.reconst.sfm.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "dipy.reconst.test": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "dipy.reconst.tests": {
  "data": {},
  "type": "module"
 },
 "dipy.reconst.tests.test_cache": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.reconst.tests.test_cache.Cache": {
  "data": {
   "shadows": "dipy.reconst.cache.Cache"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_cache.Sphere": {
  "data": {
   "shadows": "dipy.core.sphere.Sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_cache.TestModel": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "dipy.reconst.cache.Cache"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.tests.test_cache.TestModel.__init__": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_cache.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_cache.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_cache.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_cache.test_basic_cache": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "dipy.core.sphere.Sphere",
    "dipy.reconst.tests.test_cache.TestModel",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_cross_validation": {
  "data": {
   "symbols_in_volume": [
    "dipy.data.get_data"
   ]
  },
  "type": "module"
 },
 "dipy.reconst.tests.test_cross_validation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_cross_validation.base": {
  "data": {
   "shadows": "dipy.reconst.base"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_cross_validation.csd": {
  "data": {
   "shadows": "dipy.reconst.csdeconv"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_cross_validation.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_cross_validation.dpd": {
  "data": {
   "shadows": "dipy.data"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_cross_validation.dti": {
  "data": {
   "shadows": "dipy.reconst.dti"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_cross_validation.gt": {
  "data": {
   "shadows": "dipy.core.gradients"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_cross_validation.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_cross_validation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_cross_validation.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_cross_validation.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_cross_validation.sims": {
  "data": {
   "shadows": "dipy.sims.voxel"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_cross_validation.test_coeff_of_determination": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "dipy.reconst.cross_validation.coeff_of_determination",
    "numpy.copy",
    "numpy.random.randn",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_cross_validation.test_csd_xval": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "bool",
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_sphere",
    "dipy.reconst.cross_validation.coeff_of_determination",
    "dipy.reconst.cross_validation.kfold_xval",
    "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel",
    "dipy.sims.voxel.single_tensor",
    "len",
    "nibabel.load",
    "numpy.array",
    "numpy.concatenate",
    "numpy.mean",
    "numpy.ones",
    "numpy.random.seed",
    "numpy.round",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_cross_validation.test_dti_xval": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_sphere",
    "dipy.reconst.cross_validation.coeff_of_determination",
    "dipy.reconst.cross_validation.kfold_xval",
    "dipy.reconst.dti.TensorModel",
    "dipy.sims.voxel.single_tensor",
    "len",
    "nibabel.load",
    "numpy.array",
    "numpy.concatenate",
    "numpy.ones",
    "numpy.round",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_cross_validation.test_no_predict": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "NoPredictModel",
    "ValueError",
    "dipy.core.gradients.gradient_table",
    "dipy.reconst.cross_validation.kfold_xval",
    "nibabel.load",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_cross_validation.test_no_predict.NoPredictFit": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "dipy.reconst.base.ReconstFit"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.tests.test_cross_validation.test_no_predict.NoPredictFit.__init__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "dipy.reconst.base.ReconstFit.__init__"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_cross_validation.test_no_predict.NoPredictModel": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "dipy.reconst.base.ReconstModel"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.tests.test_cross_validation.test_no_predict.NoPredictModel.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "dipy.reconst.base.ReconstModel.__init__"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_cross_validation.test_no_predict.NoPredictModel.fit": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "NoPredictFit"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_cross_validation.xval": {
  "data": {
   "shadows": "dipy.reconst.cross_validation"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.reconst.tests.test_csdeconv.ConstrainedSDTModel": {
  "data": {
   "shadows": "dipy.reconst.csdeconv.ConstrainedSDTModel"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.ConstrainedSphericalDeconvModel": {
  "data": {
   "shadows": "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.CsaOdfModel": {
  "data": {
   "shadows": "dipy.reconst.shm.CsaOdfModel"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.QballModel": {
  "data": {
   "shadows": "dipy.reconst.shm.QballModel"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.Sphere": {
  "data": {
   "shadows": "dipy.core.sphere.Sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.TensorModel": {
  "data": {
   "shadows": "dipy.reconst.dti.TensorModel"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.all_tensor_evecs": {
  "data": {
   "shadows": "dipy.sims.voxel.all_tensor_evecs"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.angular_similarity": {
  "data": {
   "shadows": "dipy.core.sphere_stats.angular_similarity"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.assert_warns": {
  "data": {
   "shadows": "numpy.testing.assert_warns"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.auto_response": {
  "data": {
   "shadows": "dipy.reconst.csdeconv.auto_response"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.cart2sphere": {
  "data": {
   "shadows": "dipy.core.geometry.cart2sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.default_sphere": {
  "data": {
   "shadows": "dipy.data.default_sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.dti": {
  "data": {
   "shadows": "dipy.reconst.dti"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.expected_lambda": {
  "data": {
   "lineno": 525
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_csdeconv.fa_inferior": {
  "data": {
   "shadows": "dipy.reconst.csdeconv.fa_inferior"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.fa_superior": {
  "data": {
   "shadows": "dipy.reconst.csdeconv.fa_superior"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.forward_sdeconv_mat": {
  "data": {
   "shadows": "dipy.reconst.csdeconv.forward_sdeconv_mat"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.fractional_anisotropy": {
  "data": {
   "shadows": "dipy.reconst.dti.fractional_anisotropy"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.get_sphere": {
  "data": {
   "shadows": "dipy.data.get_sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.gradient_table": {
  "data": {
   "shadows": "dipy.core.gradients.gradient_table"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.lazy_index": {
  "data": {
   "shadows": "dipy.reconst.shm.lazy_index"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.multi_tensor": {
  "data": {
   "shadows": "dipy.sims.voxel.multi_tensor"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.multi_tensor_odf": {
  "data": {
   "shadows": "dipy.sims.voxel.multi_tensor_odf"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.odf_deconv": {
  "data": {
   "shadows": "dipy.reconst.csdeconv.odf_deconv"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.odf_sh_to_sharp": {
  "data": {
   "shadows": "dipy.reconst.csdeconv.odf_sh_to_sharp"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.peak_directions": {
  "data": {
   "shadows": "dipy.direction.peaks.peak_directions"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.real_sym_sh_basis": {
  "data": {
   "shadows": "dipy.reconst.shm.real_sym_sh_basis"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.recursive_response": {
  "data": {
   "shadows": "dipy.reconst.csdeconv.recursive_response"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.response_from_mask": {
  "data": {
   "shadows": "dipy.reconst.csdeconv.response_from_mask"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.sf_to_sh": {
  "data": {
   "shadows": "dipy.reconst.shm.sf_to_sh"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.sh_to_sf": {
  "data": {
   "shadows": "dipy.reconst.shm.sh_to_sf"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.single_tensor": {
  "data": {
   "shadows": "dipy.sims.voxel.single_tensor"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.single_tensor_odf": {
  "data": {
   "shadows": "dipy.sims.voxel.single_tensor_odf"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.small_sphere": {
  "data": {
   "shadows": "dipy.data.small_sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.sph_harm_ind_list": {
  "data": {
   "shadows": "dipy.reconst.shm.sph_harm_ind_list"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_csdeconv.test_auto_response": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.reconst.csdeconv.auto_response",
    "dipy.reconst.csdeconv.fa_inferior",
    "dipy.reconst.csdeconv.fa_superior",
    "nibabel.load",
    "numpy.arange",
    "numpy.load",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_csdeconv.test_auto_response.test_fa_inferior": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_csdeconv.test_auto_response.test_fa_superior": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_csdeconv.test_csd_predict": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.data.small_sphere",
    "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel",
    "dipy.sims.voxel.multi_tensor",
    "dipy.sims.voxel.multi_tensor_odf",
    "numpy.array",
    "numpy.load",
    "numpy.random.random",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_csdeconv.test_csd_predict_multi": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel",
    "numpy.array",
    "numpy.load",
    "numpy.mean",
    "numpy.random.random",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_csdeconv.test_csd_superres": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "abs",
    "all",
    "dipy.core.gradients.gradient_table",
    "dipy.data.default_sphere",
    "dipy.data.get_data",
    "dipy.direction.peaks.peak_directions",
    "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel",
    "dipy.sims.voxel.multi_tensor",
    "len",
    "numpy.array",
    "numpy.load",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_csdeconv.test_csdeconv": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "UserWarning",
    "dipy.core.gradients.gradient_table",
    "dipy.core.sphere_stats.angular_similarity",
    "dipy.data.get_data",
    "dipy.data.get_sphere",
    "dipy.direction.peaks.peak_directions",
    "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel",
    "dipy.reconst.csdeconv.auto_response",
    "dipy.reconst.tests.test_csdeconv.warnings",
    "dipy.sims.voxel.all_tensor_evecs",
    "dipy.sims.voxel.multi_tensor",
    "dipy.sims.voxel.multi_tensor_odf",
    "dipy.sims.voxel.single_tensor",
    "issubclass",
    "len",
    "numpy.array",
    "numpy.load",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_warns",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_csdeconv.test_default_lambda_csdmodel": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.default_sphere",
    "dipy.data.get_data",
    "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel",
    "dipy.reconst.shm.real_sym_sh_basis",
    "dipy.reconst.tests.test_csdeconv.expected_lambda",
    "numpy.array",
    "numpy.load",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_csdeconv.test_forward_sdeconv_mat": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "ValueError",
    "dipy.reconst.csdeconv.forward_sdeconv_mat",
    "dipy.reconst.shm.sph_harm_ind_list",
    "numpy.arange",
    "numpy.array",
    "numpy.diag",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_csdeconv.test_odf_sh_to_sharp": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.data.get_sphere",
    "dipy.direction.peaks.peak_directions",
    "dipy.reconst.csdeconv.odf_sh_to_sharp",
    "dipy.reconst.shm.QballModel",
    "dipy.reconst.shm.sf_to_sh",
    "dipy.reconst.shm.sh_to_sf",
    "dipy.sims.voxel.multi_tensor",
    "numpy.array",
    "numpy.linalg.norm",
    "numpy.load",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_csdeconv.test_odfdeconv": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.core.sphere_stats.angular_similarity",
    "dipy.data.get_data",
    "dipy.data.get_sphere",
    "dipy.direction.peaks.peak_directions",
    "dipy.reconst.csdeconv.ConstrainedSDTModel",
    "dipy.reconst.csdeconv.odf_deconv",
    "dipy.reconst.tests.test_csdeconv.warnings",
    "dipy.sims.voxel.multi_tensor",
    "dipy.sims.voxel.multi_tensor_odf",
    "len",
    "numpy.array",
    "numpy.load",
    "numpy.nan",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_csdeconv.test_r2_term_odf_sharp": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.core.sphere_stats.angular_similarity",
    "dipy.data.get_data",
    "dipy.data.get_sphere",
    "dipy.direction.peaks.peak_directions",
    "dipy.reconst.csdeconv.ConstrainedSDTModel",
    "dipy.reconst.csdeconv.odf_sh_to_sharp",
    "dipy.reconst.shm.sf_to_sh",
    "dipy.reconst.shm.sh_to_sf",
    "dipy.sims.voxel.multi_tensor",
    "dipy.sims.voxel.multi_tensor_odf",
    "numpy.array",
    "numpy.load",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_csdeconv.test_recursive_response_calibration": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.core.sphere.Sphere",
    "dipy.core.sphere_stats.angular_similarity",
    "dipy.data.get_data",
    "dipy.data.get_sphere",
    "dipy.direction.peaks.peak_directions",
    "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel",
    "dipy.reconst.csdeconv.recursive_response",
    "dipy.reconst.dti.TensorModel",
    "dipy.reconst.dti.fractional_anisotropy",
    "dipy.reconst.shm.lazy_index",
    "dipy.sims.voxel.multi_tensor",
    "dipy.sims.voxel.multi_tensor_odf",
    "dipy.sims.voxel.single_tensor",
    "dipy.sims.voxel.single_tensor_odf",
    "numpy.all",
    "numpy.array",
    "numpy.concatenate",
    "numpy.load",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_csdeconv.test_response_from_mask": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.reconst.csdeconv.auto_response",
    "dipy.reconst.csdeconv.response_from_mask",
    "dipy.reconst.dti.TensorModel",
    "dipy.reconst.dti.fractional_anisotropy",
    "int",
    "nibabel.load",
    "numpy.arange",
    "numpy.array",
    "numpy.isnan",
    "numpy.load",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_csdeconv.test_sphere_scaling_csdmodel": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.data.small_sphere",
    "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel",
    "dipy.sims.voxel.multi_tensor",
    "numpy.array",
    "numpy.load",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_csdeconv.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki": {
  "data": {
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.io.gradients.read_bvals_bvecs",
    "dipy.reconst.dti.decompose_tensor",
    "dipy.reconst.dti.from_lower_triangular",
    "dipy.reconst.tests.test_dki.DWI",
    "dipy.reconst.tests.test_dki.De",
    "dipy.reconst.tests.test_dki.Dg",
    "dipy.reconst.tests.test_dki.Di",
    "dipy.reconst.tests.test_dki.angles_cross",
    "dipy.reconst.tests.test_dki.bvals_2s",
    "dipy.reconst.tests.test_dki.bvecs_2s",
    "dipy.reconst.tests.test_dki.crossing_ref",
    "dipy.reconst.tests.test_dki.f",
    "dipy.reconst.tests.test_dki.fie",
    "dipy.reconst.tests.test_dki.frac_cross",
    "dipy.reconst.tests.test_dki.frac_sph",
    "dipy.reconst.tests.test_dki.gtab_2s",
    "dipy.reconst.tests.test_dki.mevals_cross",
    "dipy.reconst.tests.test_dki.mevals_sph",
    "dipy.reconst.tests.test_dki.multi_params",
    "dipy.sims.voxel.multi_tensor_dki",
    "len",
    "numpy.array",
    "numpy.concatenate",
    "numpy.zeros"
   ]
  },
  "type": "module"
 },
 "dipy.reconst.tests.test_dki.DWI": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki.De": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki.Dg": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki.Di": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki.Kref_sphere": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki.Sphere": {
  "data": {
   "shadows": "dipy.core.sphere.Sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki._positive_evals": {
  "data": {
   "shadows": "dipy.reconst.dki._positive_evals"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki.angles_cross": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki.axial_kurtosis": {
  "data": {
   "shadows": "dipy.reconst.dki.axial_kurtosis"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki.bvals_2s": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki.bvecs_2s": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki.carlson_rd": {
  "data": {
   "shadows": "dipy.reconst.dki.carlson_rd"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki.carlson_rf": {
  "data": {
   "shadows": "dipy.reconst.dki.carlson_rf"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki.crossing_ref": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki.decompose_tensor": {
  "data": {
   "shadows": "dipy.reconst.dti.decompose_tensor"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki.dki": {
  "data": {
   "shadows": "dipy.reconst.dki"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki.dti": {
  "data": {
   "shadows": "dipy.reconst.dti"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki.f": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki.fie": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki.frac_cross": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki.frac_sph": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki.from_lower_triangular": {
  "data": {
   "shadows": "dipy.reconst.dti.from_lower_triangular"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki.get_sphere": {
  "data": {
   "shadows": "dipy.data.get_sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki.gradient_table": {
  "data": {
   "shadows": "dipy.core.gradients.gradient_table"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki.gtab": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki.gtab_2s": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki.lower_triangular": {
  "data": {
   "shadows": "dipy.reconst.dki.lower_triangular"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki.mean_kurtosis": {
  "data": {
   "shadows": "dipy.reconst.dki.mean_kurtosis"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki.mevals_cross": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki.mevals_sph": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki.multi_params": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki.multi_tensor_dki": {
  "data": {
   "shadows": "dipy.sims.voxel.multi_tensor_dki"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki.params_sph": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki.perpendicular_directions": {
  "data": {
   "shadows": "dipy.core.geometry.perpendicular_directions"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki.radial_kurtosis": {
  "data": {
   "shadows": "dipy.reconst.dki.radial_kurtosis"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki.read_bvals_bvecs": {
  "data": {
   "shadows": "dipy.io.gradients.read_bvals_bvecs"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki.sphere2cart": {
  "data": {
   "shadows": "dipy.core.geometry.sphere2cart"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki.test_MK_singularities": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "dipy.core.sphere.Sphere",
    "dipy.reconst.dki.DiffusionKurtosisModel",
    "dipy.reconst.dki.apparent_kurtosis_coef",
    "dipy.reconst.dki.mean_kurtosis",
    "dipy.reconst.tests.test_dki.frac_cross",
    "dipy.reconst.tests.test_dki.gtab",
    "dipy.reconst.tests.test_dki.gtab_2s",
    "dipy.reconst.tests.test_dki.mevals_cross",
    "dipy.sims.voxel.multi_tensor_dki",
    "numpy.array",
    "numpy.mean",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dki.test_Wcons": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "dipy.reconst.dki.Wcons",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dki.test_Wrotate_crossing_fibers": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "dipy.reconst.dki.Wrotate",
    "dipy.reconst.dti.decompose_tensor",
    "dipy.reconst.dti.from_lower_triangular",
    "dipy.reconst.tests.test_dki.fie",
    "dipy.reconst.tests.test_dki.gtab_2s",
    "dipy.sims.voxel.multi_tensor_dki",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dki.test_Wrotate_single_fiber": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "dipy.reconst.dki.Wrotate",
    "dipy.reconst.dti.decompose_tensor",
    "dipy.reconst.dti.from_lower_triangular",
    "dipy.reconst.tests.test_dki.fie",
    "dipy.reconst.tests.test_dki.gtab_2s",
    "dipy.reconst.tests.test_dki.random",
    "dipy.sims.voxel.multi_tensor_dki",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dki.test_apparent_kurtosis_coef": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "dipy.core.sphere.Sphere",
    "dipy.reconst.dki.apparent_kurtosis_coef",
    "dipy.reconst.tests.test_dki.Kref_sphere",
    "dipy.reconst.tests.test_dki.gtab",
    "dipy.reconst.tests.test_dki.params_sph",
    "len",
    "numpy.testing.assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dki.test_carlson_rd": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "dipy.reconst.dki.carlson_rd",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dki.test_carlson_rf": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "dipy.reconst.dki.carlson_rf",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dki.test_compare_MK_method": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "dipy.core.sphere.Sphere",
    "dipy.reconst.dki.DiffusionKurtosisModel",
    "dipy.reconst.dki.apparent_kurtosis_coef",
    "dipy.reconst.tests.test_dki.gtab",
    "dipy.reconst.tests.test_dki.gtab_2s",
    "numpy.mean",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dki.test_compare_RK_methods": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "dipy.core.geometry.perpendicular_directions",
    "dipy.core.sphere.Sphere",
    "dipy.reconst.dki.DiffusionKurtosisModel",
    "dipy.reconst.dki.apparent_kurtosis_coef",
    "dipy.reconst.tests.test_dki.gtab_2s",
    "numpy.mean",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dki.test_dki_errors": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "ValueError",
    "dipy.reconst.dki.DiffusionKurtosisModel",
    "dipy.reconst.tests.test_dki.DWI",
    "dipy.reconst.tests.test_dki.gtab",
    "dipy.reconst.tests.test_dki.gtab_2s",
    "dipy.reconst.tests.test_dki.multi_params",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dki.test_dki_fits": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "dipy.reconst.dki.DiffusionKurtosisModel",
    "dipy.reconst.tests.test_dki.DWI",
    "dipy.reconst.tests.test_dki.crossing_ref",
    "dipy.reconst.tests.test_dki.gtab_2s",
    "dipy.reconst.tests.test_dki.multi_params",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dki.test_dki_predict": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "dipy.reconst.dki.DiffusionKurtosisModel",
    "dipy.reconst.dki.dki_prediction",
    "dipy.reconst.tests.test_dki.DWI",
    "dipy.reconst.tests.test_dki.crossing_ref",
    "dipy.reconst.tests.test_dki.gtab_2s",
    "dipy.reconst.tests.test_dki.multi_params",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dki.test_kurtosis_maximum": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "dipy.core.geometry.sphere2cart",
    "dipy.data.get_sphere",
    "dipy.reconst.dki.DiffusionKurtosisModel",
    "dipy.reconst.dki._voxel_kurtosis_maximum",
    "dipy.reconst.dki.lower_triangular",
    "dipy.reconst.tests.test_dki.Kref_sphere",
    "dipy.reconst.tests.test_dki.fie",
    "dipy.reconst.tests.test_dki.frac_cross",
    "dipy.reconst.tests.test_dki.gtab_2s",
    "dipy.reconst.tests.test_dki.mevals_cross",
    "dipy.reconst.tests.test_dki.random",
    "dipy.sims.voxel.multi_tensor_dki",
    "numpy.abs",
    "numpy.array",
    "numpy.deg2rad",
    "numpy.diag",
    "numpy.dot",
    "numpy.mean",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dki.test_multi_voxel_kurtosis_maximum": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "dipy.data.get_sphere",
    "dipy.reconst.dki.DiffusionKurtosisModel",
    "dipy.reconst.dki.kurtosis_maximum",
    "dipy.reconst.tests.test_dki.fie",
    "dipy.reconst.tests.test_dki.gtab_2s",
    "dipy.reconst.tests.test_dki.random",
    "dipy.sims.voxel.multi_tensor_dki",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dki.test_positive_evals": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "bool",
    "dipy.reconst.dki._positive_evals",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dki.test_single_voxel_DKI_stats": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "dipy.core.sphere.Sphere",
    "dipy.reconst.dki.DiffusionKurtosisModel",
    "dipy.reconst.dki.axial_kurtosis",
    "dipy.reconst.dki.radial_kurtosis",
    "dipy.reconst.dti.axial_diffusivity",
    "dipy.reconst.dti.decompose_tensor",
    "dipy.reconst.dti.from_lower_triangular",
    "dipy.reconst.dti.radial_diffusivity",
    "dipy.reconst.tests.test_dki.fie",
    "dipy.reconst.tests.test_dki.gtab",
    "dipy.reconst.tests.test_dki.gtab_2s",
    "dipy.reconst.tests.test_dki.random",
    "dipy.sims.voxel.multi_tensor_dki",
    "numpy.array",
    "numpy.concatenate",
    "numpy.mean",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dki.test_spherical_dki_statistics": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "dipy.reconst.dki.axial_kurtosis",
    "dipy.reconst.dki.mean_kurtosis",
    "dipy.reconst.dki.radial_kurtosis",
    "dipy.reconst.tests.test_dki.Kref_sphere",
    "dipy.reconst.tests.test_dki.params_sph",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dki.test_split_dki_param": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "dipy.reconst.dki.DiffusionKurtosisModel",
    "dipy.reconst.dki.split_dki_param",
    "dipy.reconst.tests.test_dki.DWI",
    "dipy.reconst.tests.test_dki.gtab_2s",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dki_micro": {
  "data": {
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.io.gradients.read_bvals_bvecs",
    "dipy.reconst.tests.test_dki_micro.ADE",
    "dipy.reconst.tests.test_dki_micro.ADI",
    "dipy.reconst.tests.test_dki_micro.ADe",
    "dipy.reconst.tests.test_dki_micro.ADi",
    "dipy.reconst.tests.test_dki_micro.DWIsim",
    "dipy.reconst.tests.test_dki_micro.DWIsim_all_taylor",
    "dipy.reconst.tests.test_dki_micro.FIE",
    "dipy.reconst.tests.test_dki_micro.RDE",
    "dipy.reconst.tests.test_dki_micro.RDI",
    "dipy.reconst.tests.test_dki_micro.RDe",
    "dipy.reconst.tests.test_dki_micro.RDi",
    "dipy.reconst.tests.test_dki_micro.Tor",
    "dipy.reconst.tests.test_dki_micro.angles",
    "dipy.reconst.tests.test_dki_micro.bvals_2s",
    "dipy.reconst.tests.test_dki_micro.bvecs_2s",
    "dipy.reconst.tests.test_dki_micro.fie",
    "dipy.reconst.tests.test_dki_micro.frac",
    "dipy.reconst.tests.test_dki_micro.gtab_2s",
    "dipy.reconst.tests.test_dki_micro.mevals",
    "dipy.reconst.tests.test_dki_micro.phi",
    "dipy.reconst.tests.test_dki_micro.random",
    "dipy.reconst.tests.test_dki_micro.theta",
    "dipy.sims.voxel.multi_tensor",
    "dipy.sims.voxel.multi_tensor_dki",
    "numpy.array",
    "numpy.concatenate",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "module"
 },
 "dipy.reconst.tests.test_dki_micro.ADE": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki_micro.ADI": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki_micro.ADe": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki_micro.ADi": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki_micro.DWIsim": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki_micro.DWIsim_all_taylor": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki_micro.FIE": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki_micro.RDE": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki_micro.RDI": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki_micro.RDe": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki_micro.RDi": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki_micro.Tor": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki_micro._check_directions": {
  "data": {
   "shadows": "dipy.sims.voxel._check_directions"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki_micro._help_test_awf_only": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "exec"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dki_micro.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki_micro.additional_tortuosity_tests": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "dipy.reconst.dki_micro.tortuosity",
    "dipy.reconst.tests.test_dki_micro.ADE",
    "dipy.reconst.tests.test_dki_micro.RDE",
    "dipy.reconst.tests.test_dki_micro.Tor",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dki_micro.angles": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki_micro.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki_micro.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki_micro.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki_micro.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki_micro.bvals_2s": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki_micro.bvecs_2s": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki_micro.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki_micro.dki_micro": {
  "data": {
   "shadows": "dipy.reconst.dki_micro"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki_micro.eig_from_lo_tri": {
  "data": {
   "shadows": "dipy.reconst.dti.eig_from_lo_tri"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki_micro.fie": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki_micro.frac": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki_micro.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki_micro.get_sphere": {
  "data": {
   "shadows": "dipy.data.get_sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki_micro.gradient_table": {
  "data": {
   "shadows": "dipy.core.gradients.gradient_table"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki_micro.gtab": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki_micro.gtab_2s": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki_micro.mevals": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki_micro.multi_tensor": {
  "data": {
   "shadows": "dipy.sims.voxel.multi_tensor"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki_micro.multi_tensor_dki": {
  "data": {
   "shadows": "dipy.sims.voxel.multi_tensor_dki"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki_micro.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki_micro.phi": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dki_micro.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki_micro.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki_micro.read_bvals_bvecs": {
  "data": {
   "shadows": "dipy.io.gradients.read_bvals_bvecs"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dki_micro.test_dki_micro_awf_only": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "ValueError",
    "dipy.reconst.dki_micro.KurtosisMicrostructureModel",
    "dipy.reconst.tests.test_dki_micro.DWIsim",
    "dipy.reconst.tests.test_dki_micro.FIE",
    "dipy.reconst.tests.test_dki_micro._help_test_awf_only",
    "dipy.reconst.tests.test_dki_micro.gtab_2s",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dki_micro.test_dki_micro_predict_multi_voxel": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "dipy.reconst.dki_micro.KurtosisMicrostructureModel",
    "dipy.reconst.tests.test_dki_micro.DWIsim",
    "dipy.reconst.tests.test_dki_micro.DWIsim_all_taylor",
    "dipy.reconst.tests.test_dki_micro.gtab_2s",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dki_micro.test_dki_micro_predict_single_voxel": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "dipy.reconst.dki_micro.KurtosisMicrostructureModel",
    "dipy.reconst.tests.test_dki_micro.ADe",
    "dipy.reconst.tests.test_dki_micro.ADi",
    "dipy.reconst.tests.test_dki_micro.RDe",
    "dipy.reconst.tests.test_dki_micro.RDi",
    "dipy.reconst.tests.test_dki_micro.angles",
    "dipy.reconst.tests.test_dki_micro.fie",
    "dipy.reconst.tests.test_dki_micro.frac",
    "dipy.reconst.tests.test_dki_micro.gtab_2s",
    "dipy.reconst.tests.test_dki_micro.mevals",
    "dipy.reconst.tests.test_dki_micro.phi",
    "dipy.reconst.tests.test_dki_micro.random",
    "dipy.reconst.tests.test_dki_micro.theta",
    "dipy.sims.voxel.multi_tensor",
    "dipy.sims.voxel.multi_tensor_dki",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dki_micro.test_single_fiber_model": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "abs",
    "dipy.data.get_sphere",
    "dipy.reconst.dki_micro.DiffusionKurtosisModel",
    "dipy.reconst.dki_micro.KurtosisMicrostructureModel",
    "dipy.reconst.dki_micro.axonal_water_fraction",
    "dipy.reconst.dki_micro.diffusion_components",
    "dipy.reconst.dti.eig_from_lo_tri",
    "dipy.reconst.tests.test_dki_micro.ADe",
    "dipy.reconst.tests.test_dki_micro.ADi",
    "dipy.reconst.tests.test_dki_micro.RDe",
    "dipy.reconst.tests.test_dki_micro.RDi",
    "dipy.reconst.tests.test_dki_micro.angles",
    "dipy.reconst.tests.test_dki_micro.fie",
    "dipy.reconst.tests.test_dki_micro.frac",
    "dipy.reconst.tests.test_dki_micro.gtab_2s",
    "dipy.reconst.tests.test_dki_micro.mevals",
    "dipy.reconst.tests.test_dki_micro.phi",
    "dipy.reconst.tests.test_dki_micro.random",
    "dipy.reconst.tests.test_dki_micro.theta",
    "dipy.sims.voxel._check_directions",
    "dipy.sims.voxel.multi_tensor_dki",
    "numpy.all",
    "numpy.array",
    "numpy.dot",
    "numpy.isfinite",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dki_micro.test_wmti_model_multi_voxel": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "dipy.data.get_sphere",
    "dipy.reconst.dki_micro.DiffusionKurtosisModel",
    "dipy.reconst.dki_micro.KurtosisMicrostructureModel",
    "dipy.reconst.dki_micro.axonal_water_fraction",
    "dipy.reconst.dki_micro.diffusion_components",
    "dipy.reconst.dti.eig_from_lo_tri",
    "dipy.reconst.tests.test_dki_micro.ADE",
    "dipy.reconst.tests.test_dki_micro.ADI",
    "dipy.reconst.tests.test_dki_micro.DWIsim",
    "dipy.reconst.tests.test_dki_micro.FIE",
    "dipy.reconst.tests.test_dki_micro.RDE",
    "dipy.reconst.tests.test_dki_micro.RDI",
    "dipy.reconst.tests.test_dki_micro.Tor",
    "dipy.reconst.tests.test_dki_micro.gtab_2s",
    "numpy.ones",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dki_micro.theta": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_dsi": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.reconst.tests.test_dsi.DiffusionSpectrumModel": {
  "data": {
   "shadows": "dipy.reconst.dsi.DiffusionSpectrumModel"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi.Sphere": {
  "data": {
   "shadows": "dipy.core.sphere.Sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi.SticksAndBall": {
  "data": {
   "shadows": "dipy.sims.voxel.SticksAndBall"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi.angular_similarity": {
  "data": {
   "shadows": "dipy.core.sphere_stats.angular_similarity"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi.create_unit_sphere": {
  "data": {
   "shadows": "dipy.core.subdivide_octahedron.create_unit_sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi.dsi_voxels": {
  "data": {
   "shadows": "dipy.data.dsi_voxels"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi.get_sphere": {
  "data": {
   "shadows": "dipy.data.get_sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi.gfa": {
  "data": {
   "shadows": "dipy.reconst.odf.gfa"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi.gradient_table": {
  "data": {
   "shadows": "dipy.core.gradients.gradient_table"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi.peak_directions": {
  "data": {
   "shadows": "dipy.direction.peaks.peak_directions"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi.sticks_and_ball_dummies": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "dipy.sims.voxel.SticksAndBall"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dsi.test_dsi": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "dipy.core.gradients.gradient_table",
    "dipy.core.sphere_stats.angular_similarity",
    "dipy.core.subdivide_octahedron.create_unit_sphere",
    "dipy.data.get_data",
    "dipy.data.get_sphere",
    "dipy.direction.peaks.peak_directions",
    "dipy.reconst.dsi.DiffusionSpectrumModel",
    "dipy.reconst.odf.gfa",
    "dipy.reconst.tests.test_dsi.sticks_and_ball_dummies",
    "dipy.sims.voxel.SticksAndBall",
    "len",
    "numpy.loadtxt",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dsi.test_multib0_dsi": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.dsi_voxels",
    "dipy.data.get_sphere",
    "dipy.reconst.dsi.DiffusionSpectrumModel",
    "numpy.alltrue",
    "numpy.concatenate",
    "numpy.isreal",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dsi.test_multivox_dsi": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "dipy.data.dsi_voxels",
    "dipy.data.get_sphere",
    "dipy.reconst.dsi.DiffusionSpectrumModel",
    "numpy.alltrue",
    "numpy.isreal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dsi_deconv": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.reconst.tests.test_dsi_deconv.DiffusionSpectrumDeconvModel": {
  "data": {
   "shadows": "dipy.reconst.dsi.DiffusionSpectrumDeconvModel"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi_deconv.Sphere": {
  "data": {
   "shadows": "dipy.core.sphere.Sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi_deconv.SticksAndBall": {
  "data": {
   "shadows": "dipy.sims.voxel.SticksAndBall"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi_deconv.angular_similarity": {
  "data": {
   "shadows": "dipy.core.sphere_stats.angular_similarity"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi_deconv.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi_deconv.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi_deconv.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi_deconv.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi_deconv.create_unit_sphere": {
  "data": {
   "shadows": "dipy.core.subdivide_octahedron.create_unit_sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi_deconv.dsi_deconv_voxels": {
  "data": {
   "shadows": "dipy.data.dsi_deconv_voxels"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi_deconv.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi_deconv.get_sphere": {
  "data": {
   "shadows": "dipy.data.get_sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi_deconv.gfa": {
  "data": {
   "shadows": "dipy.reconst.odf.gfa"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi_deconv.gradient_table": {
  "data": {
   "shadows": "dipy.core.gradients.gradient_table"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi_deconv.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi_deconv.peak_directions": {
  "data": {
   "shadows": "dipy.direction.peaks.peak_directions"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi_deconv.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi_deconv.sticks_and_ball_dummies": {
  "data": {
   "shadows": "dipy.reconst.tests.test_dsi.sticks_and_ball_dummies"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi_deconv.test_dsi": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "dipy.core.gradients.gradient_table",
    "dipy.core.sphere_stats.angular_similarity",
    "dipy.core.subdivide_octahedron.create_unit_sphere",
    "dipy.data.get_data",
    "dipy.data.get_sphere",
    "dipy.direction.peaks.peak_directions",
    "dipy.reconst.dsi.DiffusionSpectrumDeconvModel",
    "dipy.reconst.odf.gfa",
    "dipy.reconst.tests.test_dsi.sticks_and_ball_dummies",
    "dipy.sims.voxel.SticksAndBall",
    "len",
    "numpy.loadtxt",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dsi_deconv.test_multivox_dsi": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "dipy.data.dsi_deconv_voxels",
    "dipy.data.get_sphere",
    "dipy.reconst.dsi.DiffusionSpectrumDeconvModel",
    "numpy.alltrue",
    "numpy.isreal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dsi_metrics": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.reconst.tests.test_dsi_metrics.DiffusionSpectrumModel": {
  "data": {
   "shadows": "dipy.reconst.dsi.DiffusionSpectrumModel"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi_metrics.MultiTensor": {
  "data": {
   "shadows": "dipy.sims.voxel.MultiTensor"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi_metrics.SticksAndBall": {
  "data": {
   "shadows": "dipy.sims.voxel.SticksAndBall"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi_metrics.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi_metrics.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi_metrics.gradient_table": {
  "data": {
   "shadows": "dipy.core.gradients.gradient_table"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi_metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi_metrics.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dsi_metrics.test_dsi_metrics": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.reconst.dsi.DiffusionSpectrumModel",
    "dipy.sims.voxel.MultiTensor",
    "dipy.sims.voxel.SticksAndBall",
    "numpy.array",
    "numpy.loadtxt",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dti": {
  "data": {},
  "type": "module"
 },
 "dipy.reconst.tests.test_dti.TensorModel": {
  "data": {
   "shadows": "dipy.reconst.dti.TensorModel"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti._decompose_tensor_nan": {
  "data": {
   "shadows": "dipy.reconst.dti._decompose_tensor_nan"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.assert_almost_equal": {
  "data": {
   "shadows": "nose.tools.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.axial_diffusivity": {
  "data": {
   "shadows": "dipy.reconst.dti.axial_diffusivity"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.color_fa": {
  "data": {
   "shadows": "dipy.reconst.dti.color_fa"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.create_unit_sphere": {
  "data": {
   "shadows": "dipy.core.subdivide_octahedron.create_unit_sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.decompose_tensor": {
  "data": {
   "shadows": "dipy.reconst.dti.decompose_tensor"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.dps": {
  "data": {
   "shadows": "dipy.core.sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.dsi_voxels": {
  "data": {
   "shadows": "dipy.data.dsi_voxels"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.dti": {
  "data": {
   "shadows": "dipy.reconst.dti"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.fractional_anisotropy": {
  "data": {
   "shadows": "dipy.reconst.dti.fractional_anisotropy"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.from_lower_triangular": {
  "data": {
   "shadows": "dipy.reconst.dti.from_lower_triangular"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.geodesic_anisotropy": {
  "data": {
   "shadows": "dipy.reconst.dti.geodesic_anisotropy"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.get_sphere": {
  "data": {
   "shadows": "dipy.data.get_sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.grad": {
  "data": {
   "shadows": "dipy.core.gradients"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.linearity": {
  "data": {
   "shadows": "dipy.reconst.dti.linearity"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.lower_triangular": {
  "data": {
   "shadows": "dipy.reconst.dti.lower_triangular"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.mean_diffusivity": {
  "data": {
   "shadows": "dipy.reconst.dti.mean_diffusivity"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.opt": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.planarity": {
  "data": {
   "shadows": "dipy.reconst.dti.planarity"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.radial_diffusivity": {
  "data": {
   "shadows": "dipy.reconst.dti.radial_diffusivity"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.read_bvec_file": {
  "data": {
   "shadows": "dipy.io.bvectxt.read_bvec_file"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.single_tensor": {
  "data": {
   "shadows": "dipy.sims.voxel.single_tensor"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.sphericity": {
  "data": {
   "shadows": "dipy.reconst.dti.sphericity"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_dti.test_adc": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "bool",
    "dipy.core.sphere.Sphere",
    "dipy.data.dsi_voxels",
    "dipy.reconst.dti.TensorModel",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dti.test_all_constant": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table_from_bvals_bvecs",
    "dipy.data.get_data",
    "dipy.io.bvectxt.read_bvec_file",
    "dipy.reconst.dti.TensorModel",
    "nose.tools.assert_almost_equal",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dti.test_all_zeros": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table_from_bvals_bvecs",
    "dipy.data.get_data",
    "dipy.io.bvectxt.read_bvec_file",
    "dipy.reconst.dti.TensorModel",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dti.test_color_fa": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ValueError",
    "dipy.data.dsi_voxels",
    "dipy.reconst.dti.TensorModel",
    "dipy.reconst.dti.color_fa",
    "dipy.reconst.dti.fractional_anisotropy",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.ones",
    "numpy.reshape",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "numpy.tile",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dti.test_decompose_tensor_nan": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "dipy.reconst.dti._decompose_tensor_nan",
    "dipy.reconst.dti.decompose_tensor",
    "dipy.reconst.dti.from_lower_triangular",
    "numpy.array",
    "numpy.nan",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dti.test_diffusivities": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_sphere",
    "dipy.reconst.dti.TensorModel",
    "dipy.reconst.dti.axial_diffusivity",
    "dipy.reconst.dti.linearity",
    "dipy.reconst.dti.mean_diffusivity",
    "dipy.reconst.dti.planarity",
    "dipy.reconst.dti.radial_diffusivity",
    "dipy.reconst.dti.sphericity",
    "dipy.reconst.dti.trace",
    "dipy.sims.voxel.single_tensor",
    "len",
    "nose.tools.assert_almost_equal",
    "numpy.array",
    "numpy.concatenate",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dti.test_eig_from_lo_tri": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_sphere",
    "dipy.reconst.dti.TensorModel",
    "dipy.reconst.dti.eig_from_lo_tri",
    "dipy.reconst.dti.lower_triangular",
    "dipy.sims.voxel.single_tensor",
    "len",
    "numpy.array",
    "numpy.concatenate",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dti.test_fa_of_zero": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "dipy.reconst.dti.fractional_anisotropy",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dti.test_fit_method_error": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "ValueError",
    "dipy.core.gradients.gradient_table_from_bvals_bvecs",
    "dipy.data.get_data",
    "dipy.io.bvectxt.read_bvec_file",
    "dipy.reconst.dti.TensorModel",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dti.test_from_lower_triangular": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "dipy.reconst.dti.from_lower_triangular",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dti.test_ga_of_zero": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "dipy.reconst.dti.geodesic_anisotropy",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dti.test_indexing_on_tensor_fit": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "IndexError",
    "dipy.reconst.dti.TensorFit",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.zeros",
    "slice",
    "type"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dti.test_lower_triangular": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "ValueError",
    "dipy.reconst.dti.lower_triangular",
    "nose.tools.assert_raises",
    "numpy.arange",
    "numpy.empty",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dti.test_mask": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "bool",
    "dipy.data.dsi_voxels",
    "dipy.reconst.dti.TensorModel",
    "nose.tools.assert_almost_equal",
    "numpy.isnan",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dti.test_masked_array_with_tensor": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table_from_bvals_bvecs",
    "dipy.data.get_data",
    "dipy.io.bvectxt.read_bvec_file",
    "dipy.reconst.dti.TensorModel",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.ndarray",
    "numpy.ones",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dti.test_min_signal_alone": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.reconst.dti.TensorModel",
    "nibabel.load",
    "numpy.array",
    "numpy.min",
    "numpy.testing.assert_array_almost_equal",
    "numpy.where",
    "tuple"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dti.test_nlls_fit_tensor": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "ValueError",
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.io.bvectxt.read_bvec_file",
    "dipy.reconst.dti.TensorModel",
    "dipy.reconst.dti.design_matrix",
    "dipy.reconst.dti.from_lower_triangular",
    "nibabel.load",
    "nose.tools.assert_almost_equal",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.dot",
    "numpy.exp",
    "numpy.log",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dti.test_nnls_jacobian_fucn": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.io.bvectxt.read_bvec_file",
    "dipy.reconst.dti._nlls_err_func",
    "dipy.reconst.dti._nlls_jacobian_func",
    "dipy.reconst.dti.design_matrix",
    "len",
    "nose.tools.assert_true",
    "numpy.allclose",
    "numpy.array",
    "numpy.dot",
    "numpy.exp",
    "numpy.log",
    "numpy.zeros_like",
    "range",
    "scipy.optimize.approx_fprime"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dti.test_odf_with_zeros": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.core.subdivide_octahedron.create_unit_sphere",
    "dipy.data.get_data",
    "dipy.reconst.dti.TensorModel",
    "nibabel.load",
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dti.test_predict": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.data.get_sphere",
    "dipy.reconst.dti.TensorModel",
    "dipy.sims.voxel.single_tensor",
    "len",
    "nibabel.load",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.concatenate",
    "numpy.mean",
    "numpy.testing.assert_array_almost_equal",
    "numpy.tile",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dti.test_restore": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.io.bvectxt.read_bvec_file",
    "dipy.reconst.dti.TensorModel",
    "dipy.reconst.dti.design_matrix",
    "dipy.reconst.dti.from_lower_triangular",
    "nose.tools.assert_almost_equal",
    "numpy.array",
    "numpy.dot",
    "numpy.exp",
    "numpy.log",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dti.test_roll_evals": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "dipy.reconst.dti._roll_evals",
    "numpy.array",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dti.test_tensor_algebra": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "dipy.reconst.dti.determinant",
    "dipy.reconst.dti.norm",
    "enumerate",
    "nose.tools.assert_almost_equal",
    "numpy.linalg.det",
    "numpy.linalg.norm",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dti.test_tensor_model": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "all",
    "dipy.core.gradients.gradient_table",
    "dipy.core.gradients.gradient_table_from_bvals_bvecs",
    "dipy.core.subdivide_octahedron.create_unit_sphere",
    "dipy.data.dsi_voxels",
    "dipy.data.get_data",
    "dipy.io.bvectxt.read_bvec_file",
    "dipy.reconst.dti.TensorModel",
    "dipy.reconst.dti.design_matrix",
    "dipy.reconst.dti.from_lower_triangular",
    "len",
    "nibabel.load",
    "nose.tools.assert_almost_equal",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.all",
    "numpy.any",
    "numpy.argsort",
    "numpy.array",
    "numpy.dot",
    "numpy.exp",
    "numpy.eye",
    "numpy.linalg.det",
    "numpy.linalg.eigh",
    "numpy.linalg.norm",
    "numpy.log",
    "numpy.mean",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "numpy.trace",
    "numpy.zeros",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dti.test_wls_and_ls_fit": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "ValueError",
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.io.bvectxt.read_bvec_file",
    "dipy.reconst.dti.TensorModel",
    "dipy.reconst.dti.design_matrix",
    "dipy.reconst.dti.from_lower_triangular",
    "dipy.reconst.dti.linearity",
    "dipy.reconst.dti.planarity",
    "dipy.reconst.dti.sphericity",
    "nose.tools.assert_almost_equal",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.dot",
    "numpy.exp",
    "numpy.log",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises",
    "tuple"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_dti.trace": {
  "data": {
   "shadows": "dipy.reconst.dti.trace"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_forecast": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.reconst.tests.test_forecast._C",
    "dipy.utils.optpkg.optional_package",
    "numpy.testing.dec.skipif",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.reconst.tests.test_forecast.ForecastModel": {
  "data": {
   "shadows": "dipy.reconst.forecast.ForecastModel"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_forecast.MultiTensor": {
  "data": {
   "shadows": "dipy.sims.voxel.MultiTensor"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_forecast._C": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.tests.test_forecast.angular_similarity": {
  "data": {
   "shadows": "dipy.core.sphere_stats.angular_similarity"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_forecast.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_forecast.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_forecast.data": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_forecast.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_forecast.get_3shell_gtab": {
  "data": {
   "shadows": "dipy.data.get_3shell_gtab"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_forecast.get_sphere": {
  "data": {
   "shadows": "dipy.data.get_sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_forecast.needs_cvxpy": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_forecast.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_forecast.optional_package": {
  "data": {
   "shadows": "dipy.utils.optpkg.optional_package"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_forecast.peak_directions": {
  "data": {
   "shadows": "dipy.direction.peaks.peak_directions"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_forecast.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_forecast.setup": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "dipy.data.get_3shell_gtab",
    "dipy.data.get_sphere",
    "dipy.reconst.tests.test_forecast.data",
    "dipy.sims.voxel.MultiTensor",
    "int",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_forecast.test_forecast_csd": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "dipy.data.get_sphere",
    "dipy.reconst.forecast.ForecastModel",
    "dipy.reconst.tests.test_forecast.data",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_forecast.test_forecast_indices": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "dipy.reconst.forecast.ForecastModel",
    "dipy.reconst.tests.test_forecast.data",
    "dipy.sims.voxel.MultiTensor",
    "numpy.array",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_forecast.test_forecast_odf": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "dipy.core.sphere_stats.angular_similarity",
    "dipy.data.get_sphere",
    "dipy.direction.peaks.peak_directions",
    "dipy.reconst.forecast.ForecastModel",
    "dipy.reconst.tests.test_forecast.data",
    "len",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_forecast.test_forecast_positive_constrain": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "dipy.data.get_sphere",
    "dipy.reconst.forecast.ForecastModel",
    "dipy.reconst.tests.test_forecast.data",
    "dipy.reconst.tests.test_forecast.needs_cvxpy",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_forecast.test_forecast_predict": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "dipy.reconst.forecast.ForecastModel",
    "dipy.reconst.tests.test_forecast.data",
    "len",
    "numpy.sum",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_forecast.test_multivox_forecast": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "dipy.data.get_3shell_gtab",
    "dipy.reconst.forecast.ForecastModel",
    "dipy.sims.voxel.MultiTensor",
    "len",
    "numpy.array",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_fwdti": {
  "data": {
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.io.gradients.read_bvals_bvecs",
    "dipy.reconst.dti.TensorModel",
    "dipy.reconst.dti.decompose_tensor",
    "dipy.reconst.dti.from_lower_triangular",
    "dipy.reconst.tests.test_fwdti.DWI",
    "dipy.reconst.tests.test_fwdti.FAdti",
    "dipy.reconst.tests.test_fwdti.FAref",
    "dipy.reconst.tests.test_fwdti.GTF",
    "dipy.reconst.tests.test_fwdti.MDdti",
    "dipy.reconst.tests.test_fwdti.MDref",
    "dipy.reconst.tests.test_fwdti.R",
    "dipy.reconst.tests.test_fwdti.S_tissue",
    "dipy.reconst.tests.test_fwdti.bvals_2s",
    "dipy.reconst.tests.test_fwdti.bvecs_2s",
    "dipy.reconst.tests.test_fwdti.dm",
    "dipy.reconst.tests.test_fwdti.dt",
    "dipy.reconst.tests.test_fwdti.dtifit",
    "dipy.reconst.tests.test_fwdti.gtab_2s",
    "dipy.reconst.tests.test_fwdti.gtf",
    "dipy.reconst.tests.test_fwdti.mevals",
    "dipy.reconst.tests.test_fwdti.model_params_mv",
    "dipy.sims.voxel.all_tensor_evecs",
    "dipy.sims.voxel.multi_tensor",
    "dipy.sims.voxel.single_tensor",
    "len",
    "numpy.array",
    "numpy.concatenate",
    "numpy.ones",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "module"
 },
 "dipy.reconst.tests.test_fwdti.DWI": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_fwdti.FAdti": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_fwdti.FAref": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_fwdti.GTF": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_fwdti.MDdti": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_fwdti.MDref": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_fwdti.R": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_fwdti.S0": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_fwdti.S0m": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_fwdti.S_tissue": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_fwdti.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_fwdti.all_tensor_evecs": {
  "data": {
   "shadows": "dipy.sims.voxel.all_tensor_evecs"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_fwdti.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_fwdti.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_fwdti.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_fwdti.bvals_2s": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_fwdti.bvecs_2s": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_fwdti.cholesky_to_lower_triangular": {
  "data": {
   "shadows": "dipy.reconst.fwdti.cholesky_to_lower_triangular"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_fwdti.decompose_tensor": {
  "data": {
   "shadows": "dipy.reconst.dti.decompose_tensor"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_fwdti.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_fwdti.dm": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_fwdti.dt": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_fwdti.dti": {
  "data": {
   "shadows": "dipy.reconst.dti"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_fwdti.dtifit": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_fwdti.dtiparams": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_fwdti.fractional_anisotropy": {
  "data": {
   "shadows": "dipy.reconst.dti.fractional_anisotropy"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_fwdti.from_lower_triangular": {
  "data": {
   "shadows": "dipy.reconst.dti.from_lower_triangular"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_fwdti.fwdti": {
  "data": {
   "shadows": "dipy.reconst.fwdti"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_fwdti.fwdti_prediction": {
  "data": {
   "shadows": "dipy.reconst.fwdti.fwdti_prediction"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_fwdti.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_fwdti.gradient_table": {
  "data": {
   "shadows": "dipy.core.gradients.gradient_table"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_fwdti.gtab": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_fwdti.gtab_2s": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_fwdti.gtf": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_fwdti.lower_triangular_to_cholesky": {
  "data": {
   "shadows": "dipy.reconst.fwdti.lower_triangular_to_cholesky"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_fwdti.mevals": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_fwdti.model_params_mv": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_fwdti.multi_tensor": {
  "data": {
   "shadows": "dipy.sims.voxel.multi_tensor"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_fwdti.multi_tensor_dki": {
  "data": {
   "shadows": "dipy.sims.voxel.multi_tensor_dki"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_fwdti.nls_fit_tensor": {
  "data": {
   "shadows": "dipy.reconst.fwdti.nls_fit_tensor"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_fwdti.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_fwdti.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_fwdti.read_bvals_bvecs": {
  "data": {
   "shadows": "dipy.io.gradients.read_bvals_bvecs"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_fwdti.single_tensor": {
  "data": {
   "shadows": "dipy.sims.voxel.single_tensor"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_fwdti.test_cholesky_functions": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "dipy.reconst.fwdti.cholesky_to_lower_triangular",
    "dipy.reconst.fwdti.lower_triangular_to_cholesky",
    "dipy.reconst.tests.test_fwdti.R",
    "dipy.reconst.tests.test_fwdti.dt",
    "dipy.reconst.tests.test_fwdti.gtab",
    "dipy.reconst.tests.test_fwdti.mevals",
    "dipy.sims.voxel.multi_tensor_dki",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_fwdti.test_fwdti_errors": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "ValueError",
    "dipy.reconst.fwdti.FreeWaterTensorModel",
    "dipy.reconst.tests.test_fwdti.DWI",
    "dipy.reconst.tests.test_fwdti.FAref",
    "dipy.reconst.tests.test_fwdti.GTF",
    "dipy.reconst.tests.test_fwdti.gtab",
    "dipy.reconst.tests.test_fwdti.gtab_2s",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_fwdti.test_fwdti_jac_multi_voxel": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "dipy.reconst.fwdti.FreeWaterTensorModel",
    "dipy.reconst.tests.test_fwdti.DWI",
    "dipy.reconst.tests.test_fwdti.GTF",
    "dipy.reconst.tests.test_fwdti.gtab_2s",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_fwdti.test_fwdti_multi_voxel": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "dipy.reconst.fwdti.FreeWaterTensorModel",
    "dipy.reconst.tests.test_fwdti.DWI",
    "dipy.reconst.tests.test_fwdti.FAref",
    "dipy.reconst.tests.test_fwdti.GTF",
    "dipy.reconst.tests.test_fwdti.MDref",
    "dipy.reconst.tests.test_fwdti.gtab_2s",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_fwdti.test_fwdti_precision": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "dipy.reconst.fwdti.FreeWaterTensorModel",
    "dipy.reconst.tests.test_fwdti.FAdti",
    "dipy.reconst.tests.test_fwdti.MDdti",
    "dipy.reconst.tests.test_fwdti.gtab_2s",
    "dipy.reconst.tests.test_fwdti.gtf",
    "dipy.reconst.tests.test_fwdti.mevals",
    "dipy.sims.voxel.multi_tensor",
    "numpy.array",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_fwdti.test_fwdti_predictions": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "dipy.reconst.fwdti.FreeWaterTensorModel",
    "dipy.reconst.fwdti.fwdti_prediction",
    "dipy.reconst.tests.test_fwdti.DWI",
    "dipy.reconst.tests.test_fwdti.R",
    "dipy.reconst.tests.test_fwdti.gtab_2s",
    "dipy.reconst.tests.test_fwdti.gtf",
    "dipy.reconst.tests.test_fwdti.mevals",
    "dipy.reconst.tests.test_fwdti.model_params_mv",
    "dipy.sims.voxel.all_tensor_evecs",
    "dipy.sims.voxel.multi_tensor",
    "numpy.array",
    "numpy.concatenate",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_fwdti.test_fwdti_restore": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "dipy.reconst.fwdti.FreeWaterTensorModel",
    "dipy.reconst.tests.test_fwdti.FAdti",
    "dipy.reconst.tests.test_fwdti.gtab_2s",
    "dipy.reconst.tests.test_fwdti.gtf",
    "dipy.reconst.tests.test_fwdti.mevals",
    "dipy.sims.voxel.multi_tensor",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_fwdti.test_fwdti_singlevoxel": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "dipy.reconst.fwdti.FreeWaterTensorModel",
    "dipy.reconst.tests.test_fwdti.FAdti",
    "dipy.reconst.tests.test_fwdti.MDdti",
    "dipy.reconst.tests.test_fwdti.gtab_2s",
    "dipy.reconst.tests.test_fwdti.gtf",
    "dipy.reconst.tests.test_fwdti.mevals",
    "dipy.sims.voxel.multi_tensor",
    "numpy.array",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_fwdti.test_md_regularization": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "dipy.reconst.fwdti.FreeWaterTensorModel",
    "dipy.reconst.tests.test_fwdti.DWI",
    "dipy.reconst.tests.test_fwdti.FAref",
    "dipy.reconst.tests.test_fwdti.GTF",
    "dipy.reconst.tests.test_fwdti.MDref",
    "dipy.reconst.tests.test_fwdti.gtab_2s",
    "dipy.reconst.tests.test_fwdti.gtf",
    "dipy.reconst.tests.test_fwdti.mevals",
    "dipy.sims.voxel.multi_tensor",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_fwdti.test_negative_s0": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "dipy.reconst.fwdti.FreeWaterTensorModel",
    "dipy.reconst.tests.test_fwdti.DWI",
    "dipy.reconst.tests.test_fwdti.FAref",
    "dipy.reconst.tests.test_fwdti.GTF",
    "dipy.reconst.tests.test_fwdti.MDref",
    "dipy.reconst.tests.test_fwdti.gtab_2s",
    "dipy.reconst.tests.test_fwdti.gtf",
    "dipy.reconst.tests.test_fwdti.mevals",
    "dipy.sims.voxel.multi_tensor",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_fwdti.test_standalone_functions": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "dipy.reconst.dti.fractional_anisotropy",
    "dipy.reconst.fwdti.nls_fit_tensor",
    "dipy.reconst.fwdti.wls_fit_tensor",
    "dipy.reconst.tests.test_fwdti.DWI",
    "dipy.reconst.tests.test_fwdti.FAref",
    "dipy.reconst.tests.test_fwdti.GTF",
    "dipy.reconst.tests.test_fwdti.gtab_2s",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_fwdti.wls_fit_tensor": {
  "data": {
   "shadows": "dipy.reconst.fwdti.wls_fit_tensor"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_gqi": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.reconst.tests.test_gqi.GeneralizedQSamplingModel": {
  "data": {
   "shadows": "dipy.reconst.gqi.GeneralizedQSamplingModel"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_gqi.Sphere": {
  "data": {
   "shadows": "dipy.core.sphere.Sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_gqi.SticksAndBall": {
  "data": {
   "shadows": "dipy.sims.voxel.SticksAndBall"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_gqi.angular_similarity": {
  "data": {
   "shadows": "dipy.core.sphere_stats.angular_similarity"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_gqi.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_gqi.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_gqi.create_unit_sphere": {
  "data": {
   "shadows": "dipy.core.subdivide_octahedron.create_unit_sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_gqi.dsi_voxels": {
  "data": {
   "shadows": "dipy.data.dsi_voxels"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_gqi.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_gqi.get_sphere": {
  "data": {
   "shadows": "dipy.data.get_sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_gqi.gfa": {
  "data": {
   "shadows": "dipy.reconst.odf.gfa"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_gqi.gradient_table": {
  "data": {
   "shadows": "dipy.core.gradients.gradient_table"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_gqi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_gqi.peak_directions": {
  "data": {
   "shadows": "dipy.direction.peaks.peak_directions"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_gqi.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_gqi.sticks_and_ball_dummies": {
  "data": {
   "shadows": "dipy.reconst.tests.test_dsi.sticks_and_ball_dummies"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_gqi.test_gqi": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.core.sphere_stats.angular_similarity",
    "dipy.core.subdivide_octahedron.create_unit_sphere",
    "dipy.data.get_data",
    "dipy.data.get_sphere",
    "dipy.direction.peaks.peak_directions",
    "dipy.reconst.gqi.GeneralizedQSamplingModel",
    "dipy.reconst.odf.gfa",
    "dipy.reconst.tests.test_dsi.sticks_and_ball_dummies",
    "dipy.sims.voxel.SticksAndBall",
    "len",
    "numpy.loadtxt",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_gqi.test_mvoxel_gqi": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "dipy.data.dsi_voxels",
    "dipy.data.get_sphere",
    "dipy.direction.peaks.peak_directions",
    "dipy.reconst.gqi.GeneralizedQSamplingModel",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_interpolate": {
  "data": {},
  "type": "module"
 },
 "dipy.reconst.tests.test_interpolate.NearestNeighborInterpolator": {
  "data": {
   "shadows": "dipy.reconst.interpolate.NearestNeighborInterpolator"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_interpolate.OutsideImage": {
  "data": {
   "shadows": "dipy.reconst.interpolate.OutsideImage"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_interpolate.TriLinearInterpolator": {
  "data": {
   "shadows": "dipy.reconst.interpolate.TriLinearInterpolator"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_interpolate.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_interpolate.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_interpolate.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_interpolate.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_interpolate.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_interpolate.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_interpolate.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_interpolate.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_interpolate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_interpolate.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_interpolate.test_NearestNeighborInterpolator": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "dipy.reconst.interpolate.NearestNeighborInterpolator",
    "dipy.reconst.interpolate.OutsideImage",
    "dipy.utils.six.moves.xrange",
    "int",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.mgrid",
    "numpy.ogrid",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_interpolate.test_TriLinearInterpolator": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "dipy.reconst.interpolate.OutsideImage",
    "dipy.reconst.interpolate.TriLinearInterpolator",
    "dipy.utils.six.moves.xrange",
    "nose.tools.assert_raises",
    "numpy.arange",
    "numpy.array",
    "numpy.mgrid",
    "numpy.ogrid",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_interpolate.xrange": {
  "data": {
   "shadows": "dipy.utils.six.moves.xrange"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_ivim": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.core.gradients.generate_bvecs",
    "dipy.core.gradients.gradient_table",
    "dipy.reconst.ivim.IvimModel",
    "dipy.reconst.tests.test_ivim.N",
    "dipy.reconst.tests.test_ivim.bvals",
    "dipy.reconst.tests.test_ivim.bvals_no_b0",
    "dipy.reconst.tests.test_ivim.bvals_with_multiple_b0",
    "dipy.reconst.tests.test_ivim.bvecs",
    "dipy.reconst.tests.test_ivim.bvecs_with_multiple_b0",
    "dipy.reconst.tests.test_ivim.data_multi",
    "dipy.reconst.tests.test_ivim.data_single",
    "dipy.reconst.tests.test_ivim.gtab",
    "dipy.reconst.tests.test_ivim.ivim_model",
    "dipy.reconst.tests.test_ivim.ivim_model_one_stage",
    "dipy.reconst.tests.test_ivim.ivim_params",
    "dipy.reconst.tests.test_ivim.mevals",
    "dipy.reconst.tests.test_ivim.noisy_multi",
    "dipy.reconst.tests.test_ivim.noisy_single",
    "dipy.reconst.tests.test_ivim.params",
    "dipy.reconst.tests.test_ivim.scipy",
    "dipy.reconst.tests.test_ivim.signal",
    "dipy.sims.voxel.multi_tensor",
    "distutils.version.LooseVersion",
    "len",
    "numpy.array",
    "numpy.testing.run_module_suite",
    "numpy.zeros"
   ]
  },
  "type": "module"
 },
 "dipy.reconst.tests.test_ivim.IvimModel": {
  "data": {
   "shadows": "dipy.reconst.ivim.IvimModel"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_ivim.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_ivim.N": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_ivim.SCIPY_VERSION": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_ivim.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_ivim.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_ivim.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_ivim.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_ivim.assert_warns": {
  "data": {
   "shadows": "numpy.testing.assert_warns"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_ivim.bvals": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_ivim.bvals_no_b0": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_ivim.bvals_with_multiple_b0": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_ivim.bvecs": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_ivim.bvecs_no_b0": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_ivim.bvecs_with_multiple_b0": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_ivim.data_multi": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_ivim.data_single": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_ivim.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_ivim.generate_bvecs": {
  "data": {
   "shadows": "dipy.core.gradients.generate_bvecs"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_ivim.gradient_table": {
  "data": {
   "shadows": "dipy.core.gradients.gradient_table"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_ivim.gtab": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_ivim.gtab_no_b0": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_ivim.gtab_with_multiple_b0": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_ivim.ivim_fit_multi": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_ivim.ivim_fit_multi_one_stage": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_ivim.ivim_fit_single": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_ivim.ivim_fit_single_one_stage": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_ivim.ivim_model": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_ivim.ivim_model_one_stage": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_ivim.ivim_params": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_ivim.ivim_prediction": {
  "data": {
   "shadows": "dipy.reconst.ivim.ivim_prediction"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_ivim.mevals": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_ivim.multi_tensor": {
  "data": {
   "shadows": "dipy.sims.voxel.multi_tensor"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_ivim.noisy_multi": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_ivim.noisy_single": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_ivim.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_ivim.params": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_ivim.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_ivim.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_ivim.signal": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_ivim.single_exponential": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "dipy.reconst.tests.test_ivim.bvals",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_ivim.test_D": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "dipy.reconst.tests.test_ivim.ivim_fit_multi",
    "dipy.reconst.tests.test_ivim.ivim_fit_single",
    "dipy.reconst.tests.test_ivim.ivim_params",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_ivim.test_D_star": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "dipy.reconst.tests.test_ivim.ivim_fit_multi",
    "dipy.reconst.tests.test_ivim.ivim_fit_single",
    "dipy.reconst.tests.test_ivim.ivim_params",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_ivim.test_S0": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "dipy.reconst.tests.test_ivim.ivim_fit_multi",
    "dipy.reconst.tests.test_ivim.ivim_fit_single",
    "dipy.reconst.tests.test_ivim.ivim_params",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_ivim.test_bounds_x0": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "dipy.reconst.ivim.ivim_prediction",
    "dipy.reconst.tests.test_ivim.gtab",
    "dipy.reconst.tests.test_ivim.ivim_model",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_ivim.test_estimate_f_D_star": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "dipy.reconst.tests.test_ivim.data_single",
    "dipy.reconst.tests.test_ivim.ivim_model",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_ivim.test_estimate_linear_fit": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "dipy.reconst.tests.test_ivim.gtab",
    "dipy.reconst.tests.test_ivim.ivim_model",
    "dipy.reconst.tests.test_ivim.single_exponential",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_ivim.test_fit_object": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "dipy.reconst.tests.test_ivim.data_multi",
    "dipy.reconst.tests.test_ivim.ivim_fit_multi",
    "dipy.reconst.tests.test_ivim.ivim_fit_single",
    "dipy.reconst.tests.test_ivim.ivim_model",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_ivim.test_fit_one_stage": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "dipy.reconst.ivim.IvimModel",
    "dipy.reconst.tests.test_ivim.data_single",
    "dipy.reconst.tests.test_ivim.gtab",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_ivim.test_ivim_errors": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "ValueError",
    "dipy.reconst.ivim.IvimModel",
    "dipy.reconst.tests.test_ivim.SCIPY_VERSION",
    "dipy.reconst.tests.test_ivim.data_multi",
    "dipy.reconst.tests.test_ivim.gtab",
    "dipy.reconst.tests.test_ivim.ivim_model",
    "dipy.reconst.tests.test_ivim.ivim_params",
    "distutils.version.LooseVersion",
    "numpy.inf",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_ivim.test_leastsq_error": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "dipy.reconst.tests.test_ivim.data_single",
    "dipy.reconst.tests.test_ivim.ivim_model",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_ivim.test_leastsq_failing": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "dipy.reconst.tests.test_ivim.ivim_model",
    "dipy.reconst.tests.test_ivim.noisy_single",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_ivim.test_mask": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ValueError",
    "dipy.reconst.tests.test_ivim.data_multi",
    "dipy.reconst.tests.test_ivim.gtab",
    "dipy.reconst.tests.test_ivim.ivim_model",
    "dipy.reconst.tests.test_ivim.ivim_params",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_ivim.test_multiple_b0": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "dipy.reconst.ivim.IvimModel",
    "dipy.reconst.tests.test_ivim.data_single",
    "dipy.reconst.tests.test_ivim.gtab_with_multiple_b0",
    "dipy.reconst.tests.test_ivim.mevals",
    "dipy.reconst.tests.test_ivim.signal",
    "dipy.sims.voxel.multi_tensor"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_ivim.test_multivoxel": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "dipy.reconst.tests.test_ivim.data_multi",
    "dipy.reconst.tests.test_ivim.gtab",
    "dipy.reconst.tests.test_ivim.ivim_fit_multi",
    "dipy.reconst.tests.test_ivim.ivim_model",
    "dipy.reconst.tests.test_ivim.ivim_params",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_ivim.test_no_b0": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "ValueError",
    "dipy.reconst.ivim.IvimModel",
    "dipy.reconst.tests.test_ivim.gtab_no_b0",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_ivim.test_noisy_fit": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "dipy.reconst.ivim.IvimModel",
    "dipy.reconst.tests.test_ivim.SCIPY_VERSION",
    "dipy.reconst.tests.test_ivim.gtab",
    "dipy.reconst.tests.test_ivim.noisy_single",
    "distutils.version.LooseVersion",
    "numpy.testing.assert_array_less",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_ivim.test_perfusion_fraction": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "dipy.reconst.tests.test_ivim.ivim_fit_multi",
    "dipy.reconst.tests.test_ivim.ivim_fit_single",
    "dipy.reconst.tests.test_ivim.ivim_params",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_ivim.test_predict": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "dipy.reconst.tests.test_ivim.data_multi",
    "dipy.reconst.tests.test_ivim.data_single",
    "dipy.reconst.tests.test_ivim.gtab",
    "dipy.reconst.tests.test_ivim.ivim_fit_multi",
    "dipy.reconst.tests.test_ivim.ivim_fit_single",
    "dipy.reconst.tests.test_ivim.ivim_model",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_ivim.test_shape": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "dipy.reconst.tests.test_ivim.data_multi",
    "dipy.reconst.tests.test_ivim.ivim_fit_multi",
    "dipy.reconst.tests.test_ivim.ivim_fit_single",
    "dipy.reconst.tests.test_ivim.ivim_model",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_ivim.test_single_voxel_fit": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "dipy.reconst.ivim.ivim_prediction",
    "dipy.reconst.tests.test_ivim.data_single",
    "dipy.reconst.tests.test_ivim.gtab",
    "dipy.reconst.tests.test_ivim.ivim_fit_single",
    "dipy.reconst.tests.test_ivim.params",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_ivim.test_with_higher_S0": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "dipy.reconst.tests.test_ivim.gtab",
    "dipy.reconst.tests.test_ivim.ivim_model",
    "dipy.sims.voxel.multi_tensor",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_mapmri": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.reconst.tests.test_mapmri.MapmriModel": {
  "data": {
   "shadows": "dipy.reconst.mapmri.MapmriModel"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_mapmri.MultiTensor": {
  "data": {
   "shadows": "dipy.sims.voxel.MultiTensor"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_mapmri.add_noise": {
  "data": {
   "shadows": "dipy.sims.voxel.add_noise"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_mapmri.angular_similarity": {
  "data": {
   "shadows": "dipy.core.sphere_stats.angular_similarity"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_mapmri.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_mapmri.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_mapmri.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_mapmri.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_mapmri.create_unit_sphere": {
  "data": {
   "shadows": "dipy.core.subdivide_octahedron.create_unit_sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_mapmri.cylinders_and_ball_soderman": {
  "data": {
   "shadows": "dipy.sims.voxel.cylinders_and_ball_soderman"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_mapmri.dti": {
  "data": {
   "shadows": "dipy.reconst.dti"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_mapmri.factorial": {
  "data": {
   "shadows": "math.factorial"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_mapmri.gamma": {
  "data": {
   "shadows": "scipy.special.gamma"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_mapmri.generate_signal_crossing": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "dipy.sims.voxel.MultiTensor",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_mapmri.get_gtab_taiwan_dsi": {
  "data": {
   "shadows": "dipy.data.get_gtab_taiwan_dsi"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_mapmri.get_sphere": {
  "data": {
   "shadows": "dipy.data.get_sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_mapmri.gfa": {
  "data": {
   "shadows": "dipy.reconst.odf.gfa"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_mapmri.int_func": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "float",
    "math.factorial",
    "numpy.sqrt",
    "scipy.special.gamma"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_mapmri.integrate": {
  "data": {
   "shadows": "scipy.integrate"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_mapmri.mapmri": {
  "data": {
   "shadows": "dipy.reconst.mapmri"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_mapmri.mapmri_index_matrix": {
  "data": {
   "shadows": "dipy.reconst.mapmri.mapmri_index_matrix"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_mapmri.multi_tensor_pdf": {
  "data": {
   "shadows": "dipy.sims.voxel.multi_tensor_pdf"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_mapmri.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_mapmri.peak_directions": {
  "data": {
   "shadows": "dipy.direction.peaks.peak_directions"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_mapmri.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_mapmri.sh_to_sf": {
  "data": {
   "shadows": "dipy.reconst.shm.sh_to_sf"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_mapmri.single_tensor": {
  "data": {
   "shadows": "dipy.sims.voxel.single_tensor"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_mapmri.sticks_and_ball_dummies": {
  "data": {
   "shadows": "dipy.reconst.tests.test_dsi.sticks_and_ball_dummies"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_mapmri.test_estimate_radius_with_rtap": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "dipy.data.get_gtab_taiwan_dsi",
    "dipy.reconst.mapmri.MapmriModel",
    "dipy.sims.voxel.cylinders_and_ball_soderman",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_mapmri.test_laplacian_regularization": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "dipy.data.get_gtab_taiwan_dsi",
    "dipy.reconst.mapmri.MapmriModel",
    "dipy.reconst.mapmri.mapmri_isotropic_laplacian_reg_matrix",
    "dipy.reconst.mapmri.mapmri_laplacian_reg_matrix",
    "dipy.reconst.tests.test_mapmri.generate_signal_crossing",
    "dipy.sims.voxel.add_noise",
    "numpy.dot",
    "numpy.linspace",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_mapmri.test_mapmri_compare_fitted_pdf_with_multi_tensor": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "dipy.data.get_gtab_taiwan_dsi",
    "dipy.reconst.mapmri.MapmriModel",
    "dipy.reconst.mapmri.create_rspace",
    "dipy.reconst.tests.test_mapmri.generate_signal_crossing",
    "dipy.sims.voxel.multi_tensor_pdf",
    "numpy.array",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_mapmri.test_mapmri_initialize_gcv": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "ValueError",
    "dipy.data.get_gtab_taiwan_dsi",
    "dipy.reconst.mapmri.MapmriModel",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_mapmri.test_mapmri_initialize_pos_radius": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ValueError",
    "dipy.data.get_gtab_taiwan_dsi",
    "dipy.reconst.mapmri.MapmriModel",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_mapmri.test_mapmri_initialize_radial_error": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ValueError",
    "dipy.data.get_gtab_taiwan_dsi",
    "dipy.reconst.mapmri.MapmriModel",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_mapmri.test_mapmri_isotropic_design_matrix_separability": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "dipy.data.get_gtab_taiwan_dsi",
    "dipy.reconst.mapmri.mapmri_isotropic_M_mu_dependent",
    "dipy.reconst.mapmri.mapmri_isotropic_M_mu_independent",
    "dipy.reconst.mapmri.mapmri_isotropic_phi_matrix",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_mapmri.test_mapmri_isotropic_static_scale_factor": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "dipy.data.get_gtab_taiwan_dsi",
    "dipy.reconst.mapmri.MapmriModel",
    "dipy.reconst.tests.test_mapmri.time",
    "dipy.sims.voxel.single_tensor",
    "numpy.all",
    "numpy.pi",
    "numpy.r_",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_mapmri.test_mapmri_laplacian_anisotropic": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "dipy.data.get_gtab_taiwan_dsi",
    "dipy.reconst.mapmri.MapmriModel",
    "dipy.reconst.mapmri.mapmri_laplacian_reg_matrix",
    "dipy.sims.voxel.single_tensor",
    "numpy.dot",
    "numpy.pi",
    "numpy.r_",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_mapmri.test_mapmri_laplacian_isotropic": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "dipy.data.get_gtab_taiwan_dsi",
    "dipy.reconst.mapmri.MapmriModel",
    "dipy.reconst.mapmri.mapmri_isotropic_laplacian_reg_matrix",
    "dipy.sims.voxel.single_tensor",
    "numpy.dot",
    "numpy.pi",
    "numpy.r_",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_mapmri.test_mapmri_metrics_anisotropic": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "dipy.data.get_gtab_taiwan_dsi",
    "dipy.reconst.mapmri.MapmriModel",
    "dipy.reconst.tests.test_mapmri.generate_signal_crossing",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_mapmri.test_mapmri_metrics_isotropic": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "dipy.data.get_gtab_taiwan_dsi",
    "dipy.reconst.mapmri.MapmriModel",
    "dipy.sims.voxel.single_tensor",
    "numpy.pi",
    "numpy.r_",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_mapmri.test_mapmri_number_of_coefficients": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "dipy.reconst.mapmri.mapmri_index_matrix",
    "numpy.round",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_mapmri.test_mapmri_odf": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "dipy.core.sphere_stats.angular_similarity",
    "dipy.core.subdivide_octahedron.create_unit_sphere",
    "dipy.data.get_gtab_taiwan_dsi",
    "dipy.data.get_sphere",
    "dipy.direction.peaks.peak_directions",
    "dipy.reconst.mapmri.MapmriModel",
    "dipy.reconst.odf.gfa",
    "dipy.reconst.shm.sh_to_sf",
    "dipy.reconst.tests.test_dsi.sticks_and_ball_dummies",
    "dipy.reconst.tests.test_mapmri.generate_signal_crossing",
    "len",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_mapmri.test_mapmri_pdf_integral_unity": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "dipy.data.get_gtab_taiwan_dsi",
    "dipy.data.get_sphere",
    "dipy.reconst.mapmri.MapmriModel",
    "dipy.reconst.mapmri.create_rspace",
    "dipy.reconst.mapmri.mapmri_index_matrix",
    "dipy.reconst.tests.test_mapmri.generate_signal_crossing",
    "dipy.reconst.tests.test_mapmri.int_func",
    "numpy.pi",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_mapmri.test_mapmri_signal_fitting": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "dipy.data.get_gtab_taiwan_dsi",
    "dipy.reconst.mapmri.MapmriModel",
    "dipy.reconst.mapmri.have_cvxpy",
    "dipy.reconst.tests.test_mapmri.generate_signal_crossing",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_mapmri.test_mapmri_signal_fitting_over_radial_order": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "dipy.data.get_gtab_taiwan_dsi",
    "dipy.reconst.mapmri.MapmriModel",
    "dipy.reconst.tests.test_mapmri.generate_signal_crossing",
    "enumerate",
    "len",
    "numpy.diff",
    "numpy.mean",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_mapmri.test_orthogonality_basis_functions": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "dipy.reconst.mapmri.mapmri_isotropic_radial_signal_basis",
    "dipy.reconst.mapmri.mapmri_phi_1d",
    "numpy.real",
    "numpy.testing.assert_almost_equal",
    "scipy.integrate.quad"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_mapmri.test_positivity_constraint": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "dipy.data.get_gtab_taiwan_dsi",
    "dipy.reconst.mapmri.MapmriModel",
    "dipy.reconst.mapmri.create_rspace",
    "dipy.reconst.mapmri.have_cvxpy",
    "dipy.reconst.tests.test_mapmri.generate_signal_crossing",
    "dipy.sims.voxel.add_noise",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_mapmri.test_signal_fitting_equality_anisotropic_isotropic": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "dipy.data.get_gtab_taiwan_dsi",
    "dipy.reconst.dti.TensorModel",
    "dipy.reconst.mapmri.MapmriModel",
    "dipy.reconst.mapmri.create_rspace",
    "dipy.reconst.mapmri.isotropic_scale_factor",
    "dipy.reconst.mapmri.mapmri_STU_reg_matrices",
    "dipy.reconst.mapmri.mapmri_index_matrix",
    "dipy.reconst.mapmri.mapmri_isotropic_laplacian_reg_matrix",
    "dipy.reconst.mapmri.mapmri_isotropic_phi_matrix",
    "dipy.reconst.mapmri.mapmri_isotropic_psi_matrix",
    "dipy.reconst.mapmri.mapmri_laplacian_reg_matrix",
    "dipy.reconst.mapmri.mapmri_phi_matrix",
    "dipy.reconst.mapmri.mapmri_psi_matrix",
    "dipy.reconst.tests.test_mapmri.generate_signal_crossing",
    "numpy.array",
    "numpy.dot",
    "numpy.linalg.pinv",
    "numpy.ones_like",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_mapmri.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_multi_voxel": {
  "data": {},
  "type": "module"
 },
 "dipy.reconst.tests.test_multi_voxel.CallableArray": {
  "data": {
   "shadows": "dipy.reconst.multi_voxel.CallableArray"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_multi_voxel._squash": {
  "data": {
   "shadows": "dipy.reconst.multi_voxel._squash"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_multi_voxel.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_multi_voxel.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_multi_voxel.multi_voxel_fit": {
  "data": {
   "shadows": "dipy.reconst.multi_voxel.multi_voxel_fit"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_multi_voxel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_multi_voxel.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_multi_voxel.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_multi_voxel.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_multi_voxel.test_CallableArray": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "callarray",
    "dipy.reconst.multi_voxel.CallableArray",
    "numpy.arange",
    "numpy.empty",
    "numpy.testing.assert_array_equal",
    "object",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_multi_voxel.test_multi_voxel_fit": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "SillyFit",
    "SillyModel",
    "dipy.core.sphere.unit_icosahedron",
    "numpy.empty",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "type"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_multi_voxel.test_multi_voxel_fit.SillyFit": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.tests.test_multi_voxel.test_multi_voxel_fit.SillyFit.__init__": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_multi_voxel.test_multi_voxel_fit.SillyFit.directions": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.zeros",
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_multi_voxel.test_multi_voxel_fit.SillyFit.odf": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "len",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_multi_voxel.test_multi_voxel_fit.SillyFit.predict": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_multi_voxel.test_multi_voxel_fit.SillyModel": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.tests.test_multi_voxel.test_multi_voxel_fit.SillyModel.fit": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "SillyFit",
    "dipy.reconst.multi_voxel.multi_voxel_fit"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_multi_voxel.test_multi_voxel_fit.SillyModel.predict": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_multi_voxel.test_squash": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "dipy.reconst.multi_voxel._squash",
    "dt0",
    "float",
    "functools.reduce",
    "numpy.add",
    "numpy.array",
    "numpy.asarray",
    "numpy.bool_",
    "numpy.ndindex",
    "numpy.ones",
    "numpy.sctypes",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "object",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_multi_voxel.unit_icosahedron": {
  "data": {
   "shadows": "dipy.core.sphere.unit_icosahedron"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_odf": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.core.gradients.GradientTable",
    "dipy.core.subdivide_octahedron.create_unit_hemisphere",
    "dipy.reconst.tests.test_odf._sphere",
    "numpy.ones",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.reconst.tests.test_odf.GradientTable": {
  "data": {
   "shadows": "dipy.core.gradients.GradientTable"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_odf.OdfFit": {
  "data": {
   "shadows": "dipy.reconst.odf.OdfFit"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_odf.OdfModel": {
  "data": {
   "shadows": "dipy.reconst.odf.OdfModel"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_odf.SimpleOdfFit": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "dipy.reconst.odf.OdfFit"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.tests.test_odf.SimpleOdfFit.odf": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.ascontiguousarray"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_odf.SimpleOdfModel": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "dipy.reconst.odf.OdfModel",
    "dipy.reconst.tests.test_odf._sphere"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.tests.test_odf.SimpleOdfModel.fit": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "dipy.reconst.tests.test_odf.SimpleOdfFit"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_odf._gtab": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_odf._odf": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_odf._sphere": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "dipy.reconst.tests.test_odf.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_odf.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_odf.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_odf.create_unit_hemisphere": {
  "data": {
   "shadows": "dipy.core.subdivide_octahedron.create_unit_hemisphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_odf.get_sphere": {
  "data": {
   "shadows": "dipy.data.get_sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_odf.gfa": {
  "data": {
   "shadows": "dipy.reconst.odf.gfa"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_odf.gradient_table": {
  "data": {
   "shadows": "dipy.core.gradients.gradient_table"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_odf.minmax_normalize": {
  "data": {
   "shadows": "dipy.reconst.odf.minmax_normalize"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_odf.multi_tensor": {
  "data": {
   "shadows": "dipy.sims.voxel.multi_tensor"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_odf.multi_tensor_odf": {
  "data": {
   "shadows": "dipy.sims.voxel.multi_tensor_odf"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_odf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_odf.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_odf.test_OdfFit": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "dipy.reconst.tests.test_odf.SimpleOdfModel",
    "dipy.reconst.tests.test_odf._gtab",
    "dipy.reconst.tests.test_odf._sphere",
    "len",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_odf.test_gfa": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "dipy.reconst.odf.gfa",
    "numpy.array",
    "numpy.hstack",
    "numpy.isnan",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_odf.test_minmax_normalize": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_sphere",
    "dipy.reconst.odf.minmax_normalize",
    "dipy.sims.voxel.multi_tensor",
    "dipy.sims.voxel.multi_tensor_odf",
    "len",
    "numpy.array",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_peak_finding": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.reconst.tests.test_peak_finding.nose"
   ]
  },
  "type": "module"
 },
 "dipy.reconst.tests.test_peak_finding.HemiSphere": {
  "data": {
   "shadows": "dipy.core.sphere.HemiSphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_peak_finding.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_peak_finding.all_tensor_evecs": {
  "data": {
   "shadows": "dipy.sims.voxel.all_tensor_evecs"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_peak_finding.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_peak_finding.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_peak_finding.get_sphere": {
  "data": {
   "shadows": "dipy.data.get_sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_peak_finding.local_maxima": {
  "data": {
   "shadows": "dipy.reconst.recspeed.local_maxima"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_peak_finding.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_peak_finding.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_peak_finding.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_peak_finding.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_peak_finding.remove_similar_vertices": {
  "data": {
   "shadows": "dipy.reconst.recspeed.remove_similar_vertices"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_peak_finding.search_descending": {
  "data": {
   "shadows": "dipy.reconst.recspeed.search_descending"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_peak_finding.test_local_maxima": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "abs",
    "dipy.core.sphere.HemiSphere",
    "dipy.core.sphere.unique_edges",
    "dipy.data.get_sphere",
    "dipy.reconst.recspeed.local_maxima",
    "len",
    "max",
    "numpy.nan",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_peak_finding.test_remove_similar_peaks": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "dipy.reconst.recspeed.remove_similar_vertices",
    "list",
    "numpy.array",
    "numpy.sqrt",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_peak_finding.test_search_descending": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "dipy.reconst.recspeed.search_descending",
    "numpy.linspace",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_peak_finding.unique_edges": {
  "data": {
   "shadows": "dipy.core.sphere.unique_edges"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_peakdf": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.reconst.tests.test_peakdf.default_sphere": {
  "data": {
   "shadows": "dipy.direction.peaks.default_sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_peakdf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_peakdf.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_peakdf.peaks_from_model": {
  "data": {
   "shadows": "dipy.direction.peaks.peaks_from_model"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_peakdf.test_PeaksAndMetricsDirectionGetter": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "SillyModel",
    "dipy.direction.peaks.default_sphere",
    "dipy.direction.peaks.peaks_from_model",
    "float",
    "get_direction",
    "id",
    "numpy.array",
    "numpy.random.random",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_peakdf.test_PeaksAndMetricsDirectionGetter.SillyFit": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.tests.test_peakdf.test_PeaksAndMetricsDirectionGetter.SillyFit.__init__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_peakdf.test_PeaksAndMetricsDirectionGetter.SillyFit.odf": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "len",
    "numpy.random.randint",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_peakdf.test_PeaksAndMetricsDirectionGetter.SillyModel": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.tests.test_peakdf.test_PeaksAndMetricsDirectionGetter.SillyModel.fit": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "SillyFit"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_peakdf.test_PeaksAndMetricsDirectionGetter.get_direction": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "dir.copy",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_reco_utils": {
  "data": {},
  "type": "module"
 },
 "dipy.reconst.tests.test_reco_utils.adj_to_countarrs": {
  "data": {
   "shadows": "dipy.reconst.recspeed.adj_to_countarrs"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_reco_utils.argmax_from_countarrs": {
  "data": {
   "shadows": "dipy.reconst.recspeed.argmax_from_countarrs"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_reco_utils.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_reco_utils.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_reco_utils.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_reco_utils.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_reco_utils.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_reco_utils.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_reco_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_reco_utils.test_adj_countarrs": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "dipy.reconst.recspeed.adj_to_countarrs",
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_equal",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_reco_utils.test_argmax_from_countarrs": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "dipy.reconst.recspeed.argmax_from_countarrs",
    "numpy.arange",
    "numpy.float",
    "numpy.ones",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_sfm": {
  "data": {},
  "type": "module"
 },
 "dipy.reconst.tests.test_sfm.dpd": {
  "data": {
   "shadows": "dipy.data"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_sfm.grad": {
  "data": {
   "shadows": "dipy.core.gradients"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_sfm.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_sfm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_sfm.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_sfm.opt": {
  "data": {
   "shadows": "dipy.core.optimize"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_sfm.sfm": {
  "data": {
   "shadows": "dipy.reconst.sfm"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_sfm.sims": {
  "data": {
   "shadows": "dipy.sims.voxel"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_sfm.test_design_matrix": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "dipy.data.dsi_voxels",
    "dipy.data.get_sphere",
    "dipy.reconst.sfm.SparseFascicleModel",
    "numpy.sum",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_sfm.test_exponential_iso": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.dsi_deconv_voxels",
    "dipy.data.get_data",
    "dipy.data.get_sphere",
    "dipy.reconst.cross_validation.coeff_of_determination",
    "dipy.reconst.sfm.ExponentialIsotropicModel",
    "dipy.reconst.sfm.SparseFascicleModel",
    "dipy.reconst.sfm.has_sklearn",
    "dipy.sims.voxel.multi_tensor",
    "nibabel.load",
    "numpy.array",
    "numpy.testing.assert_",
    "numpy.testing.dec.skipif",
    "zip"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_sfm.test_predict": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.reconst.cross_validation.coeff_of_determination",
    "dipy.reconst.sfm.SparseFascicleModel",
    "dipy.reconst.sfm.has_sklearn",
    "dipy.sims.voxel.multi_tensor",
    "numpy.array",
    "numpy.load",
    "numpy.testing.assert_",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_sfm.test_sfm": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.data.get_sphere",
    "dipy.reconst.sfm.ExponentialIsotropicModel",
    "dipy.reconst.sfm.SparseFascicleModel",
    "dipy.reconst.sfm.has_sklearn",
    "nibabel.load",
    "numpy.ones",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.dec.skipif",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_sfm.test_sfm_background": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.reconst.sfm.SparseFascicleModel",
    "nibabel.load",
    "numpy.testing.assert_equal",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_sfm.test_sfm_sklearnlinearsolver": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "EvenSillierSolver",
    "SillySolver",
    "ValueError",
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.reconst.sfm.SparseFascicleModel",
    "isinstance",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_sfm.test_sfm_sklearnlinearsolver.EvenSillierSolver": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.tests.test_sfm.test_sfm_sklearnlinearsolver.EvenSillierSolver.fit": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_sfm.test_sfm_sklearnlinearsolver.SillySolver": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "dipy.core.optimize.SKLearnLinearSolver"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.tests.test_sfm.test_sfm_sklearnlinearsolver.SillySolver.fit": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_sfm.test_sfm_stick": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.data.get_sphere",
    "dipy.reconst.cross_validation.coeff_of_determination",
    "dipy.reconst.sfm.SparseFascicleModel",
    "dipy.sims.voxel.multi_tensor",
    "nibabel.load",
    "numpy.array",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_sfm.xval": {
  "data": {
   "shadows": "dipy.reconst.cross_validation"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.reconst.tests.test_shm.nose"
   ]
  },
  "type": "module"
 },
 "dipy.reconst.tests.test_shm.CsaOdfModel": {
  "data": {
   "shadows": "dipy.reconst.shm.CsaOdfModel"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.NearestNeighborInterpolator": {
  "data": {
   "shadows": "dipy.reconst.interpolate.NearestNeighborInterpolator"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.OpdtModel": {
  "data": {
   "shadows": "dipy.reconst.shm.OpdtModel"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.QballModel": {
  "data": {
   "shadows": "dipy.reconst.shm.QballModel"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.ResidualBootstrapWrapper": {
  "data": {
   "shadows": "dipy.reconst.shm.ResidualBootstrapWrapper"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.SphHarmFit": {
  "data": {
   "shadows": "dipy.reconst.shm.SphHarmFit"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.TestCsaOdfModel": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "dipy.reconst.shm.CsaOdfModel",
    "dipy.reconst.tests.test_shm.TestQballModel"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.tests.test_shm.TestOpdtModel": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "dipy.reconst.shm.OpdtModel",
    "dipy.reconst.tests.test_shm.TestQballModel"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.tests.test_shm.TestQballModel": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "dipy.reconst.shm.QballModel",
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.reconst.tests.test_shm.TestQballModel.test_gfa": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "dipy.core.sphere.hemi_icosahedron.subdivide",
    "dipy.reconst.odf.gfa",
    "dipy.reconst.tests.test_shm.make_fake_signal",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_shm.TestQballModel.test_mulit_voxel_fit": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "dipy.core.sphere.hemi_icosahedron",
    "dipy.reconst.odf",
    "dipy.reconst.odf.shape",
    "dipy.reconst.tests.test_shm.make_fake_signal",
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_equal",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_shm.TestQballModel.test_sh_order": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "dipy.reconst.tests.test_shm.make_fake_signal",
    "max",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_shm.TestQballModel.test_single_voxel_fit": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "abs",
    "dipy.core.sphere.hemi_icosahedron.subdivide",
    "dipy.direction.peaks.peak_directions",
    "dipy.reconst.odf",
    "dipy.reconst.odf.shape",
    "dipy.reconst.tests.test_shm.make_fake_signal",
    "len",
    "nose.tools.assert_equal",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_shm.anisotropic_power": {
  "data": {
   "shadows": "dipy.reconst.shm.anisotropic_power"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.bootstrap_data_array": {
  "data": {
   "shadows": "dipy.reconst.shm.bootstrap_data_array"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.bootstrap_data_voxel": {
  "data": {
   "shadows": "dipy.reconst.shm.bootstrap_data_voxel"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.calculate_max_order": {
  "data": {
   "shadows": "dipy.reconst.shm.calculate_max_order"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.gradient_table": {
  "data": {
   "shadows": "dipy.core.gradients.gradient_table"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.hat": {
  "data": {
   "shadows": "dipy.reconst.shm.hat"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.hemi_icosahedron": {
  "data": {
   "shadows": "dipy.core.sphere.hemi_icosahedron"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.lcr_matrix": {
  "data": {
   "shadows": "dipy.reconst.shm.lcr_matrix"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.make_fake_signal": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.core.sphere.hemi_icosahedron.subdivide",
    "dipy.sims.voxel.single_tensor",
    "len",
    "numpy.array",
    "numpy.concatenate",
    "numpy.eye",
    "numpy.vstack",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_shm.mrtrix_spherical_functions": {
  "data": {
   "shadows": "dipy.data.mrtrix_spherical_functions"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.multi_tensor_odf": {
  "data": {
   "shadows": "dipy.sims.voxel.multi_tensor_odf"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.normalize_data": {
  "data": {
   "shadows": "dipy.reconst.shm.normalize_data"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.npl": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.odf": {
  "data": {
   "shadows": "dipy.reconst.odf"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.order_from_ncoef": {
  "data": {
   "shadows": "dipy.reconst.shm.order_from_ncoef"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.peak_directions": {
  "data": {
   "shadows": "dipy.direction.peaks.peak_directions"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.real_sph_harm": {
  "data": {
   "shadows": "dipy.reconst.shm.real_sph_harm"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.real_sym_sh_basis": {
  "data": {
   "shadows": "dipy.reconst.shm.real_sym_sh_basis"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.real_sym_sh_mrtrix": {
  "data": {
   "shadows": "dipy.reconst.shm.real_sym_sh_mrtrix"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.sf_to_sh": {
  "data": {
   "shadows": "dipy.reconst.shm.sf_to_sh"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.sh_to_sf": {
  "data": {
   "shadows": "dipy.reconst.shm.sh_to_sf"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.single_tensor": {
  "data": {
   "shadows": "dipy.sims.voxel.single_tensor"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.smooth_pinv": {
  "data": {
   "shadows": "dipy.reconst.shm.smooth_pinv"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.sph_harm_ind_list": {
  "data": {
   "shadows": "dipy.reconst.shm.sph_harm_ind_list"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.sph_harm_sp": {
  "data": {
   "shadows": "scipy.special.sph_harm"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.spherical_harmonics": {
  "data": {
   "shadows": "dipy.reconst.shm.spherical_harmonics"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shm.test_ResidualBootstrapWrapper": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "bool",
    "dipy.reconst.interpolate.NearestNeighborInterpolator",
    "dipy.reconst.shm.ResidualBootstrapWrapper",
    "dipy.reconst.shm.hat",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.column_stack",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_shm.test_SphHarmFit": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "bool",
    "dipy.reconst.shm.SphHarmFit",
    "nose.tools.assert_equal",
    "numpy.zeros",
    "slice",
    "slice.shape"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_shm.test_anisotropic_power": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "dipy.reconst.shm.anisotropic_power",
    "dipy.reconst.shm.calculate_max_order",
    "dipy.reconst.tests.test_shm.warnings",
    "len",
    "nose.tools.assert_equal",
    "numpy.log",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_shm.test_bootstrap_array": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "dipy.reconst.shm.bootstrap_data_array",
    "dipy.reconst.shm.bootstrap_data_voxel",
    "dipy.reconst.shm.hat",
    "numpy.arange",
    "numpy.array",
    "numpy.dot",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_shm.test_calculate_max_order": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "dipy.reconst.shm.calculate_max_order",
    "nose.tools.assert_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_shm.test_faster_sph_harm": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "dipy.reconst.shm.sph_harm_ind_list",
    "dipy.reconst.shm.spherical_harmonics",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "scipy.special.sph_harm"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_shm.test_hat_and_lcr": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "dipy.core.sphere.hemi_icosahedron.subdivide",
    "dipy.reconst.shm.hat",
    "dipy.reconst.shm.lcr_matrix",
    "dipy.reconst.shm.real_sph_harm",
    "dipy.reconst.shm.sph_harm_ind_list",
    "len",
    "numpy.arange",
    "numpy.dot",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_shm.test_normalize_data": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ValueError",
    "dipy.reconst.shm.normalize_data",
    "nose.tools.assert_raises",
    "numpy.arange",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_shm.test_order_from_ncoeff": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "dipy.reconst.shm.order_from_ncoef",
    "dipy.reconst.shm.sph_harm_ind_list",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_shm.test_real_sph_harm": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "cos",
    "dipy.reconst.shm.real_sph_harm",
    "nose.tools.assert_equal",
    "numpy.cos",
    "numpy.ones",
    "numpy.pi",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal",
    "rsh",
    "sin",
    "sqrt"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_shm.test_real_sym_sh_basis": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "dipy.core.sphere.hemi_icosahedron.subdivide",
    "dipy.reconst.shm.real_sym_sh_basis",
    "dipy.reconst.shm.real_sym_sh_mrtrix",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_shm.test_real_sym_sh_mrtrix": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "dipy.data.mrtrix_spherical_functions",
    "dipy.reconst.shm.real_sym_sh_mrtrix",
    "numpy.dot",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_shm.test_sf_to_sh": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "dipy.core.sphere.hemi_icosahedron.subdivide",
    "dipy.reconst.odf",
    "dipy.reconst.shm.sf_to_sh",
    "dipy.reconst.shm.sh_to_sf",
    "dipy.sims.voxel.multi_tensor_odf",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_shm.test_smooth_pinv": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "dipy.core.sphere.hemi_icosahedron.subdivide",
    "dipy.reconst.shm.real_sph_harm",
    "dipy.reconst.shm.smooth_pinv",
    "dipy.reconst.shm.sph_harm_ind_list",
    "len",
    "numpy.arange",
    "numpy.diag",
    "numpy.dot",
    "numpy.linalg.inv",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_shm.test_sph_harm_ind_list": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "dipy.reconst.shm.sph_harm_ind_list",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.all",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_shm.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_metrics": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.reconst.tests.test_shore_metrics.MultiTensor": {
  "data": {
   "shadows": "dipy.sims.voxel.MultiTensor"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_metrics.ShoreModel": {
  "data": {
   "shadows": "dipy.reconst.shore.ShoreModel"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_metrics.all_tensor_evecs": {
  "data": {
   "shadows": "dipy.sims.voxel.all_tensor_evecs"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_metrics.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_metrics.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_metrics.genlaguerre": {
  "data": {
   "shadows": "scipy.special.genlaguerre"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_metrics.get_gtab_taiwan_dsi": {
  "data": {
   "shadows": "dipy.data.get_gtab_taiwan_dsi"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_metrics.get_sphere": {
  "data": {
   "shadows": "dipy.data.get_sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_metrics.multi_tensor_msd": {
  "data": {
   "shadows": "dipy.sims.voxel.multi_tensor_msd"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_metrics.multi_tensor_odf": {
  "data": {
   "shadows": "dipy.sims.voxel.multi_tensor_odf"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_metrics.multi_tensor_pdf": {
  "data": {
   "shadows": "dipy.sims.voxel.multi_tensor_pdf"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_metrics.multi_tensor_rtop": {
  "data": {
   "shadows": "dipy.sims.voxel.multi_tensor_rtop"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_metrics.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_metrics.shore_indices": {
  "data": {
   "shadows": "dipy.reconst.shore.shore_indices"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_metrics.shore_matrix": {
  "data": {
   "shadows": "dipy.reconst.shore.shore_matrix"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_metrics.shore_order": {
  "data": {
   "shadows": "dipy.reconst.shore.shore_order"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_metrics.single_tensor_odf": {
  "data": {
   "shadows": "dipy.sims.voxel.single_tensor_odf"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_metrics.test_shore_metrics": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "dipy.data.get_gtab_taiwan_dsi",
    "dipy.data.get_sphere",
    "dipy.reconst.shore.ShoreModel",
    "dipy.reconst.shore.shore_indices",
    "dipy.reconst.shore.shore_matrix",
    "dipy.reconst.shore.shore_order",
    "dipy.sims.voxel.MultiTensor",
    "dipy.sims.voxel.multi_tensor_msd",
    "dipy.sims.voxel.multi_tensor_pdf",
    "dipy.sims.voxel.multi_tensor_rtop",
    "int",
    "numpy.array",
    "numpy.dot",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "range",
    "scipy.special.genlaguerre"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_shore_odf": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.reconst.tests.test_shore_odf.ShoreModel": {
  "data": {
   "shadows": "dipy.reconst.shore.ShoreModel"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_odf.SticksAndBall": {
  "data": {
   "shadows": "dipy.sims.voxel.SticksAndBall"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_odf.angular_similarity": {
  "data": {
   "shadows": "dipy.core.sphere_stats.angular_similarity"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_odf.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_odf.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_odf.create_unit_sphere": {
  "data": {
   "shadows": "dipy.core.subdivide_octahedron.create_unit_sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_odf.get_3shell_gtab": {
  "data": {
   "shadows": "dipy.data.get_3shell_gtab"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_odf.get_isbi2013_2shell_gtab": {
  "data": {
   "shadows": "dipy.data.get_isbi2013_2shell_gtab"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_odf.get_sphere": {
  "data": {
   "shadows": "dipy.data.get_sphere"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_odf.gfa": {
  "data": {
   "shadows": "dipy.reconst.odf.gfa"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_odf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_odf.peak_directions": {
  "data": {
   "shadows": "dipy.direction.peaks.peak_directions"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_odf.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_odf.sh_to_sf": {
  "data": {
   "shadows": "dipy.reconst.shm.sh_to_sf"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_odf.sticks_and_ball_dummies": {
  "data": {
   "shadows": "dipy.reconst.tests.test_dsi.sticks_and_ball_dummies"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_shore_odf.test_multivox_shore": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "dipy.data.get_3shell_gtab",
    "dipy.reconst.shore.ShoreModel",
    "numpy.alltrue",
    "numpy.isreal",
    "numpy.random.random",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_shore_odf.test_shore_odf": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "dipy.core.sphere_stats.angular_similarity",
    "dipy.core.subdivide_octahedron.create_unit_sphere",
    "dipy.data.get_isbi2013_2shell_gtab",
    "dipy.data.get_sphere",
    "dipy.direction.peaks.peak_directions",
    "dipy.reconst.odf.gfa",
    "dipy.reconst.shm.sh_to_sf",
    "dipy.reconst.shore.ShoreModel",
    "dipy.reconst.tests.test_dsi.sticks_and_ball_dummies",
    "dipy.sims.voxel.SticksAndBall",
    "len",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_vec_val_vect": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "numpy.einsum",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "module"
 },
 "dipy.reconst.tests.test_vec_val_vect.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_vec_val_vect.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_vec_val_vect.dumb_sum": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.dot",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_vec_val_vect.make_vecs_vals": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_vec_val_vect.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_vec_val_vect.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_vec_val_vect.test_vec_val_vect": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "dipy.reconst.tests.test_vec_val_vect.make_vecs_vals",
    "dipy.reconst.tests.test_vec_val_vect.with_einsum",
    "dipy.reconst.vec_val_sum.vec_val_vect",
    "numpy.einsum",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_vec_val_vect.test_vec_val_vect_dumber": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "dipy.reconst.tests.test_vec_val_vect.dumb_sum",
    "dipy.reconst.tests.test_vec_val_vect.make_vecs_vals",
    "dipy.reconst.vec_val_sum.vec_val_vect",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.tests.test_vec_val_vect.vec_val_vect": {
  "data": {
   "shadows": "dipy.reconst.vec_val_sum.vec_val_vect"
  },
  "type": "import"
 },
 "dipy.reconst.tests.test_vec_val_vect.with_einsum": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "dipy.reconst.utils": {
  "data": {},
  "type": "module"
 },
 "dipy.reconst.utils.dki_design_matrix": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.reconst.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.segment": {
  "data": {},
  "type": "module"
 },
 "dipy.segment.benchmarks": {
  "data": {},
  "type": "module"
 },
 "dipy.segment.benchmarks.bench_quickbundles": {
  "data": {},
  "type": "module"
 },
 "dipy.segment.benchmarks.bench_quickbundles.MDFpy": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "dipy.segment.metric.Metric"
   ]
  },
  "type": "class"
 },
 "dipy.segment.benchmarks.bench_quickbundles.MDFpy.are_compatible": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "dipy.segment.benchmarks.bench_quickbundles.MDFpy.dist": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "len",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "dipy.segment.benchmarks.bench_quickbundles.Metric": {
  "data": {
   "shadows": "dipy.segment.metric.Metric"
  },
  "type": "import"
 },
 "dipy.segment.benchmarks.bench_quickbundles.QB_New": {
  "data": {
   "shadows": "dipy.segment.clustering.QuickBundles"
  },
  "type": "import"
 },
 "dipy.segment.benchmarks.bench_quickbundles.QB_Old": {
  "data": {
   "shadows": "dipy.segment.quickbundles.QuickBundles"
  },
  "type": "import"
 },
 "dipy.segment.benchmarks.bench_quickbundles.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.segment.benchmarks.bench_quickbundles.assert_arrays_equal": {
  "data": {
   "shadows": "dipy.testing.assert_arrays_equal"
  },
  "type": "import"
 },
 "dipy.segment.benchmarks.bench_quickbundles.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "dipy.segment.benchmarks.bench_quickbundles.bench_quickbundles": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "dipy.data.get_data",
    "dipy.segment.benchmarks.bench_quickbundles.MDFpy",
    "dipy.segment.clustering.QuickBundles",
    "dipy.segment.quickbundles.QuickBundles",
    "dipy.testing.assert_arrays_equal",
    "dipy.tracking.streamline.set_number_of_points",
    "len",
    "list",
    "map",
    "nibabel.trackvis.read",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.testing.measure",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.segment.benchmarks.bench_quickbundles.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.segment.benchmarks.bench_quickbundles.measure": {
  "data": {
   "shadows": "numpy.testing.measure"
  },
  "type": "import"
 },
 "dipy.segment.benchmarks.bench_quickbundles.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.segment.benchmarks.bench_quickbundles.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.segment.benchmarks.bench_quickbundles.streamline_utils": {
  "data": {
   "shadows": "dipy.tracking.streamline"
  },
  "type": "import"
 },
 "dipy.segment.bundles": {
  "data": {},
  "type": "module"
 },
 "dipy.segment.bundles.BundleMinDistanceAsymmetricMetric": {
  "data": {
   "shadows": "dipy.align.streamlinear.BundleMinDistanceAsymmetricMetric"
  },
  "type": "import"
 },
 "dipy.segment.bundles.BundleMinDistanceMetric": {
  "data": {
   "shadows": "dipy.align.streamlinear.BundleMinDistanceMetric"
  },
  "type": "import"
 },
 "dipy.segment.bundles.BundleSumDistanceMatrixMetric": {
  "data": {
   "shadows": "dipy.align.streamlinear.BundleSumDistanceMatrixMetric"
  },
  "type": "import"
 },
 "dipy.segment.bundles.RecoBundles": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.segment.bundles.RecoBundles.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "len",
    "print",
    "time.time"
   ]
  },
  "type": "function"
 },
 "dipy.segment.bundles.RecoBundles._cluster_model_bundle": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "dipy.segment.clustering.qbx_and_merge",
    "len",
    "print",
    "time.time"
   ]
  },
  "type": "function"
 },
 "dipy.segment.bundles.RecoBundles._cluster_streamlines": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "dipy.segment.clustering.qbx_and_merge",
    "dipy.tracking.streamline.nbytes",
    "len",
    "numpy.random.RandomState",
    "print",
    "time.time"
   ]
  },
  "type": "function"
 },
 "dipy.segment.bundles.RecoBundles._prune_what_not_in_model": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "ValueError",
    "dipy.segment.clustering.qbx_and_merge",
    "dipy.tracking.distances.bundles_distances_mam",
    "dipy.tracking.distances.bundles_distances_mdf",
    "dipy.tracking.streamline.Streamlines",
    "itertools.chain",
    "len",
    "list",
    "numpy.inf",
    "numpy.isnan",
    "numpy.min",
    "numpy.where",
    "print",
    "time.time"
   ]
  },
  "type": "function"
 },
 "dipy.segment.bundles.RecoBundles._reduce_search_space": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "ValueError",
    "dipy.tracking.distances.bundles_distances_mdf",
    "dipy.tracking.streamline.Streamlines",
    "itertools.chain",
    "len",
    "list",
    "numpy.inf",
    "numpy.min",
    "numpy.where",
    "print",
    "time.time"
   ]
  },
  "type": "function"
 },
 "dipy.segment.bundles.RecoBundles._register_neighb_to_model": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "dipy.align.streamlinear.BundleMinDistanceAsymmetricMetric",
    "dipy.align.streamlinear.BundleMinDistanceMetric",
    "dipy.align.streamlinear.BundleSumDistanceMatrixMetric",
    "dipy.align.streamlinear.StreamlineLinearRegistration",
    "dipy.tracking.streamline.select_random_set_of_streamlines",
    "dipy.tracking.streamline.set_number_of_points",
    "nibabel.affines.apply_affine",
    "numpy.get_printoptions",
    "numpy.set_printoptions",
    "numpy.sqrt",
    "print",
    "time.time"
   ]
  },
  "type": "function"
 },
 "dipy.segment.bundles.RecoBundles.recognize": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "dipy.tracking.streamline.Streamlines",
    "len",
    "print",
    "time.time"
   ]
  },
  "type": "function"
 },
 "dipy.segment.bundles.StreamlineLinearRegistration": {
  "data": {
   "shadows": "dipy.align.streamlinear.StreamlineLinearRegistration"
  },
  "type": "import"
 },
 "dipy.segment.bundles.Streamlines": {
  "data": {
   "shadows": "dipy.tracking.streamline.Streamlines"
  },
  "type": "import"
 },
 "dipy.segment.bundles.apply_affine": {
  "data": {
   "shadows": "nibabel.affines.apply_affine"
  },
  "type": "import"
 },
 "dipy.segment.bundles.bundles_distances_mam": {
  "data": {
   "shadows": "dipy.tracking.distances.bundles_distances_mam"
  },
  "type": "import"
 },
 "dipy.segment.bundles.bundles_distances_mdf": {
  "data": {
   "shadows": "dipy.tracking.distances.bundles_distances_mdf"
  },
  "type": "import"
 },
 "dipy.segment.bundles.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "dipy.segment.bundles.nbytes": {
  "data": {
   "shadows": "dipy.tracking.streamline.nbytes"
  },
  "type": "import"
 },
 "dipy.segment.bundles.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.segment.bundles.qbx_and_merge": {
  "data": {
   "shadows": "dipy.segment.clustering.qbx_and_merge"
  },
  "type": "import"
 },
 "dipy.segment.bundles.select_random_set_of_streamlines": {
  "data": {
   "shadows": "dipy.tracking.streamline.select_random_set_of_streamlines"
  },
  "type": "import"
 },
 "dipy.segment.bundles.set_number_of_points": {
  "data": {
   "shadows": "dipy.tracking.streamline.set_number_of_points"
  },
  "type": "import"
 },
 "dipy.segment.bundles.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "dipy.segment.clustering": {
  "data": {},
  "type": "module"
 },
 "dipy.segment.clustering.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "dipy.segment.clustering.AveragePointwiseEuclideanMetric": {
  "data": {
   "shadows": "dipy.segment.metric.AveragePointwiseEuclideanMetric"
  },
  "type": "import"
 },
 "dipy.segment.clustering.Cluster": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.segment.clustering.Cluster.__cmp__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.Cluster.__eq__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "dipy.segment.clustering.Cluster",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.Cluster.__getitem__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "isinstance",
    "list",
    "numpy.integer",
    "slice",
    "type"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.Cluster.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "dipy.segment.clustering.Identity",
    "id"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.Cluster.__iter__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.Cluster.__len__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.Cluster.__ne__": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "dipy.segment.clustering.Cluster.__repr__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.Cluster.__str__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.Cluster.assign": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "dipy.segment.clustering.ClusterCentroid": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "dipy.segment.clustering.Cluster"
   ]
  },
  "type": "class"
 },
 "dipy.segment.clustering.ClusterCentroid.__eq__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "dipy.segment.clustering.ClusterCentroid",
    "isinstance",
    "numpy.all",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.ClusterCentroid.__init__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "dipy.segment.clustering.ClusterCentroid",
    "dipy.segment.clustering.Identity",
    "id",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.ClusterCentroid.assign": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "dipy.segment.clustering.ClusterCentroid",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.ClusterCentroid.update": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "numpy.equal"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.ClusterMap": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.segment.clustering.ClusterMap.__eq__": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "dipy.segment.clustering.operator"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.ClusterMap.__ge__": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "dipy.segment.clustering.operator"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.ClusterMap.__getitem__": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "list",
    "numpy.bool",
    "numpy.ndarray",
    "range",
    "slice",
    "type"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.ClusterMap.__gt__": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "dipy.segment.clustering.operator"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.ClusterMap.__init__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "dipy.segment.clustering.Identity"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.ClusterMap.__iter__": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.ClusterMap.__le__": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "dipy.segment.clustering.operator"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.ClusterMap.__len__": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.ClusterMap.__lt__": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "dipy.segment.clustering.operator"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.ClusterMap.__ne__": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "dipy.segment.clustering.operator"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.ClusterMap.__repr__": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.ClusterMap.__str__": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.ClusterMap._richcmp": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "NotImplementedError",
    "dipy.segment.clustering.ClusterMap",
    "dipy.segment.clustering.operator",
    "int",
    "isinstance",
    "len",
    "numpy.array",
    "op"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.ClusterMap.add_cluster": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "dipy.segment.clustering.ClusterMap.clear": {
  "data": {
   "lineno": 323
  },
  "type": "function"
 },
 "dipy.segment.clustering.ClusterMap.clusters": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.ClusterMap.clusters_sizes": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "len",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.ClusterMap.get_large_clusters": {
  "data": {
   "lineno": 341
  },
  "type": "function"
 },
 "dipy.segment.clustering.ClusterMap.get_small_clusters": {
  "data": {
   "lineno": 356
  },
  "type": "function"
 },
 "dipy.segment.clustering.ClusterMap.refdata": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "dipy.segment.clustering.Identity"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.ClusterMap.remove_cluster": {
  "data": {
   "lineno": 312
  },
  "type": "function"
 },
 "dipy.segment.clustering.ClusterMap.size": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.ClusterMapCentroid": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "dipy.segment.clustering.ClusterMap"
   ]
  },
  "type": "class"
 },
 "dipy.segment.clustering.ClusterMapCentroid.centroids": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.Clustering": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.segment.clustering.Clustering.cluster": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.Identity": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "dipy.segment.clustering.Identity.__getitem__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "dipy.segment.clustering.Metric": {
  "data": {
   "shadows": "dipy.segment.metric.Metric"
  },
  "type": "import"
 },
 "dipy.segment.clustering.MinimumAverageDirectFlipMetric": {
  "data": {
   "shadows": "dipy.segment.metric.MinimumAverageDirectFlipMetric"
  },
  "type": "import"
 },
 "dipy.segment.clustering.QuickBundles": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "dipy.segment.clustering.Clustering"
   ]
  },
  "type": "class"
 },
 "dipy.segment.clustering.QuickBundles.__init__": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "ValueError",
    "dipy.segment.metric.AveragePointwiseEuclideanMetric",
    "dipy.segment.metric.Metric",
    "dipy.segment.metric.MinimumAverageDirectFlipMetric",
    "dipy.segment.metric.ResampleFeature",
    "isinstance",
    "numpy.iinfo"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.QuickBundles.cluster": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "dipy.segment.clustering_algorithms.quickbundles"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.QuickBundlesX": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "dipy.segment.clustering.Clustering"
   ]
  },
  "type": "class"
 },
 "dipy.segment.clustering.QuickBundlesX.__init__": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "ValueError",
    "dipy.segment.metric.AveragePointwiseEuclideanMetric",
    "dipy.segment.metric.Metric",
    "dipy.segment.metric.MinimumAverageDirectFlipMetric",
    "dipy.segment.metric.ResampleFeature",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.QuickBundlesX.cluster": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "dipy.segment.clustering_algorithms.quickbundlesx"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.ResampleFeature": {
  "data": {
   "shadows": "dipy.segment.metric.ResampleFeature"
  },
  "type": "import"
 },
 "dipy.segment.clustering.TreeCluster": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "dipy.segment.clustering.ClusterCentroid"
   ]
  },
  "type": "class"
 },
 "dipy.segment.clustering.TreeCluster.__init__": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "dipy.segment.clustering.TreeCluster",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.TreeCluster.add": {
  "data": {
   "lineno": 591
  },
  "type": "function"
 },
 "dipy.segment.clustering.TreeCluster.is_leaf": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.TreeClusterMap": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "dipy.segment.clustering.ClusterMap"
   ]
  },
  "type": "class"
 },
 "dipy.segment.clustering.TreeClusterMap.__init__": {
  "data": {
   "lineno": 601
  },
  "type": "function"
 },
 "dipy.segment.clustering.TreeClusterMap.__init__._retrieves_leaves": {
  "data": {
   "lineno": 605
  },
  "type": "function"
 },
 "dipy.segment.clustering.TreeClusterMap.__iter__": {
  "data": {
   "lineno": 646
  },
  "type": "function"
 },
 "dipy.segment.clustering.TreeClusterMap.get_clusters": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "_traverse",
    "dipy.segment.clustering.ClusterMapCentroid"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.TreeClusterMap.get_clusters._traverse": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "_traverse"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.TreeClusterMap.iter_preorder": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.TreeClusterMap.refdata": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "dipy.segment.clustering.Identity"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.TreeClusterMap.refdata._set_refdata": {
  "data": {
   "lineno": 622
  },
  "type": "function"
 },
 "dipy.segment.clustering.TreeClusterMap.traverse_postorder": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "visit"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "dipy.segment.clustering.nbytes": {
  "data": {
   "shadows": "dipy.tracking.streamline.nbytes"
  },
  "type": "import"
 },
 "dipy.segment.clustering.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.segment.clustering.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "dipy.segment.clustering.qbx_and_merge": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "dipy.segment.clustering.ClusterCentroid",
    "dipy.segment.clustering.ClusterMapCentroid",
    "dipy.segment.clustering.QuickBundlesX",
    "dipy.segment.metric.AveragePointwiseEuclideanMetric",
    "dipy.tracking.streamline.nbytes",
    "dipy.tracking.streamline.set_number_of_points",
    "len",
    "min",
    "numpy.random.RandomState",
    "print",
    "time.time"
   ]
  },
  "type": "function"
 },
 "dipy.segment.clustering.quickbundles": {
  "data": {
   "shadows": "dipy.segment.clustering_algorithms.quickbundles"
  },
  "type": "import"
 },
 "dipy.segment.clustering.quickbundlesx": {
  "data": {
   "shadows": "dipy.segment.clustering_algorithms.quickbundlesx"
  },
  "type": "import"
 },
 "dipy.segment.clustering.set_number_of_points": {
  "data": {
   "shadows": "dipy.tracking.streamline.set_number_of_points"
  },
  "type": "import"
 },
 "dipy.segment.clustering.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "dipy.segment.mask": {
  "data": {
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "module"
 },
 "dipy.segment.mask.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.segment.mask.applymask": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "dipy.segment.mask.binary_dilation": {
  "data": {
   "shadows": "scipy.ndimage.binary_dilation"
  },
  "type": "import"
 },
 "dipy.segment.mask.bounding_box": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "len",
    "range",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "dipy.segment.mask.clean_cc_mask": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.max",
    "numpy.where",
    "numpy.zeros",
    "scipy.ndimage.measurements.label"
   ]
  },
  "type": "function"
 },
 "dipy.segment.mask.color_fa": {
  "data": {
   "shadows": "dipy.reconst.dti.color_fa"
  },
  "type": "import"
 },
 "dipy.segment.mask.crop": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "dipy.segment.mask.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.segment.mask.fractional_anisotropy": {
  "data": {
   "shadows": "dipy.reconst.dti.fractional_anisotropy"
  },
  "type": "import"
 },
 "dipy.segment.mask.generate_binary_structure": {
  "data": {
   "shadows": "scipy.ndimage.generate_binary_structure"
  },
  "type": "import"
 },
 "dipy.segment.mask.label": {
  "data": {
   "shadows": "scipy.ndimage.measurements.label"
  },
  "type": "import"
 },
 "dipy.segment.mask.median_filter": {
  "data": {
   "shadows": "scipy.ndimage.filters.median_filter"
  },
  "type": "import"
 },
 "dipy.segment.mask.median_otsu": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "dipy.segment.mask.applymask",
    "dipy.segment.mask.bounding_box",
    "dipy.segment.mask.crop",
    "dipy.segment.mask.multi_median",
    "dipy.segment.threshold.otsu",
    "len",
    "numpy.mean",
    "scipy.ndimage.binary_dilation",
    "scipy.ndimage.generate_binary_structure",
    "tuple"
   ]
  },
  "type": "function"
 },
 "dipy.segment.mask.multi_median": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "input",
    "input.shape",
    "numpy.ones_like",
    "range",
    "scipy.ndimage.filters.median_filter"
   ]
  },
  "type": "function"
 },
 "dipy.segment.mask.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.segment.mask.otsu": {
  "data": {
   "shadows": "dipy.segment.threshold.otsu"
  },
  "type": "import"
 },
 "dipy.segment.mask.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.segment.mask.segment_from_cfa": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "bool",
    "dipy.reconst.dti.color_fa",
    "dipy.reconst.dti.fractional_anisotropy",
    "numpy.all",
    "numpy.asarray",
    "numpy.clip",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "dipy.segment.mask.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "dipy.segment.metric": {
  "data": {
   "symbols_in_volume": [
    "dipy.segment.metricspeed.SumPointwiseEuclideanMetric"
   ]
  },
  "type": "module"
 },
 "dipy.segment.metric.ArcLengthFeature": {
  "data": {
   "shadows": "dipy.segment.featurespeed.ArcLengthFeature"
  },
  "type": "import"
 },
 "dipy.segment.metric.AveragePointwiseEuclideanMetric": {
  "data": {
   "shadows": "dipy.segment.metricspeed.AveragePointwiseEuclideanMetric"
  },
  "type": "import"
 },
 "dipy.segment.metric.CenterOfMassFeature": {
  "data": {
   "shadows": "dipy.segment.featurespeed.CenterOfMassFeature"
  },
  "type": "import"
 },
 "dipy.segment.metric.CosineMetric": {
  "data": {
   "shadows": "dipy.segment.metricspeed.CosineMetric"
  },
  "type": "import"
 },
 "dipy.segment.metric.EuclideanMetric": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "dipy.segment.metric.Feature": {
  "data": {
   "shadows": "dipy.segment.featurespeed.Feature"
  },
  "type": "import"
 },
 "dipy.segment.metric.IdentityFeature": {
  "data": {
   "shadows": "dipy.segment.featurespeed.IdentityFeature"
  },
  "type": "import"
 },
 "dipy.segment.metric.Metric": {
  "data": {
   "shadows": "dipy.segment.metricspeed.Metric"
  },
  "type": "import"
 },
 "dipy.segment.metric.MidpointFeature": {
  "data": {
   "shadows": "dipy.segment.featurespeed.MidpointFeature"
  },
  "type": "import"
 },
 "dipy.segment.metric.MinimumAverageDirectFlipMetric": {
  "data": {
   "shadows": "dipy.segment.metricspeed.MinimumAverageDirectFlipMetric"
  },
  "type": "import"
 },
 "dipy.segment.metric.ResampleFeature": {
  "data": {
   "shadows": "dipy.segment.featurespeed.ResampleFeature"
  },
  "type": "import"
 },
 "dipy.segment.metric.SumPointwiseEuclideanMetric": {
  "data": {
   "shadows": "dipy.segment.metricspeed.SumPointwiseEuclideanMetric"
  },
  "type": "import"
 },
 "dipy.segment.metric.VectorOfEndpointsFeature": {
  "data": {
   "shadows": "dipy.segment.featurespeed.VectorOfEndpointsFeature"
  },
  "type": "import"
 },
 "dipy.segment.metric.dist": {
  "data": {
   "shadows": "dipy.segment.metricspeed.dist"
  },
  "type": "import"
 },
 "dipy.segment.metric.distance_matrix": {
  "data": {
   "shadows": "dipy.segment.metricspeed.distance_matrix"
  },
  "type": "import"
 },
 "dipy.segment.metric.mdf": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "dipy.segment.metricspeed.MinimumAverageDirectFlipMetric",
    "dipy.segment.metricspeed.dist"
   ]
  },
  "type": "function"
 },
 "dipy.segment.quickbundles": {
  "data": {
   "symbols_in_volume": [
    "DeprecationWarning",
    "dipy.segment.quickbundles.deprecation_msg",
    "warnings.warn"
   ]
  },
  "type": "module"
 },
 "dipy.segment.quickbundles.QuickBundles": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.segment.quickbundles.QuickBundles.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "DeprecationWarning",
    "dipy.segment.quickbundles.deprecation_msg",
    "dipy.tracking.distances.local_skeleton_clustering",
    "dipy.tracking.metrics.downsample",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "dipy.segment.quickbundles.QuickBundles.centroids": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.segment.quickbundles.QuickBundles.clusters": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "dipy.segment.quickbundles.QuickBundles.clusters_sizes": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "dipy.segment.quickbundles.QuickBundles.downsampled_tracks": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "dipy.segment.quickbundles.QuickBundles.exemplars": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "dipy.tracking.distances.bundles_distances_mdf",
    "float",
    "numpy.argmin"
   ]
  },
  "type": "function"
 },
 "dipy.segment.quickbundles.QuickBundles.label2cluster": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "dipy.segment.quickbundles.QuickBundles.label2tracks": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "dipy.segment.quickbundles.QuickBundles.label2tracksids": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "dipy.segment.quickbundles.QuickBundles.partitions": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "dipy.segment.quickbundles.QuickBundles.points_per_track": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.segment.quickbundles.QuickBundles.remove_cluster": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.segment.quickbundles.QuickBundles.remove_clusters": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.segment.quickbundles.QuickBundles.remove_small_clusters": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.segment.quickbundles.QuickBundles.remove_tracks": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.segment.quickbundles.QuickBundles.total_clusters": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.segment.quickbundles.QuickBundles.virtuals": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "dipy.segment.quickbundles.bundles_distances_mdf": {
  "data": {
   "shadows": "dipy.tracking.distances.bundles_distances_mdf"
  },
  "type": "import"
 },
 "dipy.segment.quickbundles.deprecation_msg": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "dipy.segment.quickbundles.downsample": {
  "data": {
   "shadows": "dipy.tracking.metrics.downsample"
  },
  "type": "import"
 },
 "dipy.segment.quickbundles.local_skeleton_clustering": {
  "data": {
   "shadows": "dipy.tracking.distances.local_skeleton_clustering"
  },
  "type": "import"
 },
 "dipy.segment.quickbundles.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.segment.quickbundles.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "dipy.segment.tests": {
  "data": {},
  "type": "module"
 },
 "dipy.segment.tests.test_adjustment": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.segment.tests.test_adjustment.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_adjustment.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_adjustment.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_adjustment.test_adjustment": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "dipy.segment.threshold.upper_bound_by_percent",
    "dipy.segment.threshold.upper_bound_by_rate",
    "numpy.interp",
    "numpy.testing.assert_equal",
    "numpy.unique",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_adjustment.upper_bound_by_percent": {
  "data": {
   "shadows": "dipy.segment.threshold.upper_bound_by_percent"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_adjustment.upper_bound_by_rate": {
  "data": {
   "shadows": "dipy.segment.threshold.upper_bound_by_rate"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_adjustment.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_clustering": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.segment.tests.test_clustering.dtype",
    "dipy.segment.tests.test_clustering.features_shape",
    "numpy.arange",
    "numpy.ones",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.segment.tests.test_clustering.Cluster": {
  "data": {
   "shadows": "dipy.segment.clustering.Cluster"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_clustering.ClusterCentroid": {
  "data": {
   "shadows": "dipy.segment.clustering.ClusterCentroid"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_clustering.ClusterMap": {
  "data": {
   "shadows": "dipy.segment.clustering.ClusterMap"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_clustering.ClusterMapCentroid": {
  "data": {
   "shadows": "dipy.segment.clustering.ClusterMapCentroid"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_clustering.Clustering": {
  "data": {
   "shadows": "dipy.segment.clustering.Clustering"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_clustering.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_clustering.assert_arrays_equal": {
  "data": {
   "shadows": "dipy.testing.assert_arrays_equal"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_clustering.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_clustering.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_clustering.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_clustering.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_clustering.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_clustering.data": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_clustering.dtype": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_clustering.expected_clusters": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_clustering.features": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_clustering.features_shape": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_clustering.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_clustering.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_clustering.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_clustering.test_cluster_assign": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "dipy.segment.clustering.Cluster",
    "len",
    "list",
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_equal",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_clustering.test_cluster_attributes_and_constructor": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "TypeError",
    "dipy.segment.clustering.Cluster",
    "len",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "type"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_clustering.test_cluster_centroid_assign": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "dipy.segment.clustering.ClusterCentroid",
    "dipy.segment.tests.test_clustering.dtype",
    "dipy.segment.tests.test_clustering.features",
    "dipy.segment.tests.test_clustering.features_shape",
    "len",
    "list",
    "nose.tools.assert_equal",
    "numpy.ndarray",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_clustering.test_cluster_centroid_attributes_and_constructor": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "TypeError",
    "dipy.segment.clustering.ClusterCentroid",
    "dipy.segment.tests.test_clustering.features_shape",
    "len",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros",
    "type"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_clustering.test_cluster_centroid_getitem": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "IndexError",
    "dipy.segment.clustering.ClusterCentroid",
    "dipy.segment.tests.test_clustering.data",
    "dipy.segment.tests.test_clustering.features",
    "dipy.segment.tests.test_clustering.features_shape",
    "dipy.testing.assert_arrays_equal",
    "len",
    "list",
    "nose.tools.assert_equal",
    "numpy.random.shuffle",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_clustering.test_cluster_centroid_iter": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "dipy.segment.clustering.ClusterCentroid",
    "dipy.segment.tests.test_clustering.data",
    "dipy.segment.tests.test_clustering.features",
    "dipy.segment.tests.test_clustering.features_shape",
    "dipy.testing.assert_arrays_equal",
    "len",
    "list",
    "numpy.random.shuffle",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_clustering.test_cluster_getitem": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "dipy.segment.clustering.Cluster",
    "dipy.segment.tests.test_clustering.data",
    "dipy.testing.assert_arrays_equal",
    "len",
    "list",
    "nose.tools.assert_equal",
    "numpy.random.shuffle",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_clustering.test_cluster_iter": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "dipy.segment.clustering.Cluster",
    "dipy.segment.tests.test_clustering.data",
    "dipy.testing.assert_arrays_equal",
    "len",
    "list",
    "numpy.random.shuffle",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_clustering.test_cluster_map_add_cluster": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "dipy.segment.clustering.Cluster",
    "dipy.segment.clustering.ClusterMap",
    "dipy.segment.tests.test_clustering.itertools",
    "len",
    "list",
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_equal",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_clustering.test_cluster_map_attributes_and_constructor": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "AttributeError",
    "IndexError",
    "dipy.segment.clustering.ClusterMap",
    "len",
    "list",
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "setattr"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_clustering.test_cluster_map_centroid_add_cluster": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "ValueError",
    "dipy.segment.clustering.ClusterCentroid",
    "dipy.segment.clustering.ClusterMapCentroid",
    "dipy.segment.tests.test_clustering.dtype",
    "dipy.segment.tests.test_clustering.features",
    "dipy.segment.tests.test_clustering.features_shape",
    "dipy.segment.tests.test_clustering.itertools",
    "list",
    "nose.tools.assert_equal",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros_like",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_clustering.test_cluster_map_centroid_attributes_and_constructor": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "AttributeError",
    "dipy.segment.clustering.ClusterMapCentroid",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "setattr"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_clustering.test_cluster_map_centroid_comparison_with_int": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "dipy.segment.clustering.ClusterCentroid",
    "dipy.segment.clustering.ClusterMapCentroid",
    "dipy.segment.tests.test_clustering.features",
    "list",
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_clustering.test_cluster_map_centroid_getitem": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "IndexError",
    "dipy.segment.clustering.ClusterCentroid",
    "dipy.segment.clustering.ClusterMapCentroid",
    "dipy.segment.tests.test_clustering.data",
    "dipy.segment.tests.test_clustering.features",
    "dipy.testing.assert_arrays_equal",
    "len",
    "list",
    "nose.tools.assert_equal",
    "numpy.random.shuffle",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_clustering.test_cluster_map_centroid_iter": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "all",
    "dipy.segment.clustering.ClusterCentroid",
    "dipy.segment.clustering.ClusterMapCentroid",
    "dipy.segment.tests.test_clustering.data",
    "dipy.segment.tests.test_clustering.features",
    "dipy.testing.assert_arrays_equal",
    "len",
    "nose.tools.assert_true",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal",
    "numpy.zeros_like",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_clustering.test_cluster_map_centroid_remove_cluster": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "dipy.segment.clustering.ClusterCentroid",
    "dipy.segment.clustering.ClusterMapCentroid",
    "dipy.segment.tests.test_clustering.dtype",
    "dipy.segment.tests.test_clustering.features_shape",
    "dipy.segment.tests.test_clustering.itertools",
    "len",
    "list",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.random.rand",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_clustering.test_cluster_map_clear": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "dipy.segment.clustering.Cluster",
    "dipy.segment.clustering.ClusterMap",
    "dipy.segment.tests.test_clustering.itertools",
    "len",
    "list",
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_clustering.test_cluster_map_clusters_sizes": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "dipy.segment.clustering.Cluster",
    "dipy.segment.clustering.ClusterMap",
    "len",
    "list",
    "map",
    "nose.tools.assert_equal",
    "numpy.random.RandomState",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_clustering.test_cluster_map_comparison_with_int": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "dipy.segment.clustering.Cluster",
    "dipy.segment.clustering.ClusterMap",
    "list",
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_clustering.test_cluster_map_comparison_with_object": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "NotImplementedError",
    "dipy.segment.clustering.Cluster",
    "dipy.segment.clustering.ClusterMap",
    "dipy.segment.tests.test_clustering.copy",
    "float",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "numpy.testing.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_clustering.test_cluster_map_get_small_and_large_clusters": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "dipy.segment.clustering.Cluster",
    "dipy.segment.clustering.ClusterMap",
    "dipy.testing.assert_arrays_equal",
    "len",
    "nose.tools.assert_equal",
    "numpy.random.RandomState",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_clustering.test_cluster_map_getitem": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "IndexError",
    "dipy.segment.clustering.Cluster",
    "dipy.segment.clustering.ClusterMap",
    "dipy.testing.assert_arrays_equal",
    "len",
    "list",
    "nose.tools.assert_equal",
    "numpy.random.shuffle",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_clustering.test_cluster_map_iter": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "all",
    "dipy.segment.clustering.Cluster",
    "dipy.segment.clustering.ClusterMap",
    "dipy.segment.tests.test_clustering.data",
    "dipy.testing.assert_arrays_equal",
    "len",
    "nose.tools.assert_true",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_clustering.test_cluster_map_remove_cluster": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "dipy.segment.clustering.Cluster",
    "dipy.segment.clustering.ClusterMap",
    "dipy.segment.tests.test_clustering.itertools",
    "len",
    "list",
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_clustering.test_cluster_map_size": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "dipy.segment.clustering.Cluster",
    "dipy.segment.clustering.ClusterMap",
    "len",
    "nose.tools.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_clustering.test_cluster_map_str_and_repr": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "dipy.segment.clustering.Cluster",
    "dipy.segment.clustering.ClusterMap",
    "map",
    "nose.tools.assert_equal",
    "range",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_clustering.test_cluster_str_and_repr": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "dipy.segment.clustering.Cluster",
    "dipy.segment.tests.test_clustering.data",
    "len",
    "list",
    "map",
    "nose.tools.assert_equal",
    "numpy.random.shuffle",
    "range",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_clustering.test_subclassing_clustering": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "NotImplementedError",
    "SubClustering",
    "numpy.testing.assert_raises",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_clustering.test_subclassing_clustering.SubClustering": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "dipy.segment.clustering.Clustering"
   ]
  },
  "type": "class"
 },
 "dipy.segment.tests.test_clustering.test_subclassing_clustering.SubClustering.cluster": {
  "data": {
   "lineno": 750
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.segment.tests.test_feature.dtype",
    "numpy.arange",
    "numpy.array",
    "numpy.random.rand",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.segment.tests.test_feature.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_feature.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_feature.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_feature.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_feature.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_feature.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_feature.dipymetric": {
  "data": {
   "shadows": "dipy.segment.metric"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_feature.dtype": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_feature.extract": {
  "data": {
   "shadows": "dipy.segment.featurespeed.extract"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_feature.length": {
  "data": {
   "shadows": "dipy.tracking.streamline.length"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_feature.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_feature.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_feature.s1": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_feature.s2": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_feature.s3": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_feature.s4": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_feature.set_number_of_points": {
  "data": {
   "shadows": "dipy.tracking.streamline.set_number_of_points"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_feature.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_feature.test_feature_arclength": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ArcLengthFeature",
    "dipy.segment.metric.ArcLengthFeature",
    "dipy.segment.tests.test_feature.s1",
    "dipy.segment.tests.test_feature.s2",
    "dipy.segment.tests.test_feature.s3",
    "dipy.segment.tests.test_feature.s4",
    "dipy.tracking.streamline.length",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_feature_arclength.ArcLengthFeature": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "dipy.segment.metric.Feature"
   ]
  },
  "type": "class"
 },
 "dipy.segment.tests.test_feature.test_feature_arclength.ArcLengthFeature.__init__": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_feature_arclength.ArcLengthFeature.extract": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "dipy.tracking.streamline.length"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_feature_arclength.ArcLengthFeature.infer_shape": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_feature_center_of_mass": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "CenterOfMassFeature",
    "dipy.segment.metric.CenterOfMassFeature",
    "dipy.segment.tests.test_feature.s1",
    "dipy.segment.tests.test_feature.s2",
    "dipy.segment.tests.test_feature.s3",
    "dipy.segment.tests.test_feature.s4",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.mean",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_feature_center_of_mass.CenterOfMassFeature": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "dipy.segment.metric.Feature"
   ]
  },
  "type": "class"
 },
 "dipy.segment.tests.test_feature.test_feature_center_of_mass.CenterOfMassFeature.__init__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_feature_center_of_mass.CenterOfMassFeature.extract": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_feature_center_of_mass.CenterOfMassFeature.infer_shape": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_feature_extract": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "ArcLengthFeature",
    "CenterOfMass64bit",
    "dipy.segment.featurespeed.extract",
    "len",
    "nose.tools.assert_equal",
    "numpy.arange",
    "numpy.float32",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_feature_extract.ArcLengthFeature": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "dipy.segment.metric.Feature"
   ]
  },
  "type": "class"
 },
 "dipy.segment.tests.test_feature.test_feature_extract.ArcLengthFeature.extract": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_feature_extract.ArcLengthFeature.infer_shape": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_feature_extract.CenterOfMass64bit": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "dipy.segment.metric.Feature"
   ]
  },
  "type": "class"
 },
 "dipy.segment.tests.test_feature.test_feature_extract.CenterOfMass64bit.extract": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_feature_extract.CenterOfMass64bit.infer_shape": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_feature_midpoint": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "MidpointFeature",
    "dipy.segment.metric.MidpointFeature",
    "dipy.segment.tests.test_feature.s1",
    "dipy.segment.tests.test_feature.s2",
    "dipy.segment.tests.test_feature.s3",
    "dipy.segment.tests.test_feature.s4",
    "len",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.any",
    "numpy.not_equal",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_feature_midpoint.MidpointFeature": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "dipy.segment.metric.Feature"
   ]
  },
  "type": "class"
 },
 "dipy.segment.tests.test_feature.test_feature_midpoint.MidpointFeature.__init__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_feature_midpoint.MidpointFeature.extract": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_feature_midpoint.MidpointFeature.infer_shape": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_feature_resample": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ResampleFeature",
    "ValueError",
    "dipy.segment.metric.ResampleFeature",
    "dipy.segment.tests.test_feature.s1",
    "dipy.segment.tests.test_feature.s2",
    "dipy.segment.tests.test_feature.s3",
    "dipy.segment.tests.test_feature.s4",
    "dipy.tracking.streamline.set_number_of_points",
    "len",
    "map",
    "max",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.any",
    "numpy.not_equal",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_feature_resample.ResampleFeature": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "dipy.segment.metric.Feature"
   ]
  },
  "type": "class"
 },
 "dipy.segment.tests.test_feature.test_feature_resample.ResampleFeature.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_feature_resample.ResampleFeature.extract": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "dipy.tracking.streamline.set_number_of_points"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_feature_resample.ResampleFeature.infer_shape": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_feature_vector_of_endpoints": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "VectorOfEndpointsFeature",
    "dipy.segment.metric.VectorOfEndpointsFeature",
    "dipy.segment.tests.test_feature.s1",
    "dipy.segment.tests.test_feature.s2",
    "dipy.segment.tests.test_feature.s3",
    "dipy.segment.tests.test_feature.s4",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_feature_vector_of_endpoints.VectorOfEndpointsFeature": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "dipy.segment.metric.Feature"
   ]
  },
  "type": "class"
 },
 "dipy.segment.tests.test_feature.test_feature_vector_of_endpoints.VectorOfEndpointsFeature.__init__": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_feature_vector_of_endpoints.VectorOfEndpointsFeature.extract": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_feature_vector_of_endpoints.VectorOfEndpointsFeature.infer_shape": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_identity_feature": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "IdentityFeature",
    "dipy.segment.metric.IdentityFeature",
    "dipy.segment.tests.test_feature.s1",
    "dipy.segment.tests.test_feature.s2",
    "dipy.segment.tests.test_feature.s3",
    "dipy.segment.tests.test_feature.s4",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.any",
    "numpy.not_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_identity_feature.IdentityFeature": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "dipy.segment.metric.Feature"
   ]
  },
  "type": "class"
 },
 "dipy.segment.tests.test_feature.test_identity_feature.IdentityFeature.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_identity_feature.IdentityFeature.extract": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_identity_feature.IdentityFeature.infer_shape": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_subclassing_feature": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "EmptyFeature",
    "NotImplementedError",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_subclassing_feature.EmptyFeature": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "dipy.segment.metric.Feature"
   ]
  },
  "type": "class"
 },
 "dipy.segment.tests.test_feature.test_using_python_feature_with_cython_metric": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "ArcLengthFeature",
    "Identity",
    "dipy.segment.metric.AveragePointwiseEuclideanMetric",
    "dipy.segment.metric.EuclideanMetric",
    "dipy.segment.metric.dist",
    "dipy.segment.tests.test_feature.s1",
    "dipy.segment.tests.test_feature.s2",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_using_python_feature_with_cython_metric.ArcLengthFeature": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "dipy.segment.metric.Feature"
   ]
  },
  "type": "class"
 },
 "dipy.segment.tests.test_feature.test_using_python_feature_with_cython_metric.ArcLengthFeature.extract": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_using_python_feature_with_cython_metric.ArcLengthFeature.infer_shape": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "dipy.segment.tests.test_feature.sys",
    "long"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_using_python_feature_with_cython_metric.Identity": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "dipy.segment.metric.Feature"
   ]
  },
  "type": "class"
 },
 "dipy.segment.tests.test_feature.test_using_python_feature_with_cython_metric.Identity.extract": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "dipy.segment.tests.test_feature.test_using_python_feature_with_cython_metric.Identity.infer_shape": {
  "data": {
   "lineno": 278
  },
  "type": "function"
 },
 "dipy.segment.tests.test_mask": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.segment.tests.test_mask.applymask": {
  "data": {
   "shadows": "dipy.segment.mask.applymask"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_mask.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_mask.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_mask.binary_dilation": {
  "data": {
   "shadows": "scipy.ndimage.binary_dilation"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_mask.bounding_box": {
  "data": {
   "shadows": "dipy.segment.mask.bounding_box"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_mask.crop": {
  "data": {
   "shadows": "dipy.segment.mask.crop"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_mask.generate_binary_structure": {
  "data": {
   "shadows": "scipy.ndimage.generate_binary_structure"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_mask.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_mask.median_filter": {
  "data": {
   "shadows": "scipy.ndimage.filters.median_filter"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_mask.median_otsu": {
  "data": {
   "shadows": "dipy.segment.mask.median_otsu"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_mask.multi_median": {
  "data": {
   "shadows": "dipy.segment.mask.multi_median"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_mask.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_mask.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_mask.otsu": {
  "data": {
   "shadows": "dipy.segment.mask.otsu"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_mask.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_mask.test_bounding_box": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "dipy.segment.mask.bounding_box",
    "dipy.segment.tests.test_mask.warnings",
    "int",
    "len",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_mask.test_mask": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "dipy.segment.mask.applymask",
    "dipy.segment.mask.bounding_box",
    "dipy.segment.mask.crop",
    "dipy.segment.mask.multi_median",
    "dipy.segment.mask.otsu",
    "numpy.arange",
    "numpy.ones_like",
    "numpy.sum",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "scipy.ndimage.binary_dilation",
    "scipy.ndimage.filters.median_filter",
    "scipy.ndimage.generate_binary_structure"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_mask.test_median_otsu": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "dipy.data.get_data",
    "dipy.segment.mask.median_otsu",
    "nibabel.load",
    "numpy.squeeze",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_mask.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_metric": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.segment.tests.test_metric.dtype",
    "dipy.segment.tests.test_metric.nb_points",
    "dipy.segment.tests.test_metric.rng",
    "dipy.segment.tests.test_metric.s",
    "dipy.segment.tests.test_metric.s1",
    "dipy.segment.tests.test_metric.s2",
    "dipy.segment.tests.test_metric.s3",
    "dipy.segment.tests.test_metric.s4",
    "dipy.segment.tests.test_metric.x",
    "dipy.segment.tests.test_metric.y",
    "dipy.segment.tests.test_metric.z",
    "numpy.arange",
    "numpy.array",
    "numpy.linspace",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sin",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.segment.tests.test_metric.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_metric.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_metric.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_metric.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_metric.assert_greater_equal": {
  "data": {
   "shadows": "nose.tools.assert_greater_equal"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_metric.assert_less_equal": {
  "data": {
   "shadows": "nose.tools.assert_less_equal"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_metric.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_metric.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_metric.dipymetric": {
  "data": {
   "shadows": "dipy.segment.metric"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_metric.dtype": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_metric.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_metric.nb_points": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_metric.norm": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.apply_along_axis",
    "numpy.float64",
    "numpy.linalg.norm",
    "ord"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_metric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_metric.rng": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_metric.rodrigues_axis_rotation": {
  "data": {
   "shadows": "dipy.core.geometry.rodrigues_axis_rotation"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_metric.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_metric.s": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_metric.s1": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_metric.s2": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_metric.s3": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_metric.s4": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_metric.streamlines": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_metric.test_distance_matrix": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "dipy.segment.metric.SumPointwiseEuclideanMetric",
    "dipy.segment.metric.dist",
    "dipy.segment.metric.distance_matrix",
    "dipy.segment.tests.test_metric.dtype",
    "len",
    "nose.tools.assert_equal",
    "numpy.diag",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.rand",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_metric.test_metric_cosine": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "CosineMetric",
    "dipy.segment.metric.CosineMetric",
    "dipy.segment.metric.VectorOfEndpointsFeature",
    "dipy.segment.metric.dist",
    "dipy.segment.tests.test_metric.itertools",
    "dipy.segment.tests.test_metric.s1",
    "dipy.segment.tests.test_metric.s2",
    "dipy.segment.tests.test_metric.streamlines",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_greater_equal",
    "nose.tools.assert_less_equal",
    "numpy.all",
    "numpy.array",
    "numpy.float32",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_metric.test_metric_cosine.CosineMetric": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "dipy.segment.metric.Metric"
   ]
  },
  "type": "class"
 },
 "dipy.segment.tests.test_metric.test_metric_cosine.CosineMetric.__init__": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_metric.test_metric_cosine.CosineMetric.are_compatible": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "dipy.segment.tests.test_metric.test_metric_cosine.CosineMetric.dist": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "dipy.segment.tests.test_metric.norm",
    "numpy.arccos",
    "numpy.dot",
    "numpy.float64",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_metric.test_metric_minimum_average_direct_flip": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "MinimumAverageDirectFlipMetric",
    "dipy.core.geometry.rodrigues_axis_rotation",
    "dipy.segment.metric.IdentityFeature",
    "dipy.segment.metric.MinimumAverageDirectFlipMetric",
    "dipy.segment.metric.dist",
    "dipy.segment.metric.mdf",
    "dipy.segment.tests.test_metric.dtype",
    "dipy.segment.tests.test_metric.itertools",
    "dipy.segment.tests.test_metric.norm",
    "dipy.segment.tests.test_metric.s",
    "dipy.segment.tests.test_metric.s1",
    "dipy.segment.tests.test_metric.s2",
    "dipy.segment.tests.test_metric.streamlines",
    "nose.tools.assert_equal",
    "nose.tools.assert_greater_equal",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.allclose",
    "numpy.array",
    "numpy.cos",
    "numpy.cross",
    "numpy.diag",
    "numpy.dot",
    "numpy.mean",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_metric.test_metric_minimum_average_direct_flip.MinimumAverageDirectFlipMetric": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "dipy.segment.metric.Metric"
   ]
  },
  "type": "class"
 },
 "dipy.segment.tests.test_metric.test_metric_minimum_average_direct_flip.MinimumAverageDirectFlipMetric.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_metric.test_metric_minimum_average_direct_flip.MinimumAverageDirectFlipMetric.are_compatible": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "dipy.segment.tests.test_metric.test_metric_minimum_average_direct_flip.MinimumAverageDirectFlipMetric.dist": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "average_euclidean",
    "min"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_metric.test_metric_minimum_average_direct_flip.MinimumAverageDirectFlipMetric.dist.average_euclidean": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "dipy.segment.tests.test_metric.norm",
    "dipy.segment.tests.test_metric.x",
    "dipy.segment.tests.test_metric.y",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_metric.test_metric_minimum_average_direct_flip.MinimumAverageDirectFlipMetric.is_order_invariant": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_metric.test_subclassing_metric": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "EmptyMetric",
    "NotImplementedError",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_metric.test_subclassing_metric.EmptyMetric": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "dipy.segment.metric.Metric"
   ]
  },
  "type": "class"
 },
 "dipy.segment.tests.test_metric.x": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_metric.y": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_metric.z": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_mrf": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.data.get_data",
    "dipy.segment.tests.test_mrf.fname",
    "dipy.segment.tests.test_mrf.image",
    "dipy.segment.tests.test_mrf.noise_1",
    "dipy.segment.tests.test_mrf.noise_2",
    "dipy.segment.tests.test_mrf.noise_3",
    "dipy.segment.tests.test_mrf.nslices",
    "dipy.segment.tests.test_mrf.single_slice",
    "dipy.segment.tests.test_mrf.square",
    "dipy.segment.tests.test_mrf.square_1",
    "dipy.segment.tests.test_mrf.square_gauss",
    "dipy.segment.tests.test_mrf.temp_1",
    "dipy.segment.tests.test_mrf.temp_2",
    "dipy.segment.tests.test_mrf.temp_3",
    "dipy.sims.voxel.add_noise",
    "numpy.float64",
    "numpy.int16",
    "numpy.load",
    "numpy.random.normal",
    "numpy.random.random_integers",
    "numpy.testing.run_module_suite",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "module"
 },
 "dipy.segment.tests.test_mrf.ConstantObservationModel": {
  "data": {
   "shadows": "dipy.segment.mrf.ConstantObservationModel"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_mrf.IteratedConditionalModes": {
  "data": {
   "shadows": "dipy.segment.mrf.IteratedConditionalModes"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_mrf.TissueClassifierHMRF": {
  "data": {
   "shadows": "dipy.segment.tissue.TissueClassifierHMRF"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_mrf.add_noise": {
  "data": {
   "shadows": "dipy.sims.voxel.add_noise"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_mrf.background_noise": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_mrf.beta": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_mrf.fname": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_mrf.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_mrf.image": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_mrf.max_iter": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_mrf.nclasses": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_mrf.noise_1": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_mrf.noise_2": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_mrf.noise_3": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_mrf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_mrf.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_mrf.nslices": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_mrf.single_slice": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_mrf.square": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_mrf.square_1": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_mrf.square_gauss": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_mrf.temp_1": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_mrf.temp_2": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_mrf.temp_3": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_mrf.test_classify": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "dipy.segment.tests.test_mrf.beta",
    "dipy.segment.tests.test_mrf.image",
    "dipy.segment.tests.test_mrf.max_iter",
    "dipy.segment.tests.test_mrf.nclasses",
    "dipy.segment.tissue.TissueClassifierHMRF",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_mrf.test_grayscale_image": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "dipy.segment.mrf.ConstantObservationModel",
    "dipy.segment.mrf.IteratedConditionalModes",
    "dipy.segment.tests.test_mrf.beta",
    "dipy.segment.tests.test_mrf.image",
    "dipy.segment.tests.test_mrf.nclasses",
    "numpy.abs",
    "numpy.all",
    "numpy.array",
    "numpy.sum",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_mrf.test_grayscale_iter": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "dipy.segment.mrf.ConstantObservationModel",
    "dipy.segment.mrf.IteratedConditionalModes",
    "dipy.segment.tests.test_mrf.background_noise",
    "dipy.segment.tests.test_mrf.beta",
    "dipy.segment.tests.test_mrf.image",
    "dipy.segment.tests.test_mrf.max_iter",
    "dipy.segment.tests.test_mrf.nclasses",
    "dipy.sims.voxel.add_noise",
    "numpy.abs",
    "numpy.all",
    "numpy.empty_like",
    "numpy.float64",
    "numpy.inf.sum",
    "numpy.sum",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.where",
    "numpy.zeros_like",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_mrf.test_icm_square": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "dipy.segment.mrf.ConstantObservationModel",
    "dipy.segment.mrf.IteratedConditionalModes",
    "dipy.segment.tests.test_mrf.beta",
    "dipy.segment.tests.test_mrf.max_iter",
    "dipy.segment.tests.test_mrf.nclasses",
    "dipy.segment.tests.test_mrf.square",
    "dipy.segment.tests.test_mrf.square_1",
    "numpy.abs",
    "numpy.empty_like",
    "numpy.sum",
    "numpy.testing.assert_",
    "print",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_mrf.test_square_iter": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "dipy.segment.mrf.ConstantObservationModel",
    "dipy.segment.mrf.IteratedConditionalModes",
    "dipy.segment.tests.test_mrf.beta",
    "dipy.segment.tests.test_mrf.max_iter",
    "dipy.segment.tests.test_mrf.nclasses",
    "dipy.segment.tests.test_mrf.square",
    "dipy.segment.tests.test_mrf.square_gauss",
    "numpy.abs",
    "numpy.all",
    "numpy.empty_like",
    "numpy.inf.sum",
    "numpy.sum",
    "numpy.testing.assert_",
    "print",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_qb": {
  "data": {},
  "type": "module"
 },
 "dipy.segment.tests.test_qb.QuickBundles": {
  "data": {
   "shadows": "dipy.segment.quickbundles.QuickBundles"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_qb.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_qb.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_qb.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_qb.test_qbundles": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "dipy.data.get_data",
    "dipy.segment.quickbundles.QuickBundles",
    "nibabel.trackvis.read",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_qbx": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.segment.tests.test_qbx.AveragePointwiseEuclideanMetric": {
  "data": {
   "shadows": "dipy.segment.metric.AveragePointwiseEuclideanMetric"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_qbx.MinimumAverageDirectFlipMetric": {
  "data": {
   "shadows": "dipy.segment.metric.MinimumAverageDirectFlipMetric"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_qbx.QuickBundles": {
  "data": {
   "shadows": "dipy.segment.clustering.QuickBundles"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_qbx.QuickBundlesX": {
  "data": {
   "shadows": "dipy.segment.clustering.QuickBundlesX"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_qbx.ResampleFeature": {
  "data": {
   "shadows": "dipy.segment.featurespeed.ResampleFeature"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_qbx.Streamlines": {
  "data": {
   "shadows": "dipy.tracking.streamline.Streamlines"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_qbx.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_qbx.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_qbx.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_qbx.bearing_bundles": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "dipy.segment.tests.test_qbx.straight_bundle",
    "numpy.array",
    "numpy.cos",
    "numpy.linspace",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_qbx.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_qbx.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_qbx.qbx_and_merge": {
  "data": {
   "shadows": "dipy.segment.clustering.qbx_and_merge"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_qbx.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_qbx.set_number_of_points": {
  "data": {
   "shadows": "dipy.tracking.streamline.set_number_of_points"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_qbx.simulated_bundle": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "dipy.tracking.streamline.set_number_of_points",
    "numpy.cos",
    "numpy.linspace",
    "numpy.ones",
    "numpy.vstack",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_qbx.straight_bundle": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.c_",
    "numpy.cos",
    "numpy.linspace",
    "numpy.ones",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sin",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_qbx.streamlines_in_circle": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.c_",
    "numpy.cos",
    "numpy.linspace",
    "numpy.ones",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_qbx.streamlines_parallel": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.c_",
    "numpy.linspace",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_qbx.test_3D_points": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "dipy.segment.clustering.QuickBundlesX",
    "dipy.segment.metric.AveragePointwiseEuclideanMetric",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_qbx.test_3D_segments": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "dipy.segment.clustering.QuickBundlesX",
    "dipy.segment.featurespeed.ResampleFeature",
    "dipy.segment.metric.AveragePointwiseEuclideanMetric",
    "len",
    "numpy.array",
    "numpy.int32",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_qbx.test_circle_parallel_fornix": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "dipy.segment.clustering.QuickBundlesX",
    "dipy.segment.tests.test_qbx.streamlines_in_circle",
    "dipy.segment.tests.test_qbx.streamlines_parallel",
    "len",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_qbx.test_qbx_and_merge": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "dipy.segment.clustering.QuickBundlesX",
    "dipy.segment.clustering.qbx_and_merge",
    "dipy.segment.tests.test_qbx.bearing_bundles",
    "dipy.segment.tests.test_qbx.itertools",
    "dipy.segment.tests.test_qbx.straight_bundle",
    "dipy.tracking.streamline.Streamlines",
    "len",
    "list",
    "numpy.random.RandomState",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_qbx.test_raise_mdf": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "ValueError",
    "dipy.segment.clustering.QuickBundles",
    "dipy.segment.clustering.QuickBundlesX",
    "dipy.segment.metric.MinimumAverageDirectFlipMetric",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_qbx.test_with_simulated_bundles": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "dipy.segment.clustering.QuickBundlesX",
    "dipy.segment.tests.test_qbx.simulated_bundle",
    "len",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_qbx.test_with_simulated_bundles2": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "dipy.segment.clustering.QuickBundlesX",
    "dipy.segment.tests.test_qbx.bearing_bundles",
    "dipy.segment.tests.test_qbx.itertools",
    "dipy.segment.tests.test_qbx.straight_bundle",
    "list",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_quickbundles": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.segment.tests.test_quickbundles.dtype",
    "dipy.segment.tests.test_quickbundles.threshold",
    "numpy.arange",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.segment.tests.test_quickbundles.QuickBundles": {
  "data": {
   "shadows": "dipy.segment.clustering.QuickBundles"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_quickbundles.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_quickbundles.assert_arrays_equal": {
  "data": {
   "shadows": "dipy.testing.assert_arrays_equal"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_quickbundles.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_quickbundles.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_quickbundles.clusters_truth": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_quickbundles.data": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_quickbundles.dipymetric": {
  "data": {
   "shadows": "dipy.segment.metric"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_quickbundles.dtype": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_quickbundles.get_type_refcount": {
  "data": {
   "shadows": "dipy.testing.memory.get_type_refcount"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_quickbundles.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_quickbundles.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_quickbundles.quickbundles": {
  "data": {
   "shadows": "dipy.segment.clustering_algorithms.quickbundles"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_quickbundles.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_quickbundles.streamline_utils": {
  "data": {
   "shadows": "dipy.tracking.streamline"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_quickbundles.test_quickbundles_2D": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "dipy.segment.clustering_algorithms.quickbundles",
    "dipy.segment.metric.SumPointwiseEuclideanMetric",
    "dipy.segment.tests.test_quickbundles.clusters_truth",
    "dipy.segment.tests.test_quickbundles.data",
    "dipy.segment.tests.test_quickbundles.dtype",
    "dipy.segment.tests.test_quickbundles.itertools",
    "dipy.segment.tests.test_quickbundles.threshold",
    "len",
    "list",
    "map",
    "nose.tools.assert_equal",
    "numpy.arange",
    "numpy.array",
    "numpy.inf",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "numpy.testing.assert_array_equal",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_quickbundles.test_quickbundles_empty_data": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "dipy.segment.clustering_algorithms.quickbundles",
    "dipy.segment.metric.SumPointwiseEuclideanMetric",
    "dipy.segment.tests.test_quickbundles.threshold",
    "len",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_quickbundles.test_quickbundles_memory_leaks": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "dipy.segment.clustering.QuickBundles",
    "dipy.segment.tests.test_quickbundles.data",
    "dipy.segment.tests.test_quickbundles.threshold",
    "dipy.testing.memory.get_type_refcount",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_quickbundles.test_quickbundles_shape_uncompatibility": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "dipy.segment.clustering.QuickBundles",
    "dipy.segment.metric.AveragePointwiseEuclideanMetric",
    "dipy.segment.metric.ResampleFeature",
    "dipy.segment.tests.test_quickbundles.data",
    "dipy.segment.tests.test_quickbundles.itertools",
    "dipy.testing.assert_arrays_equal",
    "list",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_quickbundles.test_quickbundles_streamlines": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "dipy.segment.clustering.QuickBundles",
    "dipy.segment.tests.test_quickbundles.clusters_truth",
    "dipy.segment.tests.test_quickbundles.data",
    "dipy.segment.tests.test_quickbundles.itertools",
    "dipy.segment.tests.test_quickbundles.threshold",
    "dipy.tracking.streamline.set_number_of_points",
    "list",
    "nose.tools.assert_equal",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_quickbundles.test_quickbundles_with_not_order_invariant_metric": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "dipy.segment.clustering.QuickBundles",
    "dipy.segment.metric.AveragePointwiseEuclideanMetric",
    "dipy.segment.tests.test_quickbundles.dtype",
    "len",
    "nose.tools.assert_equal",
    "numpy.arange",
    "numpy.inf",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_quickbundles.test_quickbundles_with_python_metric": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "MDFpy",
    "dipy.segment.clustering.QuickBundles",
    "dipy.segment.tests.test_quickbundles.clusters_truth",
    "dipy.segment.tests.test_quickbundles.data",
    "dipy.segment.tests.test_quickbundles.itertools",
    "dipy.segment.tests.test_quickbundles.threshold",
    "dipy.tracking.streamline.set_number_of_points",
    "list",
    "nose.tools.assert_equal",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_quickbundles.test_quickbundles_with_python_metric.MDFpy": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "dipy.segment.metric.Metric"
   ]
  },
  "type": "class"
 },
 "dipy.segment.tests.test_quickbundles.test_quickbundles_with_python_metric.MDFpy.are_compatible": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "dipy.segment.tests.test_quickbundles.test_quickbundles_with_python_metric.MDFpy.dist": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "len",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_quickbundles.test_quickbundles_wrong_metric": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "dipy.segment.clustering.QuickBundles",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_quickbundles.threshold": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_rb": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.data.get_data",
    "dipy.segment.tests.test_rb.f",
    "dipy.segment.tests.test_rb.f1",
    "dipy.segment.tests.test_rb.f2",
    "dipy.segment.tests.test_rb.f3",
    "dipy.segment.tests.test_rb.fornix",
    "dipy.tracking.streamline.Streamlines",
    "nibabel.trackvis.read",
    "numpy.array",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.segment.tests.test_rb.RecoBundles": {
  "data": {
   "shadows": "dipy.segment.bundles.RecoBundles"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_rb.Streamlines": {
  "data": {
   "shadows": "dipy.tracking.streamline.Streamlines"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_rb.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_rb.bundles_distances_mam": {
  "data": {
   "shadows": "dipy.tracking.distances.bundles_distances_mam"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_rb.f": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_rb.f1": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_rb.f2": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_rb.f3": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_rb.fornix": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "dipy.segment.tests.test_rb.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_rb.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_rb.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_rb.qbx_and_merge": {
  "data": {
   "shadows": "dipy.segment.clustering.qbx_and_merge"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_rb.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.segment.tests.test_rb.test_rb_check_defaults": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "dipy.segment.bundles.RecoBundles",
    "dipy.segment.tests.test_rb.f",
    "dipy.segment.tests.test_rb.f2",
    "dipy.tracking.distances.bundles_distances_mam",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_rb.test_rb_clustermap": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "dipy.segment.bundles.RecoBundles",
    "dipy.segment.clustering.qbx_and_merge",
    "dipy.segment.tests.test_rb.f",
    "dipy.segment.tests.test_rb.f2",
    "dipy.tracking.distances.bundles_distances_mam",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_rb.test_rb_disable_slr": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "dipy.segment.bundles.RecoBundles",
    "dipy.segment.tests.test_rb.f",
    "dipy.segment.tests.test_rb.f2",
    "dipy.tracking.distances.bundles_distances_mam",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_rb.test_rb_no_neighb": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "dipy.segment.bundles.RecoBundles",
    "dipy.segment.tests.test_rb.fornix",
    "dipy.tracking.streamline.Streamlines",
    "len",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_rb.test_rb_no_verbose_and_mam": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "dipy.segment.bundles.RecoBundles",
    "dipy.segment.tests.test_rb.f",
    "dipy.segment.tests.test_rb.f2",
    "dipy.tracking.distances.bundles_distances_mam",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tests.test_rb.test_rb_reduction_mam": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "dipy.segment.bundles.RecoBundles",
    "dipy.segment.tests.test_rb.f",
    "dipy.segment.tests.test_rb.f2",
    "dipy.tracking.distances.bundles_distances_mam",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.segment.threshold": {
  "data": {},
  "type": "module"
 },
 "dipy.segment.threshold.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.segment.threshold.otsu": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.cumsum",
    "numpy.float",
    "numpy.histogram"
   ]
  },
  "type": "function"
 },
 "dipy.segment.threshold.upper_bound_by_percent": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.histogram",
    "numpy.prod",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.segment.threshold.upper_bound_by_rate": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.histogram",
    "numpy.size",
    "numpy.zeros",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tissue": {
  "data": {},
  "type": "module"
 },
 "dipy.segment.tissue.ConstantObservationModel": {
  "data": {
   "shadows": "dipy.segment.mrf.ConstantObservationModel"
  },
  "type": "import"
 },
 "dipy.segment.tissue.IteratedConditionalModes": {
  "data": {
   "shadows": "dipy.segment.mrf.IteratedConditionalModes"
  },
  "type": "import"
 },
 "dipy.segment.tissue.TissueClassifierHMRF": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.segment.tissue.TissueClassifierHMRF.__init__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "dipy.segment.tissue.TissueClassifierHMRF.classify": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "dipy.segment.mrf.ConstantObservationModel",
    "dipy.segment.mrf.IteratedConditionalModes",
    "dipy.sims.voxel.add_noise",
    "numpy.absolute",
    "numpy.amax",
    "numpy.amin",
    "numpy.argsort",
    "numpy.empty_like",
    "numpy.inf.sum",
    "numpy.interp",
    "numpy.size",
    "numpy.where",
    "numpy.zeros_like",
    "print",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "dipy.segment.tissue.add_noise": {
  "data": {
   "shadows": "dipy.sims.voxel.add_noise"
  },
  "type": "import"
 },
 "dipy.segment.tissue.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.sims": {
  "data": {},
  "type": "module"
 },
 "dipy.sims.phantom": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.sims.phantom.f",
    "dipy.sims.phantom.f2",
    "dipy.sims.phantom.f3",
    "dipy.sims.phantom.f4",
    "dipy.sims.phantom.orbital_phantom",
    "dipy.sims.phantom.vol2",
    "dipy.sims.phantom.vol23",
    "dipy.sims.phantom.vol3",
    "dipy.sims.phantom.vol4"
   ]
  },
  "type": "module"
 },
 "dipy.sims.phantom.SingleTensor": {
  "data": {
   "shadows": "dipy.sims.voxel.SingleTensor"
  },
  "type": "import"
 },
 "dipy.sims.phantom.add_noise": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "dipy.sims.voxel.add_noise",
    "enumerate",
    "numpy.max",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "dipy.sims.phantom.diff2eigenvectors": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "dipy.core.geometry.vec2vec_rotmat",
    "numpy.array",
    "numpy.dot",
    "numpy.eye",
    "numpy.linalg.norm",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.sims.phantom.diffusion_evals": {
  "data": {
   "shadows": "dipy.sims.voxel.diffusion_evals"
  },
  "type": "import"
 },
 "dipy.sims.phantom.f": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "len",
    "numpy.cos",
    "numpy.linspace",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "dipy.sims.phantom.f2": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "len",
    "numpy.linspace",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.sims.phantom.f3": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "len",
    "numpy.linspace",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.sims.phantom.f4": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "len",
    "numpy.linspace",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.sims.phantom.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.sims.phantom.gradient_table": {
  "data": {
   "shadows": "dipy.core.gradients.gradient_table"
  },
  "type": "import"
 },
 "dipy.sims.phantom.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.sims.phantom.orbital_phantom": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.sims.phantom.add_noise",
    "dipy.sims.phantom.diff2eigenvectors",
    "dipy.sims.voxel.SingleTensor",
    "dipy.sims.voxel.diffusion_evals",
    "func",
    "int",
    "len",
    "numpy.array",
    "numpy.cos",
    "numpy.diff",
    "numpy.dot",
    "numpy.linspace",
    "numpy.max",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.sin",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.sims.phantom.vec2vec_rotmat": {
  "data": {
   "shadows": "dipy.core.geometry.vec2vec_rotmat"
  },
  "type": "import"
 },
 "dipy.sims.phantom.vol": {
  "data": {
   "lineno": 210
  },
  "type": "constant"
 },
 "dipy.sims.phantom.vol2": {
  "data": {
   "lineno": 219
  },
  "type": "constant"
 },
 "dipy.sims.phantom.vol23": {
  "data": {
   "lineno": 230
  },
  "type": "constant"
 },
 "dipy.sims.phantom.vol234": {
  "data": {
   "lineno": 241
  },
  "type": "constant"
 },
 "dipy.sims.phantom.vol3": {
  "data": {
   "lineno": 228
  },
  "type": "constant"
 },
 "dipy.sims.phantom.vol4": {
  "data": {
   "lineno": 240
  },
  "type": "constant"
 },
 "dipy.sims.phantom.vox": {
  "data": {
   "shadows": "dipy.sims.voxel"
  },
  "type": "import"
 },
 "dipy.sims.tests": {
  "data": {
   "symbols_in_volume": [
    "numpy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "dipy.sims.tests.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "dipy.sims.tests.test": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "dipy.sims.tests.test_phantom": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.sims.tests.test_phantom.bvals",
    "dipy.sims.tests.test_phantom.bvecs",
    "numpy.isnan",
    "numpy.load",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.sims.tests.test_phantom.TensorModel": {
  "data": {
   "shadows": "dipy.reconst.dti.TensorModel"
  },
  "type": "import"
 },
 "dipy.sims.tests.test_phantom.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "dipy.sims.tests.test_phantom.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.sims.tests.test_phantom.bvals": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "dipy.sims.tests.test_phantom.bvecs": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "dipy.sims.tests.test_phantom.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.sims.tests.test_phantom.f": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "len",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "dipy.sims.tests.test_phantom.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.sims.tests.test_phantom.gradient_table": {
  "data": {
   "shadows": "dipy.core.gradients.gradient_table"
  },
  "type": "import"
 },
 "dipy.sims.tests.test_phantom.gtab": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "dipy.sims.tests.test_phantom.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.sims.tests.test_phantom.orbital_phantom": {
  "data": {
   "shadows": "dipy.sims.phantom.orbital_phantom"
  },
  "type": "import"
 },
 "dipy.sims.tests.test_phantom.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.sims.tests.test_phantom.test_add_noise": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "dict",
    "dipy.sims.phantom.orbital_phantom",
    "dipy.sims.tests.test_phantom.bvals",
    "dipy.sims.tests.test_phantom.f",
    "dipy.sims.tests.test_phantom.gtab",
    "len",
    "numpy.abs",
    "numpy.linspace",
    "numpy.pi",
    "numpy.random.seed",
    "numpy.testing.assert_",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "dipy.sims.tests.test_phantom.test_phantom": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "dipy.reconst.dti.TensorModel",
    "dipy.sims.phantom.orbital_phantom",
    "dipy.sims.tests.test_phantom.bvals",
    "dipy.sims.tests.test_phantom.f",
    "dipy.sims.tests.test_phantom.gtab",
    "len",
    "numpy.isnan",
    "numpy.linspace",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.sims.tests.test_voxel": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.io.gradients.read_bvals_bvecs",
    "dipy.sims.tests.test_voxel.bvals_2s",
    "dipy.sims.tests.test_voxel.bvecs_2s",
    "dipy.sims.tests.test_voxel.test_multi_tensor",
    "numpy.concatenate"
   ]
  },
  "type": "module"
 },
 "dipy.sims.tests.test_voxel.MultiTensor": {
  "data": {
   "shadows": "dipy.sims.voxel.MultiTensor"
  },
  "type": "import"
 },
 "dipy.sims.tests.test_voxel.SingleTensor": {
  "data": {
   "shadows": "dipy.sims.voxel.SingleTensor"
  },
  "type": "import"
 },
 "dipy.sims.tests.test_voxel.TensorModel": {
  "data": {
   "shadows": "dipy.reconst.dti.TensorModel"
  },
  "type": "import"
 },
 "dipy.sims.tests.test_voxel._check_directions": {
  "data": {
   "shadows": "dipy.sims.voxel._check_directions"
  },
  "type": "import"
 },
 "dipy.sims.tests.test_voxel.add_noise": {
  "data": {
   "shadows": "dipy.sims.voxel.add_noise"
  },
  "type": "import"
 },
 "dipy.sims.tests.test_voxel.all_tensor_evecs": {
  "data": {
   "shadows": "dipy.sims.voxel.all_tensor_evecs"
  },
  "type": "import"
 },
 "dipy.sims.tests.test_voxel.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "dipy.sims.tests.test_voxel.assert_almost_equal": {
  "data": {
   "shadows": "nose.tools.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.sims.tests.test_voxel.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.sims.tests.test_voxel.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.sims.tests.test_voxel.bvals_2s": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "dipy.sims.tests.test_voxel.bvecs_2s": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "dipy.sims.tests.test_voxel.dki_signal": {
  "data": {
   "shadows": "dipy.sims.voxel.dki_signal"
  },
  "type": "import"
 },
 "dipy.sims.tests.test_voxel.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.sims.tests.test_voxel.get_sphere": {
  "data": {
   "shadows": "dipy.data.get_sphere"
  },
  "type": "import"
 },
 "dipy.sims.tests.test_voxel.gradient_table": {
  "data": {
   "shadows": "dipy.core.gradients.gradient_table"
  },
  "type": "import"
 },
 "dipy.sims.tests.test_voxel.gtab": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "dipy.sims.tests.test_voxel.gtab_2s": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "dipy.sims.tests.test_voxel.kurtosis_element": {
  "data": {
   "shadows": "dipy.sims.voxel.kurtosis_element"
  },
  "type": "import"
 },
 "dipy.sims.tests.test_voxel.multi_tensor_dki": {
  "data": {
   "shadows": "dipy.sims.voxel.multi_tensor_dki"
  },
  "type": "import"
 },
 "dipy.sims.tests.test_voxel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.sims.tests.test_voxel.read_bvals_bvecs": {
  "data": {
   "shadows": "dipy.io.gradients.read_bvals_bvecs"
  },
  "type": "import"
 },
 "dipy.sims.tests.test_voxel.single_tensor": {
  "data": {
   "shadows": "dipy.sims.voxel.single_tensor"
  },
  "type": "import"
 },
 "dipy.sims.tests.test_voxel.sticks_and_ball": {
  "data": {
   "shadows": "dipy.sims.voxel.sticks_and_ball"
  },
  "type": "import"
 },
 "dipy.sims.tests.test_voxel.test_DKI_crossing_fibers_simulations": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "dipy.sims.tests.test_voxel.gtab_2s",
    "dipy.sims.voxel.dki_signal",
    "dipy.sims.voxel.multi_tensor_dki",
    "len",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.sims.tests.test_voxel.test_DKI_simulations_aligned_fibers": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.sims.tests.test_voxel.gtab_2s",
    "dipy.sims.voxel.dki_signal",
    "dipy.sims.voxel.multi_tensor_dki",
    "numpy.array",
    "numpy.asarray",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.sims.tests.test_voxel.test_all_tensor_evecs": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "dipy.sims.voxel.all_tensor_evecs",
    "numpy.array",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.sims.tests.test_voxel.test_check_directions": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "dipy.sims.voxel._check_directions",
    "numpy.array",
    "numpy.cos",
    "numpy.pi",
    "numpy.sin",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.sims.tests.test_voxel.test_kurtosis_elements": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "dipy.sims.voxel._check_directions",
    "dipy.sims.voxel.all_tensor_evecs",
    "dipy.sims.voxel.kurtosis_element",
    "len",
    "nose.tools.assert_almost_equal",
    "numpy.array",
    "numpy.diag",
    "numpy.dot",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.sims.tests.test_voxel.test_multi_tensor": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.data.get_sphere",
    "dipy.io.gradients.read_bvals_bvecs",
    "dipy.sims.tests.test_voxel.gtab",
    "dipy.sims.voxel.MultiTensor",
    "dipy.sims.voxel.all_tensor_evecs",
    "dipy.sims.voxel.single_tensor",
    "numpy.array",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.sims.tests.test_voxel.test_single_tensor": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "dipy.reconst.dti.TensorModel",
    "dipy.sims.tests.test_voxel.gtab",
    "dipy.sims.voxel.SingleTensor",
    "numpy.array",
    "numpy.eye",
    "numpy.mean",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.sims.tests.test_voxel.test_snr": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "dipy.sims.tests.test_voxel.gtab",
    "dipy.sims.voxel.add_noise",
    "dipy.sims.voxel.single_tensor",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal",
    "numpy.var",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.sims.tests.test_voxel.test_sticks_and_ball": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "dipy.sims.tests.test_voxel.gtab",
    "dipy.sims.voxel.SingleTensor",
    "dipy.sims.voxel.sticks_and_ball",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "dipy.test": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "dipy.testing": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "dipy.testing.IO_DATA_PATH": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "dipy.testing.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "dipy.testing.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "dipy.testing.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.testing.assert_arrays_equal": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "dipy.testing.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "dipy.testing.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "dipy.testing.assert_not_equal": {
  "data": {
   "shadows": "nose.tools.assert_not_equal"
  },
  "type": "import"
 },
 "dipy.testing.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "dipy.testing.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "dipy.testing.decorators": {
  "data": {
   "symbols_in_volume": [
    "dipy.testing.decorators.os",
    "dipy.testing.decorators.re"
   ]
  },
  "type": "module"
 },
 "dipy.testing.decorators.SKIP_RE": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "dipy.testing.decorators.Xvfb": {
  "data": {
   "shadows": "xvfbwrapper.Xvfb"
  },
  "type": "import"
 },
 "dipy.testing.decorators.doctest_skip_parser": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "dipy.testing.decorators.SKIP_RE",
    "eval"
   ]
  },
  "type": "function"
 },
 "dipy.testing.decorators.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dipy.testing.decorators.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "dipy.testing.decorators.use_xvfb": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "dipy.testing.decorators.xvfb_it": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "dipy.testing.decorators.xvfb_it.test_with_xvfb": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "dipy.testing.decorators.use_xvfb",
    "my_test",
    "xvfbwrapper.Xvfb"
   ]
  },
  "type": "function"
 },
 "dipy.testing.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "dipy.testing.doctest_skip_parser": {
  "data": {
   "shadows": "dipy.testing.decorators.doctest_skip_parser"
  },
  "type": "import"
 },
 "dipy.testing.memory": {
  "data": {},
  "type": "module"
 },
 "dipy.testing.memory.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "dipy.testing.memory.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "dipy.testing.memory.get_type_refcount": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dipy.testing.memory.gc",
    "int",
    "type"
   ]
  },
  "type": "function"
 },
 "dipy.testing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.testing.nt": {
  "data": {
   "shadows": "nose.tools"
  },
  "type": "import"
 },
 "dipy.testing.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "dipy.testing.setup_test": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "numpy.__version__",
    "numpy.set_printoptions"
   ]
  },
  "type": "function"
 },
 "dipy.testing.sphere_points": {
  "data": {
   "shadows": "dipy.testing.spherepoints.sphere_points"
  },
  "type": "import"
 },
 "dipy.testing.spherepoints": {
  "data": {
   "symbols_in_volume": [
    "dipy.testing.spherepoints._make_pts"
   ]
  },
  "type": "module"
 },
 "dipy.testing.spherepoints._make_pts": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.cos",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "dipy.testing.spherepoints.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.testing.spherepoints.sphere_points": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "dipy.testing.tests": {
  "data": {},
  "type": "module"
 },
 "dipy.testing.tests.test_decorators": {
  "data": {},
  "type": "module"
 },
 "dipy.testing.tests.test_decorators.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.testing.tests.test_decorators.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.testing.tests.test_decorators.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "dipy.testing.tests.test_decorators.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "dipy.testing.tests.test_decorators.assert_not_equal": {
  "data": {
   "shadows": "nose.tools.assert_not_equal"
  },
  "type": "import"
 },
 "dipy.testing.tests.test_decorators.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "dipy.testing.tests.test_decorators.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "dipy.testing.tests.test_decorators.doctest_skip_parser": {
  "data": {
   "shadows": "dipy.testing.decorators.doctest_skip_parser"
  },
  "type": "import"
 },
 "dipy.testing.tests.test_decorators.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.testing.tests.test_decorators.test_skipper": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "NameError",
    "dipy.testing.decorators.doctest_skip_parser",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "dipy.testing.tests.test_decorators.test_skipper.f": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "dipy.testing.tests.test_memory": {
  "data": {},
  "type": "module"
 },
 "dipy.testing.tests.test_memory.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "dipy.testing.tests.test_memory.get_type_refcount": {
  "data": {
   "shadows": "dipy.testing.memory.get_type_refcount"
  },
  "type": "import"
 },
 "dipy.testing.tests.test_memory.test_get_type_refcount": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "dipy.testing.memory.get_type_refcount",
    "list",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.tests": {
  "data": {},
  "type": "module"
 },
 "dipy.tests.scriptrunner": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "dipy.tests.scriptrunner._get_package",
    "str"
   ]
  },
  "type": "module"
 },
 "dipy.tests.scriptrunner.MY_PACKAGE": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "dipy.tests.scriptrunner.PIPE": {
  "data": {
   "shadows": "subprocess.PIPE"
  },
  "type": "import"
 },
 "dipy.tests.scriptrunner.Popen": {
  "data": {
   "shadows": "subprocess.Popen"
  },
  "type": "import"
 },
 "dipy.tests.scriptrunner.ScriptRunner": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.tests.scriptrunner.ScriptRunner.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "dipy.tests.scriptrunner.MY_PACKAGE",
    "dipy.tests.scriptrunner.local_module_dir",
    "dipy.tests.scriptrunner.local_script_dir",
    "dipy.tests.scriptrunner.os"
   ]
  },
  "type": "function"
 },
 "dipy.tests.scriptrunner.ScriptRunner.run_command": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "RuntimeError",
    "dipy.tests.scriptrunner.os",
    "dipy.tests.scriptrunner.string_types",
    "dipy.tests.scriptrunner.sys",
    "isinstance",
    "list",
    "opp",
    "os.path.join",
    "os.path.pathsep",
    "print",
    "subprocess.PIPE",
    "subprocess.Popen"
   ]
  },
  "type": "function"
 },
 "dipy.tests.scriptrunner._get_package": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "__name__.split",
    "__package__",
    "globals"
   ]
  },
  "type": "function"
 },
 "dipy.tests.scriptrunner.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "dipy.tests.scriptrunner.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "dipy.tests.scriptrunner.isfile": {
  "data": {
   "shadows": "os.path.isfile"
  },
  "type": "import"
 },
 "dipy.tests.scriptrunner.local_module_dir": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "__import__",
    "dipy.tests.scriptrunner.os",
    "os.path.dirname",
    "os.path.realpath"
   ]
  },
  "type": "function"
 },
 "dipy.tests.scriptrunner.local_script_dir": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "__import__",
    "dipy.tests.scriptrunner.MY_PACKAGE",
    "os.path.dirname",
    "os.path.isdir",
    "os.path.isfile",
    "os.path.join",
    "os.path.realpath"
   ]
  },
  "type": "function"
 },
 "dipy.tests.scriptrunner.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dipy.tests.scriptrunner.pathsep": {
  "data": {
   "shadows": "os.path.pathsep"
  },
  "type": "import"
 },
 "dipy.tests.scriptrunner.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "dipy.tests.scriptrunner.realpath": {
  "data": {
   "shadows": "os.path.realpath"
  },
  "type": "import"
 },
 "dipy.tests.scriptrunner.string_types": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "dipy.tests.scriptrunner.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "dipy.tests.test_scripts": {
  "data": {},
  "type": "module"
 },
 "dipy.tracking": {
  "data": {
   "symbols_in_volume": [
    "numpy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "dipy.tracking.Streamlines": {
  "data": {
   "shadows": "nibabel.streamlines.ArraySequence"
  },
  "type": "import"
 },
 "dipy.tracking.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "dipy.tracking._utils": {
  "data": {},
  "type": "module"
 },
 "dipy.tracking._utils._mapping_to_voxel": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "dipy.tracking._utils._voxel_size_deprecated",
    "float",
    "numpy.array",
    "numpy.asarray",
    "numpy.diag",
    "numpy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "dipy.tracking._utils._to_voxel_coordinates": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "IndexError",
    "int",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "dipy.tracking._utils._voxel_size_deprecated": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "DeprecationWarning",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "dipy.tracking._utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.tracking._utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.tracking._utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.tracking._utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.tracking._utils.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "dipy.tracking.bench": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "dipy.tracking.benchmarks": {
  "data": {},
  "type": "module"
 },
 "dipy.tracking.benchmarks.bench_streamline": {
  "data": {},
  "type": "module"
 },
 "dipy.tracking.benchmarks.bench_streamline.DATA": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "dipy.tracking.benchmarks.bench_streamline.Streamlines": {
  "data": {
   "shadows": "dipy.tracking.Streamlines"
  },
  "type": "import"
 },
 "dipy.tracking.benchmarks.bench_streamline.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.tracking.benchmarks.bench_streamline.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.tracking.benchmarks.bench_streamline.bench_compress_streamlines": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "dipy.data.get_data",
    "len",
    "nibabel.trackvis.read",
    "numpy.testing.measure",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.benchmarks.bench_streamline.bench_length": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "dipy.tracking.benchmarks.bench_streamline.DATA",
    "dipy.tracking.streamline.length",
    "dipy.tracking.tests.test_streamline.length_python",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.measure",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.benchmarks.bench_streamline.bench_set_number_of_points": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "dipy.tracking.benchmarks.bench_streamline.DATA",
    "dipy.tracking.streamline.set_number_of_points",
    "dipy.tracking.tests.test_streamline.set_number_of_points_python",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.measure",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.benchmarks.bench_streamline.compress_streamlines": {
  "data": {
   "shadows": "dipy.tracking.streamline.compress_streamlines"
  },
  "type": "import"
 },
 "dipy.tracking.benchmarks.bench_streamline.compress_streamlines_python": {
  "data": {
   "shadows": "dipy.tracking.tests.test_streamline.compress_streamlines_python"
  },
  "type": "import"
 },
 "dipy.tracking.benchmarks.bench_streamline.generate_streamlines": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.benchmarks.bench_streamline.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.tracking.benchmarks.bench_streamline.length": {
  "data": {
   "shadows": "dipy.tracking.streamline.length"
  },
  "type": "import"
 },
 "dipy.tracking.benchmarks.bench_streamline.length_python": {
  "data": {
   "shadows": "dipy.tracking.tests.test_streamline.length_python"
  },
  "type": "import"
 },
 "dipy.tracking.benchmarks.bench_streamline.measure": {
  "data": {
   "shadows": "numpy.testing.measure"
  },
  "type": "import"
 },
 "dipy.tracking.benchmarks.bench_streamline.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.tracking.benchmarks.bench_streamline.set_number_of_points": {
  "data": {
   "shadows": "dipy.tracking.streamline.set_number_of_points"
  },
  "type": "import"
 },
 "dipy.tracking.benchmarks.bench_streamline.set_number_of_points_python": {
  "data": {
   "shadows": "dipy.tracking.tests.test_streamline.set_number_of_points_python"
  },
  "type": "import"
 },
 "dipy.tracking.benchmarks.bench_streamline.setup": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "dipy.tracking.Streamlines",
    "dipy.tracking.benchmarks.bench_streamline.DATA",
    "dipy.tracking.benchmarks.bench_streamline.generate_streamlines",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.benchmarks.bench_streamline.tv": {
  "data": {
   "shadows": "nibabel.trackvis"
  },
  "type": "import"
 },
 "dipy.tracking.eudx": {
  "data": {},
  "type": "module"
 },
 "dipy.tracking.eudx.EuDX": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.tracking.eudx.EuDX.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "numpy.array",
    "numpy.ascontiguousarray",
    "numpy.eye",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.eudx.EuDX.__iter__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "dipy.tracking.utils.move_streamlines",
    "numpy.dot",
    "numpy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.eudx.EuDX._voxel_tracks": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "ValueError",
    "dipy.tracking.propspeed.eudx_both_directions",
    "numpy.any",
    "numpy.array",
    "numpy.ascontiguousarray",
    "numpy.float64",
    "numpy.random.rand",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.eudx.eudx_both_directions": {
  "data": {
   "shadows": "dipy.tracking.propspeed.eudx_both_directions"
  },
  "type": "import"
 },
 "dipy.tracking.eudx.get_sphere": {
  "data": {
   "shadows": "dipy.data.get_sphere"
  },
  "type": "import"
 },
 "dipy.tracking.eudx.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.tracking.eudx.utils": {
  "data": {
   "shadows": "dipy.tracking.utils"
  },
  "type": "import"
 },
 "dipy.tracking.learning": {
  "data": {},
  "type": "module"
 },
 "dipy.tracking.learning.detect_corresponding_tracks": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "dipy.tracking.distances.mam_distances",
    "int",
    "len",
    "numpy.array",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.learning.detect_corresponding_tracks_plus": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "dipy.tracking.distances.mam_distances",
    "int",
    "len",
    "numpy.array",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.learning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.tracking.learning.pf": {
  "data": {
   "shadows": "dipy.tracking.distances"
  },
  "type": "import"
 },
 "dipy.tracking.life": {
  "data": {},
  "type": "module"
 },
 "dipy.tracking.life.FiberFit": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "dipy.reconst.base.ReconstFit"
   ]
  },
  "type": "class"
 },
 "dipy.tracking.life.FiberFit.__init__": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "dipy.reconst.base.ReconstFit.__init__"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.life.FiberFit.predict": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "dipy.core.optimize.spdot",
    "dipy.tracking.life.FiberModel",
    "numpy.empty",
    "numpy.reshape",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.life.FiberModel": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "dipy.reconst.base.ReconstModel"
   ]
  },
  "type": "class"
 },
 "dipy.tracking.life.FiberModel.__init__": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "dipy.reconst.base.ReconstModel.__init__"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.life.FiberModel._signals": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.life.FiberModel.fit": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "dipy.core.optimize.sparse_nnls",
    "dipy.tracking.life.FiberFit",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.life.FiberModel.setup": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "dipy.tracking.life.LifeSignalMaker",
    "dipy.tracking.life.streamline_signal",
    "dipy.tracking.life.voxel2streamline",
    "dipy.tracking.streamline.transform_streamlines",
    "dipy.tracking.utils.unique_rows",
    "dipy.utils.six.moves.range",
    "enumerate",
    "int",
    "len",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.eye",
    "numpy.float",
    "numpy.hstack",
    "numpy.intp",
    "numpy.round",
    "numpy.zeros",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.life.LifeSignalMaker": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.tracking.life.LifeSignalMaker.__init__": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "dipy.data.get_sphere",
    "numpy.empty",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.life.LifeSignalMaker.calc_signal": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "dipy.tracking.life.grad_tensor",
    "numpy.diag",
    "numpy.dot",
    "numpy.exp",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.life.LifeSignalMaker.streamline_signal": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "dipy.tracking.life.streamline_gradients",
    "enumerate",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.life.ReconstFit": {
  "data": {
   "shadows": "dipy.reconst.base.ReconstFit"
  },
  "type": "import"
 },
 "dipy.tracking.life.ReconstModel": {
  "data": {
   "shadows": "dipy.reconst.base.ReconstModel"
  },
  "type": "import"
 },
 "dipy.tracking.life._voxel2streamline": {
  "data": {
   "shadows": "dipy.tracking.vox2track._voxel2streamline"
  },
  "type": "import"
 },
 "dipy.tracking.life.dpd": {
  "data": {
   "shadows": "dipy.data"
  },
  "type": "import"
 },
 "dipy.tracking.life.grad_tensor": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.dot",
    "numpy.matrix",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.life.gradient": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "dipy.utils.six.moves.range",
    "len",
    "numpy.asanyarray",
    "numpy.empty_like",
    "slice"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.life.la": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "dipy.tracking.life.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.tracking.life.opt": {
  "data": {
   "shadows": "dipy.core.optimize"
  },
  "type": "import"
 },
 "dipy.tracking.life.range": {
  "data": {
   "shadows": "dipy.utils.six.moves.range"
  },
  "type": "import"
 },
 "dipy.tracking.life.setup_test": {
  "data": {
   "shadows": "dipy.testing.setup_test"
  },
  "type": "import"
 },
 "dipy.tracking.life.sps": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "dipy.tracking.life.streamline_gradients": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "dipy.tracking.life.gradient",
    "numpy.array",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.life.streamline_signal": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "dipy.tracking.life.streamline_tensors",
    "enumerate",
    "len",
    "numpy.diag",
    "numpy.dot",
    "numpy.empty",
    "numpy.exp",
    "numpy.mean",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.life.streamline_tensors": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "dipy.tracking.life.grad_tensor",
    "dipy.tracking.life.streamline_gradients",
    "enumerate",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.life.transform_streamlines": {
  "data": {
   "shadows": "dipy.tracking.streamline.transform_streamlines"
  },
  "type": "import"
 },
 "dipy.tracking.life.unique_rows": {
  "data": {
   "shadows": "dipy.tracking.utils.unique_rows"
  },
  "type": "import"
 },
 "dipy.tracking.life.voxel2streamline": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "dipy.tracking.streamline.transform_streamlines",
    "dipy.tracking.utils.unique_rows",
    "dipy.tracking.vox2track._voxel2streamline",
    "numpy.concatenate",
    "numpy.eye",
    "numpy.intp",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.local": {
  "data": {},
  "type": "module"
 },
 "dipy.tracking.local.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "dipy.tracking.local.localtracking": {
  "data": {
   "symbols_in_volume": [
    "dipy.align.Bunch"
   ]
  },
  "type": "module"
 },
 "dipy.tracking.local.localtracking.Bunch": {
  "data": {
   "shadows": "dipy.align.Bunch"
  },
  "type": "import"
 },
 "dipy.tracking.local.localtracking.ConstrainedTissueClassifier": {
  "data": {
   "shadows": "dipy.tracking.local.tissue_classifier.ConstrainedTissueClassifier"
  },
  "type": "import"
 },
 "dipy.tracking.local.localtracking.LocalTracking": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.tracking.local.localtracking.LocalTracking.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.ascontiguousarray"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.local.localtracking.LocalTracking.__iter__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "dipy.tracking.utils.move_streamlines"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.local.localtracking.LocalTracking._generate_streamlines": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "dipy.tracking.local.localtracking.TissueTypes",
    "float",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.empty",
    "numpy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.local.localtracking.LocalTracking._get_voxel_size": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError",
    "numpy.allclose",
    "numpy.dot",
    "numpy.sqrt",
    "numpy.triu",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.local.localtracking.LocalTracking._tracker": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "dipy.tracking.local.localtrack.local_tracker"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.local.localtracking.ParticleFilteringTracking": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "dipy.tracking.local.localtracking.LocalTracking"
   ]
  },
  "type": "class"
 },
 "dipy.tracking.local.localtracking.ParticleFilteringTracking.__init__": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "ValueError",
    "dipy.tracking.local.localtracking.ParticleFilteringTracking",
    "dipy.tracking.local.tissue_classifier.ConstrainedTissueClassifier",
    "float",
    "int",
    "isinstance",
    "numpy.ceil",
    "numpy.empty",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.local.localtracking.ParticleFilteringTracking._tracker": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "dipy.tracking.local.localtrack.pft_tracker"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.local.localtracking.TissueTypes": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "dipy.tracking.local.localtracking.local_tracker": {
  "data": {
   "shadows": "dipy.tracking.local.localtrack.local_tracker"
  },
  "type": "import"
 },
 "dipy.tracking.local.localtracking.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.tracking.local.localtracking.pft_tracker": {
  "data": {
   "shadows": "dipy.tracking.local.localtrack.pft_tracker"
  },
  "type": "import"
 },
 "dipy.tracking.local.localtracking.utils": {
  "data": {
   "shadows": "dipy.tracking.utils"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests": {
  "data": {},
  "type": "module"
 },
 "dipy.tracking.local.tests.test_interpolation": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.tracking.local.tests.test_interpolation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_interpolation.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_interpolation.test_trilinear_interpolate": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "IndexError",
    "dipy.tracking.local.interpolation.trilinear_interpolate4d",
    "linear_function",
    "numpy.array",
    "numpy.empty",
    "numpy.mgrid",
    "numpy.random.random",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.local.tests.test_interpolation.test_trilinear_interpolate.linear_function": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "dipy.tracking.local.tests.test_interpolation.trilinear_interpolate4d": {
  "data": {
   "shadows": "dipy.tracking.local.interpolation.trilinear_interpolate4d"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tissue_classifier": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.tracking.local.tests.test_tissue_classifier.ActTissueClassifier": {
  "data": {
   "shadows": "dipy.tracking.local.ActTissueClassifier"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tissue_classifier.BinaryTissueClassifier": {
  "data": {
   "shadows": "dipy.tracking.local.BinaryTissueClassifier"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tissue_classifier.CmcTissueClassifier": {
  "data": {
   "shadows": "dipy.tracking.local.CmcTissueClassifier"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tissue_classifier.ThresholdTissueClassifier": {
  "data": {
   "shadows": "dipy.tracking.local.ThresholdTissueClassifier"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tissue_classifier.TissueTypes": {
  "data": {
   "shadows": "dipy.tracking.local.localtracking.TissueTypes"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tissue_classifier.ndindex": {
  "data": {
   "shadows": "dipy.core.ndindex.ndindex"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tissue_classifier.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tissue_classifier.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tissue_classifier.scipy.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tissue_classifier.test_act_tissue_classifier": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "dipy.core.ndindex.ndindex",
    "dipy.tracking.local.ActTissueClassifier",
    "dipy.tracking.local.localtracking.TissueTypes.ENDPOINT",
    "dipy.tracking.local.localtracking.TissueTypes.INVALIDPOINT",
    "dipy.tracking.local.localtracking.TissueTypes.OUTSIDEIMAGE",
    "dipy.tracking.local.localtracking.TissueTypes.TRACKPOINT",
    "numpy.array",
    "numpy.random.random",
    "numpy.reshape",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.local.tests.test_tissue_classifier.test_binary_tissue_classifier": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "dipy.core.ndindex.ndindex",
    "dipy.tracking.local.BinaryTissueClassifier",
    "dipy.tracking.local.localtracking.TissueTypes.ENDPOINT",
    "dipy.tracking.local.localtracking.TissueTypes.OUTSIDEIMAGE",
    "dipy.tracking.local.localtracking.TissueTypes.TRACKPOINT",
    "numpy.array",
    "numpy.random.random",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.local.tests.test_tissue_classifier.test_cmc_tissue_classifier": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "dipy.core.ndindex.ndindex",
    "dipy.tracking.local.CmcTissueClassifier",
    "dipy.tracking.local.CmcTissueClassifier.from_pve",
    "dipy.tracking.local.localtracking.TissueTypes.ENDPOINT",
    "dipy.tracking.local.localtracking.TissueTypes.INVALIDPOINT",
    "dipy.tracking.local.localtracking.TissueTypes.OUTSIDEIMAGE",
    "dipy.tracking.local.localtracking.TissueTypes.TRACKPOINT",
    "numpy.array",
    "numpy.asarray",
    "numpy.ndindex",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.local.tests.test_tissue_classifier.test_threshold_tissue_classifier": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "dipy.core.ndindex.ndindex",
    "dipy.tracking.local.ThresholdTissueClassifier",
    "dipy.tracking.local.localtracking.TissueTypes.ENDPOINT",
    "dipy.tracking.local.localtracking.TissueTypes.OUTSIDEIMAGE",
    "dipy.tracking.local.localtracking.TissueTypes.TRACKPOINT",
    "numpy.array",
    "numpy.random.random",
    "numpy.reshape",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.local.tests.test_tracking": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.tracking.local.tests.test_tracking.ActTissueClassifier": {
  "data": {
   "shadows": "dipy.tracking.local.ActTissueClassifier"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tracking.BinaryTissueClassifier": {
  "data": {
   "shadows": "dipy.tracking.local.BinaryTissueClassifier"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tracking.BootDirectionGetter": {
  "data": {
   "shadows": "dipy.direction.BootDirectionGetter"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tracking.ClosestPeakDirectionGetter": {
  "data": {
   "shadows": "dipy.direction.ClosestPeakDirectionGetter"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tracking.ConstrainedSphericalDeconvModel": {
  "data": {
   "shadows": "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tracking.DeterministicMaximumDirectionGetter": {
  "data": {
   "shadows": "dipy.direction.DeterministicMaximumDirectionGetter"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tracking.HemiSphere": {
  "data": {
   "shadows": "dipy.core.sphere.HemiSphere"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tracking.LocalTracking": {
  "data": {
   "shadows": "dipy.tracking.local.LocalTracking"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tracking.ParticleFilteringTracking": {
  "data": {
   "shadows": "dipy.tracking.local.ParticleFilteringTracking"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tracking.PeaksAndMetrics": {
  "data": {
   "shadows": "dipy.direction.PeaksAndMetrics"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tracking.ProbabilisticDirectionGetter": {
  "data": {
   "shadows": "dipy.direction.ProbabilisticDirectionGetter"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tracking.Streamlines": {
  "data": {
   "shadows": "dipy.tracking.streamline.Streamlines"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tracking.ThresholdTissueClassifier": {
  "data": {
   "shadows": "dipy.tracking.local.ThresholdTissueClassifier"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tracking.TissueTypes": {
  "data": {
   "shadows": "dipy.tracking.local.localtracking.TissueTypes"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tracking.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tracking.get_sphere": {
  "data": {
   "shadows": "dipy.data.get_sphere"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tracking.gradient_table": {
  "data": {
   "shadows": "dipy.core.gradients.gradient_table"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tracking.multi_tensor": {
  "data": {
   "shadows": "dipy.sims.voxel.multi_tensor"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tracking.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tracking.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tracking.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tracking.seeds_from_mask": {
  "data": {
   "shadows": "dipy.tracking.utils.seeds_from_mask"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tracking.single_tensor": {
  "data": {
   "shadows": "dipy.sims.voxel.single_tensor"
  },
  "type": "import"
 },
 "dipy.tracking.local.tests.test_tracking.test_affine_transformations": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "ValueError",
    "dipy.core.sphere.HemiSphere.from_sphere",
    "dipy.core.sphere.unit_octahedron",
    "dipy.data.get_data",
    "dipy.direction.DeterministicMaximumDirectionGetter.from_pmf",
    "dipy.tracking.local.BinaryTissueClassifier",
    "dipy.tracking.local.LocalTracking",
    "float",
    "len",
    "nibabel.load",
    "numpy.allclose",
    "numpy.array",
    "numpy.dot",
    "numpy.eye",
    "numpy.linalg.inv",
    "numpy.mean",
    "numpy.sqrt",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.local.tests.test_tracking.test_bootstap_peak_tracker": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "AssertionError",
    "allclose",
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_sphere",
    "dipy.direction.BootDirectionGetter.from_data",
    "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel",
    "dipy.sims.voxel.multi_tensor",
    "dipy.sims.voxel.single_tensor",
    "dipy.tracking.local.BinaryTissueClassifier",
    "dipy.tracking.local.LocalTracking",
    "dipy.tracking.streamline.Streamlines",
    "float",
    "len",
    "numpy.array",
    "numpy.eye",
    "numpy.insert",
    "numpy.ones",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.local.tests.test_tracking.test_bootstap_peak_tracker.allclose": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.local.tests.test_tracking.test_closest_peak_tracker": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "AssertionError",
    "allclose",
    "dipy.core.sphere.HemiSphere.from_sphere",
    "dipy.core.sphere.unit_octahedron",
    "dipy.direction.ClosestPeakDirectionGetter.from_pmf",
    "dipy.tracking.local.BinaryTissueClassifier",
    "dipy.tracking.local.LocalTracking",
    "dipy.tracking.streamline.Streamlines",
    "float",
    "numpy.array",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.local.tests.test_tracking.test_closest_peak_tracker.allclose": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.local.tests.test_tracking.test_maximum_deterministic_tracker": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "AssertionError",
    "allclose",
    "dipy.core.sphere.HemiSphere.from_sphere",
    "dipy.core.sphere.unit_octahedron",
    "dipy.direction.DeterministicMaximumDirectionGetter.from_pmf",
    "dipy.tracking.local.LocalTracking",
    "dipy.tracking.local.ThresholdTissueClassifier",
    "float",
    "numpy.allclose",
    "numpy.array",
    "numpy.eye",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.local.tests.test_tracking.test_maximum_deterministic_tracker.allclose": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.local.tests.test_tracking.test_particle_filtering_tractography": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "ValueError",
    "dipy.data.get_sphere",
    "dipy.direction.ProbabilisticDirectionGetter.from_pmf",
    "dipy.tracking.local.ActTissueClassifier.from_pve",
    "dipy.tracking.local.BinaryTissueClassifier",
    "dipy.tracking.local.LocalTracking",
    "dipy.tracking.local.ParticleFilteringTracking",
    "dipy.tracking.streamline.Streamlines",
    "dipy.tracking.utils.seeds_from_mask",
    "int",
    "len",
    "list",
    "numpy.all",
    "numpy.array",
    "numpy.dstack",
    "numpy.eye",
    "numpy.linalg.norm",
    "numpy.ones",
    "numpy.random.random",
    "numpy.random.seed",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.local.tests.test_tracking.test_peak_direction_tracker": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "dipy.core.sphere.HemiSphere.from_sphere",
    "dipy.core.sphere.unit_octahedron",
    "dipy.direction.PeaksAndMetrics",
    "dipy.tracking.local.LocalTracking",
    "dipy.tracking.local.ThresholdTissueClassifier",
    "enumerate",
    "float",
    "int",
    "numpy.allclose",
    "numpy.array",
    "numpy.eye",
    "numpy.testing.assert_",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.local.tests.test_tracking.test_probabilistic_odf_weighted_tracker": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "AssertionError",
    "all",
    "allclose",
    "dipy.core.sphere.HemiSphere.from_sphere",
    "dipy.core.sphere.unit_octahedron",
    "dipy.direction.ProbabilisticDirectionGetter.from_pmf",
    "dipy.tracking.local.LocalTracking",
    "dipy.tracking.local.ThresholdTissueClassifier",
    "dipy.tracking.streamline.Streamlines",
    "dipy.tracking.utils.seeds_from_mask",
    "float",
    "int",
    "len",
    "numpy.all",
    "numpy.allclose",
    "numpy.array",
    "numpy.eye",
    "numpy.ones",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.local.tests.test_tracking.test_probabilistic_odf_weighted_tracker.allclose": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.local.tests.test_tracking.test_stop_conditions": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "dipy.core.sphere.HemiSphere.from_sphere",
    "dipy.core.sphere.unit_octahedron",
    "dipy.direction.ProbabilisticDirectionGetter.from_pmf",
    "dipy.tracking.local.ActTissueClassifier",
    "dipy.tracking.local.LocalTracking",
    "dipy.tracking.local.localtracking.TissueTypes.ENDPOINT",
    "dipy.tracking.local.localtracking.TissueTypes.INVALIDPOINT",
    "iter",
    "len",
    "list",
    "next",
    "numpy.array",
    "numpy.column_stack",
    "numpy.eye",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.local.tests.test_tracking.unit_octahedron": {
  "data": {
   "shadows": "dipy.core.sphere.unit_octahedron"
  },
  "type": "import"
 },
 "dipy.tracking.local.utils": {
  "data": {
   "shadows": "dipy.tracking.utils"
  },
  "type": "import"
 },
 "dipy.tracking.metrics": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "dipy.tracking.metrics._extrap": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.metrics.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.tracking.metrics.arbitrarypoint": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "ValueError",
    "dipy.tracking.metrics.length",
    "numpy.asarray",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.metrics.bytes": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "dipy.tracking.metrics.center_of_mass": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.metrics.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.tracking.metrics.downsample": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "ValueError",
    "dipy.tracking.metrics._extrap",
    "dipy.tracking.metrics.length",
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.finfo",
    "numpy.vstack",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.metrics.endpoint": {
  "data": {
   "lineno": 677
  },
  "type": "function"
 },
 "dipy.tracking.metrics.frenet_serret": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "ValueError",
    "dipy.tracking.metrics.magn",
    "numpy.asarray",
    "numpy.cross",
    "numpy.divide",
    "numpy.gradient",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.metrics.generate_combinations": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "dipy.utils.six.moves.xrange",
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.metrics.inside_sphere": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.metrics.inside_sphere_points": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.metrics.intersect_sphere": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "abs",
    "dipy.utils.six.moves.xrange",
    "float",
    "numpy.array",
    "numpy.finfo",
    "numpy.inner",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.metrics.length": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "numpy.cumsum",
    "numpy.diff",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.metrics.longest_track_bundle": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "dipy.tracking.metrics.length",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.metrics.magn": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.finfo",
    "numpy.sum",
    "numpy.tile",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.metrics.mean_curvature": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "ValueError",
    "dipy.tracking.metrics.magn",
    "numpy.asarray",
    "numpy.cross",
    "numpy.gradient",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.metrics.mean_orientation": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.gradient",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.metrics.midpoint": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "ValueError",
    "dipy.tracking.metrics.length",
    "numpy.asarray",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.metrics.midpoint2point": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "dipy.tracking.metrics.midpoint",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.tracking.metrics.principal_components": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "numpy.cov",
    "numpy.linalg.eig"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.metrics.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.tracking.metrics.setup_test": {
  "data": {
   "shadows": "dipy.testing.setup_test"
  },
  "type": "import"
 },
 "dipy.tracking.metrics.splev": {
  "data": {
   "shadows": "scipy.interpolate.splev"
  },
  "type": "import"
 },
 "dipy.tracking.metrics.spline": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.vstack",
    "scipy.interpolate.splev",
    "scipy.interpolate.splprep"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.metrics.splprep": {
  "data": {
   "shadows": "scipy.interpolate.splprep"
  },
  "type": "import"
 },
 "dipy.tracking.metrics.startpoint": {
  "data": {
   "lineno": 647
  },
  "type": "function"
 },
 "dipy.tracking.metrics.winding": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "len",
    "numpy.arccos",
    "numpy.clip",
    "numpy.diag",
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.linalg.svd",
    "numpy.mean",
    "numpy.rad2deg",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.metrics.xrange": {
  "data": {
   "shadows": "dipy.utils.six.moves.xrange"
  },
  "type": "import"
 },
 "dipy.tracking.streamline": {
  "data": {
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "nibabel.__version__"
   ]
  },
  "type": "module"
 },
 "dipy.tracking.streamline.ArraySequence": {
  "data": {
   "shadows": "nibabel.streamlines.ArraySequence"
  },
  "type": "import"
 },
 "dipy.tracking.streamline.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "dipy.tracking.streamline.MEGABYTE": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "dipy.tracking.streamline.Streamlines": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "nibabel.streamlines.ArraySequence"
   ]
  },
  "type": "class"
 },
 "dipy.tracking.streamline.Streamlines.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "nibabel.streamlines.ArraySequence",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.streamline.Streamlines.append": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "dipy.tracking.streamline._BuildCache",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.streamline.Streamlines.extend": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "TypeError",
    "dipy.tracking.streamline._BuildCache",
    "len",
    "numpy.asarray",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.streamline.Streamlines.finalize_append": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "dipy.tracking.streamline._BuildCache": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.tracking.streamline._BuildCache.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "dipy.tracking.streamline.MEGABYTE",
    "functools.reduce",
    "list",
    "max",
    "operator.mul"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.streamline._BuildCache.update_seq": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.streamline._extract_vals": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "RuntimeError",
    "dipy.align.vector_fields.interpolate_scalar_3d",
    "dipy.align.vector_fields.interpolate_vector_3d",
    "dipy.tracking.streamline.types",
    "dipy.tracking.utils.move_streamlines",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.dot",
    "numpy.float",
    "numpy.linalg.inv",
    "numpy.ndarray",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.streamline._orient_generator": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "enumerate",
    "numpy.argmin",
    "scipy.spatial.distance.cdist"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.streamline._orient_list": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "enumerate",
    "numpy.argmin",
    "scipy.spatial.distance.cdist"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.streamline.apply_affine": {
  "data": {
   "shadows": "nibabel.affines.apply_affine"
  },
  "type": "import"
 },
 "dipy.tracking.streamline.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "dipy.tracking.streamline.center_streamlines": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.streamline.compress_streamlines": {
  "data": {
   "shadows": "dipy.tracking.streamlinespeed.compress_streamlines"
  },
  "type": "import"
 },
 "dipy.tracking.streamline.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "dipy.tracking.streamline.deform_streamlines": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "ValueError",
    "dipy.tracking.streamline.transform_streamlines",
    "dipy.tracking.streamline.values_from_volume",
    "numpy.linalg.inv",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.streamline.dist_to_corner": {
  "data": {
   "shadows": "dipy.core.geometry.dist_to_corner"
  },
  "type": "import"
 },
 "dipy.tracking.streamline.length": {
  "data": {
   "shadows": "dipy.tracking.streamlinespeed.length"
  },
  "type": "import"
 },
 "dipy.tracking.streamline.mul": {
  "data": {
   "shadows": "operator.mul"
  },
  "type": "import"
 },
 "dipy.tracking.streamline.nbytes": {
  "data": {
   "lineno": 703
  },
  "type": "function"
 },
 "dipy.tracking.streamline.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.tracking.streamline.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.tracking.streamline.orient_by_rois": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "copy.deepcopy",
    "dipy.tracking.streamline._orient_generator",
    "dipy.tracking.streamline._orient_list",
    "dipy.tracking.streamline.types",
    "isinstance",
    "len",
    "list",
    "nibabel.affines.apply_affine",
    "numpy.asarray",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.streamline.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "dipy.tracking.streamline.relist_streamlines": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.streamline.select_by_rois": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "dipy.core.geometry.dist_to_corner",
    "dipy.tracking.utils.reduce_rois",
    "dipy.tracking.utils.streamline_near_roi",
    "nibabel.affines.apply_affine",
    "numpy.array",
    "numpy.eye",
    "numpy.where",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.streamline.select_random_set_of_streamlines": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "len",
    "min",
    "numpy.random.choice"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.streamline.set_number_of_points": {
  "data": {
   "shadows": "dipy.tracking.streamlinespeed.set_number_of_points"
  },
  "type": "import"
 },
 "dipy.tracking.streamline.setup_test": {
  "data": {
   "shadows": "dipy.testing.setup_test"
  },
  "type": "import"
 },
 "dipy.tracking.streamline.streamline_near_roi": {
  "data": {
   "shadows": "dipy.tracking.utils.streamline_near_roi"
  },
  "type": "import"
 },
 "dipy.tracking.streamline.transform_streamlines": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "nibabel.affines.apply_affine"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.streamline.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "dipy.tracking.streamline.unlist_streamlines": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.concatenate",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.streamline.ut": {
  "data": {
   "shadows": "dipy.tracking.utils"
  },
  "type": "import"
 },
 "dipy.tracking.streamline.values_from_volume": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "ValueError",
    "dipy.tracking.streamline._extract_vals",
    "dipy.tracking.streamline.types",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.asarray",
    "numpy.ndarray",
    "numpy.swapaxes",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.streamline.vfu": {
  "data": {
   "shadows": "dipy.align.vector_fields"
  },
  "type": "import"
 },
 "dipy.tracking.streamline.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "dipy.tracking.test": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "dipy.tracking.tests": {
  "data": {
   "symbols_in_volume": [
    "numpy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "dipy.tracking.tests.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "dipy.tracking.tests.test_distances": {
  "data": {},
  "type": "module"
 },
 "dipy.tracking.tests.test_distances.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_distances.actor": {
  "data": {
   "shadows": "dipy.viz.actor"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_distances.assert_almost_equal": {
  "data": {
   "shadows": "nose.tools.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_distances.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_distances.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_distances.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_distances.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_distances.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_distances.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_distances.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_distances.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_distances.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_distances.pf": {
  "data": {
   "shadows": "dipy.tracking.distances"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_distances.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_distances.test_LSCv2": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ImportError",
    "dipy.data.get_data",
    "dipy.tracking.distances.local_skeleton_clustering",
    "dipy.tracking.distances.local_skeleton_clustering_3pts",
    "dipy.tracking.metrics.downsample",
    "dipy.tracking.tests.test_distances.nose",
    "len",
    "nibabel.trackvis.read",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.random.rand",
    "numpy.sum",
    "print",
    "range",
    "str",
    "time.time"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_distances.test_approx_ei_traj": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "dipy.tracking.distances.approx_polygon_track",
    "len",
    "nose.tools.assert_equal",
    "numpy.linspace",
    "numpy.pi",
    "numpy.sin",
    "numpy.vstack",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_distances.test_approx_mdl_traj": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "dipy.tracking.distances.approximate_mdl_trajectory",
    "len",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.cos",
    "numpy.linspace",
    "numpy.pi",
    "numpy.sin",
    "numpy.testing.assert_array_almost_equal",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_distances.test_bundles_distances_mam": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "dipy.tracking.distances.bundles_distances_mam",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_distances.test_bundles_distances_mdf": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "dipy.tracking.distances.bundles_distances_mdf",
    "enumerate",
    "numpy.array",
    "numpy.min",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_distances.test_cut_plane": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "dipy.tracking.distances.cut_plane",
    "numpy.array",
    "numpy.asarray",
    "numpy.dtype",
    "numpy.float32",
    "numpy.float64",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_distances.test_mam_distances": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "dipy.tracking.distances.mam_distances",
    "nose.tools.assert_almost_equal",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_distances.test_minimum_distance": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "dipy.tracking.distances.minimum_closest_distance",
    "nose.tools.assert_equal",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_distances.test_most_similar_mam": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "dipy.tracking.distances.most_similar_track_mam",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_distances.test_point_track_sq_distance": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "dipy.tracking.distances.point_track_sq_distance_check",
    "nose.tools.assert_equal",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_distances.test_track_roi_intersection_check": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "dipy.tracking.distances.track_roi_intersection_check",
    "nose.tools.assert_equal",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_distances.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_distances.tm": {
  "data": {
   "shadows": "dipy.tracking.metrics"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_distances.tv": {
  "data": {
   "shadows": "nibabel.trackvis"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_distances.window": {
  "data": {
   "shadows": "dipy.viz.window"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_fbc": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.tracking.tests.test_fbc.EnhancementKernel": {
  "data": {
   "shadows": "dipy.denoise.enhancement_kernel.EnhancementKernel"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_fbc.FBCMeasures": {
  "data": {
   "shadows": "dipy.tracking.fbcmeasures.FBCMeasures"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_fbc.Sphere": {
  "data": {
   "shadows": "dipy.core.sphere.Sphere"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_fbc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_fbc.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_fbc.test_fbc": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "dipy.core.sphere.Sphere",
    "dipy.denoise.enhancement_kernel.EnhancementKernel",
    "dipy.tracking.fbcmeasures.FBCMeasures",
    "numpy.array",
    "numpy.mean",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_learning": {
  "data": {},
  "type": "module"
 },
 "dipy.tracking.tests.test_learning.assert_almost_equal": {
  "data": {
   "shadows": "nose.tools.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_learning.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_learning.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_learning.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_learning.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_learning.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_learning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_learning.td": {
  "data": {
   "shadows": "dipy.tracking.distances"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_learning.test_det_corr_tracks": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "dipy.tracking.learning.detect_corresponding_tracks",
    "dipy.tracking.learning.detect_corresponding_tracks_plus",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_learning.tl": {
  "data": {
   "shadows": "dipy.tracking.learning"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_learning.tm": {
  "data": {
   "shadows": "dipy.tracking.metrics"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_life": {
  "data": {
   "symbols_in_volume": [
    "os.path.dirname"
   ]
  },
  "type": "module"
 },
 "dipy.tracking.tests.test_life.THIS_DIR": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "dipy.tracking.tests.test_life.dec": {
  "data": {
   "shadows": "numpy.testing.decorators"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_life.dpd": {
  "data": {
   "shadows": "dipy.data"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_life.dpg": {
  "data": {
   "shadows": "dipy.core.gradients"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_life.dps": {
  "data": {
   "shadows": "dipy.core.sphere"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_life.dti": {
  "data": {
   "shadows": "dipy.reconst.dti"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_life.edx": {
  "data": {
   "shadows": "dipy.tracking.eudx"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_life.grad": {
  "data": {
   "shadows": "dipy.core.gradients"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_life.la": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_life.life": {
  "data": {
   "shadows": "dipy.tracking.life"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_life.nd": {
  "data": {
   "shadows": "dipy.core.ndindex"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_life.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_life.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_life.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_life.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_life.opt": {
  "data": {
   "shadows": "dipy.core.optimize"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_life.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_life.sps": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_life.test_FiberFit": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.core.optimize.spdot",
    "dipy.data.get_data",
    "dipy.tracking.life.FiberModel",
    "nibabel.load",
    "numpy.array",
    "numpy.concatenate",
    "numpy.load",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_life.test_FiberModel_init": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.data.get_sphere",
    "dipy.tracking.life.FiberModel",
    "len",
    "nibabel.load",
    "numpy.array",
    "numpy.eye",
    "numpy.load",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_life.test_fit_data": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.core.ndindex.ndindex",
    "dipy.data.get_data",
    "dipy.data.get_sphere",
    "dipy.data.matlab_life_results",
    "dipy.reconst.dti.TensorModel",
    "dipy.reconst.dti.quantize_evecs",
    "dipy.tracking.eudx.EuDX",
    "dipy.tracking.life.FiberModel",
    "list",
    "nibabel.load",
    "numpy.corrcoef",
    "numpy.mean",
    "numpy.median",
    "numpy.sqrt",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_life.test_streamline_gradients": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "dipy.tracking.life.streamline_gradients",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_life.test_streamline_signal": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.tracking.life.streamline_signal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_life.test_streamline_tensors": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "dipy.tracking.life.streamline_tensors",
    "numpy.arccos",
    "numpy.argsort",
    "numpy.array",
    "numpy.dot",
    "numpy.rad2deg",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "scipy.linalg.eig"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_life.test_voxel2streamline": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "dipy.tracking.life.transform_streamlines",
    "dipy.tracking.life.voxel2streamline",
    "numpy.array",
    "numpy.eye",
    "numpy.linalg.inv",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_localtrack": {
  "data": {},
  "type": "module"
 },
 "dipy.tracking.tests.test_localtrack.ThresholdTissueClassifier": {
  "data": {
   "shadows": "dipy.tracking.local.tissue_classifier.ThresholdTissueClassifier"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_localtrack.default_sphere": {
  "data": {
   "shadows": "dipy.data.default_sphere"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_localtrack.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_localtrack.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_localtrack.peaks_from_model": {
  "data": {
   "shadows": "dipy.direction.peaks_from_model"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_localtrack.test_ThresholdTissueClassifier": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "dipy.tracking.local.tissue_classifier.ThresholdTissueClassifier",
    "float",
    "numpy.array",
    "numpy.random.random",
    "numpy.sort",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_metrics": {
  "data": {},
  "type": "module"
 },
 "dipy.tracking.tests.test_metrics.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_metrics.assert_almost_equal": {
  "data": {
   "shadows": "nose.tools.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_metrics.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_metrics.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_metrics.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_metrics.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_metrics.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_metrics.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_metrics.pf": {
  "data": {
   "shadows": "dipy.tracking.distances"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_metrics.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_metrics.test_add_sub_3vecs": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "dipy.tracking.distances.add_3vecs",
    "dipy.tracking.distances.sub_3vecs",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_metrics.test_downsample": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "dipy.tracking.metrics.downsample",
    "len",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.float32",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_metrics.test_inner_3vecs": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "dipy.tracking.distances.inner_3vecs",
    "numpy.inner",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_metrics.test_normalized_3vec": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "dipy.tracking.distances.norm_3vec",
    "dipy.tracking.distances.normalized_3vec",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.dot",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_metrics.test_segment_intersection": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "dipy.tracking.metrics.intersect_sphere",
    "nose.tools.assert_equal",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_metrics.test_splines": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "dipy.tracking.metrics.spline",
    "numpy.cos",
    "numpy.linspace",
    "numpy.pi",
    "numpy.random.normal",
    "numpy.sin",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_metrics.test_winding": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "dipy.tracking.metrics.winding",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.float32",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_metrics.tm": {
  "data": {
   "shadows": "dipy.tracking.metrics"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_metrics.xrange": {
  "data": {
   "shadows": "dipy.utils.six.moves.xrange"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_propagation": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.tracking.tests.test_propagation.EuDX": {
  "data": {
   "shadows": "dipy.tracking.eudx.EuDX"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_propagation.GeneralizedQSamplingModel": {
  "data": {
   "shadows": "dipy.reconst.gqi.GeneralizedQSamplingModel"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_propagation.TensorModel": {
  "data": {
   "shadows": "dipy.reconst.dti.TensorModel"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_propagation.assert_almost_equal": {
  "data": {
   "shadows": "nose.tools.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_propagation.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_propagation.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_propagation.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_propagation.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_propagation.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_propagation.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_propagation.eudx_both_directions": {
  "data": {
   "shadows": "dipy.tracking.propspeed.eudx_both_directions"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_propagation.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_propagation.get_sphere": {
  "data": {
   "shadows": "dipy.data.get_sphere"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_propagation.gradient_table": {
  "data": {
   "shadows": "dipy.core.gradients.gradient_table"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_propagation.length": {
  "data": {
   "shadows": "dipy.tracking.metrics.length"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_propagation.map_coordinates_trilinear_iso": {
  "data": {
   "shadows": "dipy.tracking.propspeed.map_coordinates_trilinear_iso"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_propagation.ndarray_offset": {
  "data": {
   "shadows": "dipy.tracking.propspeed.ndarray_offset"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_propagation.ni": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_propagation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_propagation.numpy.testing": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_propagation.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_propagation.quantize_evecs": {
  "data": {
   "shadows": "dipy.reconst.dti.quantize_evecs"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_propagation.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_propagation.stepped_1d": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_propagation.test_eudx_bad_seed": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ValueError",
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.data.get_sphere",
    "dipy.reconst.dti.TensorModel",
    "dipy.reconst.dti.quantize_evecs",
    "dipy.tracking.eudx.EuDX",
    "list",
    "nibabel.load",
    "nose.tools.assert_raises",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_propagation.test_eudx_both_directions_errors": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "ValueError",
    "dipy.data.get_sphere",
    "dipy.tracking.propspeed.eudx_both_directions",
    "dipy.tracking.tests.test_propagation.stepped_1d",
    "nose.tools.assert_raises",
    "numpy.float64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_propagation.test_eudx_boundaries": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "dipy.data.get_sphere",
    "dipy.tracking.eudx.EuDX",
    "len",
    "list",
    "nose.tools.assert_equal",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_propagation.test_eudx_further": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_data",
    "dipy.data.get_sphere",
    "dipy.reconst.dti.TensorModel",
    "dipy.reconst.dti.quantize_evecs",
    "dipy.tracking.eudx.EuDX",
    "dipy.tracking.utils.move_streamlines",
    "nibabel.load",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.ascontiguousarray",
    "numpy.float64",
    "numpy.random.rand",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "random_affine",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_propagation.test_eudx_further.random_affine": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.eye",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_propagation.test_offset": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "dipy.tracking.propspeed.ndarray_offset",
    "dipy.tracking.tests.test_propagation.stepped_1d",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.float64",
    "numpy.int32",
    "numpy.intp"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_propagation.test_trilinear_interp_cubic_voxels": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "dipy.tracking.propspeed.map_coordinates_trilinear_iso",
    "dipy.tracking.tests.test_propagation.stepped_1d",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.intp",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_propagation.utils": {
  "data": {
   "shadows": "dipy.tracking.utils"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_streamline": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.tracking.tests.test_streamline.streamline",
    "dipy.tracking.tests.test_streamline.streamline_64bit",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.tracking.tests.test_streamline.Streamlines": {
  "data": {
   "shadows": "dipy.tracking.streamline.Streamlines"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_streamline.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_streamline.assert_almost_equal": {
  "data": {
   "shadows": "nose.tools.assert_almost_equal"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_streamline.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_streamline.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_streamline.assert_arrays_equal": {
  "data": {
   "shadows": "dipy.testing.assert_arrays_equal"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_streamline.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_streamline.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_streamline.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_streamline.center_streamlines": {
  "data": {
   "shadows": "dipy.tracking.streamline.center_streamlines"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_streamline.compress_streamlines": {
  "data": {
   "shadows": "dipy.tracking.streamline.compress_streamlines"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_streamline.compress_streamlines_python": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "dipy.tracking.tests.test_streamline.streamline",
    "dist_to_line",
    "enumerate",
    "next",
    "numpy.isnan",
    "numpy.zeros_like",
    "segment_length"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_streamline.compress_streamlines_python.dist_to_line": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "next",
    "numpy.cross",
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_streamline.compress_streamlines_python.segment_length": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "next.sum",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_streamline.deform_streamlines": {
  "data": {
   "shadows": "dipy.tracking.streamline.deform_streamlines"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_streamline.generate_sl": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "dipy.tracking.tests.test_streamline.streamlines"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_streamline.get_type_refcount": {
  "data": {
   "shadows": "dipy.testing.memory.get_type_refcount"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_streamline.heterogeneous_streamlines": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "dipy.tracking.tests.test_streamline.length": {
  "data": {
   "shadows": "dipy.tracking.streamline.length"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_streamline.length_python": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "numpy.cumsum",
    "numpy.diff",
    "numpy.float64",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_streamline.norm": {
  "data": {
   "shadows": "numpy.linalg.norm"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_streamline.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_streamline.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_streamline.orient_by_rois": {
  "data": {
   "shadows": "dipy.tracking.streamline.orient_by_rois"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_streamline.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_streamline.relist_streamlines": {
  "data": {
   "shadows": "dipy.tracking.streamline.relist_streamlines"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_streamline.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_streamline.select_by_rois": {
  "data": {
   "shadows": "dipy.tracking.streamline.select_by_rois"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_streamline.select_random_set_of_streamlines": {
  "data": {
   "shadows": "dipy.tracking.streamline.select_random_set_of_streamlines"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_streamline.set_number_of_points": {
  "data": {
   "shadows": "dipy.tracking.streamline.set_number_of_points"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_streamline.set_number_of_points_python": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "_extrap",
    "dipy.tracking.tests.test_streamline.length_python",
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.finfo",
    "numpy.vstack",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_streamline.set_number_of_points_python._extrap": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_streamline.streamline": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "dipy.tracking.tests.test_streamline.streamline_64bit": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "dipy.tracking.tests.test_streamline.streamlines": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "dipy.tracking.tests.test_streamline.streamlines_64bit": {
  "data": {
   "lineno": 156
  },
  "type": "constant"
 },
 "dipy.tracking.tests.test_streamline.test_center_and_transform": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "dipy.tracking.streamline.center_streamlines",
    "dipy.tracking.streamline.transform_streamlines",
    "dipy.tracking.tests.test_streamline.streamlines",
    "numpy.array",
    "numpy.eye",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_streamline.test_compress_streamlines": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "compress_func",
    "dipy.tracking.streamline.compress_streamlines",
    "dipy.tracking.tests.test_streamline.compress_streamlines_python",
    "dipy.tracking.tests.test_streamline.streamline",
    "enumerate",
    "len",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.array",
    "numpy.diff",
    "numpy.errstate",
    "numpy.float32",
    "numpy.inf",
    "numpy.linspace",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_streamline.test_compress_streamlines_memory_leaks": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "dipy.testing.memory.get_type_refcount",
    "dipy.tracking.streamline.compress_streamlines",
    "dipy.tracking.tests.test_streamline.streamlines",
    "len",
    "nose.tools.assert_equal",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.RandomState",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_streamline.test_deform_streamlines": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "dipy.tracking.streamline.deform_streamlines",
    "dipy.tracking.streamline.transform_streamlines",
    "dipy.tracking.streamline.values_from_volume",
    "dipy.tracking.tests.test_streamline.streamlines",
    "list",
    "numpy.array",
    "numpy.dot",
    "numpy.linalg.inv",
    "numpy.random.randn",
    "numpy.subtract",
    "numpy.testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_streamline.test_length": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "AttributeError",
    "dipy.tracking.streamline.Streamlines",
    "dipy.tracking.streamline.length",
    "dipy.tracking.tests.test_streamline.heterogeneous_streamlines",
    "dipy.tracking.tests.test_streamline.length_python",
    "dipy.tracking.tests.test_streamline.streamline",
    "dipy.tracking.tests.test_streamline.streamline_64bit",
    "dipy.tracking.tests.test_streamline.streamlines",
    "dipy.tracking.tests.test_streamline.streamlines_64bit",
    "enumerate",
    "nose.tools.assert_almost_equal",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_streamline.test_length_memory_leaks": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "dipy.testing.memory.get_type_refcount",
    "dipy.tracking.tests.test_streamline.streamlines",
    "len",
    "nose.tools.assert_equal",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.RandomState",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_streamline.test_orient_by_rois": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "dict",
    "dipy.tracking.streamline.orient_by_rois",
    "dipy.tracking.tests.test_streamline.generate_sl",
    "dipy.tracking.tests.test_streamline.streamlines",
    "dipy.tracking.tests.test_streamline.types",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.eye",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.where",
    "numpy.zeros",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_streamline.test_select_by_rois": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "bool",
    "dipy.testing.assert_arrays_equal",
    "dipy.tracking.streamline.select_by_rois",
    "dipy.tracking.tests.test_streamline.generate_sl",
    "dipy.tracking.tests.test_streamline.streamlines",
    "list",
    "numpy.array",
    "numpy.zeros",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_streamline.test_select_random_streamlines": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "dipy.tracking.streamline.select_random_set_of_streamlines",
    "dipy.tracking.tests.test_streamline.streamlines",
    "len",
    "nose.tools.assert_equal",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_streamline.test_set_number_of_points": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "dipy.tracking.streamline.Streamlines",
    "dipy.tracking.streamline.set_number_of_points",
    "dipy.tracking.tests.test_streamline.heterogeneous_streamlines",
    "dipy.tracking.tests.test_streamline.set_number_of_points_python",
    "dipy.tracking.tests.test_streamline.streamline",
    "dipy.tracking.tests.test_streamline.streamline_64bit",
    "dipy.tracking.tests.test_streamline.streamlines",
    "dipy.tracking.tests.test_streamline.streamlines_64bit",
    "enumerate",
    "len",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.ones",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_streamline.test_set_number_of_points_memory_leaks": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "dipy.testing.memory.get_type_refcount",
    "dipy.tracking.streamline.set_number_of_points",
    "dipy.tracking.tests.test_streamline.streamlines",
    "len",
    "nose.tools.assert_equal",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.RandomState",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_streamline.test_streamlines_generator": {
  "data": {
   "lineno": 1082,
   "symbols_in_volume": [
    "ValueError",
    "dipy.tracking.streamline.Streamlines",
    "dipy.tracking.tests.test_streamline.generate_sl",
    "dipy.tracking.tests.test_streamline.streamlines",
    "len",
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_streamline.test_unlist_relist_streamlines": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "dipy.tracking.streamline.relist_streamlines",
    "dipy.tracking.streamline.unlist_streamlines",
    "dipy.tracking.tests.test_streamline.streamlines",
    "len",
    "nose.tools.assert_equal",
    "numpy.dtype",
    "numpy.random.rand",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_streamline.test_values_from_volume": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "RuntimeError",
    "dipy.tracking.streamline.values_from_volume",
    "dipy.tracking.tests.test_streamline.streamlines",
    "dipy.tracking.utils.move_streamlines",
    "enumerate",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.eye",
    "numpy.float32",
    "numpy.float64",
    "numpy.ones",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_streamline.transform_streamlines": {
  "data": {
   "shadows": "dipy.tracking.streamline.transform_streamlines"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_streamline.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_streamline.unlist_streamlines": {
  "data": {
   "shadows": "dipy.tracking.streamline.unlist_streamlines"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_streamline.ut": {
  "data": {
   "shadows": "dipy.tracking.utils"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_streamline.values_from_volume": {
  "data": {
   "shadows": "dipy.tracking.streamline.values_from_volume"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_track_volumes": {
  "data": {},
  "type": "module"
 },
 "dipy.tracking.tests.test_track_volumes.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_track_volumes.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_track_volumes.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_track_volumes.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_track_volumes.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_track_volumes.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_track_volumes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.tracking.tests.test_track_volumes.test_track_volumes": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "dipy.tracking.tests.test_track_volumes.tracks_to_expected",
    "dipy.tracking.vox2track.track_counts",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_track_volumes.tracks_to_expected": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "enumerate",
    "numpy.any",
    "numpy.array",
    "numpy.int32",
    "numpy.round",
    "numpy.zeros",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.tests.test_track_volumes.tvo": {
  "data": {
   "shadows": "dipy.tracking.vox2track"
  },
  "type": "import"
 },
 "dipy.tracking.utils": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "dipy.tracking.utils._min_at",
    "numpy.minimum.at"
   ]
  },
  "type": "module"
 },
 "dipy.tracking.utils._as_segments": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "dipy.tracking.utils._part_segments"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.utils._mapping_to_voxel": {
  "data": {
   "shadows": "dipy.tracking._utils._mapping_to_voxel"
  },
  "type": "import"
 },
 "dipy.tracking.utils._min_at": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "bool",
    "list",
    "numpy.asarray",
    "numpy.lexsort",
    "numpy.minimum",
    "numpy.ones",
    "tuple"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.utils._part_segments": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "len",
    "numpy.split"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.utils._streamlines_in_mask": {
  "data": {
   "shadows": "dipy.tracking.vox2track._streamlines_in_mask"
  },
  "type": "import"
 },
 "dipy.tracking.utils._to_voxel_coordinates": {
  "data": {
   "shadows": "dipy.tracking._utils._to_voxel_coordinates"
  },
  "type": "import"
 },
 "dipy.tracking.utils._with_initialize": {
  "data": {
   "lineno": 507
  },
  "type": "function"
 },
 "dipy.tracking.utils._with_initialize.helper": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "functools.wraps",
    "generator",
    "next"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.tracking.utils.affine_for_trackvis": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "NotImplemented",
    "numpy.asarray",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.utils.affine_from_fsl_mat_file": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.dot",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.utils.apply_affine": {
  "data": {
   "shadows": "nibabel.affines.apply_affine"
  },
  "type": "import"
 },
 "dipy.tracking.utils.asarray": {
  "data": {
   "shadows": "numpy.asarray"
  },
  "type": "import"
 },
 "dipy.tracking.utils.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "dipy.tracking.utils.ceil": {
  "data": {
   "shadows": "numpy.ceil"
  },
  "type": "import"
 },
 "dipy.tracking.utils.connectivity_matrix": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ValueError",
    "collections.defaultdict",
    "dipy.tracking._utils._mapping_to_voxel",
    "dipy.tracking._utils._to_voxel_coordinates",
    "dipy.tracking.utils.ndbincount",
    "enumerate",
    "len",
    "list",
    "numpy.maximum"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.utils.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "dipy.tracking.utils.density_map": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "dipy.tracking._utils._mapping_to_voxel",
    "dipy.tracking._utils._to_voxel_coordinates",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.utils.dist_to_corner": {
  "data": {
   "shadows": "dipy.core.geometry.dist_to_corner"
  },
  "type": "import"
 },
 "dipy.tracking.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.tracking.utils.dot": {
  "data": {
   "shadows": "numpy.dot"
  },
  "type": "import"
 },
 "dipy.tracking.utils.empty": {
  "data": {
   "shadows": "numpy.empty"
  },
  "type": "import"
 },
 "dipy.tracking.utils.eye": {
  "data": {
   "shadows": "numpy.eye"
  },
  "type": "import"
 },
 "dipy.tracking.utils.flexi_tvis_affine": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "dipy.io.bvectxt.orientation_from_string",
    "dipy.tracking.utils.affine_for_trackvis",
    "dipy.tracking.utils.reorder_voxels_affine",
    "nibabel.io_orientation",
    "numpy.array",
    "numpy.dot",
    "str"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.utils.get_flexi_tvis_affine": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "dipy.tracking.utils.flexi_tvis_affine"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.utils.length": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "dipy.tracking.metrics.length",
    "dipy.tracking.utils.move_streamlines",
    "dipy.utils.six.moves.map"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.utils.map": {
  "data": {
   "shadows": "dipy.utils.six.moves.map"
  },
  "type": "import"
 },
 "dipy.tracking.utils.metrics": {
  "data": {
   "shadows": "dipy.tracking.metrics"
  },
  "type": "import"
 },
 "dipy.tracking.utils.minimum_at": {
  "data": {
   "lineno": 1062
  },
  "type": "constant"
 },
 "dipy.tracking.utils.move_streamlines": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "dipy.tracking.utils._with_initialize",
    "numpy.dot",
    "numpy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.utils.ndbincount": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.bincount",
    "numpy.prod",
    "numpy.ravel_multi_index"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.utils.near_roi": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "bool",
    "dipy.core.geometry.dist_to_corner",
    "dipy.tracking.utils.streamline_near_roi",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "nibabel.affines.apply_affine",
    "numpy.array",
    "numpy.eye",
    "numpy.where",
    "numpy.zeros",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.utils.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.tracking.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.tracking.utils.orientation_from_string": {
  "data": {
   "shadows": "dipy.io.bvectxt.orientation_from_string"
  },
  "type": "import"
 },
 "dipy.tracking.utils.ornt_mapping": {
  "data": {
   "shadows": "dipy.io.bvectxt.ornt_mapping"
  },
  "type": "import"
 },
 "dipy.tracking.utils.path_length": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "bool",
    "dipy.tracking._utils._mapping_to_voxel",
    "dipy.tracking._utils._to_voxel_coordinates",
    "dipy.tracking.utils._as_segments",
    "dipy.tracking.utils.minimum_at",
    "float",
    "numpy.asarray",
    "numpy.empty",
    "numpy.inf",
    "numpy.sqrt",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.tracking.utils.random_seeds_from_mask": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "len",
    "numpy.argwhere",
    "numpy.array",
    "numpy.asarray",
    "numpy.dot",
    "numpy.random.random",
    "numpy.random.shuffle",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.utils.ravel_multi_index": {
  "data": {
   "shadows": "numpy.ravel_multi_index"
  },
  "type": "import"
 },
 "dipy.tracking.utils.reduce_labels": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.utils.reduce_rois": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.utils.reorder_voxels_affine": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "ValueError",
    "dipy.io.bvectxt.ornt_mapping",
    "dipy.utils.six.moves.map",
    "len",
    "numpy.asarray",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.utils.seeds_from_mask": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "numpy.argwhere",
    "numpy.array",
    "numpy.asarray",
    "numpy.dot",
    "numpy.empty",
    "numpy.mgrid",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.utils.setup_test": {
  "data": {
   "shadows": "dipy.testing.setup_test"
  },
  "type": "import"
 },
 "dipy.tracking.utils.sqrt": {
  "data": {
   "shadows": "numpy.sqrt"
  },
  "type": "import"
 },
 "dipy.tracking.utils.streamline_near_roi": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.all",
    "numpy.min",
    "numpy.vstack",
    "scipy.spatial.distance.cdist"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.utils.subsegment": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "dipy.utils.six.moves.xrange",
    "len",
    "numpy.ceil",
    "numpy.empty",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.utils.target": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "bool",
    "dipy.tracking._utils._mapping_to_voxel",
    "dipy.tracking._utils._to_voxel_coordinates",
    "dipy.tracking.utils._with_initialize",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.utils.target_line_based": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "dipy.tracking._utils._mapping_to_voxel",
    "dipy.tracking.utils._with_initialize",
    "dipy.tracking.vox2track._streamlines_in_mask",
    "numpy.array",
    "numpy.uint8",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.utils.unique_rows": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.lexsort",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "dipy.tracking.utils.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "dipy.tracking.utils.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "dipy.tracking.utils.xrange": {
  "data": {
   "shadows": "dipy.utils.six.moves.xrange"
  },
  "type": "import"
 },
 "dipy.utils": {
  "data": {},
  "type": "module"
 },
 "dipy.utils._importlib": {
  "data": {},
  "type": "module"
 },
 "dipy.utils._importlib._resolve_name": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "len",
    "xrange"
   ]
  },
  "type": "function"
 },
 "dipy.utils._importlib.import_module": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "TypeError",
    "__import__",
    "dipy.utils._importlib._resolve_name",
    "dipy.utils._importlib.sys"
   ]
  },
  "type": "function"
 },
 "dipy.utils._importlib.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "dipy.utils.arrfuncs": {
  "data": {
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "numpy.version.short_version"
   ]
  },
  "type": "module"
 },
 "dipy.utils.arrfuncs.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "dipy.utils.arrfuncs.NUMPY_LESS_1_8": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "dipy.utils.arrfuncs.as_native_array": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "nibabel.volumeutils.endian_codes",
    "nibabel.volumeutils.native_code"
   ]
  },
  "type": "function"
 },
 "dipy.utils.arrfuncs.eigh": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "dipy.utils.arrfuncs.NUMPY_LESS_1_8",
    "enumerate",
    "numpy.asarray",
    "numpy.empty",
    "numpy.linalg.eigh"
   ]
  },
  "type": "function"
 },
 "dipy.utils.arrfuncs.endian_codes": {
  "data": {
   "shadows": "nibabel.volumeutils.endian_codes"
  },
  "type": "import"
 },
 "dipy.utils.arrfuncs.native_code": {
  "data": {
   "shadows": "nibabel.volumeutils.native_code"
  },
  "type": "import"
 },
 "dipy.utils.arrfuncs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.utils.arrfuncs.pinv": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "dipy.utils.arrfuncs.NUMPY_LESS_1_8",
    "enumerate",
    "numpy.arange",
    "numpy.asarray",
    "numpy.einsum",
    "numpy.empty",
    "numpy.linalg.pinv",
    "numpy.linalg.svd",
    "numpy.maximum.reduce",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "dipy.utils.arrfuncs.swapped_code": {
  "data": {
   "shadows": "nibabel.volumeutils.swapped_code"
  },
  "type": "import"
 },
 "dipy.utils.arrfuncs.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "dipy.utils.optpkg": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dipy.utils.optpkg.have_nose"
   ]
  },
  "type": "module"
 },
 "dipy.utils.optpkg.OptionalImportError": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "class"
 },
 "dipy.utils.optpkg.TripWire": {
  "data": {
   "shadows": "dipy.utils.tripwire.TripWire"
  },
  "type": "import"
 },
 "dipy.utils.optpkg.have_nose": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "dipy.utils.optpkg.importlib": {
  "data": {
   "shadows": "dipy.utils._importlib"
  },
  "type": "import"
 },
 "dipy.utils.optpkg.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "dipy.utils.optpkg.optional_package": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ImportError",
    "dipy.utils._importlib.import_module",
    "dipy.utils.tripwire.TripWire"
   ]
  },
  "type": "function"
 },
 "dipy.utils.optpkg.optional_package.setup_module": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "dipy.utils.optpkg.have_nose",
    "dipy.utils.optpkg.nose"
   ]
  },
  "type": "function"
 },
 "dipy.utils.tests": {
  "data": {},
  "type": "module"
 },
 "dipy.utils.tests.test_arrfuncs": {
  "data": {
   "symbols_in_volume": [
    "dipy.utils.tests.test_arrfuncs.sys"
   ]
  },
  "type": "module"
 },
 "dipy.utils.tests.test_arrfuncs.NATIVE_ORDER": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "dipy.utils.tests.test_arrfuncs.SWAPPED_ORDER": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "dipy.utils.tests.test_arrfuncs.as_native_array": {
  "data": {
   "shadows": "dipy.utils.arrfuncs.as_native_array"
  },
  "type": "import"
 },
 "dipy.utils.tests.test_arrfuncs.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "dipy.utils.tests.test_arrfuncs.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "dipy.utils.tests.test_arrfuncs.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "dipy.utils.tests.test_arrfuncs.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "dipy.utils.tests.test_arrfuncs.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "dipy.utils.tests.test_arrfuncs.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "dipy.utils.tests.test_arrfuncs.eigh": {
  "data": {
   "shadows": "dipy.utils.arrfuncs.eigh"
  },
  "type": "import"
 },
 "dipy.utils.tests.test_arrfuncs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.utils.tests.test_arrfuncs.pinv": {
  "data": {
   "shadows": "dipy.utils.arrfuncs.pinv"
  },
  "type": "import"
 },
 "dipy.utils.tests.test_arrfuncs.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "dipy.utils.tests.test_arrfuncs.test_as_native": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "dipy.utils.arrfuncs.as_native_array",
    "dipy.utils.tests.test_arrfuncs.NATIVE_ORDER",
    "dipy.utils.tests.test_arrfuncs.SWAPPED_ORDER",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "dipy.utils.tests.test_arrfuncs.test_eigh": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "dipy.utils.arrfuncs.eigh",
    "numpy.linalg.eigh",
    "numpy.random.randn",
    "numpy.testing.assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.utils.tests.test_arrfuncs.test_pinv": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "dipy.utils.arrfuncs.pinv",
    "numpy.linalg.pinv",
    "numpy.random.randn",
    "numpy.testing.assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.utils.tests.test_omp": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.utils.tests.test_omp._restore_omp_threads": {
  "data": {
   "shadows": "dipy.utils.omp._restore_omp_threads"
  },
  "type": "import"
 },
 "dipy.utils.tests.test_omp._set_omp_threads": {
  "data": {
   "shadows": "dipy.utils.omp._set_omp_threads"
  },
  "type": "import"
 },
 "dipy.utils.tests.test_omp.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "dipy.utils.tests.test_omp.cpu_count": {
  "data": {
   "shadows": "dipy.utils.omp.cpu_count"
  },
  "type": "import"
 },
 "dipy.utils.tests.test_omp.default_threads": {
  "data": {
   "shadows": "dipy.utils.omp.default_threads"
  },
  "type": "import"
 },
 "dipy.utils.tests.test_omp.have_openmp": {
  "data": {
   "shadows": "dipy.utils.omp.have_openmp"
  },
  "type": "import"
 },
 "dipy.utils.tests.test_omp.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dipy.utils.tests.test_omp.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "dipy.utils.tests.test_omp.test_default_threads": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dipy.utils.omp.cpu_count",
    "dipy.utils.omp.default_threads",
    "dipy.utils.omp.have_openmp",
    "dipy.utils.tests.test_omp.os",
    "int",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.utils.tests.test_omp.test_set_omp_threads": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "dipy.utils.omp._restore_omp_threads",
    "dipy.utils.omp._set_omp_threads",
    "dipy.utils.omp.cpu_count",
    "dipy.utils.omp.default_threads",
    "dipy.utils.omp.have_openmp",
    "dipy.utils.omp.thread_count",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.utils.tests.test_omp.thread_count": {
  "data": {
   "shadows": "dipy.utils.omp.thread_count"
  },
  "type": "import"
 },
 "dipy.utils.tests.test_tripwire": {
  "data": {},
  "type": "module"
 },
 "dipy.utils.tests.test_tripwire.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "dipy.utils.tests.test_tripwire.TripWire": {
  "data": {
   "shadows": "dipy.utils.tripwire.TripWire"
  },
  "type": "import"
 },
 "dipy.utils.tests.test_tripwire.TripWireError": {
  "data": {
   "shadows": "dipy.utils.tripwire.TripWireError"
  },
  "type": "import"
 },
 "dipy.utils.tests.test_tripwire.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "dipy.utils.tests.test_tripwire.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "dipy.utils.tests.test_tripwire.assert_not_equal": {
  "data": {
   "shadows": "nose.tools.assert_not_equal"
  },
  "type": "import"
 },
 "dipy.utils.tests.test_tripwire.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "dipy.utils.tests.test_tripwire.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "dipy.utils.tests.test_tripwire.is_tripwire": {
  "data": {
   "shadows": "dipy.utils.tripwire.is_tripwire"
  },
  "type": "import"
 },
 "dipy.utils.tests.test_tripwire.test_is_tripwire": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "dipy.utils.tripwire.TripWire",
    "dipy.utils.tripwire.is_tripwire",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "object"
   ]
  },
  "type": "function"
 },
 "dipy.utils.tests.test_tripwire.test_tripwire": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "AttributeError",
    "RuntimeError",
    "dipy.utils.tripwire.TripWire",
    "dipy.utils.tripwire.TripWireError",
    "getattr",
    "isinstance",
    "nose.tools.assert_raises",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "dipy.utils.tripwire": {
  "data": {},
  "type": "module"
 },
 "dipy.utils.tripwire.TripWire": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.utils.tripwire.TripWire.__call__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "dipy.utils.tripwire.TripWireError"
   ]
  },
  "type": "function"
 },
 "dipy.utils.tripwire.TripWire.__getattr__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "dipy.utils.tripwire.TripWireError"
   ]
  },
  "type": "function"
 },
 "dipy.utils.tripwire.TripWire.__init__": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "dipy.utils.tripwire.TripWireError": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "class"
 },
 "dipy.utils.tripwire.is_tripwire": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "Exception",
    "dipy.utils.tripwire.TripWireError"
   ]
  },
  "type": "function"
 },
 "dipy.viz": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dipy.viz.e_s",
    "dipy.viz.has_mpl",
    "print"
   ]
  },
  "type": "module"
 },
 "dipy.viz.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.viz.actor": {
  "data": {
   "symbols_in_volume": [
    "dipy.utils.optpkg.optional_package"
   ]
  },
  "type": "module"
 },
 "dipy.viz.actor._arrow": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "dipy.viz.actor.major_version"
   ]
  },
  "type": "function"
 },
 "dipy.viz.actor._makeNd": {
  "data": {
   "lineno": 890
  },
  "type": "function"
 },
 "dipy.viz.actor._odf_slicer_mapper": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "dipy.viz.actor.major_version",
    "dipy.viz.colormap.create_colormap",
    "enumerate",
    "int",
    "len",
    "nibabel.affines.apply_affine",
    "numpy.abs",
    "numpy.array",
    "numpy.asarray",
    "numpy.ascontiguousarray",
    "numpy.concatenate",
    "numpy.hstack",
    "numpy.int",
    "numpy.nonzero",
    "numpy.ones",
    "numpy.reshape",
    "numpy.zeros",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "dipy.viz.actor._tensor_slicer_mapper": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "dipy.reconst.dti.color_fa",
    "dipy.reconst.dti.fractional_anisotropy",
    "dipy.viz.actor._makeNd",
    "dipy.viz.actor.major_version",
    "enumerate",
    "int",
    "len",
    "nibabel.affines.apply_affine",
    "numpy.array",
    "numpy.asarray",
    "numpy.ascontiguousarray",
    "numpy.concatenate",
    "numpy.diag",
    "numpy.dot",
    "numpy.hstack",
    "numpy.int",
    "numpy.interp",
    "numpy.nonzero",
    "numpy.ones",
    "numpy.reshape",
    "numpy.zeros",
    "tuple"
   ]
  },
  "type": "function"
 },
 "dipy.viz.actor.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.viz.actor.apply_affine": {
  "data": {
   "shadows": "nibabel.affines.apply_affine"
  },
  "type": "import"
 },
 "dipy.viz.actor.axes": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "dipy.viz.actor._arrow"
   ]
  },
  "type": "function"
 },
 "dipy.viz.actor.color_fa": {
  "data": {
   "shadows": "dipy.reconst.dti.color_fa"
  },
  "type": "import"
 },
 "dipy.viz.actor.colormap_lookup_table": {
  "data": {
   "shadows": "dipy.viz.colormap.colormap_lookup_table"
  },
  "type": "import"
 },
 "dipy.viz.actor.contour_from_roi": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "ValueError",
    "dipy.viz.actor.major_version",
    "dipy.viz.utils.set_input",
    "numpy.array",
    "numpy.ascontiguousarray",
    "numpy.eye",
    "numpy.interp",
    "numpy.prod",
    "numpy.reshape",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.swapaxes"
   ]
  },
  "type": "function"
 },
 "dipy.viz.actor.create_colormap": {
  "data": {
   "shadows": "dipy.viz.colormap.create_colormap"
  },
  "type": "import"
 },
 "dipy.viz.actor.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.viz.actor.dots": {
  "data": {
   "lineno": 1201,
   "symbols_in_volume": [
    "dipy.viz.actor.major_version"
   ]
  },
  "type": "function"
 },
 "dipy.viz.actor.fractional_anisotropy": {
  "data": {
   "shadows": "dipy.reconst.dti.fractional_anisotropy"
  },
  "type": "import"
 },
 "dipy.viz.actor.label": {
  "data": {
   "lineno": 1340,
   "symbols_in_volume": [
    "dipy.viz.actor.major_version"
   ]
  },
  "type": "function"
 },
 "dipy.viz.actor.line": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "dipy.viz.colormap.colormap_lookup_table",
    "dipy.viz.utils.lines_to_vtk_polydata",
    "dipy.viz.utils.set_input"
   ]
  },
  "type": "function"
 },
 "dipy.viz.actor.lines_to_vtk_polydata": {
  "data": {
   "shadows": "dipy.viz.utils.lines_to_vtk_polydata"
  },
  "type": "import"
 },
 "dipy.viz.actor.major_version": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "dipy.viz.actor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.viz.actor.odf_slicer": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "OdfSlicerActor",
    "int",
    "numpy.bool",
    "numpy.floor",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "dipy.viz.actor.odf_slicer.OdfSlicerActor": {
  "data": {
   "lineno": 727
  },
  "type": "class"
 },
 "dipy.viz.actor.odf_slicer.OdfSlicerActor.display": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "int",
    "numpy.floor"
   ]
  },
  "type": "function"
 },
 "dipy.viz.actor.odf_slicer.OdfSlicerActor.display_extent": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "dipy.viz.actor._odf_slicer_mapper",
    "numpy.bitwise_and",
    "numpy.bool",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.viz.actor.optional_package": {
  "data": {
   "shadows": "dipy.utils.optpkg.optional_package"
  },
  "type": "import"
 },
 "dipy.viz.actor.peak_slicer": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": [
    "PeakSlicerActor",
    "ValueError",
    "dipy.viz.actor._makeNd",
    "int",
    "numpy.array",
    "numpy.asarray",
    "numpy.bool",
    "numpy.floor",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "dipy.viz.actor.peak_slicer.PeakSlicerActor": {
  "data": {
   "lineno": 1143
  },
  "type": "class"
 },
 "dipy.viz.actor.peak_slicer.PeakSlicerActor.display": {
  "data": {
   "lineno": 1181,
   "symbols_in_volume": [
    "int",
    "numpy.floor"
   ]
  },
  "type": "function"
 },
 "dipy.viz.actor.peak_slicer.PeakSlicerActor.display_extent": {
  "data": {
   "lineno": 1145,
   "symbols_in_volume": [
    "dipy.viz.actor.line",
    "enumerate",
    "len",
    "nibabel.affines.apply_affine",
    "numpy.array",
    "numpy.ascontiguousarray",
    "numpy.bitwise_and",
    "numpy.bool",
    "numpy.nonzero",
    "numpy.vstack",
    "numpy.zeros",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "dipy.viz.actor.point": {
  "data": {
   "lineno": 1263,
   "symbols_in_volume": [
    "dipy.viz.actor.major_version",
    "len",
    "numpy.array",
    "numpy.tile",
    "round"
   ]
  },
  "type": "function"
 },
 "dipy.viz.actor.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.viz.actor.scalar_bar": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "dipy.viz.colormap.colormap_lookup_table"
   ]
  },
  "type": "function"
 },
 "dipy.viz.actor.set_input": {
  "data": {
   "shadows": "dipy.viz.utils.set_input"
  },
  "type": "import"
 },
 "dipy.viz.actor.slicer": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ImageActor",
    "ValueError",
    "dipy.viz.actor.major_version",
    "dipy.viz.colormap.colormap_lookup_table",
    "dipy.viz.utils.set_input",
    "numpy.ascontiguousarray",
    "numpy.eye",
    "numpy.interp",
    "numpy.prod",
    "numpy.reshape",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.swapaxes"
   ]
  },
  "type": "function"
 },
 "dipy.viz.actor.slicer.ImageActor": {
  "data": {
   "lineno": 138
  },
  "type": "class"
 },
 "dipy.viz.actor.slicer.ImageActor.__init__": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "dipy.viz.actor.slicer.ImageActor.copy": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "ImageActor",
    "dipy.viz.actor.major_version"
   ]
  },
  "type": "function"
 },
 "dipy.viz.actor.slicer.ImageActor.display": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "dipy.viz.actor.slicer.ImageActor.display_extent": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "dipy.viz.actor.slicer.ImageActor.input_connection": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "dipy.viz.actor.slicer.ImageActor.opacity": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "dipy.viz.actor.slicer.ImageActor.tolerance": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "dipy.viz.actor.streamtube": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "dipy.viz.colormap.colormap_lookup_table",
    "dipy.viz.utils.lines_to_vtk_polydata",
    "dipy.viz.utils.set_input"
   ]
  },
  "type": "function"
 },
 "dipy.viz.actor.tensor_slicer": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "TensorSlicerActor",
    "int",
    "numpy.bool",
    "numpy.floor",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "dipy.viz.actor.tensor_slicer.TensorSlicerActor": {
  "data": {
   "lineno": 936
  },
  "type": "class"
 },
 "dipy.viz.actor.tensor_slicer.TensorSlicerActor.display": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "int",
    "numpy.floor"
   ]
  },
  "type": "function"
 },
 "dipy.viz.actor.tensor_slicer.TensorSlicerActor.display_extent": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "dipy.viz.actor._tensor_slicer_mapper",
    "numpy.bitwise_and",
    "numpy.bool",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.viz.actor.version": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "dipy.viz.colormap": {
  "data": {
   "symbols_in_volume": [
    "dipy.utils.optpkg.optional_package"
   ]
  },
  "type": "module"
 },
 "dipy.viz.colormap.boys2rgb": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "dipy.viz.colormap.cc",
    "dipy.viz.colormap.ss",
    "len",
    "numpy.abs",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.viz.colormap.cc": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "dipy.viz.colormap.colormap_lookup_table": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "dipy.viz.colormap.create_colormap": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "colormap",
    "dipy.data.get_cmap",
    "dipy.viz.colormap.lowercase_cm_name",
    "numpy.clip",
    "numpy.interp",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "dipy.viz.colormap.get_cmap": {
  "data": {
   "shadows": "dipy.data.get_cmap"
  },
  "type": "import"
 },
 "dipy.viz.colormap.line_colors": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "dipy.viz.colormap.boys2rgb",
    "dipy.viz.colormap.orient2rgb",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "dipy.viz.colormap.lowercase_cm_name": {
  "data": {
   "lineno": 267
  },
  "type": "constant"
 },
 "dipy.viz.colormap.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.viz.colormap.optional_package": {
  "data": {
   "shadows": "dipy.utils.optpkg.optional_package"
  },
  "type": "import"
 },
 "dipy.viz.colormap.orient2rgb": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.linalg.norm",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "dipy.viz.colormap.ss": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "dipy.viz.colormap.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "dipy.viz.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.viz.e_s": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "dipy.viz.fvtk": {
  "data": {
   "symbols_in_volume": [
    "DeprecationWarning",
    "Exception",
    "__name__",
    "dipy.utils.optpkg.optional_package",
    "dipy.viz.fvtk.deprecation_msg",
    "dipy.viz.fvtk.major_version",
    "dipy.viz.fvtk.textActor",
    "dipy.viz.fvtk.textMapper",
    "dipy.viz.fvtk.tprop",
    "dipy.viz.window.ren",
    "warnings.warn"
   ]
  },
  "type": "module"
 },
 "dipy.viz.fvtk.VolumeMapper": {
  "data": {
   "shadows": "vtk.vtkSmartVolumeMapper"
  },
  "type": "import"
 },
 "dipy.viz.fvtk._makeNd": {
  "data": {
   "lineno": 513
  },
  "type": "function"
 },
 "dipy.viz.fvtk.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.viz.fvtk.add": {
  "data": {
   "shadows": "dipy.viz.window.add"
  },
  "type": "import"
 },
 "dipy.viz.fvtk.axes": {
  "data": {
   "shadows": "dipy.viz.actor.axes"
  },
  "type": "import"
 },
 "dipy.viz.fvtk.camera": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "DeprecationWarning",
    "dipy.viz.window.ren.GetActiveCamera",
    "print",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "dipy.viz.fvtk.clear": {
  "data": {
   "shadows": "dipy.viz.window.clear"
  },
  "type": "import"
 },
 "dipy.viz.fvtk.color_fa": {
  "data": {
   "shadows": "dipy.reconst.dti.color_fa"
  },
  "type": "import"
 },
 "dipy.viz.fvtk.contour": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "dipy.viz.fvtk.major_version",
    "enumerate",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.viz.fvtk.create_colormap": {
  "data": {
   "shadows": "dipy.viz.colormap.create_colormap"
  },
  "type": "import"
 },
 "dipy.viz.fvtk.deprecation_msg": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "dipy.viz.fvtk.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.viz.fvtk.dots": {
  "data": {
   "shadows": "dipy.viz.actor.dots"
  },
  "type": "import"
 },
 "dipy.viz.fvtk.fractional_anisotropy": {
  "data": {
   "shadows": "dipy.reconst.dti.fractional_anisotropy"
  },
  "type": "import"
 },
 "dipy.viz.fvtk.get_cmap": {
  "data": {
   "shadows": "dipy.data.get_cmap"
  },
  "type": "import"
 },
 "dipy.viz.fvtk.get_sphere": {
  "data": {
   "shadows": "dipy.data.get_sphere"
  },
  "type": "import"
 },
 "dipy.viz.fvtk.have_vtk_texture_mapper2D": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "dipy.viz.fvtk.ind_buffer": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "dipy.viz.fvtk.label": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "dipy.viz.fvtk.major_version",
    "dipy.viz.window.ren.AddActor",
    "dipy.viz.window.ren.GetActiveCamera"
   ]
  },
  "type": "function"
 },
 "dipy.viz.fvtk.line": {
  "data": {
   "shadows": "dipy.viz.actor.line"
  },
  "type": "import"
 },
 "dipy.viz.fvtk.major_version": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "dipy.viz.fvtk.ndindex": {
  "data": {
   "shadows": "dipy.core.ndindex.ndindex"
  },
  "type": "import"
 },
 "dipy.viz.fvtk.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.viz.fvtk.optional_package": {
  "data": {
   "shadows": "dipy.utils.optpkg.optional_package"
  },
  "type": "import"
 },
 "dipy.viz.fvtk.peaks": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "ValueError",
    "dipy.viz.actor.line",
    "dipy.viz.fvtk._makeNd",
    "numpy.array",
    "numpy.asarray",
    "numpy.ndindex",
    "numpy.vstack",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.viz.fvtk.picker": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "dipy.viz.fvtk.point": {
  "data": {
   "shadows": "dipy.viz.actor.point"
  },
  "type": "import"
 },
 "dipy.viz.fvtk.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.viz.fvtk.record": {
  "data": {
   "shadows": "dipy.viz.window.record"
  },
  "type": "import"
 },
 "dipy.viz.fvtk.ren": {
  "data": {
   "shadows": "dipy.viz.window.ren"
  },
  "type": "import"
 },
 "dipy.viz.fvtk.renderer": {
  "data": {
   "shadows": "dipy.viz.window.renderer"
  },
  "type": "import"
 },
 "dipy.viz.fvtk.rm": {
  "data": {
   "shadows": "dipy.viz.window.rm"
  },
  "type": "import"
 },
 "dipy.viz.fvtk.rm_all": {
  "data": {
   "shadows": "dipy.viz.window.rm_all"
  },
  "type": "import"
 },
 "dipy.viz.fvtk.show": {
  "data": {
   "shadows": "dipy.viz.window.show"
  },
  "type": "import"
 },
 "dipy.viz.fvtk.slicer": {
  "data": {
   "shadows": "dipy.viz.actor.slicer"
  },
  "type": "import"
 },
 "dipy.viz.fvtk.snapshot": {
  "data": {
   "shadows": "dipy.viz.window.snapshot"
  },
  "type": "import"
 },
 "dipy.viz.fvtk.sphere_funcs": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "dipy.utils.six.moves.xrange",
    "dipy.viz.colormap.create_colormap",
    "dipy.viz.fvtk._makeNd",
    "dipy.viz.fvtk.major_version",
    "int",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.interp",
    "numpy.ndindex"
   ]
  },
  "type": "function"
 },
 "dipy.viz.fvtk.streamtube": {
  "data": {
   "shadows": "dipy.viz.actor.streamtube"
  },
  "type": "import"
 },
 "dipy.viz.fvtk.tensor": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "ValueError",
    "dipy.core.ndindex.ndindex",
    "dipy.data.get_sphere",
    "dipy.reconst.dti.color_fa",
    "dipy.reconst.dti.fractional_anisotropy",
    "dipy.utils.six.moves.xrange",
    "dipy.viz.fvtk._makeNd",
    "dipy.viz.fvtk.major_version",
    "int",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.diag",
    "numpy.dot",
    "numpy.interp",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.viz.fvtk.textActor": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "dipy.viz.fvtk.textMapper": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "dipy.viz.fvtk.tmp_ren": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "dipy.viz.fvtk.tprop": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "dipy.viz.fvtk.track_buffer": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "dipy.viz.fvtk.volume": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ValueError",
    "bin",
    "dipy.viz.fvtk.have_vtk_texture_mapper2D",
    "dipy.viz.fvtk.major_version",
    "numpy.histogram",
    "numpy.interp",
    "numpy.vstack",
    "numpy.zeros",
    "print",
    "property",
    "property.SetColor",
    "property.SetInterpolationTypeToLinear",
    "property.SetInterpolationTypeToNearest",
    "property.SetScalarOpacity",
    "property.ShadeOn",
    "range",
    "vtk.vtkSmartVolumeMapper"
   ]
  },
  "type": "function"
 },
 "dipy.viz.fvtk.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "dipy.viz.fvtk.xrange": {
  "data": {
   "shadows": "dipy.utils.six.moves.xrange"
  },
  "type": "import"
 },
 "dipy.viz.has_mpl": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "dipy.viz.interactor": {
  "data": {
   "symbols_in_volume": [
    "dipy.utils.optpkg.optional_package",
    "object"
   ]
  },
  "type": "module"
 },
 "dipy.viz.interactor.CustomInteractorStyle": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "dipy.viz.interactor.vtkInteractorStyleUser"
   ]
  },
  "type": "class"
 },
 "dipy.viz.interactor.CustomInteractorStyle.SetInteractor": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "dipy.viz.interactor.CustomInteractorStyle.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "dipy.viz.interactor.Event",
    "set"
   ]
  },
  "type": "function"
 },
 "dipy.viz.interactor.CustomInteractorStyle.add_active_prop": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "dipy.viz.interactor.CustomInteractorStyle.add_callback": {
  "data": {
   "lineno": 282
  },
  "type": "function"
 },
 "dipy.viz.interactor.CustomInteractorStyle.add_callback._callback": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "callback"
   ]
  },
  "type": "function"
 },
 "dipy.viz.interactor.CustomInteractorStyle.force_render": {
  "data": {
   "lineno": 278
  },
  "type": "function"
 },
 "dipy.viz.interactor.CustomInteractorStyle.get_prop_at_event_position": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "dipy.viz.interactor.CustomInteractorStyle.on_char": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "dipy.viz.interactor.CustomInteractorStyle.on_key_press": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "dipy.viz.interactor.CustomInteractorStyle.on_key_release": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "dipy.viz.interactor.CustomInteractorStyle.on_left_button_down": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "dipy.viz.interactor.CustomInteractorStyle.on_left_button_up": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "dipy.viz.interactor.CustomInteractorStyle.on_middle_button_down": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "dipy.viz.interactor.CustomInteractorStyle.on_middle_button_up": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "dipy.viz.interactor.CustomInteractorStyle.on_mouse_move": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "dipy.viz.interactor.CustomInteractorStyle.on_mouse_wheel_backward": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "dipy.viz.interactor.CustomInteractorStyle.on_mouse_wheel_forward": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "dipy.viz.interactor.CustomInteractorStyle.on_right_button_down": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "dipy.viz.interactor.CustomInteractorStyle.on_right_button_up": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "dipy.viz.interactor.CustomInteractorStyle.propagate_event": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "dipy.viz.interactor.CustomInteractorStyle.remove_active_prop": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "dipy.viz.interactor.Event": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.viz.interactor.Event.__init__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "dipy.viz.interactor.Event.abort": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "dipy.viz.interactor.Event.abort_flag": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dipy.viz.interactor.Event.reset": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "dipy.viz.interactor.Event.update": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "dipy.viz.interactor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.viz.interactor.optional_package": {
  "data": {
   "shadows": "dipy.utils.optpkg.optional_package"
  },
  "type": "import"
 },
 "dipy.viz.interactor.vtkInteractorStyleUser": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "dipy.viz.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "dipy.viz.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.viz.projections": {
  "data": {
   "symbols_in_volume": [
    "dipy.utils.optpkg.optional_package"
   ]
  },
  "type": "module"
 },
 "dipy.viz.projections.Basemap": {
  "data": {
   "shadows": "mpl_toolkits.basemap.Basemap"
  },
  "type": "import"
 },
 "dipy.viz.projections.doctest_skip_parser": {
  "data": {
   "shadows": "dipy.testing.doctest_skip_parser"
  },
  "type": "import"
 },
 "dipy.viz.projections.geo": {
  "data": {
   "shadows": "dipy.core.geometry"
  },
  "type": "import"
 },
 "dipy.viz.projections.interp": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "dipy.viz.projections.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.viz.projections.optional_package": {
  "data": {
   "shadows": "dipy.utils.optpkg.optional_package"
  },
  "type": "import"
 },
 "dipy.viz.projections.sph_project": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "blue_interp",
    "dipy.core.geometry.cart2sphere",
    "dipy.core.geometry.sph2latlon",
    "dipy.testing.doctest_skip_parser",
    "float",
    "green_interp",
    "m",
    "m.pcolor",
    "m.plot",
    "mpl_toolkits.basemap.Basemap",
    "numpy.array",
    "numpy.dot",
    "numpy.matrix",
    "numpy.nanmax",
    "numpy.nanmin",
    "numpy.where",
    "red_interp",
    "scipy.interpolate.interp1d",
    "zip"
   ]
  },
  "type": "function"
 },
 "dipy.viz.regtools": {
  "data": {
   "symbols_in_volume": [
    "dipy.utils.optpkg.optional_package"
   ]
  },
  "type": "module"
 },
 "dipy.viz.regtools._tile_plot": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.viz.regtools.draw_lattice_2d": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.ndarray",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.viz.regtools.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.viz.regtools.optional_package": {
  "data": {
   "shadows": "dipy.utils.optpkg.optional_package"
  },
  "type": "import"
 },
 "dipy.viz.regtools.overlay_images": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "dipy.viz.regtools._tile_plot",
    "numpy.uint8",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.viz.regtools.overlay_slices": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "dipy.viz.regtools._tile_plot",
    "numpy.asarray",
    "numpy.float64",
    "numpy.uint8",
    "numpy.zeros",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.viz.regtools.plot_2d_diffeomorphic_map": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "dipy.viz.regtools.draw_lattice_2d",
    "numpy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "dipy.viz.regtools.plot_slices": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "dipy.viz.regtools._tile_plot",
    "numpy.array",
    "numpy.asarray",
    "numpy.float64",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests": {
  "data": {
   "symbols_in_volume": [
    "numpy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "dipy.viz.tests.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "dipy.viz.tests.test": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "dipy.viz.tests.test_actors": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.viz.actor.have_vtk",
    "dipy.viz.actor.have_vtk_colors",
    "dipy.viz.actor.major_version",
    "dipy.viz.tests.test_actors.os",
    "dipy.viz.tests.test_actors.skip_it",
    "dipy.viz.tests.test_actors.use_xvfb",
    "dipy.viz.window.have_imread",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.viz.tests.test_actors.CsaOdfModel": {
  "data": {
   "shadows": "dipy.reconst.shm.CsaOdfModel"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_actors.LocalTracking": {
  "data": {
   "shadows": "dipy.tracking.local.LocalTracking"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_actors.TemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.TemporaryDirectory"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_actors.ThresholdTissueClassifier": {
  "data": {
   "shadows": "dipy.tracking.local.ThresholdTissueClassifier"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_actors.actor": {
  "data": {
   "shadows": "dipy.viz.actor"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_actors.center_streamlines": {
  "data": {
   "shadows": "dipy.tracking.streamline.center_streamlines"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_actors.color_fa": {
  "data": {
   "shadows": "dipy.reconst.dti.color_fa"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_actors.default_sphere": {
  "data": {
   "shadows": "dipy.data.default_sphere"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_actors.fornix_streamlines": {
  "data": {
   "shadows": "dipy.align.tests.test_streamlinear.fornix_streamlines"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_actors.fractional_anisotropy": {
  "data": {
   "shadows": "dipy.reconst.dti.fractional_anisotropy"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_actors.get_sphere": {
  "data": {
   "shadows": "dipy.data.get_sphere"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_actors.line_colors": {
  "data": {
   "shadows": "dipy.viz.colormap.line_colors"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_actors.mkstemp": {
  "data": {
   "shadows": "tempfile.mkstemp"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_actors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_actors.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_actors.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_actors.peaks_from_model": {
  "data": {
   "shadows": "dipy.direction.peaks_from_model"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_actors.read_stanford_labels": {
  "data": {
   "shadows": "dipy.data.read_stanford_labels"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_actors.reslice": {
  "data": {
   "shadows": "dipy.align.reslice.reslice"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_actors.run_test": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "dipy.viz.tests.test_actors.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_actors.skip_it": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "dipy.viz.tests.test_actors.skip_slicer": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "dipy.viz.tests.test_actors.test_bundle_maps": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "dipy.align.tests.test_streamlinear.fornix_streamlines",
    "dipy.testing.decorators.xvfb_it",
    "dipy.tracking.streamline.center_streamlines",
    "dipy.tracking.streamline.transform_streamlines",
    "dipy.viz.actor.colormap_lookup_table",
    "dipy.viz.actor.line",
    "dipy.viz.actor.scalar_bar",
    "dipy.viz.actor.streamtube",
    "dipy.viz.tests.test_actors.run_test",
    "dipy.viz.window.add",
    "dipy.viz.window.analyze_renderer",
    "dipy.viz.window.analyze_snapshot",
    "dipy.viz.window.renderer",
    "dipy.viz.window.snapshot",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_actors.test_contour_from_roi": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "dipy.data.default_sphere",
    "dipy.data.read_stanford_labels",
    "dipy.direction.peaks_from_model",
    "dipy.reconst.shm.CsaOdfModel",
    "dipy.testing.decorators.xvfb_it",
    "dipy.tracking.local.LocalTracking",
    "dipy.tracking.local.ThresholdTissueClassifier",
    "dipy.tracking.utils.seeds_from_mask",
    "dipy.viz.actor.contour_from_roi",
    "dipy.viz.actor.line",
    "dipy.viz.colormap.line_colors",
    "dipy.viz.tests.test_actors.run_test",
    "dipy.viz.window.analyze_snapshot",
    "dipy.viz.window.ren",
    "dipy.viz.window.renderer",
    "dipy.viz.window.snapshot",
    "list",
    "numpy.array",
    "numpy.eye",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_actors.test_dots": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "dipy.testing.decorators.xvfb_it",
    "dipy.viz.actor.dots",
    "dipy.viz.tests.test_actors.run_test",
    "dipy.viz.window.Renderer",
    "dipy.viz.window.analyze_snapshot",
    "dipy.viz.window.show",
    "dipy.viz.window.snapshot",
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_actors.test_labels": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "dipy.testing.decorators.xvfb_it",
    "dipy.viz.actor.label",
    "dipy.viz.tests.test_actors.run_test",
    "dipy.viz.window.Renderer",
    "dipy.viz.window.show",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_actors.test_odf_slicer": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "dipy.data.get_sphere",
    "dipy.testing.decorators.xvfb_it",
    "dipy.viz.actor.axes",
    "dipy.viz.actor.odf_slicer",
    "dipy.viz.actor.slicer",
    "dipy.viz.tests.test_actors.os",
    "dipy.viz.tests.test_actors.run_test",
    "dipy.viz.window.Renderer",
    "dipy.viz.window.analyze_renderer",
    "dipy.viz.window.analyze_snapshot",
    "dipy.viz.window.show",
    "dipy.viz.window.snapshot",
    "numpy.eye",
    "numpy.float64",
    "numpy.memmap",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif",
    "numpy.zeros",
    "print",
    "range",
    "tempfile.mkstemp"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_actors.test_peak_slicer": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "dipy.testing.decorators.xvfb_it",
    "dipy.viz.actor.axes",
    "dipy.viz.actor.peak_slicer",
    "dipy.viz.tests.test_actors.run_test",
    "dipy.viz.window.Renderer",
    "dipy.viz.window.analyze_renderer",
    "dipy.viz.window.show",
    "numpy.array",
    "numpy.diag",
    "numpy.random.rand",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_actors.test_points": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "dipy.testing.decorators.xvfb_it",
    "dipy.viz.actor.point",
    "dipy.viz.tests.test_actors.run_test",
    "dipy.viz.window.Renderer",
    "dipy.viz.window.analyze_snapshot",
    "dipy.viz.window.show",
    "dipy.viz.window.snapshot",
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_actors.test_slicer": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "dipy.align.reslice.reslice",
    "dipy.testing.decorators.xvfb_it",
    "dipy.viz.actor.colormap_lookup_table",
    "dipy.viz.actor.slicer",
    "dipy.viz.tests.test_actors.os",
    "dipy.viz.tests.test_actors.run_test",
    "dipy.viz.tests.test_actors.scipy",
    "dipy.viz.tests.test_actors.skip_slicer",
    "dipy.viz.window.analyze_snapshot",
    "dipy.viz.window.renderer",
    "dipy.viz.window.snapshot",
    "nibabel.tmpdirs.TemporaryDirectory",
    "numpy.array",
    "numpy.diag",
    "numpy.eye",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.sum",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.testing.dec.skipif",
    "numpy.zeros",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_actors.test_streamtube_and_line_actors": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "dipy.testing.decorators.xvfb_it",
    "dipy.viz.actor.line",
    "dipy.viz.actor.streamtube",
    "dipy.viz.tests.test_actors.run_test",
    "dipy.viz.window.add",
    "dipy.viz.window.analyze_snapshot",
    "dipy.viz.window.renderer",
    "dipy.viz.window.snapshot",
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_actors.test_tensor_slicer": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "abs",
    "dipy.data.get_sphere",
    "dipy.reconst.dti.color_fa",
    "dipy.reconst.dti.fractional_anisotropy",
    "dipy.testing.decorators.xvfb_it",
    "dipy.viz.actor.tensor_slicer",
    "dipy.viz.tests.test_actors.run_test",
    "dipy.viz.window.Renderer",
    "dipy.viz.window.show",
    "numpy.array",
    "numpy.eye",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_actors.transform_streamlines": {
  "data": {
   "shadows": "dipy.tracking.streamline.transform_streamlines"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_actors.use_xvfb": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "dipy.viz.tests.test_actors.utils": {
  "data": {
   "shadows": "dipy.tracking.utils"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_actors.window": {
  "data": {
   "shadows": "dipy.viz.window"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_actors.xvfb_it": {
  "data": {
   "shadows": "dipy.testing.decorators.xvfb_it"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_fvtk": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.utils.optpkg.optional_package",
    "dipy.viz.tests.test_fvtk.matplotlib",
    "dipy.viz.tests.test_fvtk.os",
    "dipy.viz.tests.test_fvtk.use_xvfb",
    "distutils.version.LooseVersion",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.viz.tests.test_fvtk.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_fvtk.data": {
  "data": {
   "shadows": "dipy.data"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_fvtk.fvtk": {
  "data": {
   "shadows": "dipy.viz.fvtk"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_fvtk.get_sphere": {
  "data": {
   "shadows": "dipy.data.get_sphere"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_fvtk.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_fvtk.mpl_version": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "dipy.viz.tests.test_fvtk.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_fvtk.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_fvtk.optional_package": {
  "data": {
   "shadows": "dipy.utils.optpkg.optional_package"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_fvtk.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_fvtk.skip_it": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "dipy.viz.tests.test_fvtk.test_colormap": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "ValueError",
    "dipy.viz.fvtk.create_colormap",
    "numpy.allclose",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_fvtk.test_colormaps_matplotlib": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "dipy.data.get_cmap",
    "dipy.viz.fvtk.get_cmap",
    "dipy.viz.fvtk.have_matplotlib",
    "dipy.viz.tests.test_fvtk.mpl_version",
    "dipy.viz.tests.test_fvtk.warnings",
    "len",
    "numpy.random.random",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_fvtk.test_fvtk_ellipsoid": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "dipy.data.get_sphere",
    "dipy.testing.decorators.xvfb_it",
    "dipy.viz.fvtk.add",
    "dipy.viz.fvtk.have_vtk",
    "dipy.viz.fvtk.have_vtk_colors",
    "dipy.viz.fvtk.ren",
    "dipy.viz.fvtk.tensor",
    "dipy.viz.tests.test_fvtk.skip_it",
    "numpy.array",
    "numpy.eye",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_fvtk.test_fvtk_functions": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "dipy.testing.decorators.xvfb_it",
    "dipy.viz.fvtk.add",
    "dipy.viz.fvtk.camera",
    "dipy.viz.fvtk.clear",
    "dipy.viz.fvtk.have_vtk",
    "dipy.viz.fvtk.have_vtk_colors",
    "dipy.viz.fvtk.label",
    "dipy.viz.fvtk.line",
    "dipy.viz.fvtk.peaks",
    "dipy.viz.fvtk.ren",
    "dipy.viz.fvtk.rm_all",
    "dipy.viz.fvtk.slicer",
    "dipy.viz.fvtk.streamtube",
    "dipy.viz.fvtk.volume",
    "dipy.viz.tests.test_fvtk.skip_it",
    "numpy.random.rand",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_fvtk.use_xvfb": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "dipy.viz.tests.test_fvtk.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_fvtk.xvfb_it": {
  "data": {
   "shadows": "dipy.testing.decorators.xvfb_it"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_interactor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.utils.optpkg.optional_package",
    "dipy.viz.tests.test_interactor.os",
    "dipy.viz.tests.test_interactor.test_custom_interactor_style_events",
    "dipy.viz.tests.test_interactor.use_xvfb"
   ]
  },
  "type": "module"
 },
 "dipy.viz.tests.test_interactor.DATA_DIR": {
  "data": {
   "shadows": "dipy.data.DATA_DIR"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_interactor.actor": {
  "data": {
   "shadows": "dipy.viz.actor"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_interactor.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_interactor.interactor": {
  "data": {
   "shadows": "dipy.viz.interactor"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_interactor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_interactor.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_interactor.optional_package": {
  "data": {
   "shadows": "dipy.utils.optpkg.optional_package"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_interactor.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_interactor.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_interactor.skip_it": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "dipy.viz.tests.test_interactor.test_custom_interactor_style_events": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dipy.data.DATA_DIR",
    "dipy.testing.decorators.xvfb_it",
    "dipy.viz.actor.have_vtk_colors",
    "dipy.viz.actor.streamtube",
    "dipy.viz.interactor.CustomInteractorStyle",
    "dipy.viz.tests.test_interactor.skip_it",
    "dipy.viz.utils.set_input",
    "dipy.viz.window.Renderer",
    "dipy.viz.window.ShowManager",
    "list",
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif",
    "os.path.join",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_interactor.test_custom_interactor_style_events.counter": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "dipy.viz.tests.test_interactor.test_custom_interactor_style_events.follow_mouse": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "dipy.viz.tests.test_interactor.test_custom_interactor_style_events.scale_down_obj": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "counter",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_interactor.test_custom_interactor_style_events.scale_up_obj": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "counter",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_interactor.test_custom_interactor_style_events.toggle_visibility": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "dipy.viz.tests.test_interactor.use_xvfb": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "dipy.viz.tests.test_interactor.vtk_utils": {
  "data": {
   "shadows": "dipy.viz.utils"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_interactor.window": {
  "data": {
   "shadows": "dipy.viz.window"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_interactor.xvfb_it": {
  "data": {
   "shadows": "dipy.testing.decorators.xvfb_it"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_regtools": {
  "data": {
   "symbols_in_volume": [
    "dipy.utils.optpkg.optional_package"
   ]
  },
  "type": "module"
 },
 "dipy.viz.tests.test_regtools.SSDMetric": {
  "data": {
   "shadows": "dipy.align.metrics.SSDMetric"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_regtools.SymmetricDiffeomorphicRegistration": {
  "data": {
   "shadows": "dipy.align.imwarp.SymmetricDiffeomorphicRegistration"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_regtools.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_regtools.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_regtools.optional_package": {
  "data": {
   "shadows": "dipy.utils.optpkg.optional_package"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_regtools.regtools": {
  "data": {
   "shadows": "dipy.viz.regtools"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_regtools.test_plot_2d_diffeomorphic_map": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "dipy.align.imwarp.SymmetricDiffeomorphicRegistration",
    "dipy.align.metrics.SSDMetric",
    "dipy.viz.regtools.plot_2d_diffeomorphic_map",
    "numpy.random.rand",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_ui": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.utils.optpkg.optional_package",
    "dipy.viz.tests.test_ui.os",
    "dipy.viz.tests.test_ui.sys",
    "dipy.viz.tests.test_ui.test_ui_button_panel",
    "dipy.viz.tests.test_ui.test_ui_disk_slider_2d",
    "dipy.viz.tests.test_ui.test_ui_file_select_menu_2d",
    "dipy.viz.tests.test_ui.test_ui_line_slider_2d",
    "dipy.viz.tests.test_ui.test_ui_textbox",
    "dipy.viz.tests.test_ui.use_xvfb",
    "len",
    "print"
   ]
  },
  "type": "module"
 },
 "dipy.viz.tests.test_ui.DATA_DIR": {
  "data": {
   "shadows": "dipy.data.DATA_DIR"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_ui.EventCounter": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.viz.tests.test_ui.EventCounter.__init__": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "dipy.viz.tests.test_ui.EventCounter.check_counts": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_equal",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_ui.EventCounter.count": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "dipy.viz.tests.test_ui.EventCounter.load": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "dipy.viz.tests.test_ui.pickle",
    "open"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_ui.EventCounter.monitor": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "dipy.viz.tests.test_ui.EventCounter.save": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "dipy.viz.tests.test_ui.pickle",
    "open"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_ui.InTemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.InTemporaryDirectory"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_ui.UI": {
  "data": {
   "shadows": "dipy.viz.ui.UI"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_ui.fetch_viz_icons": {
  "data": {
   "shadows": "dipy.data.fetch_viz_icons"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_ui.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_ui.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_ui.optional_package": {
  "data": {
   "shadows": "dipy.utils.optpkg.optional_package"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_ui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_ui.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_ui.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_ui.read_viz_icons": {
  "data": {
   "shadows": "dipy.data.read_viz_icons"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_ui.skip_it": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "dipy.viz.tests.test_ui.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_ui.test_broken_ui_component": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "BrokenUI",
    "NotImplementedError",
    "dipy.testing.decorators.xvfb_it",
    "dipy.viz.tests.test_ui.skip_it",
    "numpy.testing.assert_raises",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_ui.test_broken_ui_component.BrokenUI": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "dipy.viz.ui.UI"
   ]
  },
  "type": "class"
 },
 "dipy.viz.tests.test_ui.test_broken_ui_component.BrokenUI.__init__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_ui.test_rectangle_2d": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "dipy.testing.decorators.xvfb_it",
    "dipy.viz.tests.test_ui.skip_it",
    "dipy.viz.ui.Rectangle2D",
    "dipy.viz.window.ShowManager",
    "dipy.viz.window.analyze_snapshot",
    "dipy.viz.window.snapshot",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_ui.test_text_block_2d": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "ValueError",
    "_check_property",
    "dipy.testing.decorators.xvfb_it",
    "dipy.viz.tests.test_ui.skip_it",
    "dipy.viz.ui.TextBlock2D",
    "numpy.testing.assert_raises",
    "numpy.testing.dec.skipif",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_ui.test_text_block_2d._check_property": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "getattr",
    "numpy.testing.assert_equal",
    "setattr"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_ui.test_text_block_2d_justification": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "dipy.data.DATA_DIR",
    "dipy.testing.decorators.xvfb_it",
    "dipy.viz.tests.test_ui.skip_it",
    "dipy.viz.ui.Rectangle2D",
    "dipy.viz.ui.TextBlock2D",
    "dipy.viz.window.ShowManager",
    "dipy.viz.window.snapshot",
    "numpy.load",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.dec.skipif",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_ui.test_ui_button_panel": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "dipy.data.DATA_DIR",
    "dipy.data.fetch_viz_icons",
    "dipy.data.read_viz_icons",
    "dipy.testing.decorators.xvfb_it",
    "dipy.viz.tests.test_ui.EventCounter",
    "dipy.viz.tests.test_ui.skip_it",
    "dipy.viz.ui.Button2D",
    "dipy.viz.ui.Panel2D",
    "dipy.viz.ui.Rectangle2D",
    "dipy.viz.ui.TextBlock2D",
    "dipy.viz.window.ShowManager",
    "list",
    "numpy.testing.assert_raises",
    "numpy.testing.dec.skipif",
    "os.path.join",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_ui.test_ui_button_panel.make_invisible": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "dipy.viz.tests.test_ui.test_ui_button_panel.modify_button_callback": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "dipy.viz.tests.test_ui.test_ui_disk_slider_2d": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "dipy.data.DATA_DIR",
    "dipy.testing.decorators.xvfb_it",
    "dipy.viz.tests.test_ui.EventCounter",
    "dipy.viz.tests.test_ui.skip_it",
    "dipy.viz.ui.DiskSlider2D",
    "dipy.viz.window.ShowManager",
    "list",
    "numpy.testing.dec.skipif",
    "os.path.join",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_ui.test_ui_file_select_menu_2d": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "dipy.data.DATA_DIR",
    "dipy.testing.decorators.xvfb_it",
    "dipy.viz.tests.test_ui.EventCounter",
    "dipy.viz.tests.test_ui.os",
    "dipy.viz.tests.test_ui.skip_it",
    "dipy.viz.ui.FileSelectMenu2D",
    "dipy.viz.window.ShowManager",
    "list",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif",
    "open",
    "os.path.join",
    "print",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_ui.test_ui_line_slider_2d": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "dipy.data.DATA_DIR",
    "dipy.testing.decorators.xvfb_it",
    "dipy.viz.tests.test_ui.EventCounter",
    "dipy.viz.tests.test_ui.skip_it",
    "dipy.viz.ui.LineSlider2D",
    "dipy.viz.window.ShowManager",
    "list",
    "numpy.testing.dec.skipif",
    "os.path.join",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_ui.test_ui_textbox": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "dipy.data.DATA_DIR",
    "dipy.testing.decorators.xvfb_it",
    "dipy.viz.tests.test_ui.EventCounter",
    "dipy.viz.tests.test_ui.skip_it",
    "dipy.viz.ui.TextBox2D",
    "dipy.viz.window.ShowManager",
    "list",
    "numpy.testing.dec.skipif",
    "os.path.join",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_ui.test_wrong_interactor_style": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "TypeError",
    "dipy.testing.decorators.xvfb_it",
    "dipy.viz.tests.test_ui.skip_it",
    "dipy.viz.ui.Panel2D",
    "dipy.viz.window.Renderer",
    "dipy.viz.window.ShowManager",
    "numpy.testing.assert_raises",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_ui.ui": {
  "data": {
   "shadows": "dipy.viz.ui"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_ui.use_xvfb": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "dipy.viz.tests.test_ui.window": {
  "data": {
   "shadows": "dipy.viz.window"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_ui.xvfb_it": {
  "data": {
   "shadows": "dipy.testing.decorators.xvfb_it"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.viz.tests.test_utils.map_coordinates_3d_4d": {
  "data": {
   "shadows": "dipy.viz.utils.map_coordinates_3d_4d"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_utils.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_utils.test_trilinear_interp": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "dipy.viz.tests.test_utils.trilinear_interp_numpy",
    "dipy.viz.utils.map_coordinates_3d_4d",
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_utils.trilinear_interp_numpy": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "ValueError",
    "numpy.expand_dims",
    "numpy.integer",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_widgets": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.viz.tests.test_widgets.os",
    "dipy.viz.tests.test_widgets.use_xvfb",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.viz.tests.test_widgets.DATA_DIR": {
  "data": {
   "shadows": "dipy.data.DATA_DIR"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_widgets.actor": {
  "data": {
   "shadows": "dipy.viz.actor"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_widgets.fetch_viz_icons": {
  "data": {
   "shadows": "dipy.data.fetch_viz_icons"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_widgets.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_widgets.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_widgets.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_widgets.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_widgets.read_viz_icons": {
  "data": {
   "shadows": "dipy.data.read_viz_icons"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_widgets.skip_it": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "dipy.viz.tests.test_widgets.test_button_and_slider_widgets": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "dipy.data.DATA_DIR",
    "dipy.data.fetch_viz_icons",
    "dipy.data.read_viz_icons",
    "dipy.testing.decorators.xvfb_it",
    "dipy.viz.actor.have_vtk",
    "dipy.viz.actor.have_vtk_colors",
    "dipy.viz.actor.streamtube",
    "dipy.viz.tests.test_widgets.skip_it",
    "dipy.viz.widget.button",
    "dipy.viz.widget.slider",
    "dipy.viz.window.Renderer",
    "dipy.viz.window.ShowManager",
    "dipy.viz.window.analyze_renderer",
    "dipy.viz.window.analyze_snapshot",
    "dipy.viz.window.snapshot",
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif",
    "os.path.join",
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_widgets.test_button_and_slider_widgets.button_callback": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_widgets.test_button_and_slider_widgets.button_minus_callback": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_widgets.test_button_and_slider_widgets.button_plus_callback": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_widgets.test_button_and_slider_widgets.print_status": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "dipy.viz.tests.test_widgets.test_text_widget": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "dipy.data.fetch_viz_icons",
    "dipy.data.read_viz_icons",
    "dipy.testing.decorators.xvfb_it",
    "dipy.viz.actor.axes",
    "dipy.viz.actor.have_vtk",
    "dipy.viz.actor.have_vtk_colors",
    "dipy.viz.tests.test_widgets.skip_it",
    "dipy.viz.widget.button",
    "dipy.viz.widget.text",
    "dipy.viz.window.Renderer",
    "dipy.viz.window.ShowManager",
    "dipy.viz.window.add",
    "dipy.viz.window.analyze_snapshot",
    "dipy.viz.window.snapshot",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_widgets.test_text_widget.button_callback": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_widgets.test_text_widget.text_callback": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_widgets.use_xvfb": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "dipy.viz.tests.test_widgets.widget": {
  "data": {
   "shadows": "dipy.viz.widget"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_widgets.window": {
  "data": {
   "shadows": "dipy.viz.window"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_widgets.xvfb_it": {
  "data": {
   "shadows": "dipy.testing.decorators.xvfb_it"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_window": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.viz.tests.test_window.os",
    "dipy.viz.tests.test_window.use_xvfb",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.viz.tests.test_window.actor": {
  "data": {
   "shadows": "dipy.viz.actor"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_window.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_window.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_window.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_window.skip_it": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "dipy.viz.tests.test_window.test_active_camera": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "dipy.testing.decorators.xvfb_it",
    "dipy.viz.actor.axes",
    "dipy.viz.actor.have_vtk",
    "dipy.viz.actor.have_vtk_colors",
    "dipy.viz.tests.test_window.skip_it",
    "dipy.viz.window.Renderer",
    "dipy.viz.window.analyze_snapshot",
    "dipy.viz.window.snapshot",
    "numpy.dot",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_window.test_order_transparent": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "dipy.testing.decorators.xvfb_it",
    "dipy.viz.actor.have_vtk",
    "dipy.viz.actor.have_vtk_colors",
    "dipy.viz.actor.streamtube",
    "dipy.viz.tests.test_window.os",
    "dipy.viz.tests.test_window.skip_it",
    "dipy.viz.window.Renderer",
    "dipy.viz.window.snapshot",
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_window.test_parallel_projection": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "dipy.testing.decorators.xvfb_it",
    "dipy.viz.actor.axes",
    "dipy.viz.actor.have_vtk",
    "dipy.viz.actor.have_vtk_colors",
    "dipy.viz.tests.test_window.skip_it",
    "dipy.viz.window.Renderer",
    "dipy.viz.window.snapshot",
    "numpy.sum",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_window.test_renderer": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "dipy.testing.decorators.xvfb_it",
    "dipy.viz.actor.axes",
    "dipy.viz.actor.have_vtk",
    "dipy.viz.actor.have_vtk_colors",
    "dipy.viz.tests.test_window.skip_it",
    "dipy.viz.window.Renderer",
    "dipy.viz.window.add",
    "dipy.viz.window.analyze_renderer",
    "dipy.viz.window.analyze_snapshot",
    "dipy.viz.window.renderer",
    "dipy.viz.window.rm",
    "dipy.viz.window.snapshot",
    "numpy.array",
    "numpy.round",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif",
    "tuple"
   ]
  },
  "type": "function"
 },
 "dipy.viz.tests.test_window.use_xvfb": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "dipy.viz.tests.test_window.window": {
  "data": {
   "shadows": "dipy.viz.window"
  },
  "type": "import"
 },
 "dipy.viz.tests.test_window.xvfb_it": {
  "data": {
   "shadows": "dipy.testing.decorators.xvfb_it"
  },
  "type": "import"
 },
 "dipy.viz.ui": {
  "data": {
   "symbols_in_volume": [
    "dipy.utils.optpkg.optional_package",
    "numpy.pi"
   ]
  },
  "type": "module"
 },
 "dipy.viz.ui.Button2D": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "dipy.viz.ui.UI"
   ]
  },
  "type": "class"
 },
 "dipy.viz.ui.Button2D.__build_icons": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "Warning",
    "_warnings.warn"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.Button2D.__init__": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "dict",
    "dipy.viz.ui.Button2D",
    "list",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.Button2D.build_actor": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "dipy.viz.ui.major_version"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.Button2D.color": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "dipy.viz.ui.Button2D.get_actors": {
  "data": {
   "lineno": 380
  },
  "type": "function"
 },
 "dipy.viz.ui.Button2D.next_icon": {
  "data": {
   "lineno": 408
  },
  "type": "function"
 },
 "dipy.viz.ui.Button2D.next_icon_name": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.Button2D.scale": {
  "data": {
   "lineno": 308
  },
  "type": "function"
 },
 "dipy.viz.ui.Button2D.set_center": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.Button2D.set_icon": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "dipy.viz.ui.major_version"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.Button2D.size": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.CustomInteractorStyle": {
  "data": {
   "shadows": "dipy.viz.interactor.CustomInteractorStyle"
  },
  "type": "import"
 },
 "dipy.viz.ui.DiskSlider2D": {
  "data": {
   "lineno": 1863,
   "symbols_in_volume": [
    "dipy.viz.ui.UI"
   ]
  },
  "type": "class"
 },
 "dipy.viz.ui.DiskSlider2D.__init__": {
  "data": {
   "lineno": 1889,
   "symbols_in_volume": [
    "dipy.viz.ui.DiskSlider2D",
    "numpy.array",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.DiskSlider2D.angle": {
  "data": {
   "lineno": 2016,
   "symbols_in_volume": [
    "dipy.viz.ui.TWO_PI"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.DiskSlider2D.base_disk_click_callback": {
  "data": {
   "lineno": 2090,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.DiskSlider2D.build_actors": {
  "data": {
   "lineno": 1949,
   "symbols_in_volume": [
    "dipy.viz.ui.TextBlock2D",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.DiskSlider2D.format_text": {
  "data": {
   "lineno": 2021,
   "symbols_in_volume": [
    "callable",
    "numpy.rad2deg"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.DiskSlider2D.get_actors": {
  "data": {
   "lineno": 2052
  },
  "type": "function"
 },
 "dipy.viz.ui.DiskSlider2D.handle_events": {
  "data": {
   "lineno": 2138
  },
  "type": "function"
 },
 "dipy.viz.ui.DiskSlider2D.handle_move_callback": {
  "data": {
   "lineno": 2107,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.DiskSlider2D.handle_press_callback": {
  "data": {
   "lineno": 2124,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.DiskSlider2D.move_handle": {
  "data": {
   "lineno": 2058,
   "symbols_in_volume": [
    "dipy.viz.ui.TWO_PI",
    "numpy.arctan2",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.DiskSlider2D.previous_value": {
  "data": {
   "lineno": 1999
  },
  "type": "function"
 },
 "dipy.viz.ui.DiskSlider2D.ratio": {
  "data": {
   "lineno": 2007,
   "symbols_in_volume": [
    "dipy.viz.ui.TWO_PI"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.DiskSlider2D.set_center": {
  "data": {
   "lineno": 2074,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.DiskSlider2D.update": {
  "data": {
   "lineno": 2029,
   "symbols_in_volume": [
    "dipy.viz.ui.TWO_PI",
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.DiskSlider2D.value": {
  "data": {
   "lineno": 1990
  },
  "type": "function"
 },
 "dipy.viz.ui.FileSelectMenu2D": {
  "data": {
   "lineno": 2152,
   "symbols_in_volume": [
    "dipy.viz.ui.UI"
   ]
  },
  "type": "class"
 },
 "dipy.viz.ui.FileSelectMenu2D.__init__": {
  "data": {
   "lineno": 2183,
   "symbols_in_volume": [
    "dict",
    "dipy.viz.ui.FileSelectMenu2D",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.FileSelectMenu2D.add_to_renderer": {
  "data": {
   "lineno": 2230,
   "symbols_in_volume": [
    "dipy.viz.ui.FileSelectMenu2D",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.FileSelectMenu2D.build_actors": {
  "data": {
   "lineno": 2242,
   "symbols_in_volume": [
    "dipy.data.read_viz_icons",
    "dipy.viz.ui.Button2D",
    "dipy.viz.ui.FileSelectMenuText2D",
    "dipy.viz.ui.Panel2D",
    "float",
    "int",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.FileSelectMenu2D.down_button_callback": {
  "data": {
   "lineno": 2307,
   "symbols_in_volume": [
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.FileSelectMenu2D.fill_text_actors": {
  "data": {
   "lineno": 2329
  },
  "type": "function"
 },
 "dipy.viz.ui.FileSelectMenu2D.get_actors": {
  "data": {
   "lineno": 2236
  },
  "type": "function"
 },
 "dipy.viz.ui.FileSelectMenu2D.get_all_file_names": {
  "data": {
   "lineno": 2354
  },
  "type": "function"
 },
 "dipy.viz.ui.FileSelectMenu2D.get_directory_names": {
  "data": {
   "lineno": 2375,
   "symbols_in_volume": [
    "dipy.viz.ui.os",
    "next"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.FileSelectMenu2D.get_file_names": {
  "data": {
   "lineno": 2393,
   "symbols_in_volume": [
    "dipy.viz.ui.glob",
    "dipy.viz.ui.os"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.FileSelectMenu2D.handle_events": {
  "data": {
   "lineno": 2433
  },
  "type": "function"
 },
 "dipy.viz.ui.FileSelectMenu2D.select_file": {
  "data": {
   "lineno": 2411
  },
  "type": "function"
 },
 "dipy.viz.ui.FileSelectMenu2D.set_center": {
  "data": {
   "lineno": 2422
  },
  "type": "function"
 },
 "dipy.viz.ui.FileSelectMenu2D.up_button_callback": {
  "data": {
   "lineno": 2284,
   "symbols_in_volume": [
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.FileSelectMenuText2D": {
  "data": {
   "lineno": 2457,
   "symbols_in_volume": [
    "dipy.viz.ui.UI"
   ]
  },
  "type": "class"
 },
 "dipy.viz.ui.FileSelectMenuText2D.__init__": {
  "data": {
   "lineno": 2473,
   "symbols_in_volume": [
    "dipy.viz.ui.FileSelectMenuText2D",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.FileSelectMenuText2D.build_actor": {
  "data": {
   "lineno": 2497,
   "symbols_in_volume": [
    "dipy.viz.ui.TextBlock2D"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.FileSelectMenuText2D.get_actors": {
  "data": {
   "lineno": 2551
  },
  "type": "function"
 },
 "dipy.viz.ui.FileSelectMenuText2D.left_button_clicked": {
  "data": {
   "lineno": 2599,
   "symbols_in_volume": [
    "dipy.viz.ui.os",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.FileSelectMenuText2D.mark_selected": {
  "data": {
   "lineno": 2589
  },
  "type": "function"
 },
 "dipy.viz.ui.FileSelectMenuText2D.set_attributes": {
  "data": {
   "lineno": 2557
  },
  "type": "function"
 },
 "dipy.viz.ui.FileSelectMenuText2D.set_center": {
  "data": {
   "lineno": 2629
  },
  "type": "function"
 },
 "dipy.viz.ui.LineSlider2D": {
  "data": {
   "lineno": 1575,
   "symbols_in_volume": [
    "dipy.viz.ui.UI"
   ]
  },
  "type": "class"
 },
 "dipy.viz.ui.LineSlider2D.__init__": {
  "data": {
   "lineno": 1604,
   "symbols_in_volume": [
    "dipy.viz.ui.LineSlider2D",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.LineSlider2D.build_actors": {
  "data": {
   "lineno": 1664,
   "symbols_in_volume": [
    "dipy.viz.ui.Rectangle2D",
    "dipy.viz.ui.TextBlock2D"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.LineSlider2D.disk_move_callback": {
  "data": {
   "lineno": 1831,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.LineSlider2D.disk_press_callback": {
  "data": {
   "lineno": 1817,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.LineSlider2D.format_text": {
  "data": {
   "lineno": 1751,
   "symbols_in_volume": [
    "callable"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.LineSlider2D.get_actors": {
  "data": {
   "lineno": 1707
  },
  "type": "function"
 },
 "dipy.viz.ui.LineSlider2D.handle_events": {
  "data": {
   "lineno": 1848
  },
  "type": "function"
 },
 "dipy.viz.ui.LineSlider2D.line_click_callback": {
  "data": {
   "lineno": 1800,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.LineSlider2D.ratio": {
  "data": {
   "lineno": 1746
  },
  "type": "function"
 },
 "dipy.viz.ui.LineSlider2D.set_center": {
  "data": {
   "lineno": 1781
  },
  "type": "function"
 },
 "dipy.viz.ui.LineSlider2D.set_position": {
  "data": {
   "lineno": 1713
  },
  "type": "function"
 },
 "dipy.viz.ui.LineSlider2D.update": {
  "data": {
   "lineno": 1758,
   "symbols_in_volume": [
    "float",
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.LineSlider2D.value": {
  "data": {
   "lineno": 1737
  },
  "type": "function"
 },
 "dipy.viz.ui.Panel2D": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "dipy.viz.ui.UI"
   ]
  },
  "type": "class"
 },
 "dipy.viz.ui.Panel2D.__init__": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "dipy.viz.ui.Panel2D",
    "dipy.viz.ui.Rectangle2D",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.Panel2D.add_element": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.Panel2D.add_to_renderer": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "dipy.viz.ui.Panel2D",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.Panel2D.get_actors": {
  "data": {
   "lineno": 662
  },
  "type": "function"
 },
 "dipy.viz.ui.Panel2D.left_button_dragged": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.Panel2D.left_button_pressed": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.Panel2D.re_align": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.Panel2D.set_center": {
  "data": {
   "lineno": 694
  },
  "type": "function"
 },
 "dipy.viz.ui.Rectangle2D": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "dipy.viz.ui.UI"
   ]
  },
  "type": "class"
 },
 "dipy.viz.ui.Rectangle2D.__init__": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "dipy.viz.ui.Rectangle2D",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.Rectangle2D.build_actor": {
  "data": {
   "lineno": 470
  },
  "type": "function"
 },
 "dipy.viz.ui.Rectangle2D.color": {
  "data": {
   "lineno": 542
  },
  "type": "function"
 },
 "dipy.viz.ui.Rectangle2D.get_actors": {
  "data": {
   "lineno": 464
  },
  "type": "function"
 },
 "dipy.viz.ui.Rectangle2D.opacity": {
  "data": {
   "lineno": 561
  },
  "type": "function"
 },
 "dipy.viz.ui.Rectangle2D.position": {
  "data": {
   "lineno": 585
  },
  "type": "function"
 },
 "dipy.viz.ui.Rectangle2D.set_center": {
  "data": {
   "lineno": 522
  },
  "type": "function"
 },
 "dipy.viz.ui.Rectangle2D.set_position": {
  "data": {
   "lineno": 519
  },
  "type": "function"
 },
 "dipy.viz.ui.TWO_PI": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "dipy.viz.ui.TextBlock2D": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "dipy.viz.ui.UI"
   ]
  },
  "type": "class"
 },
 "dipy.viz.ui.TextBlock2D.__init__": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "dipy.viz.ui.TextBlock2D",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBlock2D.background_color": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": [
    "dipy.viz.ui.major_version"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBlock2D.bold": {
  "data": {
   "lineno": 1021
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBlock2D.color": {
  "data": {
   "lineno": 1093
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBlock2D.font_family": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBlock2D.font_size": {
  "data": {
   "lineno": 888
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBlock2D.get_actor": {
  "data": {
   "lineno": 833
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBlock2D.get_actors": {
  "data": {
   "lineno": 843
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBlock2D.italic": {
  "data": {
   "lineno": 1045
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBlock2D.justification": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBlock2D.message": {
  "data": {
   "lineno": 864
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBlock2D.position": {
  "data": {
   "lineno": 1170
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBlock2D.set_center": {
  "data": {
   "lineno": 1184
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBlock2D.shadow": {
  "data": {
   "lineno": 1069
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBlock2D.vertical_justification": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBox2D": {
  "data": {
   "lineno": 1195,
   "symbols_in_volume": [
    "dipy.viz.ui.UI"
   ]
  },
  "type": "class"
 },
 "dipy.viz.ui.TextBox2D.__init__": {
  "data": {
   "lineno": 1224,
   "symbols_in_volume": [
    "dipy.viz.ui.TextBox2D",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBox2D.add_character": {
  "data": {
   "lineno": 1428,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBox2D.build_actor": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "dipy.viz.ui.TextBlock2D",
    "dipy.viz.ui.major_version"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBox2D.edit_mode": {
  "data": {
   "lineno": 1519
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBox2D.get_actors": {
  "data": {
   "lineno": 1335
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBox2D.handle_character": {
  "data": {
   "lineno": 1364
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBox2D.key_press": {
  "data": {
   "lineno": 1555,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBox2D.left_button_press": {
  "data": {
   "lineno": 1539,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBox2D.left_move_left": {
  "data": {
   "lineno": 1421
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBox2D.left_move_right": {
  "data": {
   "lineno": 1414,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBox2D.move_caret_left": {
  "data": {
   "lineno": 1394,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBox2D.move_caret_right": {
  "data": {
   "lineno": 1388,
   "symbols_in_volume": [
    "len",
    "min"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBox2D.move_left": {
  "data": {
   "lineno": 1465
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBox2D.move_right": {
  "data": {
   "lineno": 1476
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBox2D.remove_character": {
  "data": {
   "lineno": 1449,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBox2D.render_text": {
  "data": {
   "lineno": 1505
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBox2D.right_move_left": {
  "data": {
   "lineno": 1407
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBox2D.right_move_right": {
  "data": {
   "lineno": 1400,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBox2D.set_center": {
  "data": {
   "lineno": 1529
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBox2D.set_message": {
  "data": {
   "lineno": 1319,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBox2D.showable_text": {
  "data": {
   "lineno": 1487
  },
  "type": "function"
 },
 "dipy.viz.ui.TextBox2D.width_set_text": {
  "data": {
   "lineno": 1341,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.UI": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.viz.ui.UI.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.UI.add_callback": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "dipy.viz.ui.UI.add_to_renderer": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "TypeError",
    "dipy.viz.interactor.CustomInteractorStyle",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.UI.get_actors": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.UI.handle_events": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "dipy.viz.ui.UI.key_press_callback": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.UI.left_button_click_callback": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.UI.left_button_release_callback": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.UI.mouse_move_callback": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.UI.right_button_click_callback": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.UI.right_button_release_callback": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.UI.set_center": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "dipy.viz.ui.UI.set_visibility": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "dipy.viz.ui.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.viz.ui.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "dipy.viz.ui.major_version": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "dipy.viz.ui.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.viz.ui.optional_package": {
  "data": {
   "shadows": "dipy.utils.optpkg.optional_package"
  },
  "type": "import"
 },
 "dipy.viz.ui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dipy.viz.ui.read_viz_icons": {
  "data": {
   "shadows": "dipy.data.read_viz_icons"
  },
  "type": "import"
 },
 "dipy.viz.ui.version": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "dipy.viz.ui.warn": {
  "data": {
   "shadows": "_warnings.warn"
  },
  "type": "import"
 },
 "dipy.viz.utils": {
  "data": {
   "symbols_in_volume": [
    "dipy.utils.optpkg.optional_package"
   ]
  },
  "type": "module"
 },
 "dipy.viz.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.viz.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.viz.utils.get_actor_from_polydata": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "dipy.viz.utils.get_actor_from_polymapper",
    "dipy.viz.utils.get_polymapper_from_polydata"
   ]
  },
  "type": "function"
 },
 "dipy.viz.utils.get_actor_from_polymapper": {
  "data": {
   "lineno": 438
  },
  "type": "function"
 },
 "dipy.viz.utils.get_polydata_colors": {
  "data": {
   "lineno": 318
  },
  "type": "function"
 },
 "dipy.viz.utils.get_polydata_lines": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.viz.utils.get_polydata_normals": {
  "data": {
   "lineno": 298
  },
  "type": "function"
 },
 "dipy.viz.utils.get_polydata_triangles": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "dipy.viz.utils.get_polydata_vertices": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "dipy.viz.utils.get_polymapper_from_polydata": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "dipy.viz.utils.set_input"
   ]
  },
  "type": "function"
 },
 "dipy.viz.utils.line_colors": {
  "data": {
   "shadows": "dipy.viz.colormap.line_colors"
  },
  "type": "import"
 },
 "dipy.viz.utils.lines_to_vtk_polydata": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "dipy.viz.colormap.line_colors",
    "dipy.viz.utils.map_coordinates_3d_4d",
    "dipy.viz.utils.numpy_to_vtk_colors",
    "dipy.viz.utils.numpy_to_vtk_points",
    "enumerate",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.intp",
    "numpy.object",
    "numpy.repeat",
    "numpy.tile",
    "numpy.vstack",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.viz.utils.map_coordinates": {
  "data": {
   "shadows": "scipy.ndimage.map_coordinates"
  },
  "type": "import"
 },
 "dipy.viz.utils.map_coordinates_3d_4d": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.ascontiguousarray",
    "range",
    "scipy.ndimage.map_coordinates"
   ]
  },
  "type": "function"
 },
 "dipy.viz.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.viz.utils.numpy_to_vtk_colors": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "dipy.viz.utils.numpy_to_vtk_points": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "dipy.viz.utils.optional_package": {
  "data": {
   "shadows": "dipy.utils.optpkg.optional_package"
  },
  "type": "import"
 },
 "dipy.viz.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.viz.utils.set_input": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "dipy.viz.utils.set_polydata_colors": {
  "data": {
   "lineno": 382
  },
  "type": "function"
 },
 "dipy.viz.utils.set_polydata_normals": {
  "data": {
   "lineno": 369
  },
  "type": "function"
 },
 "dipy.viz.utils.set_polydata_triangles": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "len",
    "numpy.c_",
    "numpy.hstack",
    "numpy.int",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "dipy.viz.utils.set_polydata_vertices": {
  "data": {
   "lineno": 355
  },
  "type": "function"
 },
 "dipy.viz.utils.update_polydata_normals": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "dipy.viz.utils.set_input"
   ]
  },
  "type": "function"
 },
 "dipy.viz.widget": {
  "data": {
   "symbols_in_volume": [
    "dipy.utils.optpkg.optional_package"
   ]
  },
  "type": "module"
 },
 "dipy.viz.widget.button": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ButtonWidget"
   ]
  },
  "type": "function"
 },
 "dipy.viz.widget.button.ButtonWidget": {
  "data": {
   "lineno": 204
  },
  "type": "class"
 },
 "dipy.viz.widget.button.ButtonWidget.place": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "dipy.viz.widget.button_display_coordinates"
   ]
  },
  "type": "function"
 },
 "dipy.viz.widget.button._place_widget": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "dipy.viz.widget.button"
   ]
  },
  "type": "function"
 },
 "dipy.viz.widget.button_display_coordinates": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "dipy.viz.widget.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.viz.widget.optional_package": {
  "data": {
   "shadows": "dipy.utils.optpkg.optional_package"
  },
  "type": "import"
 },
 "dipy.viz.widget.slider": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "SliderWidget"
   ]
  },
  "type": "function"
 },
 "dipy.viz.widget.slider.SliderWidget": {
  "data": {
   "lineno": 97
  },
  "type": "class"
 },
 "dipy.viz.widget.slider.SliderWidget.get_value": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "dipy.viz.widget.slider.SliderWidget.place": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "dipy.viz.widget.slider.SliderWidget.set_value": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "dipy.viz.widget.slider._place_widget": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "dipy.viz.widget.slider"
   ]
  },
  "type": "function"
 },
 "dipy.viz.widget.text": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "TextWidget"
   ]
  },
  "type": "function"
 },
 "dipy.viz.widget.text.TextWidget": {
  "data": {
   "lineno": 287
  },
  "type": "class"
 },
 "dipy.viz.widget.text.TextWidget.place": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.integer",
    "numpy.issubdtype"
   ]
  },
  "type": "function"
 },
 "dipy.viz.widget.text._place_widget": {
  "data": {
   "lineno": 319
  },
  "type": "function"
 },
 "dipy.viz.window": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dipy.utils.optpkg.optional_package",
    "dipy.viz.window.renderer",
    "object"
   ]
  },
  "type": "module"
 },
 "dipy.viz.window.CustomInteractorStyle": {
  "data": {
   "shadows": "dipy.viz.interactor.CustomInteractorStyle"
  },
  "type": "import"
 },
 "dipy.viz.window.InTemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.InTemporaryDirectory"
  },
  "type": "import"
 },
 "dipy.viz.window.Renderer": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "dipy.viz.window.vtkRenderer"
   ]
  },
  "type": "class"
 },
 "dipy.viz.window.Renderer.add": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "dipy.viz.window.Renderer.azimuth": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "dipy.viz.window.Renderer.background": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "dipy.viz.window.Renderer.camera": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "dipy.viz.window.Renderer.camera_direction": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "dipy.viz.window.Renderer.camera_info": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.viz.window.Renderer.clear": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "dipy.viz.window.Renderer.dolly": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "dipy.viz.window.Renderer.elevation": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "dipy.viz.window.Renderer.get_camera": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "dipy.viz.window.Renderer.pitch": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "dipy.viz.window.Renderer.projection": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "dipy.viz.window.Renderer.reset_camera": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "dipy.viz.window.Renderer.reset_clipping_range": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "dipy.viz.window.Renderer.rm": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "dipy.viz.window.Renderer.rm_all": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "dipy.viz.window.Renderer.roll": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "dipy.viz.window.Renderer.set_camera": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "dipy.viz.window.Renderer.size": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "dipy.viz.window.Renderer.yaw": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "dipy.viz.window.Renderer.zoom": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "dipy.viz.window.ShowManager": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.viz.window.ShowManager.__init__": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "dipy.__version__",
    "dipy.viz.interactor.CustomInteractorStyle",
    "dipy.viz.window.Renderer",
    "dipy.viz.window.ren"
   ]
  },
  "type": "function"
 },
 "dipy.viz.window.ShowManager.add_window_callback": {
  "data": {
   "lineno": 588
  },
  "type": "function"
 },
 "dipy.viz.window.ShowManager.initialize": {
  "data": {
   "lineno": 451
  },
  "type": "function"
 },
 "dipy.viz.window.ShowManager.play_events": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "events"
   ]
  },
  "type": "function"
 },
 "dipy.viz.window.ShowManager.play_events_from_file": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "dipy.viz.window.gzip",
    "events",
    "open"
   ]
  },
  "type": "function"
 },
 "dipy.viz.window.ShowManager.record_events": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "events",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "open"
   ]
  },
  "type": "function"
 },
 "dipy.viz.window.ShowManager.record_events._stop_recording_and_close": {
  "data": {
   "lineno": 503
  },
  "type": "function"
 },
 "dipy.viz.window.ShowManager.record_events_to_file": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "dipy.viz.window.gzip",
    "events",
    "nibabel.py3k.asbytes",
    "open"
   ]
  },
  "type": "function"
 },
 "dipy.viz.window.ShowManager.render": {
  "data": {
   "lineno": 456
  },
  "type": "function"
 },
 "dipy.viz.window.ShowManager.start": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "dipy.viz.window.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.viz.window.add": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "dipy.viz.window.ren"
   ]
  },
  "type": "function"
 },
 "dipy.viz.window.analyze_renderer": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "ReportRenderer",
    "dipy.viz.window.ren",
    "range"
   ]
  },
  "type": "function"
 },
 "dipy.viz.window.analyze_renderer.ReportRenderer": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.viz.window.analyze_snapshot": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "ReportSnapshot",
    "dipy.utils.six.string_types",
    "enumerate",
    "isinstance",
    "len",
    "numpy.all",
    "numpy.any",
    "numpy.array",
    "numpy.dot",
    "scipy.misc.imread",
    "scipy.ndimage.label",
    "tuple"
   ]
  },
  "type": "function"
 },
 "dipy.viz.window.analyze_snapshot.ReportSnapshot": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.viz.window.asbytes": {
  "data": {
   "shadows": "nibabel.py3k.asbytes"
  },
  "type": "import"
 },
 "dipy.viz.window.clear": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "dipy.viz.window.ren"
   ]
  },
  "type": "function"
 },
 "dipy.viz.window.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "dipy.viz.window.dipy_version": {
  "data": {
   "shadows": "dipy.__version__"
  },
  "type": "import"
 },
 "dipy.viz.window.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.viz.window.filedialog": {
  "data": {
   "shadows": "tkinter.filedialog"
  },
  "type": "import"
 },
 "dipy.viz.window.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "dipy.viz.window.has_tkinter": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "dipy.viz.window.imread": {
  "data": {
   "shadows": "scipy.misc.imread"
  },
  "type": "import"
 },
 "dipy.viz.window.major_version": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "dipy.viz.window.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "dipy.viz.window.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.viz.window.open_file_dialog": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "Tkinter.Tk",
    "tkinter.filedialog.askopenfilenames"
   ]
  },
  "type": "function"
 },
 "dipy.viz.window.optional_package": {
  "data": {
   "shadows": "dipy.utils.optpkg.optional_package"
  },
  "type": "import"
 },
 "dipy.viz.window.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.viz.window.record": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "dipy.viz.window.major_version",
    "dipy.viz.window.ren",
    "print",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "dipy.viz.window.ren": {
  "data": {
   "lineno": 249
  },
  "type": "constant"
 },
 "dipy.viz.window.renderer": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "DeprecationWarning",
    "dipy.viz.window.Renderer",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "dipy.viz.window.rm": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "dipy.viz.window.ren"
   ]
  },
  "type": "function"
 },
 "dipy.viz.window.rm_all": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "dipy.viz.window.ren"
   ]
  },
  "type": "function"
 },
 "dipy.viz.window.save_file_dialog": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "Tkinter.Tk",
    "tkinter.filedialog.asksaveasfilename"
   ]
  },
  "type": "function"
 },
 "dipy.viz.window.show": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "dipy.viz.window.ShowManager",
    "dipy.viz.window.ren"
   ]
  },
  "type": "function"
 },
 "dipy.viz.window.snapshot": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "dipy.viz.window.ren",
    "vtk.util.numpy_support.vtk_to_numpy"
   ]
  },
  "type": "function"
 },
 "dipy.viz.window.string_types": {
  "data": {
   "shadows": "dipy.utils.six.string_types"
  },
  "type": "import"
 },
 "dipy.viz.window.tkinter": {
  "data": {
   "shadows": "tkinter"
  },
  "type": "import"
 },
 "dipy.viz.window.version": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "dipy.viz.window.vtkRenderer": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "dipy.viz.window.vtk_to_numpy": {
  "data": {
   "shadows": "vtk.util.numpy_support.vtk_to_numpy"
  },
  "type": "import"
 },
 "dipy.viz.window.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "dipy.workflows": {
  "data": {},
  "type": "module"
 },
 "dipy.workflows.align": {
  "data": {},
  "type": "module"
 },
 "dipy.workflows.align.ResliceFlow": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "dipy.workflows.workflow.Workflow"
   ]
  },
  "type": "class"
 },
 "dipy.workflows.align.ResliceFlow.get_short_name": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.align.ResliceFlow.run": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "dipy.align.reslice.reslice",
    "dipy.io.image.load_nifti",
    "dipy.io.image.save_nifti",
    "dipy.workflows.align.logging"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.align.Workflow": {
  "data": {
   "shadows": "dipy.workflows.workflow.Workflow"
  },
  "type": "import"
 },
 "dipy.workflows.align.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.workflows.align.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.workflows.align.load_nifti": {
  "data": {
   "shadows": "dipy.io.image.load_nifti"
  },
  "type": "import"
 },
 "dipy.workflows.align.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "dipy.workflows.align.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.workflows.align.reslice": {
  "data": {
   "shadows": "dipy.align.reslice.reslice"
  },
  "type": "import"
 },
 "dipy.workflows.align.save_nifti": {
  "data": {
   "shadows": "dipy.io.image.save_nifti"
  },
  "type": "import"
 },
 "dipy.workflows.base": {
  "data": {},
  "type": "module"
 },
 "dipy.workflows.base.IntrospectiveArgumentParser": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "dipy.fixes.argparse.ArgumentParser"
   ]
  },
  "type": "class"
 },
 "dipy.workflows.base.IntrospectiveArgumentParser.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "dipy.fixes.argparse.RawTextHelpFormatter",
    "dipy.workflows.base.IntrospectiveArgumentParser",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.base.IntrospectiveArgumentParser._select_dtype": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.base.IntrospectiveArgumentParser.add_description": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "dipy.workflows.base.IntrospectiveArgumentParser.add_epilogue": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "dipy.workflows.base.IntrospectiveArgumentParser.add_sub_flow_args": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "bool",
    "dict",
    "dipy.workflows.base.get_args_default",
    "dipy.workflows.base.inspect",
    "dipy.workflows.docstring_parser.NumpyDocString",
    "enumerate",
    "int",
    "len",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.base.IntrospectiveArgumentParser.add_workflow": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "bool",
    "dict",
    "dipy.fixes.argparse",
    "dipy.workflows.base.get_args_default",
    "dipy.workflows.base.inspect",
    "dipy.workflows.docstring_parser.NumpyDocString",
    "enumerate",
    "int",
    "len",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.base.IntrospectiveArgumentParser.get_flow_args": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "dict",
    "vars"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.base.IntrospectiveArgumentParser.get_outputs": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "dipy.workflows.base.IntrospectiveArgumentParser.show_argument": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.base.IntrospectiveArgumentParser.update_argument": {
  "data": {
   "lineno": 273
  },
  "type": "function"
 },
 "dipy.workflows.base.NumpyDocString": {
  "data": {
   "shadows": "dipy.workflows.docstring_parser.NumpyDocString"
  },
  "type": "import"
 },
 "dipy.workflows.base.arg": {
  "data": {
   "shadows": "dipy.fixes.argparse"
  },
  "type": "import"
 },
 "dipy.workflows.base.get_args_default": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "dipy.workflows.base.inspect",
    "dipy.workflows.base.sys"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.base.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "dipy.workflows.base.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "dipy.workflows.combined_workflow": {
  "data": {},
  "type": "module"
 },
 "dipy.workflows.combined_workflow.CombinedWorkflow": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "dipy.workflows.workflow.Workflow"
   ]
  },
  "type": "class"
 },
 "dipy.workflows.combined_workflow.CombinedWorkflow.__init__": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "dipy.workflows.combined_workflow.CombinedWorkflow",
    "super"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.combined_workflow.CombinedWorkflow._get_sub_flows": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.combined_workflow.CombinedWorkflow.get_optionals": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "dipy.workflows.combined_workflow.CombinedWorkflow.get_sub_runs": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "dipy.workflows.combined_workflow.CombinedWorkflow.run_sub_flow": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.combined_workflow.CombinedWorkflow.set_sub_flows_optionals": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "dict",
    "dipy.utils.six.iteritems"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.combined_workflow.Workflow": {
  "data": {
   "shadows": "dipy.workflows.workflow.Workflow"
  },
  "type": "import"
 },
 "dipy.workflows.combined_workflow.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.workflows.combined_workflow.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.workflows.combined_workflow.iteritems": {
  "data": {
   "shadows": "dipy.utils.six.iteritems"
  },
  "type": "import"
 },
 "dipy.workflows.combined_workflow.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.workflows.denoise": {
  "data": {},
  "type": "module"
 },
 "dipy.workflows.denoise.NLMeansFlow": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "dipy.workflows.workflow.Workflow"
   ]
  },
  "type": "class"
 },
 "dipy.workflows.denoise.NLMeansFlow.get_short_name": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.denoise.NLMeansFlow.run": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "dipy.denoise.nlmeans.nlmeans",
    "dipy.denoise.noise_estimate.estimate_sigma",
    "dipy.workflows.denoise.logging",
    "dipy.workflows.denoise.shutil",
    "nibabel.Nifti1Image",
    "nibabel.load"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.denoise.Workflow": {
  "data": {
   "shadows": "dipy.workflows.workflow.Workflow"
  },
  "type": "import"
 },
 "dipy.workflows.denoise.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.workflows.denoise.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.workflows.denoise.estimate_sigma": {
  "data": {
   "shadows": "dipy.denoise.noise_estimate.estimate_sigma"
  },
  "type": "import"
 },
 "dipy.workflows.denoise.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "dipy.workflows.denoise.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.workflows.denoise.nlmeans": {
  "data": {
   "shadows": "dipy.denoise.nlmeans.nlmeans"
  },
  "type": "import"
 },
 "dipy.workflows.denoise.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.workflows.denoise.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "dipy.workflows.docstring_parser": {
  "data": {},
  "type": "module"
 },
 "dipy.workflows.docstring_parser.NumpyDocString": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "dipy.workflows.docstring_parser.re",
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.workflows.docstring_parser.NumpyDocString.__getitem__": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.NumpyDocString.__init__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "dipy.workflows.docstring_parser.Reader",
    "dipy.workflows.docstring_parser.textwrap"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.NumpyDocString.__setitem__": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.NumpyDocString.__str__": {
  "data": {
   "lineno": 426
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.NumpyDocString._is_at_section": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.NumpyDocString._parse": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.NumpyDocString._parse_index": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "len",
    "strip_each_in"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.NumpyDocString._parse_index.strip_each_in": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.NumpyDocString._parse_param_list": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "dipy.workflows.docstring_parser.Reader",
    "dipy.workflows.docstring_parser.dedent_lines"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.NumpyDocString._parse_see_also": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "push_item"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.NumpyDocString._parse_see_also.parse_item_name": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.NumpyDocString._parse_see_also.push_item": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "list",
    "parse_item_name"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.NumpyDocString._parse_summary": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "dipy.workflows.docstring_parser.re"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.NumpyDocString._read_sections": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "StopIteration",
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.NumpyDocString._read_to_next_section": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.NumpyDocString._str_extended_summary": {
  "data": {
   "lineno": 363
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.NumpyDocString._str_header": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.NumpyDocString._str_indent": {
  "data": {
   "lineno": 345
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.NumpyDocString._str_index": {
  "data": {
   "lineno": 416
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.NumpyDocString._str_param_list": {
  "data": {
   "lineno": 369
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.NumpyDocString._str_section": {
  "data": {
   "lineno": 382
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.NumpyDocString._str_see_also": {
  "data": {
   "lineno": 390
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.NumpyDocString._str_signature": {
  "data": {
   "lineno": 351
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.NumpyDocString._str_summary": {
  "data": {
   "lineno": 357
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.NumpyDocString._strip": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.Reader": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.workflows.docstring_parser.Reader.__getitem__": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.Reader.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.Reader.eof": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.Reader.is_empty": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.Reader.peek": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.Reader.read": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.Reader.read_to_condition": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "condition_func"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.Reader.read_to_next_empty_line": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.Reader.read_to_next_empty_line.is_empty": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.Reader.read_to_next_unindented_line": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.Reader.read_to_next_unindented_line.is_unindented": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.Reader.reset": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.Reader.seek_next_non_empty_line": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.workflows.docstring_parser.dedent_lines": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "dipy.workflows.docstring_parser.textwrap"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.docstring_parser.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.workflows.docstring_parser.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.workflows.docstring_parser.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "dipy.workflows.docstring_parser.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "dipy.workflows.docstring_parser.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "dipy.workflows.flow_runner": {
  "data": {},
  "type": "module"
 },
 "dipy.workflows.flow_runner.IntrospectiveArgumentParser": {
  "data": {
   "shadows": "dipy.workflows.base.IntrospectiveArgumentParser"
  },
  "type": "import"
 },
 "dipy.workflows.flow_runner.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.workflows.flow_runner.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.workflows.flow_runner.get_level": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "Exception",
    "dipy.workflows.flow_runner.logging"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.flow_runner.iteritems": {
  "data": {
   "shadows": "dipy.utils.six.iteritems"
  },
  "type": "import"
 },
 "dipy.workflows.flow_runner.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "dipy.workflows.flow_runner.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.workflows.flow_runner.run_flow": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "dipy.utils.six.iteritems",
    "dipy.workflows.base.IntrospectiveArgumentParser",
    "dipy.workflows.flow_runner.get_level",
    "dipy.workflows.flow_runner.logging"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.io": {
  "data": {},
  "type": "module"
 },
 "dipy.workflows.io.IoInfoFlow": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "dipy.workflows.workflow.Workflow"
   ]
  },
  "type": "class"
 },
 "dipy.workflows.io.IoInfoFlow.get_short_name": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.io.IoInfoFlow.run": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "dipy.io.image.load_nifti",
    "dipy.workflows.io.logging",
    "dipy.workflows.io.os",
    "len",
    "numpy.abs",
    "numpy.array",
    "numpy.diff",
    "numpy.linalg.norm",
    "numpy.loadtxt",
    "numpy.percentile",
    "numpy.set_printoptions",
    "numpy.sort",
    "numpy.sum",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.io.Workflow": {
  "data": {
   "shadows": "dipy.workflows.workflow.Workflow"
  },
  "type": "import"
 },
 "dipy.workflows.io.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.workflows.io.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.workflows.io.load_nifti": {
  "data": {
   "shadows": "dipy.io.image.load_nifti"
  },
  "type": "import"
 },
 "dipy.workflows.io.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "dipy.workflows.io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.workflows.io.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dipy.workflows.io.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.workflows.mask": {
  "data": {},
  "type": "module"
 },
 "dipy.workflows.mask.MaskFlow": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "dipy.workflows.workflow.Workflow"
   ]
  },
  "type": "class"
 },
 "dipy.workflows.mask.MaskFlow.get_short_name": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.mask.MaskFlow.run": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "dipy.io.image.load_nifti",
    "dipy.io.image.save_nifti",
    "dipy.workflows.mask.logging",
    "numpy.bitwise_and",
    "numpy.inf",
    "numpy.ubyte"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.mask.Workflow": {
  "data": {
   "shadows": "dipy.workflows.workflow.Workflow"
  },
  "type": "import"
 },
 "dipy.workflows.mask.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.workflows.mask.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "dipy.workflows.mask.load_nifti": {
  "data": {
   "shadows": "dipy.io.image.load_nifti"
  },
  "type": "import"
 },
 "dipy.workflows.mask.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "dipy.workflows.mask.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.workflows.mask.save_nifti": {
  "data": {
   "shadows": "dipy.io.image.save_nifti"
  },
  "type": "import"
 },
 "dipy.workflows.multi_io": {
  "data": {},
  "type": "module"
 },
 "dipy.workflows.multi_io.IOIterator": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.workflows.multi_io.IOIterator.__init__": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "dipy.workflows.multi_io.IOIterator.__iter__": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.multi_io.IOIterator.create_directories": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "dipy.workflows.multi_io.os",
    "os.path.dirname"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.multi_io.IOIterator.create_outputs": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "ImportError",
    "dipy.workflows.multi_io.connect_output_paths",
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.multi_io.IOIterator.set_inputs": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "glob.glob",
    "list",
    "sorted",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.multi_io.IOIterator.set_out_dir": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "dipy.workflows.multi_io.IOIterator.set_out_fnames": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.multi_io.IOIterator.set_output_keys": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.multi_io.basename_without_extension": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "os.path.basename"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.multi_io.common_start": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "_iter"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.multi_io.common_start._iter": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.multi_io.concatenate_inputs": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "dipy.workflows.multi_io.basename_without_extension",
    "enumerate",
    "zip"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.multi_io.connect_output_paths": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ImportError",
    "dipy.utils.six.string_types",
    "dipy.workflows.multi_io.concatenate_inputs",
    "dipy.workflows.multi_io.os",
    "enumerate",
    "isinstance",
    "len",
    "numpy.max",
    "numpy.min",
    "os.path.dirname",
    "os.path.isabs",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.multi_io.get_args_default": {
  "data": {
   "shadows": "dipy.workflows.base.get_args_default"
  },
  "type": "import"
 },
 "dipy.workflows.multi_io.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "dipy.workflows.multi_io.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "dipy.workflows.multi_io.io_iterator": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "dipy.workflows.multi_io.IOIterator"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.multi_io.io_iterator_": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "dipy.workflows.base.get_args_default",
    "dipy.workflows.multi_io.inspect",
    "dipy.workflows.multi_io.io_iterator",
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.multi_io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.workflows.multi_io.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dipy.workflows.multi_io.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "dipy.workflows.multi_io.slash_to_under": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "dipy.workflows.multi_io.string_types": {
  "data": {
   "shadows": "dipy.utils.six.string_types"
  },
  "type": "import"
 },
 "dipy.workflows.reconst": {
  "data": {},
  "type": "module"
 },
 "dipy.workflows.reconst.ConstrainedSphericalDeconvModel": {
  "data": {
   "shadows": "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel"
  },
  "type": "import"
 },
 "dipy.workflows.reconst.CsaOdfModel": {
  "data": {
   "shadows": "dipy.reconst.shm.CsaOdfModel"
  },
  "type": "import"
 },
 "dipy.workflows.reconst.DiffusionKurtosisModel": {
  "data": {
   "shadows": "dipy.reconst.dki.DiffusionKurtosisModel"
  },
  "type": "import"
 },
 "dipy.workflows.reconst.ReconstCSAFlow": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "dipy.workflows.workflow.Workflow"
   ]
  },
  "type": "class"
 },
 "dipy.workflows.reconst.ReconstCSAFlow.get_short_name": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.reconst.ReconstCSAFlow.run": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_sphere",
    "dipy.io.gradients.read_bvals_bvecs",
    "dipy.io.peaks.peaks_to_niftis",
    "dipy.io.peaks.save_peaks",
    "dipy.reconst.peaks.peaks_from_model",
    "dipy.reconst.shm.CsaOdfModel",
    "dipy.workflows.reconst.logging",
    "nibabel.load",
    "numpy.bool"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.reconst.ReconstCSDFlow": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "dipy.workflows.workflow.Workflow"
   ]
  },
  "type": "class"
 },
 "dipy.workflows.reconst.ReconstCSDFlow.get_short_name": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.reconst.ReconstCSDFlow.run": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "ValueError",
    "ast.literal_eval",
    "dipy.core.gradients.gradient_table",
    "dipy.data.get_sphere",
    "dipy.io.gradients.read_bvals_bvecs",
    "dipy.io.peaks.peaks_to_niftis",
    "dipy.io.peaks.save_peaks",
    "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel",
    "dipy.reconst.csdeconv.auto_response",
    "dipy.reconst.peaks.peaks_from_model",
    "dipy.workflows.reconst.logging",
    "isinstance",
    "list",
    "nibabel.load",
    "numpy.array",
    "numpy.bool",
    "numpy.float64",
    "str"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.reconst.ReconstDkiFlow": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "dipy.workflows.workflow.Workflow"
   ]
  },
  "type": "class"
 },
 "dipy.workflows.reconst.ReconstDkiFlow.get_dki_model": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "dipy.reconst.dki.DiffusionKurtosisModel"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.reconst.ReconstDkiFlow.get_fitted_tensor": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.io.gradients.read_bvals_bvecs",
    "dipy.workflows.reconst.logging"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.reconst.ReconstDkiFlow.get_short_name": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.reconst.ReconstDkiFlow.run": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "dipy.reconst.dki.split_dki_param",
    "dipy.reconst.dti.axial_diffusivity",
    "dipy.reconst.dti.color_fa",
    "dipy.reconst.dti.fractional_anisotropy",
    "dipy.reconst.dti.geodesic_anisotropy",
    "dipy.reconst.dti.lower_triangular",
    "dipy.reconst.dti.mean_diffusivity",
    "dipy.reconst.dti.mode",
    "dipy.reconst.dti.radial_diffusivity",
    "dipy.workflows.reconst.logging",
    "nibabel.Nifti1Image",
    "nibabel.load",
    "nibabel.save",
    "numpy.array",
    "numpy.bool",
    "numpy.clip",
    "numpy.float32",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.reconst.ReconstDtiFlow": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "dipy.workflows.workflow.Workflow"
   ]
  },
  "type": "class"
 },
 "dipy.workflows.reconst.ReconstDtiFlow.get_fitted_tensor": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.io.gradients.read_bvals_bvecs",
    "dipy.workflows.reconst.logging"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.reconst.ReconstDtiFlow.get_short_name": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.reconst.ReconstDtiFlow.get_tensor_model": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "dipy.reconst.dti.TensorModel"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.reconst.ReconstDtiFlow.run": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "dipy.reconst.dti.axial_diffusivity",
    "dipy.reconst.dti.color_fa",
    "dipy.reconst.dti.fractional_anisotropy",
    "dipy.reconst.dti.geodesic_anisotropy",
    "dipy.reconst.dti.lower_triangular",
    "dipy.reconst.dti.mean_diffusivity",
    "dipy.reconst.dti.mode",
    "dipy.reconst.dti.radial_diffusivity",
    "dipy.workflows.reconst.logging",
    "nibabel.Nifti1Image",
    "nibabel.load",
    "nibabel.save",
    "numpy.array",
    "numpy.bool",
    "numpy.clip",
    "numpy.float32",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.reconst.ReconstMAPMRIFlow": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "dipy.workflows.workflow.Workflow"
   ]
  },
  "type": "class"
 },
 "dipy.workflows.reconst.ReconstMAPMRIFlow.get_short_name": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.reconst.ReconstMAPMRIFlow.run": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "dipy.core.gradients.gradient_table",
    "dipy.io.gradients.read_bvals_bvecs",
    "dipy.reconst.mapmri.MapmriModel",
    "dipy.workflows.reconst.logging",
    "nibabel.load",
    "nibabel.nifti1.Nifti1Image",
    "nibabel.save",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.reconst.TensorModel": {
  "data": {
   "shadows": "dipy.reconst.dti.TensorModel"
  },
  "type": "import"
 },
 "dipy.workflows.reconst.Workflow": {
  "data": {
   "shadows": "dipy.workflows.workflow.Workflow"
  },
  "type": "import"
 },
 "dipy.workflows.reconst.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.workflows.reconst.auto_response": {
  "data": {
   "shadows": "dipy.reconst.csdeconv.auto_response"
  },
  "type": "import"
 },
 "dipy.workflows.reconst.axial_diffusivity": {
  "data": {
   "shadows": "dipy.reconst.dti.axial_diffusivity"
  },
  "type": "import"
 },
 "dipy.workflows.reconst.color_fa": {
  "data": {
   "shadows": "dipy.reconst.dti.color_fa"
  },
  "type": "import"
 },
 "dipy.workflows.reconst.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.workflows.reconst.fractional_anisotropy": {
  "data": {
   "shadows": "dipy.reconst.dti.fractional_anisotropy"
  },
  "type": "import"
 },
 "dipy.workflows.reconst.geodesic_anisotropy": {
  "data": {
   "shadows": "dipy.reconst.dti.geodesic_anisotropy"
  },
  "type": "import"
 },
 "dipy.workflows.reconst.get_mode": {
  "data": {
   "shadows": "dipy.reconst.dti.mode"
  },
  "type": "import"
 },
 "dipy.workflows.reconst.get_sphere": {
  "data": {
   "shadows": "dipy.data.get_sphere"
  },
  "type": "import"
 },
 "dipy.workflows.reconst.gradient_table": {
  "data": {
   "shadows": "dipy.core.gradients.gradient_table"
  },
  "type": "import"
 },
 "dipy.workflows.reconst.literal_eval": {
  "data": {
   "shadows": "ast.literal_eval"
  },
  "type": "import"
 },
 "dipy.workflows.reconst.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "dipy.workflows.reconst.lower_triangular": {
  "data": {
   "shadows": "dipy.reconst.dti.lower_triangular"
  },
  "type": "import"
 },
 "dipy.workflows.reconst.mapmri": {
  "data": {
   "shadows": "dipy.reconst.mapmri"
  },
  "type": "import"
 },
 "dipy.workflows.reconst.mean_diffusivity": {
  "data": {
   "shadows": "dipy.reconst.dti.mean_diffusivity"
  },
  "type": "import"
 },
 "dipy.workflows.reconst.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.workflows.reconst.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.workflows.reconst.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "dipy.workflows.reconst.peaks_from_model": {
  "data": {
   "shadows": "dipy.reconst.peaks.peaks_from_model"
  },
  "type": "import"
 },
 "dipy.workflows.reconst.peaks_to_niftis": {
  "data": {
   "shadows": "dipy.io.peaks.peaks_to_niftis"
  },
  "type": "import"
 },
 "dipy.workflows.reconst.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.workflows.reconst.radial_diffusivity": {
  "data": {
   "shadows": "dipy.reconst.dti.radial_diffusivity"
  },
  "type": "import"
 },
 "dipy.workflows.reconst.read_bvals_bvecs": {
  "data": {
   "shadows": "dipy.io.gradients.read_bvals_bvecs"
  },
  "type": "import"
 },
 "dipy.workflows.reconst.save_peaks": {
  "data": {
   "shadows": "dipy.io.peaks.save_peaks"
  },
  "type": "import"
 },
 "dipy.workflows.reconst.split_dki_param": {
  "data": {
   "shadows": "dipy.reconst.dki.split_dki_param"
  },
  "type": "import"
 },
 "dipy.workflows.segment": {
  "data": {},
  "type": "module"
 },
 "dipy.workflows.segment.MedianOtsuFlow": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "dipy.workflows.workflow.Workflow"
   ]
  },
  "type": "class"
 },
 "dipy.workflows.segment.MedianOtsuFlow.get_short_name": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.segment.MedianOtsuFlow.run": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "dipy.io.image.load_nifti",
    "dipy.io.image.save_nifti",
    "dipy.segment.mask.median_otsu",
    "dipy.workflows.segment.logging",
    "int",
    "map",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.segment.Workflow": {
  "data": {
   "shadows": "dipy.workflows.workflow.Workflow"
  },
  "type": "import"
 },
 "dipy.workflows.segment.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.workflows.segment.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.workflows.segment.load_nifti": {
  "data": {
   "shadows": "dipy.io.image.load_nifti"
  },
  "type": "import"
 },
 "dipy.workflows.segment.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "dipy.workflows.segment.median_otsu": {
  "data": {
   "shadows": "dipy.segment.mask.median_otsu"
  },
  "type": "import"
 },
 "dipy.workflows.segment.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.workflows.segment.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.workflows.segment.save_nifti": {
  "data": {
   "shadows": "dipy.io.image.save_nifti"
  },
  "type": "import"
 },
 "dipy.workflows.tests": {
  "data": {
   "symbols_in_volume": [
    "numpy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "dipy.workflows.tests.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "dipy.workflows.tests.test_align": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "dipy.workflows.tests.test_align.ResliceFlow": {
  "data": {
   "shadows": "dipy.workflows.align.ResliceFlow"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_align.TemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.TemporaryDirectory"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_align.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_align.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_align.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_align.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_align.test_reslice": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "dipy.data.get_data",
    "dipy.workflows.align.ResliceFlow",
    "nibabel.load",
    "nibabel.tmpdirs.TemporaryDirectory",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.test_docstring_parser": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.workflows.docstring_parser.NumpyDocString",
    "dipy.workflows.tests.test_docstring_parser.doc_txt",
    "dipy.workflows.tests.test_docstring_parser.doc_yields_txt",
    "dipy.workflows.tests.test_docstring_parser.nose",
    "dipy.workflows.tests.test_docstring_parser.sys"
   ]
  },
  "type": "module"
 },
 "dipy.workflows.tests.test_docstring_parser.NumpyDocString": {
  "data": {
   "shadows": "dipy.workflows.docstring_parser.NumpyDocString"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_docstring_parser.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_docstring_parser.class_doc_txt": {
  "data": {
   "lineno": 484
  },
  "type": "constant"
 },
 "dipy.workflows.tests.test_docstring_parser.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_docstring_parser.doc": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "dipy.workflows.tests.test_docstring_parser.doc2": {
  "data": {
   "lineno": 365
  },
  "type": "constant"
 },
 "dipy.workflows.tests.test_docstring_parser.doc3": {
  "data": {
   "lineno": 380
  },
  "type": "constant"
 },
 "dipy.workflows.tests.test_docstring_parser.doc5": {
  "data": {
   "lineno": 386
  },
  "type": "constant"
 },
 "dipy.workflows.tests.test_docstring_parser.doc7": {
  "data": {
   "lineno": 458
  },
  "type": "constant"
 },
 "dipy.workflows.tests.test_docstring_parser.doc_txt": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "dipy.workflows.tests.test_docstring_parser.doc_yields": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "dipy.workflows.tests.test_docstring_parser.doc_yields_txt": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "dipy.workflows.tests.test_docstring_parser.non_blank_line_by_line_compare": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "AssertionError",
    "dipy.workflows.tests.test_docstring_parser.textwrap",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.test_docstring_parser.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_docstring_parser.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_docstring_parser.sixu": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "unicode"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.test_docstring_parser.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_docstring_parser.test_duplicate_signature": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "dipy.workflows.docstring_parser.NumpyDocString",
    "dipy.workflows.tests.test_docstring_parser.doc"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.test_docstring_parser.test_empty_first_line": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "dipy.workflows.tests.test_docstring_parser.doc7"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.test_docstring_parser.test_examples": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "dipy.workflows.tests.test_docstring_parser.doc"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.test_docstring_parser.test_extended_summary": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "dipy.workflows.tests.test_docstring_parser.doc"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.test_docstring_parser.test_index": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "assert_equal",
    "dipy.workflows.tests.test_docstring_parser.doc",
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.test_docstring_parser.test_notes": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "assert_equal",
    "dipy.workflows.tests.test_docstring_parser.doc",
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.test_docstring_parser.test_other_parameters": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "assert_equal",
    "dipy.workflows.tests.test_docstring_parser.doc",
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.test_docstring_parser.test_parameters": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "assert_equal",
    "dipy.workflows.tests.test_docstring_parser.doc",
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.test_docstring_parser.test_parameters_without_extended_description": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "assert_equal",
    "dipy.workflows.tests.test_docstring_parser.doc2",
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.test_docstring_parser.test_raises": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "assert_equal",
    "dipy.workflows.tests.test_docstring_parser.doc5",
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.test_docstring_parser.test_references": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "dipy.workflows.tests.test_docstring_parser.doc"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.test_docstring_parser.test_returns": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "assert_equal",
    "dipy.workflows.tests.test_docstring_parser.doc",
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.test_docstring_parser.test_see_also": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "dipy.workflows.docstring_parser.NumpyDocString",
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.test_docstring_parser.test_signature": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "dipy.workflows.tests.test_docstring_parser.doc"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.test_docstring_parser.test_str": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "dipy.workflows.tests.test_docstring_parser.doc",
    "dipy.workflows.tests.test_docstring_parser.non_blank_line_by_line_compare",
    "str"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.test_docstring_parser.test_summary": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "dipy.workflows.tests.test_docstring_parser.doc"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.test_docstring_parser.test_warns": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "assert_equal",
    "dipy.workflows.tests.test_docstring_parser.doc5",
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.test_docstring_parser.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_io": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.workflows.tests.test_io.fname_log",
    "dipy.workflows.tests.test_io.logging",
    "dipy.workflows.tests.test_io.test_io_info",
    "tempfile.mkstemp"
   ]
  },
  "type": "module"
 },
 "dipy.workflows.tests.test_io.IoInfoFlow": {
  "data": {
   "shadows": "dipy.workflows.io.IoInfoFlow"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_io.fname_log": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "dipy.workflows.tests.test_io.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_io.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_io.mkstemp": {
  "data": {
   "shadows": "tempfile.mkstemp"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_io.test_io_info": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "IndexError",
    "dipy.data.get_data",
    "dipy.workflows.io.IoInfoFlow",
    "dipy.workflows.tests.test_io.fname_log",
    "numpy.testing.assert_equal",
    "open"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.test_masking": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.workflows.tests.test_masking.test_mask"
   ]
  },
  "type": "module"
 },
 "dipy.workflows.tests.test_masking.MaskFlow": {
  "data": {
   "shadows": "dipy.workflows.mask.MaskFlow"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_masking.TemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.TemporaryDirectory"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_masking.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_masking.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_masking.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_masking.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_masking.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_masking.nt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_masking.test_mask": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "dipy.data.get_data",
    "dipy.workflows.mask.MaskFlow",
    "nibabel.load",
    "nibabel.tmpdirs.TemporaryDirectory",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "numpy.testing.assert_array_almost_equal",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.test_reconst_dki": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.workflows.tests.test_reconst_dki.test_reconst_dki"
   ]
  },
  "type": "module"
 },
 "dipy.workflows.tests.test_reconst_dki.ReconstDkiFlow": {
  "data": {
   "shadows": "dipy.workflows.reconst.ReconstDkiFlow"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_reconst_dki.TemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.TemporaryDirectory"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_reconst_dki.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_reconst_dki.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_reconst_dki.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_reconst_dki.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_reconst_dki.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_reconst_dki.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_reconst_dki.test_reconst_dki": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "dipy.data.get_data",
    "dipy.workflows.reconst.ReconstDkiFlow",
    "nibabel.Nifti1Image",
    "nibabel.load",
    "nibabel.save",
    "nibabel.tmpdirs.TemporaryDirectory",
    "nose.tools.assert_equal",
    "numpy.ones_like",
    "numpy.uint8",
    "os.path.join",
    "tuple"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.test_segment": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.workflows.tests.test_segment.test_median_otsu_flow"
   ]
  },
  "type": "module"
 },
 "dipy.workflows.tests.test_segment.MedianOtsuFlow": {
  "data": {
   "shadows": "dipy.workflows.segment.MedianOtsuFlow"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_segment.TemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.TemporaryDirectory"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_segment.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_segment.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_segment.median_otsu": {
  "data": {
   "shadows": "dipy.segment.mask.median_otsu"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_segment.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_segment.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_segment.test_median_otsu_flow": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "dipy.data.get_data",
    "dipy.segment.mask.median_otsu",
    "dipy.workflows.segment.MedianOtsuFlow",
    "nibabel.load",
    "nibabel.tmpdirs.TemporaryDirectory",
    "numpy.testing.assert_array_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.test_tracking": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.workflows.tests.test_tracking.test_det_track"
   ]
  },
  "type": "module"
 },
 "dipy.workflows.tests.test_tracking.DetTrackPAMFlow": {
  "data": {
   "shadows": "dipy.workflows.tracking.DetTrackPAMFlow"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_tracking.MaskFlow": {
  "data": {
   "shadows": "dipy.workflows.mask.MaskFlow"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_tracking.ReconstCSDFlow": {
  "data": {
   "shadows": "dipy.workflows.reconst.ReconstCSDFlow"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_tracking.TemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.TemporaryDirectory"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_tracking.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_tracking.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_tracking.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_tracking.is_tractogram_empty": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "len",
    "nibabel.streamlines.load"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.test_tracking.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_tracking.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_tracking.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_tracking.save_nifti": {
  "data": {
   "shadows": "dipy.io.image.save_nifti"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_tracking.test_det_track": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "dipy.data.get_data",
    "dipy.io.image.save_nifti",
    "dipy.workflows.mask.MaskFlow",
    "dipy.workflows.reconst.ReconstCSDFlow",
    "dipy.workflows.tests.test_tracking.is_tractogram_empty",
    "dipy.workflows.tracking.DetTrackPAMFlow",
    "nibabel.Nifti1Image",
    "nibabel.load",
    "nibabel.save",
    "nibabel.tmpdirs.TemporaryDirectory",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "numpy.eye",
    "numpy.ones_like",
    "numpy.uint8",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.test_workflow": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dipy.workflows.tests.test_workflow.test_force_overwrite",
    "dipy.workflows.tests.test_workflow.test_get_sub_runs",
    "dipy.workflows.tests.test_workflow.test_run"
   ]
  },
  "type": "module"
 },
 "dipy.workflows.tests.test_workflow.MedianOtsuFlow": {
  "data": {
   "shadows": "dipy.workflows.segment.MedianOtsuFlow"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_workflow.TemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.TemporaryDirectory"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_workflow.Workflow": {
  "data": {
   "shadows": "dipy.workflows.workflow.Workflow"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_workflow.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_workflow.get_data": {
  "data": {
   "shadows": "dipy.data.get_data"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_workflow.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dipy.workflows.tests.test_workflow.test_force_overwrite": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "dipy.data.get_data",
    "dipy.workflows.segment.MedianOtsuFlow",
    "dipy.workflows.tests.test_workflow.os",
    "dipy.workflows.tests.test_workflow.time",
    "nibabel.tmpdirs.TemporaryDirectory"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.test_workflow.test_get_sub_runs": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "dipy.workflows.workflow.Workflow",
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.test_workflow.test_run": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "Exception",
    "dipy.workflows.workflow.Workflow",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.test_workflow.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "dipy.workflows.tests.workflow_tests_utils": {
  "data": {},
  "type": "module"
 },
 "dipy.workflows.tests.workflow_tests_utils.CombinedWorkflow": {
  "data": {
   "shadows": "dipy.workflows.combined_workflow.CombinedWorkflow"
  },
  "type": "import"
 },
 "dipy.workflows.tests.workflow_tests_utils.DummyCombinedWorkflow": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "dipy.workflows.combined_workflow.CombinedWorkflow"
   ]
  },
  "type": "class"
 },
 "dipy.workflows.tests.workflow_tests_utils.DummyCombinedWorkflow._get_sub_flows": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "dipy.workflows.tests.workflow_tests_utils.DummyWorkflow1",
    "dipy.workflows.tests.workflow_tests_utils.DummyWorkflow2"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.workflow_tests_utils.DummyCombinedWorkflow.run": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "dipy.workflows.tests.workflow_tests_utils.DummyWorkflow1",
    "dipy.workflows.tests.workflow_tests_utils.DummyWorkflow2"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.workflow_tests_utils.DummyWorkflow1": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "dipy.workflows.workflow.Workflow"
   ]
  },
  "type": "class"
 },
 "dipy.workflows.tests.workflow_tests_utils.DummyWorkflow1.get_short_name": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.workflow_tests_utils.DummyWorkflow1.run": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "dipy.workflows.tests.workflow_tests_utils.DummyWorkflow2": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "dipy.workflows.workflow.Workflow"
   ]
  },
  "type": "class"
 },
 "dipy.workflows.tests.workflow_tests_utils.DummyWorkflow2.get_short_name": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tests.workflow_tests_utils.DummyWorkflow2.run": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "dipy.workflows.tests.workflow_tests_utils.TestFlow": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "dipy.workflows.workflow.Workflow"
   ]
  },
  "type": "class"
 },
 "dipy.workflows.tests.workflow_tests_utils.TestFlow.run": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "dipy.workflows.tests.workflow_tests_utils.Workflow": {
  "data": {
   "shadows": "dipy.workflows.workflow.Workflow"
  },
  "type": "import"
 },
 "dipy.workflows.tracking": {
  "data": {},
  "type": "module"
 },
 "dipy.workflows.tracking.DetTrackPAMFlow": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "dipy.workflows.tracking.GenericTrackFlow"
   ]
  },
  "type": "class"
 },
 "dipy.workflows.tracking.DetTrackPAMFlow.get_short_name": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tracking.DetTrackPAMFlow.run": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "dipy.io.peaks.load_peaks",
    "dipy.workflows.tracking.logging"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tracking.DeterministicMaximumDirectionGetter": {
  "data": {
   "shadows": "dipy.direction.DeterministicMaximumDirectionGetter"
  },
  "type": "import"
 },
 "dipy.workflows.tracking.GenericTrackFlow": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "dipy.workflows.workflow.Workflow"
   ]
  },
  "type": "class"
 },
 "dipy.workflows.tracking.GenericTrackFlow._core_run": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "dipy.direction.DeterministicMaximumDirectionGetter.from_shcoeff",
    "dipy.io.image.load_nifti",
    "dipy.tracking.local.LocalTracking",
    "dipy.tracking.local.ThresholdTissueClassifier",
    "dipy.tracking.utils.seeds_from_mask",
    "dipy.workflows.tracking.logging",
    "nibabel.streamlines.Tractogram",
    "nibabel.streamlines.save",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.tracking.LocalTracking": {
  "data": {
   "shadows": "dipy.tracking.local.LocalTracking"
  },
  "type": "import"
 },
 "dipy.workflows.tracking.ThresholdTissueClassifier": {
  "data": {
   "shadows": "dipy.tracking.local.ThresholdTissueClassifier"
  },
  "type": "import"
 },
 "dipy.workflows.tracking.Tractogram": {
  "data": {
   "shadows": "nibabel.streamlines.Tractogram"
  },
  "type": "import"
 },
 "dipy.workflows.tracking.Workflow": {
  "data": {
   "shadows": "dipy.workflows.workflow.Workflow"
  },
  "type": "import"
 },
 "dipy.workflows.tracking.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.workflows.tracking.load_nifti": {
  "data": {
   "shadows": "dipy.io.image.load_nifti"
  },
  "type": "import"
 },
 "dipy.workflows.tracking.load_peaks": {
  "data": {
   "shadows": "dipy.io.peaks.load_peaks"
  },
  "type": "import"
 },
 "dipy.workflows.tracking.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "dipy.workflows.tracking.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dipy.workflows.tracking.save": {
  "data": {
   "shadows": "nibabel.streamlines.save"
  },
  "type": "import"
 },
 "dipy.workflows.tracking.utils": {
  "data": {
   "shadows": "dipy.tracking.utils"
  },
  "type": "import"
 },
 "dipy.workflows.workflow": {
  "data": {},
  "type": "module"
 },
 "dipy.workflows.workflow.Workflow": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dipy.workflows.workflow.Workflow.__init__": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "dipy.workflows.workflow.Workflow.get_io_iterator": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "dict",
    "dipy.workflows.multi_io.io_iterator_",
    "dipy.workflows.workflow.inspect",
    "isinstance",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.workflow.Workflow.get_short_name": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.workflow.Workflow.get_sub_runs": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "dipy.workflows.workflow.Workflow.manage_output_overwrite": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "dipy.workflows.workflow.logging",
    "dipy.workflows.workflow.os",
    "len"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.workflow.Workflow.run": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "dipy.workflows.workflow.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "dipy.workflows.workflow.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "dipy.workflows.workflow.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "dipy.workflows.workflow.io_iterator_": {
  "data": {
   "shadows": "dipy.workflows.multi_io.io_iterator_"
  },
  "type": "import"
 },
 "dipy.workflows.workflow.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "dipy.workflows.workflow.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dipy.workflows.workflow.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 }
}