{
 "fgivenx": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fgivenx._utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fgivenx._utils._check_args": {
  "lineno": 4,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones"
  ],
  "type": "function"
 },
 "fgivenx._utils._equally_weight_samples": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.logical_or",
   "numpy.random.get_state",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.random.set_state"
  ],
  "type": "function"
 },
 "fgivenx._utils._normalise_weights": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "fgivenx.dkl": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fgivenx.dkl.DKL": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.isnan",
   "scipy.stats.gaussian_kde"
  ],
  "type": "function"
 },
 "fgivenx.dkl.compute_dkl": {
  "lineno": 31,
  "symbols_in_volume": [
   "fgivenx.io.Cache",
   "fgivenx.io.CacheException",
   "fgivenx.parallel.parallel_apply",
   "numpy.array"
  ],
  "type": "function"
 },
 "fgivenx.drivers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fgivenx.drivers.compute_dkl": {
  "lineno": 451,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.exp",
   "numpy.sum"
  ],
  "type": "function"
 },
 "fgivenx.drivers.compute_pmf": {
  "lineno": 355,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isnan",
   "numpy.linspace"
  ],
  "type": "function"
 },
 "fgivenx.drivers.compute_samples": {
  "lineno": 283,
  "symbols_in_volume": [
   "fgivenx._utils._check_args",
   "fgivenx._utils._equally_weight_samples",
   "fgivenx._utils._normalise_weights"
  ],
  "type": "function"
 },
 "fgivenx.drivers.plot_contours": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fgivenx.drivers.plot_dkl": {
  "lineno": 196,
  "symbols_in_volume": [
   "matplotlib.pyplot.gca"
  ],
  "type": "function"
 },
 "fgivenx.drivers.plot_lines": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fgivenx.io": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fgivenx.io.Cache": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fgivenx.io.Cache.__init__": {
  "lineno": 48,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.dirname",
   "os.path.exists"
  ],
  "type": "function"
 },
 "fgivenx.io.Cache.check": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.allclose"
  ],
  "type": "function"
 },
 "fgivenx.io.Cache.load": {
  "lineno": 98,
  "symbols_in_volume": [
   "pickle.load"
  ],
  "type": "function"
 },
 "fgivenx.io.Cache.save": {
  "lineno": 106,
  "symbols_in_volume": [
   "pickle.HIGHEST_PROTOCOL",
   "pickle.dump"
  ],
  "type": "function"
 },
 "fgivenx.io.CacheChanged": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fgivenx.io.CacheChanged.__init__": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fgivenx.io.CacheException": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fgivenx.io.CacheException.__str__": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fgivenx.io.CacheException.calling_function": {
  "lineno": 10,
  "symbols_in_volume": [
   "inspect.currentframe",
   "inspect.getouterframes"
  ],
  "type": "function"
 },
 "fgivenx.io.CacheMissing": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fgivenx.io.CacheMissing.__init__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fgivenx.io.CacheOK": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fgivenx.io.CacheOK.__init__": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fgivenx.mass": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fgivenx.mass.PMF": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.isnan",
   "numpy.linalg.LinAlgError",
   "numpy.linspace",
   "numpy.logical_and",
   "numpy.sqrt",
   "numpy.where",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "fgivenx.mass.compute_pmf": {
  "lineno": 120,
  "symbols_in_volume": [
   "fgivenx.io.Cache",
   "fgivenx.io.CacheException",
   "fgivenx.parallel.parallel_apply",
   "numpy.array"
  ],
  "type": "function"
 },
 "fgivenx.parallel": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fgivenx.parallel.Parallel": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fgivenx.parallel.Parallel.__call__": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fgivenx.parallel.Parallel.__init__": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fgivenx.parallel.cpu_count": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fgivenx.parallel.delayed": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fgivenx.parallel.parallel_apply": {
  "lineno": 26,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.cpu_count",
   "joblib.delayed",
   "tqdm.tqdm",
   "tqdm.tqdm_notebook",
   "warnings.warn"
  ],
  "type": "function"
 },
 "fgivenx.parallel.tqdm": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fgivenx.parallel.tqdm_notebook": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fgivenx.plot": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fgivenx.plot.plot": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.sqrt",
   "scipy.ndimage.gaussian_filter",
   "scipy.special.erfinv"
  ],
  "type": "function"
 },
 "fgivenx.plot.plot_lines": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.choice"
  ],
  "type": "function"
 },
 "fgivenx.samples": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fgivenx.samples.compute_samples": {
  "lineno": 6,
  "symbols_in_volume": [
   "fgivenx.io.Cache",
   "fgivenx.io.CacheException",
   "fgivenx.parallel.parallel_apply",
   "numpy.array",
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "fgivenx.samples.samples_from_getdist_chains": {
  "lineno": 63,
  "symbols_in_volume": [
   "getdist.loadMCSamples"
  ],
  "type": "function"
 },
 "fgivenx.test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fgivenx.test.test__utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fgivenx.test.test__utils.assert_in_ratio": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "fgivenx.test.test__utils.test__check_args": {
  "lineno": 8,
  "symbols_in_volume": [
   "fgivenx._utils._check_args",
   "numpy.linspace",
   "numpy.ones",
   "numpy.ones_like",
   "numpy.random.rand",
   "numpy.random.seed",
   "pytest.raises"
  ],
  "type": "function"
 },
 "fgivenx.test.test__utils.test__equally_weight_samples": {
  "lineno": 79,
  "symbols_in_volume": [
   "fgivenx._utils._equally_weight_samples",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "fgivenx.test.test__utils.test__normalise_weights": {
  "lineno": 59,
  "symbols_in_volume": [
   "fgivenx._utils._normalise_weights",
   "numpy.exp",
   "numpy.max",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.sum",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "fgivenx.test.test_dkl": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fgivenx.test.test_dkl.gaussian_dkl": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "fgivenx.test.test_dkl.test_DKL": {
  "lineno": 13,
  "symbols_in_volume": [
   "fgivenx.dkl.DKL",
   "numpy.random.normal",
   "numpy.random.seed",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "fgivenx.test.test_dkl.test_compute_dkl": {
  "lineno": 26,
  "symbols_in_volume": [
   "fgivenx.dkl.compute_dkl",
   "numpy.linspace",
   "numpy.outer",
   "numpy.random.normal",
   "numpy.random.seed",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "os.path.isfile",
   "pytest.raises",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "fgivenx.test.test_drivers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fgivenx.test.test_drivers.test_full": {
  "lineno": 8,
  "symbols_in_volume": [
   "fgivenx.drivers.compute_dkl",
   "fgivenx.drivers.compute_pmf",
   "fgivenx.drivers.compute_samples",
   "fgivenx.plot_dkl",
   "numpy.array",
   "numpy.linspace",
   "numpy.random.normal",
   "numpy.random.rand",
   "numpy.random.seed",
   "pytest.raises"
  ],
  "type": "function"
 },
 "fgivenx.test.test_drivers.test_full.f": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fgivenx.test.test_drivers.test_plotting": {
  "lineno": 65,
  "symbols_in_volume": [
   "fgivenx.plot_contours",
   "fgivenx.plot_dkl",
   "fgivenx.plot_lines",
   "matplotlib.pyplot.cm.Blues_r",
   "matplotlib.pyplot.subplots",
   "numpy.array",
   "numpy.linspace",
   "numpy.random.normal",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "fgivenx.test.test_drivers.test_plotting.f": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fgivenx.test.test_io": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fgivenx.test.test_io.test_Cache": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.testing.assert_allclose",
   "os.path.exists",
   "os.path.isdir",
   "os.path.join",
   "pytest.raises",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "fgivenx.test.test_mass": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fgivenx.test.test_mass.gaussian_pmf": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "fgivenx.test.test_mass.test_PMF": {
  "lineno": 26,
  "symbols_in_volume": [
   "fgivenx.mass.PMF",
   "numpy.concatenate",
   "numpy.inf",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.random.uniform",
   "numpy.testing.assert_allclose",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "fgivenx.test.test_mass.test_compute_pmf": {
  "lineno": 57,
  "symbols_in_volume": [
   "fgivenx.mass.compute_pmf",
   "numpy.linspace",
   "numpy.outer",
   "numpy.random.normal",
   "numpy.random.seed",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "os.path.isfile",
   "pytest.raises",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "fgivenx.test.test_mass.test_gaussian": {
  "lineno": 16,
  "symbols_in_volume": [
   "fgivenx.mass.PMF",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.random.uniform",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "fgivenx.test.test_parallel": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fgivenx.test.test_parallel.f": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fgivenx.test.test_parallel.test_parallel_apply": {
  "lineno": 11,
  "symbols_in_volume": [
   "fgivenx.parallel.parallel_apply",
   "numpy.linspace",
   "numpy.testing.assert_allclose",
   "pytest.raises"
  ],
  "type": "function"
 },
 "fgivenx.test.test_plot": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fgivenx.test.test_plot.gen_line_data": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.outer",
   "numpy.random.normal",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "fgivenx.test.test_plot.gen_plot_data": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.linspace",
   "numpy.meshgrid",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "fgivenx.test.test_plot.test_plot": {
  "lineno": 19,
  "symbols_in_volume": [
   "fgivenx.plot.plot",
   "matplotlib.contour.QuadContourSet",
   "matplotlib.pyplot.subplots"
  ],
  "type": "function"
 },
 "fgivenx.test.test_plot.test_plot_lines": {
  "lineno": 68,
  "symbols_in_volume": [
   "fgivenx.plot.plot_lines",
   "matplotlib.pyplot.subplots"
  ],
  "type": "function"
 },
 "fgivenx.test.test_plot.test_plot_lines_downsample": {
  "lineno": 80,
  "symbols_in_volume": [
   "fgivenx.plot.plot_lines",
   "matplotlib.pyplot.subplots"
  ],
  "type": "function"
 },
 "fgivenx.test.test_plot.test_plot_lines_no_ax": {
  "lineno": 74,
  "symbols_in_volume": [
   "fgivenx.plot.plot_lines",
   "matplotlib.pyplot.subplots"
  ],
  "type": "function"
 },
 "fgivenx.test.test_plot.test_plot_no_ax": {
  "lineno": 33,
  "symbols_in_volume": [
   "fgivenx.plot.plot",
   "matplotlib.pyplot.subplots"
  ],
  "type": "function"
 },
 "fgivenx.test.test_plot.test_plot_nolines": {
  "lineno": 51,
  "symbols_in_volume": [
   "fgivenx.plot.plot",
   "matplotlib.pyplot.subplots"
  ],
  "type": "function"
 },
 "fgivenx.test.test_plot.test_plot_rasterize": {
  "lineno": 45,
  "symbols_in_volume": [
   "fgivenx.plot.plot",
   "matplotlib.pyplot.subplots"
  ],
  "type": "function"
 },
 "fgivenx.test.test_plot.test_plot_smooth": {
  "lineno": 39,
  "symbols_in_volume": [
   "fgivenx.plot.plot",
   "matplotlib.pyplot.subplots"
  ],
  "type": "function"
 },
 "fgivenx.test.test_plot.test_plot_wrong_argument": {
  "lineno": 27,
  "symbols_in_volume": [
   "fgivenx.plot.plot",
   "pytest.raises"
  ],
  "type": "function"
 },
 "fgivenx.test.test_samples": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fgivenx.test.test_samples.test_compute_samples": {
  "lineno": 48,
  "symbols_in_volume": [
   "fgivenx.samples.compute_samples",
   "numpy.array",
   "numpy.linspace",
   "numpy.outer",
   "numpy.random.normal",
   "numpy.random.seed",
   "numpy.testing.assert_allclose",
   "os.path.isfile",
   "pytest.raises",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "fgivenx.test.test_samples.test_compute_samples.f": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fgivenx.test.test_samples.test_samples_from_getdist_chains": {
  "lineno": 11,
  "symbols_in_volume": [
   "fgivenx.samples.samples_from_getdist_chains",
   "getdist.mcsamples.MCSamples",
   "numpy.array",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal",
   "shutil.rmtree"
  ],
  "type": "function"
 }
}