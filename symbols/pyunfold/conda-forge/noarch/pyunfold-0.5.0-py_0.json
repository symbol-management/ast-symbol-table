{
 "pyunfold": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyunfold.__version__": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyunfold.callbacks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyunfold.callbacks.Callback": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyunfold.callbacks.Callback.__init__": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.callbacks.Callback.on_iteration_begin": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.callbacks.Callback.on_iteration_end": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.callbacks.Callback.on_unfolding_begin": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.callbacks.Callback.on_unfolding_end": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.callbacks.CallbackList": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyunfold.callbacks.CallbackList.__init__": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.callbacks.CallbackList.__iter__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.callbacks.CallbackList.__len__": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.callbacks.CallbackList.on_iteration_begin": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.callbacks.CallbackList.on_iteration_end": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.callbacks.CallbackList.on_unfolding_begin": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.callbacks.CallbackList.on_unfolding_end": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.callbacks.Logger": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyunfold.callbacks.Logger.__init__": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.callbacks.Logger.on_iteration_end": {
  "lineno": 71,
  "symbols_in_volume": [
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "pyunfold.callbacks.Regularizer": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyunfold.callbacks.Regularizer.__init__": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.callbacks.SplineRegularizer": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyunfold.callbacks.SplineRegularizer.__init__": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "pyunfold.callbacks.SplineRegularizer.on_iteration_end": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.empty",
   "numpy.unique",
   "scipy.interpolate.UnivariateSpline"
  ],
  "type": "function"
 },
 "pyunfold.callbacks.extract_regularizer": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.callbacks.setup_callbacks_regularizer": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.callbacks.validate_callbacks": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.mix": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyunfold.mix.CovarianceMatrix": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyunfold.mix.CovarianceMatrix.__init__": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pyunfold.mix.CovarianceMatrix._adye_propagation_corrections": {
  "lineno": 170,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "pyunfold.mix.CovarianceMatrix._initialize_dcdP": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.outer",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pyunfold.mix.CovarianceMatrix.getVc0": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.mix.CovarianceMatrix.getVc1": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.mix.CovarianceMatrix.getVcPP": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.mix.CovarianceMatrix.getVcd": {
  "lineno": 200,
  "symbols_in_volume": [
   "numpy.diag"
  ],
  "type": "function"
 },
 "pyunfold.mix.CovarianceMatrix.get_cov": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.mix.CovarianceMatrix.set_current_state": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.mix.Mixer": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyunfold.mix.Mixer.__init__": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pyunfold.mix.Mixer.get_MC_err": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "pyunfold.mix.Mixer.get_cov": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.mix.Mixer.get_stat_err": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "pyunfold.mix.Mixer.smear": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "pyunfold.mix.multinomial_covariance": {
  "lineno": 267,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pyunfold.mix.poisson_covariance": {
  "lineno": 256,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pyunfold.priors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyunfold.priors.jeffreys_prior": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.log",
   "numpy.sum"
  ],
  "type": "function"
 },
 "pyunfold.priors.setup_prior": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.amin",
   "numpy.asarray",
   "numpy.ndarray",
   "numpy.sum",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pyunfold.priors.uniform_prior": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.full"
  ],
  "type": "function"
 },
 "pyunfold.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyunfold.tests.conftest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyunfold.tests.example": {
  "lineno": null,
  "symbols_in_volume": [
   "pyunfold.Logger",
   "pyunfold.iterative_unfold"
  ],
  "type": "module"
 },
 "pyunfold.tests.example2": {
  "lineno": null,
  "symbols_in_volume": [
   "pyunfold.iterative_unfold"
  ],
  "type": "module"
 },
 "pyunfold.tests.example_non_square": {
  "lineno": null,
  "symbols_in_volume": [
   "pyunfold.iterative_unfold"
  ],
  "type": "module"
 },
 "pyunfold.tests.fixtures": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyunfold.tests.fixtures.example_dataset": {
  "lineno": 7,
  "symbols_in_volume": [
   "collections.namedtuple",
   "numpy.array",
   "numpy.full_like",
   "numpy.histogram",
   "numpy.histogram2d",
   "numpy.linspace",
   "numpy.random.normal",
   "numpy.sqrt",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_callbacks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyunfold.tests.test_callbacks.test_Logger_isinstance_Callback": {
  "lineno": 50,
  "symbols_in_volume": [
   "pyunfold.callbacks.Callback",
   "pyunfold.callbacks.Logger"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_SplineRegularizer": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_allclose",
   "pyunfold.callbacks.SplineRegularizer",
   "pyunfold.unfold.iterative_unfold",
   "scipy.interpolate.UnivariateSpline"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_SplineRegularizer_groups": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.empty",
   "numpy.empty_like",
   "numpy.testing.assert_allclose",
   "numpy.unique",
   "pyunfold.callbacks.SplineRegularizer",
   "pyunfold.unfold.iterative_unfold",
   "scipy.interpolate.UnivariateSpline"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_SplineRegularizer_groups_raises": {
  "lineno": 133,
  "symbols_in_volume": [
   "numpy.empty",
   "pytest.raises",
   "pyunfold.callbacks.SplineRegularizer",
   "pyunfold.unfold.iterative_unfold"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_SplineRegularizer_isinstance_Regularizer": {
  "lineno": 56,
  "symbols_in_volume": [
   "pyunfold.callbacks.Regularizer",
   "pyunfold.callbacks.SplineRegularizer"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_callback_attributes": {
  "lineno": 14,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pyunfold.callbacks.Callback"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_callbacklist_callbacks": {
  "lineno": 215,
  "symbols_in_volume": [
   "pyunfold.callbacks.CallbackList",
   "pyunfold.callbacks.Logger",
   "pyunfold.callbacks.SplineRegularizer"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_callbacklist_empty": {
  "lineno": 210,
  "symbols_in_volume": [
   "pyunfold.callbacks.CallbackList"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_callbacklist_method_calls": {
  "lineno": 224,
  "symbols_in_volume": [
   "pyunfold.callbacks.CallbackList"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_callbacklist_method_calls.MethodChecker": {
  "lineno": 225,
  "symbols_in_volume": [
   "pyunfold.callbacks.Callback"
  ],
  "type": "class"
 },
 "pyunfold.tests.test_callbacks.test_callbacklist_method_calls.MethodChecker.__init__": {
  "lineno": 226,
  "symbols_in_volume": [
   "pyunfold.callbacks.Callback"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_callbacklist_method_calls.MethodChecker.on_iteration_begin": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_callbacklist_method_calls.MethodChecker.on_iteration_end": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_callbacklist_method_calls.MethodChecker.on_unfolding_begin": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_callbacklist_method_calls.MethodChecker.on_unfolding_end": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_extract_regularizer": {
  "lineno": 194,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pyunfold.callbacks.Logger",
   "pyunfold.callbacks.SplineRegularizer",
   "pyunfold.callbacks.extract_regularizer"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_extract_regularizer_mutliple_raises": {
  "lineno": 180,
  "symbols_in_volume": [
   "pytest.raises",
   "pyunfold.callbacks.SplineRegularizer",
   "pyunfold.callbacks.extract_regularizer"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_extract_regularizer_no_regularizer": {
  "lineno": 189,
  "symbols_in_volume": [
   "pyunfold.callbacks.Logger",
   "pyunfold.callbacks.extract_regularizer"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_logger": {
  "lineno": 22,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pyunfold.callbacks.Logger",
   "pyunfold.unfold.iterative_unfold"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_setup_callbacks_regularizer": {
  "lineno": 200,
  "symbols_in_volume": [
   "pyunfold.callbacks.CallbackList",
   "pyunfold.callbacks.Logger",
   "pyunfold.callbacks.SplineRegularizer",
   "pyunfold.callbacks.setup_callbacks_regularizer"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_validate_callbacks": {
  "lineno": 157,
  "symbols_in_volume": [
   "pyunfold.callbacks.Logger",
   "pyunfold.callbacks.SplineRegularizer",
   "pyunfold.callbacks.validate_callbacks"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_validate_callbacks_raises": {
  "lineno": 171,
  "symbols_in_volume": [
   "pytest.raises",
   "pyunfold.callbacks.Logger",
   "pyunfold.callbacks.SplineRegularizer",
   "pyunfold.callbacks.validate_callbacks"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_validate_callbacks_single_callback": {
  "lineno": 166,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pyunfold.callbacks.Logger",
   "pyunfold.callbacks.SplineRegularizer",
   "pyunfold.callbacks.validate_callbacks"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_validate_empty_callbacks": {
  "lineno": 162,
  "symbols_in_volume": [
   "pyunfold.callbacks.validate_callbacks"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_init": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyunfold.tests.test_init.test_iterative_unfold_exists": {
  "lineno": 9,
  "symbols_in_volume": [
   "pyunfold"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_init.test_version_exists": {
  "lineno": 5,
  "symbols_in_volume": [
   "pyunfold"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_mix": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.full_like",
   "numpy.ones",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.sqrt",
   "pyunfold.mix.Mixer"
  ],
  "type": "module"
 },
 "pyunfold.tests.test_mix.test_mixer_2d_response_check": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.sqrt",
   "pytest.raises",
   "pyunfold.mix.Mixer"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_mix.test_mixer_invalid_effects_bins_raises": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.sqrt",
   "pytest.raises",
   "pyunfold.mix.Mixer"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_mix.test_mixer_smear_invalid_cause_bins_raises": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.arange",
   "pytest.raises",
   "pyunfold.mix.Mixer"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_mix.test_mixer_zeros_prior": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_priors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyunfold.tests.test_priors.test_jeffreys_prior": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.log",
   "numpy.sum",
   "numpy.testing.assert_allclose",
   "pyunfold.priors.jeffreys_prior"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_priors.test_jeffreys_prior_array_like": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "pyunfold.priors.jeffreys_prior"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_priors.test_jeffreys_prior_normalized": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_allclose",
   "pyunfold.priors.jeffreys_prior"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_priors.test_setup_prior_invalid_prior": {
  "lineno": 9,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyunfold.priors.setup_prior"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_priors.test_setup_prior_negative_raises": {
  "lineno": 29,
  "symbols_in_volume": [
   "pytest.raises",
   "pyunfold.priors.setup_prior"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_priors.test_setup_prior_non_normalized_raises": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.sum",
   "pytest.raises",
   "pyunfold.priors.setup_prior"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_priors.test_uniform_prior": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.sum",
   "numpy.testing.assert_allclose",
   "numpy.unique",
   "pytest.mark.parametrize",
   "pyunfold.priors.uniform_prior"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_teststat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyunfold.tests.test_teststat.test_get_ts": {
  "lineno": 7,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pyunfold.teststat.TEST_STATISTICS.keys",
   "pyunfold.teststat.TEST_STATISTICS.values",
   "pyunfold.teststat.get_ts"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_teststat.test_get_ts_raises": {
  "lineno": 12,
  "symbols_in_volume": [
   "pytest.raises",
   "pyunfold.teststat.TEST_STATISTICS.keys",
   "pyunfold.teststat.get_ts"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_teststat.test_ts_calc": {
  "lineno": 22,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pyunfold.teststat.TEST_STATISTICS.keys",
   "pyunfold.teststat.get_ts"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_unfold": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info.major"
  ],
  "type": "module"
 },
 "pyunfold.tests.test_unfold.test_example": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.arange",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join",
   "pandas.read_hdf",
   "pandas.testing.assert_frame_equal",
   "pytest.importorskip",
   "pyunfold.priors.jeffreys_prior",
   "pyunfold.unfold.iterative_unfold"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_unfold.test_example_2": {
  "lineno": 115,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join",
   "pandas.read_hdf",
   "pandas.testing.assert_frame_equal",
   "pytest.importorskip",
   "pyunfold.unfold.iterative_unfold"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_unfold.test_example_non_square_response": {
  "lineno": 144,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join",
   "pandas.read_hdf",
   "pandas.testing.assert_frame_equal",
   "pytest.importorskip",
   "pyunfold.unfold.iterative_unfold"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_unfold.test_iterative_unfold": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.full_like",
   "numpy.histogram",
   "numpy.linspace",
   "numpy.ones_like",
   "numpy.random.normal",
   "numpy.random.seed",
   "numpy.sqrt",
   "pytest.mark.parametrize",
   "pyunfold.unfold.iterative_unfold"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_unfold.test_iterative_unfold_cov_type_case_insensitive": {
  "lineno": 208,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "pyunfold.unfold.iterative_unfold"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_unfold.test_iterative_unfold_cov_type_raises": {
  "lineno": 230,
  "symbols_in_volume": [
   "pytest.raises",
   "pyunfold.unfold.iterative_unfold"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_unfold.test_iterative_unfold_keys": {
  "lineno": 246,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pyunfold.unfold.iterative_unfold"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_unfold.test_iterative_unfold_max_iter": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.full_like",
   "numpy.histogram",
   "numpy.linspace",
   "numpy.ones_like",
   "numpy.random.normal",
   "numpy.random.seed",
   "numpy.sqrt",
   "pyunfold.priors.jeffreys_prior",
   "pyunfold.unfold.iterative_unfold"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_unfold.test_iterative_unfold_negative_input_raises": {
  "lineno": 192,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyunfold.unfold.iterative_unfold"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_unfold.test_iterative_unfold_none_input_raises": {
  "lineno": 176,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyunfold.unfold.iterative_unfold"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_unfold.test_unfolding_matrix": {
  "lineno": 269,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.testing.assert_array_equal",
   "pyunfold.unfold.iterative_unfold"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyunfold.tests.test_utils.test_assert_same_shape": {
  "lineno": 60,
  "symbols_in_volume": [
   "pyunfold.utils.assert_same_shape"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_utils.test_assert_same_shape_raises_1d": {
  "lineno": 66,
  "symbols_in_volume": [
   "pytest.raises",
   "pyunfold.utils.assert_same_shape"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_utils.test_assert_same_shape_raises_2d": {
  "lineno": 73,
  "symbols_in_volume": [
   "pytest.raises",
   "pyunfold.utils.assert_same_shape"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_utils.test_cast_to_array_multi_input": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "numpy.testing.assert_allclose",
   "pyunfold.utils.cast_to_array"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_utils.test_cast_to_array_no_copy": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.array",
   "pyunfold.utils.cast_to_array"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_utils.test_cast_to_array_single_input": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.testing.assert_allclose",
   "pyunfold.utils.cast_to_array"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_utils.test_none_to_empty_list_multi_input": {
  "lineno": 15,
  "symbols_in_volume": [
   "pyunfold.utils.none_to_empty_list"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_utils.test_none_to_empty_list_single_input": {
  "lineno": 10,
  "symbols_in_volume": [
   "pyunfold.utils.none_to_empty_list"
  ],
  "type": "function"
 },
 "pyunfold.tests.test_utils.test_safe_inverse": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "pyunfold.utils.safe_inverse"
  ],
  "type": "function"
 },
 "pyunfold.tests.testing_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyunfold.tests.testing_utils.diagonal_response": {
  "lineno": 5,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "pyunfold.tests.testing_utils.triangular_response": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.sqrt",
   "numpy.triu_indices",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pyunfold.teststat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyunfold.teststat.BF": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyunfold.teststat.BF.calc": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.sum",
   "scipy.special.gammaln"
  ],
  "type": "function"
 },
 "pyunfold.teststat.Chi2": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyunfold.teststat.Chi2.calc": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "pyunfold.teststat.KS": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyunfold.teststat.KS.calc": {
  "lineno": 200,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.cumsum",
   "numpy.max",
   "numpy.sqrt",
   "numpy.sum"
  ],
  "type": "function"
 },
 "pyunfold.teststat.RMD": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyunfold.teststat.RMD.calc": {
  "lineno": 169,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.max"
  ],
  "type": "function"
 },
 "pyunfold.teststat.TestStat": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyunfold.teststat.TestStat.__init__": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.inf"
  ],
  "type": "function"
 },
 "pyunfold.teststat.TestStat.calc": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.teststat.TestStat.check_lengths": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.teststat.TestStat.get_array_range": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.teststat.TestStat.pass_tol": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.teststat.TestStat.set_dof": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.teststat.TestStat.set_test_range_bins": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.searchsorted"
  ],
  "type": "function"
 },
 "pyunfold.teststat.get_ts": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.unfold": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyunfold.unfold._unfold": {
  "lineno": 175,
  "symbols_in_volume": [
   "pandas.DataFrame.from_records"
  ],
  "type": "function"
 },
 "pyunfold.unfold.iterative_unfold": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.amin",
   "numpy.sum"
  ],
  "type": "function"
 },
 "pyunfold.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyunfold.utils.assert_same_shape": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.utils.cast_to_array": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "pyunfold.utils.none_to_empty_list": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyunfold.utils.safe_inverse": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.errstate"
  ],
  "type": "function"
 }
}