{
 "pyunfold": {
  "data": {},
  "type": "module"
 },
 "pyunfold.__version__": {
  "data": {},
  "type": "module"
 },
 "pyunfold.__version__.__version__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "pyunfold.callbacks": {
  "data": {},
  "type": "module"
 },
 "pyunfold.callbacks.Callback": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyunfold.callbacks.Callback.__init__": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "pyunfold.callbacks.Callback.on_iteration_begin": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "pyunfold.callbacks.Callback.on_iteration_end": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "pyunfold.callbacks.Callback.on_unfolding_begin": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "pyunfold.callbacks.Callback.on_unfolding_end": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "pyunfold.callbacks.Logger": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pyunfold.callbacks.Callback"
   ]
  },
  "type": "class"
 },
 "pyunfold.callbacks.Logger.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pyunfold.callbacks.Callback",
    "super"
   ]
  },
  "type": "function"
 },
 "pyunfold.callbacks.Logger.on_iteration_end": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "pyunfold.callbacks.sys"
   ]
  },
  "type": "function"
 },
 "pyunfold.callbacks.Regularizer": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyunfold.callbacks.Regularizer.__init__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "pyunfold.callbacks.SplineRegularizer": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "pyunfold.callbacks.Callback",
    "pyunfold.callbacks.Regularizer"
   ]
  },
  "type": "class"
 },
 "pyunfold.callbacks.SplineRegularizer.__init__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "pyunfold.callbacks.SplineRegularizer",
    "super"
   ]
  },
  "type": "function"
 },
 "pyunfold.callbacks.SplineRegularizer.on_iteration_end": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.arange",
    "scipy.interpolate.UnivariateSpline",
    "spline"
   ]
  },
  "type": "function"
 },
 "pyunfold.callbacks.UnivariateSpline": {
  "data": {
   "shadows": "scipy.interpolate.UnivariateSpline"
  },
  "type": "import"
 },
 "pyunfold.callbacks.extract_regularizer": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "NotImplementedError",
    "isinstance",
    "len",
    "pyunfold.callbacks.Regularizer",
    "pyunfold.callbacks.validate_callbacks"
   ]
  },
  "type": "function"
 },
 "pyunfold.callbacks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyunfold.callbacks.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyunfold.callbacks.validate_callbacks": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "isinstance",
    "pyunfold.callbacks.Callback"
   ]
  },
  "type": "function"
 },
 "pyunfold.mix": {
  "data": {},
  "type": "module"
 },
 "pyunfold.mix.CovarianceMatrix": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyunfold.mix.CovarianceMatrix.SetErrorPropFlag": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pyunfold.mix.CovarianceMatrix.SetPecCovType": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pyunfold.mix.CovarianceMatrix.__init__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.sum",
    "numpy.zeros",
    "safe_inverse"
   ]
  },
  "type": "function"
 },
 "pyunfold.mix.CovarianceMatrix.getVc0": {
  "data": {
   "lineno": 208
  },
  "type": "function"
 },
 "pyunfold.mix.CovarianceMatrix.getVc1": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "pyunfold.mix.CovarianceMatrix.getVcPP": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.zeros",
    "range",
    "safe_inverse"
   ]
  },
  "type": "function"
 },
 "pyunfold.mix.CovarianceMatrix.getVcd": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "numpy.diag"
   ]
  },
  "type": "function"
 },
 "pyunfold.mix.CovarianceMatrix.get_cov": {
  "data": {
   "lineno": 263
  },
  "type": "function"
 },
 "pyunfold.mix.CovarianceMatrix.set_current_state": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.dot",
    "numpy.zeros",
    "range",
    "safe_inverse"
   ]
  },
  "type": "function"
 },
 "pyunfold.mix.Mixer": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyunfold.mix.Mixer.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "CovarianceMatrix",
    "ValueError",
    "len",
    "numpy.zeros",
    "safe_inverse"
   ]
  },
  "type": "function"
 },
 "pyunfold.mix.Mixer.get_MC_err": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "pyunfold.mix.Mixer.get_cov": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "pyunfold.mix.Mixer.get_stat_err": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "pyunfold.mix.Mixer.smear": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ValueError",
    "itertools.product",
    "len",
    "numpy.dot",
    "numpy.zeros",
    "range",
    "safe_inverse"
   ]
  },
  "type": "function"
 },
 "pyunfold.mix.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyunfold.mix.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyunfold.mix.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyunfold.mix.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pyunfold.priors": {
  "data": {},
  "type": "module"
 },
 "pyunfold.priors.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyunfold.priors.jeffreys_prior": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "pyunfold.priors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyunfold.priors.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyunfold.priors.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyunfold.priors.setup_prior": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "isinstance",
    "list",
    "numpy.allclose",
    "numpy.arange",
    "numpy.asarray",
    "numpy.ndarray",
    "numpy.sum",
    "pandas.Series",
    "pyunfold.priors.jeffreys_prior",
    "six.string_types",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pyunfold.priors.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "pyunfold.tests": {
  "data": {},
  "type": "module"
 },
 "pyunfold.tests.example": {
  "data": {
   "symbols_in_volume": [
    "pyunfold.Logger",
    "pyunfold.iterative_unfold",
    "pyunfold.tests.example.data",
    "pyunfold.tests.example.data_err",
    "pyunfold.tests.example.efficiencies",
    "pyunfold.tests.example.efficiencies_err",
    "pyunfold.tests.example.response",
    "pyunfold.tests.example.response_err"
   ]
  },
  "type": "module"
 },
 "pyunfold.tests.example.Logger": {
  "data": {
   "shadows": "pyunfold.Logger"
  },
  "type": "import"
 },
 "pyunfold.tests.example.data": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "pyunfold.tests.example.data_err": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pyunfold.tests.example.efficiencies": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pyunfold.tests.example.efficiencies_err": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pyunfold.tests.example.iterative_unfold": {
  "data": {
   "shadows": "pyunfold.iterative_unfold"
  },
  "type": "import"
 },
 "pyunfold.tests.example.response": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pyunfold.tests.example.response_err": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pyunfold.tests.example.unfolded": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pyunfold.tests.example2": {
  "data": {
   "symbols_in_volume": [
    "print",
    "pyunfold.iterative_unfold",
    "pyunfold.tests.example2.data",
    "pyunfold.tests.example2.data_err",
    "pyunfold.tests.example2.efficiencies",
    "pyunfold.tests.example2.efficiencies_err",
    "pyunfold.tests.example2.priors",
    "pyunfold.tests.example2.response",
    "pyunfold.tests.example2.response_err",
    "pyunfold.tests.example2.unfolded"
   ]
  },
  "type": "module"
 },
 "pyunfold.tests.example2.data": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "pyunfold.tests.example2.data_err": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pyunfold.tests.example2.efficiencies": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pyunfold.tests.example2.efficiencies_err": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pyunfold.tests.example2.iterative_unfold": {
  "data": {
   "shadows": "pyunfold.iterative_unfold"
  },
  "type": "import"
 },
 "pyunfold.tests.example2.priors": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pyunfold.tests.example2.response": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pyunfold.tests.example2.response_err": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pyunfold.tests.example2.unfolded": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pyunfold.tests.example_non_square": {
  "data": {
   "symbols_in_volume": [
    "print",
    "pyunfold.iterative_unfold",
    "pyunfold.tests.example_non_square.data",
    "pyunfold.tests.example_non_square.data_err",
    "pyunfold.tests.example_non_square.efficiencies",
    "pyunfold.tests.example_non_square.efficiencies_err",
    "pyunfold.tests.example_non_square.priors",
    "pyunfold.tests.example_non_square.response",
    "pyunfold.tests.example_non_square.response_err",
    "pyunfold.tests.example_non_square.unfolded"
   ]
  },
  "type": "module"
 },
 "pyunfold.tests.example_non_square.data": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "pyunfold.tests.example_non_square.data_err": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pyunfold.tests.example_non_square.efficiencies": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pyunfold.tests.example_non_square.efficiencies_err": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pyunfold.tests.example_non_square.iterative_unfold": {
  "data": {
   "shadows": "pyunfold.iterative_unfold"
  },
  "type": "import"
 },
 "pyunfold.tests.example_non_square.priors": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pyunfold.tests.example_non_square.response": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pyunfold.tests.example_non_square.response_err": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pyunfold.tests.example_non_square.unfolded": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pyunfold.tests.test_callbacks": {
  "data": {},
  "type": "module"
 },
 "pyunfold.tests.test_callbacks.Callback": {
  "data": {
   "shadows": "pyunfold.callbacks.Callback"
  },
  "type": "import"
 },
 "pyunfold.tests.test_callbacks.Logger": {
  "data": {
   "shadows": "pyunfold.callbacks.Logger"
  },
  "type": "import"
 },
 "pyunfold.tests.test_callbacks.Regularizer": {
  "data": {
   "shadows": "pyunfold.callbacks.Regularizer"
  },
  "type": "import"
 },
 "pyunfold.tests.test_callbacks.SplineRegularizer": {
  "data": {
   "shadows": "pyunfold.callbacks.SplineRegularizer"
  },
  "type": "import"
 },
 "pyunfold.tests.test_callbacks.UnivariateSpline": {
  "data": {
   "shadows": "scipy.interpolate.UnivariateSpline"
  },
  "type": "import"
 },
 "pyunfold.tests.test_callbacks.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyunfold.tests.test_callbacks.example_dataset": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ExampleInput",
    "collections.namedtuple",
    "float",
    "int",
    "numpy.array",
    "numpy.full_like",
    "numpy.histogram",
    "numpy.histogram2d",
    "numpy.linspace",
    "numpy.random.normal",
    "numpy.sqrt",
    "pyunfold.tests.test_callbacks.pytest"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.extract_regularizer": {
  "data": {
   "shadows": "pyunfold.callbacks.extract_regularizer"
  },
  "type": "import"
 },
 "pyunfold.tests.test_callbacks.iterative_unfold": {
  "data": {
   "shadows": "pyunfold.unfold.iterative_unfold"
  },
  "type": "import"
 },
 "pyunfold.tests.test_callbacks.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pyunfold.tests.test_callbacks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyunfold.tests.test_callbacks.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyunfold.tests.test_callbacks.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyunfold.tests.test_callbacks.test_Logger_isinstance_Callback": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "isinstance",
    "pyunfold.callbacks.Callback",
    "pyunfold.callbacks.Logger"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_SplineRegularizer": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.arange",
    "numpy.testing.assert_allclose",
    "pyunfold.callbacks.SplineRegularizer",
    "pyunfold.tests.test_callbacks.example_dataset",
    "pyunfold.unfold.iterative_unfold",
    "scipy.interpolate.UnivariateSpline",
    "spline"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_SplineRegularizer_isinstance_Regularizer": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "isinstance",
    "pyunfold.callbacks.Regularizer",
    "pyunfold.callbacks.SplineRegularizer"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_callback_attributes": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "hasattr",
    "pyunfold.callbacks.Callback",
    "pyunfold.tests.test_callbacks.pytest"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_extract_regularizer": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "pyunfold.callbacks.Logger",
    "pyunfold.callbacks.SplineRegularizer",
    "pyunfold.callbacks.extract_regularizer",
    "pyunfold.tests.test_callbacks.pytest"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_extract_regularizer_mutliple_raises": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyunfold.callbacks.SplineRegularizer",
    "pyunfold.callbacks.extract_regularizer",
    "pyunfold.tests.test_callbacks.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_extract_regularizer_no_regularizer": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "pyunfold.callbacks.Logger",
    "pyunfold.callbacks.extract_regularizer"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_logger": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pyunfold.callbacks.Logger",
    "pyunfold.tests.test_callbacks.example_dataset",
    "pyunfold.tests.test_callbacks.pytest",
    "pyunfold.unfold.iterative_unfold"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_validate_callbacks": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "pyunfold.callbacks.Logger",
    "pyunfold.callbacks.SplineRegularizer",
    "pyunfold.callbacks.validate_callbacks"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_validate_callbacks_raises": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "TypeError",
    "pyunfold.callbacks.Logger",
    "pyunfold.callbacks.SplineRegularizer",
    "pyunfold.callbacks.validate_callbacks",
    "pyunfold.tests.test_callbacks.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_validate_callbacks_single_callback": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "pyunfold.callbacks.Logger",
    "pyunfold.callbacks.SplineRegularizer",
    "pyunfold.callbacks.validate_callbacks",
    "pyunfold.tests.test_callbacks.pytest"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.test_validate_empty_callbacks": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "pyunfold.callbacks.validate_callbacks"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_callbacks.validate_callbacks": {
  "data": {
   "shadows": "pyunfold.callbacks.validate_callbacks"
  },
  "type": "import"
 },
 "pyunfold.tests.test_init": {
  "data": {},
  "type": "module"
 },
 "pyunfold.tests.test_init.pyunfold": {
  "data": {
   "shadows": "pyunfold"
  },
  "type": "import"
 },
 "pyunfold.tests.test_init.test_iterative_unfold_exists": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "hasattr",
    "pyunfold.tests.test_init.pyunfold"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_init.test_version_exists": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "hasattr",
    "pyunfold.tests.test_init.pyunfold"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_mix": {
  "data": {
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.full_like",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.sqrt",
    "pyunfold.mix.Mixer",
    "pyunfold.tests.test_mix.data",
    "pyunfold.tests.test_mix.data_err",
    "pyunfold.tests.test_mix.efficiencies",
    "pyunfold.tests.test_mix.efficiencies_err",
    "pyunfold.tests.test_mix.num_causes",
    "pyunfold.tests.test_mix.num_effects",
    "pyunfold.tests.test_mix.response",
    "pyunfold.tests.test_mix.response_err"
   ]
  },
  "type": "module"
 },
 "pyunfold.tests.test_mix.Mixer": {
  "data": {
   "shadows": "pyunfold.mix.Mixer"
  },
  "type": "import"
 },
 "pyunfold.tests.test_mix.data": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pyunfold.tests.test_mix.data_err": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pyunfold.tests.test_mix.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyunfold.tests.test_mix.efficiencies": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pyunfold.tests.test_mix.efficiencies_err": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pyunfold.tests.test_mix.mixer": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pyunfold.tests.test_mix.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyunfold.tests.test_mix.num_causes": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pyunfold.tests.test_mix.num_effects": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pyunfold.tests.test_mix.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyunfold.tests.test_mix.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyunfold.tests.test_mix.response": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pyunfold.tests.test_mix.response_err": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pyunfold.tests.test_mix.test_mixer_invalid_effects_bins_raises": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "numpy.sqrt",
    "pyunfold.mix.Mixer",
    "pyunfold.tests.test_mix.data",
    "pyunfold.tests.test_mix.data_err",
    "pyunfold.tests.test_mix.efficiencies",
    "pyunfold.tests.test_mix.efficiencies_err",
    "pyunfold.tests.test_mix.num_effects",
    "pyunfold.tests.test_mix.pytest",
    "pyunfold.tests.test_mix.response",
    "pyunfold.tests.test_mix.response_err",
    "str"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_mix.test_mixer_smear_invalid_cause_bins_raises": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "pyunfold.mix.Mixer",
    "pyunfold.tests.test_mix.data",
    "pyunfold.tests.test_mix.data_err",
    "pyunfold.tests.test_mix.efficiencies",
    "pyunfold.tests.test_mix.efficiencies_err",
    "pyunfold.tests.test_mix.mixer",
    "pyunfold.tests.test_mix.num_causes",
    "pyunfold.tests.test_mix.pytest",
    "pyunfold.tests.test_mix.response",
    "pyunfold.tests.test_mix.response_err",
    "str"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_mix.test_mixer_zeros_prior": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "pyunfold.tests.test_mix.mixer",
    "pyunfold.tests.test_mix.num_causes"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_priors": {
  "data": {},
  "type": "module"
 },
 "pyunfold.tests.test_priors.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyunfold.tests.test_priors.jeffreys_prior": {
  "data": {
   "shadows": "pyunfold.priors.jeffreys_prior"
  },
  "type": "import"
 },
 "pyunfold.tests.test_priors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyunfold.tests.test_priors.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyunfold.tests.test_priors.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyunfold.tests.test_priors.setup_prior": {
  "data": {
   "shadows": "pyunfold.priors.setup_prior"
  },
  "type": "import"
 },
 "pyunfold.tests.test_priors.test_jeffreys_prior_normalized": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose",
    "pyunfold.priors.jeffreys_prior"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_priors.test_setup_prior_invalid_prior": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "TypeError",
    "pyunfold.priors.setup_prior",
    "pyunfold.tests.test_priors.pytest",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_priors.test_setup_prior_jeffreys_prior_extra_raises": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "AssertionError",
    "pyunfold.priors.setup_prior",
    "pyunfold.tests.test_priors.pytest"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_priors.test_setup_prior_jeffreys_prior_spelling": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pyunfold.priors.setup_prior",
    "pyunfold.tests.test_priors.pytest"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_priors.test_setup_prior_non_normalized_raises": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "numpy.sum",
    "pyunfold.priors.setup_prior",
    "pyunfold.tests.test_priors.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_teststat": {
  "data": {},
  "type": "module"
 },
 "pyunfold.tests.test_teststat.TEST_STATISTICS": {
  "data": {
   "shadows": "pyunfold.teststat.TEST_STATISTICS"
  },
  "type": "import"
 },
 "pyunfold.tests.test_teststat.get_ts": {
  "data": {
   "shadows": "pyunfold.teststat.get_ts"
  },
  "type": "import"
 },
 "pyunfold.tests.test_teststat.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyunfold.tests.test_teststat.test_get_ts": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "pyunfold.tests.test_teststat.pytest",
    "pyunfold.teststat.TEST_STATISTICS.keys",
    "pyunfold.teststat.TEST_STATISTICS.values",
    "pyunfold.teststat.get_ts"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_teststat.test_get_ts_raises": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ValueError",
    "pyunfold.tests.test_teststat.pytest",
    "pyunfold.teststat.TEST_STATISTICS.keys",
    "pyunfold.teststat.get_ts",
    "str"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_unfold": {
  "data": {
   "symbols_in_volume": [
    "pyunfold.tests.test_unfold.sys"
   ]
  },
  "type": "module"
 },
 "pyunfold.tests.test_unfold.PY_VERSION": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pyunfold.tests.test_unfold.columns": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pyunfold.tests.test_unfold.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyunfold.tests.test_unfold.iterative_unfold": {
  "data": {
   "shadows": "pyunfold.unfold.iterative_unfold"
  },
  "type": "import"
 },
 "pyunfold.tests.test_unfold.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyunfold.tests.test_unfold.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyunfold.tests.test_unfold.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyunfold.tests.test_unfold.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyunfold.tests.test_unfold.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyunfold.tests.test_unfold.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyunfold.tests.test_unfold.test_example": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "pandas.read_hdf",
    "pandas.testing.assert_frame_equal",
    "pyunfold.tests.test_unfold.PY_VERSION",
    "pyunfold.tests.test_unfold.columns",
    "pyunfold.tests.test_unfold.os",
    "pyunfold.tests.test_unfold.pytest",
    "pyunfold.unfold.iterative_unfold"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_unfold.test_example_2": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "pandas.read_hdf",
    "pandas.testing.assert_frame_equal",
    "pyunfold.tests.test_unfold.PY_VERSION",
    "pyunfold.tests.test_unfold.columns",
    "pyunfold.tests.test_unfold.os",
    "pyunfold.tests.test_unfold.pytest",
    "pyunfold.unfold.iterative_unfold"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_unfold.test_example_non_square_response": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "pandas.read_hdf",
    "pandas.testing.assert_frame_equal",
    "pyunfold.tests.test_unfold.PY_VERSION",
    "pyunfold.tests.test_unfold.columns",
    "pyunfold.tests.test_unfold.os",
    "pyunfold.tests.test_unfold.pytest",
    "pyunfold.unfold.iterative_unfold"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_unfold.test_iterative_unfold": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "diagonal_response",
    "float",
    "int",
    "len",
    "numpy.allclose",
    "numpy.full_like",
    "numpy.histogram",
    "numpy.linspace",
    "numpy.ones_like",
    "numpy.random.normal",
    "numpy.random.seed",
    "numpy.sqrt",
    "pyunfold.tests.test_unfold.pytest",
    "pyunfold.unfold.iterative_unfold",
    "triangular_response"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_unfold.test_iterative_unfold_max_iter": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "numpy.full_like",
    "numpy.histogram",
    "numpy.linspace",
    "numpy.ones_like",
    "numpy.random.normal",
    "numpy.random.seed",
    "numpy.sqrt",
    "pyunfold.unfold.iterative_unfold",
    "triangular_response"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_unfold.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "pyunfold.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "pyunfold.tests.test_utils.assert_kwargs_not_none": {
  "data": {
   "shadows": "pyunfold.utils.assert_kwargs_not_none"
  },
  "type": "import"
 },
 "pyunfold.tests.test_utils.assert_same_shape": {
  "data": {
   "shadows": "pyunfold.utils.assert_same_shape"
  },
  "type": "import"
 },
 "pyunfold.tests.test_utils.cast_to_array": {
  "data": {
   "shadows": "pyunfold.utils.cast_to_array"
  },
  "type": "import"
 },
 "pyunfold.tests.test_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyunfold.tests.test_utils.none_to_empty_list": {
  "data": {
   "shadows": "pyunfold.utils.none_to_empty_list"
  },
  "type": "import"
 },
 "pyunfold.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyunfold.tests.test_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyunfold.tests.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyunfold.tests.test_utils.safe_inverse": {
  "data": {
   "shadows": "pyunfold.utils.safe_inverse"
  },
  "type": "import"
 },
 "pyunfold.tests.test_utils.test_assert_kwargs_not_none_passes": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "example_func"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_utils.test_assert_kwargs_not_none_passes.example_func": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "pyunfold.utils.assert_kwargs_not_none"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_utils.test_assert_kwargs_not_none_raises": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ValueError",
    "example_func",
    "pyunfold.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_utils.test_assert_kwargs_not_none_raises.example_func": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pyunfold.utils.assert_kwargs_not_none"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_utils.test_assert_same_shape": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "pyunfold.utils.assert_same_shape"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_utils.test_assert_same_shape_raises_1d": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ValueError",
    "pyunfold.tests.test_utils.pytest",
    "pyunfold.utils.assert_same_shape"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_utils.test_assert_same_shape_raises_2d": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "pyunfold.tests.test_utils.pytest",
    "pyunfold.utils.assert_same_shape"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_utils.test_cast_to_array_multi_input": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.ndarray",
    "numpy.testing.assert_allclose",
    "pyunfold.utils.cast_to_array",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_utils.test_cast_to_array_no_copy": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.array",
    "pyunfold.utils.cast_to_array"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_utils.test_cast_to_array_single_input": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "numpy.testing.assert_allclose",
    "pyunfold.utils.cast_to_array"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_utils.test_none_to_empty_list_multi_input": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "pyunfold.utils.none_to_empty_list"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_utils.test_none_to_empty_list_single_input": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "pyunfold.utils.none_to_empty_list"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.test_utils.test_safe_inverse": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "int",
    "numpy.array",
    "pyunfold.tests.test_utils.pytest",
    "pyunfold.utils.safe_inverse"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.testing_utils": {
  "data": {},
  "type": "module"
 },
 "pyunfold.tests.testing_utils.diagonal_response": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "pyunfold.tests.testing_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyunfold.tests.testing_utils.triangular_response": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.triu_indices",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyunfold.teststat": {
  "data": {
   "symbols_in_volume": [
    "pyunfold.teststat.Chi2",
    "pyunfold.teststat.KS",
    "pyunfold.teststat.PF",
    "pyunfold.teststat.RMD"
   ]
  },
  "type": "module"
 },
 "pyunfold.teststat.Chi2": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "pyunfold.teststat.TestStat"
   ]
  },
  "type": "class"
 },
 "pyunfold.teststat.Chi2.Prob": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "scipy.special.gammainc"
   ]
  },
  "type": "function"
 },
 "pyunfold.teststat.Chi2.TSCalc": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pyunfold.teststat.KS": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "pyunfold.teststat.TestStat"
   ]
  },
  "type": "class"
 },
 "pyunfold.teststat.KS.Prob": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "Exception",
    "scipy.stats.kstwobign.sf"
   ]
  },
  "type": "function"
 },
 "pyunfold.teststat.KS.TSCalc": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.cumsum",
    "numpy.max",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pyunfold.teststat.PF": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "pyunfold.teststat.TestStat"
   ]
  },
  "type": "class"
 },
 "pyunfold.teststat.PF.TSCalc": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "len",
    "numpy.sum",
    "range",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "pyunfold.teststat.RMD": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "pyunfold.teststat.TestStat"
   ]
  },
  "type": "class"
 },
 "pyunfold.teststat.RMD.TSCalc": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "pyunfold.teststat.TEST_STATISTICS": {
  "data": {
   "lineno": 229
  },
  "type": "constant"
 },
 "pyunfold.teststat.TestStat": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyunfold.teststat.TestStat.GetArrayRange": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "pyunfold.teststat.TestStat.GetStats": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "pyunfold.teststat.TestStat.PrintName": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "pyunfold.teststat.TestStat.PrintStats": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "pyunfold.teststat.TestStat.Prob": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "pyunfold.teststat.TestStat.SetDOF": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "pyunfold.teststat.TestStat.SetStat": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "pyunfold.teststat.TestStat.SetTestRangeBins": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "len",
    "numpy.searchsorted"
   ]
  },
  "type": "function"
 },
 "pyunfold.teststat.TestStat.TSCalc": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyunfold.teststat.TestStat.TestLengths": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyunfold.teststat.TestStat.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "none_to_empty_list",
    "numpy.arange",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "pyunfold.teststat.TestStat.pass_tol": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "pyunfold.teststat.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyunfold.teststat.gammaq": {
  "data": {
   "shadows": "scipy.special.gammainc"
  },
  "type": "import"
 },
 "pyunfold.teststat.get_ts": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "ValueError",
    "pyunfold.teststat.TEST_STATISTICS"
   ]
  },
  "type": "function"
 },
 "pyunfold.teststat.kstwobign": {
  "data": {
   "shadows": "scipy.stats.kstwobign"
  },
  "type": "import"
 },
 "pyunfold.teststat.lgamma": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "pyunfold.teststat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyunfold.teststat.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyunfold.unfold": {
  "data": {},
  "type": "module"
 },
 "pyunfold.unfold._unfold": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "extract_regularizer",
    "pandas.DataFrame.from_records",
    "validate_callbacks"
   ]
  },
  "type": "function"
 },
 "pyunfold.unfold.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyunfold.unfold.iterative_unfold": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "Mixer",
    "_unfold",
    "cast_to_array",
    "dict",
    "get_ts",
    "len",
    "numpy.sum",
    "setup_prior",
    "ts_obj"
   ]
  },
  "type": "function"
 },
 "pyunfold.unfold.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyunfold.unfold.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyunfold.unfold.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyunfold.utils": {
  "data": {},
  "type": "module"
 },
 "pyunfold.utils.assert_kwargs_not_none": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "pyunfold.utils.assert_kwargs_not_none.real_decorator": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "dict",
    "len",
    "pyunfold.utils.inspect",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyunfold.utils.assert_kwargs_not_none.real_decorator.wrapper": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "func",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "pyunfold.utils.assert_same_shape": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "cast_to_array",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "pyunfold.utils.cast_to_array": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "len",
    "map",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "pyunfold.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyunfold.utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "pyunfold.utils.none_to_empty_list": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyunfold.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyunfold.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyunfold.utils.safe_inverse": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.errstate"
   ]
  },
  "type": "function"
 },
 "pyunfold.utils.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 }
}