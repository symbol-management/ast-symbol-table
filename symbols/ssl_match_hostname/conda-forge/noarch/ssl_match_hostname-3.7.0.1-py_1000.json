{
 "backports.ssl_match_hostname": {
  "data": {
   "symbols_in_volume": [
    "_ssl.SSLCertVerificationError"
   ]
  },
  "type": "module"
 },
 "backports.ssl_match_hostname.CertificateError": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "backports.ssl_match_hostname.SSLCertVerificationError": {
  "data": {
   "shadows": "_ssl.SSLCertVerificationError"
  },
  "type": "import"
 },
 "backports.ssl_match_hostname.__version__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "backports.ssl_match_hostname._dnsname_match": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "backports.ssl_match_hostname.CertificateError",
    "repr"
   ]
  },
  "type": "function"
 },
 "backports.ssl_match_hostname._inet_paton": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "AttributeError",
    "OSError",
    "TypeError",
    "UnicodeError",
    "ValueError",
    "backports.ssl_match_hostname._to_bytes",
    "backports.ssl_match_hostname.sys",
    "repr",
    "socket.AF_INET6",
    "socket.error",
    "socket.inet_aton",
    "socket.inet_pton"
   ]
  },
  "type": "function"
 },
 "backports.ssl_match_hostname._ipaddress_match": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "backports.ssl_match_hostname._inet_paton"
   ]
  },
  "type": "function"
 },
 "backports.ssl_match_hostname._socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "backports.ssl_match_hostname._to_bytes": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "backports.ssl_match_hostname.sys",
    "bytes",
    "isinstance",
    "str",
    "unicode"
   ]
  },
  "type": "function"
 },
 "backports.ssl_match_hostname._to_text": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "backports.ssl_match_hostname.sys",
    "bytes",
    "isinstance",
    "str",
    "unicode"
   ]
  },
  "type": "function"
 },
 "backports.ssl_match_hostname.match_hostname": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "UnicodeError",
    "ValueError",
    "backports.ssl_match_hostname.CertificateError",
    "backports.ssl_match_hostname._dnsname_match",
    "backports.ssl_match_hostname._inet_paton",
    "backports.ssl_match_hostname._ipaddress_match",
    "backports.ssl_match_hostname._to_text",
    "len",
    "map",
    "repr"
   ]
  },
  "type": "function"
 },
 "backports.ssl_match_hostname.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 }
}