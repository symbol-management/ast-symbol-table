{
 "mlxtend": {
  "data": {},
  "type": "module"
 },
 "mlxtend.__version__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "mlxtend._base": {
  "data": {},
  "type": "module"
 },
 "mlxtend._base.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mlxtend._base._base_model": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "mlxtend._base._base_model._BaseModel": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlxtend._base._base_model._BaseModel.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "time.time"
   ]
  },
  "type": "function"
 },
 "mlxtend._base._base_model._BaseModel._check_arrays": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "mlxtend._base._base_model._BaseModel._get_param_names": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "RuntimeError",
    "classmethod",
    "getattr",
    "inspect.signature",
    "object.__init__",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlxtend._base._base_model._BaseModel.get_params": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "mlxtend._base._base_model._BaseModel.set_params": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ValueError",
    "collections.defaultdict",
    "dict",
    "setattr"
   ]
  },
  "type": "function"
 },
 "mlxtend._base._base_model.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "mlxtend._base._base_model.signature": {
  "data": {
   "shadows": "inspect.signature"
  },
  "type": "import"
 },
 "mlxtend._base._base_model.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "mlxtend._base._classifier": {
  "data": {},
  "type": "module"
 },
 "mlxtend._base._classifier._Classifier": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlxtend._base._classifier._Classifier.__init__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "mlxtend._base._classifier._Classifier._check_target_array": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "AttributeError",
    "int",
    "isinstance",
    "numpy.integer",
    "numpy.unique",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mlxtend._base._classifier._Classifier.fit": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "hasattr",
    "numpy.random.RandomState",
    "time.time"
   ]
  },
  "type": "function"
 },
 "mlxtend._base._classifier._Classifier.predict": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "mlxtend._base._classifier._Classifier.score": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "float",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mlxtend._base._classifier.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend._base._classifier.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "mlxtend._base._cluster": {
  "data": {},
  "type": "module"
 },
 "mlxtend._base._cluster._Cluster": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlxtend._base._cluster._Cluster.__init__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "mlxtend._base._cluster._Cluster.fit": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "hasattr",
    "numpy.random.RandomState",
    "time.time"
   ]
  },
  "type": "function"
 },
 "mlxtend._base._cluster._Cluster.predict": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "mlxtend._base._cluster.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend._base._cluster.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "mlxtend._base._iterative_model": {
  "data": {},
  "type": "module"
 },
 "mlxtend._base._iterative_model._IterativeModel": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlxtend._base._iterative_model._IterativeModel.__init__": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "mlxtend._base._iterative_model._IterativeModel._init_params": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mlxtend._base._iterative_model._IterativeModel._print_progress": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "float",
    "hasattr",
    "sys.stderr.flush",
    "sys.stderr.write",
    "time.time"
   ]
  },
  "type": "function"
 },
 "mlxtend._base._iterative_model._IterativeModel._shuffle_arrays": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "len",
    "numpy.random.permutation"
   ]
  },
  "type": "function"
 },
 "mlxtend._base._iterative_model._IterativeModel._to_hhmmss": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "divmod"
   ]
  },
  "type": "function"
 },
 "mlxtend._base._iterative_model._IterativeModel._yield_minibatches_idx": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array_split",
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "mlxtend._base._iterative_model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend._base._iterative_model.stderr": {
  "data": {
   "shadows": "sys.stderr"
  },
  "type": "import"
 },
 "mlxtend._base._iterative_model.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "mlxtend._base._multiclass": {
  "data": {},
  "type": "module"
 },
 "mlxtend._base._multiclass._MultiClass": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlxtend._base._multiclass._MultiClass.__init__": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "mlxtend._base._multiclass._MultiClass._one_hot": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mlxtend._base._multiclass.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend._base._multilayer": {
  "data": {},
  "type": "module"
 },
 "mlxtend._base._multilayer._MultiLayer": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlxtend._base._multilayer._MultiLayer.__init__": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "mlxtend._base._multilayer._MultiLayer._init_params_from_layermapping": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.zeros",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "mlxtend._base._multilayer._MultiLayer._layermapping": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "mlxtend._base._multilayer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend._base._regressor": {
  "data": {},
  "type": "module"
 },
 "mlxtend._base._regressor._Regressor": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlxtend._base._regressor._Regressor.__init__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "mlxtend._base._regressor._Regressor._check_target_array": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "AttributeError",
    "int",
    "isinstance",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "mlxtend._base._regressor._Regressor.fit": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "hasattr",
    "numpy.random.RandomState",
    "time.time"
   ]
  },
  "type": "function"
 },
 "mlxtend._base._regressor._Regressor.predict": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "mlxtend._base._regressor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend._base._regressor.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "mlxtend.classifier": {
  "data": {},
  "type": "module"
 },
 "mlxtend.classifier.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mlxtend.classifier._base_classification": {
  "data": {},
  "type": "module"
 },
 "mlxtend.classifier._base_classification.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "mlxtend.classifier._base_classification._BaseStackingClassifier": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "mlxtend.classifier._base_classification._BaseStackingClassifier._do_predict": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.hstack",
    "predict_fn",
    "scipy.sparse.hstack",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier._base_classification._BaseStackingClassifier.decision_function": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier._base_classification._BaseStackingClassifier.predict": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier._base_classification._BaseStackingClassifier.predict_proba": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier._base_classification.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.classifier._base_classification.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mlxtend.classifier.adaline": {
  "data": {},
  "type": "module"
 },
 "mlxtend.classifier.adaline.Adaline": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "mlxtend.classifier.adaline.Adaline.__init__": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "mlxtend.classifier.adaline.Adaline._fit": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.where",
    "range",
    "time.time"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.adaline.Adaline._net_input": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.adaline.Adaline._normal_equation": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.hstack",
    "numpy.linalg.inv",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.adaline.Adaline._predict": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.adaline.Adaline._sum_squared_error_cost": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "mlxtend.classifier.adaline.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.classifier.adaline.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "mlxtend.classifier.ensemble_vote": {
  "data": {},
  "type": "module"
 },
 "mlxtend.classifier.ensemble_vote.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "mlxtend.classifier.ensemble_vote.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "mlxtend.classifier.ensemble_vote.EnsembleVoteClassifier": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "mlxtend.classifier.ensemble_vote.EnsembleVoteClassifier.__init__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "_name_estimators"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.ensemble_vote.EnsembleVoteClassifier._predict": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.ensemble_vote.EnsembleVoteClassifier._predict_probas": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.ensemble_vote.EnsembleVoteClassifier.fit": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "_name_estimators",
    "hasattr",
    "isinstance",
    "len",
    "numpy.ndarray",
    "print",
    "sklearn.base.clone",
    "sklearn.preprocessing.LabelEncoder"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.ensemble_vote.EnsembleVoteClassifier.get_params": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "mlxtend.classifier.ensemble_vote.EnsembleVoteClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.ensemble_vote.EnsembleVoteClassifier.predict": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "hasattr",
    "numpy.apply_along_axis",
    "numpy.argmax",
    "numpy.bincount",
    "sklearn.exceptions.NotFittedError"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.ensemble_vote.EnsembleVoteClassifier.predict_proba": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "hasattr",
    "numpy.average",
    "sklearn.exceptions.NotFittedError"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.ensemble_vote.EnsembleVoteClassifier.transform": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "mlxtend.classifier.ensemble_vote.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelEncoder"
  },
  "type": "import"
 },
 "mlxtend.classifier.ensemble_vote.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "mlxtend.classifier.ensemble_vote.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "mlxtend.classifier.ensemble_vote.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "mlxtend.classifier.ensemble_vote.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.classifier.logistic_regression": {
  "data": {},
  "type": "module"
 },
 "mlxtend.classifier.logistic_regression.LogisticRegression": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "mlxtend.classifier.logistic_regression.LogisticRegression.__init__": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "mlxtend.classifier.logistic_regression.LogisticRegression._activation": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "mlxtend.classifier.logistic_regression.LogisticRegression._fit": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "range",
    "time.time"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.logistic_regression.LogisticRegression._logit_cost": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.logistic_regression.LogisticRegression._net_input": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "mlxtend.classifier.logistic_regression.LogisticRegression._predict": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.logistic_regression.LogisticRegression._sigmoid": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.logistic_regression.LogisticRegression.predict_proba": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "mlxtend.classifier.logistic_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.classifier.logistic_regression.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "mlxtend.classifier.multilayerperceptron": {
  "data": {},
  "type": "module"
 },
 "mlxtend.classifier.multilayerperceptron.MultiLayerPerceptron": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "mlxtend.classifier.multilayerperceptron.MultiLayerPerceptron.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "AttributeError",
    "len"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.multilayerperceptron.MultiLayerPerceptron._compute_cost": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.mean",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.multilayerperceptron.MultiLayerPerceptron._cross_entropy": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.multilayerperceptron.MultiLayerPerceptron._feedforward": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.multilayerperceptron.MultiLayerPerceptron._fit": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.float",
    "numpy.max",
    "numpy.random.RandomState",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "time.time"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.multilayerperceptron.MultiLayerPerceptron._predict": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.multilayerperceptron.MultiLayerPerceptron._sigmoid": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "scipy.special.expit"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.multilayerperceptron.MultiLayerPerceptron._softmax": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.multilayerperceptron.MultiLayerPerceptron.predict_proba": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "mlxtend.classifier.multilayerperceptron.expit": {
  "data": {
   "shadows": "scipy.special.expit"
  },
  "type": "import"
 },
 "mlxtend.classifier.multilayerperceptron.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.classifier.multilayerperceptron.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "mlxtend.classifier.perceptron": {
  "data": {},
  "type": "module"
 },
 "mlxtend.classifier.perceptron.Perceptron": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "mlxtend.classifier.perceptron.Perceptron.__init__": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "mlxtend.classifier.perceptron.Perceptron._fit": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "int",
    "numpy.random.RandomState",
    "numpy.where",
    "range",
    "time.time"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.perceptron.Perceptron._net_input": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.perceptron.Perceptron._predict": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.perceptron.Perceptron._to_classlabels": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.perceptron.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.classifier.perceptron.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "mlxtend.classifier.softmax_regression": {
  "data": {},
  "type": "module"
 },
 "mlxtend.classifier.softmax_regression.SoftmaxRegression": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "mlxtend.classifier.softmax_regression.SoftmaxRegression.__init__": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "mlxtend.classifier.softmax_regression.SoftmaxRegression._cost": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.softmax_regression.SoftmaxRegression._cross_entropy": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.softmax_regression.SoftmaxRegression._fit": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.float",
    "numpy.max",
    "numpy.random.RandomState",
    "numpy.sum",
    "range",
    "time.time"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.softmax_regression.SoftmaxRegression._net_input": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "mlxtend.classifier.softmax_regression.SoftmaxRegression._predict": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "mlxtend.classifier.softmax_regression.SoftmaxRegression._softmax": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.softmax_regression.SoftmaxRegression._to_classlabels": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "mlxtend.classifier.softmax_regression.SoftmaxRegression.predict_proba": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "mlxtend.classifier.softmax_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.classifier.softmax_regression.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "mlxtend.classifier.stacking_classification": {
  "data": {},
  "type": "module"
 },
 "mlxtend.classifier.stacking_classification.StackingClassifier": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "mlxtend.classifier.stacking_classification.StackingClassifier.__init__": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "mlxtend.classifier.stacking_classification.StackingClassifier.fit": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "_name_estimators",
    "hasattr",
    "len",
    "numpy.hstack",
    "print",
    "scipy.sparse.hstack",
    "scipy.sparse.issparse",
    "sklearn.base.clone"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.stacking_classification.StackingClassifier.get_params": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "mlxtend.classifier.stacking_classification.StackingClassifier.named_classifiers": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "_name_estimators",
    "property"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.stacking_classification.StackingClassifier.predict_meta_features": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.asarray",
    "numpy.average",
    "numpy.column_stack",
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.stacking_classification.StackingClassifier.set_params": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "mlxtend.classifier.stacking_classification.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "mlxtend.classifier.stacking_classification.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "mlxtend.classifier.stacking_classification.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.classifier.stacking_classification.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mlxtend.classifier.stacking_cv_classification": {
  "data": {},
  "type": "module"
 },
 "mlxtend.classifier.stacking_cv_classification.StackingCVClassifier": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "mlxtend.classifier.stacking_cv_classification.StackingCVClassifier.__init__": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "mlxtend.classifier.stacking_cv_classification.StackingCVClassifier._stack_first_level_features": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "numpy.hstack",
    "scipy.sparse.hstack",
    "scipy.sparse.issparse",
    "stack_fn"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.stacking_cv_classification.StackingCVClassifier.fit": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "_name_estimators",
    "dict",
    "enumerate",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "numpy.column_stack",
    "numpy.newaxis",
    "print",
    "sklearn.base.clone",
    "sklearn.model_selection._split.check_cv",
    "sklearn.model_selection.cross_val_predict"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.stacking_cv_classification.StackingCVClassifier.get_params": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "mlxtend.classifier.stacking_cv_classification.StackingCVClassifier.named_classifiers": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "_name_estimators",
    "property"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.stacking_cv_classification.StackingCVClassifier.predict_meta_features": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.hstack",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "mlxtend.classifier.stacking_cv_classification.StackingCVClassifier.set_params": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "mlxtend.classifier.stacking_cv_classification.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "mlxtend.classifier.stacking_cv_classification.check_cv": {
  "data": {
   "shadows": "sklearn.model_selection._split.check_cv"
  },
  "type": "import"
 },
 "mlxtend.classifier.stacking_cv_classification.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "mlxtend.classifier.stacking_cv_classification.cross_val_predict": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_predict"
  },
  "type": "import"
 },
 "mlxtend.classifier.stacking_cv_classification.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.classifier.stacking_cv_classification.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mlxtend.cluster": {
  "data": {},
  "type": "module"
 },
 "mlxtend.cluster.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mlxtend.cluster.kmeans": {
  "data": {},
  "type": "module"
 },
 "mlxtend.cluster.kmeans.Kmeans": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "mlxtend.cluster.kmeans.Kmeans.__init__": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "mlxtend.cluster.kmeans.Kmeans._fit": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "enumerate",
    "numpy.allclose",
    "numpy.array",
    "numpy.mean",
    "numpy.random.RandomState",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlxtend.cluster.kmeans.Kmeans._get_cluster_idx": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "enumerate",
    "numpy.argmin",
    "numpy.sqrt",
    "numpy.square",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mlxtend.cluster.kmeans.Kmeans._predict": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mlxtend.cluster.kmeans.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.data": {
  "data": {},
  "type": "module"
 },
 "mlxtend.data.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mlxtend.data.autompg": {
  "data": {
   "symbols_in_volume": [
    "mlxtend.data.autompg.os"
   ]
  },
  "type": "module"
 },
 "mlxtend.data.autompg.DATA_PATH": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mlxtend.data.autompg.autompg_data": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "mlxtend.data.autompg.DATA_PATH",
    "numpy.genfromtxt"
   ]
  },
  "type": "function"
 },
 "mlxtend.data.autompg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.data.autompg.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlxtend.data.boston_housing": {
  "data": {
   "symbols_in_volume": [
    "mlxtend.data.boston_housing.os"
   ]
  },
  "type": "module"
 },
 "mlxtend.data.boston_housing.DATA_PATH": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mlxtend.data.boston_housing.boston_housing_data": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "float",
    "mlxtend.data.boston_housing.DATA_PATH",
    "numpy.genfromtxt"
   ]
  },
  "type": "function"
 },
 "mlxtend.data.boston_housing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.data.boston_housing.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlxtend.data.iris": {
  "data": {
   "symbols_in_volume": [
    "mlxtend.data.iris.os"
   ]
  },
  "type": "module"
 },
 "mlxtend.data.iris.DATA_PATH": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mlxtend.data.iris.iris_data": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "mlxtend.data.iris.DATA_PATH",
    "numpy.genfromtxt"
   ]
  },
  "type": "function"
 },
 "mlxtend.data.iris.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.data.iris.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlxtend.data.local_mnist": {
  "data": {},
  "type": "module"
 },
 "mlxtend.data.local_mnist.loadlocal_mnist": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "len",
    "mlxtend.data.local_mnist.struct",
    "numpy.fromfile",
    "numpy.uint8",
    "open"
   ]
  },
  "type": "function"
 },
 "mlxtend.data.local_mnist.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.data.local_mnist.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "mlxtend.data.mnist": {
  "data": {
   "symbols_in_volume": [
    "mlxtend.data.mnist.os"
   ]
  },
  "type": "module"
 },
 "mlxtend.data.mnist.DATA_PATH": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mlxtend.data.mnist.mnist_data": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "int",
    "mlxtend.data.mnist.DATA_PATH",
    "numpy.genfromtxt"
   ]
  },
  "type": "function"
 },
 "mlxtend.data.mnist.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.data.mnist.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlxtend.data.multiplexer": {
  "data": {},
  "type": "module"
 },
 "mlxtend.data.multiplexer.make_multiplexer_dataset": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "AttributeError",
    "gen_randsample",
    "int",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.int",
    "numpy.random.RandomState",
    "numpy.round",
    "type"
   ]
  },
  "type": "function"
 },
 "mlxtend.data.multiplexer.make_multiplexer_dataset.gen_randsample": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "int",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mlxtend.data.multiplexer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.data.three_blobs": {
  "data": {
   "symbols_in_volume": [
    "mlxtend.data.three_blobs.os"
   ]
  },
  "type": "module"
 },
 "mlxtend.data.three_blobs.DATA_PATH": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mlxtend.data.three_blobs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.data.three_blobs.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlxtend.data.three_blobs.three_blobs_data": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "int",
    "mlxtend.data.three_blobs.DATA_PATH",
    "numpy.genfromtxt"
   ]
  },
  "type": "function"
 },
 "mlxtend.data.wine": {
  "data": {
   "symbols_in_volume": [
    "mlxtend.data.wine.os"
   ]
  },
  "type": "module"
 },
 "mlxtend.data.wine.DATA_PATH": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mlxtend.data.wine.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.data.wine.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlxtend.data.wine.wine_data": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "int",
    "mlxtend.data.wine.DATA_PATH",
    "numpy.loadtxt"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate": {
  "data": {},
  "type": "module"
 },
 "mlxtend.evaluate.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mlxtend.evaluate.accuracy": {
  "data": {},
  "type": "module"
 },
 "mlxtend.evaluate.accuracy._compute_metric": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "mlxtend.evaluate.accuracy.accuracy_score": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "float",
    "len",
    "mlxtend.evaluate.accuracy._compute_metric",
    "numpy.asarray",
    "numpy.unique",
    "numpy.where",
    "sum"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.accuracy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.evaluate.bias_variance_decomp": {
  "data": {},
  "type": "module"
 },
 "mlxtend.evaluate.bias_variance_decomp._draw_bootstrap_sample": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.bias_variance_decomp.bias_variance_decomp": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "NotImplementedError",
    "mlxtend.evaluate.bias_variance_decomp._draw_bootstrap_sample",
    "numpy.apply_along_axis",
    "numpy.argmax",
    "numpy.bincount",
    "numpy.int",
    "numpy.mean",
    "numpy.random.RandomState",
    "numpy.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.bias_variance_decomp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.evaluate.bootstrap": {
  "data": {},
  "type": "module"
 },
 "mlxtend.evaluate.bootstrap.bootstrap": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "AttributeError",
    "float",
    "func",
    "int",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.sort",
    "numpy.std",
    "numpy.zeros",
    "quantile",
    "range"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.bootstrap.bootstrap.quantile": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "int",
    "round"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.bootstrap.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.evaluate.bootstrap_outofbag": {
  "data": {},
  "type": "module"
 },
 "mlxtend.evaluate.bootstrap_outofbag.BootstrapOutOfBag": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlxtend.evaluate.bootstrap_outofbag.BootstrapOutOfBag.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.bootstrap_outofbag.BootstrapOutOfBag.get_n_splits": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "mlxtend.evaluate.bootstrap_outofbag.BootstrapOutOfBag.split": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.random.RandomState",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.bootstrap_outofbag.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.evaluate.bootstrap_point632": {
  "data": {},
  "type": "module"
 },
 "mlxtend.evaluate.bootstrap_point632._check_arrays": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.bootstrap_point632.accuracy": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.bootstrap_point632.bootstrap_point632_score": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "AttributeError",
    "BootstrapOutOfBag",
    "ValueError",
    "int",
    "isinstance",
    "mlxtend.evaluate.bootstrap_point632._check_arrays",
    "mlxtend.evaluate.bootstrap_point632.accuracy",
    "mlxtend.evaluate.bootstrap_point632.mse",
    "mlxtend.evaluate.bootstrap_point632.no_information_rate",
    "numpy.empty",
    "numpy.float",
    "scoring_func",
    "sklearn.base.clone",
    "str"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.bootstrap_point632.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "mlxtend.evaluate.bootstrap_point632.mse": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.bootstrap_point632.no_information_rate": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "loss_fn",
    "numpy.array",
    "numpy.meshgrid"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.bootstrap_point632.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.evaluate.cochrans_q": {
  "data": {},
  "type": "module"
 },
 "mlxtend.evaluate.cochrans_q.cochrans_q": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "int",
    "len",
    "list",
    "mlxtend.evaluate.cochrans_q.itertools",
    "numpy.hstack",
    "numpy.zeros",
    "set",
    "sum"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.cochrans_q.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mlxtend.evaluate.cochrans_q.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.evaluate.cochrans_q.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "mlxtend.evaluate.confusion_matrix": {
  "data": {},
  "type": "module"
 },
 "mlxtend.evaluate.confusion_matrix.confusion_matrix": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "AttributeError",
    "isinstance",
    "itertools.product",
    "len",
    "list",
    "numpy.array",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.ndarray",
    "numpy.unique",
    "numpy.where",
    "zip"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.confusion_matrix.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.evaluate.confusion_matrix.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "mlxtend.evaluate.f_test": {
  "data": {},
  "type": "module"
 },
 "mlxtend.evaluate.f_test.combined_ftest_5x2cv": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "AttributeError",
    "float",
    "isinstance",
    "numpy.random.RandomState",
    "range",
    "score_diff",
    "sklearn.metrics.get_scorer",
    "sklearn.model_selection.train_test_split",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.f_test.combined_ftest_5x2cv.score_diff": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "scorer"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.f_test.ftest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "int",
    "len",
    "list",
    "mlxtend.evaluate.f_test.itertools",
    "numpy.hstack",
    "numpy.zeros",
    "set",
    "sum"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.f_test.get_scorer": {
  "data": {
   "shadows": "sklearn.metrics.get_scorer"
  },
  "type": "import"
 },
 "mlxtend.evaluate.f_test.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mlxtend.evaluate.f_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.evaluate.f_test.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "mlxtend.evaluate.f_test.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "mlxtend.evaluate.feature_importance": {
  "data": {},
  "type": "module"
 },
 "mlxtend.evaluate.feature_importance.feature_importance_permutation": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "int",
    "isinstance",
    "numpy.random.RandomState",
    "numpy.zeros",
    "predict_method",
    "range",
    "score_func"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.feature_importance.feature_importance_permutation.score_func": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.feature_importance.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.evaluate.holdout": {
  "data": {},
  "type": "module"
 },
 "mlxtend.evaluate.holdout.PredefinedHoldoutSplit": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlxtend.evaluate.holdout.PredefinedHoldoutSplit.__init__": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "mlxtend.evaluate.holdout.PredefinedHoldoutSplit.get_n_splits": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "mlxtend.evaluate.holdout.PredefinedHoldoutSplit.split": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.bool",
    "numpy.ones",
    "numpy.where",
    "range"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.holdout.RandomHoldoutSplit": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlxtend.evaluate.holdout.RandomHoldoutSplit.__init__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "mlxtend.evaluate.holdout.RandomHoldoutSplit.get_n_splits": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "mlxtend.evaluate.holdout.RandomHoldoutSplit.split": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.arange",
    "range",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.holdout.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.evaluate.holdout.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "mlxtend.evaluate.lift_score": {
  "data": {},
  "type": "module"
 },
 "mlxtend.evaluate.lift_score.lift_score": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "AttributeError",
    "isinstance",
    "len",
    "numpy.asarray",
    "numpy.extract",
    "numpy.ndarray",
    "numpy.where",
    "support"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.lift_score.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.evaluate.lift_score.support": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "float",
    "numpy.column_stack"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.mcnemar": {
  "data": {},
  "type": "module"
 },
 "mlxtend.evaluate.mcnemar.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "mlxtend.evaluate.mcnemar.mcnemar": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "float",
    "min"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.mcnemar.mcnemar_table": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.mcnemar.mcnemar_tables": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "itertools.combinations",
    "len",
    "list",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.mcnemar.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.evaluate.mcnemar.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "mlxtend.evaluate.permutation": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "mlxtend.evaluate.permutation.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "mlxtend.evaluate.permutation.factorial": {
  "data": {
   "shadows": "math.factorial"
  },
  "type": "import"
 },
 "mlxtend.evaluate.permutation.nottest": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "mlxtend.evaluate.permutation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.evaluate.permutation.permutation_test": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "AttributeError",
    "func",
    "isinstance",
    "itertools.combinations",
    "len",
    "list",
    "math.factorial",
    "nose.tools.nottest",
    "numpy.hstack",
    "numpy.random.RandomState",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.permutation.permutation_test.func": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.proportion_difference": {
  "data": {},
  "type": "module"
 },
 "mlxtend.evaluate.proportion_difference.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.evaluate.proportion_difference.proportion_difference": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.proportion_difference.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "mlxtend.evaluate.scoring": {
  "data": {},
  "type": "module"
 },
 "mlxtend.evaluate.scoring._error": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "mlxtend.evaluate.accuracy.accuracy_score"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.scoring._macro": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "float",
    "func",
    "len",
    "numpy.where",
    "sum"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.scoring.accuracy_score": {
  "data": {
   "shadows": "mlxtend.evaluate.accuracy.accuracy_score"
  },
  "type": "import"
 },
 "mlxtend.evaluate.scoring.confusion_matrix": {
  "data": {
   "shadows": "mlxtend.evaluate.confusion_matrix.confusion_matrix"
  },
  "type": "import"
 },
 "mlxtend.evaluate.scoring.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.evaluate.scoring.scoring": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "AttributeError",
    "float",
    "isinstance",
    "len",
    "mlxtend.evaluate.accuracy.accuracy_score",
    "mlxtend.evaluate.confusion_matrix.confusion_matrix",
    "mlxtend.evaluate.scoring._error",
    "mlxtend.evaluate.scoring._macro",
    "numpy.asarray",
    "numpy.ndarray",
    "numpy.sqrt",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.ttest": {
  "data": {},
  "type": "module"
 },
 "mlxtend.evaluate.ttest.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "mlxtend.evaluate.ttest.get_scorer": {
  "data": {
   "shadows": "sklearn.metrics.get_scorer"
  },
  "type": "import"
 },
 "mlxtend.evaluate.ttest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.evaluate.ttest.paired_ttest_5x2cv": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "AttributeError",
    "float",
    "isinstance",
    "numpy.abs",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "range",
    "scipy.stats.t.sf",
    "score_diff",
    "scorer",
    "sklearn.metrics.get_scorer",
    "sklearn.model_selection.train_test_split",
    "str"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.ttest.paired_ttest_5x2cv.score_diff": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "scorer"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.ttest.paired_ttest_kfold_cv": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "AttributeError",
    "float",
    "isinstance",
    "numpy.abs",
    "numpy.mean",
    "numpy.sqrt",
    "scipy.stats.t.sf",
    "scorer",
    "sklearn.metrics.get_scorer",
    "sklearn.model_selection.KFold",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.ttest.paired_ttest_resampled": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "numpy.abs",
    "numpy.mean",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "range",
    "scipy.stats.t.sf",
    "scorer",
    "sklearn.metrics.get_scorer",
    "sklearn.model_selection.train_test_split",
    "str",
    "sum",
    "type"
   ]
  },
  "type": "function"
 },
 "mlxtend.evaluate.ttest.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "mlxtend.evaluate.ttest.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "mlxtend.externals": {
  "data": {},
  "type": "module"
 },
 "mlxtend.externals.adjust_text": {
  "data": {
   "symbols_in_volume": [
    "mlxtend.externals.adjust_text.sys",
    "range"
   ]
  },
  "type": "module"
 },
 "mlxtend.externals.adjust_text.adjust_text": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "enumerate",
    "len",
    "list",
    "map",
    "matplotlib.pyplot.draw",
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.savefig",
    "matplotlib.pyplot.title",
    "mlxtend.externals.adjust_text.float_to_tuple",
    "mlxtend.externals.adjust_text.get_bboxes",
    "mlxtend.externals.adjust_text.get_midpoint",
    "mlxtend.externals.adjust_text.get_renderer",
    "mlxtend.externals.adjust_text.get_text_position",
    "mlxtend.externals.adjust_text.move_texts",
    "mlxtend.externals.adjust_text.optimally_align_text",
    "mlxtend.externals.adjust_text.repel_text",
    "mlxtend.externals.adjust_text.repel_text_from_axes",
    "mlxtend.externals.adjust_text.repel_text_from_bboxes",
    "mlxtend.externals.adjust_text.repel_text_from_points",
    "mlxtend.externals.adjust_text.xrange",
    "numpy.all",
    "numpy.array",
    "numpy.inf",
    "numpy.max",
    "numpy.sum",
    "numpy.zeros_like",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.adjust_text.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "mlxtend.externals.adjust_text.float_to_tuple": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "len"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.adjust_text.get_bboxes": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "all",
    "isinstance",
    "matplotlib.pyplot.gca",
    "mlxtend.externals.adjust_text.get_bboxes_pathcollection",
    "mlxtend.externals.adjust_text.matplotlib"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.adjust_text.get_bboxes_pathcollection": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "matplotlib.path.get_path_collection_extents",
    "numpy.ma.MaskedArray",
    "numpy.nan",
    "zip"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.adjust_text.get_midpoint": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "mlxtend.externals.adjust_text.get_path_collection_extents": {
  "data": {
   "shadows": "matplotlib.path.get_path_collection_extents"
  },
  "type": "import"
 },
 "mlxtend.externals.adjust_text.get_points_inside_bbox": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.logical_and",
    "numpy.nonzero"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.adjust_text.get_renderer": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.adjust_text.get_text_position": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.adjust_text.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "mlxtend.externals.adjust_text.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mlxtend.externals.adjust_text.move_texts": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "enumerate",
    "matplotlib.pyplot.gca",
    "mlxtend.externals.adjust_text.get_bboxes",
    "mlxtend.externals.adjust_text.get_renderer",
    "mlxtend.externals.adjust_text.get_text_position",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.adjust_text.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.externals.adjust_text.optimally_align_text": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "abs",
    "enumerate",
    "itertools.product",
    "len",
    "list",
    "matplotlib.pyplot.gca",
    "min",
    "mlxtend.externals.adjust_text.get_bboxes",
    "mlxtend.externals.adjust_text.get_points_inside_bbox",
    "mlxtend.externals.adjust_text.get_renderer",
    "operator.itemgetter",
    "sorted",
    "sum"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.adjust_text.overlap_bbox_and_point": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "mlxtend.externals.adjust_text.get_midpoint",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.adjust_text.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mlxtend.externals.adjust_text.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "mlxtend.externals.adjust_text.repel_text": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "matplotlib.pyplot.gca",
    "mlxtend.externals.adjust_text.get_bboxes",
    "mlxtend.externals.adjust_text.get_points_inside_bbox",
    "mlxtend.externals.adjust_text.get_renderer",
    "mlxtend.externals.adjust_text.move_texts",
    "numpy.sign",
    "numpy.sum",
    "numpy.unique",
    "numpy.zeros",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.adjust_text.repel_text_from_axes": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "enumerate",
    "matplotlib.pyplot.gca",
    "mlxtend.externals.adjust_text.get_bboxes",
    "mlxtend.externals.adjust_text.get_renderer",
    "mlxtend.externals.adjust_text.get_text_position",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.adjust_text.repel_text_from_bboxes": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "AttributeError",
    "enumerate",
    "len",
    "matplotlib.pyplot.gca",
    "mlxtend.externals.adjust_text.get_bboxes",
    "mlxtend.externals.adjust_text.get_renderer",
    "mlxtend.externals.adjust_text.move_texts",
    "numpy.sign",
    "numpy.sum",
    "numpy.zeros",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.adjust_text.repel_text_from_points": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "matplotlib.pyplot.gca",
    "mlxtend.externals.adjust_text.get_bboxes",
    "mlxtend.externals.adjust_text.get_points_inside_bbox",
    "mlxtend.externals.adjust_text.get_renderer",
    "mlxtend.externals.adjust_text.move_texts",
    "mlxtend.externals.adjust_text.overlap_bbox_and_point",
    "numpy.abs",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.adjust_text.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlxtend.externals.adjust_text.xrange": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mlxtend.externals.estimator_checks": {
  "data": {},
  "type": "module"
 },
 "mlxtend.externals.estimator_checks.NotFittedError": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError"
   ]
  },
  "type": "class"
 },
 "mlxtend.externals.estimator_checks.check_is_fitted": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "all_or_any",
    "hasattr",
    "isinstance",
    "list",
    "mlxtend.externals.estimator_checks.NotFittedError",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.name_estimators": {
  "data": {},
  "type": "module"
 },
 "mlxtend.externals.name_estimators._name_estimators": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "collections.defaultdict",
    "int",
    "len",
    "list",
    "range",
    "reversed",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.name_estimators.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "mlxtend.externals.pyprind": {
  "data": {},
  "type": "module"
 },
 "mlxtend.externals.pyprind.__version__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mlxtend.externals.pyprind.generator_factory": {
  "data": {
   "symbols_in_volume": [
    "mlxtend.externals.pyprind.generator_factory.generator_factory"
   ]
  },
  "type": "module"
 },
 "mlxtend.externals.pyprind.generator_factory.generator_factory": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "mlxtend.externals.pyprind.generator_factory.generator_factory.generator_progress": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "len",
    "mother_class"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.pyprind.generator_factory.prog_bar": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mlxtend.externals.pyprind.generator_factory.prog_percent": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mlxtend.externals.pyprind.prog_class": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "mlxtend.externals.pyprind.prog_class.Prog": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "mlxtend.externals.pyprind.prog_class.Prog.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "mlxtend.externals.pyprind.prog_class.psutil",
    "mlxtend.externals.pyprind.prog_class.psutil_import",
    "mlxtend.externals.pyprind.prog_class.sys",
    "mlxtend.externals.pyprind.prog_class.time"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.pyprind.prog_class.Prog.__repr__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "AttributeError",
    "mlxtend.externals.pyprind.prog_class.time"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.pyprind.prog_class.Prog.__str__": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "mlxtend.externals.pyprind.prog_class.Prog._cache_eta": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "mlxtend.externals.pyprind.prog_class.Prog._cache_item_id": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "mlxtend.externals.pyprind.prog_class.Prog._calc_eta": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.pyprind.prog_class.Prog._calc_percent": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "round"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.pyprind.prog_class.Prog._check_stream": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "hasattr",
    "io.UnsupportedOperation",
    "mlxtend.externals.pyprind.prog_class.os",
    "mlxtend.externals.pyprind.prog_class.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.pyprind.prog_class.Prog._elapsed": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "mlxtend.externals.pyprind.prog_class.time"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.pyprind.prog_class.Prog._finish": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "mlxtend.externals.pyprind.prog_class.time"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.pyprind.prog_class.Prog._get_time": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "int",
    "mlxtend.externals.pyprind.prog_class.time",
    "str"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.pyprind.prog_class.Prog._no_stream": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "mlxtend.externals.pyprind.prog_class.Prog._print_title": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "mlxtend.externals.pyprind.prog_class.Prog.stop": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "mlxtend.externals.pyprind.prog_class.Prog.update": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "mlxtend.externals.pyprind.prog_class.UnsupportedOperation": {
  "data": {
   "shadows": "io.UnsupportedOperation"
  },
  "type": "import"
 },
 "mlxtend.externals.pyprind.prog_class.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlxtend.externals.pyprind.prog_class.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "mlxtend.externals.pyprind.prog_class.psutil_import": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mlxtend.externals.pyprind.prog_class.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlxtend.externals.pyprind.prog_class.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mlxtend.externals.pyprind.progbar": {
  "data": {},
  "type": "module"
 },
 "mlxtend.externals.pyprind.progbar.ProgBar": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "mlxtend.externals.pyprind.progbar.ProgBar.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.pyprind.progbar.ProgBar._adjust_width": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.pyprind.progbar.ProgBar._cache_progress_bar": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.pyprind.progbar.ProgBar._print": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "math.floor",
    "mlxtend.externals.pyprind.progbar.time"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.pyprind.progbar.floor": {
  "data": {
   "shadows": "math.floor"
  },
  "type": "import"
 },
 "mlxtend.externals.pyprind.progbar.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mlxtend.externals.pyprind.progpercent": {
  "data": {},
  "type": "module"
 },
 "mlxtend.externals.pyprind.progpercent.ProgPercent": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "mlxtend.externals.pyprind.progpercent.ProgPercent.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.pyprind.progpercent.ProgPercent._cache_percent_indicator": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "mlxtend.externals.pyprind.progpercent.ProgPercent._print": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "mlxtend.externals.pyprind.progpercent.time"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.pyprind.progpercent.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mlxtend.externals.signature_py27": {
  "data": {
   "symbols_in_volume": [
    "all.__call__",
    "mlxtend.externals.signature_py27._MethodWrapper",
    "mlxtend.externals.signature_py27._ParameterKind",
    "mlxtend.externals.signature_py27._WrapperDescriptor",
    "mlxtend.externals.signature_py27.types",
    "type",
    "type.__call__"
   ]
  },
  "type": "module"
 },
 "mlxtend.externals.signature_py27.BoundArguments": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlxtend.externals.signature_py27.BoundArguments.__eq__": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "issubclass",
    "mlxtend.externals.signature_py27.BoundArguments"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.BoundArguments.__hash__": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.BoundArguments.__init__": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "mlxtend.externals.signature_py27.signature"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.BoundArguments.__ne__": {
  "data": {
   "lineno": 438
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.BoundArguments.args": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "KeyError",
    "mlxtend.externals.signature_py27._KEYWORD_ONLY",
    "mlxtend.externals.signature_py27._VAR_KEYWORD",
    "mlxtend.externals.signature_py27._VAR_POSITIONAL",
    "property",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.BoundArguments.kwargs": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "KeyError",
    "mlxtend.externals.signature_py27._KEYWORD_ONLY",
    "mlxtend.externals.signature_py27._VAR_KEYWORD",
    "property"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.BoundArguments.signature": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mlxtend.externals.signature_py27.Parameter": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "mlxtend.externals.signature_py27._KEYWORD_ONLY",
    "mlxtend.externals.signature_py27._POSITIONAL_ONLY",
    "mlxtend.externals.signature_py27._POSITIONAL_OR_KEYWORD",
    "mlxtend.externals.signature_py27._VAR_KEYWORD",
    "mlxtend.externals.signature_py27._VAR_POSITIONAL",
    "mlxtend.externals.signature_py27._empty",
    "object"
   ]
  },
  "type": "class"
 },
 "mlxtend.externals.signature_py27.Parameter.__eq__": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "issubclass",
    "mlxtend.externals.signature_py27.Parameter"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.Parameter.__hash__": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.Parameter.__init__": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "ValueError",
    "mlxtend.externals.signature_py27._KEYWORD_ONLY",
    "mlxtend.externals.signature_py27._POSITIONAL_ONLY",
    "mlxtend.externals.signature_py27._POSITIONAL_OR_KEYWORD",
    "mlxtend.externals.signature_py27._VAR_KEYWORD",
    "mlxtend.externals.signature_py27._VAR_POSITIONAL",
    "mlxtend.externals.signature_py27._empty",
    "mlxtend.externals.signature_py27.re",
    "str"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.Parameter.__ne__": {
  "data": {
   "lineno": 341
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.Parameter.__repr__": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.Parameter.__str__": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "mlxtend.externals.signature_py27._POSITIONAL_ONLY",
    "mlxtend.externals.signature_py27._VAR_KEYWORD",
    "mlxtend.externals.signature_py27._VAR_POSITIONAL",
    "mlxtend.externals.signature_py27._empty",
    "mlxtend.externals.signature_py27.formatannotation",
    "repr"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.Parameter.annotation": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.Parameter.default": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.Parameter.kind": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.Parameter.name": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.Parameter.replace": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "mlxtend.externals.signature_py27._void",
    "type"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.Signature": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "mlxtend.externals.signature_py27.BoundArguments",
    "mlxtend.externals.signature_py27.Parameter",
    "mlxtend.externals.signature_py27._empty",
    "object"
   ]
  },
  "type": "class"
 },
 "mlxtend.externals.signature_py27.Signature.__eq__": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "enumerate",
    "issubclass",
    "len",
    "mlxtend.externals.signature_py27.Signature",
    "mlxtend.externals.signature_py27._KEYWORD_ONLY",
    "type"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.Signature.__hash__": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.Signature.__init__": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "enumerate",
    "mlxtend.externals.signature_py27._POSITIONAL_ONLY",
    "mlxtend.externals.signature_py27._empty",
    "str"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.Signature.__ne__": {
  "data": {
   "lineno": 644
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.Signature.__str__": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "enumerate",
    "mlxtend.externals.signature_py27._KEYWORD_ONLY",
    "mlxtend.externals.signature_py27._VAR_POSITIONAL",
    "mlxtend.externals.signature_py27._empty",
    "mlxtend.externals.signature_py27.formatannotation",
    "str"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.Signature._bind": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "KeyError",
    "StopIteration",
    "TypeError",
    "collections.OrderedDict",
    "iter",
    "mlxtend.externals.signature_py27._KEYWORD_ONLY",
    "mlxtend.externals.signature_py27._POSITIONAL_ONLY",
    "mlxtend.externals.signature_py27._VAR_KEYWORD",
    "mlxtend.externals.signature_py27._VAR_POSITIONAL",
    "mlxtend.externals.signature_py27._empty",
    "mlxtend.externals.signature_py27.itertools",
    "next",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.Signature.bind": {
  "data": {
   "lineno": 775
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.Signature.bind_partial": {
  "data": {
   "lineno": 782
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.Signature.from_function": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "cls",
    "enumerate",
    "getattr",
    "isinstance",
    "len",
    "mlxtend.externals.signature_py27.Parameter",
    "mlxtend.externals.signature_py27._KEYWORD_ONLY",
    "mlxtend.externals.signature_py27._POSITIONAL_OR_KEYWORD",
    "mlxtend.externals.signature_py27._VAR_KEYWORD",
    "mlxtend.externals.signature_py27._VAR_POSITIONAL",
    "mlxtend.externals.signature_py27._empty",
    "mlxtend.externals.signature_py27.types",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.Signature.parameters": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "AttributeError",
    "collections.OrderedDict",
    "mlxtend.externals.signature_py27.types",
    "property"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.Signature.replace": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "mlxtend.externals.signature_py27._void",
    "type"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.Signature.return_annotation": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27._KEYWORD_ONLY": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "mlxtend.externals.signature_py27._MethodWrapper": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mlxtend.externals.signature_py27._NonUserDefinedCallables": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mlxtend.externals.signature_py27._POSITIONAL_ONLY": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "mlxtend.externals.signature_py27._POSITIONAL_OR_KEYWORD": {
  "data": {
   "lineno": 198
  },
  "type": "constant"
 },
 "mlxtend.externals.signature_py27._ParameterKind": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "class"
 },
 "mlxtend.externals.signature_py27._ParameterKind.__new__": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "int.__new__"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27._ParameterKind.__repr__": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27._ParameterKind.__str__": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27._VAR_KEYWORD": {
  "data": {
   "lineno": 201
  },
  "type": "constant"
 },
 "mlxtend.externals.signature_py27._VAR_POSITIONAL": {
  "data": {
   "lineno": 199
  },
  "type": "constant"
 },
 "mlxtend.externals.signature_py27._WrapperDescriptor": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mlxtend.externals.signature_py27.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mlxtend.externals.signature_py27.__version__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mlxtend.externals.signature_py27._empty": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlxtend.externals.signature_py27._get_user_defined_method": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "isinstance",
    "mlxtend.externals.signature_py27._NonUserDefinedCallables",
    "type"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27._void": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlxtend.externals.signature_py27.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "mlxtend.externals.signature_py27.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "mlxtend.externals.signature_py27.formatannotation": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "isinstance",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "mlxtend.externals.signature_py27.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mlxtend.externals.signature_py27.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mlxtend.externals.signature_py27.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mlxtend.externals.signature_py27.signature": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "ValueError",
    "callable",
    "collections.OrderedDict",
    "isinstance",
    "mlxtend.externals.signature_py27._NonUserDefinedCallables",
    "mlxtend.externals.signature_py27._get_user_defined_method",
    "mlxtend.externals.signature_py27.functools",
    "mlxtend.externals.signature_py27.types",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.signature_py27.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "mlxtend.externals.six": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "OverflowError",
    "__name__",
    "__spec__.submodule_search_locations",
    "bytes",
    "chr",
    "enumerate",
    "getattr",
    "globals",
    "int",
    "isinstance",
    "iter",
    "len",
    "mlxtend.externals.six.BytesIO",
    "mlxtend.externals.six.Module_six_moves_urllib",
    "mlxtend.externals.six.Module_six_moves_urllib_error",
    "mlxtend.externals.six.Module_six_moves_urllib_parse",
    "mlxtend.externals.six.Module_six_moves_urllib_request",
    "mlxtend.externals.six.Module_six_moves_urllib_response",
    "mlxtend.externals.six.Module_six_moves_urllib_robotparser",
    "mlxtend.externals.six.MovedAttribute",
    "mlxtend.externals.six.MovedModule",
    "mlxtend.externals.six.PY3",
    "mlxtend.externals.six.PY34",
    "mlxtend.externals.six.StringIO",
    "mlxtend.externals.six.X",
    "mlxtend.externals.six._MovedItems",
    "mlxtend.externals.six._SixMetaPathImporter",
    "mlxtend.externals.six._add_doc",
    "mlxtend.externals.six._func_closure",
    "mlxtend.externals.six._func_code",
    "mlxtend.externals.six._func_defaults",
    "mlxtend.externals.six._func_globals",
    "mlxtend.externals.six._importer",
    "mlxtend.externals.six._meth_func",
    "mlxtend.externals.six._meth_self",
    "mlxtend.externals.six._moved_attributes",
    "mlxtend.externals.six._urllib_error_moved_attributes",
    "mlxtend.externals.six._urllib_parse_moved_attributes",
    "mlxtend.externals.six._urllib_request_moved_attributes",
    "mlxtend.externals.six._urllib_response_moved_attributes",
    "mlxtend.externals.six._urllib_robotparser_moved_attributes",
    "mlxtend.externals.six.advance_iterator",
    "mlxtend.externals.six.b",
    "mlxtend.externals.six.exec_",
    "mlxtend.externals.six.functools",
    "mlxtend.externals.six.get_unbound_function",
    "mlxtend.externals.six.io",
    "mlxtend.externals.six.iteritems",
    "mlxtend.externals.six.iterkeys",
    "mlxtend.externals.six.iterlists",
    "mlxtend.externals.six.itertools",
    "mlxtend.externals.six.itervalues",
    "mlxtend.externals.six.moves",
    "mlxtend.externals.six.operator",
    "mlxtend.externals.six.print_",
    "mlxtend.externals.six.reraise",
    "mlxtend.externals.six.struct",
    "mlxtend.externals.six.sys",
    "mlxtend.externals.six.types",
    "mlxtend.externals.six.u",
    "next",
    "object",
    "ord",
    "setattr",
    "str",
    "type"
   ]
  },
  "type": "module"
 },
 "mlxtend.externals.six.BytesIO": {
  "data": {
   "lineno": 633
  },
  "type": "constant"
 },
 "mlxtend.externals.six.Iterator": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlxtend.externals.six.Iterator.next": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six.MAXSIZE": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "mlxtend.externals.six.Module_six_moves_urllib": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "mlxtend.externals.six._importer",
    "mlxtend.externals.six.types"
   ]
  },
  "type": "class"
 },
 "mlxtend.externals.six.Module_six_moves_urllib.__dir__": {
  "data": {
   "lineno": 479
  },
  "type": "function"
 },
 "mlxtend.externals.six.Module_six_moves_urllib_error": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "mlxtend.externals.six._LazyModule"
   ]
  },
  "type": "class"
 },
 "mlxtend.externals.six.Module_six_moves_urllib_parse": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "mlxtend.externals.six._LazyModule"
   ]
  },
  "type": "class"
 },
 "mlxtend.externals.six.Module_six_moves_urllib_request": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "mlxtend.externals.six._LazyModule"
   ]
  },
  "type": "class"
 },
 "mlxtend.externals.six.Module_six_moves_urllib_response": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "mlxtend.externals.six._LazyModule"
   ]
  },
  "type": "class"
 },
 "mlxtend.externals.six.Module_six_moves_urllib_robotparser": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "mlxtend.externals.six._LazyModule"
   ]
  },
  "type": "class"
 },
 "mlxtend.externals.six.MovedAttribute": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "mlxtend.externals.six._LazyDescr"
   ]
  },
  "type": "class"
 },
 "mlxtend.externals.six.MovedAttribute.__init__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "mlxtend.externals.six.MovedAttribute",
    "mlxtend.externals.six.PY3",
    "super"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six.MovedAttribute._resolve": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "getattr",
    "mlxtend.externals.six._import_module"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six.MovedModule": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "mlxtend.externals.six._LazyDescr"
   ]
  },
  "type": "class"
 },
 "mlxtend.externals.six.MovedModule.__getattr__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six.MovedModule.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "mlxtend.externals.six.MovedModule",
    "mlxtend.externals.six.PY3",
    "super"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six.MovedModule._resolve": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "mlxtend.externals.six._import_module"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six.PY2": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mlxtend.externals.six.PY3": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mlxtend.externals.six.PY34": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mlxtend.externals.six.StringIO": {
  "data": {
   "shadows": "StringIO"
  },
  "type": "import"
 },
 "mlxtend.externals.six.X": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlxtend.externals.six.X.__len__": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "mlxtend.externals.six._LazyDescr": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlxtend.externals.six._LazyDescr.__get__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "AttributeError",
    "delattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six._LazyDescr.__init__": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "mlxtend.externals.six._LazyModule": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "mlxtend.externals.six.types"
   ]
  },
  "type": "class"
 },
 "mlxtend.externals.six._LazyModule.__dir__": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "mlxtend.externals.six._LazyModule.__init__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "mlxtend.externals.six._LazyModule",
    "super"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six._MovedItems": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "mlxtend.externals.six._LazyModule"
   ]
  },
  "type": "class"
 },
 "mlxtend.externals.six._SixMetaPathImporter": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlxtend.externals.six._SixMetaPathImporter.__get_module": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "ImportError",
    "KeyError"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six._SixMetaPathImporter.__init__": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "mlxtend.externals.six._SixMetaPathImporter._add_module": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "mlxtend.externals.six._SixMetaPathImporter._get_module": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "mlxtend.externals.six._SixMetaPathImporter.find_module": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "mlxtend.externals.six._SixMetaPathImporter.get_code": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "mlxtend.externals.six._SixMetaPathImporter.is_package": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six._SixMetaPathImporter.load_module": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "KeyError",
    "isinstance",
    "mlxtend.externals.six.MovedModule",
    "mlxtend.externals.six.sys"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six.__author__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mlxtend.externals.six.__package__": {
  "data": {
   "lineno": 850
  },
  "type": "constant"
 },
 "mlxtend.externals.six.__path__": {
  "data": {
   "lineno": 849
  },
  "type": "constant"
 },
 "mlxtend.externals.six.__version__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mlxtend.externals.six._add_doc": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "mlxtend.externals.six._assertCountEqual": {
  "data": {
   "lineno": 659
  },
  "type": "constant"
 },
 "mlxtend.externals.six._assertRaisesRegex": {
  "data": {
   "lineno": 660
  },
  "type": "constant"
 },
 "mlxtend.externals.six._assertRegex": {
  "data": {
   "lineno": 661
  },
  "type": "constant"
 },
 "mlxtend.externals.six._func_closure": {
  "data": {
   "lineno": 514
  },
  "type": "constant"
 },
 "mlxtend.externals.six._func_code": {
  "data": {
   "lineno": 515
  },
  "type": "constant"
 },
 "mlxtend.externals.six._func_defaults": {
  "data": {
   "lineno": 516
  },
  "type": "constant"
 },
 "mlxtend.externals.six._func_globals": {
  "data": {
   "lineno": 517
  },
  "type": "constant"
 },
 "mlxtend.externals.six._import_module": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "__import__",
    "mlxtend.externals.six.sys"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six._importer": {
  "data": {
   "lineno": 226
  },
  "type": "constant"
 },
 "mlxtend.externals.six._meth_func": {
  "data": {
   "lineno": 511
  },
  "type": "constant"
 },
 "mlxtend.externals.six._meth_self": {
  "data": {
   "lineno": 512
  },
  "type": "constant"
 },
 "mlxtend.externals.six._moved_attributes": {
  "data": {
   "lineno": 235
  },
  "type": "constant"
 },
 "mlxtend.externals.six._print": {
  "data": {
   "lineno": 777
  },
  "type": "constant"
 },
 "mlxtend.externals.six._urllib_error_moved_attributes": {
  "data": {
   "lineno": 365
  },
  "type": "constant"
 },
 "mlxtend.externals.six._urllib_parse_moved_attributes": {
  "data": {
   "lineno": 325
  },
  "type": "constant"
 },
 "mlxtend.externals.six._urllib_request_moved_attributes": {
  "data": {
   "lineno": 385
  },
  "type": "constant"
 },
 "mlxtend.externals.six._urllib_response_moved_attributes": {
  "data": {
   "lineno": 435
  },
  "type": "constant"
 },
 "mlxtend.externals.six._urllib_robotparser_moved_attributes": {
  "data": {
   "lineno": 456
  },
  "type": "constant"
 },
 "mlxtend.externals.six.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "mlxtend.externals.six.add_metaclass": {
  "data": {
   "lineno": 812
  },
  "type": "function"
 },
 "mlxtend.externals.six.add_metaclass.wrapper": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "isinstance",
    "metaclass",
    "str"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six.add_move": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "mlxtend.externals.six._MovedItems",
    "setattr"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six.advance_iterator": {
  "data": {
   "lineno": 523
  },
  "type": "function"
 },
 "mlxtend.externals.six.assertCountEqual": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "getattr",
    "mlxtend.externals.six._assertCountEqual"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six.assertRaisesRegex": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "getattr",
    "mlxtend.externals.six._assertRaisesRegex"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six.assertRegex": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "getattr",
    "mlxtend.externals.six._assertRegex"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six.b": {
  "data": {
   "lineno": 642
  },
  "type": "function"
 },
 "mlxtend.externals.six.binary_type": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "mlxtend.externals.six.byte2int": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six.callable": {
  "data": {
   "lineno": 560
  },
  "type": "constant"
 },
 "mlxtend.externals.six.class_types": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mlxtend.externals.six.create_bound_method": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "mlxtend.externals.six.types"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six.create_unbound_method": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "mlxtend.externals.six.types"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six.exec_": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "exec",
    "mlxtend.externals.six.sys"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "mlxtend.externals.six.get_function_closure": {
  "data": {
   "lineno": 567
  },
  "type": "constant"
 },
 "mlxtend.externals.six.get_function_code": {
  "data": {
   "lineno": 568
  },
  "type": "constant"
 },
 "mlxtend.externals.six.get_function_defaults": {
  "data": {
   "lineno": 569
  },
  "type": "constant"
 },
 "mlxtend.externals.six.get_function_globals": {
  "data": {
   "lineno": 570
  },
  "type": "constant"
 },
 "mlxtend.externals.six.get_method_function": {
  "data": {
   "lineno": 565
  },
  "type": "constant"
 },
 "mlxtend.externals.six.get_method_self": {
  "data": {
   "lineno": 566
  },
  "type": "constant"
 },
 "mlxtend.externals.six.get_unbound_function": {
  "data": {
   "lineno": 546
  },
  "type": "function"
 },
 "mlxtend.externals.six.indexbytes": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six.int2byte": {
  "data": {
   "lineno": 649
  },
  "type": "constant"
 },
 "mlxtend.externals.six.integer_types": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mlxtend.externals.six.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "mlxtend.externals.six.iterbytes": {
  "data": {
   "lineno": 656
  },
  "type": "constant"
 },
 "mlxtend.externals.six.iteritems": {
  "data": {
   "lineno": 598
  },
  "type": "function"
 },
 "mlxtend.externals.six.iterkeys": {
  "data": {
   "lineno": 592
  },
  "type": "function"
 },
 "mlxtend.externals.six.iterlists": {
  "data": {
   "lineno": 601
  },
  "type": "function"
 },
 "mlxtend.externals.six.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mlxtend.externals.six.itervalues": {
  "data": {
   "lineno": 595
  },
  "type": "function"
 },
 "mlxtend.externals.six.moves": {
  "data": {
   "lineno": 316
  },
  "type": "constant"
 },
 "mlxtend.externals.six.next": {
  "data": {
   "lineno": 525
  },
  "type": "constant"
 },
 "mlxtend.externals.six.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "mlxtend.externals.six.print_": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "mlxtend.externals.six._print",
    "mlxtend.externals.six.sys"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six.print_.write": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "str",
    "unicode"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six.python_2_unicode_compatible": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "ValueError",
    "mlxtend.externals.six.PY2"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six.raise_from": {
  "data": {
   "lineno": 717
  },
  "type": "function"
 },
 "mlxtend.externals.six.remove_move": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "delattr",
    "mlxtend.externals.six._MovedItems",
    "mlxtend.externals.six.moves"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six.reraise": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "tp"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six.string_types": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mlxtend.externals.six.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "mlxtend.externals.six.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlxtend.externals.six.text_type": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "mlxtend.externals.six.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "mlxtend.externals.six.u": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "unicode"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six.unichr": {
  "data": {
   "lineno": 648
  },
  "type": "constant"
 },
 "mlxtend.externals.six.viewitems": {
  "data": {
   "lineno": 608
  },
  "type": "constant"
 },
 "mlxtend.externals.six.viewkeys": {
  "data": {
   "lineno": 604
  },
  "type": "constant"
 },
 "mlxtend.externals.six.viewvalues": {
  "data": {
   "lineno": 606
  },
  "type": "constant"
 },
 "mlxtend.externals.six.with_metaclass": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "type.__new__"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six.with_metaclass.metaclass": {
  "data": {
   "lineno": 805
  },
  "type": "class"
 },
 "mlxtend.externals.six.with_metaclass.metaclass.__new__": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "meta"
   ]
  },
  "type": "function"
 },
 "mlxtend.externals.six.wraps": {
  "data": {
   "lineno": 797
  },
  "type": "constant"
 },
 "mlxtend.externals.six.wraps.wrapper": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "mlxtend.externals.six.functools"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_extraction": {
  "data": {},
  "type": "module"
 },
 "mlxtend.feature_extraction.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mlxtend.feature_extraction.base": {
  "data": {},
  "type": "module"
 },
 "mlxtend.feature_extraction.base._BaseFeatureExtractor": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlxtend.feature_extraction.base._BaseFeatureExtractor.__init__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "mlxtend.feature_extraction.base._BaseFeatureExtractor._check_arrays": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "isinstance",
    "len",
    "list",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_extraction.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.feature_extraction.linear_discriminant_analysis": {
  "data": {},
  "type": "module"
 },
 "mlxtend.feature_extraction.linear_discriminant_analysis.LinearDiscriminantAnalysis": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "mlxtend.feature_extraction.linear_discriminant_analysis.LinearDiscriminantAnalysis.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_extraction.linear_discriminant_analysis.LinearDiscriminantAnalysis._between_scatter": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "enumerate",
    "numpy.mean",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_extraction.linear_discriminant_analysis.LinearDiscriminantAnalysis._eigendecom": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.linalg.eig",
    "numpy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_extraction.linear_discriminant_analysis.LinearDiscriminantAnalysis._fit": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_extraction.linear_discriminant_analysis.LinearDiscriminantAnalysis._mean_vectors": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.mean",
    "range"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_extraction.linear_discriminant_analysis.LinearDiscriminantAnalysis._projection_matrix": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "numpy.vstack",
    "range"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_extraction.linear_discriminant_analysis.LinearDiscriminantAnalysis._within_scatter": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.zeros",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_extraction.linear_discriminant_analysis.LinearDiscriminantAnalysis.fit": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "mlxtend.feature_extraction.linear_discriminant_analysis.LinearDiscriminantAnalysis.transform": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_extraction.linear_discriminant_analysis.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.feature_extraction.principal_component_analysis": {
  "data": {},
  "type": "module"
 },
 "mlxtend.feature_extraction.principal_component_analysis.PrincipalComponentAnalysis": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "mlxtend.feature_extraction.principal_component_analysis.PrincipalComponentAnalysis.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_extraction.principal_component_analysis.PrincipalComponentAnalysis._covariance_matrix": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_extraction.principal_component_analysis.PrincipalComponentAnalysis._decomposition": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.linalg.eig",
    "numpy.linalg.svd",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_extraction.principal_component_analysis.PrincipalComponentAnalysis._fit": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.sum",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_extraction.principal_component_analysis.PrincipalComponentAnalysis._loadings": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_extraction.principal_component_analysis.PrincipalComponentAnalysis._projection_matrix": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.vstack",
    "range"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_extraction.principal_component_analysis.PrincipalComponentAnalysis.fit": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "mlxtend.feature_extraction.principal_component_analysis.PrincipalComponentAnalysis.transform": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "numpy.diag",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_extraction.principal_component_analysis.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.feature_extraction.rbf_kernel_pca": {
  "data": {},
  "type": "module"
 },
 "mlxtend.feature_extraction.rbf_kernel_pca.RBFKernelPCA": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "mlxtend.feature_extraction.rbf_kernel_pca.RBFKernelPCA.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_extraction.rbf_kernel_pca.RBFKernelPCA._eigendecom": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.linalg.eigh"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_extraction.rbf_kernel_pca.RBFKernelPCA._fit": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "mlxtend.feature_extraction.rbf_kernel_pca.RBFKernelPCA._kernel_matrix": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.ones",
    "scipy.spatial.distance.pdist",
    "scipy.spatial.distance.squareform"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_extraction.rbf_kernel_pca.RBFKernelPCA._projection_matrix": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "numpy.vstack",
    "range"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_extraction.rbf_kernel_pca.RBFKernelPCA.fit": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "mlxtend.feature_extraction.rbf_kernel_pca.RBFKernelPCA.transform": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "numpy.exp",
    "numpy.ones",
    "range"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_extraction.rbf_kernel_pca.distance": {
  "data": {
   "shadows": "scipy.spatial.distance"
  },
  "type": "import"
 },
 "mlxtend.feature_extraction.rbf_kernel_pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.feature_selection": {
  "data": {},
  "type": "module"
 },
 "mlxtend.feature_selection.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mlxtend.feature_selection.column_selector": {
  "data": {},
  "type": "module"
 },
 "mlxtend.feature_selection.column_selector.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.column_selector.ColumnSelector": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "mlxtend.feature_selection.column_selector.ColumnSelector.__init__": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "mlxtend.feature_selection.column_selector.ColumnSelector.fit": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "mlxtend.feature_selection.column_selector.ColumnSelector.fit_transform": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "mlxtend.feature_selection.column_selector.ColumnSelector.transform": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.newaxis",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_selection.column_selector.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.exhaustive_feature_selector": {
  "data": {},
  "type": "module"
 },
 "mlxtend.feature_selection.exhaustive_feature_selector.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.exhaustive_feature_selector.ExhaustiveFeatureSelector": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.MetaEstimatorMixin"
   ]
  },
  "type": "class"
 },
 "mlxtend.feature_selection.exhaustive_feature_selector.ExhaustiveFeatureSelector.__init__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "_name_estimators",
    "sklearn.base.clone",
    "sklearn.metrics.get_scorer"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_selection.exhaustive_feature_selector.ExhaustiveFeatureSelector._calc_confidence": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "len",
    "scipy.stats.sem",
    "scipy.stats.t._ppf"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_selection.exhaustive_feature_selector.ExhaustiveFeatureSelector._check_fitted": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_selection.exhaustive_feature_selector.ExhaustiveFeatureSelector.fit": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "AttributeError",
    "KeyboardInterrupt",
    "ValueError",
    "enumerate",
    "float",
    "hasattr",
    "int",
    "isinstance",
    "itertools.chain",
    "itertools.combinations",
    "joblib.Parallel",
    "joblib.delayed",
    "len",
    "min",
    "mlxtend.feature_selection.exhaustive_feature_selector._calc_score",
    "mlxtend.feature_selection.exhaustive_feature_selector._get_featurenames",
    "mlxtend.feature_selection.exhaustive_feature_selector.sys",
    "ncr",
    "numpy.mean",
    "numpy.sum",
    "parallel",
    "range"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_selection.exhaustive_feature_selector.ExhaustiveFeatureSelector.fit.ncr": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "functools.reduce",
    "min",
    "operator.mul",
    "range"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_selection.exhaustive_feature_selector.ExhaustiveFeatureSelector.fit_transform": {
  "data": {
   "lineno": 343
  },
  "type": "function"
 },
 "mlxtend.feature_selection.exhaustive_feature_selector.ExhaustiveFeatureSelector.get_metric_dict": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "copy.deepcopy",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_selection.exhaustive_feature_selector.ExhaustiveFeatureSelector.transform": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_selection.exhaustive_feature_selector.MetaEstimatorMixin": {
  "data": {
   "shadows": "sklearn.base.MetaEstimatorMixin"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.exhaustive_feature_selector.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.exhaustive_feature_selector._calc_score": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.model_selection.cross_val_score"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_selection.exhaustive_feature_selector._get_featurenames": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "copy.deepcopy",
    "hasattr",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_selection.exhaustive_feature_selector.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.exhaustive_feature_selector.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.exhaustive_feature_selector.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.exhaustive_feature_selector.cross_val_score": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_score"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.exhaustive_feature_selector.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.exhaustive_feature_selector.delayed": {
  "data": {
   "shadows": "joblib.delayed"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.exhaustive_feature_selector.get_scorer": {
  "data": {
   "shadows": "sklearn.metrics.get_scorer"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.exhaustive_feature_selector.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.exhaustive_feature_selector.op": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.exhaustive_feature_selector.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.exhaustive_feature_selector.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.exhaustive_feature_selector.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.exhaustive_feature_selector.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.sequential_feature_selector": {
  "data": {},
  "type": "module"
 },
 "mlxtend.feature_selection.sequential_feature_selector.MetaEstimatorMixin": {
  "data": {
   "shadows": "sklearn.base.MetaEstimatorMixin"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.sequential_feature_selector.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.sequential_feature_selector.SequentialFeatureSelector": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "sklearn.base.MetaEstimatorMixin"
   ]
  },
  "type": "class"
 },
 "mlxtend.feature_selection.sequential_feature_selector.SequentialFeatureSelector.__init__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "len",
    "mlxtend.feature_selection.sequential_feature_selector.types",
    "sklearn.base.clone",
    "sklearn.metrics.get_scorer",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_selection.sequential_feature_selector.SequentialFeatureSelector._calc_confidence": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "len",
    "scipy.stats.sem",
    "scipy.stats.t._ppf"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_selection.sequential_feature_selector.SequentialFeatureSelector._check_fitted": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_selection.sequential_feature_selector.SequentialFeatureSelector._exclusion": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "itertools.combinations",
    "joblib.Parallel",
    "joblib.delayed",
    "len",
    "min",
    "mlxtend.feature_selection.sequential_feature_selector._calc_score",
    "numpy.argmax",
    "numpy.nanmean",
    "parallel",
    "set"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_selection.sequential_feature_selector.SequentialFeatureSelector._inclusion": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "joblib.Parallel",
    "joblib.delayed",
    "len",
    "min",
    "mlxtend.feature_selection.sequential_feature_selector._calc_score",
    "numpy.argmax",
    "numpy.nanmean",
    "parallel",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_selection.sequential_feature_selector.SequentialFeatureSelector.fit": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "AttributeError",
    "KeyboardInterrupt",
    "ValueError",
    "float",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "mlxtend.feature_selection.sequential_feature_selector._calc_score",
    "mlxtend.feature_selection.sequential_feature_selector._get_featurenames",
    "mlxtend.feature_selection.sequential_feature_selector.datetime",
    "mlxtend.feature_selection.sequential_feature_selector.sys",
    "numpy.nanmean",
    "numpy.std",
    "range",
    "set",
    "sorted",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_selection.sequential_feature_selector.SequentialFeatureSelector.fit_transform": {
  "data": {
   "lineno": 674
  },
  "type": "function"
 },
 "mlxtend.feature_selection.sequential_feature_selector.SequentialFeatureSelector.get_metric_dict": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "copy.deepcopy",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_selection.sequential_feature_selector.SequentialFeatureSelector.get_params": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "mlxtend.feature_selection.sequential_feature_selector.SequentialFeatureSelector.named_estimators": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "_name_estimators",
    "property"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_selection.sequential_feature_selector.SequentialFeatureSelector.set_params": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "mlxtend.feature_selection.sequential_feature_selector.SequentialFeatureSelector.transform": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_selection.sequential_feature_selector._calc_score": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.model_selection.cross_val_score"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_selection.sequential_feature_selector._get_featurenames": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "copy.deepcopy",
    "hasattr",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mlxtend.feature_selection.sequential_feature_selector.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.sequential_feature_selector.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.sequential_feature_selector.cross_val_score": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_score"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.sequential_feature_selector.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.sequential_feature_selector.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.sequential_feature_selector.delayed": {
  "data": {
   "shadows": "joblib.delayed"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.sequential_feature_selector.get_scorer": {
  "data": {
   "shadows": "sklearn.metrics.get_scorer"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.sequential_feature_selector.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.sequential_feature_selector.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.sequential_feature_selector.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.sequential_feature_selector.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlxtend.feature_selection.sequential_feature_selector.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "mlxtend.file_io": {
  "data": {},
  "type": "module"
 },
 "mlxtend.file_io.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mlxtend.file_io.find_filegroups": {
  "data": {},
  "type": "module"
 },
 "mlxtend.file_io.find_filegroups.find_filegroups": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "enumerate",
    "find_files",
    "len",
    "mlxtend.file_io.find_filegroups.os",
    "mlxtend.file_io.find_filegroups.re",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "mlxtend.file_io.find_filegroups.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlxtend.file_io.find_filegroups.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mlxtend.file_io.find_files": {
  "data": {},
  "type": "module"
 },
 "mlxtend.file_io.find_files.find_files": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "check_file",
    "mlxtend.file_io.find_files.os"
   ]
  },
  "type": "function"
 },
 "mlxtend.file_io.find_files.find_files.check_file": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "mlxtend.file_io.find_files.os"
   ]
  },
  "type": "function"
 },
 "mlxtend.file_io.find_files.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlxtend.frequent_patterns": {
  "data": {},
  "type": "module"
 },
 "mlxtend.frequent_patterns.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mlxtend.frequent_patterns.apriori": {
  "data": {},
  "type": "module"
 },
 "mlxtend.frequent_patterns.apriori.apriori": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ValueError",
    "_support",
    "any",
    "enumerate",
    "float",
    "frozenset",
    "hasattr",
    "int",
    "mlxtend.frequent_patterns.apriori.generate_new_combinations",
    "mlxtend.frequent_patterns.apriori.generate_new_combinations_low_memory",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.fromiter",
    "numpy.ones",
    "pandas.Series",
    "pandas.concat",
    "print",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlxtend.frequent_patterns.apriori.apriori._support": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mlxtend.frequent_patterns.apriori.fpc": {
  "data": {
   "shadows": "fpcommon"
  },
  "type": "import"
 },
 "mlxtend.frequent_patterns.apriori.generate_new_combinations": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.unique",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mlxtend.frequent_patterns.apriori.generate_new_combinations_low_memory": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.unique",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mlxtend.frequent_patterns.apriori.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.frequent_patterns.apriori.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "mlxtend.frequent_patterns.association_rules": {
  "data": {},
  "type": "module"
 },
 "mlxtend.frequent_patterns.association_rules.association_rules": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "all",
    "conviction_helper",
    "dict",
    "float",
    "frozenset",
    "frozenset_vect",
    "itertools.combinations",
    "len",
    "list",
    "numpy.array",
    "numpy.nan",
    "numpy.vectorize",
    "pandas.DataFrame",
    "range",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mlxtend.frequent_patterns.association_rules.association_rules.conviction_helper": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.empty",
    "numpy.inf",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "mlxtend.frequent_patterns.association_rules.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "mlxtend.frequent_patterns.association_rules.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.frequent_patterns.association_rules.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "mlxtend.frequent_patterns.fpcommon": {
  "data": {},
  "type": "module"
 },
 "mlxtend.frequent_patterns.fpcommon.FPNode": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlxtend.frequent_patterns.fpcommon.FPNode.__init__": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "mlxtend.frequent_patterns.fpcommon.FPNode",
    "mlxtend.frequent_patterns.fpcommon.collections"
   ]
  },
  "type": "function"
 },
 "mlxtend.frequent_patterns.fpcommon.FPNode.itempath_from_root": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "mlxtend.frequent_patterns.fpcommon.FPTree": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlxtend.frequent_patterns.fpcommon.FPTree.__init__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "FPNode",
    "list",
    "mlxtend.frequent_patterns.fpcommon.collections"
   ]
  },
  "type": "function"
 },
 "mlxtend.frequent_patterns.fpcommon.FPTree.conditional_tree": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "mlxtend.frequent_patterns.fpcommon.FPTree",
    "mlxtend.frequent_patterns.fpcommon.collections",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlxtend.frequent_patterns.fpcommon.FPTree.insert_itemset": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "FPNode",
    "len"
   ]
  },
  "type": "function"
 },
 "mlxtend.frequent_patterns.fpcommon.FPTree.is_path": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mlxtend.frequent_patterns.fpcommon.FPTree.print_status": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "mlxtend.frequent_patterns.fpcommon.Version": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mlxtend.frequent_patterns.fpcommon.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "mlxtend.frequent_patterns.fpcommon.generate_itemsets": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "frozenset",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "mlxtend.frequent_patterns.fpcommon.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.frequent_patterns.fpcommon.pandas_version": {
  "data": {
   "shadows": "pandas.__version__"
  },
  "type": "import"
 },
 "mlxtend.frequent_patterns.fpcommon.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "mlxtend.frequent_patterns.fpcommon.setup_fptree": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "FPTree",
    "enumerate",
    "float",
    "hasattr",
    "len",
    "numpy.array",
    "numpy.nonzero",
    "numpy.sum",
    "numpy.where",
    "range"
   ]
  },
  "type": "function"
 },
 "mlxtend.frequent_patterns.fpcommon.valid_input_check": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "bool.all",
    "distutils.version.LooseVersion",
    "hasattr",
    "isinstance",
    "len",
    "numpy.where",
    "pandas.SparseDtype",
    "pandas.__version__",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mlxtend.frequent_patterns.fpgrowth": {
  "data": {},
  "type": "module"
 },
 "mlxtend.frequent_patterns.fpgrowth.fpc": {
  "data": {
   "shadows": "fpcommon"
  },
  "type": "import"
 },
 "mlxtend.frequent_patterns.fpgrowth.fpg_step": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "len",
    "list",
    "min",
    "mlxtend.frequent_patterns.fpgrowth.itertools",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "mlxtend.frequent_patterns.fpgrowth.fpgrowth": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "fpg_step",
    "len",
    "mlxtend.frequent_patterns.fpgrowth.math"
   ]
  },
  "type": "function"
 },
 "mlxtend.frequent_patterns.fpgrowth.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mlxtend.frequent_patterns.fpgrowth.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "mlxtend.frequent_patterns.fpmax": {
  "data": {},
  "type": "module"
 },
 "mlxtend.frequent_patterns.fpmax.MFITree": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlxtend.frequent_patterns.fpmax.MFITree.Node": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlxtend.frequent_patterns.fpmax.MFITree.Node.__init__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "mlxtend.frequent_patterns.fpmax.MFITree",
    "mlxtend.frequent_patterns.fpmax.collections"
   ]
  },
  "type": "function"
 },
 "mlxtend.frequent_patterns.fpmax.MFITree.__init__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "list",
    "mlxtend.frequent_patterns.fpmax.collections"
   ]
  },
  "type": "function"
 },
 "mlxtend.frequent_patterns.fpmax.MFITree.contains": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "len",
    "reversed"
   ]
  },
  "type": "function"
 },
 "mlxtend.frequent_patterns.fpmax.MFITree.insert_itemset": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mlxtend.frequent_patterns.fpmax.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "mlxtend.frequent_patterns.fpmax.fpc": {
  "data": {
   "shadows": "fpcommon"
  },
  "type": "import"
 },
 "mlxtend.frequent_patterns.fpmax.fpmax": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "MFITree",
    "ValueError",
    "enumerate",
    "fpmax_step",
    "len",
    "mlxtend.frequent_patterns.fpmax.math"
   ]
  },
  "type": "function"
 },
 "mlxtend.frequent_patterns.fpmax.fpmax_step": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "len",
    "list",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlxtend.frequent_patterns.fpmax.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "mlxtend.image": {
  "data": {},
  "type": "module"
 },
 "mlxtend.image.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mlxtend.image.extract_face_landmarks": {
  "data": {
   "symbols_in_volume": [
    "check_exists",
    "download_url",
    "extract_file",
    "mlxtend.image.extract_face_landmarks.dlib",
    "mlxtend.image.extract_face_landmarks.os",
    "mlxtend.image.extract_face_landmarks.predictor_path",
    "mlxtend.image.extract_face_landmarks.predictor_url"
   ]
  },
  "type": "module"
 },
 "mlxtend.image.extract_face_landmarks.detector": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mlxtend.image.extract_face_landmarks.dlib": {
  "data": {
   "shadows": "dlib"
  },
  "type": "import"
 },
 "mlxtend.image.extract_face_landmarks.extract_face_landmarks": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "mlxtend.image.extract_face_landmarks.detector",
    "mlxtend.image.extract_face_landmarks.predictor",
    "mlxtend.image.extract_face_landmarks.warnings",
    "numpy.array",
    "numpy.int32",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mlxtend.image.extract_face_landmarks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.image.extract_face_landmarks.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlxtend.image.extract_face_landmarks.predictor": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mlxtend.image.extract_face_landmarks.predictor_path": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mlxtend.image.extract_face_landmarks.predictor_url": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mlxtend.image.extract_face_landmarks.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mlxtend.image.eyepad_align": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "mlxtend.image.eyepad_align.AffineTransform": {
  "data": {
   "shadows": "skimage.transform.AffineTransform"
  },
  "type": "import"
 },
 "mlxtend.image.eyepad_align.EyepadAlign": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlxtend.image.eyepad_align.EyepadAlign.__init__": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "mlxtend.image.eyepad_align.EyepadAlign._calc_eye_properties": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "mlxtend.image.eyepad_align.LEFT_INDEX",
    "mlxtend.image.eyepad_align.RIGHT_INDEX",
    "numpy.mean",
    "numpy.sqrt",
    "numpy.square",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mlxtend.image.eyepad_align.EyepadAlign.fit_directory": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ProgBar",
    "ValueError",
    "extract_face_landmarks",
    "len",
    "mlxtend.image.eyepad_align.os",
    "mlxtend.image.eyepad_align.warnings",
    "numpy.abs",
    "numpy.mean",
    "numpy.sum",
    "print",
    "read_image",
    "skimage.transform.resize"
   ]
  },
  "type": "function"
 },
 "mlxtend.image.eyepad_align.EyepadAlign.fit_image": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "extract_face_landmarks"
   ]
  },
  "type": "function"
 },
 "mlxtend.image.eyepad_align.EyepadAlign.fit_values": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "mlxtend.image.eyepad_align.EyepadAlign.transform": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "AttributeError",
    "extract_face_landmarks",
    "hasattr",
    "int",
    "numpy.array",
    "skimage.transform.AffineTransform",
    "skimage.transform.warp"
   ]
  },
  "type": "function"
 },
 "mlxtend.image.eyepad_align.LEFT_INDEX": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mlxtend.image.eyepad_align.RIGHT_INDEX": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mlxtend.image.eyepad_align.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.image.eyepad_align.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlxtend.image.eyepad_align.resize": {
  "data": {
   "shadows": "skimage.transform.resize"
  },
  "type": "import"
 },
 "mlxtend.image.eyepad_align.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mlxtend.image.eyepad_align.warp": {
  "data": {
   "shadows": "skimage.transform.warp"
  },
  "type": "import"
 },
 "mlxtend.image.utils": {
  "data": {},
  "type": "module"
 },
 "mlxtend.image.utils.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "mlxtend.image.utils.check_exists": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "mlxtend.image.utils.os"
   ]
  },
  "type": "function"
 },
 "mlxtend.image.utils.download_url": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "mlxtend.image.utils.check_exists",
    "mlxtend.image.utils.makedir",
    "mlxtend.image.utils.os",
    "print",
    "six.moves.urllib.request.urlretrieve"
   ]
  },
  "type": "function"
 },
 "mlxtend.image.utils.extract_file": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "iter",
    "mlxtend.image.utils.bz2",
    "mlxtend.image.utils.os",
    "mlxtend.image.utils.tarfile",
    "mlxtend.image.utils.zipfile",
    "open",
    "opener"
   ]
  },
  "type": "function"
 },
 "mlxtend.image.utils.imageio": {
  "data": {
   "shadows": "imageio"
  },
  "type": "import"
 },
 "mlxtend.image.utils.listdir": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "FileNotFoundError",
    "mlxtend.image.utils.check_exists",
    "mlxtend.image.utils.os"
   ]
  },
  "type": "function"
 },
 "mlxtend.image.utils.makedir": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "mlxtend.image.utils.check_exists",
    "mlxtend.image.utils.os"
   ]
  },
  "type": "function"
 },
 "mlxtend.image.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlxtend.image.utils.read_image": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "FileNotFoundError",
    "mlxtend.image.utils.check_exists",
    "mlxtend.image.utils.imageio",
    "mlxtend.image.utils.os"
   ]
  },
  "type": "function"
 },
 "mlxtend.image.utils.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "mlxtend.image.utils.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "mlxtend.image.utils.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "mlxtend.math": {
  "data": {},
  "type": "module"
 },
 "mlxtend.math.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mlxtend.math.counting": {
  "data": {},
  "type": "module"
 },
 "mlxtend.math.counting.factorial": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "mlxtend.math.counting.num_combinations": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "mlxtend.math.counting.factorial"
   ]
  },
  "type": "function"
 },
 "mlxtend.math.counting.num_permutations": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "mlxtend.math.counting.factorial"
   ]
  },
  "type": "function"
 },
 "mlxtend.math.linalg": {
  "data": {},
  "type": "module"
 },
 "mlxtend.math.linalg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.math.linalg.vectorspace_dimensionality": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "int",
    "mlxtend.math.linalg.vectorspace_orthonormalization",
    "numpy.linalg.norm",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mlxtend.math.linalg.vectorspace_orthonormalization": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.float",
    "numpy.linalg.norm",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mlxtend.plotting": {
  "data": {},
  "type": "module"
 },
 "mlxtend.plotting.__all__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mlxtend.plotting.checkerboard": {
  "data": {},
  "type": "module"
 },
 "mlxtend.plotting.checkerboard.Table": {
  "data": {
   "shadows": "matplotlib.table.Table"
  },
  "type": "import"
 },
 "mlxtend.plotting.checkerboard.checkerboard_plot": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "enumerate",
    "matplotlib.pyplot.subplots",
    "matplotlib.table.Table",
    "numpy.arange",
    "numpy.ndenumerate"
   ]
  },
  "type": "function"
 },
 "mlxtend.plotting.checkerboard.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.plotting.checkerboard.subplots": {
  "data": {
   "shadows": "matplotlib.pyplot.subplots"
  },
  "type": "import"
 },
 "mlxtend.plotting.decision_regions": {
  "data": {},
  "type": "module"
 },
 "mlxtend.plotting.decision_regions.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "mlxtend.plotting.decision_regions.check_Xy": {
  "data": {
   "shadows": "mlxtend.utils.check_Xy"
  },
  "type": "import"
 },
 "mlxtend.plotting.decision_regions.cycle": {
  "data": {
   "shadows": "itertools.cycle"
  },
  "type": "import"
 },
 "mlxtend.plotting.decision_regions.floor": {
  "data": {
   "shadows": "math.floor"
  },
  "type": "import"
 },
 "mlxtend.plotting.decision_regions.format_kwarg_dictionaries": {
  "data": {
   "shadows": "mlxtend.utils.format_kwarg_dictionaries"
  },
  "type": "import"
 },
 "mlxtend.plotting.decision_regions.get_feature_range_mask": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "isinstance",
    "len",
    "numpy.ndarray",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "mlxtend.plotting.decision_regions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.plotting.decision_regions.plot_decision_regions": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "DeprecationWarning",
    "IndexError",
    "ValueError",
    "all",
    "bool",
    "enumerate",
    "isinstance",
    "itertools.cycle",
    "len",
    "list",
    "math.ceil",
    "math.floor",
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.gcf",
    "mlxtend.plotting.decision_regions.get_feature_range_mask",
    "mlxtend.plotting.decision_regions.warnings",
    "mlxtend.utils.check_Xy",
    "mlxtend.utils.format_kwarg_dictionaries",
    "next",
    "numpy.arange",
    "numpy.argwhere",
    "numpy.array",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.ndarray",
    "numpy.unique",
    "numpy.zeros",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "mlxtend.plotting.decision_regions.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mlxtend.plotting.decision_regions.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mlxtend.plotting.ecdf": {
  "data": {},
  "type": "module"
 },
 "mlxtend.plotting.ecdf.ecdf": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "float",
    "matplotlib.pyplot.gca",
    "numpy.arange",
    "numpy.sort"
   ]
  },
  "type": "function"
 },
 "mlxtend.plotting.ecdf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.plotting.ecdf.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mlxtend.plotting.enrichment_plot": {
  "data": {},
  "type": "module"
 },
 "mlxtend.plotting.enrichment_plot.cycle": {
  "data": {
   "shadows": "itertools.cycle"
  },
  "type": "import"
 },
 "mlxtend.plotting.enrichment_plot.enrichment_plot": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "isinstance",
    "itertools.cycle",
    "len",
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.grid",
    "matplotlib.pyplot.legend",
    "matplotlib.pyplot.xlabel",
    "matplotlib.pyplot.ylabel",
    "next",
    "numpy.max",
    "numpy.min",
    "pandas.DataFrame",
    "pandas.Series",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlxtend.plotting.enrichment_plot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.plotting.enrichment_plot.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "mlxtend.plotting.enrichment_plot.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mlxtend.plotting.heatmap": {
  "data": {},
  "type": "module"
 },
 "mlxtend.plotting.heatmap.heatmap": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "AssertionError",
    "format",
    "len",
    "matplotlib.pyplot.cm.viridis",
    "matplotlib.pyplot.subplots",
    "matplotlib.pyplot.xticks",
    "matplotlib.pyplot.yticks",
    "numpy.arange",
    "range"
   ]
  },
  "type": "function"
 },
 "mlxtend.plotting.heatmap.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.plotting.heatmap.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mlxtend.plotting.learning_curves": {
  "data": {},
  "type": "module"
 },
 "mlxtend.plotting.learning_curves.metrics": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "mlxtend.plotting.learning_curves.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.plotting.learning_curves.plot_learning_curves": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "AttributeError",
    "int",
    "matplotlib.pyplot.legend",
    "matplotlib.pyplot.plot",
    "matplotlib.pyplot.style.context",
    "matplotlib.pyplot.title",
    "matplotlib.pyplot.xlabel",
    "matplotlib.pyplot.xlim",
    "matplotlib.pyplot.ylabel",
    "matplotlib.pyplot.ylim",
    "max",
    "min",
    "numpy.arange",
    "numpy.linspace",
    "sklearn.metrics.accuracy_score",
    "sklearn.metrics.adjusted_rand_score",
    "sklearn.metrics.average_precision_score",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.log_loss",
    "sklearn.metrics.mean_absolute_error",
    "sklearn.metrics.mean_squared_error",
    "sklearn.metrics.median_absolute_error",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.r2_score",
    "sklearn.metrics.recall_score",
    "sklearn.metrics.roc_auc_score"
   ]
  },
  "type": "function"
 },
 "mlxtend.plotting.learning_curves.plot_learning_curves.misclf_err": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "float",
    "len"
   ]
  },
  "type": "function"
 },
 "mlxtend.plotting.learning_curves.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mlxtend.plotting.pca_correlation_graph": {
  "data": {},
  "type": "module"
 },
 "mlxtend.plotting.pca_correlation_graph.PrincipalComponentAnalysis": {
  "data": {
   "shadows": "mlxtend.feature_extraction.PrincipalComponentAnalysis"
  },
  "type": "import"
 },
 "mlxtend.plotting.pca_correlation_graph.adjust_text": {
  "data": {
   "shadows": "mlxtend.externals.adjust_text.adjust_text"
  },
  "type": "import"
 },
 "mlxtend.plotting.pca_correlation_graph.corr2_coeff": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "mlxtend.plotting.pca_correlation_graph.create_correlation_table": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "mlxtend.plotting.pca_correlation_graph.corr2_coeff",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "mlxtend.plotting.pca_correlation_graph.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.plotting.pca_correlation_graph.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "mlxtend.plotting.pca_correlation_graph.plot_pca_correlation_graph": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "matplotlib.pyplot.Circle",
    "matplotlib.pyplot.arrow",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.gcf",
    "matplotlib.pyplot.plot",
    "matplotlib.pyplot.text",
    "matplotlib.pyplot.title",
    "matplotlib.pyplot.xlabel",
    "matplotlib.pyplot.xlim",
    "matplotlib.pyplot.ylabel",
    "matplotlib.pyplot.ylim",
    "max",
    "mlxtend.externals.adjust_text.adjust_text",
    "mlxtend.feature_extraction.PrincipalComponentAnalysis",
    "mlxtend.plotting.pca_correlation_graph.create_correlation_table",
    "numpy.array",
    "range",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "mlxtend.plotting.pca_correlation_graph.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mlxtend.plotting.plot_confusion_matrix": {
  "data": {},
  "type": "module"
 },
 "mlxtend.plotting.plot_confusion_matrix.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.plotting.plot_confusion_matrix.plot_confusion_matrix": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "AssertionError",
    "format",
    "len",
    "matplotlib.pyplot.cm.Blues",
    "matplotlib.pyplot.subplots",
    "matplotlib.pyplot.xlabel",
    "matplotlib.pyplot.xticks",
    "matplotlib.pyplot.ylabel",
    "matplotlib.pyplot.yticks",
    "numpy.arange",
    "numpy.max",
    "numpy.newaxis",
    "range"
   ]
  },
  "type": "function"
 },
 "mlxtend.plotting.plot_confusion_matrix.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mlxtend.plotting.plot_linear_regression": {
  "data": {},
  "type": "module"
 },
 "mlxtend.plotting.plot_linear_regression.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "mlxtend.plotting.plot_linear_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.plotting.plot_linear_regression.pearsonr": {
  "data": {
   "shadows": "scipy.stats.pearsonr"
  },
  "type": "import"
 },
 "mlxtend.plotting.plot_linear_regression.plot_linear_regression": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "corr_func",
    "isinstance",
    "len",
    "list",
    "matplotlib.pyplot.legend",
    "matplotlib.pyplot.plot",
    "matplotlib.pyplot.scatter",
    "numpy.asarray",
    "numpy.float",
    "numpy.newaxis",
    "scipy.stats.pearsonr",
    "sklearn.linear_model.LinearRegression"
   ]
  },
  "type": "function"
 },
 "mlxtend.plotting.plot_linear_regression.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mlxtend.plotting.plot_sequential_feature_selection": {
  "data": {},
  "type": "module"
 },
 "mlxtend.plotting.plot_sequential_feature_selection.plot_sequential_feature_selection": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "AttributeError",
    "len",
    "matplotlib.pyplot.fill_between",
    "matplotlib.pyplot.plot",
    "matplotlib.pyplot.subplots",
    "matplotlib.pyplot.xlabel",
    "matplotlib.pyplot.xticks",
    "matplotlib.pyplot.ylabel",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlxtend.plotting.plot_sequential_feature_selection.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mlxtend.plotting.remove_chartjunk": {
  "data": {},
  "type": "module"
 },
 "mlxtend.plotting.remove_chartjunk.remove_borders": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "mlxtend.plotting.scatter": {
  "data": {},
  "type": "module"
 },
 "mlxtend.plotting.scatter.category_scatter": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "itertools.cycle",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.legend",
    "matplotlib.pyplot.scatter",
    "next",
    "numpy.ndarray",
    "numpy.unique",
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "mlxtend.plotting.scatter.cycle": {
  "data": {
   "shadows": "itertools.cycle"
  },
  "type": "import"
 },
 "mlxtend.plotting.scatter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.plotting.scatter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "mlxtend.plotting.scatter.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mlxtend.plotting.scatterplotmatrix": {
  "data": {},
  "type": "module"
 },
 "mlxtend.plotting.scatterplotmatrix.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.plotting.scatterplotmatrix.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mlxtend.plotting.scatterplotmatrix.scatterplotmatrix": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "matplotlib.pyplot.subplots",
    "numpy.triu_indices_from",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mlxtend.plotting.stacked_barplot": {
  "data": {},
  "type": "module"
 },
 "mlxtend.plotting.stacked_barplot.cycle": {
  "data": {
   "shadows": "itertools.cycle"
  },
  "type": "import"
 },
 "mlxtend.plotting.stacked_barplot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.plotting.stacked_barplot.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mlxtend.plotting.stacked_barplot.stacked_barplot": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "enumerate",
    "itertools.cycle",
    "len",
    "matplotlib.pyplot.bar",
    "matplotlib.pyplot.legend",
    "matplotlib.pyplot.subplots",
    "matplotlib.pyplot.xlim",
    "max",
    "min",
    "next",
    "numpy.array",
    "numpy.asarray",
    "range"
   ]
  },
  "type": "function"
 },
 "mlxtend.preprocessing": {
  "data": {},
  "type": "module"
 },
 "mlxtend.preprocessing.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mlxtend.preprocessing.copy_transformer": {
  "data": {},
  "type": "module"
 },
 "mlxtend.preprocessing.copy_transformer.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "mlxtend.preprocessing.copy_transformer.CopyTransformer": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "mlxtend.preprocessing.copy_transformer.CopyTransformer.__init__": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "mlxtend.preprocessing.copy_transformer.CopyTransformer.fit": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "mlxtend.preprocessing.copy_transformer.CopyTransformer.fit_transform": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "mlxtend.preprocessing.copy_transformer.CopyTransformer.transform": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "numpy.asarray",
    "numpy.ndarray",
    "scipy.sparse.issparse",
    "type"
   ]
  },
  "type": "function"
 },
 "mlxtend.preprocessing.copy_transformer.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "mlxtend.preprocessing.copy_transformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.preprocessing.dense_transformer": {
  "data": {},
  "type": "module"
 },
 "mlxtend.preprocessing.dense_transformer.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "mlxtend.preprocessing.dense_transformer.DenseTransformer": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "mlxtend.preprocessing.dense_transformer.DenseTransformer.__init__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "mlxtend.preprocessing.dense_transformer.DenseTransformer.fit": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "mlxtend.preprocessing.dense_transformer.DenseTransformer.fit_transform": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "mlxtend.preprocessing.dense_transformer.DenseTransformer.transform": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "mlxtend.preprocessing.dense_transformer.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "mlxtend.preprocessing.mean_centering": {
  "data": {},
  "type": "module"
 },
 "mlxtend.preprocessing.mean_centering.MeanCenterer": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlxtend.preprocessing.mean_centering.MeanCenterer.__init__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "mlxtend.preprocessing.mean_centering.MeanCenterer._get_array": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "mlxtend.preprocessing.mean_centering.MeanCenterer.fit": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "mlxtend.preprocessing.mean_centering.MeanCenterer.fit_transform": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "mlxtend.preprocessing.mean_centering.MeanCenterer.transform": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "numpy.apply_along_axis",
    "numpy.copy"
   ]
  },
  "type": "function"
 },
 "mlxtend.preprocessing.mean_centering.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.preprocessing.onehot": {
  "data": {},
  "type": "module"
 },
 "mlxtend.preprocessing.onehot.OnehotTransactions": {
  "data": {
   "lineno": 61
  },
  "type": "class"
 },
 "mlxtend.preprocessing.onehot.OnehotTransactions.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "DeprecationWarning",
    "mlxtend.preprocessing.onehot.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "mlxtend.preprocessing.onehot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.preprocessing.onehot.one_hot": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "AttributeError",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.asarray",
    "numpy.max",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mlxtend.preprocessing.onehot.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mlxtend.preprocessing.scaling": {
  "data": {},
  "type": "module"
 },
 "mlxtend.preprocessing.scaling.minmax_scaling": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "AttributeError",
    "float",
    "isinstance",
    "len",
    "numpy.ndarray",
    "numpy.newaxis",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "mlxtend.preprocessing.scaling.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.preprocessing.scaling.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "mlxtend.preprocessing.scaling.standardize": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "AttributeError",
    "float",
    "isinstance",
    "len",
    "list",
    "numpy.all",
    "numpy.ndarray",
    "numpy.newaxis",
    "numpy.zeros",
    "pandas.DataFrame",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mlxtend.preprocessing.shuffle": {
  "data": {},
  "type": "module"
 },
 "mlxtend.preprocessing.shuffle.check_Xy": {
  "data": {
   "shadows": "mlxtend.utils.check_Xy"
  },
  "type": "import"
 },
 "mlxtend.preprocessing.shuffle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.preprocessing.shuffle.shuffle_arrays_unison": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "len",
    "numpy.random.permutation",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "mlxtend.preprocessing.shuffle.shuffled_split": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "mlxtend.preprocessing.shuffle.shuffle_arrays_unison",
    "mlxtend.utils.check_Xy",
    "round"
   ]
  },
  "type": "function"
 },
 "mlxtend.preprocessing.transactionencoder": {
  "data": {},
  "type": "module"
 },
 "mlxtend.preprocessing.transactionencoder.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "mlxtend.preprocessing.transactionencoder.TransactionEncoder": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "mlxtend.preprocessing.transactionencoder.TransactionEncoder.__init__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "mlxtend.preprocessing.transactionencoder.TransactionEncoder.fit": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "enumerate",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlxtend.preprocessing.transactionencoder.TransactionEncoder.fit_transform": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "mlxtend.preprocessing.transactionencoder.TransactionEncoder.inverse_transform": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "mlxtend.preprocessing.transactionencoder.TransactionEncoder.transform": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "bool",
    "enumerate",
    "len",
    "numpy.zeros",
    "scipy.sparse.csr_matrix",
    "set"
   ]
  },
  "type": "function"
 },
 "mlxtend.preprocessing.transactionencoder.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "mlxtend.preprocessing.transactionencoder.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "mlxtend.preprocessing.transactionencoder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.regressor": {
  "data": {},
  "type": "module"
 },
 "mlxtend.regressor.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mlxtend.regressor.linear_regression": {
  "data": {},
  "type": "module"
 },
 "mlxtend.regressor.linear_regression.LinearRegression": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "mlxtend.regressor.linear_regression.LinearRegression.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "mlxtend.regressor.linear_regression.LinearRegression._fit": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.hstack",
    "numpy.linalg.inv",
    "numpy.linalg.pinv",
    "numpy.linalg.qr",
    "numpy.ones",
    "numpy.random.RandomState",
    "range",
    "time.time"
   ]
  },
  "type": "function"
 },
 "mlxtend.regressor.linear_regression.LinearRegression._net_input": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "mlxtend.regressor.linear_regression.LinearRegression._normal_equation": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.hstack",
    "numpy.linalg.inv",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mlxtend.regressor.linear_regression.LinearRegression._predict": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "mlxtend.regressor.linear_regression.LinearRegression._sum_squared_error_cost": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "mlxtend.regressor.linear_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.regressor.linear_regression.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "mlxtend.regressor.stacking_cv_regression": {
  "data": {},
  "type": "module"
 },
 "mlxtend.regressor.stacking_cv_regression.RegressorMixin": {
  "data": {
   "shadows": "sklearn.base.RegressorMixin"
  },
  "type": "import"
 },
 "mlxtend.regressor.stacking_cv_regression.StackingCVRegressor": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "sklearn.base.RegressorMixin",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "mlxtend.regressor.stacking_cv_regression.StackingCVRegressor.__init__": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "mlxtend.regressor.stacking_cv_regression.StackingCVRegressor.fit": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "dict",
    "int",
    "isinstance",
    "numpy.column_stack",
    "numpy.hstack",
    "scipy.sparse.hstack",
    "scipy.sparse.issparse",
    "sklearn.base.clone",
    "sklearn.model_selection._split.check_cv",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.utils.check_X_y"
   ]
  },
  "type": "function"
 },
 "mlxtend.regressor.stacking_cv_regression.StackingCVRegressor.get_params": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "mlxtend.regressor.stacking_cv_regression.StackingCVRegressor.named_regressors": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "_name_estimators",
    "property"
   ]
  },
  "type": "function"
 },
 "mlxtend.regressor.stacking_cv_regression.StackingCVRegressor.predict": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.column_stack",
    "numpy.hstack",
    "scipy.sparse.hstack",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "mlxtend.regressor.stacking_cv_regression.StackingCVRegressor.predict_meta_features": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.column_stack"
   ]
  },
  "type": "function"
 },
 "mlxtend.regressor.stacking_cv_regression.StackingCVRegressor.set_params": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "mlxtend.regressor.stacking_cv_regression.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "mlxtend.regressor.stacking_cv_regression.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.check_X_y"
  },
  "type": "import"
 },
 "mlxtend.regressor.stacking_cv_regression.check_cv": {
  "data": {
   "shadows": "sklearn.model_selection._split.check_cv"
  },
  "type": "import"
 },
 "mlxtend.regressor.stacking_cv_regression.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "mlxtend.regressor.stacking_cv_regression.cross_val_predict": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_predict"
  },
  "type": "import"
 },
 "mlxtend.regressor.stacking_cv_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.regressor.stacking_cv_regression.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mlxtend.regressor.stacking_regression": {
  "data": {},
  "type": "module"
 },
 "mlxtend.regressor.stacking_regression.RegressorMixin": {
  "data": {
   "shadows": "sklearn.base.RegressorMixin"
  },
  "type": "import"
 },
 "mlxtend.regressor.stacking_regression.StackingRegressor": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "sklearn.base.RegressorMixin",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "mlxtend.regressor.stacking_regression.StackingRegressor.__init__": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "mlxtend.regressor.stacking_regression.StackingRegressor.coef_": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlxtend.regressor.stacking_regression.StackingRegressor.fit": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "_name_estimators",
    "hasattr",
    "len",
    "numpy.hstack",
    "print",
    "scipy.sparse.hstack",
    "scipy.sparse.issparse",
    "sklearn.base.clone"
   ]
  },
  "type": "function"
 },
 "mlxtend.regressor.stacking_regression.StackingRegressor.get_params": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "mlxtend.regressor.stacking_regression.StackingRegressor.intercept_": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlxtend.regressor.stacking_regression.StackingRegressor.named_regressors": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "_name_estimators",
    "property"
   ]
  },
  "type": "function"
 },
 "mlxtend.regressor.stacking_regression.StackingRegressor.predict": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.hstack",
    "scipy.sparse.hstack",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "mlxtend.regressor.stacking_regression.StackingRegressor.predict_meta_features": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.column_stack"
   ]
  },
  "type": "function"
 },
 "mlxtend.regressor.stacking_regression.StackingRegressor.set_params": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "mlxtend.regressor.stacking_regression.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "mlxtend.regressor.stacking_regression.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "mlxtend.regressor.stacking_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.regressor.stacking_regression.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mlxtend.text": {
  "data": {
   "symbols_in_volume": [
    "mlxtend.text.sys"
   ]
  },
  "type": "module"
 },
 "mlxtend.text.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mlxtend.text.names": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "mlxtend.text.names.sys"
   ]
  },
  "type": "module"
 },
 "mlxtend.text.names.Version": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mlxtend.text.names.generalize_names": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "len",
    "mlxtend.text.names.re",
    "mlxtend.text.names.string",
    "mlxtend.text.names.sys",
    "mlxtend.text.names.unicodedata"
   ]
  },
  "type": "function"
 },
 "mlxtend.text.names.generalize_names_duplcheck": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "len",
    "list",
    "mlxtend.text.names.generalize_names",
    "pandas.__version__"
   ]
  },
  "type": "function"
 },
 "mlxtend.text.names.pandas_version": {
  "data": {
   "shadows": "pandas.__version__"
  },
  "type": "import"
 },
 "mlxtend.text.names.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mlxtend.text.names.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "mlxtend.text.names.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlxtend.text.names.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 },
 "mlxtend.text.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlxtend.text.tokenizer": {
  "data": {},
  "type": "module"
 },
 "mlxtend.text.tokenizer.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mlxtend.text.tokenizer.tokenizer_emoticons": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "mlxtend.text.tokenizer.re"
   ]
  },
  "type": "function"
 },
 "mlxtend.text.tokenizer.tokenizer_words_and_emoticons": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "mlxtend.text.tokenizer.re"
   ]
  },
  "type": "function"
 },
 "mlxtend.utils": {
  "data": {},
  "type": "module"
 },
 "mlxtend.utils.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mlxtend.utils.base_compostion": {
  "data": {},
  "type": "module"
 },
 "mlxtend.utils.base_compostion._BaseComposition": {
  "data": {
   "shadows": "sklearn.utils.metaestimators._BaseComposition"
  },
  "type": "import"
 },
 "mlxtend.utils.base_compostion._BaseXComposition": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "sklearn.utils.metaestimators._BaseComposition"
   ]
  },
  "type": "class"
 },
 "mlxtend.utils.base_compostion._BaseXComposition._set_params": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "enumerate",
    "getattr",
    "list",
    "mlxtend.utils.base_compostion._BaseXComposition",
    "setattr",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "mlxtend.utils.checking": {
  "data": {},
  "type": "module"
 },
 "mlxtend.utils.checking.check_Xy": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "numpy.ndarray",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mlxtend.utils.checking.format_kwarg_dictionaries": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "mlxtend.utils.checking.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlxtend.utils.counter": {
  "data": {},
  "type": "module"
 },
 "mlxtend.utils.counter.Counter": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlxtend.utils.counter.Counter.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "mlxtend.utils.counter.sys",
    "mlxtend.utils.counter.time"
   ]
  },
  "type": "function"
 },
 "mlxtend.utils.counter.Counter.update": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "mlxtend.utils.counter.time"
   ]
  },
  "type": "function"
 },
 "mlxtend.utils.counter.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlxtend.utils.counter.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mlxtend.utils.testing": {
  "data": {},
  "type": "module"
 },
 "mlxtend.utils.testing.assert_raises": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "AssertionError",
    "func",
    "str"
   ]
  },
  "type": "function"
 }
}