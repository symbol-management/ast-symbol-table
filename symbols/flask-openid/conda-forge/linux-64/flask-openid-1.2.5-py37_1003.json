{
 "flask_openid": {
  "data": {
   "symbols_in_volume": [
    "flask_openid.AX_MAPPING",
    "flask_openid.SREG_KEYS",
    "flask_openid._dispatching_log",
    "openid.oidutil.log",
    "set"
   ]
  },
  "type": "module"
 },
 "flask_openid.ALL_KEYS": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "flask_openid.AX_MAPPING": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "flask_openid.CANCEL": {
  "data": {
   "shadows": "openid.consumer.consumer.CANCEL"
  },
  "type": "import"
 },
 "flask_openid.COMMON_PROVIDERS": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "flask_openid.Consumer": {
  "data": {
   "shadows": "openid.consumer.consumer.Consumer"
  },
  "type": "import"
 },
 "flask_openid.FAILURE": {
  "data": {
   "shadows": "openid.consumer.consumer.FAILURE"
  },
  "type": "import"
 },
 "flask_openid.FULL_DOB_URIS": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "flask_openid.FULL_NAME_URIS": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "flask_openid.FileOpenIDStore": {
  "data": {
   "shadows": "openid.store.filestore.FileOpenIDStore"
  },
  "type": "import"
 },
 "flask_openid.OpenID": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "flask_openid.OpenID.__init__": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "DeprecationWarning",
    "flask_openid.isstring",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "flask_openid.OpenID._default_store_factory": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "DeprecationWarning",
    "flask.current_app",
    "flask_openid.os",
    "flask_openid.tempfile",
    "openid.store.filestore.FileOpenIDStore",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "flask_openid.OpenID.after_login": {
  "data": {
   "lineno": 483
  },
  "type": "function"
 },
 "flask_openid.OpenID.attach_reg_info": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "flask_openid.AX_MAPPING",
    "flask_openid.REQUIRED_KEYS",
    "flask_openid.SREG_KEYS",
    "list",
    "openid.extensions.ax.AttrInfo",
    "openid.extensions.ax.FetchRequest",
    "openid.extensions.sreg.SRegRequest",
    "set"
   ]
  },
  "type": "function"
 },
 "flask_openid.OpenID.check_safe_root": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "flask.request.url_root"
   ]
  },
  "type": "function"
 },
 "flask_openid.OpenID.errorhandler": {
  "data": {
   "lineno": 470
  },
  "type": "function"
 },
 "flask_openid.OpenID.fetch_error": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "flask.session.pop"
   ]
  },
  "type": "function"
 },
 "flask_openid.OpenID.get_current_url": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "flask.request.base_url",
    "werkzeug.urls.url_quote"
   ]
  },
  "type": "function"
 },
 "flask_openid.OpenID.get_next_url": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "flask.request.referrer",
    "flask.request.url_root",
    "flask.request.values.get",
    "flask.url_for"
   ]
  },
  "type": "function"
 },
 "flask_openid.OpenID.get_success_url": {
  "data": {
   "lineno": 446
  },
  "type": "function"
 },
 "flask_openid.OpenID.init_app": {
  "data": {
   "lineno": 379
  },
  "type": "function"
 },
 "flask_openid.OpenID.loginhandler": {
  "data": {
   "lineno": 492
  },
  "type": "function"
 },
 "flask_openid.OpenID.loginhandler.decorated": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "f",
    "flask.redirect",
    "flask.request.args.get",
    "flask.request.args.to_dict",
    "flask.request.form.to_dict",
    "flask_openid.OpenIDResponse",
    "flask_openid.SessionWrapper",
    "functools.wraps",
    "openid.consumer.consumer.CANCEL",
    "openid.consumer.consumer.Consumer",
    "openid.consumer.consumer.FAILURE",
    "openid.consumer.consumer.SETUP_NEEDED",
    "openid.consumer.consumer.SUCCESS"
   ]
  },
  "type": "function"
 },
 "flask_openid.OpenID.signal_error": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "flask.session"
   ]
  },
  "type": "function"
 },
 "flask_openid.OpenID.try_login": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "ValueError",
    "__debug__",
    "flask.redirect",
    "flask.request.host_url",
    "flask.request.url_root",
    "flask_openid.ALL_KEYS",
    "flask_openid.SessionWrapper",
    "openid.consumer.consumer.Consumer",
    "openid.consumer.discover.DiscoveryFailure"
   ]
  },
  "type": "function"
 },
 "flask_openid.OpenIDResponse": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "flask_openid.OpenIDResponse.__init__": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "OverflowError",
    "TypeError",
    "ValueError",
    "datetime.date",
    "flask_openid.FULL_DOB_URIS",
    "flask_openid.FULL_NAME_URIS",
    "flask_openid.RegLookup",
    "flask_openid.softint",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "flask_openid.REQUIRED_KEYS": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "flask_openid.RegLookup": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "flask_openid.RegLookup.__init__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "getattr",
    "openid.extensions.ax.FetchResponse.fromSuccessResponse",
    "openid.extensions.sreg.SRegResponse.fromSuccessResponse"
   ]
  },
  "type": "function"
 },
 "flask_openid.RegLookup.get": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "flask_openid.ALL_KEYS",
    "flask_openid.AX_MAPPING"
   ]
  },
  "type": "function"
 },
 "flask_openid.RegLookup.get_combined": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "flask_openid.RegLookup.get_uri": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "flask_openid.SETUP_NEEDED": {
  "data": {
   "shadows": "openid.consumer.consumer.SETUP_NEEDED"
  },
  "type": "import"
 },
 "flask_openid.SREG_KEYS": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "flask_openid.SRegRequest": {
  "data": {
   "shadows": "openid.extensions.sreg.SRegRequest"
  },
  "type": "import"
 },
 "flask_openid.SRegResponse": {
  "data": {
   "shadows": "openid.extensions.sreg.SRegResponse"
  },
  "type": "import"
 },
 "flask_openid.SUCCESS": {
  "data": {
   "shadows": "openid.consumer.consumer.SUCCESS"
  },
  "type": "import"
 },
 "flask_openid.SessionWrapper": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "flask_openid.SessionWrapper.__contains__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "flask_openid.SessionWrapper.__delitem__": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "flask.session"
   ]
  },
  "type": "function"
 },
 "flask_openid.SessionWrapper.__getitem__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "dict",
    "flask.session",
    "flask_openid.base64",
    "flask_openid.pickle",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "flask_openid.SessionWrapper.__init__": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "flask_openid.SessionWrapper.__setitem__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "flask.current_app.session_interface",
    "flask.session",
    "flask_openid.base64",
    "flask_openid.pickle",
    "getattr"
   ]
  },
  "type": "function"
 },
 "flask_openid.SessionWrapper.get": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "flask_openid._dispatching_log": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "flask.current_app._get_current_object",
    "flask_openid._original_log"
   ]
  },
  "type": "function"
 },
 "flask_openid._original_log": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "flask_openid.ax": {
  "data": {
   "shadows": "openid.extensions.ax"
  },
  "type": "import"
 },
 "flask_openid.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "flask_openid.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "flask_openid.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "flask_openid.discover": {
  "data": {
   "shadows": "openid.consumer.discover"
  },
  "type": "import"
 },
 "flask_openid.isstring": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "flask_openid.sys",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "flask_openid.oidutil": {
  "data": {
   "shadows": "openid.oidutil"
  },
  "type": "import"
 },
 "flask_openid.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "flask_openid.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "flask_openid.redirect": {
  "data": {
   "shadows": "flask.redirect"
  },
  "type": "import"
 },
 "flask_openid.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "flask_openid.session": {
  "data": {
   "shadows": "flask.session"
  },
  "type": "import"
 },
 "flask_openid.softint": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int"
   ]
  },
  "type": "function"
 },
 "flask_openid.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "flask_openid.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "flask_openid.url_for": {
  "data": {
   "shadows": "flask.url_for"
  },
  "type": "import"
 },
 "flask_openid.url_quote": {
  "data": {
   "shadows": "werkzeug.urls.url_quote"
  },
  "type": "import"
 },
 "flask_openid.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "flask_openid.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 }
}