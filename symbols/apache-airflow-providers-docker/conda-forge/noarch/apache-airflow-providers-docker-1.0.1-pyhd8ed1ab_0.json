{
 "airflow.providers.docker": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.docker.example_dags": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.docker.example_dags.example_docker": {
  "data": {
   "symbols_in_volume": [
    "airflow.DAG",
    "airflow.operators.bash.BashOperator",
    "airflow.providers.docker.example_dags.example_docker.dag",
    "airflow.providers.docker.example_dags.example_docker.default_args",
    "airflow.providers.docker.example_dags.example_docker.t1",
    "airflow.providers.docker.example_dags.example_docker.t2",
    "airflow.providers.docker.example_dags.example_docker.t3",
    "airflow.providers.docker.example_dags.example_docker.t4",
    "airflow.providers.docker.operators.docker.DockerOperator",
    "airflow.utils.dates.days_ago",
    "datetime.timedelta"
   ]
  },
  "type": "module"
 },
 "airflow.providers.docker.example_dags.example_docker.BashOperator": {
  "data": {
   "shadows": "airflow.operators.bash.BashOperator"
  },
  "type": "import"
 },
 "airflow.providers.docker.example_dags.example_docker.DAG": {
  "data": {
   "shadows": "airflow.DAG"
  },
  "type": "import"
 },
 "airflow.providers.docker.example_dags.example_docker.DockerOperator": {
  "data": {
   "shadows": "airflow.providers.docker.operators.docker.DockerOperator"
  },
  "type": "import"
 },
 "airflow.providers.docker.example_dags.example_docker.dag": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "airflow.providers.docker.example_dags.example_docker.days_ago": {
  "data": {
   "shadows": "airflow.utils.dates.days_ago"
  },
  "type": "import"
 },
 "airflow.providers.docker.example_dags.example_docker.default_args": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "airflow.providers.docker.example_dags.example_docker.t1": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "airflow.providers.docker.example_dags.example_docker.t2": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "airflow.providers.docker.example_dags.example_docker.t3": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "airflow.providers.docker.example_dags.example_docker.t4": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "airflow.providers.docker.example_dags.example_docker.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "airflow.providers.docker.example_dags.example_docker_copy_data": {
  "data": {
   "symbols_in_volume": [
    "airflow.DAG",
    "airflow.operators.bash.BashOperator",
    "airflow.operators.python.ShortCircuitOperator",
    "airflow.providers.docker.example_dags.example_docker_copy_data.dag",
    "airflow.providers.docker.example_dags.example_docker_copy_data.default_args",
    "airflow.providers.docker.example_dags.example_docker_copy_data.is_data_available",
    "airflow.providers.docker.example_dags.example_docker_copy_data.locate_file_cmd",
    "airflow.providers.docker.example_dags.example_docker_copy_data.print_templated_cmd",
    "airflow.providers.docker.example_dags.example_docker_copy_data.t_is_data_available",
    "airflow.providers.docker.example_dags.example_docker_copy_data.t_move",
    "airflow.providers.docker.example_dags.example_docker_copy_data.t_print",
    "airflow.providers.docker.example_dags.example_docker_copy_data.t_view",
    "airflow.providers.docker.operators.docker.DockerOperator",
    "airflow.utils.dates.days_ago",
    "datetime.timedelta"
   ]
  },
  "type": "module"
 },
 "airflow.providers.docker.example_dags.example_docker_copy_data.BashOperator": {
  "data": {
   "shadows": "airflow.operators.bash.BashOperator"
  },
  "type": "import"
 },
 "airflow.providers.docker.example_dags.example_docker_copy_data.DAG": {
  "data": {
   "shadows": "airflow.DAG"
  },
  "type": "import"
 },
 "airflow.providers.docker.example_dags.example_docker_copy_data.DockerOperator": {
  "data": {
   "shadows": "airflow.providers.docker.operators.docker.DockerOperator"
  },
  "type": "import"
 },
 "airflow.providers.docker.example_dags.example_docker_copy_data.ShortCircuitOperator": {
  "data": {
   "shadows": "airflow.operators.python.ShortCircuitOperator"
  },
  "type": "import"
 },
 "airflow.providers.docker.example_dags.example_docker_copy_data.dag": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "airflow.providers.docker.example_dags.example_docker_copy_data.days_ago": {
  "data": {
   "shadows": "airflow.utils.dates.days_ago"
  },
  "type": "import"
 },
 "airflow.providers.docker.example_dags.example_docker_copy_data.default_args": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "airflow.providers.docker.example_dags.example_docker_copy_data.is_data_available": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "airflow.providers.docker.example_dags.example_docker_copy_data.locate_file_cmd": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "airflow.providers.docker.example_dags.example_docker_copy_data.print_templated_cmd": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "airflow.providers.docker.example_dags.example_docker_copy_data.t_is_data_available": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "airflow.providers.docker.example_dags.example_docker_copy_data.t_move": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "airflow.providers.docker.example_dags.example_docker_copy_data.t_print": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "airflow.providers.docker.example_dags.example_docker_copy_data.t_view": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "airflow.providers.docker.example_dags.example_docker_copy_data.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "airflow.providers.docker.example_dags.example_docker_swarm": {
  "data": {
   "symbols_in_volume": [
    "airflow.DAG",
    "airflow.providers.docker.example_dags.example_docker_swarm.dag",
    "airflow.providers.docker.example_dags.example_docker_swarm.default_args",
    "airflow.providers.docker.operators.docker_swarm.DockerSwarmOperator",
    "airflow.utils.dates.days_ago",
    "datetime.timedelta"
   ]
  },
  "type": "module"
 },
 "airflow.providers.docker.example_dags.example_docker_swarm.DAG": {
  "data": {
   "shadows": "airflow.DAG"
  },
  "type": "import"
 },
 "airflow.providers.docker.example_dags.example_docker_swarm.DockerSwarmOperator": {
  "data": {
   "shadows": "airflow.providers.docker.operators.docker_swarm.DockerSwarmOperator"
  },
  "type": "import"
 },
 "airflow.providers.docker.example_dags.example_docker_swarm.dag": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "airflow.providers.docker.example_dags.example_docker_swarm.days_ago": {
  "data": {
   "shadows": "airflow.utils.dates.days_ago"
  },
  "type": "import"
 },
 "airflow.providers.docker.example_dags.example_docker_swarm.default_args": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "airflow.providers.docker.example_dags.example_docker_swarm.t1": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "airflow.providers.docker.example_dags.example_docker_swarm.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "airflow.providers.docker.get_provider_info": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.docker.get_provider_info.get_provider_info": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "airflow.providers.docker.hooks": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.docker.hooks.docker": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.docker.hooks.docker.APIClient": {
  "data": {
   "shadows": "docker.APIClient"
  },
  "type": "import"
 },
 "airflow.providers.docker.hooks.docker.APIError": {
  "data": {
   "shadows": "docker.errors.APIError"
  },
  "type": "import"
 },
 "airflow.providers.docker.hooks.docker.AirflowException": {
  "data": {
   "shadows": "airflow.exceptions.AirflowException"
  },
  "type": "import"
 },
 "airflow.providers.docker.hooks.docker.BaseHook": {
  "data": {
   "shadows": "airflow.hooks.base.BaseHook"
  },
  "type": "import"
 },
 "airflow.providers.docker.hooks.docker.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "airflow.providers.docker.hooks.docker.DockerHook": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "airflow.hooks.base.BaseHook",
    "airflow.utils.log.logging_mixin.LoggingMixin"
   ]
  },
  "type": "class"
 },
 "airflow.providers.docker.hooks.docker.DockerHook.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "airflow.exceptions.AirflowException",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "airflow.providers.docker.hooks.docker.DockerHook.__login": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "airflow.exceptions.AirflowException",
    "docker.errors.APIError",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "airflow.providers.docker.hooks.docker.DockerHook.get_conn": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "docker.APIClient"
   ]
  },
  "type": "function"
 },
 "airflow.providers.docker.hooks.docker.DockerHook.get_ui_field_behaviour": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "staticmethod",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "airflow.providers.docker.hooks.docker.LoggingMixin": {
  "data": {
   "shadows": "airflow.utils.log.logging_mixin.LoggingMixin"
  },
  "type": "import"
 },
 "airflow.providers.docker.hooks.docker.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "airflow.providers.docker.operators": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.docker.operators.docker": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.docker.operators.docker.APIClient": {
  "data": {
   "shadows": "docker.APIClient"
  },
  "type": "import"
 },
 "airflow.providers.docker.operators.docker.AirflowException": {
  "data": {
   "shadows": "airflow.exceptions.AirflowException"
  },
  "type": "import"
 },
 "airflow.providers.docker.operators.docker.BaseOperator": {
  "data": {
   "shadows": "airflow.models.BaseOperator"
  },
  "type": "import"
 },
 "airflow.providers.docker.operators.docker.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "airflow.providers.docker.operators.docker.DockerHook": {
  "data": {
   "shadows": "airflow.providers.docker.hooks.docker.DockerHook"
  },
  "type": "import"
 },
 "airflow.providers.docker.operators.docker.DockerOperator": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "airflow.models.BaseOperator"
   ]
  },
  "type": "class"
 },
 "airflow.providers.docker.operators.docker.DockerOperator.__get_tls_config": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "docker.tls.TLSConfig",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "airflow.providers.docker.operators.docker.DockerOperator.__init__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "airflow.exceptions.AirflowException",
    "airflow.utils.decorators.apply_defaults",
    "bool",
    "float",
    "int",
    "str",
    "super",
    "typing.Dict",
    "typing.Iterable",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "airflow.providers.docker.operators.docker.DockerOperator._get_cli": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "docker.APIClient"
   ]
  },
  "type": "function"
 },
 "airflow.providers.docker.operators.docker.DockerOperator._run_image": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "Exception",
    "airflow.exceptions.AirflowException",
    "hasattr",
    "int",
    "repr",
    "round",
    "str",
    "tempfile.TemporaryDirectory",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "airflow.providers.docker.operators.docker.DockerOperator.execute": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "isinstance",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "airflow.providers.docker.operators.docker.DockerOperator.get_command": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "airflow.providers.docker.operators.docker.ast",
    "isinstance",
    "str",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "airflow.providers.docker.operators.docker.DockerOperator.get_hook": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "airflow.providers.docker.hooks.docker.DockerHook"
   ]
  },
  "type": "function"
 },
 "airflow.providers.docker.operators.docker.DockerOperator.on_kill": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "airflow.providers.docker.operators.docker.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "airflow.providers.docker.operators.docker.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "airflow.providers.docker.operators.docker.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "airflow.providers.docker.operators.docker.TemporaryDirectory": {
  "data": {
   "shadows": "tempfile.TemporaryDirectory"
  },
  "type": "import"
 },
 "airflow.providers.docker.operators.docker.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "airflow.providers.docker.operators.docker.apply_defaults": {
  "data": {
   "shadows": "airflow.utils.decorators.apply_defaults"
  },
  "type": "import"
 },
 "airflow.providers.docker.operators.docker.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "airflow.providers.docker.operators.docker.tls": {
  "data": {
   "shadows": "docker.tls"
  },
  "type": "import"
 },
 "airflow.providers.docker.operators.docker_swarm": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.docker.operators.docker_swarm.AirflowException": {
  "data": {
   "shadows": "airflow.exceptions.AirflowException"
  },
  "type": "import"
 },
 "airflow.providers.docker.operators.docker_swarm.DockerOperator": {
  "data": {
   "shadows": "airflow.providers.docker.operators.docker.DockerOperator"
  },
  "type": "import"
 },
 "airflow.providers.docker.operators.docker_swarm.DockerSwarmOperator": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "airflow.providers.docker.operators.docker.DockerOperator"
   ]
  },
  "type": "class"
 },
 "airflow.providers.docker.operators.docker_swarm.DockerSwarmOperator.__init__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "airflow.utils.decorators.apply_defaults",
    "bool",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "airflow.providers.docker.operators.docker_swarm.DockerSwarmOperator._has_service_terminated": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "airflow.providers.docker.operators.docker_swarm.DockerSwarmOperator._run_service": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "Exception",
    "airflow.exceptions.AirflowException",
    "airflow.utils.strings.get_random_string",
    "docker.types.ContainerSpec",
    "docker.types.Resources",
    "docker.types.RestartPolicy",
    "docker.types.TaskTemplate",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "airflow.providers.docker.operators.docker_swarm.DockerSwarmOperator._service_status": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "Exception",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "airflow.providers.docker.operators.docker_swarm.DockerSwarmOperator._stream_logs_to_output": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "Exception",
    "StopIteration",
    "UnicodeDecodeError",
    "airflow.providers.docker.operators.docker_swarm.requests",
    "next"
   ]
  },
  "type": "function"
 },
 "airflow.providers.docker.operators.docker_swarm.DockerSwarmOperator.execute": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "airflow.providers.docker.operators.docker_swarm.DockerSwarmOperator.on_kill": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "airflow.providers.docker.operators.docker_swarm.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "airflow.providers.docker.operators.docker_swarm.apply_defaults": {
  "data": {
   "shadows": "airflow.utils.decorators.apply_defaults"
  },
  "type": "import"
 },
 "airflow.providers.docker.operators.docker_swarm.get_random_string": {
  "data": {
   "shadows": "airflow.utils.strings.get_random_string"
  },
  "type": "import"
 },
 "airflow.providers.docker.operators.docker_swarm.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "airflow.providers.docker.operators.docker_swarm.types": {
  "data": {
   "shadows": "docker.types"
  },
  "type": "import"
 }
}