{
 "*": {
  "data": {
   "imports": [
    "skbeam.diffraction"
   ]
  },
  "type": "star-import"
 },
 "skbeam": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "get_versions",
    "logging.NullHandler",
    "skbeam.logger",
    "skbeam.logging"
   ]
  },
  "type": "module"
 },
 "skbeam.NullHandler": {
  "data": {
   "shadows": "logging.NullHandler"
  },
  "type": "import"
 },
 "skbeam.__version__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "skbeam._version": {
  "data": {},
  "type": "module"
 },
 "skbeam._version.get_versions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "skbeam._version.json",
    "skbeam._version.version_json"
   ]
  },
  "type": "function"
 },
 "skbeam._version.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "skbeam._version.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "skbeam._version.version_json": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "skbeam.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core": {
  "data": {},
  "type": "module"
 },
 "skbeam.core.accumulators": {
  "data": {},
  "type": "module"
 },
 "skbeam.core.accumulators.binned_statistic": {
  "data": {},
  "type": "module"
 },
 "skbeam.core.accumulators.binned_statistic.BinnedStatistic1D": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "skbeam.core.accumulators.binned_statistic.BinnedStatisticDD"
   ]
  },
  "type": "class"
 },
 "skbeam.core.accumulators.binned_statistic.BinnedStatistic1D.__init__": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "len",
    "numpy.asarray",
    "range",
    "skbeam.core.accumulators.binned_statistic.BinnedStatistic1D",
    "super"
   ]
  },
  "type": "function"
 },
 "skbeam.core.accumulators.binned_statistic.BinnedStatistic2D": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "skbeam.core.accumulators.binned_statistic.BinnedStatisticDD"
   ]
  },
  "type": "class"
 },
 "skbeam.core.accumulators.binned_statistic.BinnedStatistic2D.__call__": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "skbeam.core.accumulators.binned_statistic.BinnedStatistic2D",
    "super"
   ]
  },
  "type": "function"
 },
 "skbeam.core.accumulators.binned_statistic.BinnedStatistic2D.__init__": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "len",
    "numpy.asarray",
    "range",
    "skbeam.core.accumulators.binned_statistic.BinnedStatistic2D",
    "super"
   ]
  },
  "type": "function"
 },
 "skbeam.core.accumulators.binned_statistic.BinnedStatisticDD": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "skbeam.core.accumulators.binned_statistic.BinnedStatisticDD.__call__": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "RuntimeError",
    "RuntimeWarning",
    "callable",
    "float",
    "len",
    "numpy.arange",
    "numpy.bincount",
    "numpy.copy",
    "numpy.empty",
    "numpy.median",
    "numpy.nan",
    "numpy.seterr",
    "numpy.sort",
    "numpy.sqrt",
    "numpy.unique",
    "skbeam.core.accumulators.binned_statistic.warnings",
    "slice"
   ]
  },
  "type": "function"
 },
 "skbeam.core.accumulators.binned_statistic.BinnedStatisticDD.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "ValueError",
    "bin_edges_to_centers",
    "callable",
    "float",
    "int",
    "len",
    "numpy.arange",
    "numpy.around",
    "numpy.array",
    "numpy.asarray",
    "numpy.atleast_1d",
    "numpy.atleast_2d",
    "numpy.bincount",
    "numpy.diff",
    "numpy.digitize",
    "numpy.empty",
    "numpy.fabs",
    "numpy.isscalar",
    "numpy.linspace",
    "numpy.log10",
    "numpy.where",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "skbeam.core.accumulators.binned_statistic.BinnedStatisticDD.bin_centers": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skbeam.core.accumulators.binned_statistic.BinnedStatisticDD.bin_edges": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skbeam.core.accumulators.binned_statistic.RPhiBinnedStatistic": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "skbeam.core.accumulators.binned_statistic.BinnedStatistic2D"
   ]
  },
  "type": "class"
 },
 "skbeam.core.accumulators.binned_statistic.RPhiBinnedStatistic.__call__": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "ValueError",
    "skbeam.core.accumulators.binned_statistic.RPhiBinnedStatistic",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "skbeam.core.accumulators.binned_statistic.RPhiBinnedStatistic.__init__": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "ValueError",
    "angle_grid",
    "radial_grid",
    "range",
    "skbeam.core.accumulators.binned_statistic.RPhiBinnedStatistic",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "skbeam.core.accumulators.binned_statistic.RadialBinnedStatistic": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "skbeam.core.accumulators.binned_statistic.BinnedStatistic1D"
   ]
  },
  "type": "class"
 },
 "skbeam.core.accumulators.binned_statistic.RadialBinnedStatistic.__call__": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "ValueError",
    "skbeam.core.accumulators.binned_statistic.RadialBinnedStatistic",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "skbeam.core.accumulators.binned_statistic.RadialBinnedStatistic.__init__": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "ValueError",
    "radial_grid",
    "range",
    "skbeam.core.accumulators.binned_statistic.RadialBinnedStatistic",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "skbeam.core.accumulators.binned_statistic.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.accumulators.binned_statistic.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.accumulators.binned_statistic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.accumulators.binned_statistic.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.accumulators.binned_statistic.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "skbeam.core.accumulators.tests": {
  "data": {},
  "type": "module"
 },
 "skbeam.core.accumulators.tests.test_binned_statistic": {
  "data": {
   "symbols_in_volume": [
    "len",
    "numpy.mean",
    "numpy.median",
    "numpy.std",
    "numpy.sum"
   ]
  },
  "type": "module"
 },
 "skbeam.core.accumulators.tests.test_binned_statistic.BinnedStatistic1D": {
  "data": {
   "shadows": "skbeam.core.accumulators.binned_statistic.BinnedStatistic1D"
  },
  "type": "import"
 },
 "skbeam.core.accumulators.tests.test_binned_statistic.RPhiBinnedStatistic": {
  "data": {
   "shadows": "skbeam.core.accumulators.binned_statistic.RPhiBinnedStatistic"
  },
  "type": "import"
 },
 "skbeam.core.accumulators.tests.test_binned_statistic.RadialBinnedStatistic": {
  "data": {
   "shadows": "skbeam.core.accumulators.binned_statistic.RadialBinnedStatistic"
  },
  "type": "import"
 },
 "skbeam.core.accumulators.tests.test_binned_statistic.TestRadialBinnedStatistic": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "skbeam.core.accumulators.tests.test_binned_statistic.TestRadialBinnedStatistic.setup": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.arctan2",
    "numpy.meshgrid",
    "numpy.sinc",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "skbeam.core.accumulators.tests.test_binned_statistic.TestRadialBinnedStatistic.testRadialBinnedStatistic": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "bin_edges_to_centers",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.ones_like",
    "numpy.pi",
    "numpy.random.randint",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "radbinstat",
    "radbinstat.bin_centers",
    "radbinstat.bin_edges",
    "radbinstat_f",
    "radbinstat_f.bin_centers",
    "radbinstat_f.bin_edges",
    "rphibinstat",
    "rphibinstat.bin_edges",
    "rphibinstat_f",
    "rphibinstat_f.bin_edges",
    "skbeam.core.accumulators.binned_statistic.RPhiBinnedStatistic",
    "skbeam.core.accumulators.binned_statistic.RadialBinnedStatistic",
    "skbeam.core.accumulators.tests.test_binned_statistic.stats_list"
   ]
  },
  "type": "function"
 },
 "skbeam.core.accumulators.tests.test_binned_statistic.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "skbeam.core.accumulators.tests.test_binned_statistic.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "skbeam.core.accumulators.tests.test_binned_statistic.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "skbeam.core.accumulators.tests.test_binned_statistic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.accumulators.tests.test_binned_statistic.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "skbeam.core.accumulators.tests.test_binned_statistic.stats_list": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "skbeam.core.accumulators.tests.test_binned_statistic.test_BinnedStatistics1D": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "bs",
    "bs.bin_edges",
    "bs_f",
    "bs_f.bin_edges",
    "numpy.linspace",
    "numpy.pi",
    "numpy.sin",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "skbeam.core.accumulators.binned_statistic.BinnedStatistic1D",
    "skbeam.core.accumulators.tests.test_binned_statistic.stats_list"
   ]
  },
  "type": "function"
 },
 "skbeam.core.accumulators.tests.test_histogram": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "int",
    "len",
    "numpy.average",
    "numpy.histogram2d",
    "numpy.linspace",
    "numpy.random.random",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "print",
    "skbeam.core.accumulators.histogram.Histogram",
    "skbeam.core.accumulators.tests.test_histogram.edges",
    "skbeam.core.accumulators.tests.test_histogram.h",
    "skbeam.core.accumulators.tests.test_histogram.itertools",
    "skbeam.core.accumulators.tests.test_histogram.numpy_time",
    "skbeam.core.accumulators.tests.test_histogram.skbeam_time",
    "skbeam.core.accumulators.tests.test_histogram.t0",
    "skbeam.core.accumulators.tests.test_histogram.times",
    "skbeam.core.accumulators.tests.test_histogram.wf",
    "skbeam.core.accumulators.tests.test_histogram.wi",
    "skbeam.core.accumulators.tests.test_histogram.x",
    "skbeam.core.accumulators.tests.test_histogram.xf",
    "skbeam.core.accumulators.tests.test_histogram.xi",
    "skbeam.core.accumulators.tests.test_histogram.y",
    "skbeam.core.accumulators.tests.test_histogram.yf",
    "skbeam.core.accumulators.tests.test_histogram.yi",
    "skbeam.core.accumulators.tests.test_histogram.ynp",
    "time.time"
   ]
  },
  "type": "module"
 },
 "skbeam.core.accumulators.tests.test_histogram.Histogram": {
  "data": {
   "shadows": "skbeam.core.accumulators.histogram.Histogram"
  },
  "type": "import"
 },
 "skbeam.core.accumulators.tests.test_histogram._1d_histogram_tester": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.histogram",
    "numpy.isscalar",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.accumulators.histogram.Histogram"
   ]
  },
  "type": "function"
 },
 "skbeam.core.accumulators.tests.test_histogram._2d_histogram_tester": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.histogram2d",
    "numpy.isscalar",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.accumulators.histogram.Histogram"
   ]
  },
  "type": "function"
 },
 "skbeam.core.accumulators.tests.test_histogram.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "skbeam.core.accumulators.tests.test_histogram.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "skbeam.core.accumulators.tests.test_histogram.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "skbeam.core.accumulators.tests.test_histogram.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.accumulators.tests.test_histogram.edges": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "skbeam.core.accumulators.tests.test_histogram.h": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "skbeam.core.accumulators.tests.test_histogram.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "skbeam.core.accumulators.tests.test_histogram.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.accumulators.tests.test_histogram.numpy_time": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "skbeam.core.accumulators.tests.test_histogram.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "skbeam.core.accumulators.tests.test_histogram.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "skbeam.core.accumulators.tests.test_histogram.skbeam_time": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "skbeam.core.accumulators.tests.test_histogram.t0": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "skbeam.core.accumulators.tests.test_histogram.test_1d_histogram": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.linspace",
    "numpy.random.random",
    "skbeam.core.accumulators.tests.test_histogram._1d_histogram_tester",
    "skbeam.core.accumulators.tests.test_histogram.random"
   ]
  },
  "type": "function"
 },
 "skbeam.core.accumulators.tests.test_histogram.test_2d_histogram": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.linspace",
    "numpy.random.random",
    "skbeam.core.accumulators.tests.test_histogram._2d_histogram_tester",
    "skbeam.core.accumulators.tests.test_histogram.random"
   ]
  },
  "type": "function"
 },
 "skbeam.core.accumulators.tests.test_histogram.test_simple_fail": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "numpy.arange",
    "numpy.asarray",
    "numpy.histogram",
    "numpy.testing.assert_array_equal",
    "skbeam.core.accumulators.histogram.Histogram"
   ]
  },
  "type": "function"
 },
 "skbeam.core.accumulators.tests.test_histogram.test_simple_pass": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.asarray",
    "numpy.histogram",
    "numpy.testing.assert_array_equal",
    "skbeam.core.accumulators.histogram.Histogram"
   ]
  },
  "type": "function"
 },
 "skbeam.core.accumulators.tests.test_histogram.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "skbeam.core.accumulators.tests.test_histogram.times": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "skbeam.core.accumulators.tests.test_histogram.wf": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "skbeam.core.accumulators.tests.test_histogram.wi": {
  "data": {
   "lineno": 138
  },
  "type": "constant"
 },
 "skbeam.core.accumulators.tests.test_histogram.x": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "skbeam.core.accumulators.tests.test_histogram.xf": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "skbeam.core.accumulators.tests.test_histogram.xi": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "skbeam.core.accumulators.tests.test_histogram.y": {
  "data": {
   "lineno": 132
  },
  "type": "constant"
 },
 "skbeam.core.accumulators.tests.test_histogram.yf": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "skbeam.core.accumulators.tests.test_histogram.yi": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "skbeam.core.accumulators.tests.test_histogram.ynp": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "skbeam.core.arithmetic": {
  "data": {},
  "type": "module"
 },
 "skbeam.core.arithmetic.__all__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "skbeam.core.arithmetic.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.arithmetic.add": {
  "data": {
   "shadows": "numpy.add"
  },
  "type": "import"
 },
 "skbeam.core.arithmetic.divide": {
  "data": {
   "shadows": "numpy.divide"
  },
  "type": "import"
 },
 "skbeam.core.arithmetic.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.arithmetic.logical_and": {
  "data": {
   "shadows": "numpy.logical_and"
  },
  "type": "import"
 },
 "skbeam.core.arithmetic.logical_nand": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.logical_and",
    "numpy.logical_not"
   ]
  },
  "type": "function"
 },
 "skbeam.core.arithmetic.logical_nor": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.logical_not",
    "numpy.logical_or"
   ]
  },
  "type": "function"
 },
 "skbeam.core.arithmetic.logical_not": {
  "data": {
   "shadows": "numpy.logical_not"
  },
  "type": "import"
 },
 "skbeam.core.arithmetic.logical_or": {
  "data": {
   "shadows": "numpy.logical_or"
  },
  "type": "import"
 },
 "skbeam.core.arithmetic.logical_sub": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.logical_and",
    "numpy.logical_not"
   ]
  },
  "type": "function"
 },
 "skbeam.core.arithmetic.logical_xor": {
  "data": {
   "shadows": "numpy.logical_xor"
  },
  "type": "import"
 },
 "skbeam.core.arithmetic.multiply": {
  "data": {
   "shadows": "numpy.multiply"
  },
  "type": "import"
 },
 "skbeam.core.arithmetic.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.arithmetic.subtract": {
  "data": {
   "shadows": "numpy.subtract"
  },
  "type": "import"
 },
 "skbeam.core.calibration": {
  "data": {
   "symbols_in_volume": [
    "list",
    "repr",
    "skbeam.core.calibration.estimate_d_blind",
    "sorted",
    "string.Template"
   ]
  },
  "type": "module"
 },
 "skbeam.core.calibration.Template": {
  "data": {
   "shadows": "string.Template"
  },
  "type": "import"
 },
 "skbeam.core.calibration.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.calibration.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "skbeam.core.calibration.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.calibration.estimate_d_blind": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "filter_peak_height",
    "len",
    "numpy.max",
    "numpy.mean",
    "numpy.min",
    "numpy.std",
    "numpy.tan",
    "peak_refinement",
    "slice"
   ]
  },
  "type": "function"
 },
 "skbeam.core.calibration.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.calibration.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.calibration.refine_center": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "angle_grid",
    "bin_1D",
    "bin_edges_to_centers",
    "collections.deque",
    "filter_peak_height",
    "int",
    "len",
    "list",
    "numpy.array",
    "numpy.cos",
    "numpy.diff",
    "numpy.linspace",
    "numpy.max",
    "numpy.mean",
    "numpy.min",
    "numpy.pi",
    "numpy.sin",
    "numpy.sum",
    "numpy.vstack",
    "pairwise",
    "radial_grid",
    "tuple"
   ]
  },
  "type": "function"
 },
 "skbeam.core.calibration.scipy.signal": {
  "data": {
   "shadows": "scipy.signal"
  },
  "type": "import"
 },
 "skbeam.core.cdi": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.core.cdi.logging"
   ]
  },
  "type": "module"
 },
 "skbeam.core.cdi._dist": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.arange",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "skbeam.core.cdi.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.cdi.cal_diff_error": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.fft.fftn",
    "numpy.linalg.norm",
    "numpy.size",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "skbeam.core.cdi.cdi_recon": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ValueError",
    "cb_function",
    "complex",
    "numpy.abs",
    "numpy.array",
    "numpy.fft.fftshift",
    "numpy.linalg.norm",
    "numpy.mod",
    "numpy.sum",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "skbeam.core.cdi.cal_diff_error",
    "skbeam.core.cdi.find_support",
    "skbeam.core.cdi.logger",
    "skbeam.core.cdi.pi_modulus",
    "skbeam.core.cdi.time"
   ]
  },
  "type": "function"
 },
 "skbeam.core.cdi.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.cdi.find_support": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.max",
    "scipy.ndimage.filters.gaussian_filter"
   ]
  },
  "type": "function"
 },
 "skbeam.core.cdi.gauss": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.sum",
    "skbeam.core.cdi._dist"
   ]
  },
  "type": "function"
 },
 "skbeam.core.cdi.gaussian_filter": {
  "data": {
   "shadows": "scipy.ndimage.filters.gaussian_filter"
  },
  "type": "import"
 },
 "skbeam.core.cdi.generate_box_support": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "numpy.zeros",
    "slice"
   ]
  },
  "type": "function"
 },
 "skbeam.core.cdi.generate_disk_support": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "numpy.zeros",
    "skbeam.core.cdi._dist"
   ]
  },
  "type": "function"
 },
 "skbeam.core.cdi.generate_random_phase_field": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.fft.ifftn",
    "numpy.pi",
    "numpy.random.uniform",
    "numpy.size",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "skbeam.core.cdi.logger": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "skbeam.core.cdi.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.core.cdi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.cdi.pi_modulus": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.fft.fftn",
    "numpy.fft.ifftn",
    "numpy.size",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "skbeam.core.cdi.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.cdi.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "skbeam.core.constants": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.core.constants.logging"
   ]
  },
  "type": "module"
 },
 "skbeam.core.constants.basic": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "collections.namedtuple",
    "skbeam.core.constants.basic.element",
    "skbeam.core.constants.basic.fields",
    "skbeam.core.constants.basic.logging",
    "skbeam.core.constants.basic.os",
    "skbeam.core.constants.basic.read_atomic_constants",
    "skbeam.core.constants.basic.six",
    "zip"
   ]
  },
  "type": "module"
 },
 "skbeam.core.constants.basic.BasicElement": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "__doc__",
    "object",
    "skbeam.core.constants.basic.doc_attrs",
    "skbeam.core.constants.basic.doc_ex",
    "skbeam.core.constants.basic.doc_params",
    "skbeam.core.constants.basic.doc_title",
    "skbeam.core.constants.basic.functools"
   ]
  },
  "type": "class"
 },
 "skbeam.core.constants.basic.BasicElement.__eq__": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "skbeam.core.constants.basic.BasicElement.__getitem__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.basic.BasicElement.__init__": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "setattr",
    "skbeam.core.constants.basic.BasicElement",
    "skbeam.core.constants.basic.element",
    "skbeam.core.constants.basic.six",
    "super"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.basic.BasicElement.__lt__": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "skbeam.core.constants.basic.BasicElement.__repr__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "skbeam.core.constants.basic.six"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.basic.BasicElement.__str__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "dir",
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.basic.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.constants.basic.data_dir": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "skbeam.core.constants.basic.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.constants.basic.doc_attrs": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "skbeam.core.constants.basic.doc_ex": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "skbeam.core.constants.basic.doc_params": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "skbeam.core.constants.basic.doc_title": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "skbeam.core.constants.basic.element": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "skbeam.core.constants.basic.fields": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "skbeam.core.constants.basic.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "skbeam.core.constants.basic.logger": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "skbeam.core.constants.basic.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.core.constants.basic.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "skbeam.core.constants.basic.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "skbeam.core.constants.basic.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.constants.basic.read_atomic_constants": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "float",
    "int",
    "open",
    "skbeam.core.constants.basic.data_dir",
    "skbeam.core.constants.basic.element",
    "skbeam.core.constants.basic.os"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.basic.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "skbeam.core.constants.logger": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "skbeam.core.constants.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests": {
  "data": {},
  "type": "module"
 },
 "skbeam.core.constants.tests.test_api": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.core.constants.tests.test_api.nose"
   ]
  },
  "type": "module"
 },
 "skbeam.core.constants.tests.test_api.BasicElement": {
  "data": {
   "shadows": "skbeam.core.constants.basic.BasicElement"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_api.XrfElement": {
  "data": {
   "shadows": "skbeam.core.constants.xrf.XrfElement"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_api.calibration_standards": {
  "data": {
   "shadows": "skbeam.core.constants.xrs.calibration_standards"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_api.emission_line_search": {
  "data": {
   "shadows": "skbeam.core.constants.xrf.emission_line_search"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_api.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_basic": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.core.constants.tests.test_basic.nose"
   ]
  },
  "type": "module"
 },
 "skbeam.core.constants.tests.test_basic.BasicElement": {
  "data": {
   "shadows": "skbeam.core.constants.basic.BasicElement"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_basic.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_basic.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_basic.basic": {
  "data": {
   "shadows": "skbeam.core.constants.basic.basic"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_basic.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_basic.element": {
  "data": {
   "shadows": "skbeam.core.constants.basic.element"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_basic.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_basic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_basic.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_basic.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_basic.smoke_test_element_creation": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "TypeError",
    "getattr",
    "int",
    "isinstance",
    "nose.tools.assert_equal",
    "numpy.isnan",
    "skbeam.core.constants.basic.BasicElement",
    "skbeam.core.constants.basic.basic",
    "skbeam.core.constants.basic.element._fields",
    "skbeam.core.constants.tests.test_basic.six",
    "sorted",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.tests.test_xrf": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.core.constants.tests.test_xrf.nose"
   ]
  },
  "type": "module"
 },
 "skbeam.core.constants.tests.test_xrf.NotInstalledError": {
  "data": {
   "shadows": "skbeam.core.utils.NotInstalledError"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrf.XrayLibWrap": {
  "data": {
   "shadows": "skbeam.core.constants.xrf.XrayLibWrap"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrf.XrayLibWrap_Energy": {
  "data": {
   "shadows": "skbeam.core.constants.xrf.XrayLibWrap_Energy"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrf.XrfElement": {
  "data": {
   "shadows": "skbeam.core.constants.xrf.XrfElement"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrf.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrf.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrf.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrf.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrf.assert_not_equal": {
  "data": {
   "shadows": "nose.tools.assert_not_equal"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrf.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrf.basic": {
  "data": {
   "shadows": "skbeam.core.constants.basic.basic"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrf.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrf.emission_line_search": {
  "data": {
   "shadows": "skbeam.core.constants.xrf.emission_line_search"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrf.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrf.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrf.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrf.smoke_test_element_creation": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "nose.tools.assert_equal",
    "skbeam.core.constants.basic.basic",
    "skbeam.core.constants.tests.test_xrf.six",
    "skbeam.core.constants.xrf.XrfElement"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.tests.test_xrf.test_XrayLibWrap": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "len",
    "nose.tools.assert_equal",
    "nose.tools.assert_not_equal",
    "range",
    "skbeam.core.constants.xrf.XrayLibWrap",
    "skbeam.core.constants.xrf.XrayLibWrap.opts_info_type"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.tests.test_xrf.test_XrayLibWrap_Energy": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "range",
    "skbeam.core.constants.xrf.XrayLibWrap_Energy",
    "skbeam.core.constants.xrf.XrayLibWrap_Energy.opts_info_type"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.tests.test_xrf.test_XrayLibWrap_notpresent": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.testing.assert_raises",
    "skbeam.core.constants.xrf.XrayLibWrap",
    "skbeam.core.constants.xrf.XrayLibWrap_Energy",
    "skbeam.core.constants.xrf.XrfElement",
    "skbeam.core.constants.xrf.emission_line_search",
    "skbeam.core.constants.xrf.xraylib",
    "skbeam.core.utils.NotInstalledError"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.tests.test_xrf.test_cs_different_units": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "range",
    "skbeam.core.constants.xrf.XrfElement"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.tests.test_xrf.test_element_data": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "range",
    "skbeam.core.constants.xrf.XrfElement"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.tests.test_xrf.test_element_finder": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "list",
    "nose.tools.assert_equal",
    "skbeam.core.constants.tests.test_xrf.six",
    "skbeam.core.constants.xrf.emission_line_search",
    "sorted"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.tests.test_xrf.xrf": {
  "data": {
   "shadows": "skbeam.core.constants.xrf"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrs": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.core.constants.tests.test_xrs.nose"
   ]
  },
  "type": "module"
 },
 "skbeam.core.constants.tests.test_xrs.HKL": {
  "data": {
   "shadows": "skbeam.core.constants.xrs.HKL"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrs.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrs.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrs.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrs.calibration_standards": {
  "data": {
   "shadows": "skbeam.core.constants.xrs.calibration_standards"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrs.d_to_q": {
  "data": {
   "shadows": "skbeam.core.utils.d_to_q"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrs.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrs.q_to_d": {
  "data": {
   "shadows": "skbeam.core.utils.q_to_d"
  },
  "type": "import"
 },
 "skbeam.core.constants.tests.test_xrs.smoke_test_powder_standard": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "len",
    "nose.tools.assert_equal",
    "numpy.linalg.norm",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "skbeam.core.constants.xrs.calibration_standards",
    "skbeam.core.utils.d_to_q",
    "skbeam.core.utils.q_to_d",
    "str"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.tests.test_xrs.test_hkl": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "skbeam.core.constants.xrs.HKL"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrf": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "skbeam.core.constants.xrf.XraylibNotInstalledError",
    "skbeam.core.constants.xrf.bindingE",
    "skbeam.core.constants.xrf.line_dict",
    "skbeam.core.constants.xrf.line_list",
    "skbeam.core.constants.xrf.line_name",
    "skbeam.core.constants.xrf.logger",
    "skbeam.core.constants.xrf.logging",
    "skbeam.core.constants.xrf.shell_dict",
    "skbeam.core.constants.xrf.shell_list",
    "skbeam.core.constants.xrf.xraylib",
    "verbosedict",
    "zip"
   ]
  },
  "type": "module"
 },
 "skbeam.core.constants.xrf.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "skbeam.core.constants.xrf.XRAYLIB_MAP": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "skbeam.core.constants.xrf.XrayLibWrap": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "collections.Mapping"
   ]
  },
  "type": "class"
 },
 "skbeam.core.constants.xrf.XrayLibWrap.__getitem__": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "skbeam.core.constants.xrf.XrayLibWrap.__init__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "list",
    "skbeam.core.constants.xrf.XRAYLIB_MAP",
    "skbeam.core.constants.xrf.XraylibNotInstalledError",
    "skbeam.core.constants.xrf.six",
    "skbeam.core.constants.xrf.xraylib",
    "sorted"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrf.XrayLibWrap.__iter__": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrf.XrayLibWrap.__len__": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrf.XrayLibWrap.all": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "list",
    "property",
    "skbeam.core.constants.xrf.six"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrf.XrayLibWrap.info_type": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrf.XrayLibWrap_Energy": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "skbeam.core.constants.xrf.XrayLibWrap"
   ]
  },
  "type": "class"
 },
 "skbeam.core.constants.xrf.XrayLibWrap_Energy.__getitem__": {
  "data": {
   "lineno": 285
  },
  "type": "function"
 },
 "skbeam.core.constants.xrf.XrayLibWrap_Energy.__init__": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "skbeam.core.constants.xrf.XrayLibWrap_Energy",
    "skbeam.core.constants.xrf.XraylibNotInstalledError",
    "skbeam.core.constants.xrf.xraylib",
    "super"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrf.XrayLibWrap_Energy.incident_energy": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrf.XraylibNotInstalledError": {
  "data": {
   "lineno": 61
  },
  "type": "class"
 },
 "skbeam.core.constants.xrf.XraylibNotInstalledError.__init__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "skbeam.core.constants.xrf.XraylibNotInstalledError",
    "super"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrf.XrfElement": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "__doc__",
    "skbeam.core.constants.xrf.doc_params",
    "skbeam.core.constants.xrf.doc_title"
   ]
  },
  "type": "class"
 },
 "skbeam.core.constants.xrf.XrfElement.__init__": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "skbeam.core.constants.xrf.XrayLibWrap",
    "skbeam.core.constants.xrf.XraylibNotInstalledError",
    "skbeam.core.constants.xrf.XrfElement",
    "skbeam.core.constants.xrf.xraylib",
    "super"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrf.XrfElement.bind_energy": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrf.XrfElement.cs": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrf.XrfElement.cs.myfunc": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "skbeam.core.constants.xrf.XrayLibWrap_Energy"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrf.XrfElement.csb": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrf.XrfElement.csb.myfunc": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "skbeam.core.constants.xrf.XrayLibWrap_Energy"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrf.XrfElement.emission_line": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrf.XrfElement.fluor_yield": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrf.XrfElement.jump_factor": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrf.XrfElement.line_near": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "dict",
    "numpy.abs",
    "skbeam.core.constants.xrf.six"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrf.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.constants.xrf.bindingE": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "skbeam.core.constants.xrf.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.constants.xrf.doc_params": {
  "data": {
   "lineno": 303
  },
  "type": "constant"
 },
 "skbeam.core.constants.xrf.doc_title": {
  "data": {
   "lineno": 299
  },
  "type": "constant"
 },
 "skbeam.core.constants.xrf.emission_line_search": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "__name__",
    "dict",
    "range",
    "skbeam.core.constants.xrf.XraylibNotInstalledError",
    "skbeam.core.constants.xrf.XrfElement",
    "skbeam.core.constants.xrf.xraylib",
    "zip"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrf.line_dict": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "skbeam.core.constants.xrf.line_list": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "skbeam.core.constants.xrf.line_name": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "skbeam.core.constants.xrf.logger": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "skbeam.core.constants.xrf.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.core.constants.xrf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.constants.xrf.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.constants.xrf.shell_dict": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "skbeam.core.constants.xrf.shell_list": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "skbeam.core.constants.xrf.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "skbeam.core.constants.xrf.xraylib": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "skbeam.core.constants.xrs": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.deg2rad",
    "skbeam.core.constants.xrs.PowderStandard",
    "skbeam.core.constants.xrs.logging"
   ]
  },
  "type": "module"
 },
 "skbeam.core.constants.xrs.HKL": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "class"
 },
 "skbeam.core.constants.xrs.HKL.__new__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "int",
    "list",
    "skbeam.core.constants.xrs.HKL",
    "super"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrs.HKL.length": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "property"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrs.PowderStandard": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "skbeam.core.constants.xrs.PowderStandard.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "skbeam.core.constants.xrs.HKL",
    "skbeam.core.constants.xrs.Reflection"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrs.PowderStandard.__iter__": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrs.PowderStandard.__len__": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrs.PowderStandard.__str__": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "skbeam.core.constants.xrs.PowderStandard.convert_2theta": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "numpy.array",
    "q_to_twotheta"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrs.PowderStandard.from_d": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "d_to_q",
    "itertools.repeat",
    "zip"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrs.PowderStandard.from_lambda_2theta_hkl": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "itertools.repeat",
    "q_to_d",
    "twotheta_to_q",
    "zip"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrs.PowderStandard.name": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrs.PowderStandard.reflections": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skbeam.core.constants.xrs.Reflection": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "class"
 },
 "skbeam.core.constants.xrs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.constants.xrs.calibration_standards": {
  "data": {
   "lineno": 245
  },
  "type": "constant"
 },
 "skbeam.core.constants.xrs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.constants.xrs.logger": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "skbeam.core.constants.xrs.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.core.constants.xrs.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "skbeam.core.constants.xrs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.constants.xrs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.constants.xrs.repeat": {
  "data": {
   "shadows": "itertools.repeat"
  },
  "type": "import"
 },
 "skbeam.core.dpc": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "collections.namedtuple",
    "skbeam.core.dpc.dpc_fit",
    "skbeam.core.dpc.dpc_runner",
    "skbeam.core.dpc.logging"
   ]
  },
  "type": "module"
 },
 "skbeam.core.dpc._rss_factory": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "skbeam.core.dpc._rss_factory._rss": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.conj",
    "numpy.exp",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "skbeam.core.dpc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.dpc.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.dpc.dpc_fit": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "dict",
    "scipy.optimize.minimize"
   ]
  },
  "type": "function"
 },
 "skbeam.core.dpc.dpc_internal_state": {
  "data": {
   "lineno": 287
  },
  "type": "constant"
 },
 "skbeam.core.dpc.dpc_runner": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "skbeam.core.dpc.lazy_dpc",
    "skbeam.core.dpc.reconstruct_phase_from_partial_info"
   ]
  },
  "type": "function"
 },
 "skbeam.core.dpc.image_reduction": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "skbeam.core.dpc.lazy_dpc": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "initialize_state",
    "len",
    "numpy.fft.fftshift",
    "numpy.fft.ifft",
    "numpy.unravel_index",
    "skbeam.core.dpc._rss_factory",
    "skbeam.core.dpc.dpc_fit",
    "skbeam.core.dpc.image_reduction"
   ]
  },
  "type": "function"
 },
 "skbeam.core.dpc.lazy_dpc.initialize_state": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "numpy.fft.fftshift",
    "numpy.fft.ifft",
    "numpy.zeros",
    "skbeam.core.dpc.dpc_internal_state",
    "skbeam.core.dpc.image_reduction"
   ]
  },
  "type": "function"
 },
 "skbeam.core.dpc.logger": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "skbeam.core.dpc.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.core.dpc.minimize": {
  "data": {
   "shadows": "scipy.optimize.minimize"
  },
  "type": "import"
 },
 "skbeam.core.dpc.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "skbeam.core.dpc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.dpc.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.dpc.recon": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.asarray",
    "numpy.fft.fft2",
    "numpy.fft.fftshift",
    "numpy.fft.ifft2",
    "numpy.fft.ifftshift",
    "numpy.meshgrid",
    "numpy.pi",
    "numpy.where",
    "numpy.zeros",
    "slice"
   ]
  },
  "type": "function"
 },
 "skbeam.core.dpc.reconstruct_phase_from_partial_info": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "skbeam.core.dpc.recon"
   ]
  },
  "type": "function"
 },
 "skbeam.core.feature": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.core.feature.logging",
    "skbeam.core.feature.peak_refinement",
    "skbeam.core.feature.refine_log_quadratic",
    "skbeam.core.feature.refine_quadratic"
   ]
  },
  "type": "module"
 },
 "skbeam.core.feature.PeakRejection": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "skbeam.core.feature.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.feature.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "skbeam.core.feature.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.feature.filter_n_largest": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "numpy.argsort",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "skbeam.core.feature.filter_peak_height": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "collections.deque",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.max",
    "numpy.min",
    "numpy.ptp",
    "slice"
   ]
  },
  "type": "function"
 },
 "skbeam.core.feature.logger": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "skbeam.core.feature.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.core.feature.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.feature.peak_refinement": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "collections.deque",
    "dict",
    "int",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.max",
    "numpy.min",
    "refine_function",
    "six.moves.zip",
    "skbeam.core.feature.PeakRejection",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "skbeam.core.feature.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.feature.refine_log_quadratic": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "fit_quad_to_peak",
    "numpy.exp",
    "numpy.log",
    "skbeam.core.feature.PeakRejection"
   ]
  },
  "type": "function"
 },
 "skbeam.core.feature.refine_quadratic": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "fit_quad_to_peak",
    "skbeam.core.feature.PeakRejection"
   ]
  },
  "type": "function"
 },
 "skbeam.core.feature.zip": {
  "data": {
   "shadows": "six.moves.zip"
  },
  "type": "import"
 },
 "skbeam.core.fitting": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.core.fitting.logging",
    "sorted",
    "str"
   ]
  },
  "type": "module"
 },
 "skbeam.core.fitting.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.fitting.background": {
  "data": {},
  "type": "module"
 },
 "skbeam.core.fitting.background._defaults": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "skbeam.core.fitting.background.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.fitting.background.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.fitting.background.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.fitting.background.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.fitting.background.scipy.signal": {
  "data": {
   "shadows": "scipy.signal"
  },
  "type": "import"
 },
 "skbeam.core.fitting.background.snip_method": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.amax",
    "numpy.arange",
    "numpy.array",
    "numpy.clip",
    "numpy.exp",
    "numpy.float",
    "numpy.int",
    "numpy.isfinite",
    "numpy.log",
    "numpy.max",
    "numpy.min",
    "numpy.sqrt",
    "numpy.where",
    "range",
    "skbeam.core.fitting.background._defaults"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.base": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.core.fitting.base.logging"
   ]
  },
  "type": "module"
 },
 "skbeam.core.fitting.base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.fitting.base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.fitting.base.logger": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "skbeam.core.fitting.base.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.core.fitting.base.parameter_data": {
  "data": {},
  "type": "module"
 },
 "skbeam.core.fitting.base.parameter_data.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.fitting.base.parameter_data.adjust_element": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "skbeam.core.fitting.base.parameter_data.default_param": {
  "data": {
   "lineno": 236
  },
  "type": "constant"
 },
 "skbeam.core.fitting.base.parameter_data.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.fitting.base.parameter_data.e_calibration": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "skbeam.core.fitting.base.parameter_data.fit_with_tail": {
  "data": {
   "lineno": 218
  },
  "type": "constant"
 },
 "skbeam.core.fitting.base.parameter_data.free_more": {
  "data": {
   "lineno": 201
  },
  "type": "constant"
 },
 "skbeam.core.fitting.base.parameter_data.get_para": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "skbeam.core.fitting.base.parameter_data.default_param"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.base.parameter_data.linear": {
  "data": {
   "lineno": 184
  },
  "type": "constant"
 },
 "skbeam.core.fitting.base.parameter_data.para_dict": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "skbeam.core.fitting.base.parameter_data.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.fitting.base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.fitting.base.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "skbeam.core.fitting.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.fitting.funcs": {
  "data": {},
  "type": "module"
 },
 "skbeam.core.fitting.funcs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.fitting.funcs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.fitting.funcs.fit_quad_to_peak": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "Exception",
    "len",
    "numpy.linalg.lstsq",
    "numpy.mean",
    "numpy.ones",
    "numpy.polyval",
    "numpy.sum",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.funcs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.fitting.funcs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.fitting.lineshapes": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.log",
    "numpy.pi",
    "numpy.sqrt",
    "skbeam.core.fitting.lineshapes.logging"
   ]
  },
  "type": "module"
 },
 "skbeam.core.fitting.lineshapes.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.fitting.lineshapes.compton": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.deg2rad",
    "numpy.log",
    "numpy.sqrt",
    "numpy.zeros_like",
    "skbeam.core.fitting.lineshapes.gaussian",
    "skbeam.core.fitting.lineshapes.gaussian_tail",
    "skbeam.core.fitting.lineshapes.gausssian_step"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.lineshapes.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.fitting.lineshapes.elastic": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.sqrt",
    "skbeam.core.fitting.lineshapes.gaussian"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.lineshapes.gamma": {
  "data": {
   "shadows": "scipy.special.gamma"
  },
  "type": "import"
 },
 "skbeam.core.fitting.lineshapes.gamma_dist": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "scipy.stats.gamma"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.lineshapes.gammaln": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "skbeam.core.fitting.lineshapes.gaussian": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.exp",
    "skbeam.core.fitting.lineshapes.s2pi"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.lineshapes.gaussian_tail": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.exp",
    "numpy.sqrt",
    "scipy.special.gamma"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.lineshapes.gausssian_step": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.lineshapes.log2": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "skbeam.core.fitting.lineshapes.logger": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "skbeam.core.fitting.lineshapes.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.core.fitting.lineshapes.lorentzian": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.lineshapes.lorentzian2": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.lineshapes.nbinom_dist": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.power",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.lineshapes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.fitting.lineshapes.poisson_dist": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.power",
    "scipy.special.gamma"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.lineshapes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.fitting.lineshapes.pvoigt": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "skbeam.core.fitting.lineshapes.gaussian",
    "skbeam.core.fitting.lineshapes.lorentzian"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.lineshapes.s2": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "skbeam.core.fitting.lineshapes.s2pi": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "skbeam.core.fitting.lineshapes.scipy.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "skbeam.core.fitting.lineshapes.spi": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "skbeam.core.fitting.lineshapes.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "skbeam.core.fitting.lineshapes.voigt": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "scipy.special.gamma",
    "skbeam.core.fitting.lineshapes.s2",
    "skbeam.core.fitting.lineshapes.s2pi"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.lineshapes_list": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "skbeam.core.fitting.logger": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "skbeam.core.fitting.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.core.fitting.model_list": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "skbeam.core.fitting.models": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.core.fitting.models.logging"
   ]
  },
  "type": "module"
 },
 "skbeam.core.fitting.models.ComptonModel": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "__doc__",
    "lmfit.Model",
    "skbeam.core.fitting.models._gen_class_docs"
   ]
  },
  "type": "class"
 },
 "skbeam.core.fitting.models.ComptonModel.__init__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "skbeam.core.fitting.models.ComptonModel",
    "super"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.models.ElasticModel": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "__doc__",
    "lmfit.Model",
    "skbeam.core.fitting.models._gen_class_docs"
   ]
  },
  "type": "class"
 },
 "skbeam.core.fitting.models.ElasticModel.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "skbeam.core.fitting.models.ElasticModel",
    "super"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.models.Lorentzian2Model": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "__doc__",
    "lmfit.Model",
    "skbeam.core.fitting.models._gen_class_docs"
   ]
  },
  "type": "class"
 },
 "skbeam.core.fitting.models.Lorentzian2Model.__init__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "skbeam.core.fitting.models.Lorentzian2Model",
    "super"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.models.Model": {
  "data": {
   "shadows": "lmfit.Model"
  },
  "type": "import"
 },
 "skbeam.core.fitting.models._gen_class_docs": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "skbeam.core.fitting.models.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.fitting.models.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.fitting.models.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "skbeam.core.fitting.models.logger": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "skbeam.core.fitting.models.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.core.fitting.models.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.fitting.models.set_default": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "TypeError",
    "get_para",
    "skbeam.core.fitting.models.inspect"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests": {
  "data": {},
  "type": "module"
 },
 "skbeam.core.fitting.tests.test_background": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.core.fitting.tests.test_background.nose"
   ]
  },
  "type": "module"
 },
 "skbeam.core.fitting.tests.test_background.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_background.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_background.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_background.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_background.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_background.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_background.snip_method": {
  "data": {
   "shadows": "skbeam.core.fitting.snip_method"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_background.test_snip_method": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.exp",
    "numpy.testing.assert_allclose",
    "skbeam.core.fitting.snip_method"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.tests.test_lineshapes": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.core.fitting.tests.test_lineshapes.nose"
   ]
  },
  "type": "module"
 },
 "skbeam.core.fitting.tests.test_lineshapes.ComptonModel": {
  "data": {
   "shadows": "skbeam.core.fitting.ComptonModel"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_lineshapes.ElasticModel": {
  "data": {
   "shadows": "skbeam.core.fitting.ElasticModel"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_lineshapes.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_lineshapes.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_lineshapes.compton": {
  "data": {
   "shadows": "skbeam.core.fitting.compton"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_lineshapes.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_lineshapes.elastic": {
  "data": {
   "shadows": "skbeam.core.fitting.elastic"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_lineshapes.gamma_dist": {
  "data": {
   "shadows": "skbeam.core.fitting.gamma_dist"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_lineshapes.gaussian": {
  "data": {
   "shadows": "skbeam.core.fitting.gaussian"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_lineshapes.gaussian_tail": {
  "data": {
   "shadows": "skbeam.core.fitting.gaussian_tail"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_lineshapes.gausssian_step": {
  "data": {
   "shadows": "skbeam.core.fitting.gausssian_step"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_lineshapes.lorentzian": {
  "data": {
   "shadows": "skbeam.core.fitting.lorentzian"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_lineshapes.lorentzian2": {
  "data": {
   "shadows": "skbeam.core.fitting.lorentzian2"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_lineshapes.nbinom_dist": {
  "data": {
   "shadows": "skbeam.core.fitting.nbinom_dist"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_lineshapes.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_lineshapes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_lineshapes.poisson_dist": {
  "data": {
   "shadows": "skbeam.core.fitting.poisson_dist"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_lineshapes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_lineshapes.pvoigt": {
  "data": {
   "shadows": "skbeam.core.fitting.pvoigt"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_lineshapes.test_compton_model": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.fitting.ComptonModel",
    "skbeam.core.fitting.compton"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.tests.test_lineshapes.test_compton_peak": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.fitting.compton"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.tests.test_lineshapes.test_dist": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.fitting.gamma_dist",
    "skbeam.core.fitting.nbinom_dist",
    "skbeam.core.fitting.poisson_dist"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.tests.test_lineshapes.test_elastic_model": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.fitting.ElasticModel",
    "skbeam.core.fitting.elastic"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.tests.test_lineshapes.test_elastic_peak": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.fitting.elastic"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.tests.test_lineshapes.test_gauss_peak": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.fitting.gaussian"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.tests.test_lineshapes.test_gauss_step": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.fitting.gausssian_step"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.tests.test_lineshapes.test_gauss_tail": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.fitting.gaussian_tail"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.tests.test_lineshapes.test_lorentzian_peak": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.fitting.lorentzian"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.tests.test_lineshapes.test_lorentzian_squared_peak": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.fitting.lorentzian2"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.tests.test_lineshapes.test_pvoigt_peak": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.fitting.pvoigt"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.tests.test_lineshapes.test_voigt_peak": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.fitting.voigt"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.tests.test_lineshapes.voigt": {
  "data": {
   "shadows": "skbeam.core.fitting.voigt"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_xrf_fit": {
  "data": {
   "symbols_in_volume": [
    "skbeam.core.fitting.tests.test_xrf_fit.logging"
   ]
  },
  "type": "module"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.ModelSpectrum": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.ModelSpectrum"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.ParamController": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.ParamController"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_xrf_fit._STRATEGY_REGISTRY": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model._STRATEGY_REGISTRY"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_xrf_fit._set_parameter_hint": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model._set_parameter_hint"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.calculate_area": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.calculate_area"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.compute_escape_peak": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.compute_escape_peak"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.construct_linear_model": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.construct_linear_model"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.e_calibration": {
  "data": {
   "shadows": "skbeam.core.fitting.base.parameter_data.e_calibration"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.fit_pixel_multiprocess_nnls": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.fit_pixel_multiprocess_nnls"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.get_para": {
  "data": {
   "shadows": "skbeam.core.fitting.base.parameter_data.get_para"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.linear_spectrum_fitting": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.linear_spectrum_fitting"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.register_strategy": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.register_strategy"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.sum_area": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.sum_area"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.synthetic_spectrum": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.sum",
    "skbeam.core.fitting.base.parameter_data.get_para",
    "skbeam.core.fitting.xrf_model.construct_linear_model"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.test_escape_peak": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.fitting.base.parameter_data.get_para",
    "skbeam.core.fitting.tests.test_xrf_fit.synthetic_spectrum",
    "skbeam.core.fitting.xrf_model.compute_escape_peak"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.test_fit": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "abs",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.sqrt",
    "numpy.testing.assert_equal",
    "skbeam.core.fitting.base.parameter_data.get_para",
    "skbeam.core.fitting.tests.test_xrf_fit.six",
    "skbeam.core.fitting.tests.test_xrf_fit.synthetic_spectrum",
    "skbeam.core.fitting.xrf_model.ModelSpectrum",
    "skbeam.core.fitting.xrf_model.ParamController",
    "skbeam.core.fitting.xrf_model.sum_area",
    "skbeam.core.fitting.xrf_model.trim",
    "skbeam.core.fitting.xrf_model.update_parameter_dict"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.test_param_controller_fail": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_raises",
    "skbeam.core.fitting.base.parameter_data.get_para",
    "skbeam.core.fitting.xrf_model.ParamController"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.test_parameter_controller": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "dict",
    "numpy.testing.assert_equal",
    "skbeam.core.fitting.base.parameter_data.get_para",
    "skbeam.core.fitting.tests.test_xrf_fit.six",
    "skbeam.core.fitting.xrf_model.ParamController",
    "str"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.test_pixel_fit_multiprocess": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "abs",
    "len",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range",
    "skbeam.core.fitting.base.parameter_data.get_para",
    "skbeam.core.fitting.tests.test_xrf_fit.six",
    "skbeam.core.fitting.tests.test_xrf_fit.synthetic_spectrum",
    "skbeam.core.fitting.xrf_model.calculate_area",
    "skbeam.core.fitting.xrf_model.construct_linear_model",
    "skbeam.core.fitting.xrf_model.fit_pixel_multiprocess_nnls"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.test_pre_fit": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "len",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.mean",
    "numpy.sqrt",
    "numpy.sum",
    "skbeam.core.fitting.base.parameter_data.get_para",
    "skbeam.core.fitting.tests.test_xrf_fit.synthetic_spectrum",
    "skbeam.core.fitting.xrf_model.linear_spectrum_fitting"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.test_register": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_equal",
    "skbeam.core.fitting.base.parameter_data.e_calibration",
    "skbeam.core.fitting.tests.test_xrf_fit.copy",
    "skbeam.core.fitting.xrf_model._STRATEGY_REGISTRY",
    "skbeam.core.fitting.xrf_model.register_strategy"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.test_register_error": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "RuntimeError",
    "nose.tools.raises",
    "skbeam.core.fitting.base.parameter_data.e_calibration",
    "skbeam.core.fitting.tests.test_xrf_fit.copy",
    "skbeam.core.fitting.xrf_model.register_strategy"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.test_set_param": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.raises",
    "skbeam.core.fitting.base.parameter_data.get_para",
    "skbeam.core.fitting.xrf_model.ModelSpectrum",
    "skbeam.core.fitting.xrf_model._set_parameter_hint"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.test_set_param_hint": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "skbeam.core.fitting.base.parameter_data.get_para",
    "skbeam.core.fitting.xrf_model.ModelSpectrum",
    "skbeam.core.fitting.xrf_model._set_parameter_hint"
   ]
  },
  "type": "function"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.trim": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.trim"
  },
  "type": "import"
 },
 "skbeam.core.fitting.tests.test_xrf_fit.update_parameter_dict": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.update_parameter_dict"
  },
  "type": "import"
 },
 "skbeam.core.image": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.core.image.logging"
   ]
  },
  "type": "module"
 },
 "skbeam.core.image._corr_ax1": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.argmax",
    "numpy.correlate",
    "numpy.histogram",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "skbeam.core.image.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.image.construct_circ_avg_image": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.interp",
    "numpy.max",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "skbeam.core.image.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.image.find_ring_center_acorr_1D": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.argmax",
    "skbeam.core.image._corr_ax1",
    "tuple"
   ]
  },
  "type": "function"
 },
 "skbeam.core.image.logger": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "skbeam.core.image.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.core.image.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.image.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.mask": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.core.mask.logging"
   ]
  },
  "type": "module"
 },
 "skbeam.core.mask.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.mask.bad_to_nan_gen": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "enumerate",
    "numpy.empty",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "skbeam.core.mask.binned_outlier": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.digitize",
    "numpy.linspace",
    "numpy.ones",
    "numpy.std",
    "scipy.stats.binned_statistic",
    "skbeam.core.mask.threshold",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "skbeam.core.mask.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.mask.logger": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "skbeam.core.mask.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.core.mask.margin": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "bool",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "skbeam.core.mask.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.mask.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.mask.sts": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "skbeam.core.mask.threshold": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "len",
    "numpy.ones_like",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "skbeam.core.recip": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "collections.namedtuple",
    "pyFAI.geometry",
    "skbeam.core.recip.logging",
    "skbeam.core.recip.process_to_q"
   ]
  },
  "type": "module"
 },
 "skbeam.core.recip.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.recip.calibrated_pixels_to_q": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "RuntimeError",
    "pyFAI.geometry",
    "pyFAI.geometry.Geometry"
   ]
  },
  "type": "function"
 },
 "skbeam.core.recip.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.recip.geo": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "skbeam.core.recip.gisaxs": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "numpy.arctan2",
    "numpy.asarray",
    "numpy.cos",
    "numpy.indices",
    "numpy.pi",
    "numpy.sin",
    "numpy.sqrt",
    "skbeam.core.recip.gisaxs_output"
   ]
  },
  "type": "function"
 },
 "skbeam.core.recip.gisaxs_output": {
  "data": {
   "lineno": 232
  },
  "type": "constant"
 },
 "skbeam.core.recip.hkl_to_q": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "skbeam.core.recip.logger": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "skbeam.core.recip.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.core.recip.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "skbeam.core.recip.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.recip.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.recip.process_to_q": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ImportError",
    "NotImplementedError",
    "ValueError",
    "enumerate",
    "numpy.asarray",
    "numpy.atleast_2d",
    "numpy.matrix",
    "numpy.pi",
    "skbeam.core.recip.logger",
    "skbeam.core.recip.time",
    "verbosedict"
   ]
  },
  "type": "function"
 },
 "skbeam.core.recip.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "skbeam.core.roi": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.core.roi.logging"
   ]
  },
  "type": "module"
 },
 "skbeam.core.roi._make_roi": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "numpy.digitize",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "skbeam.core.roi.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.roi.bar": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.all",
    "numpy.asarray",
    "numpy.atleast_2d",
    "numpy.diff",
    "numpy.repeat",
    "numpy.tile",
    "range",
    "skbeam.core.roi._make_roi"
   ]
  },
  "type": "function"
 },
 "skbeam.core.roi.box": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.asarray",
    "numpy.atleast_2d",
    "numpy.mgrid",
    "skbeam.core.roi.rectangles"
   ]
  },
  "type": "function"
 },
 "skbeam.core.roi.circular_average": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "numpy.ravel",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "skbeam.core.roi.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "skbeam.core.roi.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.roi.extract_label_indices": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "numpy.indices",
    "numpy.ravel",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "skbeam.core.roi.kymograph": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "enumerate",
    "numpy.vstack",
    "skbeam.core.roi.roi_pixel_values"
   ]
  },
  "type": "function"
 },
 "skbeam.core.roi.line": {
  "data": {
   "shadows": "skimage.draw.line"
  },
  "type": "import"
 },
 "skbeam.core.roi.lines": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.int64",
    "numpy.max",
    "numpy.min",
    "numpy.zeros",
    "skimage.draw.line"
   ]
  },
  "type": "function"
 },
 "skbeam.core.roi.logger": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "skbeam.core.roi.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.core.roi.mean_intensity": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "enumerate",
    "len",
    "list",
    "numpy.unique",
    "numpy.zeros",
    "scipy.ndimage.measurements.mean"
   ]
  },
  "type": "function"
 },
 "skbeam.core.roi.ndim": {
  "data": {
   "shadows": "scipy.ndimage.measurements"
  },
  "type": "import"
 },
 "skbeam.core.roi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.roi.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.roi.rectangles": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "numpy.any",
    "numpy.int64",
    "numpy.max",
    "numpy.min",
    "numpy.zeros",
    "slice"
   ]
  },
  "type": "function"
 },
 "skbeam.core.roi.ring_edges": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.cumsum",
    "numpy.insert",
    "numpy.ones",
    "skbeam.core.roi.collections"
   ]
  },
  "type": "function"
 },
 "skbeam.core.roi.rings": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.all",
    "numpy.asarray",
    "numpy.atleast_2d",
    "numpy.diff",
    "skbeam.core.roi._make_roi"
   ]
  },
  "type": "function"
 },
 "skbeam.core.roi.roi_max_counts": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "max",
    "scipy.ndimage.measurements.maximum"
   ]
  },
  "type": "function"
 },
 "skbeam.core.roi.roi_pixel_values": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "skbeam.core.roi.segmented_rings": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "numpy.all",
    "numpy.asarray",
    "numpy.diff",
    "numpy.digitize",
    "numpy.int64",
    "numpy.linspace",
    "numpy.pi",
    "numpy.ravel",
    "numpy.zeros",
    "range",
    "skbeam.core.roi.collections"
   ]
  },
  "type": "function"
 },
 "skbeam.core.speckle": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.core.speckle.logging"
   ]
  },
  "type": "module"
 },
 "skbeam.core.speckle._process": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "enumerate",
    "list",
    "numpy.histogram",
    "numpy.isnan",
    "numpy.nan_to_num",
    "numpy.power",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "skbeam.core.speckle.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.speckle.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.speckle.logger": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "skbeam.core.speckle.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.core.speckle.normalize_bin_edges": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "bin_edges_to_centers",
    "numpy.arange",
    "numpy.zeros",
    "numpy.zeros_like",
    "object",
    "range"
   ]
  },
  "type": "function"
 },
 "skbeam.core.speckle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.speckle.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.speckle.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "skbeam.core.speckle.xsvs": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "enumerate",
    "geometric_series",
    "len",
    "list",
    "numpy.arange",
    "numpy.full",
    "numpy.int64",
    "numpy.object",
    "numpy.power",
    "numpy.ravel",
    "numpy.unique",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "skbeam.core.speckle._process",
    "skbeam.core.speckle.logger",
    "skbeam.core.speckle.time"
   ]
  },
  "type": "function"
 },
 "skbeam.core.spectroscopy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.core.spectroscopy.logging"
   ]
  },
  "type": "module"
 },
 "skbeam.core.spectroscopy._formatter_array_regions": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "skbeam.core.spectroscopy.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.spectroscopy.align_and_scale": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "pk_find_fun",
    "six.moves.zip"
   ]
  },
  "type": "function"
 },
 "skbeam.core.spectroscopy.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.spectroscopy.find_largest_peak": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "fit_quad_to_peak",
    "numpy.argmax",
    "numpy.asarray",
    "numpy.exp",
    "numpy.log",
    "numpy.max",
    "numpy.sqrt",
    "slice"
   ]
  },
  "type": "function"
 },
 "skbeam.core.spectroscopy.integrate_ROI": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.all",
    "numpy.any",
    "numpy.asarray",
    "numpy.atleast_1d",
    "numpy.diff",
    "numpy.sign",
    "numpy.where",
    "scipy.integrate.simps",
    "six.moves.zip",
    "skbeam.core.spectroscopy._formatter_array_regions",
    "skbeam.core.spectroscopy.logging"
   ]
  },
  "type": "function"
 },
 "skbeam.core.spectroscopy.integrate_ROI_spectrum": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.diff",
    "skbeam.core.spectroscopy.integrate_ROI"
   ]
  },
  "type": "function"
 },
 "skbeam.core.spectroscopy.logger": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "skbeam.core.spectroscopy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.core.spectroscopy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.spectroscopy.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.spectroscopy.simps": {
  "data": {
   "shadows": "scipy.integrate.simps"
  },
  "type": "import"
 },
 "skbeam.core.spectroscopy.zip": {
  "data": {
   "shadows": "six.moves.zip"
  },
  "type": "import"
 },
 "skbeam.core.stats": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.core.stats.logging"
   ]
  },
  "type": "module"
 },
 "skbeam.core.stats._defaults": {
  "data": {
   "shadows": "skbeam.core.utils._defaults"
  },
  "type": "import"
 },
 "skbeam.core.stats.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.stats.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.stats.logger": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "skbeam.core.stats.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.core.stats.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.stats.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.stats.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "skbeam.core.stats.statistics_1D": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.max",
    "numpy.min",
    "skbeam.core.utils._defaults"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests": {
  "data": {},
  "type": "module"
 },
 "skbeam.core.tests.test_arithmetic": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.core.tests.test_arithmetic.nose"
   ]
  },
  "type": "module"
 },
 "skbeam.core.tests.test_arithmetic._helper_prealloc_passthrough": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "op"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_arithmetic.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_arithmetic.arithmetic": {
  "data": {
   "shadows": "skbeam.core.arithmetic"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_arithmetic.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_arithmetic.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_arithmetic.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_arithmetic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_arithmetic.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_arithmetic.test_logical_nand": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "int",
    "numpy.logical_not",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "skbeam.core.arithmetic.logical_nand"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_arithmetic.test_logical_nor": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.logical_not",
    "numpy.logical_or",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "skbeam.core.arithmetic.logical_nor"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_arithmetic.test_logical_sub": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "int",
    "numpy.logical_and",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "skbeam.core.arithmetic.logical_sub"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_arithmetic.test_prealloc_passthrough": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.zeros",
    "op",
    "skbeam.core.arithmetic.logical_nand",
    "skbeam.core.arithmetic.logical_nor",
    "skbeam.core.arithmetic.logical_sub",
    "skbeam.core.tests.test_arithmetic._helper_prealloc_passthrough"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_calibration": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.core.tests.test_calibration.nose"
   ]
  },
  "type": "module"
 },
 "skbeam.core.tests.test_calibration._draw_gaussian_rings": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.zeros_like",
    "skbeam.core.calibration.radial_grid"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_calibration.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_calibration.calibration": {
  "data": {
   "shadows": "skbeam.core.calibration"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_calibration.core": {
  "data": {
   "shadows": "skbeam.core.calibration"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_calibration.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_calibration.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_calibration.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_calibration.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_calibration.test_blind_d": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "gauss_gen",
    "len",
    "numpy.abs",
    "numpy.linspace",
    "numpy.tan",
    "numpy.zeros_like",
    "skbeam.core.calibration.calibration_standards",
    "skbeam.core.calibration.estimate_d_blind"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_calibration.test_refine_center": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.all",
    "numpy.array",
    "skbeam.core.calibration.refine_center",
    "skbeam.core.tests.test_calibration._draw_gaussian_rings"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_cdi": {
  "data": {},
  "type": "module"
 },
 "skbeam.core.tests.test_cdi._box_support_area": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_array_equal",
    "skbeam.core.cdi.generate_box_support"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_cdi._disk_support_area": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "len",
    "skbeam.core.cdi.generate_disk_support"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_cdi._dist": {
  "data": {
   "shadows": "skbeam.core.cdi._dist"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_cdi.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_cdi.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_cdi.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_cdi.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_cdi.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_cdi.cal_diff_error": {
  "data": {
   "shadows": "skbeam.core.cdi.cal_diff_error"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_cdi.cal_support": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "skbeam.core.tests.test_cdi.cal_support.inner": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_cdi.cdi_recon": {
  "data": {
   "shadows": "skbeam.core.cdi.cdi_recon"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_cdi.dist_temp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.size",
    "numpy.sqrt",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_cdi.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_cdi.find_support": {
  "data": {
   "shadows": "skbeam.core.cdi.find_support"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_cdi.gauss": {
  "data": {
   "shadows": "skbeam.core.cdi.gauss"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_cdi.generate_box_support": {
  "data": {
   "shadows": "skbeam.core.cdi.generate_box_support"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_cdi.generate_disk_support": {
  "data": {
   "shadows": "skbeam.core.cdi.generate_disk_support"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_cdi.generate_random_phase_field": {
  "data": {
   "shadows": "skbeam.core.cdi.generate_random_phase_field"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_cdi.make_synthetic_data": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.fft.fftn",
    "numpy.size",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_cdi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_cdi.pi_modulus": {
  "data": {
   "shadows": "skbeam.core.cdi.pi_modulus"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_cdi.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_cdi.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_cdi.test_cal_diff_error": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "numpy.sum",
    "numpy.testing.assert_equal",
    "skbeam.core.cdi.cal_diff_error",
    "skbeam.core.tests.test_cdi.make_synthetic_data"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_cdi.test_cdi_plotter": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "skbeam.core.cdi.cdi_recon",
    "skbeam.core.cdi.generate_box_support",
    "skbeam.core.cdi.generate_random_phase_field",
    "skbeam.core.tests.test_cdi.make_synthetic_data"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_cdi.test_dist": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "skbeam.core.cdi._dist",
    "skbeam.core.tests.test_cdi.dist_temp"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_cdi.test_find_support": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.sum",
    "numpy.zeros",
    "numpy.zeros_like",
    "skbeam.core.cdi.find_support"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_cdi.test_gauss": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.testing.assert_almost_equal",
    "skbeam.core.cdi.gauss"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_cdi.test_pi_modulus": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.cdi.pi_modulus",
    "skbeam.core.tests.test_cdi.make_synthetic_data"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_cdi.test_recon": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.testing.assert_array_equal",
    "skbeam.core.cdi.cdi_recon",
    "skbeam.core.cdi.generate_box_support",
    "skbeam.core.cdi.generate_random_phase_field",
    "skbeam.core.tests.test_cdi.make_synthetic_data"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_cdi.test_support": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "skbeam.core.tests.test_cdi._box_support_area",
    "skbeam.core.tests.test_cdi._disk_support_area",
    "skbeam.core.tests.test_cdi.make_synthetic_data"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_correlation": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.core.tests.test_correlation.logging",
    "skbeam.core.tests.test_correlation.nose"
   ]
  },
  "type": "module"
 },
 "skbeam.core.tests.test_correlation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_correlation.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_correlation.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_correlation.auto_corr_scat_factor": {
  "data": {
   "shadows": "skbeam.core.correlation.auto_corr_scat_factor"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_correlation.bad_to_nan_gen": {
  "data": {
   "shadows": "skbeam.core.mask.bad_to_nan_gen"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_correlation.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_correlation.lazy_one_time": {
  "data": {
   "shadows": "skbeam.core.correlation.lazy_one_time"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_correlation.lazy_two_time": {
  "data": {
   "shadows": "skbeam.core.correlation.lazy_two_time"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_correlation.logger": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "skbeam.core.tests.test_correlation.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_correlation.multi_tau_auto_corr": {
  "data": {
   "shadows": "skbeam.core.correlation.multi_tau_auto_corr"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_correlation.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_correlation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_correlation.one_time_from_two_time": {
  "data": {
   "shadows": "skbeam.core.correlation.one_time_from_two_time"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_correlation.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_correlation.setup": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_correlation.test_auto_corr_scat_factor": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.correlation.auto_corr_scat_factor",
    "skbeam.core.utils.multi_tau_lags"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_correlation.test_bad_images": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.correlation.multi_tau_auto_corr",
    "skbeam.core.mask.bad_to_nan_gen",
    "skbeam.core.tests.test_correlation.setup"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_correlation.test_lazy_one_time": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.average",
    "skbeam.core.correlation.lazy_one_time",
    "skbeam.core.tests.test_correlation.setup"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_correlation.test_lazy_two_time": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.average",
    "skbeam.core.correlation.lazy_two_time",
    "skbeam.core.correlation.two_time_state_to_results",
    "skbeam.core.tests.test_correlation.setup"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_correlation.test_lazy_vs_original": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.all",
    "skbeam.core.correlation.lazy_one_time",
    "skbeam.core.correlation.lazy_two_time",
    "skbeam.core.correlation.multi_tau_auto_corr",
    "skbeam.core.correlation.two_time_corr",
    "skbeam.core.correlation.two_time_state_to_results",
    "skbeam.core.tests.test_correlation.setup"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_correlation.test_one_time_from_two_time": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.randint",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros_like",
    "skbeam.core.correlation.one_time_from_two_time",
    "skbeam.core.correlation.two_time_corr"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_correlation.test_two_time_corr": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_raises",
    "numpy.all",
    "numpy.asarray",
    "range",
    "skbeam.core.correlation.two_time_corr",
    "skbeam.core.tests.test_correlation.setup"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_correlation.two_time_corr": {
  "data": {
   "shadows": "skbeam.core.correlation.two_time_corr"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_correlation.two_time_state_to_results": {
  "data": {
   "shadows": "skbeam.core.correlation.two_time_state_to_results"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_correlation.utils": {
  "data": {
   "shadows": "skbeam.core.utils"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_dpc": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.core.tests.test_dpc.nose"
   ]
  },
  "type": "module"
 },
 "skbeam.core.tests.test_dpc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_dpc.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_dpc.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_dpc.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_dpc.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_dpc.dpc": {
  "data": {
   "shadows": "skbeam.core.dpc"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_dpc.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_dpc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_dpc.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_dpc.test_dpc_end_to_end": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "skbeam.core.dpc.dpc_runner",
    "skbeam.core.dpc.lazy_dpc",
    "skbeam.core.dpc.reconstruct_phase_from_partial_info"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_dpc.test_dpc_fit": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.exp",
    "numpy.testing.assert_array_almost_equal",
    "rss",
    "skbeam.core.dpc._rss_factory",
    "skbeam.core.dpc.dpc_fit"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_dpc.test_image_reduction": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "skbeam.core.dpc.image_reduction"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_dpc.test_image_reduction_default": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "skbeam.core.dpc.image_reduction"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_dpc.test_rss_factory": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.exp",
    "numpy.testing.assert_almost_equal",
    "rss",
    "skbeam.core.dpc._rss_factory"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_feature": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.core.tests.test_feature.nose"
   ]
  },
  "type": "module"
 },
 "skbeam.core.tests.test_feature._test_refine_helper": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "refine_method"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_feature.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_feature.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_feature.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_feature.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_feature.feature": {
  "data": {
   "shadows": "skbeam.core.feature"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_feature.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_feature.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_feature.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_feature.test_filter_n_largest": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "gauss_gen",
    "len",
    "nose.tools.assert_raises",
    "numpy.arange",
    "numpy.array",
    "numpy.min",
    "numpy.zeros_like",
    "range",
    "skbeam.core.feature.filter_n_largest",
    "zip"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_feature.test_filter_peak_height": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "gauss_gen",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.zeros_like",
    "skbeam.core.feature.filter_peak_height",
    "zip"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_feature.test_peak_refinement": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "float",
    "gauss_gen",
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros_like",
    "skbeam.core.feature.peak_refinement",
    "skbeam.core.feature.refine_log_quadratic",
    "zip"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_feature.test_refine_methods": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "dm",
    "numpy.arange",
    "skbeam.core.feature.refine_log_quadratic",
    "skbeam.core.feature.refine_quadratic",
    "skbeam.core.tests.test_feature._test_refine_helper",
    "zip"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_image": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.core.tests.test_image.nose"
   ]
  },
  "type": "module"
 },
 "skbeam.core.tests.test_image._helper_find_rings": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "float",
    "nose.tools.assert_equal",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.zeros",
    "proc_method",
    "scipy.ndimage.morphology.binary_dilation",
    "skimage.draw.circle_perimeter"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_image.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_image.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_image.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_image.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_image.binary_dilation": {
  "data": {
   "shadows": "scipy.ndimage.morphology.binary_dilation"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_image.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_image.nimage": {
  "data": {
   "shadows": "skbeam.core.image"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_image.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_image.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_image.numpy.random": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_image.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_image.roi": {
  "data": {
   "shadows": "skbeam.core.roi"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_image.skd": {
  "data": {
   "shadows": "skimage.draw"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_image.test_construct_circ_avg_image": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "skbeam.core.image.construct_circ_avg_image",
    "skbeam.core.roi.circular_average",
    "skbeam.core.roi.ring_edges",
    "skbeam.core.roi.rings"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_image.test_find_ring_center_acorr_1D": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "skbeam.core.image.find_ring_center_acorr_1D"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_mask": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.core.tests.test_mask.logging",
    "skbeam.core.tests.test_mask.nose"
   ]
  },
  "type": "module"
 },
 "skbeam.core.tests.test_mask.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_mask.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_mask.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_mask.logger": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "skbeam.core.tests.test_mask.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_mask.mask": {
  "data": {
   "shadows": "skbeam.core.mask"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_mask.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_mask.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_mask.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_mask.recip": {
  "data": {
   "shadows": "skbeam.core.recip"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_mask.test_bad_to_nan_gen": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.isnan",
    "numpy.random.randint",
    "skbeam.core.mask.bad_to_nan_gen"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_mask.test_margin": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "bool",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "skbeam.core.mask.margin"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_mask.test_ring_blur_mask": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "getattr",
    "len",
    "numpy.arange",
    "numpy.cos",
    "numpy.hypot",
    "numpy.max",
    "numpy.min",
    "numpy.nonzero",
    "numpy.random.randint",
    "numpy.random.random",
    "numpy.random.seed",
    "range",
    "set",
    "skbeam.core.mask.binned_outlier",
    "skbeam.core.recip.geo.Geometry",
    "zip"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_mask.test_threshold_mask": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.ones_like",
    "numpy.random.randint",
    "numpy.testing.assert_array_equal",
    "skbeam.core.mask.threshold"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_recip": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.core.tests.test_recip.nose"
   ]
  },
  "type": "module"
 },
 "skbeam.core.tests.test_recip._process_to_q_exception": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "KeyError",
    "nose.tools.raises",
    "skbeam.core.recip.process_to_q"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_recip.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_recip.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_recip.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_recip.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_recip.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_recip.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_recip.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_recip.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_recip.recip": {
  "data": {
   "shadows": "skbeam.core.recip"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_recip.test_frame_mode_fail": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.array",
    "skbeam.core.tests.test_recip._process_to_q_exception"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_recip.test_gisaxs": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.recip.gisaxs"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_recip.test_hkl_to_q": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.recip.hkl_to_q"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_recip.test_process_to_q": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.recip.process_to_q",
    "skbeam.core.recip.process_to_q.frame_mode"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_roi": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.core.tests.test_roi.logging"
   ]
  },
  "type": "module"
 },
 "skbeam.core.tests.test_roi._helper_check": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "int",
    "numpy.histogramdd",
    "numpy.ravel",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "range",
    "skbeam.core.utils.radial_grid"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_roi.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_roi.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_roi.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_roi.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_roi.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_roi.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_roi.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_roi.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_roi.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_roi.logger": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "skbeam.core.tests.test_roi.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_roi.morphology": {
  "data": {
   "shadows": "skimage.morphology"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_roi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_roi.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_roi.roi": {
  "data": {
   "shadows": "skbeam.core.roi"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_roi.test_bars_boxes": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.int",
    "numpy.mgrid",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "skbeam.core.roi.bar",
    "skbeam.core.roi.box"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_roi.test_circular_average": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "numpy.ones_like",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "skbeam.core.roi.circular_average",
    "skbeam.core.roi.ring_edges",
    "skbeam.core.roi.rings"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_roi.test_kymograph": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange",
    "numpy.asarray",
    "numpy.ones",
    "numpy.sum",
    "range",
    "skbeam.core.roi.kymograph",
    "skbeam.core.roi.ring_edges",
    "skbeam.core.roi.rings"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_roi.test_lines": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "skbeam.core.roi.lines"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_roi.test_rectangles": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "numpy.column_stack",
    "numpy.int64",
    "numpy.max",
    "numpy.min",
    "numpy.testing.assert_almost_equal",
    "numpy.where",
    "numpy.zeros",
    "skbeam.core.roi.extract_label_indices",
    "skbeam.core.roi.rectangles"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_roi.test_rings": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.bincount",
    "numpy.diff",
    "numpy.max",
    "numpy.unique",
    "print",
    "skbeam.core.roi.extract_label_indices",
    "skbeam.core.roi.ring_edges",
    "skbeam.core.roi.rings"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_roi.test_roi_max_counts": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "skbeam.core.roi.roi_max_counts"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_roi.test_roi_pixel_values": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_raises",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "skbeam.core.roi.ring_edges",
    "skbeam.core.roi.rings",
    "skbeam.core.roi.roi_pixel_values",
    "skimage.morphology.diamond"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_roi.test_segmented_rings": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "len",
    "nose.tools.assert_equal",
    "numpy.arange",
    "numpy.bincount",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "print",
    "skbeam.core.roi.ring_edges",
    "skbeam.core.roi.segmented_rings"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_roi.test_static_test_sets": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.asarray",
    "numpy.int64",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.tril",
    "numpy.triu",
    "range",
    "skbeam.core.roi.mean_intensity",
    "skbeam.core.roi.rectangles",
    "skbeam.core.tests.test_roi.itertools",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_roi.utils": {
  "data": {
   "shadows": "skbeam.core.utils"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_speckle": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.core.tests.test_speckle.logging"
   ]
  },
  "type": "module"
 },
 "skbeam.core.tests.test_speckle.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_speckle.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_speckle.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_speckle.logger": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "skbeam.core.tests.test_speckle.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_speckle.mask": {
  "data": {
   "shadows": "skbeam.core.mask"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_speckle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_speckle.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_speckle.roi": {
  "data": {
   "shadows": "skbeam.core.roi"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_speckle.test_normalize_bin_edges": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.speckle.normalize_bin_edges"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_speckle.test_xsvs": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "numpy.int64",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.tril",
    "range",
    "skbeam.core.mask.bad_to_nan_gen",
    "skbeam.core.roi.rectangles",
    "skbeam.core.speckle.xsvs"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_speckle.xsvs": {
  "data": {
   "shadows": "skbeam.core.speckle"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_spectroscopy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.core.tests.test_spectroscopy.nose"
   ]
  },
  "type": "module"
 },
 "skbeam.core.tests.test_spectroscopy.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_spectroscopy.align_and_scale": {
  "data": {
   "shadows": "skbeam.core.spectroscopy.align_and_scale"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_spectroscopy.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_spectroscopy.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_spectroscopy.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_spectroscopy.integrate_ROI": {
  "data": {
   "shadows": "skbeam.core.spectroscopy.integrate_ROI"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_spectroscopy.integrate_ROI_spectrum": {
  "data": {
   "shadows": "skbeam.core.spectroscopy.integrate_ROI_spectrum"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_spectroscopy.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_spectroscopy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_spectroscopy.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_spectroscopy.synthetic_data": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_spectroscopy.test_align_and_scale_smoketest": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.pi",
    "range",
    "skbeam.core.spectroscopy.align_and_scale",
    "skbeam.core.tests.test_spectroscopy.synthetic_data"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_spectroscopy.test_integrate_ROI_compute": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ones_like",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.spectroscopy.integrate_ROI"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_spectroscopy.test_integrate_ROI_errors": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_raises",
    "numpy.arange",
    "numpy.ones_like",
    "skbeam.core.spectroscopy.integrate_ROI"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_spectroscopy.test_integrate_ROI_reverse_input": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.spectroscopy.integrate_ROI"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_spectroscopy.test_integrate_ROI_spectrum_compute": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.spectroscopy.integrate_ROI_spectrum"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_stats": {
  "data": {},
  "type": "module"
 },
 "skbeam.core.tests.test_stats.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_stats.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_stats.statistics_1D": {
  "data": {
   "shadows": "skbeam.core.stats.statistics_1D"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_stats.test_statistics_1D": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.linspace",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.stats.statistics_1D"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_utils": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "skbeam.core.tests.test_utils.logging",
    "skbeam.core.tests.test_utils.nose"
   ]
  },
  "type": "module"
 },
 "skbeam.core.tests.test_utils.Geometry": {
  "data": {
   "shadows": "pyFAI.geometry.Geometry"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_utils._bin_edges_exceptions": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.raises",
    "skbeam.core.utils.bin_edges"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_utils._bin_edges_helper": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "len",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.diff",
    "numpy.ptp",
    "numpy.testing.assert_almost_equal",
    "skbeam.core.utils.bin_edges"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_utils._fail_img_to_relative_xyi_helper": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.raises",
    "skbeam.core.utils.img_to_relative_xyi"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_utils.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_utils.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_utils.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_utils.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_utils.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_utils.core": {
  "data": {
   "shadows": "skbeam.core.utils"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_utils.img_to_relative_xyi": {
  "data": {
   "shadows": "skbeam.core.utils.img_to_relative_xyi"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_utils.known_fail_if": {
  "data": {
   "shadows": "skbeam.testing.decorators.known_fail_if"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_utils.logger": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "skbeam.core.tests.test_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_utils.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_utils.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_utils.pf": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "skbeam.core.tests.test_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_utils.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_utils.run_image_to_relative_xyi_repeatedly": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "print",
    "skbeam.core.tests.test_utils.logger",
    "skbeam.core.tests.test_utils.logging",
    "skbeam.core.tests.test_utils.test_img_to_relative_xyi"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_utils.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "skbeam.core.tests.test_utils.test_angle_grid": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.pi",
    "numpy.testing.assert_almost_equal",
    "skbeam.core.utils.angle_grid"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_utils.test_bin_1D": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.linspace",
    "numpy.ones",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "skbeam.core.utils.bin_1D"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_utils.test_bin_1D_2": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.linspace",
    "numpy.ones",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "skbeam.core.utils._defaults",
    "skbeam.core.utils.bin_1D"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_utils.test_bin_1D_limits": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.linspace",
    "numpy.ones",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "skbeam.core.utils.bin_1D"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_utils.test_bin_edge2center": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "len",
    "nose.tools.assert_equal",
    "numpy.arange",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.utils.bin_edges_to_centers"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_utils.test_bin_edges": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "dict",
    "numpy.pi",
    "skbeam.core.tests.test_utils._bin_edges_exceptions",
    "skbeam.core.tests.test_utils._bin_edges_helper"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_utils.test_bin_grid": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "pyFAI.geometry.Geometry",
    "skbeam.core.tests.test_utils.pf",
    "skbeam.core.utils.bin_grid",
    "skbeam.testing.decorators.known_fail_if"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_utils.test_d_q_conversion": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.linspace",
    "numpy.pi",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.utils.d_to_q",
    "skbeam.core.utils.q_to_d"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_utils.test_geometric_series": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "skbeam.core.utils.geometric_series"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_utils.test_grid3d": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.mgrid",
    "numpy.ones_like",
    "numpy.ravel",
    "numpy.testing.assert_array_equal",
    "skbeam.core.utils.grid3d",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_utils.test_img_to_relative_fails": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "numpy.ones",
    "skbeam.core.tests.test_utils._fail_img_to_relative_xyi_helper"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_utils.test_img_to_relative_xyi": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "AssertionError",
    "int",
    "nose.tools.assert_equal",
    "numpy.arange",
    "numpy.int64",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.testing.assert_almost_equal",
    "skbeam.core.tests.test_utils.logger",
    "skbeam.core.tests.test_utils.six",
    "skbeam.core.tests.test_utils.sys",
    "skbeam.core.utils.img_to_relative_xyi",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_utils.test_large_verbosedict": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "KeyError",
    "eval",
    "nose.tools.assert_equal",
    "range",
    "skbeam.core.tests.test_utils.six",
    "skbeam.core.utils.verbosedict"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_utils.test_multi_tau_lags": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "skbeam.core.utils.multi_tau_lags"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_utils.test_process_grid_std_err": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.hstack",
    "numpy.mean",
    "numpy.mgrid",
    "numpy.ones_like",
    "numpy.ravel",
    "numpy.sqrt",
    "numpy.std",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.tile",
    "numpy.vstack",
    "range",
    "skbeam.core.utils.grid3d",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_utils.test_q_twotheta_conversion": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.pi",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.utils.q_to_twotheta",
    "skbeam.core.utils.twotheta_to_q"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_utils.test_radial_grid": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "skbeam.core.utils.radial_grid"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_utils.test_radius_to_twotheta": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linspace",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.core.utils.radius_to_twotheta"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_utils.test_small_verbosedict": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "KeyError",
    "eval",
    "nose.tools.assert_equal",
    "skbeam.core.tests.test_utils.six",
    "skbeam.core.utils.verbosedict"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_utils.test_subtract_reference_images": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "AssertionError",
    "TypeError",
    "enumerate",
    "len",
    "nose.tools.assert_equal",
    "numpy.asarray",
    "numpy.ones",
    "numpy.random.rand",
    "print",
    "range",
    "skbeam.core.tests.test_utils.six",
    "skbeam.core.tests.test_utils.sys",
    "skbeam.core.utils.subtract_reference_images",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.test_utils.test_wedge_integration": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "NotImplementedError",
    "nose.tools.raises",
    "skbeam.core.utils.wedge_integration"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.utils": {
  "data": {},
  "type": "module"
 },
 "skbeam.core.tests.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.tests.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.tests.utils.gauss_gen": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "skbeam.core.tests.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.tests.utils.parabola_gen": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "skbeam.core.tests.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "collections.namedtuple",
    "float",
    "int",
    "skbeam.core.utils.logging",
    "tuple"
   ]
  },
  "type": "module"
 },
 "skbeam.core.utils.MD_dict": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "collections.MutableMapping"
   ]
  },
  "type": "class"
 },
 "skbeam.core.utils.MD_dict.__delitem__": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "skbeam.core.utils.MD_dict.__getitem__": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "KeyError",
    "isinstance",
    "skbeam.core.utils.md_value",
    "type"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.MD_dict.__init__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.MD_dict.__iter__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "skbeam.core.utils._iter_helper"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.MD_dict.__len__": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "iter",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.MD_dict.__repr__": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "skbeam.core.utils.MD_dict.__setitem__": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "isinstance",
    "print",
    "six.string_types",
    "skbeam.core.utils.md_value",
    "type"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.MutableMapping": {
  "data": {
   "shadows": "collections.MutableMapping"
  },
  "type": "import"
 },
 "skbeam.core.utils.NotInstalledError": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "class"
 },
 "skbeam.core.utils.RCParamDict": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "collections.MutableMapping"
   ]
  },
  "type": "class"
 },
 "skbeam.core.utils.RCParamDict.__delitem__": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.RCParamDict.__getitem__": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.RCParamDict.__init__": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.RCParamDict.__iter__": {
  "data": {
   "lineno": 282
  },
  "type": "function"
 },
 "skbeam.core.utils.RCParamDict.__len__": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "iter",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.RCParamDict.__repr__": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "skbeam.core.utils.RCParamDict.__setitem__": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "isinstance",
    "len",
    "skbeam.core.utils.RCParamDict"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.RCParamDict._iter_helper": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "isinstance",
    "skbeam.core.utils.RCParamDict",
    "skbeam.core.utils.six"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.RCParamDict._repr_helper": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "isinstance",
    "skbeam.core.utils.RCParamDict",
    "skbeam.core.utils.six"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils._defaults": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "skbeam.core.utils._iter_helper": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "isinstance",
    "skbeam.core.utils.md_value",
    "skbeam.core.utils.six"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.core.utils.angle_grid": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.arctan2",
    "numpy.meshgrid"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.bin_1D": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "int",
    "numpy.histogram",
    "numpy.linspace",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.bin_edges": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.arange",
    "numpy.linspace",
    "skbeam.core.utils.logger",
    "sum"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.bin_edges_to_centers": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.bin_grid": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": [
    "bool",
    "int",
    "numpy.arange",
    "numpy.hypot",
    "numpy.max",
    "numpy.min",
    "numpy.ones",
    "scipy.stats.binned_statistic",
    "skbeam.core.utils.bin_edges_to_centers"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.d_to_q": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "skbeam.core.utils.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "skbeam.core.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.core.utils.geometric_series": {
  "data": {
   "lineno": 1183
  },
  "type": "function"
 },
 "skbeam.core.utils.grid3d": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "ImportError",
    "NotImplementedError",
    "ValueError",
    "enumerate",
    "numpy.array",
    "numpy.asarray",
    "numpy.atleast_2d",
    "numpy.insert",
    "numpy.max",
    "numpy.min",
    "numpy.ravel",
    "numpy.spacing",
    "numpy.tile",
    "skbeam.core.utils._defaults",
    "skbeam.core.utils.logger",
    "skbeam.core.utils.time"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.img_to_relative_xyi": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.meshgrid",
    "skbeam.core.utils.six"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.keys_core": {
  "data": {
   "lineno": 337
  },
  "type": "constant"
 },
 "skbeam.core.utils.logger": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "skbeam.core.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.core.utils.md_value": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "skbeam.core.utils.multi_tau_lags": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": [
    "ValueError",
    "numpy.append",
    "numpy.arange",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "skbeam.core.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.core.utils.pairwise": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "itertools.tee",
    "next",
    "six.moves.zip"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.core.utils.q_to_d": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.q_to_twotheta": {
  "data": {
   "lineno": 1053,
   "symbols_in_volume": [
    "float",
    "numpy.arcsin",
    "numpy.asarray",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.radial_grid": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.meshgrid",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.radius_to_twotheta": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "numpy.arctan"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "skbeam.core.utils.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "skbeam.core.utils.sts": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "skbeam.core.utils.subtract_reference_images": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "ValueError",
    "collections.deque",
    "list",
    "six.moves.zip"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "skbeam.core.utils.tee": {
  "data": {
   "shadows": "itertools.tee"
  },
  "type": "import"
 },
 "skbeam.core.utils.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "skbeam.core.utils.twotheta_to_q": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": [
    "float",
    "numpy.asarray",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.verbosedict": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "skbeam.core.utils.verbosedict.__getitem__": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "KeyError",
    "dict.__getitem__",
    "len",
    "list",
    "skbeam.core.utils.six",
    "skbeam.core.utils.sys"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.wedge_integration": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skbeam.core.utils.zip": {
  "data": {
   "shadows": "six.moves.zip"
  },
  "type": "import"
 },
 "skbeam.diffraction": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.diffraction.logging"
   ]
  },
  "type": "module"
 },
 "skbeam.diffraction.BasicElement": {
  "data": {
   "shadows": "skbeam.core.constants.BasicElement"
  },
  "type": "import"
 },
 "skbeam.diffraction.Lorentzian2Model": {
  "data": {
   "shadows": "skbeam.core.fitting.Lorentzian2Model"
  },
  "type": "import"
 },
 "skbeam.diffraction.__all__": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "skbeam.diffraction.angle_grid": {
  "data": {
   "shadows": "skbeam.core.utils.angle_grid"
  },
  "type": "import"
 },
 "skbeam.diffraction.bin_1D": {
  "data": {
   "shadows": "skbeam.core.utils.bin_1D"
  },
  "type": "import"
 },
 "skbeam.diffraction.bin_edges": {
  "data": {
   "shadows": "skbeam.core.utils.bin_edges"
  },
  "type": "import"
 },
 "skbeam.diffraction.bin_edges_to_centers": {
  "data": {
   "shadows": "skbeam.core.utils.bin_edges_to_centers"
  },
  "type": "import"
 },
 "skbeam.diffraction.calibration_standards": {
  "data": {
   "shadows": "skbeam.core.constants.calibration_standards"
  },
  "type": "import"
 },
 "skbeam.diffraction.d_to_q": {
  "data": {
   "shadows": "skbeam.core.utils.d_to_q"
  },
  "type": "import"
 },
 "skbeam.diffraction.estimate_d_blind": {
  "data": {
   "shadows": "skbeam.core.calibration.estimate_d_blind"
  },
  "type": "import"
 },
 "skbeam.diffraction.gaussian": {
  "data": {
   "shadows": "skbeam.core.fitting.gaussian"
  },
  "type": "import"
 },
 "skbeam.diffraction.gaussian_tail": {
  "data": {
   "shadows": "skbeam.core.fitting.gaussian_tail"
  },
  "type": "import"
 },
 "skbeam.diffraction.gausssian_step": {
  "data": {
   "shadows": "skbeam.core.fitting.gausssian_step"
  },
  "type": "import"
 },
 "skbeam.diffraction.grid3d": {
  "data": {
   "shadows": "skbeam.core.utils.grid3d"
  },
  "type": "import"
 },
 "skbeam.diffraction.hkl_to_q": {
  "data": {
   "shadows": "skbeam.core.recip.hkl_to_q"
  },
  "type": "import"
 },
 "skbeam.diffraction.logger": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "skbeam.diffraction.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.diffraction.lorentzian": {
  "data": {
   "shadows": "skbeam.core.fitting.lorentzian"
  },
  "type": "import"
 },
 "skbeam.diffraction.lorentzian2": {
  "data": {
   "shadows": "skbeam.core.fitting.lorentzian2"
  },
  "type": "import"
 },
 "skbeam.diffraction.process_to_q": {
  "data": {
   "shadows": "skbeam.core.recip.process_to_q"
  },
  "type": "import"
 },
 "skbeam.diffraction.pvoigt": {
  "data": {
   "shadows": "skbeam.core.fitting.pvoigt"
  },
  "type": "import"
 },
 "skbeam.diffraction.q_to_d": {
  "data": {
   "shadows": "skbeam.core.utils.q_to_d"
  },
  "type": "import"
 },
 "skbeam.diffraction.q_to_twotheta": {
  "data": {
   "shadows": "skbeam.core.utils.q_to_twotheta"
  },
  "type": "import"
 },
 "skbeam.diffraction.radial_grid": {
  "data": {
   "shadows": "skbeam.core.utils.radial_grid"
  },
  "type": "import"
 },
 "skbeam.diffraction.refine_center": {
  "data": {
   "shadows": "skbeam.core.calibration.refine_center"
  },
  "type": "import"
 },
 "skbeam.diffraction.twotheta_to_q": {
  "data": {
   "shadows": "skbeam.core.utils.twotheta_to_q"
  },
  "type": "import"
 },
 "skbeam.diffraction.voigt": {
  "data": {
   "shadows": "skbeam.core.fitting.voigt"
  },
  "type": "import"
 },
 "skbeam.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.ext": {
  "data": {},
  "type": "module"
 },
 "skbeam.fluorescence": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.fluorescence.logging"
   ]
  },
  "type": "module"
 },
 "skbeam.fluorescence.ComptonModel": {
  "data": {
   "shadows": "skbeam.core.fitting.ComptonModel"
  },
  "type": "import"
 },
 "skbeam.fluorescence.ElasticModel": {
  "data": {
   "shadows": "skbeam.core.fitting.ElasticModel"
  },
  "type": "import"
 },
 "skbeam.fluorescence.Lorentzian2Model": {
  "data": {
   "shadows": "skbeam.core.fitting.Lorentzian2Model"
  },
  "type": "import"
 },
 "skbeam.fluorescence.XrfElement": {
  "data": {
   "shadows": "skbeam.core.constants.XrfElement"
  },
  "type": "import"
 },
 "skbeam.fluorescence.__all__": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "skbeam.fluorescence.emission_line_search": {
  "data": {
   "shadows": "skbeam.core.constants.emission_line_search"
  },
  "type": "import"
 },
 "skbeam.fluorescence.logger": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "skbeam.fluorescence.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.fluorescence.snip_method": {
  "data": {
   "shadows": "skbeam.core.fitting.background.snip_method"
  },
  "type": "import"
 },
 "skbeam.io": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "skbeam.io.logging"
   ]
  },
  "type": "module"
 },
 "skbeam.io.__all__": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "skbeam.io.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.io.avizo_io": {
  "data": {},
  "type": "module"
 },
 "skbeam.io.avizo_io._amira_data_to_numpy": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.fromstring"
   ]
  },
  "type": "function"
 },
 "skbeam.io.avizo_io._clean_amira_header": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "filter"
   ]
  },
  "type": "function"
 },
 "skbeam.io.avizo_io._create_md_dict": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "numpy.arange",
    "skbeam.io.avizo_io.logging",
    "str"
   ]
  },
  "type": "function"
 },
 "skbeam.io.avizo_io._read_amira": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "open",
    "skbeam.io.avizo_io.os"
   ]
  },
  "type": "function"
 },
 "skbeam.io.avizo_io.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.io.avizo_io.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.io.avizo_io.load_amiramesh": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "skbeam.io.avizo_io._amira_data_to_numpy",
    "skbeam.io.avizo_io._clean_amira_header",
    "skbeam.io.avizo_io._create_md_dict",
    "skbeam.io.avizo_io._read_amira"
   ]
  },
  "type": "function"
 },
 "skbeam.io.avizo_io.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.io.avizo_io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.io.avizo_io.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "skbeam.io.avizo_io.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.io.binary": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.typeDict",
    "skbeam.io.binary.logging",
    "skbeam.io.binary.read_binary",
    "sorted",
    "str"
   ]
  },
  "type": "module"
 },
 "skbeam.io.binary.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.io.binary.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.io.binary.logger": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "skbeam.io.binary.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.io.binary.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.io.binary.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.io.binary.read_binary": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.fromfile",
    "open"
   ]
  },
  "type": "function"
 },
 "skbeam.io.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.io.fit2d_save": {
  "data": {},
  "type": "module"
 },
 "skbeam.io.fit2d_save._create_file_path": {
  "data": {
   "shadows": "skbeam.io.save_powder_output._create_file_path"
  },
  "type": "import"
 },
 "skbeam.io.fit2d_save.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.io.fit2d_save.fit2d_save": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.flipud",
    "numpy.uint8",
    "numpy.zeros",
    "open",
    "range",
    "skbeam.io.fit2d_save.header",
    "skbeam.io.fit2d_save.math",
    "skbeam.io.save_powder_output._create_file_path"
   ]
  },
  "type": "function"
 },
 "skbeam.io.fit2d_save.header": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "skbeam.io.fit2d_save.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "skbeam.io.fit2d_save.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.io.fit2d_save.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.io.load_netCDF": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "function"
 },
 "skbeam.io.logger": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "skbeam.io.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.io.net_cdf_io": {
  "data": {},
  "type": "module"
 },
 "skbeam.io.net_cdf_io.Dataset": {
  "data": {
   "shadows": "netCDF4.Dataset"
  },
  "type": "import"
 },
 "skbeam.io.net_cdf_io.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.io.net_cdf_io.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.io.net_cdf_io.load_netCDF": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "float",
    "netCDF4.Dataset",
    "skbeam.io.net_cdf_io.os"
   ]
  },
  "type": "function"
 },
 "skbeam.io.net_cdf_io.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "skbeam.io.net_cdf_io.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.io.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.io.tests": {
  "data": {},
  "type": "module"
 },
 "skbeam.io.tests.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "skbeam.io.tests.test_fit2d_save": {
  "data": {},
  "type": "module"
 },
 "skbeam.io.tests.test_fit2d_save.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.io.tests.test_fit2d_save.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.io.tests.test_fit2d_save.fit2d_save": {
  "data": {
   "shadows": "skbeam.io.fit2d_save.fit2d_save"
  },
  "type": "import"
 },
 "skbeam.io.tests.test_fit2d_save.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.io.tests.test_fit2d_save.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "skbeam.io.tests.test_fit2d_save.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.io.tests.test_fit2d_save.test_save_output_for_smoke": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.ones",
    "skbeam.io.fit2d_save.fit2d_save",
    "skbeam.io.tests.test_fit2d_save.os"
   ]
  },
  "type": "function"
 },
 "skbeam.io.tests.test_powder_output": {
  "data": {},
  "type": "module"
 },
 "skbeam.io.tests.test_powder_output.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.io.tests.test_powder_output.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "skbeam.io.tests.test_powder_output.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "skbeam.io.tests.test_powder_output.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.io.tests.test_powder_output.gsas_reader": {
  "data": {
   "shadows": "skbeam.io.gsas_file_reader.gsas_reader"
  },
  "type": "import"
 },
 "skbeam.io.tests.test_powder_output.gsas_writer": {
  "data": {
   "shadows": "skbeam.io.save_powder_output.gsas_writer"
  },
  "type": "import"
 },
 "skbeam.io.tests.test_powder_output.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "skbeam.io.tests.test_powder_output.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skbeam.io.tests.test_powder_output.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "skbeam.io.tests.test_powder_output.output": {
  "data": {
   "shadows": "skbeam.io.save_powder_output"
  },
  "type": "import"
 },
 "skbeam.io.tests.test_powder_output.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.io.tests.test_powder_output.test_gsas_output": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "round",
    "skbeam.io.gsas_file_reader.gsas_reader",
    "skbeam.io.save_powder_output.gsas_writer",
    "skbeam.io.tests.test_powder_output.math",
    "skbeam.io.tests.test_powder_output.os"
   ]
  },
  "type": "function"
 },
 "skbeam.io.tests.test_powder_output.test_save_output": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.exp",
    "numpy.loadtxt",
    "numpy.testing.assert_array_almost_equal",
    "skbeam.io.save_powder_output.save_output",
    "skbeam.io.tests.test_powder_output.math",
    "skbeam.io.tests.test_powder_output.os"
   ]
  },
  "type": "function"
 },
 "skbeam.logger": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "skbeam.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.testing": {
  "data": {},
  "type": "module"
 },
 "skbeam.testing.decorators": {
  "data": {},
  "type": "module"
 },
 "skbeam.testing.decorators.KnownFailureDidNotFailTest": {
  "data": {
   "shadows": "skbeam.testing.noseclasses.KnownFailureDidNotFailTest"
  },
  "type": "import"
 },
 "skbeam.testing.decorators.KnownFailureTest": {
  "data": {
   "shadows": "skbeam.testing.noseclasses.KnownFailureTest"
  },
  "type": "import"
 },
 "skbeam.testing.decorators.known_fail_if": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "skbeam.testing.decorators.known_fail_if.dec": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "in_func",
    "nose.tools.make_decorator"
   ]
  },
  "type": "function"
 },
 "skbeam.testing.decorators.known_fail_if.dec.inner_wrap": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "Exception",
    "in_func",
    "skbeam.testing.noseclasses.KnownFailureDidNotFailTest",
    "skbeam.testing.noseclasses.KnownFailureTest"
   ]
  },
  "type": "function"
 },
 "skbeam.testing.decorators.make_decorator": {
  "data": {
   "shadows": "nose.tools.make_decorator"
  },
  "type": "import"
 },
 "skbeam.testing.decorators.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "skbeam.testing.decorators.skip_if": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "skbeam.testing.decorators.skip_if.dec": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "in_func",
    "nose.tools.make_decorator"
   ]
  },
  "type": "function"
 },
 "skbeam.testing.decorators.skip_if.dec.wrapper": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "skbeam.testing.decorators.nose"
   ]
  },
  "type": "function"
 },
 "skbeam.testing.noseclasses": {
  "data": {},
  "type": "module"
 },
 "skbeam.testing.noseclasses.ErrorClass": {
  "data": {
   "shadows": "nose.plugins.errorclass.ErrorClass"
  },
  "type": "import"
 },
 "skbeam.testing.noseclasses.ErrorClassPlugin": {
  "data": {
   "shadows": "nose.plugins.errorclass.ErrorClassPlugin"
  },
  "type": "import"
 },
 "skbeam.testing.noseclasses.KnownFailure": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "nose.plugins.errorclass.ErrorClass",
    "nose.plugins.errorclass.ErrorClassPlugin",
    "skbeam.testing.noseclasses.KnownFailureTest"
   ]
  },
  "type": "class"
 },
 "skbeam.testing.noseclasses.KnownFailure.configure": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "skbeam.testing.noseclasses.KnownFailure.options": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "skbeam.testing.noseclasses.os"
   ]
  },
  "type": "function"
 },
 "skbeam.testing.noseclasses.KnownFailureDidNotFailTest": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "skbeam.testing.noseclasses.KnownFailureTest": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "skbeam.testing.noseclasses.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.testing.noseclasses.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.testing.noseclasses.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "skbeam.testing.noseclasses.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.tests": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.tests.logging"
   ]
  },
  "type": "module"
 },
 "skbeam.tests.logger": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "skbeam.tests.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.tests.test_diffraction": {
  "data": {},
  "type": "module"
 },
 "skbeam.tests.test_fluorescence": {
  "data": {},
  "type": "module"
 },
 "skbeam.tests.test_openness": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skbeam.tests.test_openness.logging",
    "skbeam.tests.test_openness.nose",
    "skbeam.tests.test_openness.nose_args",
    "skbeam.tests.test_openness.sys"
   ]
  },
  "type": "module"
 },
 "skbeam.tests.test_openness.UnwelcomenessError": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "skbeam.tests.test_openness.ValuesError"
   ]
  },
  "type": "class"
 },
 "skbeam.tests.test_openness.ValuesError": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "skbeam.tests.test_openness._IGNORE_DIRS": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "skbeam.tests.test_openness._IGNORE_FILE_EXT": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "skbeam.tests.test_openness._everybody_welcome_here": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "skbeam.tests.test_openness.UnwelcomenessError",
    "skbeam.tests.test_openness.blacklisted"
   ]
  },
  "type": "function"
 },
 "skbeam.tests.test_openness._openess_tester": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "dir",
    "hasattr",
    "skbeam.tests.test_openness._everybody_welcome_here"
   ]
  },
  "type": "function"
 },
 "skbeam.tests.test_openness.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "skbeam.tests.test_openness.blacklisted": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "skbeam.tests.test_openness.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skbeam.tests.test_openness.filetypes": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "skbeam.tests.test_openness.get_modules_in_library": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "len",
    "skbeam.tests.test_openness._IGNORE_DIRS",
    "skbeam.tests.test_openness._IGNORE_FILE_EXT",
    "skbeam.tests.test_openness.importlib",
    "skbeam.tests.test_openness.os"
   ]
  },
  "type": "function"
 },
 "skbeam.tests.test_openness.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "skbeam.tests.test_openness.logger": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "skbeam.tests.test_openness.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skbeam.tests.test_openness.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "skbeam.tests.test_openness.nose_args": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "skbeam.tests.test_openness.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "skbeam.tests.test_openness.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "skbeam.tests.test_openness.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "skbeam.tests.test_openness.test_openness": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "open",
    "skbeam.tests.test_openness._everybody_welcome_here",
    "skbeam.tests.test_openness._openess_tester",
    "skbeam.tests.test_openness.get_modules_in_library",
    "skbeam.tests.test_openness.importlib"
   ]
  },
  "type": "function"
 }
}