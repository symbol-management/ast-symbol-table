{
 "pymedphys_utilities": {
  "data": {},
  "type": "module"
 },
 "pymedphys_utilities._install_requires": {
  "data": {},
  "type": "module"
 },
 "pymedphys_utilities._install_requires.install_requires": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pymedphys_utilities._version": {
  "data": {},
  "type": "module"
 },
 "pymedphys_utilities._version.__version__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "pymedphys_utilities._version.version_info": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pymedphys_utilities.algorithms": {
  "data": {},
  "type": "module"
 },
 "pymedphys_utilities.algorithms.core": {
  "data": {},
  "type": "module"
 },
 "pymedphys_utilities.algorithms.core.maintain_order_unique": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "pymedphys_utilities.constants": {
  "data": {},
  "type": "module"
 },
 "pymedphys_utilities.constants.mlctypes": {
  "data": {},
  "type": "module"
 },
 "pymedphys_utilities.constants.mlctypes.AGILITY": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pymedphys_utilities.constants.mlctypes.A_LEAF_TYPE": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pymedphys_utilities.constants.mlctypes.BRAINLAB": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pymedphys_utilities.filehash": {
  "data": {},
  "type": "module"
 },
 "pymedphys_utilities.filehash.core": {
  "data": {},
  "type": "module"
 },
 "pymedphys_utilities.filehash.core.hash_file": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "len",
    "open",
    "print",
    "pymedphys_utilities.filehash.core.hashlib"
   ]
  },
  "type": "function"
 },
 "pymedphys_utilities.filehash.core.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "pymedphys_utilities.transforms": {
  "data": {},
  "type": "module"
 },
 "pymedphys_utilities.transforms.bipolar": {
  "data": {},
  "type": "module"
 },
 "pymedphys_utilities.transforms.bipolar.convert_IEC_angle_to_bipolar": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.all",
    "numpy.argmin",
    "numpy.copy",
    "numpy.invert",
    "numpy.sign",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "pymedphys_utilities.transforms.bipolar.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pymedphys_utilities.utilities": {
  "data": {},
  "type": "module"
 },
 "pymedphys_utilities.utilities.compression": {
  "data": {},
  "type": "module"
 },
 "pymedphys_utilities.utilities.compression.compress_test_file": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "open",
    "pymedphys_utilities.utilities.compression.lzma"
   ]
  },
  "type": "function"
 },
 "pymedphys_utilities.utilities.compression.compress_test_files": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "glob.glob",
    "pymedphys_utilities.utilities.compression.compress_test_file"
   ]
  },
  "type": "function"
 },
 "pymedphys_utilities.utilities.compression.decompress_test_files": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "pymedphys_utilities.utilities.compression.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "pymedphys_utilities.utilities.compression.lzma": {
  "data": {
   "shadows": "lzma"
  },
  "type": "import"
 },
 "pymedphys_utilities.utilities.config": {
  "data": {},
  "type": "module"
 },
 "pymedphys_utilities.utilities.config.get_cache_filepaths": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pymedphys_utilities.utilities.config.get_data_directory",
    "pymedphys_utilities.utilities.config.os"
   ]
  },
  "type": "function"
 },
 "pymedphys_utilities.utilities.config.get_centre": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "pymedphys_utilities.utilities.config.get_data_directory": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "pymedphys_utilities.utilities.config.get_filepath": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "pymedphys_utilities.utilities.config.get_data_directory",
    "pymedphys_utilities.utilities.config.os"
   ]
  },
  "type": "function"
 },
 "pymedphys_utilities.utilities.config.get_gantry_tolerance": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "pymedphys_utilities.utilities.config.get_index": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "open",
    "pymedphys_utilities.utilities.config.get_data_directory",
    "pymedphys_utilities.utilities.config.json",
    "pymedphys_utilities.utilities.config.os"
   ]
  },
  "type": "function"
 },
 "pymedphys_utilities.utilities.config.get_mu_density_parameters": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "pymedphys_utilities.utilities.config.get_sql_servers": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pymedphys_utilities.utilities.config.get_sql_servers_list": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pymedphys_utilities.utilities.config.get_sql_servers"
   ]
  },
  "type": "function"
 },
 "pymedphys_utilities.utilities.config.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pymedphys_utilities.utilities.config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pymedphys_utilities.utilities.filesearch": {
  "data": {},
  "type": "module"
 },
 "pymedphys_utilities.utilities.filesearch.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "pymedphys_utilities.utilities.filesearch.wildcard_file_resolution": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "FileNotFoundError",
    "TypeError",
    "glob.glob",
    "len"
   ]
  },
  "type": "function"
 },
 "pymedphys_utilities.utilities.filesystem": {
  "data": {},
  "type": "module"
 },
 "pymedphys_utilities.utilities.filesystem.make_a_valid_directory_name": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pymedphys_utilities.utilities.filesystem.string"
   ]
  },
  "type": "function"
 },
 "pymedphys_utilities.utilities.filesystem.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 }
}