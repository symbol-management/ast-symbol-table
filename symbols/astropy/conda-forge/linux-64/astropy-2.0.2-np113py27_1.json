{
 "*": {
  "data": {
   "imports": [
    "concurrent.futures"
   ]
  },
  "type": "star-import"
 },
 "astropy": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "NameError",
    "__builtin__._ASTROPY_SETUP_",
    "__name__",
    "_init_log",
    "astropy.Conf",
    "astropy.__dir__",
    "astropy._check_numpy",
    "astropy._get_bibtex",
    "astropy._initialize_astropy",
    "astropy._is_astropy_setup",
    "astropy.logging",
    "astropy.sys",
    "dir",
    "isinstance",
    "locals",
    "sys.version_info",
    "types.ModuleType",
    "warnings.warn"
   ]
  },
  "type": "module"
 },
 "astropy.Conf": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "astropy.sys"
   ]
  },
  "type": "class"
 },
 "astropy.__bibtex__": {
  "data": {
   "lineno": 275
  },
  "type": "constant"
 },
 "astropy.__dir__": {
  "data": {
   "lineno": 320
  },
  "type": "constant"
 },
 "astropy.__githash__": {
  "data": {
   "shadows": "githash"
  },
  "type": "import"
 },
 "astropy.__minimum_numpy_version__": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "astropy.__module_type__": {
  "data": {
   "shadows": "types.ModuleType"
  },
  "type": "import"
 },
 "astropy.__version__": {
  "data": {
   "shadows": "version"
  },
  "type": "import"
 },
 "astropy._check_numpy": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ImportError",
    "astropy.__minimum_numpy_version__",
    "astropy.numpy",
    "minversion"
   ]
  },
  "type": "function"
 },
 "astropy._config": {
  "data": {
   "shadows": "config"
  },
  "type": "import"
 },
 "astropy._erfa": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy._erfa.core": {
  "data": {
   "symbols_in_volume": [
    "astropy._erfa.core.AULT",
    "astropy._erfa.core.CMPS",
    "astropy._erfa.core.DAS2R",
    "astropy._erfa.core.DAU",
    "astropy._erfa.core.DAYSEC",
    "astropy._erfa.core.STATUS_CODES",
    "astropy._erfa.core.numpy"
   ]
  },
  "type": "module"
 },
 "astropy._erfa.core.AULT": {
  "data": {
   "lineno": 199
  },
  "type": "constant"
 },
 "astropy._erfa.core.CMPS": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "astropy._erfa.core.D2PI": {
  "data": {
   "lineno": 159
  },
  "type": "constant"
 },
 "astropy._erfa.core.DAS2R": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "astropy._erfa.core.DAU": {
  "data": {
   "lineno": 195
  },
  "type": "constant"
 },
 "astropy._erfa.core.DAYSEC": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "astropy._erfa.core.DC": {
  "data": {
   "lineno": 201
  },
  "type": "constant"
 },
 "astropy._erfa.core.DD2R": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "astropy._erfa.core.DJ00": {
  "data": {
   "lineno": 185
  },
  "type": "constant"
 },
 "astropy._erfa.core.DJC": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "astropy._erfa.core.DJM": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "astropy._erfa.core.DJM0": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "astropy._erfa.core.DJM00": {
  "data": {
   "lineno": 189
  },
  "type": "constant"
 },
 "astropy._erfa.core.DJM77": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "astropy._erfa.core.DJY": {
  "data": {
   "lineno": 179
  },
  "type": "constant"
 },
 "astropy._erfa.core.DMAS2R": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "astropy._erfa.core.DPI": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "astropy._erfa.core.DR2AS": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "astropy._erfa.core.DR2D": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "astropy._erfa.core.DS2R": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "astropy._erfa.core.DTY": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "astropy._erfa.core.ELB": {
  "data": {
   "lineno": 205
  },
  "type": "constant"
 },
 "astropy._erfa.core.ELG": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "astropy._erfa.core.ErfaError": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "astropy._erfa.core.ErfaWarning": {
  "data": {
   "lineno": 63
  },
  "type": "class"
 },
 "astropy._erfa.core.GRS80": {
  "data": {
   "lineno": 213
  },
  "type": "constant"
 },
 "astropy._erfa.core.SRS": {
  "data": {
   "lineno": 209
  },
  "type": "constant"
 },
 "astropy._erfa.core.STATUS_CODES": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "astropy._erfa.core.STATUS_CODES_REMAP": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "astropy._erfa.core.TDB0": {
  "data": {
   "lineno": 207
  },
  "type": "constant"
 },
 "astropy._erfa.core.TTMTAI": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "astropy._erfa.core.TURNAS": {
  "data": {
   "lineno": 171
  },
  "type": "constant"
 },
 "astropy._erfa.core.WGS72": {
  "data": {
   "lineno": 215
  },
  "type": "constant"
 },
 "astropy._erfa.core.WGS84": {
  "data": {
   "lineno": 211
  },
  "type": "constant"
 },
 "astropy._erfa.core.__all__": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "astropy._erfa.core.a2af": {
  "data": {
   "lineno": 21196,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.a2tf": {
  "data": {
   "lineno": 21296,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.ab": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "astropy._erfa.core.check_trailing_shape",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy._erfa.core.af2a": {
  "data": {
   "lineno": 21396,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.anp": {
  "data": {
   "lineno": 21484,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.anpm": {
  "data": {
   "lineno": 21541,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.apcg": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "astropy._erfa.core.check_trailing_shape",
    "astropy._erfa.core.dt_eraASTROM",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.apcg13": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "astropy._erfa.core.dt_eraASTROM",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.apci": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": [
    "astropy._erfa.core.check_trailing_shape",
    "astropy._erfa.core.dt_eraASTROM",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.apci13": {
  "data": {
   "lineno": 1391,
   "symbols_in_volume": [
    "astropy._erfa.core.dt_eraASTROM",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.apco": {
  "data": {
   "lineno": 1549,
   "symbols_in_volume": [
    "astropy._erfa.core.check_trailing_shape",
    "astropy._erfa.core.dt_eraASTROM",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.apco13": {
  "data": {
   "lineno": 1780,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.dt_eraASTROM",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.apcs": {
  "data": {
   "lineno": 2025,
   "symbols_in_volume": [
    "astropy._erfa.core.check_trailing_shape",
    "astropy._erfa.core.dt_eraASTROM",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.apcs13": {
  "data": {
   "lineno": 2199,
   "symbols_in_volume": [
    "astropy._erfa.core.check_trailing_shape",
    "astropy._erfa.core.dt_eraASTROM",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.aper": {
  "data": {
   "lineno": 2357,
   "symbols_in_volume": [
    "astropy._erfa.core.dt_eraASTROM",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.aper13": {
  "data": {
   "lineno": 2492,
   "symbols_in_volume": [
    "astropy._erfa.core.dt_eraASTROM",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.apio": {
  "data": {
   "lineno": 2648,
   "symbols_in_volume": [
    "astropy._erfa.core.dt_eraASTROM",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.apio13": {
  "data": {
   "lineno": 2827,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.dt_eraASTROM",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.atci13": {
  "data": {
   "lineno": 3057,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.atciq": {
  "data": {
   "lineno": 3197,
   "symbols_in_volume": [
    "astropy._erfa.core.dt_eraASTROM",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.atciqn": {
  "data": {
   "lineno": 3318,
   "symbols_in_volume": [
    "astropy._erfa.core.dt_eraASTROM",
    "astropy._erfa.core.dt_eraLDBODY",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.atciqz": {
  "data": {
   "lineno": 3480,
   "symbols_in_volume": [
    "astropy._erfa.core.dt_eraASTROM",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.atco13": {
  "data": {
   "lineno": 3593,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.atic13": {
  "data": {
   "lineno": 3841,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.aticq": {
  "data": {
   "lineno": 3968,
   "symbols_in_volume": [
    "astropy._erfa.core.dt_eraASTROM",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.aticqn": {
  "data": {
   "lineno": 4077,
   "symbols_in_volume": [
    "astropy._erfa.core.dt_eraASTROM",
    "astropy._erfa.core.dt_eraLDBODY",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.atio13": {
  "data": {
   "lineno": 4228,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.atioq": {
  "data": {
   "lineno": 4448,
   "symbols_in_volume": [
    "astropy._erfa.core.dt_eraASTROM",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.atoc13": {
  "data": {
   "lineno": 4604,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.atoi13": {
  "data": {
   "lineno": 4822,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.atoiq": {
  "data": {
   "lineno": 5039,
   "symbols_in_volume": [
    "astropy._erfa.core.dt_eraASTROM",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.bi00": {
  "data": {
   "lineno": 7530,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.bp00": {
  "data": {
   "lineno": 7611,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.bp06": {
  "data": {
   "lineno": 7733,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.bpn2xy": {
  "data": {
   "lineno": 7849,
   "symbols_in_volume": [
    "astropy._erfa.core.check_trailing_shape",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.c2i00a": {
  "data": {
   "lineno": 7931,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.c2i00b": {
  "data": {
   "lineno": 8044,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.c2i06a": {
  "data": {
   "lineno": 8157,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.c2ibpn": {
  "data": {
   "lineno": 8261,
   "symbols_in_volume": [
    "astropy._erfa.core.check_trailing_shape",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.c2ixy": {
  "data": {
   "lineno": 8379,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.c2ixys": {
  "data": {
   "lineno": 8492,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.c2s": {
  "data": {
   "lineno": 22145,
   "symbols_in_volume": [
    "astropy._erfa.core.check_trailing_shape",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.c2t00a": {
  "data": {
   "lineno": 8586,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.c2t00b": {
  "data": {
   "lineno": 8712,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.c2t06a": {
  "data": {
   "lineno": 8837,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.c2tcio": {
  "data": {
   "lineno": 8961,
   "symbols_in_volume": [
    "astropy._erfa.core.check_trailing_shape",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.c2teqx": {
  "data": {
   "lineno": 9061,
   "symbols_in_volume": [
    "astropy._erfa.core.check_trailing_shape",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.c2tpe": {
  "data": {
   "lineno": 9161,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.c2txy": {
  "data": {
   "lineno": 9299,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.cal2jd": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "id",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.check_errwarn": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "astropy._erfa.core.ErfaError",
    "astropy._erfa.core.ErfaWarning",
    "astropy._erfa.core.STATUS_CODES",
    "astropy._erfa.core.STATUS_CODES_REMAP",
    "astropy._erfa.core.numpy",
    "astropy._erfa.core.warnings",
    "dict",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.check_trailing_shape": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.d2dtf": {
  "data": {
   "lineno": 18964,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.d2tf": {
  "data": {
   "lineno": 21598,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.dat": {
  "data": {
   "lineno": 19100,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "id",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy._erfa.core.dt_eraASTROM": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "astropy._erfa.core.dt_eraLDBODY": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "astropy._erfa.core.dtdb": {
  "data": {
   "lineno": 19270,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.dtf2d": {
  "data": {
   "lineno": 19479,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "id",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.eceq06": {
  "data": {
   "lineno": 17573,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.ecm06": {
  "data": {
   "lineno": 17678,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.ee00": {
  "data": {
   "lineno": 14828,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.ee00a": {
  "data": {
   "lineno": 14937,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.ee00b": {
  "data": {
   "lineno": 15040,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.ee06a": {
  "data": {
   "lineno": 15149,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.eect00": {
  "data": {
   "lineno": 15244,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.eform": {
  "data": {
   "lineno": 18410,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.eo06a": {
  "data": {
   "lineno": 9433,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.eors": {
  "data": {
   "lineno": 9532,
   "symbols_in_volume": [
    "astropy._erfa.core.check_trailing_shape",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.epb": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.epb2jd": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "astropy._erfa.core.epb",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.epj": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.epj2jd": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "astropy._erfa.core.epj",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.epv00": {
  "data": {
   "lineno": 6113,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.eqec06": {
  "data": {
   "lineno": 17782,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.eqeq94": {
  "data": {
   "lineno": 15380,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.era00": {
  "data": {
   "lineno": 15476,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.fad03": {
  "data": {
   "lineno": 6471,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.fae03": {
  "data": {
   "lineno": 6545,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.faf03": {
  "data": {
   "lineno": 6622,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.faju03": {
  "data": {
   "lineno": 6697,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.fal03": {
  "data": {
   "lineno": 6774,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.falp03": {
  "data": {
   "lineno": 6848,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.fama03": {
  "data": {
   "lineno": 6922,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.fame03": {
  "data": {
   "lineno": 6999,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.fane03": {
  "data": {
   "lineno": 7076,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.faom03": {
  "data": {
   "lineno": 7150,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.fapa03": {
  "data": {
   "lineno": 7224,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.fasa03": {
  "data": {
   "lineno": 7302,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.faur03": {
  "data": {
   "lineno": 7379,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.fave03": {
  "data": {
   "lineno": 7453,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.fk52h": {
  "data": {
   "lineno": 16807,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.fk5hip": {
  "data": {
   "lineno": 16930,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.fk5hz": {
  "data": {
   "lineno": 17004,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.fw2m": {
  "data": {
   "lineno": 9611,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.fw2xy": {
  "data": {
   "lineno": 9724,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.g2icrs": {
  "data": {
   "lineno": 18190,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.gc2gd": {
  "data": {
   "lineno": 18518,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.check_trailing_shape",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.gc2gde": {
  "data": {
   "lineno": 18628,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.check_trailing_shape",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.gd2gc": {
  "data": {
   "lineno": 18745,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.gd2gce": {
  "data": {
   "lineno": 18853,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.gmst00": {
  "data": {
   "lineno": 15575,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.gmst06": {
  "data": {
   "lineno": 15692,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.gmst82": {
  "data": {
   "lineno": 15799,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.gst00a": {
  "data": {
   "lineno": 15904,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.gst00b": {
  "data": {
   "lineno": 16022,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.gst06": {
  "data": {
   "lineno": 16144,
   "symbols_in_volume": [
    "astropy._erfa.core.check_trailing_shape",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.gst06a": {
  "data": {
   "lineno": 16259,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.gst94": {
  "data": {
   "lineno": 16368,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.h2fk5": {
  "data": {
   "lineno": 17125,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.hfk5z": {
  "data": {
   "lineno": 17250,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.icrs2g": {
  "data": {
   "lineno": 18300,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.jd2cal": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.jdcalf": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.ld": {
  "data": {
   "lineno": 5178,
   "symbols_in_volume": [
    "astropy._erfa.core.check_trailing_shape",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.ldn": {
  "data": {
   "lineno": 5301,
   "symbols_in_volume": [
    "astropy._erfa.core.check_trailing_shape",
    "astropy._erfa.core.dt_eraLDBODY",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.ldsun": {
  "data": {
   "lineno": 5430,
   "symbols_in_volume": [
    "astropy._erfa.core.check_trailing_shape",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.lteceq": {
  "data": {
   "lineno": 17888,
   "symbols_in_volume": [
    "astropy._erfa.core.epj",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.ltecm": {
  "data": {
   "lineno": 17989,
   "symbols_in_volume": [
    "astropy._erfa.core.epj",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.lteqec": {
  "data": {
   "lineno": 18088,
   "symbols_in_volume": [
    "astropy._erfa.core.epj",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.ltp": {
  "data": {
   "lineno": 9826,
   "symbols_in_volume": [
    "astropy._erfa.core.epj",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.ltpb": {
  "data": {
   "lineno": 9916,
   "symbols_in_volume": [
    "astropy._erfa.core.epj",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.ltpecl": {
  "data": {
   "lineno": 10004,
   "symbols_in_volume": [
    "astropy._erfa.core.epj",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.ltpequ": {
  "data": {
   "lineno": 10083,
   "symbols_in_volume": [
    "astropy._erfa.core.epj",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.num00a": {
  "data": {
   "lineno": 10162,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.num00b": {
  "data": {
   "lineno": 10259,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.num06a": {
  "data": {
   "lineno": 10356,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.numat": {
  "data": {
   "lineno": 10452,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy._erfa.core.nut00a": {
  "data": {
   "lineno": 10540,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.nut00b": {
  "data": {
   "lineno": 10737,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.nut06a": {
  "data": {
   "lineno": 10902,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.nut80": {
  "data": {
   "lineno": 11026,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.nutm80": {
  "data": {
   "lineno": 11123,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.obl06": {
  "data": {
   "lineno": 11213,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.obl80": {
  "data": {
   "lineno": 11300,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.p06e": {
  "data": {
   "lineno": 11389,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.p2s": {
  "data": {
   "lineno": 22216,
   "symbols_in_volume": [
    "astropy._erfa.core.check_trailing_shape",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.pb06": {
  "data": {
   "lineno": 11609,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.pfw06": {
  "data": {
   "lineno": 11724,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.plan94": {
  "data": {
   "lineno": 6261,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.pmat00": {
  "data": {
   "lineno": 11853,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.pmat06": {
  "data": {
   "lineno": 11948,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.pmat76": {
  "data": {
   "lineno": 12044,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.pmpx": {
  "data": {
   "lineno": 5512,
   "symbols_in_volume": [
    "astropy._erfa.core.check_trailing_shape",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.pmsafe": {
  "data": {
   "lineno": 5614,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.pn00": {
  "data": {
   "lineno": 12155,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.pn00a": {
  "data": {
   "lineno": 12316,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.pn00b": {
  "data": {
   "lineno": 12481,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.pn06": {
  "data": {
   "lineno": 12646,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.pn06a": {
  "data": {
   "lineno": 12805,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.pnm00a": {
  "data": {
   "lineno": 12960,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.pnm00b": {
  "data": {
   "lineno": 13058,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.pnm06a": {
  "data": {
   "lineno": 13156,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.pnm80": {
  "data": {
   "lineno": 13251,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.pom00": {
  "data": {
   "lineno": 13348,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.pr00": {
  "data": {
   "lineno": 13441,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.prec76": {
  "data": {
   "lineno": 13556,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy._erfa.core.pv2s": {
  "data": {
   "lineno": 22294,
   "symbols_in_volume": [
    "astropy._erfa.core.check_trailing_shape",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.pvstar": {
  "data": {
   "lineno": 16475,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.check_trailing_shape",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.pvtob": {
  "data": {
   "lineno": 5802,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.refco": {
  "data": {
   "lineno": 5916,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.rxp": {
  "data": {
   "lineno": 21871,
   "symbols_in_volume": [
    "astropy._erfa.core.check_trailing_shape",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.rxpv": {
  "data": {
   "lineno": 21939,
   "symbols_in_volume": [
    "astropy._erfa.core.check_trailing_shape",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.s00": {
  "data": {
   "lineno": 13678,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.s00a": {
  "data": {
   "lineno": 13803,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.s00b": {
  "data": {
   "lineno": 13917,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.s06": {
  "data": {
   "lineno": 14031,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.s06a": {
  "data": {
   "lineno": 14153,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.s2c": {
  "data": {
   "lineno": 22390,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.s2p": {
  "data": {
   "lineno": 22450,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.s2pv": {
  "data": {
   "lineno": 22517,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.sofa_version": {
  "data": {
   "lineno": 22625
  },
  "type": "function"
 },
 "astropy._erfa.core.sp00": {
  "data": {
   "lineno": 14269,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.starpm": {
  "data": {
   "lineno": 17384,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.starpv": {
  "data": {
   "lineno": 16637,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.taitt": {
  "data": {
   "lineno": 19617,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.taiut1": {
  "data": {
   "lineno": 19705,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.taiutc": {
  "data": {
   "lineno": 19796,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.tcbtdb": {
  "data": {
   "lineno": 19907,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.tcgtt": {
  "data": {
   "lineno": 20009,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.tdbtcb": {
  "data": {
   "lineno": 20096,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.tdbtt": {
  "data": {
   "lineno": 20198,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.tf2a": {
  "data": {
   "lineno": 21695,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.tf2d": {
  "data": {
   "lineno": 21783,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.trxp": {
  "data": {
   "lineno": 22007,
   "symbols_in_volume": [
    "astropy._erfa.core.check_trailing_shape",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.trxpv": {
  "data": {
   "lineno": 22076,
   "symbols_in_volume": [
    "astropy._erfa.core.check_trailing_shape",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.tttai": {
  "data": {
   "lineno": 20299,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.tttcg": {
  "data": {
   "lineno": 20387,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.tttdb": {
  "data": {
   "lineno": 20474,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.ttut1": {
  "data": {
   "lineno": 20575,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.ut1tai": {
  "data": {
   "lineno": 20665,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.ut1tt": {
  "data": {
   "lineno": 20756,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.ut1utc": {
  "data": {
   "lineno": 20846,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.utctai": {
  "data": {
   "lineno": 20964,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.utcut1": {
  "data": {
   "lineno": 21077,
   "symbols_in_volume": [
    "astropy._erfa.core.check_errwarn",
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.version": {
  "data": {
   "lineno": 22593
  },
  "type": "function"
 },
 "astropy._erfa.core.version_major": {
  "data": {
   "lineno": 22601
  },
  "type": "function"
 },
 "astropy._erfa.core.version_micro": {
  "data": {
   "lineno": 22617
  },
  "type": "function"
 },
 "astropy._erfa.core.version_minor": {
  "data": {
   "lineno": 22609
  },
  "type": "function"
 },
 "astropy._erfa.core.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy._erfa.core.xy06": {
  "data": {
   "lineno": 14361,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.xys00a": {
  "data": {
   "lineno": 14495,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.xys00b": {
  "data": {
   "lineno": 14606,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.core.xys06a": {
  "data": {
   "lineno": 14717,
   "symbols_in_volume": [
    "astropy._erfa.core.numpy",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.tests": {
  "data": {},
  "type": "module"
 },
 "astropy._erfa.tests.test_erfa": {
  "data": {},
  "type": "module"
 },
 "astropy._erfa.tests.test_erfa.erfa": {
  "data": {
   "shadows": "core"
  },
  "type": "import"
 },
 "astropy._erfa.tests.test_erfa.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy._erfa.tests.test_erfa.test_angle_ops": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.tests.test_erfa.test_erfa_wrapper": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "id",
    "numpy.dtype",
    "numpy.linspace",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.tests.test_erfa.test_errwarn_reporting": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "catch_warnings",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.tests.test_erfa.test_matrix_in": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "numpy.empty",
    "numpy.eye",
    "numpy.roll",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.tests.test_erfa.test_spherical_cartesian": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.tests.test_erfa.test_structs": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy._erfa.tests.test_erfa.test_vector_inouts": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy._get_bibtex": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "astropy.os",
    "astropy.re",
    "len",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy._initialize_astropy": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "BaseException",
    "Exception",
    "ImportError",
    "__package__",
    "_rollback_import",
    "astropy._is_astropy_source",
    "astropy._rebuild_extensions",
    "astropy.os",
    "isinstance",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "astropy._initialize_astropy._rollback_import": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ImportError",
    "_teardown_log",
    "astropy.sys",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy._is_astropy_setup": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "astropy._is_astropy_source",
    "astropy.os",
    "astropy.sys",
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy._is_astropy_source": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "astropy.os"
   ]
  },
  "type": "function"
 },
 "astropy._rebuild_extensions": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "ImportError",
    "OSError",
    "Spinner",
    "astropy.os",
    "astropy.subprocess",
    "astropy.sys",
    "astropy.time",
    "next",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.analytic_functions": {
  "data": {},
  "type": "module"
 },
 "astropy.analytic_functions.blackbody": {
  "data": {},
  "type": "module"
 },
 "astropy.analytic_functions.blackbody.FLAM": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "astropy.analytic_functions.blackbody.FNU": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "astropy.analytic_functions.blackbody.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "astropy.analytic_functions.blackbody._bb": {
  "data": {
   "shadows": "blackbody"
  },
  "type": "import"
 },
 "astropy.analytic_functions.blackbody.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.analytic_functions.blackbody.blackbody_lambda": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "deprecated"
   ]
  },
  "type": "function"
 },
 "astropy.analytic_functions.blackbody.blackbody_nu": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "deprecated"
   ]
  },
  "type": "function"
 },
 "astropy.analytic_functions.blackbody.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.analytic_functions.blackbody.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.analytic_functions.blackbody.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.analytic_functions.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.analytic_functions.tests.test_blackbody": {
  "data": {},
  "type": "module"
 },
 "astropy.analytic_functions.tests.test_blackbody.__doctest_skip__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "astropy.analytic_functions.tests.test_blackbody.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.analytic_functions.tests.test_blackbody.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.analytic_functions.tests.test_blackbody.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.analytic_functions.tests.test_blackbody.test_deprecated_blackbodies": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "blackbody_lambda",
    "blackbody_nu",
    "catch_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.analytic_functions.tests.test_blackbody.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.analytic_functions.tests.test_blackbody.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.builtins": {
  "data": {
   "shadows": "__builtin__"
  },
  "type": "import"
 },
 "astropy.conf": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "astropy.config": {
  "data": {},
  "type": "module"
 },
 "astropy.config.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.config.affiliated": {
  "data": {},
  "type": "module"
 },
 "astropy.config.affiliated.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "astropy.config.affiliated.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.config.affiliated.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.config.affiliated.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.config.affiliated.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.config.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.config.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.config.setup_package": {
  "data": {},
  "type": "module"
 },
 "astropy.config.setup_package.get_package_data": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.config.setup_package.requires_2to3": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "astropy.config.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.config.tests.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.config.tests.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.config.tests.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.config.tests.test_configs": {
  "data": {},
  "type": "module"
 },
 "astropy.config.tests.test_configs.TestAliasRead": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.config.tests.test_configs.TestAliasRead.setup_class": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "get_pkg_data_filename"
   ]
  },
  "type": "function"
 },
 "astropy.config.tests.test_configs.TestAliasRead.teardown_class": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "astropy.utils.data.conf.reload"
   ]
  },
  "type": "function"
 },
 "astropy.config.tests.test_configs.TestAliasRead.test_alias_read": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "astropy.utils.data.conf.reload",
    "astropy.utils.data.conf.remote_timeout",
    "catch_warnings",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.config.tests.test_configs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.config.tests.test_configs.conf": {
  "data": {
   "shadows": "astropy.utils.data.conf"
  },
  "type": "import"
 },
 "astropy.config.tests.test_configs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.config.tests.test_configs.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "astropy.config.tests.test_configs.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.config.tests.test_configs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.config.tests.test_configs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.config.tests.test_configs.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "astropy.config.tests.test_configs.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.config.tests.test_configs.test_config_file": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "get_config",
    "reload_config"
   ]
  },
  "type": "function"
 },
 "astropy.config.tests.test_configs.test_config_noastropy_fallback": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "OSError",
    "astropy.config.tests.test_configs.pytest",
    "astropy.config.tests.test_configs.test_configitem",
    "catch_warnings",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.config.tests.test_configs.test_config_noastropy_fallback.osraiser": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "OSError"
   ]
  },
  "type": "function"
 },
 "astropy.config.tests.test_configs.test_configitem": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "Conf",
    "ConfigItem",
    "ci",
    "ci.description",
    "ci.module",
    "ci.set",
    "get_config"
   ]
  },
  "type": "function"
 },
 "astropy.config.tests.test_configs.test_configitem.Conf": {
  "data": {
   "lineno": 98
  },
  "type": "class"
 },
 "astropy.config.tests.test_configs.test_configitem_options": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "Conf",
    "ConfigItem",
    "TypeError",
    "astropy.config.tests.test_configs.io",
    "astropy.config.tests.test_configs.pytest",
    "cio",
    "cio.set",
    "get_config",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.config.tests.test_configs.test_configitem_options.Conf": {
  "data": {
   "lineno": 157
  },
  "type": "class"
 },
 "astropy.config.tests.test_configs.test_configitem_setters": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "Conf",
    "Exception"
   ]
  },
  "type": "function"
 },
 "astropy.config.tests.test_configs.test_configitem_setters.Conf": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "ConfigItem"
   ]
  },
  "type": "class"
 },
 "astropy.config.tests.test_configs.test_configitem_types": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "Conf",
    "ConfigItem",
    "TypeError",
    "astropy.config.tests.test_configs.pytest",
    "bool",
    "float",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.config.tests.test_configs.test_configitem_types.Conf": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ConfigItem"
   ]
  },
  "type": "class"
 },
 "astropy.config.tests.test_configs.test_configitem_unicode": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "Conf",
    "ConfigItem",
    "astropy.utils.data.conf",
    "cio",
    "cio.module",
    "get_config",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.config.tests.test_configs.test_configitem_unicode.Conf": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "cio"
   ]
  },
  "type": "class"
 },
 "astropy.config.tests.test_configs.test_empty_config_file": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "get_content",
    "is_unedited_config_file"
   ]
  },
  "type": "function"
 },
 "astropy.config.tests.test_configs.test_empty_config_file.get_content": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "astropy.config.tests.test_configs.io",
    "get_pkg_data_filename"
   ]
  },
  "type": "function"
 },
 "astropy.config.tests.test_configs.test_no_home": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "astropy.config.tests.test_configs.os",
    "astropy.config.tests.test_configs.subprocess",
    "astropy.config.tests.test_configs.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.config.tests.test_configs.test_paths": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "astropy.config.tests.test_configs.test_set_temp_cache": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "astropy.config.tests.test_configs.os",
    "str",
    "test_func"
   ]
  },
  "type": "function"
 },
 "astropy.config.tests.test_configs.test_set_temp_cache.test_func": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "astropy.config.tests.test_configs.test_set_temp_config": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "astropy.config.tests.test_configs.os",
    "str",
    "test_func"
   ]
  },
  "type": "function"
 },
 "astropy.config.tests.test_configs.test_set_temp_config.test_func": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "astropy.config.tests.test_configs.test_unedited_template": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "astropy.config.tests.test_configs.os"
   ]
  },
  "type": "function"
 },
 "astropy.config.tests.test_configs.test_warning_move_to_top_level": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "astropy.utils.data.conf.max_lines",
    "astropy.utils.data.conf.reload",
    "catch_warnings",
    "get_pkg_data_filename",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.config.tests.test_configs.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.config.tests.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.config.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.conftest": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.conftest.matplotlib",
    "enable_deprecations_as_exceptions"
   ]
  },
  "type": "module"
 },
 "astropy.conftest.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "astropy.constants": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__doc__",
    "astropy.constants._lines",
    "astropy.constants.itertools",
    "isinstance",
    "locals",
    "sorted",
    "vars"
   ]
  },
  "type": "module"
 },
 "astropy.constants._lines": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "astropy.constants.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.constants.astropyconst13": {
  "data": {
   "symbols_in_volume": [
    "astropy.constants.astropyconst13.itertools",
    "isinstance",
    "locals",
    "sorted",
    "vars"
   ]
  },
  "type": "module"
 },
 "astropy.constants.astropyconst13.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.constants.astropyconst13.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.constants.astropyconst13.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "astropy.constants.astropyconst13.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.constants.astropyconst13.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.constants.astropyconst20": {
  "data": {
   "symbols_in_volume": [
    "astropy.constants.astropyconst20.itertools",
    "isinstance",
    "locals",
    "sorted",
    "vars"
   ]
  },
  "type": "module"
 },
 "astropy.constants.astropyconst20.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.constants.astropyconst20.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.constants.astropyconst20.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "astropy.constants.astropyconst20.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.constants.astropyconst20.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.constants.cgs": {
  "data": {
   "symbols_in_volume": [
    "astropy.constants.cgs.itertools",
    "isinstance",
    "locals",
    "sorted",
    "vars"
   ]
  },
  "type": "module"
 },
 "astropy.constants.cgs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.constants.cgs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.constants.cgs.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "astropy.constants.cgs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.constants.cgs.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.constants.codata2010": {
  "data": {
   "symbols_in_volume": [
    "Constant",
    "astropy.constants.codata2010.CODATA2010",
    "astropy.constants.codata2010.EMCODATA2010",
    "astropy.constants.codata2010.c",
    "astropy.constants.codata2010.e",
    "astropy.constants.codata2010.h",
    "numpy.pi"
   ]
  },
  "type": "module"
 },
 "astropy.constants.codata2010.CODATA2010": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "class"
 },
 "astropy.constants.codata2010.CODATA2010.__new__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "astropy.constants.codata2010.CODATA2010",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.constants.codata2010.EMCODATA2010": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "astropy.constants.codata2010.CODATA2010"
   ]
  },
  "type": "class"
 },
 "astropy.constants.codata2010.G": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "astropy.constants.codata2010.N_A": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "astropy.constants.codata2010.R": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "astropy.constants.codata2010.Ryd": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "astropy.constants.codata2010.a0": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "astropy.constants.codata2010.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.constants.codata2010.alpha": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "astropy.constants.codata2010.atm": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "astropy.constants.codata2010.b_wien": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "astropy.constants.codata2010.c": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "astropy.constants.codata2010.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.constants.codata2010.e": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "astropy.constants.codata2010.e_emu": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "astropy.constants.codata2010.e_esu": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "astropy.constants.codata2010.e_gauss": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "astropy.constants.codata2010.eps0": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "astropy.constants.codata2010.g0": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "astropy.constants.codata2010.h": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "astropy.constants.codata2010.hbar": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "astropy.constants.codata2010.k_B": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "astropy.constants.codata2010.m_e": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "astropy.constants.codata2010.m_n": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "astropy.constants.codata2010.m_p": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "astropy.constants.codata2010.mu0": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "astropy.constants.codata2010.muB": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "astropy.constants.codata2010.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.constants.codata2010.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.constants.codata2010.sigma_T": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "astropy.constants.codata2010.sigma_sb": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "astropy.constants.codata2010.u": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "astropy.constants.codata2010.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.constants.codata2014": {
  "data": {
   "symbols_in_volume": [
    "astropy.constants.codata2014.CODATA2014",
    "astropy.constants.codata2014.EMCODATA2014",
    "astropy.constants.codata2014.c",
    "astropy.constants.codata2014.e",
    "numpy.pi"
   ]
  },
  "type": "module"
 },
 "astropy.constants.codata2014.CODATA2014": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "class"
 },
 "astropy.constants.codata2014.EMCODATA2014": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "astropy.constants.codata2014.CODATA2014"
   ]
  },
  "type": "class"
 },
 "astropy.constants.codata2014.G": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "astropy.constants.codata2014.N_A": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "astropy.constants.codata2014.R": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "astropy.constants.codata2014.Ryd": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "astropy.constants.codata2014.a0": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "astropy.constants.codata2014.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.constants.codata2014.alpha": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "astropy.constants.codata2014.atm": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "astropy.constants.codata2014.b_wien": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "astropy.constants.codata2014.c": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "astropy.constants.codata2014.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.constants.codata2014.e": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "astropy.constants.codata2014.e_emu": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "astropy.constants.codata2014.e_esu": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "astropy.constants.codata2014.e_gauss": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "astropy.constants.codata2014.eps0": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "astropy.constants.codata2014.g0": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "astropy.constants.codata2014.h": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "astropy.constants.codata2014.hbar": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "astropy.constants.codata2014.k_B": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "astropy.constants.codata2014.m_e": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "astropy.constants.codata2014.m_n": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "astropy.constants.codata2014.m_p": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "astropy.constants.codata2014.mu0": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "astropy.constants.codata2014.muB": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "astropy.constants.codata2014.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.constants.codata2014.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.constants.codata2014.sigma_T": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "astropy.constants.codata2014.sigma_sb": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "astropy.constants.codata2014.u": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "astropy.constants.codata2014.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.constants.constant": {
  "data": {},
  "type": "module"
 },
 "astropy.constants.constant.Constant": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "astropy.constants.constant.ConstantMeta",
    "set"
   ]
  },
  "type": "class"
 },
 "astropy.constants.constant.Constant.__array_finalize__": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "astropy.constants.constant.Constant.__new__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "TypeError",
    "astropy.constants.constant.warnings",
    "getattr",
    "hasattr",
    "numpy.array",
    "setattr"
   ]
  },
  "type": "function"
 },
 "astropy.constants.constant.Constant.__quantity_subclass__": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "astropy.constants.constant.Constant",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.constants.constant.Constant.__repr__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.constants.constant.Constant.__str__": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "astropy.constants.constant.Constant._unit": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "Unit"
   ]
  },
  "type": "function"
 },
 "astropy.constants.constant.Constant.abbrev": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.constants.constant.Constant.cgs": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "astropy.constants.constant.Constant",
    "property",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.constants.constant.Constant.copy": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "astropy.constants.constant.Constant.name": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.constants.constant.Constant.reference": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.constants.constant.Constant.si": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "astropy.constants.constant.Constant",
    "property",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.constants.constant.Constant.system": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.constants.constant.Constant.uncertainty": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.constants.constant.ConstantMeta": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "astropy.constants.constant.ConstantMeta.__new__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "astropy.constants.constant.ConstantMeta",
    "astropy.constants.constant.types",
    "isinstance",
    "set",
    "super",
    "vars",
    "wrap"
   ]
  },
  "type": "function"
 },
 "astropy.constants.constant.ConstantMeta.__new__.wrap": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "astropy.constants.constant.ConstantMeta.__new__.wrap.wrapper": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "TypeError",
    "astropy.constants.constant.functools",
    "meth",
    "sorted"
   ]
  },
  "type": "function"
 },
 "astropy.constants.constant.EMConstant": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "astropy.constants.constant.Constant"
   ]
  },
  "type": "class"
 },
 "astropy.constants.constant.EMConstant.cgs": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "TypeError",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.constants.constant.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "astropy.constants.constant.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.constants.constant.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.constants.constant.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "astropy.constants.constant.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.constants.constant.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.constants.constant.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "astropy.constants.constant.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.constants.constant.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.constants.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.constants.iau2012": {
  "data": {
   "symbols_in_volume": [
    "astropy.constants.iau2012.IAU2012",
    "astropy.constants.iau2012.au",
    "numpy.radians",
    "numpy.tan"
   ]
  },
  "type": "module"
 },
 "astropy.constants.iau2012.IAU2012": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "class"
 },
 "astropy.constants.iau2012.L_bol0": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "astropy.constants.iau2012.L_sun": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "astropy.constants.iau2012.M_earth": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "astropy.constants.iau2012.M_jup": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "astropy.constants.iau2012.M_sun": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "astropy.constants.iau2012.R_earth": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "astropy.constants.iau2012.R_jup": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "astropy.constants.iau2012.R_sun": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "astropy.constants.iau2012.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.constants.iau2012.au": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "astropy.constants.iau2012.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.constants.iau2012.kpc": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "astropy.constants.iau2012.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.constants.iau2012.pc": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "astropy.constants.iau2012.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.constants.iau2012.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.constants.iau2015": {
  "data": {
   "symbols_in_volume": [
    "astropy.constants.iau2015.GM_earth",
    "astropy.constants.iau2015.GM_jup",
    "astropy.constants.iau2015.GM_sun",
    "astropy.constants.iau2015.IAU2015",
    "astropy.constants.iau2015.au",
    "numpy.radians",
    "numpy.tan"
   ]
  },
  "type": "module"
 },
 "astropy.constants.iau2015.GM_earth": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "astropy.constants.iau2015.GM_jup": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "astropy.constants.iau2015.GM_sun": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "astropy.constants.iau2015.IAU2015": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "class"
 },
 "astropy.constants.iau2015.L_bol0": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "astropy.constants.iau2015.L_sun": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "astropy.constants.iau2015.M_earth": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "astropy.constants.iau2015.M_jup": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "astropy.constants.iau2015.M_sun": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "astropy.constants.iau2015.R_earth": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "astropy.constants.iau2015.R_jup": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "astropy.constants.iau2015.R_sun": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "astropy.constants.iau2015.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.constants.iau2015.au": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "astropy.constants.iau2015.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.constants.iau2015.kpc": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "astropy.constants.iau2015.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.constants.iau2015.pc": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "astropy.constants.iau2015.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.constants.iau2015.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.constants.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "astropy.constants.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.constants.setup_package": {
  "data": {},
  "type": "module"
 },
 "astropy.constants.setup_package.requires_2to3": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "astropy.constants.si": {
  "data": {
   "symbols_in_volume": [
    "astropy.constants.si.itertools",
    "isinstance",
    "locals",
    "sorted",
    "vars"
   ]
  },
  "type": "module"
 },
 "astropy.constants.si.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.constants.si.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.constants.si.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "astropy.constants.si.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.constants.si.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.constants.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.constants.tests.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.constants.tests.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.constants.tests.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.constants.tests.test_constant": {
  "data": {},
  "type": "module"
 },
 "astropy.constants.tests.test_constant.Q": {
  "data": {
   "shadows": "Quantity"
  },
  "type": "import"
 },
 "astropy.constants.tests.test_constant.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.constants.tests.test_constant.const": {
  "data": {
   "shadows": "constants"
  },
  "type": "import"
 },
 "astropy.constants.tests.test_constant.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "astropy.constants.tests.test_constant.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.constants.tests.test_constant.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.constants.tests.test_constant.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.constants.tests.test_constant.test_b_wien": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "round"
   ]
  },
  "type": "function"
 },
 "astropy.constants.tests.test_constant.test_c": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "astropy.constants.tests.test_constant.test_copy": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "astropy.constants.tests.test_constant.copy"
   ]
  },
  "type": "function"
 },
 "astropy.constants.tests.test_constant.test_e": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "TypeError",
    "astropy.constants.tests.test_constant.pytest",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.constants.tests.test_constant.test_g0": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "astropy.constants.tests.test_constant.test_h": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "astropy.constants.tests.test_constant.test_unit": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "isinstance",
    "vars"
   ]
  },
  "type": "function"
 },
 "astropy.constants.tests.test_constant.test_view": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "hasattr",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.constants.tests.test_constant.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.constants.tests.test_constant.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.constants.tests.test_pickle": {
  "data": {},
  "type": "module"
 },
 "astropy.constants.tests.test_pickle.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.constants.tests.test_pickle.const": {
  "data": {
   "shadows": "constants"
  },
  "type": "import"
 },
 "astropy.constants.tests.test_pickle.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.constants.tests.test_pickle.originals": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "astropy.constants.tests.test_pickle.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.constants.tests.test_pickle.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.constants.tests.test_pickle.test_new_constant": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "astropy.constants.tests.test_pickle.originals",
    "astropy.constants.tests.test_pickle.pytest",
    "astropy.constants.tests.test_pickle.xfails",
    "check_pickling_recovery",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.constants.tests.test_pickle.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.constants.tests.test_pickle.xfails": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "astropy.constants.tests.test_prior_version": {
  "data": {},
  "type": "module"
 },
 "astropy.constants.tests.test_prior_version.Q": {
  "data": {
   "shadows": "Quantity"
  },
  "type": "import"
 },
 "astropy.constants.tests.test_prior_version.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.constants.tests.test_prior_version.const": {
  "data": {
   "shadows": "constants"
  },
  "type": "import"
 },
 "astropy.constants.tests.test_prior_version.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "astropy.constants.tests.test_prior_version.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.constants.tests.test_prior_version.h_current": {
  "data": {
   "shadows": "h"
  },
  "type": "import"
 },
 "astropy.constants.tests.test_prior_version.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.constants.tests.test_prior_version.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.constants.tests.test_prior_version.test_b_wien": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "round"
   ]
  },
  "type": "function"
 },
 "astropy.constants.tests.test_prior_version.test_c": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "astropy.constants.tests.test_prior_version.test_copy": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "astropy.constants.tests.test_prior_version.copy"
   ]
  },
  "type": "function"
 },
 "astropy.constants.tests.test_prior_version.test_e": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "TypeError",
    "astropy.constants.tests.test_prior_version.pytest",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.constants.tests.test_prior_version.test_g0": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "astropy.constants.tests.test_prior_version.test_h": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "astropy.constants.tests.test_prior_version.test_unit": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "isinstance",
    "vars"
   ]
  },
  "type": "function"
 },
 "astropy.constants.tests.test_prior_version.test_view": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "hasattr",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.constants.tests.test_prior_version.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.constants.tests.test_prior_version.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.constants.tests.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.constants.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.convolution": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.convolution.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.convolution.convolve": {
  "data": {},
  "type": "module"
 },
 "astropy.convolution.convolve.BOUNDARY_OPTIONS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "astropy.convolution.convolve.__doctest_skip__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "astropy.convolution.convolve.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.convolution.convolve.convolve": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "Exception",
    "Kernel1D",
    "Kernel2D",
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "astropy.convolution.convolve.BOUNDARY_OPTIONS",
    "convolve1d_boundary_extend",
    "convolve1d_boundary_fill",
    "convolve1d_boundary_none",
    "convolve1d_boundary_wrap",
    "convolve2d_boundary_extend",
    "convolve2d_boundary_fill",
    "convolve2d_boundary_none",
    "convolve2d_boundary_wrap",
    "convolve3d_boundary_extend",
    "convolve3d_boundary_fill",
    "convolve3d_boundary_none",
    "convolve3d_boundary_wrap",
    "float",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.float",
    "numpy.isclose",
    "numpy.isnan",
    "numpy.ma.is_masked",
    "numpy.nan",
    "numpy.ndarray",
    "support_nddata"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.convolve.convolve_fft": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "Exception",
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "astropy.convolution.convolve.warnings",
    "deprecated_renamed_argument",
    "enumerate",
    "fftn",
    "human_file_size",
    "ifftn",
    "int",
    "isinstance",
    "normalize_kernel",
    "numpy.abs",
    "numpy.all",
    "numpy.array",
    "numpy.asarray",
    "numpy.ceil",
    "numpy.complex",
    "numpy.dtype",
    "numpy.fft.fftn",
    "numpy.fft.ifftn",
    "numpy.fft.ifftshift",
    "numpy.int64",
    "numpy.isfinite",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.isscalar",
    "numpy.log2",
    "numpy.ma.is_masked",
    "numpy.max",
    "numpy.nan",
    "numpy.ones",
    "numpy.product",
    "numpy.zeros",
    "range",
    "slice",
    "support_nddata",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.convolve.convolve_models": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "ValueError",
    "_make_arithmetic_operator",
    "astropy.convolution.convolve.convolve",
    "astropy.convolution.convolve.convolve_fft",
    "functools.partial"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.convolve.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.convolution.convolve.interpolate_replace_nans": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "astropy.convolution.convolve.convolve",
    "numpy.any",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.convolve.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.convolution.convolve.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "astropy.convolution.convolve.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.convolution.convolve.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.convolution.convolve.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.convolution.convolve.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.convolution.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.convolution.kernels": {
  "data": {},
  "type": "module"
 },
 "astropy.convolution.kernels.AiryDisk2DKernel": {
  "data": {
   "lineno": 676
  },
  "type": "class"
 },
 "astropy.convolution.kernels.AiryDisk2DKernel.__init__": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "astropy.convolution.kernels.AiryDisk2DKernel",
    "astropy.convolution.kernels._round_up_to_odd_integer",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.kernels.Box1DKernel": {
  "data": {
   "lineno": 159
  },
  "type": "class"
 },
 "astropy.convolution.kernels.Box1DKernel.__init__": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "astropy.convolution.kernels.Box1DKernel",
    "astropy.convolution.kernels._round_up_to_odd_integer",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.kernels.Box2DKernel": {
  "data": {
   "lineno": 227
  },
  "type": "class"
 },
 "astropy.convolution.kernels.Box2DKernel.__init__": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "astropy.convolution.kernels.Box2DKernel",
    "astropy.convolution.kernels._round_up_to_odd_integer",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.kernels.CustomKernel": {
  "data": {
   "lineno": 947
  },
  "type": "class"
 },
 "astropy.convolution.kernels.CustomKernel.__init__": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "astropy.convolution.kernels.CustomKernel",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.kernels.CustomKernel.array": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "KernelSizeError",
    "TypeError",
    "all",
    "bool",
    "isinstance",
    "list",
    "numpy.all",
    "numpy.array",
    "numpy.float64",
    "numpy.logical_or",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.kernels.Gaussian1DKernel": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "astropy.convolution.kernels.Gaussian1DKernel.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "astropy.convolution.kernels.Gaussian1DKernel",
    "astropy.convolution.kernels._round_up_to_odd_integer",
    "numpy.abs",
    "numpy.pi",
    "numpy.sqrt",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.kernels.Gaussian2DKernel": {
  "data": {
   "lineno": 93
  },
  "type": "class"
 },
 "astropy.convolution.kernels.Gaussian2DKernel.__init__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "astropy.convolution.kernels.Gaussian2DKernel",
    "astropy.convolution.kernels._round_up_to_odd_integer",
    "numpy.abs",
    "numpy.pi",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.kernels.MexicanHat1DKernel": {
  "data": {
   "lineno": 533
  },
  "type": "class"
 },
 "astropy.convolution.kernels.MexicanHat1DKernel.__init__": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "astropy.convolution.kernels.MexicanHat1DKernel",
    "astropy.convolution.kernels._round_up_to_odd_integer",
    "numpy.abs",
    "numpy.pi",
    "numpy.sqrt",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.kernels.MexicanHat2DKernel": {
  "data": {
   "lineno": 603
  },
  "type": "class"
 },
 "astropy.convolution.kernels.MexicanHat2DKernel.__init__": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "astropy.convolution.kernels.MexicanHat2DKernel",
    "astropy.convolution.kernels._round_up_to_odd_integer",
    "numpy.abs",
    "numpy.pi",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.kernels.Model1DKernel": {
  "data": {
   "lineno": 805
  },
  "type": "class"
 },
 "astropy.convolution.kernels.Model1DKernel.__init__": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "TypeError",
    "astropy.convolution.kernels.Model1DKernel",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.kernels.Model2DKernel": {
  "data": {
   "lineno": 869
  },
  "type": "class"
 },
 "astropy.convolution.kernels.Model2DKernel.__init__": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "TypeError",
    "astropy.convolution.kernels.Model2DKernel",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.kernels.Moffat2DKernel": {
  "data": {
   "lineno": 739
  },
  "type": "class"
 },
 "astropy.convolution.kernels.Moffat2DKernel.__init__": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "astropy.convolution.kernels.Moffat2DKernel",
    "astropy.convolution.kernels._round_up_to_odd_integer",
    "numpy.pi",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.kernels.PSFKernel": {
  "data": {
   "lineno": 937
  },
  "type": "class"
 },
 "astropy.convolution.kernels.PSFKernel.__init__": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.kernels.Ring2DKernel": {
  "data": {
   "lineno": 355
  },
  "type": "class"
 },
 "astropy.convolution.kernels.Ring2DKernel.__init__": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "astropy.convolution.kernels.Ring2DKernel",
    "astropy.convolution.kernels._round_up_to_odd_integer",
    "numpy.pi",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.kernels.Tophat2DKernel": {
  "data": {
   "lineno": 297
  },
  "type": "class"
 },
 "astropy.convolution.kernels.Tophat2DKernel.__init__": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "astropy.convolution.kernels.Tophat2DKernel",
    "astropy.convolution.kernels._round_up_to_odd_integer",
    "numpy.pi",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.kernels.Trapezoid1DKernel": {
  "data": {
   "lineno": 415
  },
  "type": "class"
 },
 "astropy.convolution.kernels.Trapezoid1DKernel.__init__": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "astropy.convolution.kernels.Trapezoid1DKernel",
    "astropy.convolution.kernels._round_up_to_odd_integer",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.kernels.TrapezoidDisk2DKernel": {
  "data": {
   "lineno": 473
  },
  "type": "class"
 },
 "astropy.convolution.kernels.TrapezoidDisk2DKernel.__init__": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "astropy.convolution.kernels.TrapezoidDisk2DKernel",
    "astropy.convolution.kernels._round_up_to_odd_integer",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.kernels.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "astropy.convolution.kernels._round_up_to_odd_integer": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "astropy.convolution.kernels.math",
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.kernels.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.convolution.kernels.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.convolution.kernels.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "astropy.convolution.kernels.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.convolution.kernels.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.convolution.kernels.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.convolution.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.convolution.setup_package": {
  "data": {},
  "type": "module"
 },
 "astropy.convolution.setup_package.requires_2to3": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "astropy.convolution.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.convolution.tests.test_convolve": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.convolution.tests.test_convolve.BOUNDARY_OPTIONS",
    "astropy.convolution.tests.test_convolve.VALID_DTYPES",
    "astropy.convolution.tests.test_convolve.itertools",
    "list",
    "zip"
   ]
  },
  "type": "module"
 },
 "astropy.convolution.tests.test_convolve.BOUNDARIES_AND_CONVOLUTIONS": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_convolve.BOUNDARY_OPTIONS": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_convolve.HAS_SCIPY": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_convolve.NANHANDLING_OPTIONS": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_convolve.NORMALIZE_OPTIONS": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_convolve.PRESERVE_NAN_OPTIONS": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_convolve.TestConvolve1D": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.convolution.tests.test_convolve.TestConvolve1D.test_dtype": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve.VALID_DTYPES",
    "astropy.convolution.tests.test_convolve.pytest",
    "convolve",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve.TestConvolve1D.test_input_unmodified": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "convolve",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve.TestConvolve1D.test_list": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "convolve",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve.TestConvolve1D.test_uniform_3": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve.BOUNDARY_OPTIONS",
    "astropy.convolution.tests.test_convolve.pytest",
    "convolve",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve.TestConvolve1D.test_uniform_3_withnan": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve.BOUNDARY_OPTIONS",
    "astropy.convolution.tests.test_convolve.NANHANDLING_OPTIONS",
    "astropy.convolution.tests.test_convolve.NORMALIZE_OPTIONS",
    "astropy.convolution.tests.test_convolve.PRESERVE_NAN_OPTIONS",
    "astropy.convolution.tests.test_convolve.itertools",
    "astropy.convolution.tests.test_convolve.pytest",
    "convolve",
    "numpy.array",
    "numpy.isnan",
    "numpy.nan",
    "numpy.nan_to_num",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve.TestConvolve1D.test_unity_1_none": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve.BOUNDARIES_AND_CONVOLUTIONS",
    "astropy.convolution.tests.test_convolve.pytest",
    "convfunc",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve.TestConvolve1D.test_unity_3": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve.BOUNDARY_OPTIONS",
    "astropy.convolution.tests.test_convolve.pytest",
    "convolve",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve.TestConvolve1D.test_unity_3_withnan": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve.BOUNDARY_OPTIONS",
    "astropy.convolution.tests.test_convolve.NANHANDLING_OPTIONS",
    "astropy.convolution.tests.test_convolve.NORMALIZE_OPTIONS",
    "astropy.convolution.tests.test_convolve.PRESERVE_NAN_OPTIONS",
    "astropy.convolution.tests.test_convolve.itertools",
    "astropy.convolution.tests.test_convolve.pytest",
    "convolve",
    "numpy.all",
    "numpy.array",
    "numpy.isnan",
    "numpy.nan",
    "numpy.nan_to_num"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve.TestConvolve2D": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.convolution.tests.test_convolve.TestConvolve2D.test_dtype": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve.VALID_DTYPES",
    "astropy.convolution.tests.test_convolve.pytest",
    "convolve",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve.TestConvolve2D.test_list": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "convolve",
    "float",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve.TestConvolve2D.test_non_normalized_kernel_2D": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "ValueError",
    "astropy.convolution.tests.test_convolve.BOUNDARY_OPTIONS",
    "astropy.convolution.tests.test_convolve.pytest",
    "convolve",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve.TestConvolve2D.test_uniform_3x3": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve.BOUNDARY_OPTIONS",
    "astropy.convolution.tests.test_convolve.pytest",
    "convolve",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve.TestConvolve2D.test_uniform_3x3_withnanfilled": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "ValueError",
    "astropy.convolution.tests.test_convolve.BOUNDARY_OPTIONS",
    "astropy.convolution.tests.test_convolve.pytest",
    "convolve",
    "numpy.array",
    "numpy.nan",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve.TestConvolve2D.test_uniform_3x3_withnaninterped": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "ValueError",
    "astropy.convolution.tests.test_convolve.BOUNDARY_OPTIONS",
    "astropy.convolution.tests.test_convolve.pytest",
    "convolve",
    "numpy.array",
    "numpy.nan",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve.TestConvolve2D.test_unity_1x1_none": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve.BOUNDARY_OPTIONS",
    "astropy.convolution.tests.test_convolve.pytest",
    "convolve",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve.TestConvolve2D.test_unity_3x3": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve.BOUNDARY_OPTIONS",
    "astropy.convolution.tests.test_convolve.pytest",
    "convolve",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve.TestConvolve2D.test_unity_3x3_withnan": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve.BOUNDARY_OPTIONS",
    "astropy.convolution.tests.test_convolve.pytest",
    "convolve",
    "numpy.all",
    "numpy.array",
    "numpy.isnan",
    "numpy.nan",
    "numpy.nan_to_num"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve.TestConvolve3D": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.convolution.tests.test_convolve.TestConvolve3D.test_dtype": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve.VALID_DTYPES",
    "astropy.convolution.tests.test_convolve.pytest",
    "convolve",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve.TestConvolve3D.test_list": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "convolve",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve.TestConvolve3D.test_uniform_3x3x3": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve.BOUNDARY_OPTIONS",
    "astropy.convolution.tests.test_convolve.pytest",
    "convolve",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve.TestConvolve3D.test_uniform_3x3x3_withnan_filled": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "ValueError",
    "astropy.convolution.tests.test_convolve.BOUNDARY_OPTIONS",
    "astropy.convolution.tests.test_convolve.pytest",
    "convolve",
    "numpy.array",
    "numpy.nan",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve.TestConvolve3D.test_uniform_3x3x3_withnan_interped": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "ValueError",
    "astropy.convolution.tests.test_convolve.BOUNDARY_OPTIONS",
    "astropy.convolution.tests.test_convolve.pytest",
    "convolve",
    "numpy.array",
    "numpy.isfinite",
    "numpy.nan",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal_nulp",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve.TestConvolve3D.test_unity_1x1x1_none": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve.BOUNDARY_OPTIONS",
    "astropy.convolution.tests.test_convolve.pytest",
    "convolve",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve.TestConvolve3D.test_unity_3x3x3": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve.BOUNDARY_OPTIONS",
    "astropy.convolution.tests.test_convolve.pytest",
    "convolve",
    "numpy.all",
    "numpy.array",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve.TestConvolve3D.test_unity_3x3x3_withnan": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve.BOUNDARY_OPTIONS",
    "astropy.convolution.tests.test_convolve.NANHANDLING_OPTIONS",
    "astropy.convolution.tests.test_convolve.itertools",
    "astropy.convolution.tests.test_convolve.pytest",
    "convolve",
    "numpy.all",
    "numpy.array",
    "numpy.isnan",
    "numpy.nan",
    "numpy.nan_to_num",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve.VALID_DTYPES": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_convolve.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve.assert_array_almost_equal_nulp": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal_nulp"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve.fftconvolve": {
  "data": {
   "shadows": "scipy.signal.fftconvolve"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve.test_astropy_convolution_against_numpy": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "convolve",
    "convolve_fft",
    "numpy.array",
    "numpy.convolve",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve.test_astropy_convolution_against_scipy": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve.pytest",
    "convolve",
    "convolve_fft",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "scipy.signal.fftconvolve"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve.test_asymmetric_kernel": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve.BOUNDARIES_AND_CONVOLUTIONS",
    "astropy.convolution.tests.test_convolve.pytest",
    "convolve",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve.test_convolution_consistency": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve.pytest",
    "convolve",
    "convolve_fft",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_fft": {
  "data": {
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve_fft.BOUNDARY_OPTIONS",
    "astropy.convolution.tests.test_convolve_fft.NANTREATMENT_OPTIONS",
    "astropy.convolution.tests.test_convolve_fft.VALID_DTYPES",
    "astropy.convolution.tests.test_convolve_fft.itertools",
    "list"
   ]
  },
  "type": "module"
 },
 "astropy.convolution.tests.test_convolve_fft.BOUNDARY_OPTIONS": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_convolve_fft.NANTREATMENT_OPTIONS": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_convolve_fft.TestConvolve1D": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve_fft.BOUNDARY_OPTIONS",
    "astropy.convolution.tests.test_convolve_fft.NANTREATMENT_OPTIONS",
    "astropy.convolution.tests.test_convolve_fft.itertools",
    "list",
    "numpy.array",
    "numpy.inf",
    "numpy.nan",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.convolution.tests.test_convolve_fft.TestConvolve1D.test_halfity_3": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve_fft.option_names",
    "astropy.convolution.tests.test_convolve_fft.options",
    "astropy.convolution.tests.test_convolve_fft.pytest",
    "convolve_fft",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_fft.TestConvolve1D.test_masked_array": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "convolve_fft",
    "numpy.array",
    "numpy.ma.masked_array",
    "numpy.nan",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_fft.TestConvolve1D.test_nan_fill": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "convolve_fft",
    "numpy.array",
    "numpy.ma.masked_array",
    "numpy.nan",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_fft.TestConvolve1D.test_normalization_is_respected": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve_fft.option_names",
    "astropy.convolution.tests.test_convolve_fft.options",
    "astropy.convolution.tests.test_convolve_fft.pytest",
    "convolve_fft",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_fft.TestConvolve1D.test_normalize_function": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "convolve_fft",
    "numpy.max",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_fft.TestConvolve1D.test_uniform_3": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve_fft.option_names",
    "astropy.convolution.tests.test_convolve_fft.options",
    "astropy.convolution.tests.test_convolve_fft.pytest",
    "convolve_fft",
    "list",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_fft.TestConvolve1D.test_uniform_3_withnan": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve_fft.option_names",
    "astropy.convolution.tests.test_convolve_fft.options",
    "astropy.convolution.tests.test_convolve_fft.pytest",
    "convolve_fft",
    "list",
    "numpy.array",
    "numpy.nan",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_fft.TestConvolve1D.test_unity_1_none": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve_fft.option_names",
    "astropy.convolution.tests.test_convolve_fft.options",
    "astropy.convolution.tests.test_convolve_fft.pytest",
    "convolve_fft",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_fft.TestConvolve1D.test_unity_1_withnan": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve_fft.option_names",
    "astropy.convolution.tests.test_convolve_fft.pytest",
    "convolve_fft",
    "hasattr",
    "numpy",
    "numpy.array",
    "numpy.asarray",
    "numpy.float16",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_fft.TestConvolve1D.test_unity_3": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve_fft.option_names",
    "astropy.convolution.tests.test_convolve_fft.options",
    "astropy.convolution.tests.test_convolve_fft.pytest",
    "convolve_fft",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_fft.TestConvolve1D.test_unity_3_withnan": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve_fft.option_names",
    "astropy.convolution.tests.test_convolve_fft.options",
    "astropy.convolution.tests.test_convolve_fft.pytest",
    "convolve_fft",
    "hasattr",
    "numpy",
    "numpy.array",
    "numpy.asarray",
    "numpy.float16",
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_fft.TestConvolve2D": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.convolution.tests.test_convolve_fft.TestConvolve2D.test_big_fail": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "MemoryError",
    "ValueError",
    "astropy.convolution.tests.test_convolve_fft.pytest",
    "convolve_fft",
    "numpy.complex",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_fft.TestConvolve2D.test_non_normalized_kernel": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "ValueError",
    "astropy.convolution.tests.test_convolve_fft.BOUNDARY_OPTIONS",
    "astropy.convolution.tests.test_convolve_fft.pytest",
    "convolve_fft",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_fft.TestConvolve2D.test_uniform_3x3": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve_fft.option_names",
    "astropy.convolution.tests.test_convolve_fft.options",
    "astropy.convolution.tests.test_convolve_fft.pytest",
    "convolve_fft",
    "numpy.abs",
    "numpy.all",
    "numpy.array",
    "numpy.nan",
    "numpy.spacing",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_fft.TestConvolve2D.test_uniform_3x3_withnan": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve_fft.option_names",
    "astropy.convolution.tests.test_convolve_fft.options",
    "astropy.convolution.tests.test_convolve_fft.pytest",
    "convolve_fft",
    "numpy.abs",
    "numpy.all",
    "numpy.array",
    "numpy.nan",
    "numpy.spacing",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_fft.TestConvolve2D.test_unity_1x1_none": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve_fft.option_names",
    "astropy.convolution.tests.test_convolve_fft.options",
    "astropy.convolution.tests.test_convolve_fft.pytest",
    "convolve_fft",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_fft.TestConvolve2D.test_unity_3x3": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve_fft.option_names",
    "astropy.convolution.tests.test_convolve_fft.options",
    "astropy.convolution.tests.test_convolve_fft.pytest",
    "convolve_fft",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_fft.TestConvolve2D.test_unity_3x3_withnan": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve_fft.option_names",
    "astropy.convolution.tests.test_convolve_fft.options",
    "astropy.convolution.tests.test_convolve_fft.pytest",
    "convolve_fft",
    "hasattr",
    "numpy",
    "numpy.array",
    "numpy.asarray",
    "numpy.float16",
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_fft.VALID_DTYPES": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_convolve_fft.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_fft.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_fft.assert_array_almost_equal_nulp": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal_nulp"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_fft.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_fft.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_fft.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_fft.option_names": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_convolve_fft.options": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_convolve_fft.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_fft.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_fft.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_kernels": {
  "data": {
   "symbols_in_volume": [
    "Box2DKernel",
    "Gaussian2DKernel",
    "Moffat2DKernel",
    "Tophat2DKernel",
    "astropy.convolution.tests.test_convolve_kernels.KERNELS",
    "astropy.convolution.tests.test_convolve_kernels.SHAPES_ODD",
    "astropy.convolution.tests.test_convolve_kernels.WIDTHS"
   ]
  },
  "type": "module"
 },
 "astropy.convolution.tests.test_convolve_kernels.KERNELS": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_convolve_kernels.SHAPES_EVEN": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_convolve_kernels.SHAPES_ODD": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_convolve_kernels.Test2DConvolutions": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.convolution.tests.test_convolve_kernels.Test2DConvolutions.test_centered_makekernel": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve_kernels.KERNELS",
    "astropy.convolution.tests.test_convolve_kernels.pytest",
    "convolve",
    "convolve_fft",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_kernels.Test2DConvolutions.test_random_makekernel": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve_kernels.KERNELS",
    "astropy.convolution.tests.test_convolve_kernels.pytest",
    "convolve",
    "convolve_fft",
    "numpy.random.randn",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_kernels.Test2DConvolutions.test_smallkernel_Box2DKernel": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "Box2DKernel",
    "astropy.convolution.tests.test_convolve_kernels.SHAPES_ODD",
    "astropy.convolution.tests.test_convolve_kernels.itertools",
    "astropy.convolution.tests.test_convolve_kernels.pytest",
    "convolve",
    "convolve_fft",
    "list",
    "numpy.float",
    "numpy.ones",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_kernels.Test2DConvolutions.test_uniform_smallkernel": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_convolve_kernels.SHAPES_ODD",
    "astropy.convolution.tests.test_convolve_kernels.WIDTHS",
    "astropy.convolution.tests.test_convolve_kernels.itertools",
    "astropy.convolution.tests.test_convolve_kernels.pytest",
    "convolve",
    "convolve_fft",
    "list",
    "numpy.ones",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_kernels.WIDTHS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_convolve_kernels.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_kernels.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_kernels.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_kernels.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_kernels.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_kernels.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_kernels.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_kernels.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_models": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.convolution.tests.test_convolve_models.HAS_SCIPY": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_convolve_models.TestConvolve1DModels": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.convolution.tests.test_convolve_models.TestConvolve1DModels.test_against_scipy": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "convolve_models",
    "kernel",
    "model",
    "model_conv",
    "numpy.arange",
    "numpy.testing.assert_allclose",
    "scipy.signal.fftconvolve"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_models.TestConvolve1DModels.test_against_scipy_with_additional_keywords": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "convolve_models",
    "kernel",
    "model",
    "model_conv",
    "numpy.arange",
    "numpy.testing.assert_allclose",
    "scipy.signal.fftconvolve"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_models.TestConvolve1DModels.test_convolve_box_models": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ans",
    "convolve_models",
    "kernel",
    "model",
    "model_conv",
    "numpy.linspace",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_models.TestConvolve1DModels.test_fitting_convolve_models": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "convolve_models",
    "fake_model",
    "fitted_model",
    "fitter",
    "len",
    "numpy.linspace",
    "numpy.mean",
    "numpy.random.normal",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_models.TestConvolve1DModels.test_is_consistency_with_astropy_convolution": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "convolve_models",
    "eval",
    "model_conv",
    "numpy.arange",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_models.TestConvolve1DModels.test_sum_of_gaussians": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ans",
    "astropy.convolution.tests.test_convolve_models.math",
    "convolve_models",
    "kernel",
    "model",
    "model_conv",
    "numpy.arange",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_models.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_models.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_models.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_models.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_models.fftconvolve": {
  "data": {
   "shadows": "scipy.signal.fftconvolve"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_models.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_models.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_models.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_models.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_models.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_nddata": {
  "data": {},
  "type": "module"
 },
 "astropy.convolution.tests.test_convolve_nddata.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_nddata.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_nddata.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_nddata.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_nddata.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_nddata.test_basic_nddata": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "Gaussian2DKernel",
    "NDData",
    "convolve",
    "convolve_fft",
    "numpy.exp",
    "numpy.mgrid",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_nddata.test_masked_nddata": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "Gaussian2DKernel",
    "NDData",
    "astropy.convolution.tests.test_convolve_nddata.pytest",
    "convfunc",
    "convolve",
    "convolve_fft",
    "numpy.allclose",
    "numpy.isnan",
    "numpy.nan",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_convolve_nddata.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_speeds": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "astropy.convolution.tests.test_convolve_speeds.besttime",
    "astropy.convolution.tests.test_convolve_speeds.max_exponents_fft",
    "astropy.convolution.tests.test_convolve_speeds.max_exponents_linear",
    "astropy.convolution.tests.test_convolve_speeds.setup",
    "astropy.convolution.tests.test_convolve_speeds.statement",
    "astropy.convolution.tests.test_convolve_speeds.timeit",
    "int",
    "min",
    "print",
    "range",
    "zip"
   ]
  },
  "type": "module"
 },
 "astropy.convolution.tests.test_convolve_speeds.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_speeds.besttime": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_convolve_speeds.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_speeds.max_exponents_fft": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_convolve_speeds.max_exponents_linear": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_convolve_speeds.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_speeds.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_speeds.setup": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_convolve_speeds.statement": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_convolve_speeds.timeit": {
  "data": {
   "shadows": "timeit"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_convolve_speeds.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_discretize": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.convolution.tests.test_discretize.HAS_SCIPY": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_discretize.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_discretize.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_discretize.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_discretize.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_discretize.modes": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_discretize.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_discretize.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_discretize.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_discretize.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_discretize.test_dim_exception_1d": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "ValueError",
    "astropy.convolution.tests.test_discretize.pytest",
    "discretize_model"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_discretize.test_dim_exception_1d.f": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_discretize.test_dim_exception_2d": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ValueError",
    "astropy.convolution.tests.test_discretize.pytest",
    "discretize_model"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_discretize.test_dim_exception_2d.f": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_discretize.test_discretize_callable_1d": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "discretize_model",
    "numpy.arange",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_discretize.test_discretize_callable_1d.f": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_discretize.test_discretize_callable_2d": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "discretize_model",
    "numpy.indices",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_discretize.test_discretize_callable_2d.f": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_discretize.test_float_x_range_exception": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "ValueError",
    "astropy.convolution.tests.test_discretize.pytest",
    "discretize_model"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_discretize.test_float_x_range_exception.f": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_discretize.test_float_y_range_exception": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "ValueError",
    "astropy.convolution.tests.test_discretize.pytest",
    "discretize_model"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_discretize.test_float_y_range_exception.f": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_discretize.test_gaussian_eval_1D": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "Gaussian1D",
    "astropy.convolution.tests.test_discretize.modes",
    "astropy.convolution.tests.test_discretize.pytest",
    "discretize_model",
    "model",
    "numpy.arange",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_discretize.test_gaussian_eval_2D": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "Gaussian2D",
    "astropy.convolution.tests.test_discretize.modes",
    "astropy.convolution.tests.test_discretize.pytest",
    "discretize_model",
    "model",
    "numpy.arange",
    "numpy.meshgrid",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_discretize.test_gaussian_eval_2D_integrate_mode": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "Gaussian2D",
    "astropy.convolution.tests.test_discretize.pytest",
    "discretize_model",
    "model",
    "numpy.arange",
    "numpy.meshgrid",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_discretize.test_models_1D": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_discretize.test_models_2D": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_discretize.test_pixel_sum_1D": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_discretize.itertools",
    "astropy.convolution.tests.test_discretize.modes",
    "astropy.convolution.tests.test_discretize.pytest",
    "astropy.convolution.tests.test_discretize.test_models_1D",
    "create_model",
    "discretize_model",
    "list",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_discretize.test_pixel_sum_2D": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_discretize.itertools",
    "astropy.convolution.tests.test_discretize.modes",
    "astropy.convolution.tests.test_discretize.pytest",
    "astropy.convolution.tests.test_discretize.test_models_2D",
    "create_model",
    "discretize_model",
    "list",
    "model",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_discretize.test_subpixel_gauss_1D": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "Gaussian1D",
    "astropy.convolution.tests.test_discretize.pytest",
    "discretize_model",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_discretize.test_subpixel_gauss_2D": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "Gaussian2D",
    "astropy.convolution.tests.test_discretize.pytest",
    "discretize_model",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_discretize.test_type_exception": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "TypeError",
    "astropy.convolution.tests.test_discretize.pytest",
    "discretize_model",
    "float"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_discretize.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_kernel_class": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.convolution.tests.test_kernel_class.delta_pulse_1D",
    "astropy.convolution.tests.test_kernel_class.delta_pulse_2D",
    "numpy.float",
    "numpy.float32",
    "numpy.float64",
    "numpy.random.rand",
    "numpy.zeros"
   ]
  },
  "type": "module"
 },
 "astropy.convolution.tests.test_kernel_class.HAS_SCIPY": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_kernel_class.KERNEL_TYPES": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_kernel_class.MODES": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_kernel_class.NUMS": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_Gaussian1DKernel_even_size": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "Gaussian1DKernel"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_Gaussian2DKernel_even_size": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "Gaussian2DKernel"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_add_1D_kernels": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "Box1DKernel",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_add_2D_kernels": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "Box2DKernel",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_add_kernel_scalar": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "Exception",
    "Gaussian1DKernel",
    "astropy.convolution.tests.test_kernel_class.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_box_kernels_even_size": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "Box1DKernel",
    "Box2DKernel",
    "astropy.convolution.tests.test_kernel_class.WIDTHS_EVEN",
    "astropy.convolution.tests.test_kernel_class.pytest",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_check_kernel_attributes": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "Box2DKernel",
    "isinstance",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_convolve_1D_kernels": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "Gaussian1DKernel",
    "convolve",
    "numpy.abs",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_convolve_2D_kernels": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "Gaussian2DKernel",
    "convolve",
    "numpy.abs",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_custom_1D_kernel": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "Box1DKernel",
    "CustomKernel",
    "astropy.convolution.tests.test_kernel_class.delta_pulse_1D",
    "convolve",
    "numpy.ones",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_custom_1D_kernel_list": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "CustomKernel"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_custom_1D_kernel_zerosum": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "CustomKernel"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_custom_2D_kernel": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "Box2DKernel",
    "CustomKernel",
    "astropy.convolution.tests.test_kernel_class.delta_pulse_2D",
    "convolve",
    "numpy.ones",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_custom_2D_kernel_list": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "CustomKernel"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_custom_2D_kernel_zerosum": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "CustomKernel"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_custom_kernel_odd_error": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "CustomKernel",
    "astropy.convolution.tests.test_kernel_class.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_delta_data": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_kernel_class.HAS_SCIPY",
    "astropy.convolution.tests.test_kernel_class.KERNEL_TYPES",
    "astropy.convolution.tests.test_kernel_class.WIDTHS_ODD",
    "astropy.convolution.tests.test_kernel_class.delta_pulse_1D",
    "astropy.convolution.tests.test_kernel_class.delta_pulse_2D",
    "astropy.convolution.tests.test_kernel_class.itertools",
    "astropy.convolution.tests.test_kernel_class.pytest",
    "convolve",
    "convolve_fft",
    "kernel_type",
    "list",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_discretize_modes": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_kernel_class.HAS_SCIPY",
    "astropy.convolution.tests.test_kernel_class.KERNEL_TYPES",
    "astropy.convolution.tests.test_kernel_class.MODES",
    "astropy.convolution.tests.test_kernel_class.delta_pulse_1D",
    "astropy.convolution.tests.test_kernel_class.delta_pulse_2D",
    "astropy.convolution.tests.test_kernel_class.itertools",
    "astropy.convolution.tests.test_kernel_class.pytest",
    "convolve",
    "convolve_fft",
    "kernel_type",
    "list",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_kernel1d_initialization": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "Kernel1D",
    "TypeError",
    "astropy.convolution.tests.test_kernel_class.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_kernel1d_int_size": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "Gaussian1DKernel",
    "TypeError",
    "astropy.convolution.tests.test_kernel_class.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_kernel2d_initialization": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "Kernel2D",
    "TypeError",
    "astropy.convolution.tests.test_kernel_class.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_kernel2d_int_xsize": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "Gaussian2DKernel",
    "TypeError",
    "astropy.convolution.tests.test_kernel_class.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_kernel2d_int_ysize": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "Gaussian2DKernel",
    "TypeError",
    "astropy.convolution.tests.test_kernel_class.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_kernel_normalization": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "CustomKernel",
    "numpy.copy",
    "numpy.ones",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_kernel_normalization_mode": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "CustomKernel",
    "ValueError",
    "astropy.convolution.tests.test_kernel_class.pytest",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_model_1D_kernel": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "Gaussian1D",
    "Gaussian1DKernel",
    "Model1DKernel",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_model_2D_kernel": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "Gaussian2D",
    "Gaussian2DKernel",
    "Model2DKernel",
    "numpy.pi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_multiply_kernel1d": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "Exception",
    "Gaussian1DKernel",
    "astropy.convolution.tests.test_kernel_class.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_multiply_kernel1d_kernel2d": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "Exception",
    "Gaussian1DKernel",
    "Gaussian2DKernel",
    "astropy.convolution.tests.test_kernel_class.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_multiply_kernel2d": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "Exception",
    "Gaussian2DKernel",
    "astropy.convolution.tests.test_kernel_class.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_multiply_scalar": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "Gaussian1DKernel",
    "astropy.convolution.tests.test_kernel_class.NUMS",
    "astropy.convolution.tests.test_kernel_class.pytest",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_multiply_scalar_type": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "Gaussian1DKernel",
    "astropy.convolution.tests.test_kernel_class.NUMS",
    "astropy.convolution.tests.test_kernel_class.pytest",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_normalize_peak": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "CustomKernel"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_random_data": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_kernel_class.HAS_SCIPY",
    "astropy.convolution.tests.test_kernel_class.KERNEL_TYPES",
    "astropy.convolution.tests.test_kernel_class.WIDTHS_ODD",
    "astropy.convolution.tests.test_kernel_class.itertools",
    "astropy.convolution.tests.test_kernel_class.pytest",
    "astropy.convolution.tests.test_kernel_class.random_data_1D",
    "astropy.convolution.tests.test_kernel_class.random_data_2D",
    "convolve",
    "convolve_fft",
    "kernel_type",
    "list",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_rmultiply_scalar_type": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "Gaussian1DKernel",
    "astropy.convolution.tests.test_kernel_class.NUMS",
    "astropy.convolution.tests.test_kernel_class.pytest",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_scipy_filter_gaussian": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "Gaussian1DKernel",
    "Gaussian2DKernel",
    "astropy.convolution.tests.test_kernel_class.WIDTHS_ODD",
    "astropy.convolution.tests.test_kernel_class.delta_pulse_1D",
    "astropy.convolution.tests.test_kernel_class.delta_pulse_2D",
    "astropy.convolution.tests.test_kernel_class.pytest",
    "convolve",
    "numpy.testing.assert_almost_equal",
    "scipy.ndimage.filters.gaussian_filter"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_scipy_filter_gaussian_laplace": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "Exception",
    "MexicanHat1DKernel",
    "MexicanHat2DKernel",
    "astropy.convolution.tests.test_kernel_class.WIDTHS_ODD",
    "astropy.convolution.tests.test_kernel_class.delta_pulse_1D",
    "astropy.convolution.tests.test_kernel_class.delta_pulse_2D",
    "astropy.convolution.tests.test_kernel_class.pytest",
    "convolve",
    "numpy.testing.assert_almost_equal",
    "scipy.ndimage.filters.gaussian_laplace"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_smallkernel_vs_Box2DKernel": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "Box2DKernel",
    "astropy.convolution.tests.test_kernel_class.WIDTHS_ODD",
    "astropy.convolution.tests.test_kernel_class.delta_pulse_2D",
    "astropy.convolution.tests.test_kernel_class.pytest",
    "convolve_fft",
    "numpy.ones",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.TestKernels.test_uniform_smallkernel": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_kernel_class.WIDTHS_ODD",
    "astropy.convolution.tests.test_kernel_class.delta_pulse_2D",
    "astropy.convolution.tests.test_kernel_class.pytest",
    "convolve",
    "convolve_fft",
    "numpy.ones",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_kernel_class.WIDTHS_EVEN": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_kernel_class.WIDTHS_ODD": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_kernel_class.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_kernel_class.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_kernel_class.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_kernel_class.delta_pulse_1D": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_kernel_class.delta_pulse_2D": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_kernel_class.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_kernel_class.filters": {
  "data": {
   "shadows": "scipy.ndimage.filters"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_kernel_class.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_kernel_class.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_kernel_class.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_kernel_class.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_kernel_class.random_data_1D": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_kernel_class.random_data_2D": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "astropy.convolution.tests.test_kernel_class.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_pickle": {
  "data": {},
  "type": "module"
 },
 "astropy.convolution.tests.test_pickle.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_pickle.conv": {
  "data": {
   "shadows": "convolution"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_pickle.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_pickle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_pickle.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_pickle.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.convolution.tests.test_pickle.test_simple_object": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "astropy.convolution.tests.test_pickle.pytest",
    "check_pickling_recovery",
    "name",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.tests.test_pickle.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.convolution.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.convolution.utils": {
  "data": {},
  "type": "module"
 },
 "astropy.convolution.utils.DiscretizationError": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "astropy.convolution.utils.KernelSizeError": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "astropy.convolution.utils.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "astropy.convolution.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.convolution.utils.add_kernel_arrays_1D": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.utils.add_kernel_arrays_2D": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.utils.dblquad": {
  "data": {
   "shadows": "scipy.integrate.dblquad"
  },
  "type": "import"
 },
 "astropy.convolution.utils.discretize_bilinear_2D": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "model",
    "numpy.arange",
    "numpy.meshgrid"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.utils.discretize_center_1D": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "model",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.utils.discretize_center_2D": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "model",
    "numpy.arange",
    "numpy.meshgrid"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.utils.discretize_integrate_1D": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "model",
    "numpy.append",
    "numpy.arange",
    "numpy.array",
    "range",
    "scipy.integrate.quad"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.utils.discretize_integrate_2D": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "model",
    "numpy.arange",
    "numpy.empty",
    "range",
    "scipy.integrate.dblquad"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.utils.discretize_linear_1D": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "model",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.utils.discretize_model": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.convolution.utils.DiscretizationError",
    "astropy.convolution.utils.discretize_bilinear_2D",
    "astropy.convolution.utils.discretize_center_1D",
    "astropy.convolution.utils.discretize_center_2D",
    "astropy.convolution.utils.discretize_integrate_1D",
    "astropy.convolution.utils.discretize_integrate_2D",
    "astropy.convolution.utils.discretize_linear_1D",
    "astropy.convolution.utils.discretize_oversample_1D",
    "astropy.convolution.utils.discretize_oversample_2D",
    "callable",
    "custom_model",
    "float",
    "isinstance",
    "numpy.diff"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.utils.discretize_oversample_1D": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "model",
    "numpy.arange",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.utils.discretize_oversample_2D": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "model",
    "numpy.arange",
    "numpy.meshgrid",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "astropy.convolution.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.convolution.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.convolution.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.convolution.utils.quad": {
  "data": {
   "shadows": "scipy.integrate.quad"
  },
  "type": "import"
 },
 "astropy.convolution.utils.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates": {
  "data": {
   "symbols_in_volume": [
    "__doc__"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.angle_lextab": {
  "data": {
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.angle_lextab._lexliterals": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "astropy.coordinates.angle_lextab._lexreflags": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "astropy.coordinates.angle_lextab._lexstateeoff": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "astropy.coordinates.angle_lextab._lexstateerrorf": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "astropy.coordinates.angle_lextab._lexstateignore": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "astropy.coordinates.angle_lextab._lexstateinfo": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "astropy.coordinates.angle_lextab._lexstatere": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "astropy.coordinates.angle_lextab._lextokens": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "astropy.coordinates.angle_lextab._tabversion": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "astropy.coordinates.angle_lextab.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.angle_lextab.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.angle_lextab.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.angle_lextab.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.angle_parsetab": {
  "data": {
   "symbols_in_volume": [
    "astropy.coordinates.angle_parsetab._lr_action",
    "astropy.coordinates.angle_parsetab._lr_action_items",
    "astropy.coordinates.angle_parsetab._lr_goto",
    "astropy.coordinates.angle_parsetab._lr_goto_items",
    "zip"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.angle_parsetab._lr_action": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "astropy.coordinates.angle_parsetab._lr_action_items": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "astropy.coordinates.angle_parsetab._lr_goto": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.coordinates.angle_parsetab._lr_goto_items": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.coordinates.angle_parsetab._lr_method": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "astropy.coordinates.angle_parsetab._lr_productions": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "astropy.coordinates.angle_parsetab._lr_signature": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "astropy.coordinates.angle_parsetab._tabversion": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "astropy.coordinates.angle_parsetab.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.angle_parsetab.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.angle_parsetab.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.angle_parsetab.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.angle_utilities": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.angle_utilities._AngleParser": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.angle_utilities._AngleParser.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "astropy.coordinates.angle_utilities._AngleParser"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities._AngleParser._get_simple_unit_names": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "classmethod",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities._AngleParser._make_parser": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "astropy.coordinates.angle_utilities.os",
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities._AngleParser._make_parser.p_angle": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities._AngleParser._make_parser.p_arcminute": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities._AngleParser._make_parser.p_arcsecond": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities._AngleParser._make_parser.p_colon": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities._AngleParser._make_parser.p_dms": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities._AngleParser._make_parser.p_error": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities._AngleParser._make_parser.p_generic": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities._AngleParser._make_parser.p_hms": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities._AngleParser._make_parser.p_sign": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities._AngleParser._make_parser.p_simple": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities._AngleParser._make_parser.p_spaced": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities._AngleParser._make_parser.p_ufloat": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities._AngleParser._make_parser.t_SIGN": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities._AngleParser._make_parser.t_SIMPLE_UNIT": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities._AngleParser._make_parser.t_UFLOAT": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities._AngleParser._make_parser.t_UINT": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities._AngleParser._make_parser.t_error": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities._AngleParser.parse": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities._check_hour_range": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "IllegalHourError",
    "IllegalHourWarning",
    "numpy.abs",
    "numpy.any",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities._check_minute_range": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "IllegalMinuteError",
    "IllegalMinuteWarning",
    "numpy.any",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities._check_second_range": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "IllegalSecondError",
    "IllegalSecondWarning",
    "numpy.any",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.angle_utilities.angular_separation": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "numpy.arctan2",
    "numpy.cos",
    "numpy.hypot",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities.check_hms_ranges": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "astropy.coordinates.angle_utilities._check_hour_range",
    "astropy.coordinates.angle_utilities._check_minute_range",
    "astropy.coordinates.angle_utilities._check_second_range"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities.degrees_to_dms": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.copysign",
    "numpy.floor",
    "numpy.modf"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities.degrees_to_string": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "astropy.coordinates.angle_utilities.degrees_to_dms",
    "astropy.coordinates.angle_utilities.sexagesimal_to_string"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.angle_utilities.dms_to_degrees": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "ValueError",
    "astropy.coordinates.angle_utilities._check_minute_range",
    "astropy.coordinates.angle_utilities._check_second_range",
    "format_exception",
    "numpy.abs",
    "numpy.copysign",
    "numpy.floor"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities.hms_to_degrees": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "astropy.coordinates.angle_utilities.hms_to_hours"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities.hms_to_dms": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "astropy.coordinates.angle_utilities.degrees_to_dms",
    "astropy.coordinates.angle_utilities.hms_to_degrees"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities.hms_to_hours": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "ValueError",
    "astropy.coordinates.angle_utilities.check_hms_ranges",
    "format_exception",
    "numpy.abs",
    "numpy.copysign",
    "numpy.floor"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities.hms_to_radians": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "astropy.coordinates.angle_utilities.hms_to_degrees"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities.hours_to_decimal": {
  "data": {
   "lineno": 453
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities.hours_to_hms": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.copysign",
    "numpy.floor",
    "numpy.modf"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities.hours_to_radians": {
  "data": {
   "lineno": 461
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities.hours_to_string": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "astropy.coordinates.angle_utilities.hours_to_hms",
    "astropy.coordinates.angle_utilities.sexagesimal_to_string"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.angle_utilities.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.coordinates.angle_utilities.parse_angle": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "astropy.coordinates.angle_utilities._AngleParser"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities.position_angle": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "Angle",
    "numpy.arctan2",
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.angle_utilities.radians_to_degrees": {
  "data": {
   "lineno": 484
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities.radians_to_dms": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "astropy.coordinates.angle_utilities.degrees_to_dms"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities.radians_to_hms": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "astropy.coordinates.angle_utilities.hours_to_hms",
    "astropy.coordinates.angle_utilities.radians_to_hours"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities.radians_to_hours": {
  "data": {
   "lineno": 491
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities.sexagesimal_to_string": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.abs",
    "numpy.copysign",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angle_utilities.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.angle_utilities.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.angle_utilities.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "astropy.coordinates.angles": {
  "data": {
   "symbols_in_volume": [
    "astropy.coordinates.angles.math",
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.angles.Angle": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "astropy.coordinates.angles.Angle.__new__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "astropy.coordinates.angles.Angle",
    "isinstance",
    "isiterable",
    "numpy.ndarray",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angles.Angle.__str__": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angles.Angle._convert_unit_to_angle_unit": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angles.Angle._repr_latex_": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "numpy.array2string"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angles.Angle._set_unit": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "astropy.coordinates.angles.Angle",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angles.Angle._tuple_to_float": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angles.Angle.dms": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "astropy.coordinates.angles.dms_tuple",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angles.Angle.hms": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "astropy.coordinates.angles.hms_tuple",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angles.Angle.hour": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angles.Angle.is_within_bounds": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "astropy.coordinates.angles.Angle",
    "bool",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angles.Angle.signed_dms": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "astropy.coordinates.angles.signed_dms_tuple",
    "numpy.abs",
    "numpy.sign",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angles.Angle.to_string": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ValueError",
    "format",
    "format_ufunc",
    "numpy.vectorize",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angles.Angle.to_string.do_format": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "float",
    "format",
    "func"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angles.Angle.to_string.plain_unit_format": {
  "data": {
   "lineno": 318
  },
  "type": "function"
 },
 "astropy.coordinates.angles.Angle.wrap_at": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "astropy.coordinates.angles.Angle",
    "numpy.mod"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angles.Latitude": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "astropy.coordinates.angles.Angle"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.angles.Latitude.__array_ufunc__": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "astropy.coordinates.angles.Latitude",
    "astropy.coordinates.angles._no_angle_subclass",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angles.Latitude.__array_wrap__": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "astropy.coordinates.angles.Angle",
    "astropy.coordinates.angles._no_angle_subclass",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angles.Latitude.__new__": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "TypeError",
    "astropy.coordinates.angles.Latitude",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angles.Latitude.__setitem__": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "TypeError",
    "astropy.coordinates.angles.Latitude",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angles.Latitude._validate_angles": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angles.Longitude": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "astropy.coordinates.angles.Angle",
    "astropy.coordinates.angles.LongitudeInfo"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.angles.Longitude.__array_finalize__": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "astropy.coordinates.angles.Longitude",
    "getattr",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angles.Longitude.__array_ufunc__": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "astropy.coordinates.angles.Longitude",
    "astropy.coordinates.angles._no_angle_subclass",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angles.Longitude.__array_wrap__": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "astropy.coordinates.angles.Angle",
    "astropy.coordinates.angles._no_angle_subclass",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angles.Longitude.__new__": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "TypeError",
    "astropy.coordinates.angles.Latitude",
    "astropy.coordinates.angles.Longitude",
    "getattr",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angles.Longitude.__setitem__": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "TypeError",
    "astropy.coordinates.angles.Latitude",
    "astropy.coordinates.angles.Longitude",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angles.Longitude._wrap_internal": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "astropy.coordinates.angles.Longitude",
    "numpy.any",
    "numpy.mod",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angles.Longitude.wrap_angle": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "astropy.coordinates.angles.Angle"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angles.LongitudeInfo": {
  "data": {
   "lineno": 548
  },
  "type": "class"
 },
 "astropy.coordinates.angles.TWOPI": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "astropy.coordinates.angles.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.coordinates.angles._no_angle_subclass": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "astropy.coordinates.angles.Angle",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.angles.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.angles.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.angles.dms_tuple": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "astropy.coordinates.angles.hms_tuple": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "astropy.coordinates.angles.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "astropy.coordinates.angles.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "astropy.coordinates.angles.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.angles.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.angles.signed_dms_tuple": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "astropy.coordinates.angles.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.angles.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.angles.util": {
  "data": {
   "shadows": "angle_utilities"
  },
  "type": "import"
 },
 "astropy.coordinates.attributes": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.attributes.Attribute": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "astropy.coordinates.attributes.Attribute.__get__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "isinstance",
    "setattr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.attributes.Attribute.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "astropy.coordinates.attributes.Attribute",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.attributes.Attribute.__set__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.attributes.Attribute.convert_input": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "astropy.coordinates.attributes.CartesianRepresentationAttribute": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "astropy.coordinates.attributes.Attribute"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.attributes.CartesianRepresentationAttribute.__init__": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "astropy.coordinates.attributes.CartesianRepresentationAttribute",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.attributes.CartesianRepresentationAttribute.convert_input": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "TypeError",
    "all",
    "getattr",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.attributes.CartesianRepresentationFrameAttribute": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "astropy.coordinates.attributes.CartesianRepresentationAttribute"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.attributes.CartesianRepresentationFrameAttribute.__init__": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "astropy.coordinates.attributes.CartesianRepresentationFrameAttribute",
    "astropy.coordinates.attributes.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.attributes.CoordinateAttribute": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "astropy.coordinates.attributes.Attribute"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.attributes.CoordinateAttribute.__init__": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "astropy.coordinates.attributes.CoordinateAttribute",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.attributes.CoordinateAttribute.convert_input": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.attributes.DifferentialAttribute": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "astropy.coordinates.attributes.Attribute"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.attributes.DifferentialAttribute.__init__": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "astropy.coordinates.attributes.DifferentialAttribute",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.attributes.DifferentialAttribute.convert_input": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "TypeError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.attributes.EarthLocationAttribute": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "astropy.coordinates.attributes.Attribute"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.attributes.EarthLocationAttribute.convert_input": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.attributes.FrameAttribute": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "astropy.coordinates.attributes.Attribute"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.attributes.FrameAttribute.__init__": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "astropy.coordinates.attributes.FrameAttribute",
    "astropy.coordinates.attributes.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.attributes.QuantityAttribute": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "astropy.coordinates.attributes.Attribute"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.attributes.QuantityAttribute.__init__": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "astropy.coordinates.attributes.QuantityAttribute",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.attributes.QuantityAttribute.convert_input": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "hasattr",
    "numpy.all",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.attributes.QuantityFrameAttribute": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "astropy.coordinates.attributes.QuantityAttribute"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.attributes.QuantityFrameAttribute.__init__": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "astropy.coordinates.attributes.QuantityFrameAttribute",
    "astropy.coordinates.attributes.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.attributes.TimeAttribute": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "astropy.coordinates.attributes.Attribute"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.attributes.TimeAttribute.convert_input": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "Exception",
    "Time",
    "ValueError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.attributes.TimeFrameAttribute": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "astropy.coordinates.attributes.TimeAttribute"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.attributes.TimeFrameAttribute.__init__": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "astropy.coordinates.attributes.TimeFrameAttribute",
    "astropy.coordinates.attributes.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.attributes.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "astropy.coordinates.attributes.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.attributes.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.attributes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.attributes.np_broadcast_to": {
  "data": {
   "shadows": "broadcast_to"
  },
  "type": "import"
 },
 "astropy.coordinates.attributes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.attributes.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.attributes.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.attributes.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.coordinates.baseframe": {
  "data": {
   "symbols_in_volume": [
    "TransformGraph",
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "astropy.coordinates.baseframe.FrameMeta",
    "collections.OrderedDict",
    "property"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.__bool__": {
  "data": {
   "lineno": 502
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.__dir__": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.__getattr__": {
  "data": {
   "lineno": 1201,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.__init__": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.coordinates.baseframe.copy",
    "astropy.coordinates.baseframe.inspect",
    "check_broadcast",
    "differential_cls",
    "getattr",
    "hasattr",
    "isinstance",
    "issubclass",
    "len",
    "list",
    "representation_cls",
    "setattr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.__len__": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.__nonzero__": {
  "data": {
   "lineno": 499
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.__repr__": {
  "data": {
   "lineno": 1034
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.__setattr__": {
  "data": {
   "lineno": 1243,
   "symbols_in_volume": [
    "AttributeError",
    "astropy.coordinates.baseframe.BaseCoordinateFrame",
    "hasattr",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame._apply": {
  "data": {
   "lineno": 1112,
   "symbols_in_volume": [
    "apply_method",
    "astropy.coordinates.baseframe.copy",
    "differential_cls",
    "getattr",
    "method",
    "representation_cls"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame._apply.apply_method": {
  "data": {
   "lineno": 1149,
   "symbols_in_volume": [
    "callable",
    "getattr",
    "hasattr",
    "isinstance",
    "method"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame._data_repr": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": [
    "isinstance",
    "issubclass",
    "len",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame._frame_attrs_repr": {
  "data": {
   "lineno": 1105,
   "symbols_in_volume": [
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame._get_representation_info": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "astropy.coordinates.baseframe._get_repr_cls",
    "classmethod",
    "dict",
    "enumerate",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.cache": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.cartesian": {
  "data": {
   "lineno": 1329,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.data": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "ValueError",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.get_frame_attr_names": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "classmethod",
    "collections.OrderedDict",
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.get_representation_cls": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.get_representation_component_names": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.get_representation_component_units": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.has_data": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.is_equivalent_frame": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "TypeError",
    "astropy.coordinates.baseframe.BaseCoordinateFrame",
    "getattr",
    "isinstance",
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.is_frame_attr_default": {
  "data": {
   "lineno": 980
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.is_transformable_to": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "astropy.coordinates.baseframe.frame_transform_graph",
    "astropy.coordinates.baseframe.inspect",
    "new_frame",
    "new_frame.__class__",
    "trans"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.isscalar": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.realize_frame": {
  "data": {
   "lineno": 706
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.replicate": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "astropy.coordinates.baseframe.copy"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.replicate_without_data": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "astropy.coordinates.baseframe.copy"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.represent_as": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "TypeError",
    "astropy.coordinates.baseframe._get_repr_classes",
    "astropy.coordinates.baseframe.warnings",
    "bool",
    "dict",
    "differential_cls",
    "differential_cls.__name__",
    "getattr",
    "hasattr",
    "isinstance",
    "representation_cls",
    "representation_cls.__name__",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.representation_info": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.separation": {
  "data": {
   "lineno": 1255,
   "symbols_in_volume": [
    "Angle",
    "angular_separation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.separation_3d": {
  "data": {
   "lineno": 1289,
   "symbols_in_volume": [
    "Distance",
    "ValueError",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.set_representation_cls": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "astropy.coordinates.baseframe._get_repr_classes"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.shape": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.size": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.spherical": {
  "data": {
   "lineno": 1340,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.sphericalcoslat": {
  "data": {
   "lineno": 1351,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.BaseCoordinateFrame.transform_to": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "ConvertError",
    "NotImplementedError",
    "ValueError",
    "astropy.coordinates.baseframe.frame_transform_graph",
    "astropy.coordinates.baseframe.inspect",
    "getattr",
    "hasattr",
    "new_frame",
    "new_frame.__class__",
    "new_frame._sky_coord_frame",
    "new_frame.realize_frame",
    "numpy.any",
    "trans"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.FrameMeta": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "astropy.coordinates.baseframe.abc"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.baseframe.FrameMeta.__new__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ValueError",
    "astropy.coordinates.baseframe.FrameMeta",
    "astropy.coordinates.baseframe.copy",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.FrameMeta.readonly_prop_factory": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "property",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.FrameMeta.readonly_prop_factory.getter": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.GenericFrame": {
  "data": {
   "lineno": 1364,
   "symbols_in_volume": [
    "astropy.coordinates.baseframe.BaseCoordinateFrame"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.baseframe.GenericFrame.__getattr__": {
  "data": {
   "lineno": 1387,
   "symbols_in_volume": [
    "AttributeError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.GenericFrame.__init__": {
  "data": {
   "lineno": 1379,
   "symbols_in_volume": [
    "Attribute",
    "astropy.coordinates.baseframe.GenericFrame",
    "collections.OrderedDict",
    "setattr",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.GenericFrame.__setattr__": {
  "data": {
   "lineno": 1393,
   "symbols_in_volume": [
    "AttributeError",
    "astropy.coordinates.baseframe.GenericFrame",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.coordinates.baseframe.RepresentationMapping": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "astropy.coordinates.baseframe._RepresentationMappingBase"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.baseframe.RepresentationMapping.__new__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "astropy.coordinates.baseframe.RepresentationMapping",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe._RepresentationMappingBase": {
  "data": {
   "lineno": 192
  },
  "type": "constant"
 },
 "astropy.coordinates.baseframe.__all__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "astropy.coordinates.baseframe._get_repr_classes": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ValueError",
    "astropy.coordinates.baseframe._get_repr_cls",
    "isinstance",
    "issubclass",
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe._get_repr_cls": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "issubclass",
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.baseframe.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "astropy.coordinates.baseframe.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.baseframe.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "astropy.coordinates.baseframe.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "astropy.coordinates.baseframe.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.baseframe.frame_transform_graph": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "astropy.coordinates.baseframe.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "astropy.coordinates.baseframe.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "astropy.coordinates.baseframe.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.baseframe.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.baseframe.r": {
  "data": {
   "shadows": "representation"
  },
  "type": "import"
 },
 "astropy.coordinates.baseframe.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.baseframe.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.baseframe.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames": {
  "data": {
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames._make_transform_graph_docs"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.builtin_frames.__all__": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "astropy.coordinates.builtin_frames._make_transform_graph_docs": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.inspect",
    "globals",
    "isclass",
    "issubclass",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames._transform_graph_docs": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "astropy.coordinates.builtin_frames.altaz": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.builtin_frames.altaz.AltAz": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "Attribute",
    "EarthLocationAttribute",
    "QuantityAttribute",
    "RepresentationMapping",
    "TimeAttribute"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.builtin_frames.altaz.AltAz.__init__": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.altaz.AltAz",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.altaz.AltAz.secz": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.sin",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.altaz.AltAz.zen": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.altaz._90DEG",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.altaz._90DEG": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "astropy.coordinates.builtin_frames.altaz.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.altaz.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.altaz.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.altaz.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.altaz.r": {
  "data": {
   "shadows": "representation"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.altaz.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.altaz.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.baseradec": {
  "data": {
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.baseradec.BaseRADecFrame",
    "astropy.coordinates.builtin_frames.baseradec._base_radec_docstring"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.builtin_frames.baseradec.BaseRADecFrame": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "RepresentationMapping"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.builtin_frames.baseradec.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "astropy.coordinates.builtin_frames.baseradec._base_radec_docstring": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "astropy.coordinates.builtin_frames.baseradec.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.baseradec.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.baseradec.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.baseradec.r": {
  "data": {
   "shadows": "representation"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.baseradec.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.baseradec.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.cirs": {
  "data": {
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.cirs.CIRS"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.builtin_frames.cirs.CIRS": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "TimeAttribute"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.builtin_frames.cirs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.cirs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.cirs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.cirs.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.cirs_observed_transforms": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.builtin_frames.cirs_observed_transforms.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.cirs_observed_transforms.altaz_to_altaz": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "CIRS"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.cirs_observed_transforms.altaz_to_cirs": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "CIRS",
    "SphericalRepresentation",
    "UnitSphericalRepresentation",
    "get_dut1utc",
    "get_jd12",
    "get_polar_motion",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.cirs_observed_transforms.cirs_to_altaz": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "CIRS",
    "SphericalRepresentation",
    "UnitSphericalRepresentation",
    "get_dut1utc",
    "get_jd12",
    "get_polar_motion",
    "isinstance",
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.cirs_observed_transforms.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.cirs_observed_transforms.erfa": {
  "data": {
   "shadows": "_erfa"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.cirs_observed_transforms.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.cirs_observed_transforms.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.cirs_observed_transforms.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.cirs_observed_transforms.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.ecliptic": {
  "data": {
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.ecliptic.BarycentricTrueEcliptic",
    "astropy.coordinates.builtin_frames.ecliptic.BaseEclipticFrame",
    "astropy.coordinates.builtin_frames.ecliptic.GeocentricTrueEcliptic",
    "astropy.coordinates.builtin_frames.ecliptic.HeliocentricTrueEcliptic",
    "astropy.coordinates.builtin_frames.ecliptic._base_ecliptic_docstring"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.builtin_frames.ecliptic.BarycentricTrueEcliptic": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "TimeAttribute",
    "astropy.coordinates.builtin_frames.ecliptic.BaseEclipticFrame"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.builtin_frames.ecliptic.BaseEclipticFrame": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "RepresentationMapping"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.builtin_frames.ecliptic.GeocentricTrueEcliptic": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "TimeAttribute",
    "astropy.coordinates.builtin_frames.ecliptic.BaseEclipticFrame"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.builtin_frames.ecliptic.HeliocentricTrueEcliptic": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "TimeAttribute",
    "astropy.coordinates.builtin_frames.ecliptic.BaseEclipticFrame"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.builtin_frames.ecliptic.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "astropy.coordinates.builtin_frames.ecliptic._base_ecliptic_docstring": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "astropy.coordinates.builtin_frames.ecliptic.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.ecliptic.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.ecliptic.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.ecliptic.r": {
  "data": {
   "shadows": "representation"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.ecliptic.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.ecliptic.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.ecliptic_transforms": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.builtin_frames.ecliptic_transforms._NEED_ORIGIN_HINT": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "astropy.coordinates.builtin_frames.ecliptic_transforms._ecliptic_rotation_matrix": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "get_jd12",
    "matrix_product",
    "rotation_matrix"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.ecliptic_transforms.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.ecliptic_transforms.baryecliptic_to_icrs": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.ecliptic_transforms.icrs_to_baryecliptic",
    "matrix_transpose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.ecliptic_transforms.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.ecliptic_transforms.erfa": {
  "data": {
   "shadows": "_erfa"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.ecliptic_transforms.gcrs_to_geoecliptic": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "GCRS",
    "astropy.coordinates.builtin_frames.ecliptic_transforms._ecliptic_rotation_matrix"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.ecliptic_transforms.geoecliptic_to_gcrs": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "GCRS",
    "astropy.coordinates.builtin_frames.ecliptic_transforms._ecliptic_rotation_matrix",
    "matrix_transpose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.ecliptic_transforms.helioecliptic_to_icrs": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "UnitsError",
    "astropy.coordinates.builtin_frames.ecliptic_transforms._NEED_ORIGIN_HINT",
    "astropy.coordinates.builtin_frames.ecliptic_transforms._ecliptic_rotation_matrix",
    "get_body_barycentric",
    "matrix_transpose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.ecliptic_transforms.icrs_to_baryecliptic": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.ecliptic_transforms._ecliptic_rotation_matrix"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.ecliptic_transforms.icrs_to_helioecliptic": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "UnitsError",
    "astropy.coordinates.builtin_frames.ecliptic_transforms._NEED_ORIGIN_HINT",
    "astropy.coordinates.builtin_frames.ecliptic_transforms._ecliptic_rotation_matrix",
    "get_body_barycentric"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.ecliptic_transforms.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.ecliptic_transforms.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.ecliptic_transforms.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.fk4": {
  "data": {
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.fk4.FK4",
    "astropy.coordinates.builtin_frames.fk4.FK4NoETerms"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.builtin_frames.fk4.FK4": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "TimeAttribute"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.builtin_frames.fk4.FK4NoETerms": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "TimeAttribute"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.builtin_frames.fk4.FK4NoETerms._precession_matrix": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.fk4.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.fk4.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.fk4.earth": {
  "data": {
   "shadows": "earth_orientation"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.fk4.fk4_e_terms": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.radians",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.fk4.fk4_no_e_to_fk4": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "astropy.coordinates.builtin_frames.fk4.FK4",
    "astropy.coordinates.builtin_frames.fk4.FK4NoETerms",
    "astropy.coordinates.builtin_frames.fk4.fk4_e_terms",
    "isinstance",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.fk4.fk4_to_fk4": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.fk4.FK4",
    "astropy.coordinates.builtin_frames.fk4.FK4NoETerms"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.fk4.fk4_to_fk4_no_e": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "astropy.coordinates.builtin_frames.fk4.FK4",
    "astropy.coordinates.builtin_frames.fk4.FK4NoETerms",
    "astropy.coordinates.builtin_frames.fk4.fk4_e_terms",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.fk4.fk4noe_to_fk4noe": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.fk4.FK4NoETerms"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.fk4.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.fk4.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.fk4.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.fk4.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.fk4_fk5_transforms": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.builtin_frames.fk4_fk5_transforms._B1950_TO_J2000_M": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.coordinates.builtin_frames.fk4_fk5_transforms._FK4_CORR": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "astropy.coordinates.builtin_frames.fk4_fk5_transforms._fk4_B_matrix": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.fk4_fk5_transforms._B1950_TO_J2000_M",
    "astropy.coordinates.builtin_frames.fk4_fk5_transforms._FK4_CORR",
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.fk4_fk5_transforms.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.fk4_fk5_transforms.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.fk4_fk5_transforms.fk4_no_e_to_fk5": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.fk4_fk5_transforms._fk4_B_matrix",
    "matrix_product"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.fk4_fk5_transforms.fk5_to_fk4_no_e": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.fk4_fk5_transforms._fk4_B_matrix",
    "matrix_product",
    "matrix_transpose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.fk4_fk5_transforms.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.fk4_fk5_transforms.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.fk4_fk5_transforms.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.fk5": {
  "data": {
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.fk5.FK5"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.builtin_frames.fk5.FK5": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "TimeAttribute"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.builtin_frames.fk5.FK5._precession_matrix": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.fk5.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.fk5.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.fk5.earth": {
  "data": {
   "shadows": "earth_orientation"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.fk5.fk5_to_fk5": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.fk5.FK5"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.fk5.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.fk5.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.galactic": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.builtin_frames.galactic.Galactic": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Angle",
    "FK4NoETerms",
    "FK5",
    "RepresentationMapping"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.builtin_frames.galactic.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.galactic.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.galactic.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.galactic.r": {
  "data": {
   "shadows": "representation"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.galactic.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.galactic.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.galactic_transforms": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.builtin_frames.galactic_transforms._gal_to_fk5": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.galactic_transforms.fk5_to_gal",
    "matrix_transpose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.galactic_transforms.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.galactic_transforms.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.galactic_transforms.fk4_to_gal": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "matrix_product",
    "rotation_matrix"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.galactic_transforms.fk5_to_gal": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "matrix_product",
    "rotation_matrix"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.galactic_transforms.gal_to_fk4": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.galactic_transforms.fk4_to_gal",
    "matrix_transpose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.galactic_transforms.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.galactic_transforms.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.galactocentric": {
  "data": {
   "symbols_in_volume": [
    "Angle"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.builtin_frames.galactocentric.Galactocentric": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "CoordinateAttribute",
    "DifferentialAttribute",
    "ICRS",
    "QuantityAttribute",
    "RepresentationMapping"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.builtin_frames.galactocentric.Galactocentric.__init__": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ICRS",
    "astropy.coordinates.builtin_frames.galactocentric.Galactocentric",
    "astropy.coordinates.builtin_frames.galactocentric.warnings",
    "dict",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.galactocentric.Galactocentric.galcen_dec": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.galactocentric.warnings",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.galactocentric.Galactocentric.galcen_ra": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.galactocentric.warnings",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.galactocentric.Galactocentric.get_roll0": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.galactocentric._ROLL0",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.galactocentric._ROLL0": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "astropy.coordinates.builtin_frames.galactocentric._check_coord_repr_diff_types": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "ConvertError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.galactocentric.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.galactocentric.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.galactocentric.galactocentric_to_icrs": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "ICRS",
    "astropy.coordinates.builtin_frames.galactocentric.Galactocentric",
    "astropy.coordinates.builtin_frames.galactocentric._check_coord_repr_diff_types",
    "astropy.coordinates.builtin_frames.galactocentric.get_matrix_vectors"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.galactocentric.get_matrix_vectors": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "matrix_product",
    "matrix_transpose",
    "numpy.arcsin",
    "rotation_matrix"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.galactocentric.icrs_to_galactocentric": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "ICRS",
    "astropy.coordinates.builtin_frames.galactocentric.Galactocentric",
    "astropy.coordinates.builtin_frames.galactocentric._check_coord_repr_diff_types",
    "astropy.coordinates.builtin_frames.galactocentric.get_matrix_vectors"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.galactocentric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.galactocentric.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.galactocentric.r": {
  "data": {
   "shadows": "representation"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.galactocentric.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.galactocentric.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.galactocentric.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.gcrs": {
  "data": {
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.gcrs.GCRS",
    "astropy.coordinates.builtin_frames.gcrs.PrecessedGeocentric"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.builtin_frames.gcrs.GCRS": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "CartesianRepresentationAttribute",
    "TimeAttribute"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.builtin_frames.gcrs.PrecessedGeocentric": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "CartesianRepresentationAttribute",
    "TimeAttribute"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.builtin_frames.gcrs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.gcrs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.gcrs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.gcrs.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.gcrs.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.hcrs": {
  "data": {
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.hcrs.HCRS"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.builtin_frames.hcrs.HCRS": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "TimeAttribute"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.builtin_frames.hcrs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.hcrs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.hcrs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.hcrs.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.icrs": {
  "data": {
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.icrs.ICRS"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.builtin_frames.icrs.ICRS": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "astropy.coordinates.builtin_frames.icrs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.icrs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.icrs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.icrs.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.icrs_cirs_transforms": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.builtin_frames.icrs_cirs_transforms._NEED_ORIGIN_HINT": {
  "data": {
   "lineno": 282
  },
  "type": "constant"
 },
 "astropy.coordinates.builtin_frames.icrs_cirs_transforms.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.icrs_cirs_transforms.cirs_to_cirs": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.icrs_cirs_transforms.cirs_to_icrs": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "SphericalRepresentation",
    "UnitSphericalRepresentation",
    "aticq",
    "get_cip",
    "get_jd12",
    "prepare_earth_position_vel"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.icrs_cirs_transforms.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.icrs_cirs_transforms.erfa": {
  "data": {
   "shadows": "_erfa"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.icrs_cirs_transforms.gcrs_to_gcrs": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.icrs_cirs_transforms.gcrs_to_hcrs": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "GCRS",
    "SphericalRepresentation",
    "UnitSphericalRepresentation",
    "aticq",
    "get_jd12",
    "numpy.any",
    "numpy.concatenate",
    "numpy.newaxis",
    "prepare_earth_position_vel"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.icrs_cirs_transforms.gcrs_to_icrs": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "SphericalRepresentation",
    "UnitSphericalRepresentation",
    "aticq",
    "get_jd12",
    "numpy.concatenate",
    "numpy.newaxis",
    "prepare_earth_position_vel"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.icrs_cirs_transforms.hcrs_to_hcrs": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.icrs_cirs_transforms.hcrs_to_icrs": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "UnitSphericalRepresentation",
    "astropy.coordinates.builtin_frames.icrs_cirs_transforms._NEED_ORIGIN_HINT",
    "get_body_barycentric",
    "get_body_barycentric_posvel",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.icrs_cirs_transforms.icrs_to_cirs": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "SphericalRepresentation",
    "UnitSphericalRepresentation",
    "atciqz",
    "get_cip",
    "get_jd12",
    "prepare_earth_position_vel"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.icrs_cirs_transforms.icrs_to_gcrs": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "SphericalRepresentation",
    "UnitSphericalRepresentation",
    "atciqz",
    "get_jd12",
    "numpy.concatenate",
    "numpy.newaxis",
    "prepare_earth_position_vel"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.icrs_cirs_transforms.icrs_to_hcrs": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "UnitSphericalRepresentation",
    "astropy.coordinates.builtin_frames.icrs_cirs_transforms._NEED_ORIGIN_HINT",
    "get_body_barycentric",
    "get_body_barycentric_posvel",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.icrs_cirs_transforms.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.icrs_cirs_transforms.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.icrs_cirs_transforms.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.icrs_cirs_transforms.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.icrs_fk5_transforms": {
  "data": {
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.icrs_fk5_transforms._icrs_to_fk5_matrix"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.builtin_frames.icrs_fk5_transforms._ICRS_TO_FK5_J2000_MAT": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "astropy.coordinates.builtin_frames.icrs_fk5_transforms._icrs_to_fk5_matrix": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "matrix_product",
    "rotation_matrix"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.icrs_fk5_transforms.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.icrs_fk5_transforms.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.icrs_fk5_transforms.fk5_to_icrs": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.icrs_fk5_transforms._ICRS_TO_FK5_J2000_MAT",
    "matrix_product",
    "matrix_transpose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.icrs_fk5_transforms.icrs_to_fk5": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.icrs_fk5_transforms._ICRS_TO_FK5_J2000_MAT",
    "matrix_product"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.icrs_fk5_transforms.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.icrs_fk5_transforms.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.intermediate_rotation_transforms": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.builtin_frames.intermediate_rotation_transforms.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.intermediate_rotation_transforms.cirs_to_gcrs": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "GCRS",
    "astropy.coordinates.builtin_frames.intermediate_rotation_transforms.gcrs_to_cirs_mat",
    "matrix_transpose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.intermediate_rotation_transforms.cirs_to_itrs": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "CIRS",
    "astropy.coordinates.builtin_frames.intermediate_rotation_transforms.cirs_to_itrs_mat"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.intermediate_rotation_transforms.cirs_to_itrs_mat": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "get_jd12",
    "get_polar_motion",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.intermediate_rotation_transforms.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.intermediate_rotation_transforms.erfa": {
  "data": {
   "shadows": "_erfa"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.intermediate_rotation_transforms.gcrs_precession_mat": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "get_jd12"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.intermediate_rotation_transforms.gcrs_to_cirs": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "GCRS",
    "astropy.coordinates.builtin_frames.intermediate_rotation_transforms.gcrs_to_cirs_mat"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.intermediate_rotation_transforms.gcrs_to_cirs_mat": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "get_jd12"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.intermediate_rotation_transforms.gcrs_to_precessedgeo": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "GCRS",
    "astropy.coordinates.builtin_frames.intermediate_rotation_transforms.gcrs_precession_mat"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.intermediate_rotation_transforms.itrs_to_cirs": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "CIRS",
    "astropy.coordinates.builtin_frames.intermediate_rotation_transforms.cirs_to_itrs_mat",
    "matrix_transpose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.intermediate_rotation_transforms.itrs_to_itrs": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "CIRS"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.intermediate_rotation_transforms.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.intermediate_rotation_transforms.precessedgeo_to_gcrs": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "GCRS",
    "astropy.coordinates.builtin_frames.intermediate_rotation_transforms.gcrs_precession_mat",
    "matrix_transpose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.intermediate_rotation_transforms.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.intermediate_rotation_transforms.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.itrs": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.builtin_frames.itrs.ITRS": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "TimeAttribute"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.builtin_frames.itrs.ITRS.earth_location": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "EarthLocation",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.itrs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.itrs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.itrs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.itrs.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.lsr": {
  "data": {
   "symbols_in_volume": [
    "Time",
    "astropy.coordinates.builtin_frames.lsr.LSR"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.builtin_frames.lsr.GalacticLSR": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "DifferentialAttribute",
    "RepresentationMapping",
    "astropy.coordinates.builtin_frames.lsr.v_bary_Schoenrich2010"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.builtin_frames.lsr.J2000": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.coordinates.builtin_frames.lsr.LSR": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "DifferentialAttribute",
    "astropy.coordinates.builtin_frames.lsr.v_bary_Schoenrich2010"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.builtin_frames.lsr.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.coordinates.builtin_frames.lsr.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.lsr.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.lsr.galactic_to_galacticlsr": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "Galactic",
    "astropy.coordinates.builtin_frames.lsr.GalacticLSR"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.lsr.galacticlsr_to_galactic": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "Galactic",
    "astropy.coordinates.builtin_frames.lsr.GalacticLSR"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.lsr.icrs_to_lsr": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "Galactic",
    "astropy.coordinates.builtin_frames.lsr.LSR"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.lsr.lsr_to_icrs": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "Galactic",
    "astropy.coordinates.builtin_frames.lsr.LSR"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.lsr.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.lsr.r": {
  "data": {
   "shadows": "representation"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.lsr.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.lsr.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.lsr.v_bary_Schoenrich2010": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.coordinates.builtin_frames.skyoffset": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.builtin_frames.skyoffset.SkyOffsetFrame": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "CoordinateAttribute",
    "QuantityAttribute"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.builtin_frames.skyoffset.SkyOffsetFrame.__init__": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "astropy.coordinates.builtin_frames.skyoffset.SkyOffsetFrame",
    "getattr",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.skyoffset.SkyOffsetFrame.__new__": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "astropy.coordinates.builtin_frames.skyoffset.SkyOffsetFrame",
    "astropy.coordinates.builtin_frames.skyoffset.make_skyoffset_cls",
    "hasattr",
    "issubclass",
    "object.__new__",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.skyoffset._skyoffset_cache": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "astropy.coordinates.builtin_frames.skyoffset.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.skyoffset.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.skyoffset.make_skyoffset_cls": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "SkyOffsetMeta",
    "astropy.coordinates.builtin_frames.skyoffset._skyoffset_cache"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.skyoffset.make_skyoffset_cls.SkyOffsetMeta": {
  "data": {
   "lineno": 54
  },
  "type": "class"
 },
 "astropy.coordinates.builtin_frames.skyoffset.make_skyoffset_cls.SkyOffsetMeta.__new__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "CoordinateAttribute",
    "RepresentationMapping",
    "enumerate",
    "namedtuple_asdict",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.skyoffset.make_skyoffset_cls.reference_to_skyoffset": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "matrix_product",
    "rotation_matrix"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.skyoffset.make_skyoffset_cls.skyoffset_to_reference": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "matrix_transpose",
    "reference_to_skyoffset"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.skyoffset.make_skyoffset_cls.skyoffset_to_skyoffset": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.skyoffset.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.skyoffset.r": {
  "data": {
   "shadows": "representation"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.skyoffset.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.supergalactic": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.builtin_frames.supergalactic.Supergalactic": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "Galactic",
    "RepresentationMapping"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.builtin_frames.supergalactic.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.supergalactic.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.supergalactic.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.supergalactic.r": {
  "data": {
   "shadows": "representation"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.supergalactic.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.supergalactic.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.supergalactic_transforms": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.builtin_frames.supergalactic_transforms.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.supergalactic_transforms.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.supergalactic_transforms.gal_to_supergal": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "matrix_product",
    "rotation_matrix"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.supergalactic_transforms.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.supergalactic_transforms.supergal_to_gal": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.supergalactic_transforms.gal_to_supergal",
    "matrix_transpose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.supergalactic_transforms.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.utils": {
  "data": {
   "symbols_in_volume": [
    "Time",
    "numpy.pi"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.builtin_frames.utils.DEFAULT_OBSTIME": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "astropy.coordinates.builtin_frames.utils.EQUINOX_B1950": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "astropy.coordinates.builtin_frames.utils.EQUINOX_J2000": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "astropy.coordinates.builtin_frames.utils.PIOVER2": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "astropy.coordinates.builtin_frames.utils._DEFAULT_PM": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "astropy.coordinates.builtin_frames.utils._warn_iers": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.utils.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.utils.atciqz": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.utils.aticq": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.utils.norm",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.utils.erfa": {
  "data": {
   "shadows": "_erfa"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.utils.get_cip": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.utils.get_dut1utc": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.utils._warn_iers",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.utils.get_jd12": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.utils._warn_iers",
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.utils.get_polar_motion": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "astropy.coordinates.builtin_frames.utils._DEFAULT_PM",
    "astropy.coordinates.builtin_frames.utils.warnings",
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.utils.norm": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.einsum",
    "numpy.newaxis",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.utils.prepare_earth_position_vel": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "get_body_barycentric",
    "get_body_barycentric_posvel",
    "numpy.concatenate",
    "numpy.newaxis.value"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.builtin_frames.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.utils.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.utils.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.builtin_frames.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.coordinates.calculation": {
  "data": {
   "symbols_in_volume": [
    "astropy.coordinates.calculation.inject_horoscope"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.calculation.CelestialError": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.calculation.HumanError": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.calculation._CONST_TO_SIGNS": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "astropy.coordinates.calculation._VALID_SIGNS": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "astropy.coordinates.calculation.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.coordinates.calculation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.calculation.astropy": {
  "data": {
   "shadows": "astropy"
  },
  "type": "import"
 },
 "astropy.coordinates.calculation.atime": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "astropy.coordinates.calculation.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "astropy.coordinates.calculation.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.calculation.get_sign": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.calculation.horoscope": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "Exception",
    "_color_text",
    "astropy.coordinates.calculation.CelestialError",
    "astropy.coordinates.calculation.HumanError",
    "astropy.coordinates.calculation._CONST_TO_SIGNS",
    "astropy.coordinates.calculation._VALID_SIGNS",
    "astropy.coordinates.calculation.get_sign",
    "astropy.coordinates.calculation.re",
    "astropy.coordinates.calculation.textwrap",
    "color_print",
    "datetime.datetime.now",
    "enumerate",
    "get_sun",
    "print",
    "urlopen",
    "xml.dom.minidom.parse"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.calculation.inject_horoscope": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "astropy.coordinates.calculation.astropy",
    "astropy.coordinates.calculation.horoscope"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.calculation.parse": {
  "data": {
   "shadows": "xml.dom.minidom.parse"
  },
  "type": "import"
 },
 "astropy.coordinates.calculation.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.calculation.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.coordinates.calculation.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "astropy.coordinates.calculation.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.distances": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.distances.Distance": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "astropy.coordinates.distances.Distance.__new__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "astropy.coordinates.distances.Distance",
    "numpy.any",
    "numpy.log10",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.distances.Distance._distmod_to_pc": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.distances.Distance.compute_z": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "z_at_value"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.distances.Distance.distmod": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "numpy.log10",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.distances.Distance.z": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.distances.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "astropy.coordinates.distances.__doctest_requires__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "astropy.coordinates.distances._convert_to_and_validate_length_unit": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "AssertionError",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.distances.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.distances.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.distances.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.distances.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.distances.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.distances.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.earth": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.coordinates.earth.collections"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.earth.ELLIPSOIDS": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "astropy.coordinates.earth.EarthLocation": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "astropy.coordinates.earth.EarthLocationInfo",
    "numpy.dtype",
    "numpy.float64",
    "property"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.earth.EarthLocation.__array_finalize__": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "astropy.coordinates.earth.EarthLocation",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth.EarthLocation.__getitem__": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "astropy.coordinates.earth.EarthLocation",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth.EarthLocation.__len__": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "IndexError",
    "astropy.coordinates.earth.EarthLocation",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth.EarthLocation.__new__": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "astropy.coordinates.earth.EarthLocation",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth.EarthLocation.__repr__": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "_array2string",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth.EarthLocation._get_site_registry": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "AstropyUserWarning",
    "IOError",
    "ValueError",
    "classmethod",
    "get_builtin_sites",
    "get_downloaded_sites",
    "getattr",
    "isinstance",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth.EarthLocation._to_value": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth.EarthLocation.ellipsoid": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "astropy.coordinates.earth._check_ellipsoid"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth.EarthLocation.from_geocentric": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "astropy.coordinates.earth.EarthLocation",
    "classmethod",
    "numpy.broadcast_arrays",
    "numpy.empty",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth.EarthLocation.from_geodetic": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "Latitude",
    "Longitude",
    "astropy.coordinates.earth._check_ellipsoid",
    "classmethod",
    "getattr",
    "isinstance",
    "numpy.broadcast_arrays"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth.EarthLocation.geocentric": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth.EarthLocation.geodetic": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth.EarthLocation.get_gcrs_posvel": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "GCRS",
    "astropy.coordinates.earth.OMEGA_EARTH"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth.EarthLocation.get_itrs": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "ITRS",
    "broadcast_to"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth.EarthLocation.get_site_names": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth.EarthLocation.height": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth.EarthLocation.lat": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth.EarthLocation.latitude": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth.EarthLocation.lon": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth.EarthLocation.longitude": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth.EarthLocation.of_address": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "astropy.coordinates.earth._get_json_result",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth.EarthLocation.of_site": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "UnknownSiteException",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth.EarthLocation.to_geocentric": {
  "data": {
   "lineno": 577
  },
  "type": "function"
 },
 "astropy.coordinates.earth.EarthLocation.to_geodetic": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "Latitude",
    "Longitude",
    "astropy.coordinates.earth.GeodeticLocation",
    "astropy.coordinates.earth._check_ellipsoid",
    "getattr",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth.EarthLocation.x": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth.EarthLocation.y": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth.EarthLocation.z": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth.EarthLocationInfo": {
  "data": {
   "lineno": 87
  },
  "type": "class"
 },
 "astropy.coordinates.earth.EarthLocationInfo._construct_from_dict": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "map",
    "map.pop"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth.EarthLocationInfo.new_like": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "getattr",
    "map",
    "numpy.zeros",
    "setattr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth.GeodeticLocation": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "astropy.coordinates.earth.OMEGA_EARTH": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "astropy.coordinates.earth.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "astropy.coordinates.earth._check_ellipsoid": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "astropy.coordinates.earth.ELLIPSOIDS"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth._get_json_result": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "NameResolveError",
    "astropy.coordinates.earth.json",
    "astropy.coordinates.earth.socket",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.earth.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "astropy.coordinates.earth.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.earth.erfa": {
  "data": {
   "shadows": "_erfa"
  },
  "type": "import"
 },
 "astropy.coordinates.earth.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "astropy.coordinates.earth.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.earth.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.earth.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "astropy.coordinates.earth.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.earth.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "astropy.coordinates.earth_orientation": {
  "data": {
   "symbols_in_volume": [
    "Time",
    "astropy.coordinates.earth_orientation._load_nutation_data"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.earth_orientation._asecperrad": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.coordinates.earth_orientation._load_nutation_data": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "float",
    "int",
    "numpy.rec.fromarrays"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth_orientation._nut_data_00b": {
  "data": {
   "lineno": 346
  },
  "type": "constant"
 },
 "astropy.coordinates.earth_orientation._precess_from_J2000_Capitaine": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "matrix_product",
    "numpy.polyval",
    "rotation_matrix"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth_orientation._precession_matrix_besselian": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "matrix_product",
    "numpy.polyval",
    "rotation_matrix"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth_orientation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.earth_orientation.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.earth_orientation.eccentricity": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "astropy.coordinates.earth_orientation.jd1950",
    "numpy.polyval"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth_orientation.jd1950": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.coordinates.earth_orientation.jd2000": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "astropy.coordinates.earth_orientation.mean_lon_of_perigee": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "astropy.coordinates.earth_orientation.jd1950",
    "numpy.polyval"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth_orientation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.earth_orientation.nutation_components2000B": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "astropy.coordinates.earth_orientation._asecperrad",
    "astropy.coordinates.earth_orientation._nut_data_00b",
    "astropy.coordinates.earth_orientation.jd2000",
    "astropy.coordinates.earth_orientation.obliquity",
    "numpy.cos",
    "numpy.radians",
    "numpy.sin",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth_orientation.nutation_matrix": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "astropy.coordinates.earth_orientation.nutation_components2000B",
    "matrix_product",
    "rotation_matrix"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth_orientation.obliquity": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "astropy.coordinates.earth_orientation.jd2000",
    "numpy.polyval"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth_orientation.precession_matrix_Capitaine": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "astropy.coordinates.earth_orientation._precess_from_J2000_Capitaine",
    "matrix_transpose",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.earth_orientation.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.earth_orientation.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.earth_orientation.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.errors": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.errors.BoundsError": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "astropy.coordinates.errors.RangeError"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.errors.ConvertError": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.errors.IllegalHourError": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "astropy.coordinates.errors.RangeError"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.errors.IllegalHourError.__init__": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "astropy.coordinates.errors.IllegalHourError.__str__": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "astropy.coordinates.errors.IllegalHourWarning": {
  "data": {
   "lineno": 52
  },
  "type": "class"
 },
 "astropy.coordinates.errors.IllegalHourWarning.__init__": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "astropy.coordinates.errors.IllegalHourWarning.__str__": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "astropy.coordinates.errors.IllegalMinuteError": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "astropy.coordinates.errors.RangeError"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.errors.IllegalMinuteError.__init__": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "astropy.coordinates.errors.IllegalMinuteError.__str__": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "astropy.coordinates.errors.IllegalMinuteWarning": {
  "data": {
   "lineno": 95
  },
  "type": "class"
 },
 "astropy.coordinates.errors.IllegalMinuteWarning.__init__": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "astropy.coordinates.errors.IllegalMinuteWarning.__str__": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "astropy.coordinates.errors.IllegalSecondError": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "astropy.coordinates.errors.RangeError"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.errors.IllegalSecondError.__init__": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "astropy.coordinates.errors.IllegalSecondError.__str__": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "astropy.coordinates.errors.IllegalSecondWarning": {
  "data": {
   "lineno": 137
  },
  "type": "class"
 },
 "astropy.coordinates.errors.IllegalSecondWarning.__init__": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "astropy.coordinates.errors.IllegalSecondWarning.__str__": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "astropy.coordinates.errors.RangeError": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.errors.UnitsError": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.errors.UnknownSiteException": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.errors.UnknownSiteException.__init__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "astropy.coordinates.errors.UnknownSiteException",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.errors.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "astropy.coordinates.errors.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.errors.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.errors.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.errors.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.funcs": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.funcs.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "astropy.coordinates.funcs._constellation_data": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "astropy.coordinates.funcs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.funcs.cartesian_to_spherical": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.funcs.concatenate": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "SkyCoord",
    "TypeError",
    "getattr",
    "isiterable"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.funcs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.funcs.erfa": {
  "data": {
   "shadows": "_erfa"
  },
  "type": "import"
 },
 "astropy.coordinates.funcs.get_constellation": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "PrecessedGeocentric",
    "ValueError",
    "ascii.read",
    "astropy.coordinates.funcs._constellation_data",
    "dict",
    "enumerate",
    "int",
    "len",
    "numpy.array",
    "numpy.ones",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.funcs.get_sun": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "GCRS",
    "SkyCoord",
    "get_jd12",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.funcs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.funcs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.funcs.spherical_to_cartesian": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "SphericalRepresentation",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.funcs.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.funcs.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.matrix_utilities": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.matrix_utilities.angle_axis": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "Angle",
    "ValueError",
    "numpy.arctan2",
    "numpy.asanyarray",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.matrix_utilities.matrix_product": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "functools.reduce"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.matrix_utilities.matrix_transpose": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "astropy.coordinates.matrix_utilities.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.matrix_utilities.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "astropy.coordinates.matrix_utilities.rotation_matrix": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "Angle",
    "TypeError",
    "numpy.asarray",
    "numpy.cos",
    "numpy.newaxis",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.matrix_utilities.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.name_resolve": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.name_resolve.NameResolveError": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.name_resolve.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "astropy.coordinates.name_resolve._parse_response": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "astropy.coordinates.name_resolve.re"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.name_resolve.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.name_resolve.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.name_resolve.get_icrs_coordinates": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "SkyCoord",
    "astropy.coordinates.name_resolve.NameResolveError",
    "astropy.coordinates.name_resolve._parse_response",
    "astropy.coordinates.name_resolve.os",
    "astropy.coordinates.name_resolve.sesame_database",
    "astropy.coordinates.name_resolve.sesame_url",
    "astropy.coordinates.name_resolve.socket",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.name_resolve.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.coordinates.name_resolve.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.name_resolve.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.coordinates.name_resolve.sesame_database": {
  "data": {
   "lineno": 41
  },
  "type": "class"
 },
 "astropy.coordinates.name_resolve.sesame_database.validate": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.name_resolve.sesame_url": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "astropy.coordinates.name_resolve.sesame_url.validate": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.name_resolve.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "astropy.coordinates.name_resolve.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.name_resolve.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.orbital_elements": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.orbital_elements._MOON_B": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "astropy.coordinates.orbital_elements._MOON_L_R": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "astropy.coordinates.orbital_elements.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "astropy.coordinates.orbital_elements._coA1": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "astropy.coordinates.orbital_elements._coA2": {
  "data": {
   "lineno": 171
  },
  "type": "constant"
 },
 "astropy.coordinates.orbital_elements._coA3": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "astropy.coordinates.orbital_elements._coD": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "astropy.coordinates.orbital_elements._coE": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "astropy.coordinates.orbital_elements._coF": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "astropy.coordinates.orbital_elements._coLc": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "astropy.coordinates.orbital_elements._coM": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "astropy.coordinates.orbital_elements._coMc": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "astropy.coordinates.orbital_elements.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.orbital_elements.calc_moon": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "GeocentricTrueEcliptic",
    "SkyCoord",
    "abs",
    "astropy.coordinates.orbital_elements._MOON_B",
    "astropy.coordinates.orbital_elements._MOON_L_R",
    "astropy.coordinates.orbital_elements._coA1",
    "astropy.coordinates.orbital_elements._coA2",
    "astropy.coordinates.orbital_elements._coA3",
    "astropy.coordinates.orbital_elements._coD",
    "astropy.coordinates.orbital_elements._coE",
    "astropy.coordinates.orbital_elements._coF",
    "astropy.coordinates.orbital_elements._coLc",
    "astropy.coordinates.orbital_elements._coM",
    "astropy.coordinates.orbital_elements._coMc",
    "get_jd12",
    "numpy.cos",
    "numpy.polynomial.polynomial.polyval",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.orbital_elements.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.orbital_elements.erfa": {
  "data": {
   "shadows": "_erfa"
  },
  "type": "import"
 },
 "astropy.coordinates.orbital_elements.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.orbital_elements.polyval": {
  "data": {
   "shadows": "numpy.polynomial.polynomial.polyval"
  },
  "type": "import"
 },
 "astropy.coordinates.orbital_elements.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.orbital_elements.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.orbital_elements.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.setup_package": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.setup_package.get_package_data": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "astropy.coordinates.setup_package.requires_2to3": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "astropy.coordinates.sites": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.sites.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "astropy.coordinates.sites.SiteRegistry": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "collections.Mapping"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.sites.SiteRegistry.__contains__": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "astropy.coordinates.sites.SiteRegistry.__getitem__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "UnknownSiteException",
    "difflib.get_close_matches",
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.sites.SiteRegistry.__init__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "astropy.coordinates.sites.SiteRegistry.__iter__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.sites.SiteRegistry.__len__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.sites.SiteRegistry.add_site": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "astropy.coordinates.sites.SiteRegistry.from_json": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.sites.SiteRegistry.names": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "property",
    "sorted"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.sites.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.sites.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.sites.get_builtin_sites": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "astropy.coordinates.sites.SiteRegistry",
    "astropy.coordinates.sites.json",
    "get_pkg_data_contents"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.sites.get_close_matches": {
  "data": {
   "shadows": "difflib.get_close_matches"
  },
  "type": "import"
 },
 "astropy.coordinates.sites.get_downloaded_sites": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "astropy.coordinates.sites.SiteRegistry",
    "astropy.coordinates.sites.json",
    "get_file_contents"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.sites.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "astropy.coordinates.sites.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.sites.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.sites.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.solar_system": {
  "data": {
   "symbols_in_volume": [
    "astropy.coordinates.solar_system._EPHEMERIS_NOTE",
    "astropy.coordinates.solar_system._get_apparent_body_position",
    "astropy.coordinates.solar_system.get_body",
    "astropy.coordinates.solar_system.get_body_barycentric",
    "astropy.coordinates.solar_system.get_body_barycentric_posvel",
    "astropy.coordinates.solar_system.get_moon",
    "collections.OrderedDict",
    "indent"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.solar_system.BODY_NAME_TO_KERNEL_SPEC": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "astropy.coordinates.solar_system.DEFAULT_JPL_EPHEMERIS": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "astropy.coordinates.solar_system.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.coordinates.solar_system.PLAN94_BODY_NAME_TO_PLANET_INDEX": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "astropy.coordinates.solar_system.SPK": {
  "data": {
   "shadows": "jplephem.spk.SPK"
  },
  "type": "import"
 },
 "astropy.coordinates.solar_system._EPHEMERIS_NOTE": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "astropy.coordinates.solar_system.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "astropy.coordinates.solar_system._apparent_position_in_true_coordinates": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "SkyCoord",
    "get_jd12"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.solar_system._get_apparent_body_position": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "astropy.coordinates.solar_system.get_body_barycentric",
    "astropy.coordinates.solar_system.solar_system_ephemeris",
    "numpy.any",
    "numpy.fabs"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.solar_system._get_body_barycentric_posvel": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "KeyError",
    "ValueError",
    "astropy.coordinates.solar_system.BODY_NAME_TO_KERNEL_SPEC",
    "astropy.coordinates.solar_system.PLAN94_BODY_NAME_TO_PLANET_INDEX",
    "astropy.coordinates.solar_system._EPHEMERIS_NOTE",
    "astropy.coordinates.solar_system._get_kernel",
    "astropy.coordinates.solar_system.solar_system_ephemeris",
    "calc_moon",
    "get_jd12",
    "getattr",
    "isinstance",
    "len",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.solar_system._get_kernel": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "ValueError",
    "astropy.coordinates.solar_system.DEFAULT_JPL_EPHEMERIS",
    "download_file",
    "jplephem.spk.SPK.open"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.solar_system.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.solar_system.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.solar_system.erfa": {
  "data": {
   "shadows": "_erfa"
  },
  "type": "import"
 },
 "astropy.coordinates.solar_system.get_body": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "GCRS",
    "ICRS",
    "SkyCoord",
    "astropy.coordinates.solar_system._get_apparent_body_position"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.solar_system.get_body_barycentric": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "astropy.coordinates.solar_system._get_body_barycentric_posvel"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.solar_system.get_body_barycentric_posvel": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "astropy.coordinates.solar_system._get_body_barycentric_posvel"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.solar_system.get_moon": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "astropy.coordinates.solar_system.get_body"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.solar_system.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.solar_system.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.solar_system.solar_system_ephemeris": {
  "data": {
   "lineno": 79
  },
  "type": "class"
 },
 "astropy.coordinates.solar_system.solar_system_ephemeris.bodies": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "astropy.coordinates.solar_system.BODY_NAME_TO_KERNEL_SPEC",
    "astropy.coordinates.solar_system.PLAN94_BODY_NAME_TO_PLANET_INDEX",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.solar_system.solar_system_ephemeris.get_kernel": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "astropy.coordinates.solar_system._get_kernel",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.solar_system.solar_system_ephemeris.kernel": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "astropy.coordinates.solar_system.solar_system_ephemeris.validate": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.solar_system.speed_of_light": {
  "data": {
   "shadows": "c"
  },
  "type": "import"
 },
 "astropy.coordinates.solar_system.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.solar_system.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.tests.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.tests.accuracy.N_ACCURACY_TESTS": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.accuracy.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.generate_ref_ast": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "astropy.coordinates.tests.accuracy.generate_ref_ast.ref_fk4_no_e_fk4",
    "astropy.coordinates.tests.accuracy.generate_ref_ast.ref_fk4_no_e_fk5",
    "astropy.coordinates.tests.accuracy.generate_ref_ast.ref_galactic_fk4",
    "astropy.coordinates.tests.accuracy.generate_ref_ast.ref_icrs_fk5"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.tests.accuracy.generate_ref_ast.Ast": {
  "data": {
   "shadows": "starlink.Ast"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.generate_ref_ast.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.generate_ref_ast.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.generate_ref_ast.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.generate_ref_ast.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.generate_ref_ast.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.generate_ref_ast.ref_fk4_no_e_fk4": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "Column",
    "Table",
    "astropy.coordinates.tests.accuracy.generate_ref_ast.os",
    "numpy.arcsin",
    "numpy.degrees",
    "numpy.radians",
    "numpy.random.seed",
    "numpy.random.uniform",
    "open",
    "range",
    "starlink.Ast.SkyFrame"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.accuracy.generate_ref_ast.ref_fk4_no_e_fk5": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "Column",
    "Table",
    "astropy.coordinates.tests.accuracy.generate_ref_ast.os",
    "numpy.arcsin",
    "numpy.degrees",
    "numpy.radians",
    "numpy.random.seed",
    "numpy.random.uniform",
    "open",
    "range",
    "starlink.Ast.SkyFrame"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.accuracy.generate_ref_ast.ref_galactic_fk4": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "Column",
    "Table",
    "astropy.coordinates.tests.accuracy.generate_ref_ast.os",
    "numpy.arcsin",
    "numpy.degrees",
    "numpy.radians",
    "numpy.random.seed",
    "numpy.random.uniform",
    "open",
    "range",
    "starlink.Ast.SkyFrame"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.accuracy.generate_ref_ast.ref_icrs_fk5": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "Column",
    "Table",
    "astropy.coordinates.tests.accuracy.generate_ref_ast.os",
    "numpy.arcsin",
    "numpy.degrees",
    "numpy.radians",
    "numpy.random.seed",
    "numpy.random.uniform",
    "open",
    "range",
    "starlink.Ast.SkyFrame"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.accuracy.generate_ref_ast.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_altaz_icrs": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.tests.accuracy.test_altaz_icrs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_altaz_icrs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_altaz_icrs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_altaz_icrs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_altaz_icrs.test_against_hor2eq": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "AltAz",
    "Angle",
    "EarthLocation",
    "SkyCoord",
    "Time"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.accuracy.test_altaz_icrs.test_against_jpl_horizons": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "AltAz",
    "Angle",
    "EarthLocation",
    "SkyCoord",
    "Time"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.accuracy.test_altaz_icrs.test_against_pyephem": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "AltAz",
    "Angle",
    "EarthLocation",
    "SkyCoord",
    "Time"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.accuracy.test_altaz_icrs.test_fk5_equinox_and_epoch_j2000_0_to_topocentric_observed": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "AltAz",
    "Angle",
    "EarthLocation",
    "SkyCoord",
    "Time",
    "astropy.coordinates.tests.accuracy.test_altaz_icrs.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.accuracy.test_altaz_icrs.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_altaz_icrs.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_ecliptic": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.tests.accuracy.test_ecliptic.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_ecliptic.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_ecliptic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_ecliptic.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_ecliptic.test_against_pytpm_doc_example": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "BarycentricTrueEcliptic",
    "FK5",
    "SkyCoord"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.accuracy.test_ecliptic.test_arraytransforms": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "BarycentricTrueEcliptic",
    "GCRS",
    "ICRS",
    "float",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.accuracy.test_ecliptic.test_ecl_geo": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "GCRS",
    "quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.accuracy.test_ecliptic.test_ecliptic_heliobary": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "BarycentricTrueEcliptic",
    "ICRS",
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.accuracy.test_ecliptic.test_roundtrip_scalar": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "BarycentricTrueEcliptic",
    "GCRS",
    "ICRS",
    "quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.accuracy.test_ecliptic.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_ecliptic.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_fk4_no_e_fk4": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.tests.accuracy.test_fk4_no_e_fk4.TOLERANCE": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.accuracy.test_fk4_no_e_fk4.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_fk4_no_e_fk4.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_fk4_no_e_fk4.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_fk4_no_e_fk4.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_fk4_no_e_fk4.test_fk4_no_e_fk4": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "FK4",
    "FK4NoETerms",
    "Time",
    "angular_separation",
    "astropy.coordinates.tests.accuracy.test_fk4_no_e_fk4.TOLERANCE",
    "get_pkg_data_contents",
    "int",
    "len",
    "numpy.degrees",
    "numpy.radians",
    "numpy.random.randint",
    "numpy.testing.assert_array_less",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.accuracy.test_fk4_no_e_fk4.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_fk4_no_e_fk4.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_fk4_no_e_fk5": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.tests.accuracy.test_fk4_no_e_fk5.TOLERANCE": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.accuracy.test_fk4_no_e_fk5.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_fk4_no_e_fk5.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_fk4_no_e_fk5.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_fk4_no_e_fk5.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_fk4_no_e_fk5.test_fk4_no_e_fk5": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "FK4NoETerms",
    "FK5",
    "Time",
    "angular_separation",
    "astropy.coordinates.tests.accuracy.test_fk4_no_e_fk5.TOLERANCE",
    "get_pkg_data_contents",
    "int",
    "len",
    "numpy.degrees",
    "numpy.radians",
    "numpy.random.randint",
    "numpy.testing.assert_array_less",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.accuracy.test_fk4_no_e_fk5.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_fk4_no_e_fk5.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_galactic_fk4": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.tests.accuracy.test_galactic_fk4.TOLERANCE": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.accuracy.test_galactic_fk4.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_galactic_fk4.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_galactic_fk4.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_galactic_fk4.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_galactic_fk4.test_galactic_fk4": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "FK4",
    "Galactic",
    "Time",
    "angular_separation",
    "astropy.coordinates.tests.accuracy.test_galactic_fk4.TOLERANCE",
    "get_pkg_data_contents",
    "int",
    "len",
    "numpy.degrees",
    "numpy.radians",
    "numpy.random.randint",
    "numpy.testing.assert_array_less",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.accuracy.test_galactic_fk4.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_galactic_fk4.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_icrs_fk5": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.tests.accuracy.test_icrs_fk5.TOLERANCE": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.accuracy.test_icrs_fk5.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_icrs_fk5.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_icrs_fk5.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_icrs_fk5.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_icrs_fk5.test_icrs_fk5": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "FK5",
    "ICRS",
    "Time",
    "angular_separation",
    "astropy.coordinates.tests.accuracy.test_icrs_fk5.TOLERANCE",
    "get_pkg_data_contents",
    "int",
    "len",
    "numpy.degrees",
    "numpy.radians",
    "numpy.random.randint",
    "numpy.testing.assert_array_less",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.accuracy.test_icrs_fk5.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.test_icrs_fk5.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.accuracy.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_angles": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.tests.test_angles.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_angles.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.utils.assert_allclose"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_angles.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.utils.assert_array_equal"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_angles.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_angles.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_angles.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_angles.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_angles.test_angle_convert": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "Angle",
    "float",
    "isinstance",
    "len",
    "numpy.testing.utils.assert_allclose",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_angle_format_roundtripping": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "Angle",
    "Latitude",
    "Longitude",
    "numpy.testing.utils.assert_allclose",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_angle_formatting": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "Angle",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_angle_from_view": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "Angle",
    "astropy.coordinates.tests.test_angles.pytest",
    "numpy.all",
    "numpy.arange",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_angle_mismatched_unit": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "Angle",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_angle_ops": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "Angle",
    "TypeError",
    "abs",
    "astropy.coordinates.tests.test_angles.pytest",
    "numpy.sin",
    "numpy.testing.utils.assert_allclose",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_angle_repr": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "Angle",
    "Latitude",
    "Longitude",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_angle_string": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "Angle",
    "numpy.testing.utils.assert_allclose",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_angle_to_is_angle": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "Angle",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_angle_to_quantity": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "Angle",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_angle_with_cds_units_enabled": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "Angle"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_array_angle_tostring": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "Angle",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_create_angles": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "Angle",
    "ValueError",
    "astropy.coordinates.tests.test_angles.pytest",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_create_tuple": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "Angle"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_empty_sep": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "Angle"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_is_within_bounds": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "Angle"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_large_angle_representation": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "Angle",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_latitude": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "Angle",
    "Latitude",
    "Longitude",
    "TypeError",
    "ValueError",
    "astropy.coordinates.tests.test_angles.pytest",
    "numpy.all",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_list_of_quantities": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "Angle",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_longitude": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "Angle",
    "Latitude",
    "Longitude",
    "TypeError",
    "astropy.coordinates.tests.test_angles.pytest",
    "float",
    "hasattr",
    "int",
    "numpy.all",
    "numpy.array",
    "numpy.dtype",
    "numpy.pi",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_mixed_string_and_quantity": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "Angle",
    "numpy.pi",
    "numpy.testing.utils.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_multiply_divide": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "Angle",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_negative_fifty_nine_sixty_dms": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "Angle",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_negative_sixty_dms": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "Angle",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_negative_sixty_hm": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "Angle",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_negative_zero_dm": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "Angle",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_negative_zero_dms": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "Angle",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_negative_zero_hm": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "Angle",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_negative_zero_hms": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "Angle",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_plus_fifty_nine_sixty_dms": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "Angle",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_plus_sixty_dms": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "Angle",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_plus_sixty_hm": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "Angle",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_quantity_to_angle": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "Angle",
    "astropy.coordinates.tests.test_angles.pytest",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_radec": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "Latitude",
    "Longitude",
    "ValueError",
    "astropy.coordinates.tests.test_angles.pytest",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_regression_formatting_negative": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "Angle"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_repr_latex": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "Angle",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_to_string_vector": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "Angle"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_wrap_at": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "Angle",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_wrap_at_inplace": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "Angle",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.test_wrap_at_without_new": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "Longitude",
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angles.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_angles.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_angular_separation": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.tests.test_angular_separation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_angular_separation.assert_allclose": {
  "data": {
   "shadows": "assert_quantity_allclose"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_angular_separation.coords": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_angular_separation.correct_seps": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_angular_separation.correctness_margin": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_angular_separation.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_angular_separation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_angular_separation.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_angular_separation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_angular_separation.test_3d_separations": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ICRS",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angular_separation.test_angsep": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "Angle",
    "angular_separation",
    "astropy.coordinates.tests.test_angular_separation.coords",
    "astropy.coordinates.tests.test_angular_separation.correct_seps",
    "astropy.coordinates.tests.test_angular_separation.correctness_margin",
    "conv",
    "numpy.deg2rad",
    "numpy.fabs",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angular_separation.test_fk5_seps": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "FK5"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angular_separation.test_proj_separations": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "Angle",
    "Galactic",
    "ICRS",
    "TypeError",
    "astropy.coordinates.tests.test_angular_separation.pytest",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_angular_separation.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_angular_separation.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_api_ape5": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.tests.test_api_ape5.HAS_SCIPY": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_api_ape5.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_api_ape5.allclose": {
  "data": {
   "shadows": "quantity_allclose"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_api_ape5.assert_allclose": {
  "data": {
   "shadows": "assert_quantity_allclose"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_api_ape5.coords": {
  "data": {
   "shadows": "coordinates"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_api_ape5.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_api_ape5.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_api_ape5.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_api_ape5.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_api_ape5.raises": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_api_ape5.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_api_ape5.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_api_ape5.test_frame_api": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "AttributeError",
    "FK5",
    "ICRS",
    "SphericalRepresentation",
    "UnitSphericalRepresentation",
    "ValueError",
    "all",
    "astropy.coordinates.tests.test_api_ape5.raises"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_api_ape5.test_highlevel_api": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "ValueError",
    "astropy.coordinates.tests.test_api_ape5.HAS_SCIPY",
    "numpy.any",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_api_ape5.test_highlevel_api_remote": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "numpy.abs",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_api_ape5.test_representations_api": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "Angle",
    "AttributeError",
    "CartesianRepresentation",
    "Distance",
    "Latitude",
    "Longitude",
    "PhysicsSphericalRepresentation",
    "SphericalRepresentation",
    "SphericalRepresentation.from_representation",
    "UnitSphericalRepresentation",
    "ValueError",
    "astropy.coordinates.tests.test_api_ape5.raises",
    "isinstance",
    "len",
    "numpy.pi",
    "numpy.random.randn",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_api_ape5.test_transform_api": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "FK5",
    "ICRS",
    "UnitSphericalRepresentation",
    "ValueError",
    "astropy.coordinates.tests.test_api_ape5.raises",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_api_ape5.test_transform_api.SomeNewSystem": {
  "data": {
   "lineno": 306
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_api_ape5.test_transform_api.new_to_fk5": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "FK5",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_api_ape5.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_api_ape5.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_arrays": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.tests.test_arrays.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_arrays.assert_allclose": {
  "data": {
   "shadows": "assert_quantity_allclose"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_arrays.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_arrays.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_arrays.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_arrays.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_arrays.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_arrays.test_angle_arrays": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Angle",
    "TypeError",
    "astropy.coordinates.tests.test_arrays.pytest",
    "numpy.array",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_arrays.test_array_coordinates_creation": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "Angle",
    "CartesianRepresentation",
    "ICRS",
    "SkyCoord",
    "ValueError",
    "astropy.coordinates.tests.test_arrays.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_arrays.test_array_coordinates_distances": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "ICRS",
    "ValueError",
    "astropy.coordinates.tests.test_arrays.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_arrays.test_array_coordinates_transformations": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ICRS",
    "astropy.coordinates.tests.test_arrays.pytest",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "print"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_arrays.test_array_eq": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "ICRS"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_arrays.test_array_indexing": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "FK5",
    "Time",
    "numpy.array",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_arrays.test_array_len": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "ICRS",
    "TypeError",
    "astropy.coordinates.tests.test_arrays.pytest",
    "len",
    "numpy.linspace",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_arrays.test_array_precession": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "FK5",
    "Time",
    "numpy.abs",
    "numpy.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_arrays.test_array_separation": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "ICRS",
    "abs",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_arrays.test_dms": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "Angle",
    "dms_to_degrees",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_arrays.test_hms": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "Angle",
    "hms_to_hours",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_arrays.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_arrays.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_atc_replacements": {
  "data": {
   "symbols_in_volume": [
    "Time",
    "astropy.coordinates.tests.test_atc_replacements.positions",
    "astropy.coordinates.tests.test_atc_replacements.times",
    "itertools.product",
    "randomly_sample_sphere"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.tests.test_atc_replacements.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_atc_replacements.assert_allclose": {
  "data": {
   "shadows": "assert_quantity_allclose"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_atc_replacements.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_atc_replacements.erfa": {
  "data": {
   "shadows": "_erfa"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_atc_replacements.positions": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_atc_replacements.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_atc_replacements.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_atc_replacements.spacetimes": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_atc_replacements.test_atciqz_aticq": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "astropy.coordinates.tests.test_atc_replacements.spacetimes",
    "atciqz",
    "aticq",
    "get_jd12"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_atc_replacements.times": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_atc_replacements.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_celestial_transformations": {
  "data": {
   "symbols_in_volume": [
    "Distance",
    "astropy.coordinates.tests.test_celestial_transformations.m31_coo",
    "astropy.coordinates.tests.test_celestial_transformations.m31_params",
    "astropy.coordinates.tests.test_celestial_transformations.m31_sys",
    "len",
    "range"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.tests.test_celestial_transformations.TestHCRS": {
  "data": {
   "lineno": 181
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_celestial_transformations.TestHCRS.setup": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "HCRS",
    "ICRS",
    "Time"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_celestial_transformations.TestHCRS.test_from_hcrs": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ICRS"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_celestial_transformations.TestHCRS.test_from_icrs": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "HCRS"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_celestial_transformations.TestHelioBaryCentric": {
  "data": {
   "lineno": 232
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_celestial_transformations.TestHelioBaryCentric.setup": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "EarthLocation",
    "Time"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_celestial_transformations.TestHelioBaryCentric.test_barycentric": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "GCRS",
    "ICRS",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_celestial_transformations.TestHelioBaryCentric.test_heliocentric": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "GCRS",
    "HCRS",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_celestial_transformations.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_celestial_transformations.allclose": {
  "data": {
   "shadows": "quantity_allclose"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_celestial_transformations.assert_allclose": {
  "data": {
   "shadows": "assert_quantity_allclose"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_celestial_transformations.convert_precision": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_celestial_transformations.dist_precision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_celestial_transformations.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_celestial_transformations.m31_coo": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_celestial_transformations.m31_dist": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_celestial_transformations.m31_params": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_celestial_transformations.m31_sys": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_celestial_transformations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_celestial_transformations.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_celestial_transformations.roundtrip_precision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_celestial_transformations.test_fk5_galactic": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "FK4",
    "FK5"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_celestial_transformations.test_galactocentric": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "Galactic",
    "Galactocentric",
    "ICRS",
    "numpy.abs",
    "numpy.array",
    "numpy.linspace",
    "numpy.ones_like",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_celestial_transformations.test_lsr_sanity": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "Galactic",
    "ICRS",
    "LSR"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_celestial_transformations.test_m31_coord_transforms": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "FK4",
    "Time",
    "astropy.coordinates.tests.test_celestial_transformations.convert_precision",
    "astropy.coordinates.tests.test_celestial_transformations.dist_precision",
    "astropy.coordinates.tests.test_celestial_transformations.m31_dist",
    "astropy.coordinates.tests.test_celestial_transformations.m31_params",
    "astropy.coordinates.tests.test_celestial_transformations.roundtrip_precision",
    "fromsys"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_celestial_transformations.test_precession": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "FK4",
    "FK5",
    "Time"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_celestial_transformations.test_supergalactic": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "Galactic",
    "SkyCoord",
    "Supergalactic"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_celestial_transformations.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_celestial_transformations.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_distance": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.tests.test_distance.HAS_SCIPY": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_distance.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_distance.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_distance.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_distance.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_distance.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_distance.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_distance.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_distance.test_distance_change": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "AttributeError",
    "Distance",
    "ICRS",
    "Latitude",
    "Longitude",
    "astropy.coordinates.tests.test_distance.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_distance.test_distance_comparison": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "Distance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_distance.test_distance_in_coordinates": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "ICRS",
    "Latitude",
    "Longitude",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_distance.test_distance_is_quantity": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "Distance",
    "numpy.all",
    "numpy.array",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_distance.test_distance_to_quantity_when_not_units_of_length": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "Distance",
    "isinstance",
    "numpy.pi",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_distance.test_distances": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "Distance",
    "Galactic",
    "ICRS",
    "astropy.coordinates.tests.test_distance.pytest",
    "isinstance",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_distance.test_distances_scipy": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "Distance",
    "astropy.coordinates.tests.test_distance.pytest",
    "numpy.testing.assert_allclose",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_distance.test_distmod": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "Distance",
    "ValueError",
    "astropy.coordinates.tests.test_distance.pytest",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_distance.test_negative_distance": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "Distance",
    "ValueError",
    "astropy.coordinates.tests.test_distance.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_distance.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_distance.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_earth": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.tests.test_earth.TestInput": {
  "data": {
   "lineno": 102
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_earth.TestInput.setup": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "Latitude",
    "Longitude"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_earth.TestInput.test_attribute_classes": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "Latitude",
    "Longitude",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_earth.TestInput.test_default_ellipsoid": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_earth.TestInput.test_ellipsoid": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "EarthLocation.from_geodetic",
    "astropy.coordinates.tests.test_earth.allclose_m14",
    "astropy.coordinates.tests.test_earth.allclose_m8",
    "astropy.coordinates.tests.test_earth.isclose_m14",
    "astropy.coordinates.tests.test_earth.isclose_m8",
    "astropy.coordinates.tests.test_earth.pytest",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_earth.TestInput.test_ellipsoid.test_to_value": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.empty_like",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_earth.TestInput.test_geo_attributes": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "all",
    "numpy.all",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_earth.TestInput.test_input": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "EarthLocation",
    "astropy.coordinates.tests.test_earth.allclose_m14",
    "astropy.coordinates.tests.test_earth.isclose_m14",
    "numpy.all",
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_earth.TestInput.test_invalid_ellipsoid": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "EarthLocation",
    "EarthLocation.from_geodetic",
    "TypeError",
    "ValueError",
    "astropy.coordinates.tests.test_earth.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_earth.TestInput.test_invalid_input": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "EarthLocation",
    "EarthLocation.from_geocentric",
    "EarthLocation.from_geodetic",
    "TypeError",
    "ValueError",
    "astropy.coordinates.tests.test_earth.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_earth.TestInput.test_slicing": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "EarthLocation",
    "EarthLocation.from_geodetic",
    "IndexError",
    "TypeError",
    "astropy.coordinates.tests.test_earth.pytest",
    "isinstance",
    "len",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_earth.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_earth.allclose_m14": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "getattr",
    "quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_earth.allclose_m8": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "getattr",
    "quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_earth.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_earth.isclose_m14": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "astropy.coordinates.tests.test_earth.allclose_m14",
    "numpy.array",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_earth.isclose_m8": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "astropy.coordinates.tests.test_earth.allclose_m8",
    "numpy.array",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_earth.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_earth.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_earth.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_earth.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_earth.test_gc2gd": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "astropy.coordinates.tests.test_earth.vvd"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_earth.test_gd2gc": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "astropy.coordinates.tests.test_earth.vvd",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_earth.test_geodetic_tuple": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "EarthLocation.from_geodetic",
    "quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_earth.test_of_address": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "EarthLocation.of_address",
    "astropy.coordinates.tests.test_earth.pytest",
    "numpy.allclose",
    "quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_earth.test_pickling": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "EarthLocation",
    "astropy.coordinates.tests.test_earth.pickle"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_earth.test_repr_latex": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "EarthLocation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_earth.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_earth.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_earth.vvd": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_finite_difference_velocities": {
  "data": {
   "symbols_in_volume": [
    "Time",
    "astropy.coordinates.tests.test_finite_difference_velocities.pytest"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.tests.test_finite_difference_velocities.J2000": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_finite_difference_velocities._xfail": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_finite_difference_velocities.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_finite_difference_velocities.diff_info_plot": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "matplotlib.pyplot.subplots",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_finite_difference_velocities.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_finite_difference_velocities.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_finite_difference_velocities.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_finite_difference_velocities.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_finite_difference_velocities.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_finite_difference_velocities.test_altaz_diffs": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "AltAz",
    "ICRS",
    "Time",
    "get_builtin_sites",
    "numpy.all",
    "numpy.linspace",
    "numpy.pi",
    "numpy.ptp",
    "numpy.sum",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_finite_difference_velocities.test_faux_fk5_galactic": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "FK5",
    "quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_finite_difference_velocities.test_faux_fk5_galactic.Galactic2": {
  "data": {
   "lineno": 76
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_finite_difference_velocities.test_faux_fk5_galactic.fk5_to_gal2": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "DynamicMatrixTransform",
    "trans"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_finite_difference_velocities.test_faux_fk5_galactic.gal2_to_fk5": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "DynamicMatrixTransform",
    "ICRS",
    "trans"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_finite_difference_velocities.test_faux_lsr": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ICRS",
    "LSR2",
    "astropy.coordinates.tests.test_finite_difference_velocities.pytest",
    "numpy.abs",
    "numpy.sum",
    "quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_finite_difference_velocities.test_faux_lsr.LSR2": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "TimeAttribute",
    "astropy.coordinates.tests.test_finite_difference_velocities.J2000"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_finite_difference_velocities.test_faux_lsr.icrs_to_lsr": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "astropy.coordinates.tests.test_finite_difference_velocities.J2000"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_finite_difference_velocities.test_faux_lsr.lsr_to_icrs": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "astropy.coordinates.tests.test_finite_difference_velocities.J2000"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_finite_difference_velocities.test_gcrs_diffs": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "GCRS",
    "ICRS",
    "Time",
    "get_sun",
    "numpy.abs",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_finite_difference_velocities.test_numerical_limits": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "GCRS",
    "ICRS",
    "Time",
    "astropy.coordinates.tests.test_finite_difference_velocities.pytest",
    "numpy.linspace",
    "numpy.ptp"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_finite_difference_velocities.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_finite_difference_velocities.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_formatting": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.tests.test_formatting.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_formatting.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_formatting.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_formatting.test_sexagesimal_round_down": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "Angle"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_formatting.test_sexagesimal_rounding_up": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "Angle"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_formatting.test_to_string_decimal": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "Angle"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_formatting.test_to_string_fields": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Angle"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_formatting.test_to_string_fields_colon": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "Angle"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_formatting.test_to_string_formats": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "Angle"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_formatting.test_to_string_padding": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "Angle"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_formatting.test_to_string_precision": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Angle"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_formatting.test_to_string_radian_with_precision": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "Angle"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_formatting.test_to_string_scalar": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "Angle",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_formatting.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_formatting.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_frames": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.tests.test_frames.Time": {
  "data": {
   "shadows": "astropy.time.Time"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_frames.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_frames.allclose": {
  "data": {
   "shadows": "quantity_allclose"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_frames.assert_allclose": {
  "data": {
   "shadows": "assert_quantity_allclose"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_frames.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_frames.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_frames.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_frames.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_frames.r": {
  "data": {
   "shadows": "representation"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_frames.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_frames.setup_function": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.teardown_function": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_altaz_attributes": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "AltAz",
    "EarthLocation",
    "astropy.time.Time",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_cache_clear": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "ICRS",
    "len",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_component_error_useful": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "AttributeError",
    "ICRS",
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_converting_units": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "FK5",
    "FakeICRS",
    "ICRS",
    "astropy.coordinates.tests.test_frames.re",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_converting_units.FakeICRS": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "ICRS",
    "RepresentationMapping"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_frames.test_create_data_frames": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "AttributeError",
    "ICRS"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_create_nodata_frames": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "FK4",
    "FK4.get_frame_attr_names",
    "FK5",
    "FK5.get_frame_attr_names",
    "ICRS",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_create_orderered_data": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "AltAz",
    "Galactic",
    "ICRS",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_dynamic_attrs": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "AttributeError",
    "ICRS",
    "dir",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_eloc_attributes": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "AltAz",
    "EarthLocation",
    "GCRS",
    "ITRS",
    "isinstance",
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_equivalent_frames": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "AltAz",
    "FK4",
    "FK5",
    "ICRS",
    "SkyCoord",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_frame_attribute_descriptor": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "AttributeError",
    "TestAttributes",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_frame_attribute_descriptor.TestAttributes": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "Attribute",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_frames.test_frame_repr": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "FK5",
    "ICRS",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_frame_repr_vels": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "ICRS",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_frame_subclass_attribute_descriptor": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "MyFK4",
    "astropy.time.Time",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_frame_subclass_attribute_descriptor.MyFK4": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "Attribute",
    "TimeAttribute"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_frames.test_getitem": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "ICRS",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_getitem_representation": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "ICRS"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_inplace_array": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "ICRS",
    "len",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_inplace_change": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "ICRS",
    "len",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_is_frame_attr_default": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "FK5",
    "FK5.get_frame_attr_names",
    "astropy.time.Time"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_len0_data": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "ICRS",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_no_data_nonscalar_frames": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "AltAz",
    "ValueError",
    "astropy.time.Time",
    "numpy.arange",
    "numpy.ones",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_nodata_error": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "ICRS",
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_quantity_attributes": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "GCRS",
    "TypeError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_realizing": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "FK5",
    "FK5.get_frame_attr_names",
    "ICRS",
    "astropy.time.Time"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_replicating": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "AltAz",
    "ICRS",
    "astropy.time.Time",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_represent_as": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "ICRS",
    "ValueError",
    "catch_warnings",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_representation": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "AttributeError",
    "ICRS",
    "ValueError",
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_representation_subclass": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "FK5",
    "NewUnitSphericalRepresentation",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_representation_subclass.NewSphericalRepresentation": {
  "data": {
   "lineno": 757
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_frames.test_representation_subclass.NewUnitSphericalRepresentation": {
  "data": {
   "lineno": 773
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_frames.test_representation_subclass.NewUnitSphericalRepresentation.__repr__": {
  "data": {
   "lineno": 776
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_representation_with_multiple_differentials": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "ICRS",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_sep": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "ICRS",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_shorthand_representations": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "ICRS",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_time_inputs": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "FK4",
    "ValueError",
    "astropy.time.Time",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_transform": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "AssertionError",
    "FK4",
    "FK4.get_frame_attr_names",
    "FK5",
    "Galactic",
    "ICRS",
    "astropy.time.Time"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.test_transform_to_nonscalar_nodata_frame": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "FK5",
    "ICRS",
    "astropy.time.Time",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_frames.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_frames_with_velocity": {
  "data": {
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.tests.test_frames_with_velocity._xhip_data": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_frames_with_velocity._xhip_head": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_frames_with_velocity.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_frames_with_velocity.all_kwargs": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_frames_with_velocity.bf": {
  "data": {
   "shadows": "builtin_frames"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_frames_with_velocity.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_frames_with_velocity.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_frames_with_velocity.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_frames_with_velocity.r": {
  "data": {
   "shadows": "representation"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_frames_with_velocity.test_all_arg_options": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ICRS",
    "astropy.coordinates.tests.test_frames_with_velocity.all_kwargs",
    "astropy.coordinates.tests.test_frames_with_velocity.pytest",
    "getattr",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames_with_velocity.test_api": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Galactocentric",
    "ICRS"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames_with_velocity.test_differential_cls_arg": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ICRS",
    "TypeError",
    "astropy.coordinates.tests.test_frames_with_velocity.pytest",
    "quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames_with_velocity.test_expected_arg_names": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "astropy.coordinates.tests.test_frames_with_velocity.pytest",
    "cls"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames_with_velocity.test_frame_affinetransform": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "Galactocentric",
    "ICRS",
    "astropy.coordinates.tests.test_frames_with_velocity.pytest",
    "dict"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames_with_velocity.test_slicing_preserves_differential": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "ICRS",
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames_with_velocity.test_xhip_galactic": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "ICRS",
    "astropy.coordinates.tests.test_frames_with_velocity._xhip_data",
    "astropy.coordinates.tests.test_frames_with_velocity.pytest",
    "float",
    "quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_frames_with_velocity.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_frames_with_velocity.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_funcs": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.tests.test_funcs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_funcs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_funcs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_funcs.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_funcs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_funcs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_funcs.test_concatenate": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "FK5",
    "SkyCoord",
    "TypeError",
    "astropy.coordinates.tests.test_funcs.pytest",
    "concatenate",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_funcs.test_constellations": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "FK5",
    "ICRS",
    "SkyCoord",
    "get_constellation",
    "getattr",
    "isinstance",
    "numpy.testing.assert_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_funcs.test_sun": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "Time",
    "get_sun",
    "numpy.abs",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_funcs.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_funcs.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_iau_fullstack": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.tests.test_iau_fullstack._erfa_check": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "locals",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_iau_fullstack.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_iau_fullstack.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_iau_fullstack.erfa": {
  "data": {
   "shadows": "_erfa"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_iau_fullstack.fullstack_fiducial_altaz": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "AltAz",
    "EarthLocation",
    "Time",
    "astropy.coordinates.tests.test_iau_fullstack.fullstack_icrs",
    "astropy.coordinates.tests.test_iau_fullstack.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_iau_fullstack.fullstack_icrs": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ICRS",
    "astropy.coordinates.tests.test_iau_fullstack.pytest",
    "randomly_sample_sphere"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_iau_fullstack.fullstack_locations": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "EarthLocation",
    "astropy.coordinates.tests.test_iau_fullstack.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_iau_fullstack.fullstack_obsconditions": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "astropy.coordinates.tests.test_iau_fullstack.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_iau_fullstack.fullstack_times": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "Time",
    "astropy.coordinates.tests.test_iau_fullstack.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_iau_fullstack.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_iau_fullstack.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_iau_fullstack.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_iau_fullstack.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_iau_fullstack.test_fiducial_roudtrip": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ICRS",
    "astropy.coordinates.tests.test_iau_fullstack.fullstack_fiducial_altaz",
    "astropy.coordinates.tests.test_iau_fullstack.fullstack_icrs",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_iau_fullstack.test_future_altaz": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "AltAz",
    "EarthLocation",
    "SkyCoord",
    "Time",
    "all",
    "catch_warnings",
    "enumerate",
    "hasattr",
    "isinstance",
    "issubclass",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_iau_fullstack.test_iau_fullstack": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "AltAz",
    "ICRS",
    "astropy.coordinates.tests.test_iau_fullstack._erfa_check",
    "astropy.coordinates.tests.test_iau_fullstack.fullstack_fiducial_altaz",
    "astropy.coordinates.tests.test_iau_fullstack.fullstack_icrs",
    "astropy.coordinates.tests.test_iau_fullstack.fullstack_locations",
    "astropy.coordinates.tests.test_iau_fullstack.fullstack_obsconditions",
    "astropy.coordinates.tests.test_iau_fullstack.fullstack_times",
    "get_jd12",
    "numpy.abs",
    "numpy.all",
    "numpy.max",
    "numpy.testing.assert_allclose",
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_iau_fullstack.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_iau_fullstack.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_intermediate_transformations": {
  "data": {
   "symbols_in_volume": [
    "AltAz",
    "CartesianRepresentation",
    "EarthLocation",
    "GCRS",
    "ICRS",
    "ImportError",
    "Time",
    "astropy.coordinates.tests.test_intermediate_transformations.MOONDIST",
    "randomly_sample_sphere"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.EARTHECC": {
  "data": {
   "lineno": 303
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.HAS_JPLEPHEM": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.MOONDIST": {
  "data": {
   "lineno": 301
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.MOONDIST_CART": {
  "data": {
   "lineno": 302
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.allclose": {
  "data": {
   "shadows": "quantity_allclose"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.assert_allclose": {
  "data": {
   "shadows": "assert_quantity_allclose"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.gcrs_frames": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.icrs_coords": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.jplephem": {
  "data": {
   "shadows": "jplephem"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.test_cirs_altaz_moonish": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "CIRS",
    "astropy.coordinates.tests.test_intermediate_transformations.MOONDIST_CART",
    "astropy.coordinates.tests.test_intermediate_transformations.totest_frames",
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.test_cirs_altaz_nodist": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "CIRS",
    "UnitSphericalRepresentation",
    "astropy.coordinates.tests.test_intermediate_transformations.totest_frames"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.test_cirs_icrs_moonish": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "CIRS",
    "ICRS",
    "astropy.coordinates.tests.test_intermediate_transformations.MOONDIST_CART",
    "astropy.coordinates.tests.test_intermediate_transformations.totest_frames"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.test_cirs_itrs": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "CIRS",
    "randomly_sample_sphere"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.test_cirs_to_altaz": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "AltAz",
    "CIRS",
    "EarthLocation",
    "SphericalRepresentation",
    "Time",
    "randomly_sample_sphere"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.test_ephemerides": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "CIRS",
    "GCRS",
    "HCRS",
    "HeliocentricTrueEcliptic",
    "ICRS",
    "SkyCoord",
    "Time",
    "all"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.test_gcrs_altaz": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "AltAz",
    "CIRS",
    "EarthLocation",
    "GCRS",
    "ICRS",
    "Time",
    "numpy.linspace",
    "randomly_sample_sphere"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.test_gcrs_altaz_bothroutes": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "GCRS",
    "ICRS",
    "ITRS",
    "astropy.coordinates.tests.test_intermediate_transformations.MOONDIST_CART",
    "astropy.coordinates.tests.test_intermediate_transformations.totest_frames",
    "get_sun"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.test_gcrs_altaz_moonish": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "GCRS",
    "astropy.coordinates.tests.test_intermediate_transformations.MOONDIST_CART",
    "astropy.coordinates.tests.test_intermediate_transformations.totest_frames",
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.test_gcrs_altaz_sunish": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "astropy.coordinates.tests.test_intermediate_transformations.EARTHECC",
    "astropy.coordinates.tests.test_intermediate_transformations.totest_frames",
    "get_sun"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.test_gcrs_cirs": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "CIRS",
    "GCRS",
    "ICRS",
    "randomly_sample_sphere"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.test_gcrs_icrs_moonish": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "GCRS",
    "ICRS",
    "astropy.coordinates.tests.test_intermediate_transformations.MOONDIST_CART",
    "astropy.coordinates.tests.test_intermediate_transformations.totest_frames"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.test_gcrs_itrs": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "GCRS",
    "randomly_sample_sphere"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.test_gcrs_self_transform_closeby": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "GCRS",
    "SkyCoord",
    "Time"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.test_icrs_altaz_moonish": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "ICRS",
    "astropy.coordinates.tests.test_intermediate_transformations.MOONDIST",
    "astropy.coordinates.tests.test_intermediate_transformations.totest_frames",
    "epv00",
    "get_jd12",
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.test_icrs_cirs": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "CIRS",
    "ICRS",
    "Time",
    "randomly_sample_sphere"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.test_icrs_gcrs": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "GCRS",
    "ICRS",
    "astropy.coordinates.tests.test_intermediate_transformations.gcrs_frames",
    "astropy.coordinates.tests.test_intermediate_transformations.icrs_coords",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.test_icrs_gcrs_dist_diff": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "astropy.coordinates.tests.test_intermediate_transformations.gcrs_frames",
    "astropy.coordinates.tests.test_intermediate_transformations.icrs_coords"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.test_icrs_gcrscirs_sunish": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "CIRS",
    "GCRS",
    "ICRS",
    "ITRS",
    "astropy.coordinates.tests.test_intermediate_transformations.EARTHECC",
    "astropy.coordinates.tests.test_intermediate_transformations.totest_frames"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.test_precessed_geocentric": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "GCRS",
    "PrecessedGeocentric",
    "Time",
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.totest_frames": {
  "data": {
   "lineno": 290
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_intermediate_transformations.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_matrix_utilities": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.tests.test_matrix_utilities.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.utils.assert_allclose"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_matrix_utilities.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.utils.assert_array_equal"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_matrix_utilities.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_matrix_utilities.test_angle_axis": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "angle_axis",
    "numpy.testing.utils.assert_allclose",
    "rotation_matrix"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_matrix_utilities.test_rotation_matrix": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.eye",
    "numpy.testing.utils.assert_allclose",
    "numpy.testing.utils.assert_array_equal",
    "rotation_matrix"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_matrix_utilities.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_name_resolve": {
  "data": {
   "symbols_in_volume": [
    "astropy.coordinates.tests.test_name_resolve._cached_castor",
    "astropy.coordinates.tests.test_name_resolve._cached_ngc3642",
    "dict"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.tests.test_name_resolve._cached_castor": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_name_resolve._cached_ngc3642": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_name_resolve.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_name_resolve.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_name_resolve.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_name_resolve.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_name_resolve.test_database_specify": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "SkyCoord.from_name",
    "astropy.coordinates.tests.test_name_resolve._cached_castor",
    "astropy.coordinates.tests.test_name_resolve._cached_ngc3642",
    "astropy.coordinates.tests.test_name_resolve.time"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_name_resolve.test_names": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "SkyCoord",
    "_parse_response",
    "astropy.coordinates.tests.test_name_resolve._cached_castor",
    "astropy.coordinates.tests.test_name_resolve._cached_ngc3642",
    "float",
    "get_icrs_coordinates",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_name_resolve.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_name_resolve.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_name_resolve.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_pickle": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.coordinates.tests.test_pickle.HAS_SCIPY",
    "numpy.identity"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.tests.test_pickle.HAS_SCIPY": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_pickle._args": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_pickle._kwargs": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_pickle._names": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_pickle._xfail": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_pickle.coord": {
  "data": {
   "shadows": "coordinates"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_pickle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_pickle.pickle": {
  "data": {
   "shadows": "cPickle"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_pickle.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_pickle.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_pickle.test_basic": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "Longitude"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_pickle.test_pickle_longitude_wrap_angle": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Longitude"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_pickle.test_simple_object": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "astropy.coordinates.tests.test_pickle._args",
    "astropy.coordinates.tests.test_pickle._kwargs",
    "astropy.coordinates.tests.test_pickle._names",
    "astropy.coordinates.tests.test_pickle._xfail",
    "astropy.coordinates.tests.test_pickle.pytest",
    "check_pickling_recovery",
    "name",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_regression": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.tests.test_regression.HAS_YAML": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_regression.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_regression.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_regression.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_regression.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_regression.test_gcrs_itrs_cartesian_repr": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "GCRS",
    "ITRS"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_regression.test_itrs_vals_5133": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "AltAz",
    "EarthLocation.from_geodetic",
    "Time",
    "all",
    "assert_quantity_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_regression.test_regression_3920": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "AltAz",
    "ICRS",
    "SkyCoord",
    "Time",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_regression.test_regression_3938": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "AltAz",
    "EarthLocation",
    "SkyCoord",
    "Time"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_regression.test_regression_3998": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "Time",
    "get_sun"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_regression.test_regression_4033": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "AltAz",
    "EarthLocation",
    "SkyCoord",
    "assert_quantity_allclose",
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_regression.test_regression_4082": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "SkyCoord",
    "astropy.coordinates.tests.test_regression.pytest",
    "search_around_3d",
    "search_around_sky"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_regression.test_regression_4210": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "SkyCoord",
    "eclcls",
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_regression.test_regression_4293": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "FK4",
    "assert_quantity_allclose",
    "numpy.arange",
    "numpy.cos",
    "numpy.meshgrid",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_regression.test_regression_4926": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "HCRS",
    "ICRS",
    "Time",
    "get_builtin_sites",
    "get_moon",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_regression.test_regression_4996": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "Time",
    "get_sun",
    "len",
    "numpy.all",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_regression.test_regression_5085": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "GCRS",
    "GeocentricTrueEcliptic",
    "Latitude",
    "Longitude",
    "Time",
    "assert_quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_regression.test_regression_5133": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "AltAz",
    "EarthLocation.from_geodetic",
    "Time",
    "numpy.random.seed",
    "numpy.random.uniform",
    "quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_regression.test_regression_5209": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "SkyCoord",
    "Time",
    "assert_quantity_allclose",
    "get_moon"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_regression.test_regression_5743": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "SkyCoord",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_regression.test_regression_5889_5890": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "EarthLocation",
    "SkyCoord",
    "Time",
    "get_moon",
    "numpy.linspace",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_regression.test_regression_6236": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "MyFrame",
    "MySpecialFrame",
    "SphericalRepresentation",
    "UnitSphericalRepresentation",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_regression.test_regression_6236.MyFrame": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "QuantityAttribute"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_regression.test_regression_6236.MySpecialFrame": {
  "data": {
   "lineno": 390
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_regression.test_regression_6236.MySpecialFrame.__init__": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_regression.test_regression_6300": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "CartesianRepresentationFrameAttribute",
    "QuantityFrameAttribute",
    "Time",
    "TimeFrameAttribute",
    "catch_warnings",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_regression.test_regression_6347": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "SkyCoord",
    "astropy.coordinates.tests.test_regression.pytest",
    "len",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_regression.test_regression_6347_3d": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "SkyCoord",
    "astropy.coordinates.tests.test_regression.pytest",
    "len",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_regression.test_regression_6446": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "SkyCoord",
    "Table",
    "astropy.coordinates.tests.test_regression.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_regression.test_regression_6448": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "SkyCoord"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_regression.test_regression_futuretimes_4302": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "CIRS",
    "ITRS",
    "Time",
    "catch_warnings",
    "hasattr",
    "isinstance",
    "issubclass",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_regression.test_regression_simple_5133": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "AltAz",
    "EarthLocation",
    "Time",
    "assert_quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_regression.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_regression.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_regression.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_representation": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.tests.test_representation.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentation": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentation.test_broadcasting": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentation.test_broadcasting_mismatch": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentation.test_empty_init": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentation.test_getitem": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentation.test_getitem_scalar": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentation.test_init_array": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentation.test_init_array_nocopy": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "CartesianRepresentation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentation.test_init_one_array": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "numpy.all",
    "numpy.arange",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentation.test_init_one_array_size_fail": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentation.test_init_one_array_yz_fail": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentation.test_init_quantity": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentation.test_init_singleunit": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentation.test_init_xyz_but_more_than_one_array_fail": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentation.test_name": {
  "data": {
   "lineno": 441
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentation.test_readonly": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "AttributeError",
    "CartesianRepresentation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentation.test_reprobj": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "CartesianRepresentation.from_representation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentation.test_transform": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentation.test_unit_mismatch": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "CartesianRepresentation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentation.test_unit_non_length": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "CartesianRepresentation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentation.test_xyz": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "isinstance",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentationWithDifferential": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentationWithDifferential.test_getitem": {
  "data": {
   "lineno": 1245,
   "symbols_in_volume": [
    "CartesianDifferential",
    "CartesianRepresentation",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentationWithDifferential.test_init_array_broadcasting": {
  "data": {
   "lineno": 1159,
   "symbols_in_volume": [
    "CartesianDifferential",
    "CartesianRepresentation",
    "ValueError",
    "len",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentationWithDifferential.test_init_differential": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": [
    "CartesianDifferential",
    "CartesianRepresentation",
    "TypeError",
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentationWithDifferential.test_init_differential_compatible": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "SphericalCosLatDifferential",
    "SphericalDifferential",
    "SphericalRepresentation",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentationWithDifferential.test_init_differential_multiple_equivalent_keys": {
  "data": {
   "lineno": 1149,
   "symbols_in_volume": [
    "CartesianDifferential",
    "CartesianRepresentation",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentationWithDifferential.test_readonly": {
  "data": {
   "lineno": 1197,
   "symbols_in_volume": [
    "AttributeError",
    "CartesianRepresentation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentationWithDifferential.test_represent_as": {
  "data": {
   "lineno": 1204,
   "symbols_in_volume": [
    "CartesianDifferential",
    "CartesianRepresentation",
    "SphericalCosLatDifferential",
    "SphericalRepresentation",
    "ValueError",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentationWithDifferential.test_reprobj": {
  "data": {
   "lineno": 1182,
   "symbols_in_volume": [
    "CartesianRepresentation.from_representation",
    "SphericalCosLatDifferential",
    "SphericalRepresentation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentationWithDifferential.test_transform": {
  "data": {
   "lineno": 1266,
   "symbols_in_volume": [
    "CartesianDifferential",
    "CartesianRepresentation",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCartesianRepresentationWithDifferential.test_with_differentials": {
  "data": {
   "lineno": 1283,
   "symbols_in_volume": [
    "CartesianDifferential",
    "CartesianRepresentation",
    "len",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCylindricalRepresentation": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_representation.TestCylindricalRepresentation.test_broadcasting": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "CylindricalRepresentation",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCylindricalRepresentation.test_broadcasting_mismatch": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "CylindricalRepresentation",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCylindricalRepresentation.test_empty_init": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "CylindricalRepresentation",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCylindricalRepresentation.test_getitem": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "CylindricalRepresentation",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCylindricalRepresentation.test_getitem_scalar": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "CylindricalRepresentation",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCylindricalRepresentation.test_init_array": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "CylindricalRepresentation",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCylindricalRepresentation.test_init_array_nocopy": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "CylindricalRepresentation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCylindricalRepresentation.test_init_quantity": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "CylindricalRepresentation",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCylindricalRepresentation.test_name": {
  "data": {
   "lineno": 672
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCylindricalRepresentation.test_readonly": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "AttributeError",
    "CylindricalRepresentation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCylindricalRepresentation.test_reprobj": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "CylindricalRepresentation",
    "CylindricalRepresentation.from_representation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestCylindricalRepresentation.unit_mismatch": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "CylindricalRepresentation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestPhysicsSphericalRepresentation": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_representation.TestPhysicsSphericalRepresentation.test_broadcasting": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "PhysicsSphericalRepresentation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestPhysicsSphericalRepresentation.test_broadcasting_mismatch": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "PhysicsSphericalRepresentation",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestPhysicsSphericalRepresentation.test_empty_init": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "PhysicsSphericalRepresentation",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestPhysicsSphericalRepresentation.test_getitem": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "PhysicsSphericalRepresentation",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestPhysicsSphericalRepresentation.test_getitem_scalar": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "PhysicsSphericalRepresentation",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestPhysicsSphericalRepresentation.test_init_array": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "Angle",
    "Distance",
    "PhysicsSphericalRepresentation",
    "isinstance",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestPhysicsSphericalRepresentation.test_init_array_nocopy": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "Angle",
    "Distance",
    "PhysicsSphericalRepresentation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestPhysicsSphericalRepresentation.test_init_phitheta": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "Angle",
    "Distance",
    "PhysicsSphericalRepresentation",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestPhysicsSphericalRepresentation.test_init_quantity": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "Distance",
    "PhysicsSphericalRepresentation",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestPhysicsSphericalRepresentation.test_name": {
  "data": {
   "lineno": 311
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestPhysicsSphericalRepresentation.test_readonly": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "AttributeError",
    "PhysicsSphericalRepresentation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestPhysicsSphericalRepresentation.test_reprobj": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "PhysicsSphericalRepresentation",
    "PhysicsSphericalRepresentation.from_representation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestSphericalRepresentation": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_representation.TestSphericalRepresentation.test_broadcasting": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "SphericalRepresentation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestSphericalRepresentation.test_broadcasting_mismatch": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "SphericalRepresentation",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestSphericalRepresentation.test_empty_init": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "SphericalRepresentation",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestSphericalRepresentation.test_getitem_len_iterable": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "SphericalRepresentation",
    "isiterable",
    "len",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestSphericalRepresentation.test_getitem_len_iterable_scalar": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "SphericalRepresentation",
    "TypeError",
    "isiterable",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestSphericalRepresentation.test_init_array": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "Distance",
    "Latitude",
    "Longitude",
    "SphericalRepresentation",
    "isinstance",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestSphericalRepresentation.test_init_array_nocopy": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "Distance",
    "Latitude",
    "Longitude",
    "SphericalRepresentation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestSphericalRepresentation.test_init_float32_array": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "Latitude",
    "Longitude",
    "UnitSphericalRepresentation",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestSphericalRepresentation.test_init_lonlat": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "Distance",
    "Latitude",
    "Longitude",
    "SphericalRepresentation",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestSphericalRepresentation.test_init_quantity": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "SphericalRepresentation",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestSphericalRepresentation.test_name": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestSphericalRepresentation.test_readonly": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "AttributeError",
    "SphericalRepresentation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestSphericalRepresentation.test_reprobj": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "SphericalRepresentation",
    "SphericalRepresentation.from_representation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestUnitSphericalRepresentation": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_representation.TestUnitSphericalRepresentation.test_broadcasting": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "UnitSphericalRepresentation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestUnitSphericalRepresentation.test_broadcasting_mismatch": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "UnitSphericalRepresentation",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestUnitSphericalRepresentation.test_empty_init": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "TypeError",
    "UnitSphericalRepresentation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestUnitSphericalRepresentation.test_getitem": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "UnitSphericalRepresentation",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestUnitSphericalRepresentation.test_getitem_scalar": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "TypeError",
    "UnitSphericalRepresentation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestUnitSphericalRepresentation.test_init_array": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "Latitude",
    "Longitude",
    "UnitSphericalRepresentation",
    "isinstance",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestUnitSphericalRepresentation.test_init_array_nocopy": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "Latitude",
    "Longitude",
    "UnitSphericalRepresentation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestUnitSphericalRepresentation.test_init_lonlat": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "Latitude",
    "Longitude",
    "UnitSphericalRepresentation",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestUnitSphericalRepresentation.test_init_quantity": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "Latitude",
    "Longitude",
    "UnitSphericalRepresentation",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestUnitSphericalRepresentation.test_name": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "UnitSphericalRepresentation.get_name"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestUnitSphericalRepresentation.test_readonly": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "AttributeError",
    "UnitSphericalRepresentation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.TestUnitSphericalRepresentation.test_reprobj": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "UnitSphericalRepresentation",
    "UnitSphericalRepresentation.from_representation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_representation.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_representation.assert_allclose_quantity": {
  "data": {
   "shadows": "assert_quantity_allclose"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_representation.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_representation.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_representation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_representation.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_representation.setup_function": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.teardown_function": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.test_cartesian_cylindrical_roundtrip": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "CartesianRepresentation.from_representation",
    "CylindricalRepresentation.from_representation",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.test_cartesian_physics_spherical_roundtrip": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "CartesianRepresentation.from_representation",
    "PhysicsSphericalRepresentation.from_representation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.test_cartesian_spherical_roundtrip": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "CartesianRepresentation.from_representation",
    "SphericalRepresentation.from_representation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.test_combine_xyz": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": [
    "_combine_xyz",
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.test_minimal_subclass": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": [
    "LogDRepresentation",
    "LogDRepresentation.from_cartesian",
    "SphericalRepresentation",
    "TypeError",
    "ValueError",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.test_minimal_subclass.LogDRepresentation": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": [
    "Latitude",
    "Longitude",
    "collections.OrderedDict"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_representation.test_minimal_subclass.LogDRepresentation.from_cartesian": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "numpy.arctan2",
    "numpy.hypot"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.test_minimal_subclass.LogDRepresentation.to_cartesian": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.test_no_unnecessary_copies": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "CylindricalRepresentation",
    "SphericalRepresentation",
    "UnitSphericalRepresentation",
    "numpy.may_share_memory"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.test_repr_with_differentials": {
  "data": {
   "lineno": 1316,
   "symbols_in_volume": [
    "CartesianDifferential",
    "CartesianRepresentation",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.test_representation_repr": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "SphericalRepresentation",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.test_representation_repr_multi_d": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "numpy.arange",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.test_representation_str": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "SphericalRepresentation",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.test_representation_str_multi_d": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "numpy.arange",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.test_spherical_physics_spherical_roundtrip": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "PhysicsSphericalRepresentation.from_representation",
    "SphericalRepresentation",
    "SphericalRepresentation.from_representation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.test_subclass_representation": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "ICRSWrap180"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.test_subclass_representation.ICRSWrap180": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "SphericalRepresentation"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_representation.test_subclass_representation.Longitude180": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "Longitude"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_representation.test_subclass_representation.Longitude180.__new__": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.test_subclass_representation.SphericalWrap180Representation": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "Latitude",
    "SphericalRepresentation",
    "collections.OrderedDict"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_representation.test_to_cartesian": {
  "data": {
   "lineno": 1322,
   "symbols_in_volume": [
    "SphericalDifferential",
    "SphericalRepresentation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.test_unit_spherical_roundtrip": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "CartesianRepresentation.from_representation",
    "SphericalRepresentation.from_representation",
    "UnitSphericalRepresentation",
    "UnitSphericalRepresentation.from_representation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_representation.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_representation_arithmetic": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestArithmetic": {
  "data": {
   "lineno": 48
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestArithmetic.setup": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "Latitude",
    "Longitude",
    "SphericalRepresentation",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestArithmetic.test_add_sub": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "SphericalRepresentation",
    "TypeError",
    "assert_quantity_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.assert_representation_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.pytest",
    "astropy.coordinates.tests.test_representation_arithmetic.representation_equal",
    "getattr",
    "isinstance",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestArithmetic.test_add_sub_cartesian": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "TypeError",
    "astropy.coordinates.tests.test_representation_arithmetic.pytest",
    "astropy.coordinates.tests.test_representation_arithmetic.representation_equal",
    "isinstance",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestArithmetic.test_add_sub_unit_spherical": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "SphericalRepresentation",
    "TypeError",
    "assert_quantity_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.pytest",
    "getattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestArithmetic.test_cross": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "SphericalRepresentation",
    "TypeError",
    "angular_separation",
    "assert_quantity_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.assert_representation_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.pytest",
    "isinstance",
    "len",
    "numpy.newaxis",
    "numpy.sin",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestArithmetic.test_cross_unit_spherical": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "SphericalRepresentation",
    "angular_separation",
    "assert_quantity_allclose",
    "isinstance",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestArithmetic.test_dot": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "SphericalRepresentation",
    "TypeError",
    "assert_quantity_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.pytest",
    "getattr",
    "isinstance",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestArithmetic.test_dot_unit_spherical": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "assert_quantity_allclose",
    "getattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestArithmetic.test_mul_div": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "TypeError",
    "assert_quantity_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.pytest",
    "astropy.coordinates.tests.test_representation_arithmetic.representation_equal",
    "dict",
    "getattr",
    "isinstance",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestArithmetic.test_mul_div_spherical": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "SphericalRepresentation",
    "astropy.coordinates.tests.test_representation_arithmetic.representation_equal",
    "isinstance",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestArithmetic.test_mul_div_unit_spherical": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "SphericalRepresentation",
    "assert_quantity_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.representation_equal",
    "isinstance",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestArithmetic.test_neg_pos": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "SphericalRepresentation",
    "assert_quantity_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.pytest",
    "astropy.coordinates.tests.test_representation_arithmetic.representation_equal",
    "numpy.all",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestArithmetic.test_norm": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "assert_quantity_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.pytest",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestArithmetic.test_norm_spherical": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestArithmetic.test_norm_unitspherical": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestArithmetic.test_sum_mean": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "SphericalRepresentation",
    "assert_quantity_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.pytest",
    "getattr",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestArithmetic.test_sum_mean_unit_spherical": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "SphericalRepresentation",
    "assert_quantity_allclose",
    "getattr",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestCartesianDifferential": {
  "data": {
   "lineno": 974
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestCartesianDifferential.setup": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": [
    "CartesianRepresentation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestCartesianDifferential.test_init_failures": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "CartesianDifferential",
    "ValueError",
    "astropy.coordinates.tests.test_representation_arithmetic.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestCartesianDifferential.test_name": {
  "data": {
   "lineno": 985
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestCartesianDifferential.test_simple_differentials": {
  "data": {
   "lineno": 989,
   "symbols_in_volume": [
    "CartesianDifferential",
    "CartesianDifferential.from_cartesian",
    "all",
    "astropy.coordinates.tests.test_representation_arithmetic.assert_representation_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.representation_equal",
    "getattr",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestCylindricalDifferential": {
  "data": {
   "lineno": 922
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestCylindricalDifferential.setup": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "CylindricalRepresentation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestCylindricalDifferential.test_differential_init_errors": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "CylindricalDifferential",
    "astropy.coordinates.tests.test_representation_arithmetic.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestCylindricalDifferential.test_name": {
  "data": {
   "lineno": 933
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestCylindricalDifferential.test_simple_differentials": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "CylindricalDifferential",
    "CylindricalDifferential.from_cartesian",
    "assert_quantity_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.assert_representation_allclose",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestDifferentialConversion": {
  "data": {
   "lineno": 1021
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestDifferentialConversion.setup": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "SphericalRepresentation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestDifferentialConversion.test_combinations": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "RadialDifferential",
    "SphericalDifferential",
    "UnitSphericalCosLatDifferential",
    "UnitSphericalDifferential",
    "astropy.coordinates.tests.test_representation_arithmetic.assert_representation_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.pytest",
    "astropy.coordinates.tests.test_representation_arithmetic.representation_equal",
    "numpy.all",
    "sd_cls"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestDifferentialConversion.test_convert_cylindrial": {
  "data": {
   "lineno": 1150,
   "symbols_in_volume": [
    "CylindricalDifferential",
    "CylindricalDifferential.from_representation",
    "CylindricalRepresentation",
    "SphericalDifferential",
    "astropy.coordinates.tests.test_representation_arithmetic.assert_representation_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.pytest",
    "sd_cls",
    "sd_cls.from_representation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestDifferentialConversion.test_convert_physics": {
  "data": {
   "lineno": 1079,
   "symbols_in_volume": [
    "PhysicsSphericalDifferential",
    "PhysicsSphericalDifferential.from_representation",
    "PhysicsSphericalRepresentation",
    "RadialDifferential",
    "RadialDifferential.from_representation",
    "SphericalDifferential",
    "UnitSphericalRepresentation",
    "astropy.coordinates.tests.test_representation_arithmetic.assert_differential_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.assert_representation_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.pytest",
    "astropy.coordinates.tests.test_representation_arithmetic.representation_equal",
    "sd_cls",
    "sd_cls.from_representation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestDifferentialConversion.test_convert_unit_spherical_radial": {
  "data": {
   "lineno": 1128,
   "symbols_in_volume": [
    "RadialDifferential",
    "RadialRepresentation",
    "SphericalDifferential",
    "UnitSphericalRepresentation",
    "assert_quantity_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.assert_representation_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.pytest",
    "astropy.coordinates.tests.test_representation_arithmetic.representation_equal",
    "numpy.all",
    "sd_cls",
    "usd_cls"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestDifferentialConversion.test_represent_as_own_class": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "astropy.coordinates.tests.test_representation_arithmetic.pytest",
    "sd_cls"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestDifferentialConversion.test_represent_other_coslat": {
  "data": {
   "lineno": 1034,
   "symbols_in_volume": [
    "SphericalDifferential",
    "SphericalDifferential.from_representation",
    "UnitSphericalRepresentation",
    "assert_quantity_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.representation_equal",
    "numpy.all",
    "numpy.cos"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestDifferentialConversion.test_represent_regular_class": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "CylindricalRepresentation",
    "PhysicsSphericalRepresentation",
    "SphericalDifferential",
    "SphericalRepresentation",
    "UnitSphericalRepresentation",
    "astropy.coordinates.tests.test_representation_arithmetic.pytest",
    "astropy.coordinates.tests.test_representation_arithmetic.representation_equal",
    "numpy.all",
    "sd_cls",
    "sd_cls.from_cartesian",
    "sd_cls.from_representation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestPhysicsSphericalDifferential": {
  "data": {
   "lineno": 865
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestPhysicsSphericalDifferential.setup": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "PhysicsSphericalRepresentation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestPhysicsSphericalDifferential.test_differential_init_errors": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "PhysicsSphericalDifferential",
    "astropy.coordinates.tests.test_representation_arithmetic.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestPhysicsSphericalDifferential.test_name": {
  "data": {
   "lineno": 876
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestPhysicsSphericalDifferential.test_simple_differentials": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "PhysicsSphericalDifferential",
    "PhysicsSphericalDifferential.from_cartesian",
    "assert_quantity_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.assert_representation_allclose",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestRadialDifferential": {
  "data": {
   "lineno": 826
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestRadialDifferential.setup": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "RadialRepresentation",
    "SphericalRepresentation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestRadialDifferential.test_name": {
  "data": {
   "lineno": 836
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestRadialDifferential.test_simple_differentials": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "RadialDifferential",
    "RadialDifferential.from_cartesian",
    "assert_quantity_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.assert_representation_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestSphericalDifferential": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "astropy.coordinates.tests.test_representation_arithmetic.pytest"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestSphericalDifferential._setup": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "SphericalRepresentation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestSphericalDifferential.test_differential_arithmetic": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "SphericalRepresentation",
    "TypeError",
    "assert_quantity_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.assert_differential_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.assert_representation_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.pytest",
    "getattr",
    "numpy.all",
    "numpy.cos"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestSphericalDifferential.test_differential_init_errors": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "AttributeError",
    "CartesianRepresentation",
    "SphericalRepresentation",
    "TypeError",
    "ValueError",
    "astropy.coordinates.tests.test_representation_arithmetic.pytest",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestSphericalDifferential.test_name_coslat": {
  "data": {
   "lineno": 569
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestSphericalDifferential.test_simple_differentials": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "assert_quantity_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.assert_differential_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.assert_representation_allclose",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestUnitSphericalDifferential": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "astropy.coordinates.tests.test_representation_arithmetic.pytest"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestUnitSphericalDifferential._setup": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "UnitSphericalRepresentation"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestUnitSphericalDifferential.test_differential_arithmetic": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "SphericalRepresentation",
    "assert_quantity_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.assert_differential_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.assert_representation_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.representation_equal",
    "getattr",
    "numpy.all",
    "numpy.cos",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestUnitSphericalDifferential.test_differential_init_errors": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "astropy.coordinates.tests.test_representation_arithmetic.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestUnitSphericalDifferential.test_name_coslat": {
  "data": {
   "lineno": 723
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestUnitSphericalDifferential.test_simple_differentials": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "SphericalRepresentation",
    "assert_quantity_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.assert_differential_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.assert_representation_allclose",
    "numpy.pi",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestUnitVectorsAndScales": {
  "data": {
   "lineno": 389
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestUnitVectorsAndScales.check_scale_factors": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "getattr",
    "staticmethod",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestUnitVectorsAndScales.check_unit_vectors": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "assert_quantity_allclose",
    "staticmethod",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestUnitVectorsAndScales.test_cartesian": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "numpy.all",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestUnitVectorsAndScales.test_cylindrical": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "CylindricalRepresentation",
    "assert_quantity_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.assert_representation_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestUnitVectorsAndScales.test_physical_spherical": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "PhysicsSphericalRepresentation",
    "assert_quantity_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.assert_representation_allclose",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestUnitVectorsAndScales.test_radial": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "NotImplementedError",
    "RadialRepresentation",
    "TypeError",
    "astropy.coordinates.tests.test_representation_arithmetic.pytest",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestUnitVectorsAndScales.test_spherical": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "SphericalRepresentation",
    "assert_quantity_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.assert_representation_allclose",
    "numpy.cos"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.TestUnitVectorsAndScales.test_unit_spherical": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "UnitSphericalRepresentation",
    "assert_quantity_allclose",
    "astropy.coordinates.tests.test_representation_arithmetic.assert_representation_allclose",
    "numpy.cos"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.assert_differential_allclose": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "assert_quantity_allclose",
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.assert_representation_allclose": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "assert_quantity_allclose",
    "broadcast_arrays"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.representation_equal": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "astropy.coordinates.tests.test_representation_arithmetic.functools",
    "getattr",
    "numpy.logical_and"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.test_arithmetic_with_differentials_fail": {
  "data": {
   "lineno": 1196,
   "symbols_in_volume": [
    "CartesianDifferential",
    "CartesianRepresentation",
    "SphericalDifferential",
    "SphericalRepresentation",
    "TypeError",
    "astropy.coordinates.tests.test_representation_arithmetic.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_arithmetic.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_representation_methods": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.tests.test_representation_methods.TestManipulation": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_representation_methods.TestManipulation.setup": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Latitude",
    "Longitude",
    "SphericalDifferential",
    "SphericalRepresentation",
    "numpy.arange",
    "numpy.newaxis",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_methods.TestManipulation.test_add_dimension": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.may_share_memory",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_methods.TestManipulation.test_broadcast_to": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.may_share_memory",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_methods.TestManipulation.test_copy": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.may_share_memory"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_methods.TestManipulation.test_diagonal": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.may_share_memory"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_methods.TestManipulation.test_flatten": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.may_share_memory"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_methods.TestManipulation.test_ravel": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.may_share_memory",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_methods.TestManipulation.test_reshape": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.may_share_memory"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_methods.TestManipulation.test_shape_setting": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "AttributeError",
    "SphericalRepresentation",
    "astropy.coordinates.tests.test_representation_methods.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_methods.TestManipulation.test_squeeze": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.may_share_memory"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_methods.TestManipulation.test_swapaxes": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.may_share_memory"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_methods.TestManipulation.test_take": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_methods.TestManipulation.test_transpose": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.may_share_memory"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_representation_methods.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_representation_methods.np_broadcast_to": {
  "data": {
   "shadows": "broadcast_to"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_representation_methods.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_representation_methods.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_shape_manipulation": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.tests.test_shape_manipulation.TestManipulation": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_shape_manipulation.TestManipulation.setup": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "AltAz",
    "EarthLocation",
    "GCRS",
    "ICRS",
    "Latitude",
    "Longitude",
    "SkyCoord",
    "Time",
    "len",
    "numpy.arange",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_shape_manipulation.TestManipulation.test_add_dimension": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.may_share_memory",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_shape_manipulation.TestManipulation.test_diagonal": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.may_share_memory"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_shape_manipulation.TestManipulation.test_flatten": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.may_share_memory"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_shape_manipulation.TestManipulation.test_ravel": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.may_share_memory"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_shape_manipulation.TestManipulation.test_reshape": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.may_share_memory"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_shape_manipulation.TestManipulation.test_squeeze": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.may_share_memory"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_shape_manipulation.TestManipulation.test_swapaxes": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.may_share_memory"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_shape_manipulation.TestManipulation.test_take": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_shape_manipulation.TestManipulation.test_transpose": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.may_share_memory"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_shape_manipulation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_shape_manipulation.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_sites": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.tests.test_sites.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_sites.check_builtin_matches_remote": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "all",
    "print",
    "quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sites.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_sites.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_sites.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_sites.test_EarthLocation_basic": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "KeyError",
    "Latitude",
    "Longitude",
    "assert_quantity_allclose",
    "astropy.coordinates.tests.test_sites.pytest",
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sites.test_EarthLocation_state_offline": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sites.test_EarthLocation_state_online": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sites.test_builtin_sites": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "KeyError",
    "Latitude",
    "Longitude",
    "assert_quantity_allclose",
    "astropy.coordinates.tests.test_sites.pytest",
    "get_builtin_sites"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sites.test_non_EarthLocation": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sites.test_non_EarthLocation.EarthLocation2": {
  "data": {
   "lineno": 126
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_sites.test_online_stes": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "KeyError",
    "Latitude",
    "Longitude",
    "assert_quantity_allclose",
    "astropy.coordinates.tests.test_sites.pytest",
    "get_downloaded_sites",
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sites.test_registry": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "SiteRegistry",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sites.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_sites.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_sky_coord": {
  "data": {
   "symbols_in_volume": [
    "Angle",
    "FK4",
    "FK5",
    "ICRS",
    "ImportError",
    "Time",
    "astropy.coordinates.tests.test_sky_coord.C_ICRS",
    "astropy.coordinates.tests.test_sky_coord.DEC",
    "astropy.coordinates.tests.test_sky_coord.HAS_SCIPY",
    "astropy.coordinates.tests.test_sky_coord.RA",
    "astropy.coordinates.tests.test_sky_coord.base_unit_attr_sets",
    "astropy.coordinates.tests.test_sky_coord.c1",
    "astropy.coordinates.tests.test_sky_coord.c2",
    "astropy.coordinates.tests.test_sky_coord.c3",
    "astropy.coordinates.tests.test_sky_coord.repr_name",
    "astropy.coordinates.tests.test_sky_coord.rt_frames",
    "astropy.coordinates.tests.test_sky_coord.rt_sets",
    "astropy.coordinates.tests.test_sky_coord.scipy",
    "astropy.coordinates.tests.test_sky_coord.units_attr_sets",
    "minversion",
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.tests.test_sky_coord.C_FK5": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_sky_coord.C_ICRS": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_sky_coord.DEC": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_sky_coord.FRAME_DEPRECATION_WARNING": {
  "data": {
   "lineno": 311
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_sky_coord.HAS_SCIPY": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_sky_coord.J2001": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_sky_coord.OLDER_SCIPY": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_sky_coord.RA": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_sky_coord.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_sky_coord.allclose": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "getattr",
    "quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.assert_allclose": {
  "data": {
   "shadows": "assert_quantity_allclose"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_sky_coord.assert_quantities_allclose": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "astropy.coordinates.tests.test_sky_coord.allclose",
    "getattr",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.base_unit_attr_sets": {
  "data": {
   "lineno": 679
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_sky_coord.c1": {
  "data": {
   "lineno": 694
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_sky_coord.c2": {
  "data": {
   "lineno": 695
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_sky_coord.c3": {
  "data": {
   "lineno": 696
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_sky_coord.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_sky_coord.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_sky_coord.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_sky_coord.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_sky_coord.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_sky_coord.repr_name": {
  "data": {
   "lineno": 689
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_sky_coord.rt_args": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_sky_coord.rt_frames": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_sky_coord.rt_sets": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_sky_coord.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_sky_coord.test_attr_conflicts": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "SkyCoord",
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_attr_inheritance": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "SkyCoord",
    "astropy.coordinates.tests.test_sky_coord.allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_cache_clear_sc": {
  "data": {
   "lineno": 1325,
   "symbols_in_volume": [
    "SkyCoord",
    "len",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_constellations": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": [
    "SkyCoord",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_constellations_with_nameresolve": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": [
    "SkyCoord.from_name"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_coord_init_array": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "SkyCoord",
    "astropy.coordinates.tests.test_sky_coord.allclose",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_coord_init_list": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "Angle",
    "SkyCoord",
    "ValueError",
    "astropy.coordinates.tests.test_sky_coord.allclose",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_coord_init_representation": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "SkyCoord",
    "SphericalRepresentation",
    "ValueError",
    "astropy.coordinates.tests.test_sky_coord.allclose",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_coord_init_string": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "Angle",
    "SkyCoord",
    "ValueError",
    "astropy.coordinates.tests.test_sky_coord.allclose",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_coord_init_unit": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "Angle",
    "SkyCoord",
    "ValueError",
    "astropy.coordinates.tests.test_sky_coord.allclose",
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_deepcopy": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "SkyCoord",
    "astropy.coordinates.tests.test_sky_coord.c1",
    "astropy.coordinates.tests.test_sky_coord.c2",
    "astropy.coordinates.tests.test_sky_coord.c3",
    "astropy.coordinates.tests.test_sky_coord.copy",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_equiv_skycoord": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": [
    "FK5",
    "ICRS",
    "SkyCoord",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_extra_attributes": {
  "data": {
   "lineno": 1355,
   "symbols_in_volume": [
    "SkyCoord",
    "Time",
    "hasattr",
    "numpy.all",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_frame_attr_changes": {
  "data": {
   "lineno": 1288,
   "symbols_in_volume": [
    "ICRS",
    "SkyCoord",
    "dir"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_frame_attr_changes.FakeFrame": {
  "data": {
   "lineno": 1300,
   "symbols_in_volume": [
    "Attribute"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_sky_coord.test_frame_attr_getattr": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "SkyCoord",
    "Time"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_frame_attr_transform_inherit": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "FK4",
    "FK5",
    "SkyCoord",
    "astropy.coordinates.tests.test_sky_coord.c1",
    "astropy.coordinates.tests.test_sky_coord.c2",
    "astropy.coordinates.tests.test_sky_coord.c3"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_frame_init": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "ICRS",
    "SkyCoord",
    "ValueError",
    "astropy.coordinates.tests.test_sky_coord.C_ICRS",
    "astropy.coordinates.tests.test_sky_coord.DEC",
    "astropy.coordinates.tests.test_sky_coord.FRAME_DEPRECATION_WARNING",
    "astropy.coordinates.tests.test_sky_coord.RA",
    "catch_warnings",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_galactic_spherical_two_components": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "Galactic",
    "astropy.coordinates.tests.test_sky_coord.assert_quantities_allclose",
    "astropy.coordinates.tests.test_sky_coord.c1",
    "astropy.coordinates.tests.test_sky_coord.c2",
    "astropy.coordinates.tests.test_sky_coord.units_attr_args",
    "astropy.coordinates.tests.test_sky_coord.units_attr_sets",
    "cls2"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_galactic_three_components": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "Galactic",
    "astropy.coordinates.tests.test_sky_coord.assert_quantities_allclose",
    "astropy.coordinates.tests.test_sky_coord.c1",
    "astropy.coordinates.tests.test_sky_coord.c2",
    "astropy.coordinates.tests.test_sky_coord.c3",
    "astropy.coordinates.tests.test_sky_coord.units_attr_args",
    "astropy.coordinates.tests.test_sky_coord.units_attr_sets",
    "cls2"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_getitem_representation": {
  "data": {
   "lineno": 1236,
   "symbols_in_volume": [
    "CartesianRepresentation",
    "SkyCoord"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_guess_from_table": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": [
    "Column",
    "NumpyRNGContext",
    "SkyCoord.guess_from_table",
    "Table",
    "ValueError",
    "numpy.arange",
    "numpy.random.rand",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_immutable": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "AttributeError",
    "SkyCoord",
    "astropy.coordinates.tests.test_sky_coord.c1"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_init_with_frame_instance_keyword": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "FK5",
    "SkyCoord",
    "Time",
    "ValueError",
    "astropy.coordinates.tests.test_sky_coord.allclose",
    "astropy.coordinates.tests.test_sky_coord.c1",
    "astropy.coordinates.tests.test_sky_coord.c2",
    "astropy.coordinates.tests.test_sky_coord.c3"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_init_with_frame_instance_positional": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "FK5",
    "SkyCoord",
    "ValueError",
    "astropy.coordinates.tests.test_sky_coord.c1"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_nd_skycoord_to_string": {
  "data": {
   "lineno": 1172,
   "symbols_in_volume": [
    "SkyCoord",
    "numpy.all",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_no_copy": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "SkyCoord",
    "astropy.coordinates.tests.test_sky_coord.c1",
    "astropy.coordinates.tests.test_sky_coord.c2",
    "astropy.coordinates.tests.test_sky_coord.c3",
    "numpy.arange",
    "numpy.may_share_memory"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_nodata_failure": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "SkyCoord",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_none_transform": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "ICRS",
    "SkyCoord",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_ops": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "SkyCoord",
    "StopIteration",
    "TypeError",
    "bool",
    "isiterable",
    "iter",
    "len",
    "next",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_position_angle": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "SkyCoord",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_position_angle_directly": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "position_angle"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_repr": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "SkyCoord",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_repr_altaz": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "AltAz",
    "EarthLocation",
    "SkyCoord",
    "Time",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_round_tripping": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "SkyCoord",
    "Time",
    "astropy.coordinates.tests.test_sky_coord.DEC",
    "astropy.coordinates.tests.test_sky_coord.RA",
    "astropy.coordinates.tests.test_sky_coord.allclose",
    "astropy.coordinates.tests.test_sky_coord.rt_args",
    "astropy.coordinates.tests.test_sky_coord.rt_sets",
    "dict",
    "frame0",
    "frame1",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_search_around": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "SkyCoord",
    "numpy.random.rand",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_sep_pa_equivalence": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "SkyCoord"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_seps": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "SkyCoord",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_set_attribute_exceptions": {
  "data": {
   "lineno": 1340,
   "symbols_in_volume": [
    "AttributeError",
    "SkyCoord",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_skycoord_coordinate_input": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "SkyCoord",
    "astropy.coordinates.tests.test_sky_coord.assert_quantities_allclose",
    "astropy.coordinates.tests.test_sky_coord.base_unit_attr_sets",
    "astropy.coordinates.tests.test_sky_coord.c1",
    "astropy.coordinates.tests.test_sky_coord.c2",
    "astropy.coordinates.tests.test_sky_coord.c3",
    "astropy.coordinates.tests.test_sky_coord.repr_name"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_skycoord_list_creation": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": [
    "ICRS",
    "SkyCoord",
    "Time",
    "UnitSphericalRepresentation",
    "ValueError",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_skycoord_spherical_two_components": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "SkyCoord",
    "astropy.coordinates.tests.test_sky_coord.assert_quantities_allclose",
    "astropy.coordinates.tests.test_sky_coord.c1",
    "astropy.coordinates.tests.test_sky_coord.c2",
    "astropy.coordinates.tests.test_sky_coord.units_attr_args",
    "astropy.coordinates.tests.test_sky_coord.units_attr_sets",
    "cls2"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_skycoord_string_coordinate_input": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "Angle",
    "SkyCoord",
    "astropy.coordinates.tests.test_sky_coord.assert_quantities_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_skycoord_three_components": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "SkyCoord",
    "astropy.coordinates.tests.test_sky_coord.assert_quantities_allclose",
    "astropy.coordinates.tests.test_sky_coord.c1",
    "astropy.coordinates.tests.test_sky_coord.c2",
    "astropy.coordinates.tests.test_sky_coord.c3",
    "astropy.coordinates.tests.test_sky_coord.units_attr_args",
    "astropy.coordinates.tests.test_sky_coord.units_attr_sets",
    "cls2"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_spherical_offsets": {
  "data": {
   "lineno": 1246,
   "symbols_in_volume": [
    "ICRS",
    "SkyCoord",
    "ValueError",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_table_to_coord": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "Column",
    "SkyCoord",
    "Table",
    "astropy.coordinates.tests.test_sky_coord.allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_to_string": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "SkyCoord",
    "wrap"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_transform_to": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "FK4",
    "FK5",
    "SkyCoord",
    "Time",
    "astropy.coordinates.tests.test_sky_coord.C_ICRS",
    "astropy.coordinates.tests.test_sky_coord.DEC",
    "astropy.coordinates.tests.test_sky_coord.RA",
    "astropy.coordinates.tests.test_sky_coord.allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_units": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "SkyCoord",
    "astropy.coordinates.tests.test_sky_coord.assert_quantities_allclose",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_units_known_fail": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "SkyCoord"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_wcs_methods": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "SkyCoord",
    "SkyCoord.from_pixel",
    "WCS",
    "get_pkg_data_contents",
    "pixel_to_skycoord"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_sky_coord.test_wcs_methods.SkyCoord2": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "SkyCoord"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_sky_coord.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_sky_coord.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_sky_coord.units_attr_args": {
  "data": {
   "lineno": 698
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_sky_coord.units_attr_sets": {
  "data": {
   "lineno": 687
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_skyoffset_transformations": {
  "data": {
   "symbols_in_volume": [
    "Distance",
    "ICRS",
    "astropy.coordinates.tests.test_skyoffset_transformations.m31_coo",
    "astropy.coordinates.tests.test_skyoffset_transformations.m31_params",
    "astropy.coordinates.tests.test_skyoffset_transformations.m31_sys",
    "len",
    "range"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.tests.test_skyoffset_transformations.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_skyoffset_transformations.allclose": {
  "data": {
   "shadows": "quantity_allclose"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_skyoffset_transformations.assert_allclose": {
  "data": {
   "shadows": "assert_quantity_allclose"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_skyoffset_transformations.convert_precision": {
  "data": {
   "lineno": 182
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_skyoffset_transformations.dist_precision": {
  "data": {
   "lineno": 184
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_skyoffset_transformations.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_skyoffset_transformations.m31_coo": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_skyoffset_transformations.m31_dist": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_skyoffset_transformations.m31_params": {
  "data": {
   "lineno": 186
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_skyoffset_transformations.m31_sys": {
  "data": {
   "lineno": 179
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_skyoffset_transformations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_skyoffset_transformations.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_skyoffset_transformations.roundtrip_precision": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_skyoffset_transformations.test_altaz_attribute_transforms": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "AltAz",
    "EarthLocation",
    "SkyCoord",
    "SkyOffsetFrame",
    "Time",
    "astropy.coordinates.tests.test_skyoffset_transformations.convert_precision"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_skyoffset_transformations.test_m31_coord_transforms": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "SkyOffsetFrame",
    "astropy.coordinates.tests.test_skyoffset_transformations.convert_precision",
    "astropy.coordinates.tests.test_skyoffset_transformations.m31_dist",
    "astropy.coordinates.tests.test_skyoffset_transformations.m31_params",
    "fromsys",
    "numpy.hypot",
    "tosys"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_skyoffset_transformations.test_rotation": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "ICRS",
    "SkyOffsetFrame"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_skyoffset_transformations.test_skycoord_skyoffset_frame": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "SkyCoord",
    "numpy.hypot"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_skyoffset_transformations.test_skycoord_skyoffset_frame_rotation": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "SkyCoord"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_skyoffset_transformations.test_skyoffset": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ICRS",
    "SkyCoord",
    "SkyOffsetFrame",
    "hasattr",
    "numpy.cos"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_skyoffset_transformations.test_skyoffset_functional_dec": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ICRS",
    "SkyCoord",
    "SkyOffsetFrame",
    "numpy.cos",
    "numpy.deg2rad",
    "numpy.linspace",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_skyoffset_transformations.test_skyoffset_functional_ra": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ICRS",
    "SkyOffsetFrame",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_skyoffset_transformations.test_skyoffset_functional_ra_dec": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ICRS",
    "SkyCoord",
    "SkyOffsetFrame",
    "numpy.cos",
    "numpy.deg2rad",
    "numpy.linspace",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_skyoffset_transformations.test_skyoffset_lonwrap": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "ICRS",
    "SkyCoord",
    "SkyOffsetFrame"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_skyoffset_transformations.test_skyoffset_names": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "Galactic",
    "ICRS",
    "SkyOffsetFrame",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_skyoffset_transformations.test_skyoffset_origindata": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "ICRS",
    "SkyOffsetFrame",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_skyoffset_transformations.test_skyoffset_velerr": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "ICRS",
    "NotImplementedError",
    "SkyOffsetFrame"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_skyoffset_transformations.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_skyoffset_transformations.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_solar_system": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.tests.test_solar_system.HAS_JPLEPHEM": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_solar_system.HAS_SKYFIELD": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_solar_system.TestPositionKittPeak": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_solar_system.TestPositionKittPeak.setup": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "GCRS",
    "SkyCoord",
    "Time"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_solar_system.TestPositionKittPeak.test_custom_kernel_spec_body": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "assert_quantity_allclose",
    "get_body"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_solar_system.TestPositionKittPeak.test_de432s_moon": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "_apparent_position_in_true_coordinates",
    "assert_quantity_allclose",
    "astropy.coordinates.tests.test_solar_system.de432s_distance_tolerance",
    "astropy.coordinates.tests.test_solar_system.de432s_separation_tolerance_moon",
    "get_moon"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_solar_system.TestPositionKittPeak.test_de432s_planet": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "_apparent_position_in_true_coordinates",
    "assert_quantity_allclose",
    "astropy.coordinates.tests.test_solar_system.de432s_distance_tolerance",
    "astropy.coordinates.tests.test_solar_system.de432s_separation_tolerance_planets",
    "get_body"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_solar_system.TestPositionKittPeak.test_erfa_planet": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "_apparent_position_in_true_coordinates",
    "assert_quantity_allclose",
    "get_body"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_solar_system.TestPositionsGeocentric": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_solar_system.TestPositionsGeocentric.setup": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "GCRS",
    "SkyCoord",
    "Time"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_solar_system.TestPositionsGeocentric.test_de432s_moon": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "_apparent_position_in_true_coordinates",
    "assert_quantity_allclose",
    "astropy.coordinates.tests.test_solar_system.de432s_distance_tolerance",
    "astropy.coordinates.tests.test_solar_system.de432s_separation_tolerance_moon",
    "get_moon"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_solar_system.TestPositionsGeocentric.test_de432s_planet": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "_apparent_position_in_true_coordinates",
    "assert_quantity_allclose",
    "astropy.coordinates.tests.test_solar_system.de432s_distance_tolerance",
    "astropy.coordinates.tests.test_solar_system.de432s_separation_tolerance_planets",
    "get_body"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_solar_system.TestPositionsGeocentric.test_erfa_planet": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "_apparent_position_in_true_coordinates",
    "assert_quantity_allclose",
    "get_body"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_solar_system.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_solar_system.de432s_distance_tolerance": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_solar_system.de432s_separation_tolerance_moon": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_solar_system.de432s_separation_tolerance_planets": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_solar_system.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_solar_system.jplephem": {
  "data": {
   "shadows": "jplephem"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_solar_system.load": {
  "data": {
   "shadows": "skyfield.api.load"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_solar_system.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_solar_system.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_solar_system.skyfield_angular_separation_tolerance": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_solar_system.skyfield_separation_tolerance": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "astropy.coordinates.tests.test_solar_system.test_barycentric_pos_posvel_same": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "Time",
    "get_body_barycentric",
    "get_body_barycentric_posvel",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_solar_system.test_barycentric_velocity_consistency": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "Time",
    "assert_quantity_allclose",
    "get_body_barycentric_posvel",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_solar_system.test_earth_barycentric_velocity_multi_d": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "Time",
    "get_body_barycentric_posvel",
    "numpy.arange",
    "numpy.cos",
    "numpy.sin",
    "quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_solar_system.test_earth_barycentric_velocity_rough": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "Time",
    "assert_quantity_allclose",
    "get_body_barycentric_posvel",
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_solar_system.test_get_moon_nonscalar_regression": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "Time",
    "get_moon"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_solar_system.test_get_sun_consistency": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "Time",
    "get_body",
    "get_sun"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_solar_system.test_positions_skyfield": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "GCRS",
    "SkyCoord",
    "Time",
    "_apparent_position_in_true_coordinates",
    "astropy.coordinates.tests.test_solar_system.skyfield_angular_separation_tolerance",
    "astropy.coordinates.tests.test_solar_system.skyfield_separation_tolerance",
    "get_body",
    "get_moon",
    "skyfield.api.load",
    "skyfield.api.load.timescale",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_solar_system.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_solar_system.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_transformations": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.tests.test_transformations.TCoo1": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_transformations.TCoo2": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_transformations.TCoo3": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_transformations.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_transformations.assert_allclose": {
  "data": {
   "shadows": "assert_quantity_allclose"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_transformations.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_transformations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_transformations.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_transformations.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_transformations.r": {
  "data": {
   "shadows": "representation"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_transformations.t": {
  "data": {
   "shadows": "transformations"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_transformations.test_affine_transform_fail": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "ValueError",
    "astropy.coordinates.tests.test_transformations.TCoo1",
    "astropy.coordinates.tests.test_transformations.TCoo2",
    "astropy.coordinates.tests.test_transformations.pytest",
    "astropy.coordinates.tests.test_transformations.transfunc",
    "astropy.coordinates.tests.test_transformations.transfunc_invalid_matrix"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_transformations.test_affine_transform_succeed": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "astropy.coordinates.tests.test_transformations.TCoo1",
    "astropy.coordinates.tests.test_transformations.TCoo2",
    "astropy.coordinates.tests.test_transformations.pytest",
    "astropy.coordinates.tests.test_transformations.transfunc",
    "dict",
    "quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_transformations.test_function_transform_with_differentials": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "astropy.coordinates.tests.test_transformations.TCoo2",
    "astropy.coordinates.tests.test_transformations.TCoo3",
    "catch_warnings",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_transformations.test_obstime": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "FK4",
    "Time"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_transformations.test_shortest_path": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "FakeTransform",
    "float",
    "print"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_transformations.test_shortest_path.FakeTransform": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_transformations.test_shortest_path.FakeTransform.__init__": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_transformations.test_sphere_cart": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "cartesian_to_spherical",
    "numpy.arcsin",
    "numpy.pi",
    "numpy.random.randn",
    "spherical_to_cartesian"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_transformations.test_too_many_differentials": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "ValueError",
    "astropy.coordinates.tests.test_transformations.TCoo1",
    "astropy.coordinates.tests.test_transformations.TCoo2",
    "astropy.coordinates.tests.test_transformations.pytest",
    "astropy.coordinates.tests.test_transformations.transfunc",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_transformations.test_transform_classes": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "astropy.coordinates.tests.test_transformations.TCoo1",
    "astropy.coordinates.tests.test_transformations.TCoo2"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_transformations.test_transform_classes.matfunc": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_transformations.test_transform_decos": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "astropy.coordinates.tests.test_transformations.TCoo1",
    "astropy.coordinates.tests.test_transformations.TCoo2"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_transformations.test_transform_decos.matrix": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "astropy.coordinates.tests.test_transformations.TCoo1",
    "astropy.coordinates.tests.test_transformations.TCoo2"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_transformations.test_transform_decos.trans": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "astropy.coordinates.tests.test_transformations.TCoo1",
    "astropy.coordinates.tests.test_transformations.TCoo2"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_transformations.test_transform_path_pri": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_transformations.test_unit_spherical_with_differentials": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "TypeError",
    "astropy.coordinates.tests.test_transformations.TCoo1",
    "astropy.coordinates.tests.test_transformations.TCoo2",
    "astropy.coordinates.tests.test_transformations.pytest",
    "astropy.coordinates.tests.test_transformations.transfunc",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_transformations.test_vel_transformation_obstime_err": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "AltAz",
    "ICRS",
    "NotImplementedError",
    "astropy.coordinates.tests.test_transformations.pytest",
    "get_builtin_sites",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_transformations.transfunc": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.zeros",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_transformations.transfunc.both": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "classmethod",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_transformations.transfunc.just_matrix": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "classmethod",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_transformations.transfunc.no_matrix": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_transformations.transfunc.no_pos": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_transformations.transfunc.no_vel": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_transformations.transfunc_invalid_matrix": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_transformations.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_transformations.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_unit_representation": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.tests.test_unit_representation.FunctionTransform": {
  "data": {
   "shadows": "astropy.coordinates.transformations.FunctionTransform"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_unit_representation.ICRS": {
  "data": {
   "shadows": "astropy.coordinates.ICRS"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_unit_representation.Latitude": {
  "data": {
   "shadows": "astropy.coordinates.Latitude"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_unit_representation.Longitude": {
  "data": {
   "shadows": "astropy.coordinates.Longitude"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_unit_representation.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_unit_representation.REPRESENTATION_CLASSES": {
  "data": {
   "shadows": "astropy.coordinates.representation.REPRESENTATION_CLASSES"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_unit_representation.RepresentationMapping": {
  "data": {
   "shadows": "astropy.coordinates.baseframe.RepresentationMapping"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_unit_representation.SphericalRepresentation": {
  "data": {
   "shadows": "astropy.coordinates.representation.SphericalRepresentation"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_unit_representation.UnitSphericalRepresentation": {
  "data": {
   "shadows": "astropy.coordinates.representation.UnitSphericalRepresentation"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_unit_representation.astropy.coordinates": {
  "data": {
   "shadows": "astropy.coordinates"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_unit_representation.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_unit_representation.frame_transform_graph": {
  "data": {
   "shadows": "astropy.coordinates.baseframe.frame_transform_graph"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.test_unit_representation.setup_function": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "astropy.coordinates.representation.REPRESENTATION_CLASSES",
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_unit_representation.teardown_function": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "astropy.coordinates.representation.REPRESENTATION_CLASSES.clear",
    "astropy.coordinates.representation.REPRESENTATION_CLASSES.update"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_unit_representation.test_unit_representation_subclass": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "astropy.coordinates.baseframe.frame_transform_graph.remove_transform",
    "astropy.units.deg",
    "isinstance",
    "myframe"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_unit_representation.test_unit_representation_subclass.Longitude180": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "astropy.coordinates.Longitude"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_unit_representation.test_unit_representation_subclass.Longitude180.__new__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "astropy.units.deg",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_unit_representation.test_unit_representation_subclass.SphericalWrap180Representation": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "astropy.coordinates.Latitude",
    "astropy.coordinates.representation.SphericalRepresentation",
    "astropy.units.Quantity",
    "astropy.units.deg",
    "collections.OrderedDict"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_unit_representation.test_unit_representation_subclass.UnitSphericalWrap180Representation": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "astropy.coordinates.Latitude",
    "astropy.coordinates.representation.UnitSphericalRepresentation",
    "astropy.units.deg",
    "collections.OrderedDict"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_unit_representation.test_unit_representation_subclass.myframe": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "astropy.coordinates.ICRS",
    "astropy.coordinates.baseframe.RepresentationMapping"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.tests.test_unit_representation.test_unit_representation_subclass.myframe_to_icrs": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "astropy.coordinates.baseframe.frame_transform_graph.transform",
    "astropy.coordinates.transformations.FunctionTransform"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.test_unit_representation.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.utils": {
  "data": {},
  "type": "module"
 },
 "astropy.coordinates.tests.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.utils.randomly_sample_sphere": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "numpy.arcsin",
    "numpy.pi",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.tests.utils.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.tests.utils.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.transformations": {
  "data": {
   "symbols_in_volume": [
    "astropy.coordinates.transformations.AffineTransform",
    "astropy.coordinates.transformations.DynamicMatrixTransform",
    "astropy.coordinates.transformations.FunctionTransform",
    "astropy.coordinates.transformations.FunctionTransformWithFiniteDifference",
    "astropy.coordinates.transformations.StaticMatrixTransform",
    "astropy.coordinates.transformations.trans_to_color",
    "collections.OrderedDict"
   ]
  },
  "type": "module"
 },
 "astropy.coordinates.transformations.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "astropy.coordinates.transformations.AffineTransform": {
  "data": {
   "lineno": 1082,
   "symbols_in_volume": [
    "astropy.coordinates.transformations.BaseAffineTransform"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.transformations.AffineTransform.__call__": {
  "data": {
   "lineno": 1127
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.AffineTransform.__init__": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "TypeError",
    "astropy.coordinates.transformations.AffineTransform",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.BaseAffineTransform": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "astropy.coordinates.transformations.CoordinateTransform"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.transformations.BaseAffineTransform._apply_transform": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "CartesianDifferential",
    "TypeError",
    "ValueError",
    "dict",
    "getattr",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.CompositeTransform": {
  "data": {
   "lineno": 1236,
   "symbols_in_volume": [
    "astropy.coordinates.transformations.CoordinateTransform"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.transformations.CompositeTransform.__call__": {
  "data": {
   "lineno": 1296,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "t"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.CompositeTransform.__init__": {
  "data": {
   "lineno": 1266,
   "symbols_in_volume": [
    "astropy.coordinates.transformations.CompositeTransform",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.CompositeTransform._combine_statics": {
  "data": {
   "lineno": 1277,
   "symbols_in_volume": [
    "astropy.coordinates.transformations.StaticMatrixTransform",
    "isinstance",
    "len",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.CoordinateTransform": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.transformations.CoordinateTransform.__call__": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.CoordinateTransform.__init__": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "TypeError",
    "astropy.coordinates.transformations.inspect",
    "float",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.CoordinateTransform.register": {
  "data": {
   "lineno": 646
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.CoordinateTransform.unregister": {
  "data": {
   "lineno": 658
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.DynamicMatrixTransform": {
  "data": {
   "lineno": 1185,
   "symbols_in_volume": [
    "astropy.coordinates.transformations.BaseAffineTransform"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.transformations.DynamicMatrixTransform.__call__": {
  "data": {
   "lineno": 1230
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.DynamicMatrixTransform.__init__": {
  "data": {
   "lineno": 1217,
   "symbols_in_volume": [
    "TypeError",
    "astropy.coordinates.transformations.DynamicMatrixTransform",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.DynamicMatrixTransform.__init__._transform_func": {
  "data": {
   "lineno": 1223
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.FunctionTransform": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "astropy.coordinates.transformations.CoordinateTransform"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.transformations.FunctionTransform.__call__": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.FunctionTransform.__init__": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.coordinates.transformations.FunctionTransform",
    "len",
    "signature",
    "super",
    "suppress"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.FunctionTransformWithFiniteDifference": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "astropy.coordinates.transformations.FunctionTransform"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.transformations.FunctionTransformWithFiniteDifference.__call__": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "CartesianDifferential",
    "CartesianRepresentation",
    "callable",
    "getattr",
    "supcall"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.FunctionTransformWithFiniteDifference.__init__": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "astropy.coordinates.transformations.FunctionTransformWithFiniteDifference",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.FunctionTransformWithFiniteDifference.finite_difference_frameattr_name": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.coordinates.transformations.StaticMatrixTransform": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "astropy.coordinates.transformations.BaseAffineTransform"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.transformations.StaticMatrixTransform.__call__": {
  "data": {
   "lineno": 1180
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.StaticMatrixTransform.__init__": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "ValueError",
    "astropy.coordinates.transformations.StaticMatrixTransform",
    "matrix",
    "numpy.array",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.TransformGraph": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.coordinates.transformations.TransformGraph.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.TransformGraph._cached_names": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.TransformGraph.add_transform": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "TypeError",
    "astropy.coordinates.transformations.inspect"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.TransformGraph.find_shortest_path": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "ValueError",
    "astropy.coordinates.transformations.heapq",
    "enumerate",
    "float",
    "hasattr",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.TransformGraph.frame_attributes": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.TransformGraph.frame_set": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "property",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.TransformGraph.get_names": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.TransformGraph.get_transform": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "TypeError",
    "astropy.coordinates.transformations.CompositeTransform",
    "astropy.coordinates.transformations.inspect"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.TransformGraph.invalidate_cache": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.TransformGraph.lookup_name": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.TransformGraph.remove_transform": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.TransformGraph.to_dot_graph": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "IOError",
    "astropy.coordinates.transformations.subprocess",
    "dict",
    "hasattr",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.TransformGraph.to_networkx_graph": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "hasattr",
    "networkx.Graph"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.TransformGraph.transform": {
  "data": {
   "lineno": 529
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.TransformGraph.transform.deco": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "transcls"
   ]
  },
  "type": "function"
 },
 "astropy.coordinates.transformations.__all__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "astropy.coordinates.transformations.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.coordinates.transformations.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "astropy.coordinates.transformations.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "astropy.coordinates.transformations.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.coordinates.transformations.heapq": {
  "data": {
   "shadows": "heapq"
  },
  "type": "import"
 },
 "astropy.coordinates.transformations.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "astropy.coordinates.transformations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.coordinates.transformations.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "astropy.coordinates.transformations.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.coordinates.transformations.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "astropy.coordinates.transformations.trans_to_color": {
  "data": {
   "lineno": 1322
  },
  "type": "constant"
 },
 "astropy.coordinates.transformations.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.coordinates.transformations.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.coordinates.transformations.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "astropy.coordinates.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.cosmology": {
  "data": {},
  "type": "module"
 },
 "astropy.cosmology.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.cosmology.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.cosmology.funcs": {
  "data": {},
  "type": "module"
 },
 "astropy.cosmology.funcs.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "astropy.cosmology.funcs.__doctest_requires__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "astropy.cosmology.funcs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.cosmology.funcs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.cosmology.funcs.fminbound": {
  "data": {
   "shadows": "scipy.optimize.fminbound"
  },
  "type": "import"
 },
 "astropy.cosmology.funcs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.cosmology.funcs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.cosmology.funcs.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.cosmology.funcs.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.cosmology.funcs.z_at_value": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "CosmologyError",
    "abs",
    "astropy.cosmology.funcs.warnings",
    "func",
    "isinstance",
    "numpy.allclose",
    "numpy.sign",
    "scipy.optimize.fminbound"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.parameters": {
  "data": {
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "module"
 },
 "astropy.cosmology.parameters.Planck13": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "astropy.cosmology.parameters.Planck15": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "astropy.cosmology.parameters.WMAP5": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "astropy.cosmology.parameters.WMAP7": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "astropy.cosmology.parameters.WMAP9": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "astropy.cosmology.parameters.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.cosmology.parameters.available": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "astropy.cosmology.parameters.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.cosmology.parameters.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.cosmology.parameters.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.cosmology.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.cosmology.setup_package": {
  "data": {},
  "type": "module"
 },
 "astropy.cosmology.setup_package.requires_2to3": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "astropy.cosmology.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.cosmology.tests.test_cosmology": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.cosmology.tests.test_cosmology.HAS_SCIPY": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.cosmology.tests.test_cosmology.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "astropy.cosmology.tests.test_cosmology.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.cosmology.tests.test_cosmology.allclose": {
  "data": {
   "shadows": "quantity_allclose"
  },
  "type": "import"
 },
 "astropy.cosmology.tests.test_cosmology.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.cosmology.tests.test_cosmology.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "astropy.cosmology.tests.test_cosmology.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.cosmology.tests.test_cosmology.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.cosmology.tests.test_cosmology.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.cosmology.tests.test_cosmology.quad": {
  "data": {
   "shadows": "scipy.integrate.quad"
  },
  "type": "import"
 },
 "astropy.cosmology.tests.test_cosmology.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "astropy.cosmology.tests.test_cosmology.test_absorption_distance": {
  "data": {
   "lineno": 1201,
   "symbols_in_volume": [
    "astropy.cosmology.tests.test_cosmology.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_age": {
  "data": {
   "lineno": 1034,
   "symbols_in_volume": [
    "astropy.cosmology.tests.test_cosmology.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_angular_diameter_distance_z1z2": {
  "data": {
   "lineno": 1161,
   "symbols_in_volume": [
    "ValueError",
    "astropy.cosmology.tests.test_cosmology.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_basic": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_clone": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "AttributeError",
    "astropy.cosmology.tests.test_cosmology.pytest",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_comoving_distance_z1z2": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "ValueError",
    "astropy.cosmology.tests.test_cosmology.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_comoving_transverse_distance_z1z2": {
  "data": {
   "lineno": 1115,
   "symbols_in_volume": [
    "ValueError",
    "astropy.cosmology.tests.test_cosmology.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_comoving_volume": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "astropy.cosmology.tests.test_cosmology.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_cos_sub": {
  "data": {
   "lineno": 420
  },
  "type": "class"
 },
 "astropy.cosmology.tests.test_cosmology.test_cos_sub.__init__": {
  "data": {
   "lineno": 421
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_cos_sub.w": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "numpy.ones_like"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_cos_subnu": {
  "data": {
   "lineno": 432
  },
  "type": "class"
 },
 "astropy.cosmology.tests.test_cosmology.test_cos_subnu.__init__": {
  "data": {
   "lineno": 433
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_cos_subnu.w": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "numpy.ones_like"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_critical_density": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": [
    "astropy.cosmology.tests.test_cosmology.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_de_densityscale": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "astropy.cosmology.tests.test_cosmology.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_de_subclass": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "astropy.cosmology.tests.test_cosmology.pytest",
    "astropy.cosmology.tests.test_cosmology.test_cos_sub"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_differential_comoving_volume": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "astropy.cosmology.tests.test_cosmology.pytest",
    "numpy.array",
    "numpy.pi",
    "scipy.integrate.quad"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_distance_broadcast": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "astropy.cosmology.tests.test_cosmology.pytest",
    "g",
    "getattr",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_distances": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": [
    "astropy.cosmology.tests.test_cosmology.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_distmod": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": [
    "astropy.cosmology.tests.test_cosmology.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_efunc_vs_invefunc": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_efunc_vs_invefunc_flrw": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "astropy.cosmology.tests.test_cosmology.pytest",
    "astropy.cosmology.tests.test_cosmology.test_cos_sub",
    "astropy.cosmology.tests.test_cosmology.test_cos_subnu",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_flat_open_closed_icosmo": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "astropy.cosmology.tests.test_cosmology.pytest",
    "io.StringIO",
    "numpy.loadtxt"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_flat_z1": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "astropy.cosmology.tests.test_cosmology.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_init": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.cosmology.tests.test_cosmology.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_integral": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "astropy.cosmology.tests.test_cosmology.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_kpc_methods": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "astropy.cosmology.tests.test_cosmology.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_massivenu_basic": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": [
    "astropy.cosmology.tests.test_cosmology.pytest",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_massivenu_density": {
  "data": {
   "lineno": 1412,
   "symbols_in_volume": [
    "astropy.cosmology.tests.test_cosmology.pytest",
    "numpy.array",
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_matter": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "astropy.cosmology.tests.test_cosmology.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_neg_distmod": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": [
    "astropy.cosmology.tests.test_cosmology.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_ocurv": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "astropy.cosmology.tests.test_cosmology.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_ode": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "astropy.cosmology.tests.test_cosmology.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_ogamma": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "astropy.cosmology.tests.test_cosmology.pytest",
    "numpy.array",
    "numpy.int",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_repr": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_tcmb": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "astropy.cosmology.tests.test_cosmology.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_tnu": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "astropy.cosmology.tests.test_cosmology.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_units": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "astropy.cosmology.tests.test_cosmology.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_varyde_lumdist_mathematica": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "astropy.cosmology.tests.test_cosmology.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_wz": {
  "data": {
   "lineno": 947
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_xtfuncs": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_z_at_value": {
  "data": {
   "lineno": 1482,
   "symbols_in_volume": [
    "astropy.cosmology.tests.test_cosmology.pytest",
    "z_at_value"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_z_at_value_roundtrip": {
  "data": {
   "lineno": 1516,
   "symbols_in_volume": [
    "astropy.cosmology.tests.test_cosmology.inspect",
    "astropy.cosmology.tests.test_cosmology.pytest",
    "func",
    "print"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.test_zeroing": {
  "data": {
   "lineno": 401
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_cosmology.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.cosmology.tests.test_cosmology.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.cosmology.tests.test_pickle": {
  "data": {},
  "type": "module"
 },
 "astropy.cosmology.tests.test_pickle.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.cosmology.tests.test_pickle.cosm": {
  "data": {
   "shadows": "cosmology"
  },
  "type": "import"
 },
 "astropy.cosmology.tests.test_pickle.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.cosmology.tests.test_pickle.originals": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "astropy.cosmology.tests.test_pickle.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.cosmology.tests.test_pickle.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.cosmology.tests.test_pickle.test_flrw": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "astropy.cosmology.tests.test_pickle.originals",
    "astropy.cosmology.tests.test_pickle.pytest",
    "astropy.cosmology.tests.test_pickle.xfails",
    "check_pickling_recovery",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.cosmology.tests.test_pickle.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.cosmology.tests.test_pickle.xfails": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "astropy.cosmology.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.cython_version": {
  "data": {},
  "type": "module"
 },
 "astropy.cython_version.cython_version": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "astropy.extern": {
  "data": {},
  "type": "module"
 },
 "astropy.extern.bundled": {
  "data": {},
  "type": "module"
 },
 "astropy.extern.configobj": {
  "data": {},
  "type": "module"
 },
 "astropy.extern.configobj.configobj": {
  "data": {
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.Builder",
    "astropy.extern.configobj.configobj.ConfigParserInterpolation",
    "astropy.extern.configobj.configobj.TemplateInterpolation",
    "codecs.BOM_UTF16",
    "codecs.BOM_UTF16_BE",
    "codecs.BOM_UTF16_LE",
    "codecs.BOM_UTF8",
    "object"
   ]
  },
  "type": "module"
 },
 "astropy.extern.configobj.configobj.BOMS": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "astropy.extern.configobj.configobj.BOM_LIST": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "astropy.extern.configobj.configobj.BOM_SET": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "astropy.extern.configobj.configobj.BOM_UTF16": {
  "data": {
   "shadows": "codecs.BOM_UTF16"
  },
  "type": "import"
 },
 "astropy.extern.configobj.configobj.BOM_UTF16_BE": {
  "data": {
   "shadows": "codecs.BOM_UTF16_BE"
  },
  "type": "import"
 },
 "astropy.extern.configobj.configobj.BOM_UTF16_LE": {
  "data": {
   "shadows": "codecs.BOM_UTF16_LE"
  },
  "type": "import"
 },
 "astropy.extern.configobj.configobj.BOM_UTF8": {
  "data": {
   "shadows": "codecs.BOM_UTF8"
  },
  "type": "import"
 },
 "astropy.extern.configobj.configobj.Builder": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.extern.configobj.configobj.Builder.build": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.UnknownType",
    "m"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Builder.build_Add": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "TypeError",
    "astropy.extern.configobj.configobj.UnknownType",
    "complex",
    "float",
    "isinstance",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Builder.build_Const": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Builder.build_Dict": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "iter",
    "map",
    "next"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Builder.build_Getattr": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Builder.build_List": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Builder.build_Name": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.UnknownType"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Builder.build_Tuple": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Builder.build_UnaryAdd": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Builder.build_UnarySub": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.Section",
    "astropy.extern.configobj.configobj.re"
   ]
  },
  "type": "class"
 },
 "astropy.extern.configobj.configobj.ConfigObj.__init__": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "DeprecationWarning",
    "TypeError",
    "astropy.extern.configobj.configobj.OPTION_DEFAULTS",
    "astropy.extern.configobj.configobj.Section",
    "astropy.extern.configobj.configobj.unrepr",
    "astropy.extern.configobj.configobj.warnings",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj.__repr__": {
  "data": {
   "lineno": 1362,
   "symbols_in_volume": [
    "_getval",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj.__repr__._getval": {
  "data": {
   "lineno": 1363,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.MissingInterpolationOption",
    "dict.__getitem__"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj._a_to_u": {
  "data": {
   "lineno": 1490,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj._decode": {
  "data": {
   "lineno": 1498,
   "symbols_in_volume": [
    "enumerate",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj._decode_element": {
  "data": {
   "lineno": 1523,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj._get_single_quote": {
  "data": {
   "lineno": 1831,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.ConfigObjError",
    "astropy.extern.configobj.configobj.dquot",
    "astropy.extern.configobj.configobj.squot"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj._get_triple_quote": {
  "data": {
   "lineno": 1841,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.ConfigObjError",
    "astropy.extern.configobj.configobj.tdquot",
    "astropy.extern.configobj.configobj.tsquot"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj._handle_bom": {
  "data": {
   "lineno": 1373,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.BOMS",
    "astropy.extern.configobj.configobj.BOM_LIST",
    "astropy.extern.configobj.configobj.BOM_SET",
    "isinstance",
    "len",
    "list",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj._handle_comment": {
  "data": {
   "lineno": 2007
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj._handle_configspec": {
  "data": {
   "lineno": 1935,
   "symbols_in_volume": [
    "IOError",
    "astropy.extern.configobj.configobj.ConfigObj",
    "astropy.extern.configobj.configobj.ConfigObjError",
    "astropy.extern.configobj.configobj.ConfigspecError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj._handle_error": {
  "data": {
   "lineno": 1731,
   "symbols_in_volume": [
    "ErrorClass"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj._handle_value": {
  "data": {
   "lineno": 1851,
   "symbols_in_volume": [
    "SyntaxError"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj._initialise": {
  "data": {
   "lineno": 1330,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.OPTION_DEFAULTS",
    "astropy.extern.configobj.configobj.Section"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj._load": {
  "data": {
   "lineno": 1234,
   "symbols_in_volume": [
    "IOError",
    "TypeError",
    "all",
    "astropy.extern.configobj.configobj.ConfigObj",
    "astropy.extern.configobj.configobj.ConfigObjError",
    "astropy.extern.configobj.configobj.MISSING",
    "astropy.extern.configobj.configobj.os",
    "dict",
    "getattr",
    "isinstance",
    "len",
    "list",
    "open",
    "repr",
    "set_section",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj._load.set_section": {
  "data": {
   "lineno": 1260,
   "symbols_in_volume": [
    "set_section"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj._match_depth": {
  "data": {
   "lineno": 1712,
   "symbols_in_volume": [
    "SyntaxError"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj._multiline": {
  "data": {
   "lineno": 1900,
   "symbols_in_volume": [
    "SyntaxError",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj._parse": {
  "data": {
   "lineno": 1545,
   "symbols_in_volume": [
    "Exception",
    "SyntaxError",
    "astropy.extern.configobj.configobj.DuplicateError",
    "astropy.extern.configobj.configobj.NestingError",
    "astropy.extern.configobj.configobj.ParseError",
    "astropy.extern.configobj.configobj.Section",
    "astropy.extern.configobj.configobj.UnknownType",
    "astropy.extern.configobj.configobj.UnreprError",
    "astropy.extern.configobj.configobj.unrepr",
    "isinstance",
    "len",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj._quote": {
  "data": {
   "lineno": 1760,
   "symbols_in_volume": [
    "TypeError",
    "astropy.extern.configobj.configobj.ConfigObjError",
    "astropy.extern.configobj.configobj.noquot",
    "astropy.extern.configobj.configobj.wspace_plus",
    "isinstance",
    "len",
    "list",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj._set_configspec": {
  "data": {
   "lineno": 1956,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.Section",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj._str": {
  "data": {
   "lineno": 1532,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj._unquote": {
  "data": {
   "lineno": 1750,
   "symbols_in_volume": [
    "SyntaxError"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj._write_line": {
  "data": {
   "lineno": 1984,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj._write_marker": {
  "data": {
   "lineno": 1998
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj.reload": {
  "data": {
   "lineno": 2351,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.OPTION_DEFAULTS",
    "astropy.extern.configobj.configobj.ReloadError",
    "getattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj.reset": {
  "data": {
   "lineno": 2340
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj.validate": {
  "data": {
   "lineno": 2133,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "validate.VdtMissingValue",
    "validate_entry"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj.validate.validate_entry": {
  "data": {
   "lineno": 2194,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObj.write": {
  "data": {
   "lineno": 2019,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.BOM_LIST",
    "astropy.extern.configobj.configobj.DEFAULT_INDENT_TYPE",
    "astropy.extern.configobj.configobj.Section",
    "astropy.extern.configobj.configobj.match_utf8",
    "astropy.extern.configobj.configobj.os",
    "astropy.extern.configobj.configobj.sys",
    "codecs.BOM_UTF8",
    "getattr",
    "isinstance",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigObjError": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "SyntaxError"
   ]
  },
  "type": "class"
 },
 "astropy.extern.configobj.configobj.ConfigObjError.__init__": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "SyntaxError.__init__"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigParserInterpolation": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.InterpolationEngine",
    "astropy.extern.configobj.configobj.re"
   ]
  },
  "type": "class"
 },
 "astropy.extern.configobj.configobj.ConfigParserInterpolation._parse_match": {
  "data": {
   "lineno": 417
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.ConfigspecError": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.ConfigObjError"
   ]
  },
  "type": "class"
 },
 "astropy.extern.configobj.configobj.DEFAULT_INDENT_TYPE": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "astropy.extern.configobj.configobj.DEFAULT_INTERPOLATION": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "astropy.extern.configobj.configobj.DuplicateError": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.ConfigObjError"
   ]
  },
  "type": "class"
 },
 "astropy.extern.configobj.configobj.InterpolationEngine": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.re",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.extern.configobj.configobj.InterpolationEngine.__init__": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.InterpolationEngine._fetch": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.MissingInterpolationOption",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.InterpolationEngine._parse_match": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.InterpolationEngine.interpolate": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "recursive_interpolate"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.InterpolationEngine.interpolate.recursive_interpolate": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.InterpolationLoopError",
    "len",
    "recursive_interpolate"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.InterpolationError": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.ConfigObjError"
   ]
  },
  "type": "class"
 },
 "astropy.extern.configobj.configobj.InterpolationLoopError": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.InterpolationError"
   ]
  },
  "type": "class"
 },
 "astropy.extern.configobj.configobj.InterpolationLoopError.__init__": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.InterpolationError"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.MAX_INTERPOL_DEPTH": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "astropy.extern.configobj.configobj.MISSING": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "astropy.extern.configobj.configobj.MissingInterpolationOption": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.InterpolationError"
   ]
  },
  "type": "class"
 },
 "astropy.extern.configobj.configobj.MissingInterpolationOption.__init__": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.InterpolationError"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.NestingError": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.ConfigObjError"
   ]
  },
  "type": "class"
 },
 "astropy.extern.configobj.configobj.OPTION_DEFAULTS": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "astropy.extern.configobj.configobj.ParseError": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.ConfigObjError"
   ]
  },
  "type": "class"
 },
 "astropy.extern.configobj.configobj.ReloadError": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "IOError"
   ]
  },
  "type": "class"
 },
 "astropy.extern.configobj.configobj.ReloadError.__init__": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "IOError.__init__"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.RepeatSectionError": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.ConfigObjError"
   ]
  },
  "type": "class"
 },
 "astropy.extern.configobj.configobj.Section": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "astropy.extern.configobj.configobj.Section.__delitem__": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "dict.__delitem__"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.__getitem__": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "_check",
    "dict.__getitem__",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.__getitem__._check": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.__init__": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "dict.__init__"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.__reduce__": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.__newobj__",
    "dict"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.__repr__": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "_getval",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.__repr__._getval": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.MissingInterpolationOption",
    "dict.__getitem__"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.__setitem__": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.extern.configobj.configobj.Section",
    "astropy.extern.configobj.configobj.collections",
    "astropy.extern.configobj.configobj.unrepr",
    "dict.__setitem__",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.__setstate__": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "dict.update"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section._initialise": {
  "data": {
   "lineno": 514
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section._interpolate": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "AttributeError",
    "astropy.extern.configobj.configobj.DEFAULT_INTERPOLATION",
    "astropy.extern.configobj.configobj.interpolation_engines",
    "class_"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.as_bool": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.as_float": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.as_int": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.as_list": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.clear": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "dict.clear"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.dict": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.Section",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.get": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.items": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.iteritems": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "iter",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.iterkeys": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.itervalues": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "iter",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.keys": {
  "data": {
   "lineno": 716
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.merge": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.collections",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.pop": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "KeyError",
    "astropy.extern.configobj.configobj.MISSING"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.popitem": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.rename": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "KeyError",
    "dict.__delitem__",
    "dict.__setitem__"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.restore_default": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "dict.__setitem__"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.restore_defaults": {
  "data": {
   "lineno": 1056
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.setdefault": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.update": {
  "data": {
   "lineno": 649
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.values": {
  "data": {
   "lineno": 721
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.Section.walk": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "Exception",
    "function",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.SimpleVal": {
  "data": {
   "lineno": 2377,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.extern.configobj.configobj.SimpleVal.__init__": {
  "data": {
   "lineno": 2389,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.ConfigObjError"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.SimpleVal.check": {
  "data": {
   "lineno": 2392
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.TemplateInterpolation": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.InterpolationEngine",
    "astropy.extern.configobj.configobj.re"
   ]
  },
  "type": "class"
 },
 "astropy.extern.configobj.configobj.TemplateInterpolation._parse_match": {
  "data": {
   "lineno": 436
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.UnknownType": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "astropy.extern.configobj.configobj.UnreprError": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.ConfigObjError"
   ]
  },
  "type": "class"
 },
 "astropy.extern.configobj.configobj.VdtMissingValue": {
  "data": {
   "shadows": "validate.VdtMissingValue"
  },
  "type": "import"
 },
 "astropy.extern.configobj.configobj.__all__": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "astropy.extern.configobj.configobj.__newobj__": {
  "data": {
   "lineno": 456
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj._builder": {
  "data": {
   "lineno": 198
  },
  "type": "constant"
 },
 "astropy.extern.configobj.configobj.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "astropy.extern.configobj.configobj.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "astropy.extern.configobj.configobj.compiler": {
  "data": {
   "shadows": "compiler"
  },
  "type": "import"
 },
 "astropy.extern.configobj.configobj.dquot": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "astropy.extern.configobj.configobj.flatten_errors": {
  "data": {
   "lineno": 2399,
   "symbols_in_volume": [
    "Exception",
    "astropy.extern.configobj.configobj.collections",
    "isinstance",
    "list",
    "sorted"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.getObj": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.compiler"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.get_extra_values": {
  "data": {
   "lineno": 2459
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.interpolation_engines": {
  "data": {
   "lineno": 450
  },
  "type": "constant"
 },
 "astropy.extern.configobj.configobj.match_utf8": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.BOM_LIST"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.noquot": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "astropy.extern.configobj.configobj.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.extern.configobj.configobj.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.extern.configobj.configobj.squot": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "astropy.extern.configobj.configobj.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.extern.configobj.configobj.tdquot": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "astropy.extern.configobj.configobj.tsquot": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "astropy.extern.configobj.configobj.unrepr": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "astropy.extern.configobj.configobj.ast"
   ]
  },
  "type": "function"
 },
 "astropy.extern.configobj.configobj.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.extern.configobj.configobj.wspace_plus": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "astropy.extern.ply": {
  "data": {},
  "type": "module"
 },
 "astropy.extern.ply.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "astropy.extern.ply.__version__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens": {
  "data": {},
  "type": "module"
 },
 "astropy.extern.ply.ctokens.t_AND": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_ANDEQUAL": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_ARROW": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_CHARACTER": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_COLON": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_COMMA": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_COMMENT": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "astropy.extern.ply.ctokens.t_CPPCOMMENT": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "astropy.extern.ply.ctokens.t_DECREMENT": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_DIVEQUAL": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_DIVIDE": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_ELLIPSIS": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_EQ": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_EQUALS": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_FLOAT": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_GE": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_GT": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_ID": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_INCREMENT": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_INTEGER": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_LAND": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_LBRACE": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_LBRACKET": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_LE": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_LNOT": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_LOR": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_LPAREN": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_LSHIFT": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_LSHIFTEQUAL": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_LT": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_MINUS": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_MINUSEQUAL": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_MODEQUAL": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_MODULO": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_NE": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_NOT": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_OR": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_OREQUAL": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_PERIOD": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_PLUS": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_PLUSEQUAL": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_RBRACE": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_RBRACKET": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_RPAREN": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_RSHIFT": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_RSHIFTEQUAL": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_SEMI": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_STRING": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_TERNARY": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_TIMES": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_TIMESEQUAL": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_XOR": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.t_XOREQUAL": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "astropy.extern.ply.ctokens.tokens": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "astropy.extern.ply.lex": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "astropy.extern.ply.lex.TOKEN",
    "astropy.extern.ply.lex.re",
    "astropy.extern.ply.lex.types",
    "bytes",
    "str"
   ]
  },
  "type": "module"
 },
 "astropy.extern.ply.lex.LexError": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "astropy.extern.ply.lex.LexError.__init__": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.LexToken": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.extern.ply.lex.LexToken.__repr__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.LexToken.__str__": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.Lexer": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "next"
   ]
  },
  "type": "class"
 },
 "astropy.extern.ply.lex.Lexer.__init__": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.Lexer.__iter__": {
  "data": {
   "lineno": 415
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.Lexer.begin": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.Lexer.clone": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "astropy.extern.ply.lex.copy",
    "getattr",
    "object"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.Lexer.current_state": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.Lexer.input": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "ValueError",
    "astropy.extern.ply.lex.StringTypes",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.Lexer.next": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "StopIteration"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.Lexer.pop_state": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.Lexer.push_state": {
  "data": {
   "lineno": 276
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.Lexer.readtab": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "ImportError",
    "astropy.extern.ply.lex.__tabversion__",
    "astropy.extern.ply.lex._names_to_funcs",
    "astropy.extern.ply.lex.re",
    "astropy.extern.ply.lex.sys",
    "astropy.extern.ply.lex.types",
    "exec",
    "getattr",
    "isinstance",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.Lexer.skip": {
  "data": {
   "lineno": 295
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.Lexer.token": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "RuntimeError",
    "astropy.extern.ply.lex.LexError",
    "astropy.extern.ply.lex.LexToken",
    "func",
    "func.__code__.co_filename",
    "func.__code__.co_firstlineno",
    "func.__name__"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.Lexer.writetab": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "IOError",
    "astropy.extern.ply.lex.__tabversion__",
    "astropy.extern.ply.lex.__version__",
    "astropy.extern.ply.lex._funcs_to_names",
    "astropy.extern.ply.lex.os",
    "astropy.extern.ply.lex.types",
    "isinstance",
    "open",
    "repr",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.LexerReflect": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.extern.ply.lex.LexerReflect.__init__": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "astropy.extern.ply.lex.PlyLogger",
    "astropy.extern.ply.lex.sys",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.LexerReflect.get_all": {
  "data": {
   "lineno": 570
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.LexerReflect.get_literals": {
  "data": {
   "lineno": 615
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.LexerReflect.get_rules": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "astropy.extern.ply.lex.StringTypes",
    "astropy.extern.ply.lex._statetoken",
    "hasattr",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.LexerReflect.get_states": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "astropy.extern.ply.lex.StringTypes",
    "isinstance",
    "len",
    "list",
    "repr",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.LexerReflect.get_tokens": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.LexerReflect.validate_all": {
  "data": {
   "lineno": 577
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.LexerReflect.validate_literals": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "TypeError",
    "astropy.extern.ply.lex.StringTypes",
    "isinstance",
    "len",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.LexerReflect.validate_module": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "IOError",
    "astropy.extern.ply.lex.inspect",
    "astropy.extern.ply.lex.re"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.LexerReflect.validate_rules": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "astropy.extern.ply.lex._get_regex",
    "astropy.extern.ply.lex.inspect",
    "astropy.extern.ply.lex.re",
    "astropy.extern.ply.lex.types",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.LexerReflect.validate_tokens": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "astropy.extern.ply.lex._is_identifier"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.NullLogger": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.extern.ply.lex.NullLogger.__call__": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.NullLogger.__getattribute__": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.PlyLogger": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.extern.ply.lex.PlyLogger.__init__": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.PlyLogger.critical": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.PlyLogger.error": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.PlyLogger.warning": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.StringTypes": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "astropy.extern.ply.lex.TOKEN": {
  "data": {
   "lineno": 1089
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.TOKEN.set_regex": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "astropy.extern.ply.lex._get_regex",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.Token": {
  "data": {
   "lineno": 1099
  },
  "type": "constant"
 },
 "astropy.extern.ply.lex.__tabversion__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "astropy.extern.ply.lex.__version__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "astropy.extern.ply.lex._form_master_re": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "Exception",
    "astropy.extern.ply.lex.re",
    "astropy.extern.ply.lex.types",
    "int",
    "len",
    "max",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.lex._funcs_to_names": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.lex._get_regex": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "func",
    "func.__doc__",
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.lex._is_identifier": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "astropy.extern.ply.lex._names_to_funcs": {
  "data": {
   "lineno": 477
  },
  "type": "function"
 },
 "astropy.extern.ply.lex._statetoken": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "enumerate",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "astropy.extern.ply.lex.get_caller_module_dict": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "astropy.extern.ply.lex.sys"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "astropy.extern.ply.lex.lex": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "IOError",
    "ImportError",
    "SyntaxError",
    "astropy.extern.ply.lex.Lexer",
    "astropy.extern.ply.lex.LexerReflect",
    "astropy.extern.ply.lex.PlyLogger",
    "astropy.extern.ply.lex._form_master_re",
    "astropy.extern.ply.lex._get_regex",
    "astropy.extern.ply.lex.get_caller_module_dict",
    "astropy.extern.ply.lex.os",
    "astropy.extern.ply.lex.sys",
    "astropy.extern.ply.lex.types",
    "dict",
    "dir",
    "enumerate",
    "exec",
    "getattr",
    "input",
    "isinstance",
    "list",
    "object",
    "set",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.extern.ply.lex.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.extern.ply.lex.runmain": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "IndexError",
    "_input",
    "_token",
    "astropy.extern.ply.lex.sys",
    "input",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.lex.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.extern.ply.lex.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "astropy.extern.ply.yacc": {
  "data": {
   "symbols_in_volume": [
    "astropy.extern.ply.yacc.re",
    "astropy.extern.ply.yacc.sys",
    "str"
   ]
  },
  "type": "module"
 },
 "astropy.extern.ply.yacc.Grammar": {
  "data": {
   "lineno": 1473,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.extern.ply.yacc.Grammar.__getitem__": {
  "data": {
   "lineno": 1513
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.Grammar.__init__": {
  "data": {
   "lineno": 1474,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.Grammar.__len__": {
  "data": {
   "lineno": 1510,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.Grammar._first": {
  "data": {
   "lineno": 1801
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.Grammar.add_production": {
  "data": {
   "lineno": 1549,
   "symbols_in_volume": [
    "KeyError",
    "SyntaxError",
    "astropy.extern.ply.yacc.GrammarError",
    "astropy.extern.ply.yacc.Production",
    "astropy.extern.ply.yacc._is_identifier",
    "astropy.extern.ply.yacc.rightmost_terminal",
    "enumerate",
    "eval",
    "len",
    "map"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.Grammar.build_lritems": {
  "data": {
   "lineno": 1932,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "astropy.extern.ply.yacc.LRItem",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.Grammar.compute_first": {
  "data": {
   "lineno": 1836
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.Grammar.compute_follow": {
  "data": {
   "lineno": 1873,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.Grammar.find_unreachable": {
  "data": {
   "lineno": 1649,
   "symbols_in_volume": [
    "mark_reachable_from",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.Grammar.find_unreachable.mark_reachable_from": {
  "data": {
   "lineno": 1652,
   "symbols_in_volume": [
    "mark_reachable_from"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.Grammar.infinite_cycles": {
  "data": {
   "lineno": 1672
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.Grammar.set_precedence": {
  "data": {
   "lineno": 1524,
   "symbols_in_volume": [
    "astropy.extern.ply.yacc.GrammarError"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.Grammar.set_start": {
  "data": {
   "lineno": 1633,
   "symbols_in_volume": [
    "astropy.extern.ply.yacc.GrammarError",
    "astropy.extern.ply.yacc.Production"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.Grammar.undefined_symbols": {
  "data": {
   "lineno": 1736
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.Grammar.unused_precedence": {
  "data": {
   "lineno": 1785
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.Grammar.unused_rules": {
  "data": {
   "lineno": 1768
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.Grammar.unused_terminals": {
  "data": {
   "lineno": 1753
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.GrammarError": {
  "data": {
   "lineno": 1470,
   "symbols_in_volume": [
    "astropy.extern.ply.yacc.YaccError"
   ]
  },
  "type": "class"
 },
 "astropy.extern.ply.yacc.LALRError": {
  "data": {
   "lineno": 2089,
   "symbols_in_volume": [
    "astropy.extern.ply.yacc.YaccError"
   ]
  },
  "type": "class"
 },
 "astropy.extern.ply.yacc.LRGeneratedTable": {
  "data": {
   "lineno": 2099,
   "symbols_in_volume": [
    "astropy.extern.ply.yacc.LRTable"
   ]
  },
  "type": "class"
 },
 "astropy.extern.ply.yacc.LRGeneratedTable.__init__": {
  "data": {
   "lineno": 2100,
   "symbols_in_volume": [
    "astropy.extern.ply.yacc.LALRError",
    "astropy.extern.ply.yacc.NullLogger"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRGeneratedTable.add_lalr_lookaheads": {
  "data": {
   "lineno": 2509
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRGeneratedTable.add_lookaheads": {
  "data": {
   "lineno": 2491
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRGeneratedTable.compute_follow_sets": {
  "data": {
   "lineno": 2473,
   "symbols_in_volume": [
    "FP",
    "R",
    "astropy.extern.ply.yacc.digraph"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRGeneratedTable.compute_lookback_includes": {
  "data": {
   "lineno": 2371,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRGeneratedTable.compute_nullable_nonterminals": {
  "data": {
   "lineno": 2254,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRGeneratedTable.compute_read_sets": {
  "data": {
   "lineno": 2451,
   "symbols_in_volume": [
    "FP",
    "R",
    "astropy.extern.ply.yacc.digraph"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRGeneratedTable.dr_relation": {
  "data": {
   "lineno": 2303
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRGeneratedTable.find_nonterminal_transitions": {
  "data": {
   "lineno": 2283,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRGeneratedTable.lr0_closure": {
  "data": {
   "lineno": 2137,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRGeneratedTable.lr0_goto": {
  "data": {
   "lineno": 2163,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRGeneratedTable.lr0_items": {
  "data": {
   "lineno": 2198,
   "symbols_in_volume": [
    "id",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRGeneratedTable.lr_parse_table": {
  "data": {
   "lineno": 2533,
   "symbols_in_volume": [
    "astropy.extern.ply.yacc.LALRError",
    "id"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRGeneratedTable.pickle_table": {
  "data": {
   "lineno": 2838,
   "symbols_in_volume": [
    "ImportError",
    "astropy.extern.ply.yacc.__tabversion__",
    "astropy.extern.ply.yacc.pickle_protocol",
    "cPickle.dump",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRGeneratedTable.reads_relation": {
  "data": {
   "lineno": 2328,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRGeneratedTable.write_table": {
  "data": {
   "lineno": 2716,
   "symbols_in_volume": [
    "IOError",
    "astropy.extern.ply.yacc.__tabversion__",
    "astropy.extern.ply.yacc.types",
    "isinstance",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRItem": {
  "data": {
   "lineno": 1427,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.extern.ply.yacc.LRItem.__init__": {
  "data": {
   "lineno": 1428,
   "symbols_in_volume": [
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRItem.__repr__": {
  "data": {
   "lineno": 1446,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRItem.__str__": {
  "data": {
   "lineno": 1439
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRParser": {
  "data": {
   "lineno": 285
  },
  "type": "class"
 },
 "astropy.extern.ply.yacc.LRParser.__init__": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRParser.disable_defaulted_states": {
  "data": {
   "lineno": 320
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRParser.errok": {
  "data": {
   "lineno": 294
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRParser.parse": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "astropy.extern.ply.yacc.PlyLogger",
    "astropy.extern.ply.yacc.sys",
    "astropy.extern.ply.yacc.yaccdevel",
    "input",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRParser.parsedebug": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "RuntimeError",
    "SyntaxError",
    "astropy.extern.ply.yacc.YaccProduction",
    "astropy.extern.ply.yacc.YaccSymbol",
    "astropy.extern.ply.yacc.call_errorfunc",
    "astropy.extern.ply.yacc.error_count",
    "astropy.extern.ply.yacc.format_result",
    "astropy.extern.ply.yacc.format_stack_entry",
    "astropy.extern.ply.yacc.sys",
    "get_token",
    "getattr",
    "hasattr",
    "input",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRParser.parseopt": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "RuntimeError",
    "SyntaxError",
    "astropy.extern.ply.yacc.YaccProduction",
    "astropy.extern.ply.yacc.YaccSymbol",
    "astropy.extern.ply.yacc.call_errorfunc",
    "astropy.extern.ply.yacc.error_count",
    "astropy.extern.ply.yacc.sys",
    "get_token",
    "getattr",
    "hasattr",
    "input",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRParser.parseopt_notrack": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "RuntimeError",
    "SyntaxError",
    "astropy.extern.ply.yacc.YaccProduction",
    "astropy.extern.ply.yacc.YaccSymbol",
    "astropy.extern.ply.yacc.call_errorfunc",
    "astropy.extern.ply.yacc.error_count",
    "astropy.extern.ply.yacc.sys",
    "get_token",
    "getattr",
    "hasattr",
    "input",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRParser.restart": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "astropy.extern.ply.yacc.YaccSymbol"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRParser.set_defaulted_states": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRTable": {
  "data": {
   "lineno": 1971,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.extern.ply.yacc.LRTable.__init__": {
  "data": {
   "lineno": 1972
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRTable.bind_callables": {
  "data": {
   "lineno": 2026
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRTable.read_pickle": {
  "data": {
   "lineno": 1998,
   "symbols_in_volume": [
    "ImportError",
    "astropy.extern.ply.yacc.MiniProduction",
    "astropy.extern.ply.yacc.VersionError",
    "astropy.extern.ply.yacc.__tabversion__",
    "cPickle.load",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.LRTable.read_table": {
  "data": {
   "lineno": 1978,
   "symbols_in_volume": [
    "astropy.extern.ply.yacc.MiniProduction",
    "astropy.extern.ply.yacc.VersionError",
    "astropy.extern.ply.yacc.__tabversion__",
    "astropy.extern.ply.yacc.sys",
    "astropy.extern.ply.yacc.types",
    "exec",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.MAXINT": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "astropy.extern.ply.yacc.MiniProduction": {
  "data": {
   "lineno": 1381,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.extern.ply.yacc.MiniProduction.__init__": {
  "data": {
   "lineno": 1382,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.MiniProduction.__repr__": {
  "data": {
   "lineno": 1394
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.MiniProduction.__str__": {
  "data": {
   "lineno": 1391
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.MiniProduction.bind": {
  "data": {
   "lineno": 1398
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.NullLogger": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.extern.ply.yacc.NullLogger.__call__": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.NullLogger.__getattribute__": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.ParserReflect": {
  "data": {
   "lineno": 2926,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.extern.ply.yacc.ParserReflect.__init__": {
  "data": {
   "lineno": 2927,
   "symbols_in_volume": [
    "astropy.extern.ply.yacc.PlyLogger",
    "astropy.extern.ply.yacc.sys",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.ParserReflect.get_all": {
  "data": {
   "lineno": 2942
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.ParserReflect.get_error_func": {
  "data": {
   "lineno": 3030
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.ParserReflect.get_pfunctions": {
  "data": {
   "lineno": 3125,
   "symbols_in_volume": [
    "astropy.extern.ply.yacc.inspect",
    "astropy.extern.ply.yacc.types",
    "getattr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.ParserReflect.get_precedence": {
  "data": {
   "lineno": 3090
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.ParserReflect.get_start": {
  "data": {
   "lineno": 3020
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.ParserReflect.get_tokens": {
  "data": {
   "lineno": 3056,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.ParserReflect.signature": {
  "data": {
   "lineno": 2960,
   "symbols_in_volume": [
    "ImportError",
    "TypeError",
    "ValueError",
    "astropy.extern.ply.yacc.base64",
    "astropy.extern.ply.yacc.sys",
    "md5.md5"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.ParserReflect.validate_all": {
  "data": {
   "lineno": 2950
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.ParserReflect.validate_error_func": {
  "data": {
   "lineno": 3034,
   "symbols_in_volume": [
    "astropy.extern.ply.yacc.inspect",
    "astropy.extern.ply.yacc.types",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.ParserReflect.validate_modules": {
  "data": {
   "lineno": 2995,
   "symbols_in_volume": [
    "IOError",
    "astropy.extern.ply.yacc.inspect",
    "astropy.extern.ply.yacc.re",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.ParserReflect.validate_pfunctions": {
  "data": {
   "lineno": 3146,
   "symbols_in_volume": [
    "IndexError",
    "SyntaxError",
    "astropy.extern.ply.yacc.inspect",
    "astropy.extern.ply.yacc.parse_grammar",
    "astropy.extern.ply.yacc.types",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.ParserReflect.validate_precedence": {
  "data": {
   "lineno": 3094,
   "symbols_in_volume": [
    "astropy.extern.ply.yacc.string_types",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.ParserReflect.validate_start": {
  "data": {
   "lineno": 3024,
   "symbols_in_volume": [
    "astropy.extern.ply.yacc.string_types",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.ParserReflect.validate_tokens": {
  "data": {
   "lineno": 3076,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.PlyLogger": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.extern.ply.yacc.PlyLogger.__init__": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.PlyLogger.debug": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.PlyLogger.error": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.PlyLogger.warning": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.Production": {
  "data": {
   "lineno": 1309,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.extern.ply.yacc.Production.__getitem__": {
  "data": {
   "lineno": 1353
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.Production.__init__": {
  "data": {
   "lineno": 1311,
   "symbols_in_volume": [
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.Production.__len__": {
  "data": {
   "lineno": 1347,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.Production.__nonzero__": {
  "data": {
   "lineno": 1350
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.Production.__repr__": {
  "data": {
   "lineno": 1344,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.Production.__str__": {
  "data": {
   "lineno": 1341
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.Production.bind": {
  "data": {
   "lineno": 1373
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.Production.lr_item": {
  "data": {
   "lineno": 1357,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "astropy.extern.ply.yacc.LRItem",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.VersionError": {
  "data": {
   "lineno": 1968,
   "symbols_in_volume": [
    "astropy.extern.ply.yacc.YaccError"
   ]
  },
  "type": "class"
 },
 "astropy.extern.ply.yacc.YaccError": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "astropy.extern.ply.yacc.YaccProduction": {
  "data": {
   "lineno": 233
  },
  "type": "class"
 },
 "astropy.extern.ply.yacc.YaccProduction.__getitem__": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "isinstance",
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.YaccProduction.__getslice__": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.YaccProduction.__init__": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.YaccProduction.__len__": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.YaccProduction.__setitem__": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.YaccProduction.error": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "SyntaxError"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.YaccProduction.lexpos": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.YaccProduction.lexspan": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.YaccProduction.lineno": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.YaccProduction.linespan": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.YaccProduction.set_lineno": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.YaccSymbol": {
  "data": {
   "lineno": 217
  },
  "type": "class"
 },
 "astropy.extern.ply.yacc.YaccSymbol.__repr__": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.YaccSymbol.__str__": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.__tabversion__": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "astropy.extern.ply.yacc.__version__": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "astropy.extern.ply.yacc._errok": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "astropy.extern.ply.yacc._is_identifier": {
  "data": {
   "lineno": 1283
  },
  "type": "constant"
 },
 "astropy.extern.ply.yacc._restart": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "astropy.extern.ply.yacc._token": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "astropy.extern.ply.yacc._warnmsg": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "astropy.extern.ply.yacc.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "astropy.extern.ply.yacc.call_errorfunc": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "NameError",
    "astropy.extern.ply.yacc._errok",
    "astropy.extern.ply.yacc._restart",
    "astropy.extern.ply.yacc._token",
    "astropy.extern.ply.yacc.token",
    "errorfunc"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.debug_file": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "astropy.extern.ply.yacc.default_lr": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "astropy.extern.ply.yacc.digraph": {
  "data": {
   "lineno": 2055,
   "symbols_in_volume": [
    "astropy.extern.ply.yacc.traverse"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.errok": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "astropy.extern.ply.yacc._errok",
    "astropy.extern.ply.yacc._warnmsg",
    "astropy.extern.ply.yacc.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.error_count": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "astropy.extern.ply.yacc.format_result": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "astropy.extern.ply.yacc.resultlimit",
    "id",
    "len",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.format_stack_entry": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "id",
    "len",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.get_caller_module_dict": {
  "data": {
   "lineno": 2873,
   "symbols_in_volume": [
    "astropy.extern.ply.yacc.sys"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "astropy.extern.ply.yacc.md5": {
  "data": {
   "shadows": "md5.md5"
  },
  "type": "import"
 },
 "astropy.extern.ply.yacc.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "astropy.extern.ply.yacc.parse_grammar": {
  "data": {
   "lineno": 2885,
   "symbols_in_volume": [
    "Exception",
    "SyntaxError"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "astropy.extern.ply.yacc.pickle_protocol": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "astropy.extern.ply.yacc.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.extern.ply.yacc.restart": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "astropy.extern.ply.yacc._restart",
    "astropy.extern.ply.yacc._warnmsg",
    "astropy.extern.ply.yacc.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.resultlimit": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "astropy.extern.ply.yacc.rightmost_terminal": {
  "data": {
   "lineno": 1454,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.string_types": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "astropy.extern.ply.yacc.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.extern.ply.yacc.tab_module": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "astropy.extern.ply.yacc.token": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "astropy.extern.ply.yacc._token",
    "astropy.extern.ply.yacc._warnmsg",
    "astropy.extern.ply.yacc.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.traverse": {
  "data": {
   "lineno": 2066,
   "symbols_in_volume": [
    "FP",
    "R",
    "astropy.extern.ply.yacc.MAXINT",
    "len",
    "min"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "astropy.extern.ply.yacc.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.extern.ply.yacc.yacc": {
  "data": {
   "lineno": 3212,
   "symbols_in_volume": [
    "Exception",
    "IOError",
    "ImportError",
    "astropy.extern.ply.yacc.Grammar",
    "astropy.extern.ply.yacc.GrammarError",
    "astropy.extern.ply.yacc.LRGeneratedTable",
    "astropy.extern.ply.yacc.LRParser",
    "astropy.extern.ply.yacc.LRTable",
    "astropy.extern.ply.yacc.NullLogger",
    "astropy.extern.ply.yacc.ParserReflect",
    "astropy.extern.ply.yacc.PlyLogger",
    "astropy.extern.ply.yacc.VersionError",
    "astropy.extern.ply.yacc.YaccError",
    "astropy.extern.ply.yacc.__version__",
    "astropy.extern.ply.yacc.debug_file",
    "astropy.extern.ply.yacc.get_caller_module_dict",
    "astropy.extern.ply.yacc.sys",
    "astropy.extern.ply.yacc.tab_module",
    "astropy.extern.ply.yacc.types",
    "astropy.extern.ply.yacc.yaccdebug",
    "dict",
    "dir",
    "enumerate",
    "exec",
    "getattr",
    "id",
    "isinstance",
    "len",
    "list",
    "open",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.extern.ply.yacc.yaccdebug": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "astropy.extern.ply.yacc.yaccdevel": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "astropy.extern.setup_package": {
  "data": {},
  "type": "module"
 },
 "astropy.extern.setup_package.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.extern.setup_package.get_package_data": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "astropy.extern.setup_package.os"
   ]
  },
  "type": "function"
 },
 "astropy.extern.setup_package.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.extern.setup_package.requires_2to3": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "astropy.extern.six": {
  "data": {
   "symbols_in_volume": [
    "astropy.extern.six._import_six",
    "distutils.version.StrictVersion"
   ]
  },
  "type": "module"
 },
 "astropy.extern.six.StrictVersion": {
  "data": {
   "shadows": "distutils.version.StrictVersion"
  },
  "type": "import"
 },
 "astropy.extern.six._SIX_MIN_VERSION": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "astropy.extern.six._SIX_SEARCH_PATH": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "astropy.extern.six._find_module": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "astropy.extern.six.imp"
   ]
  },
  "type": "function"
 },
 "astropy.extern.six._import_six": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "ValueError",
    "__name__",
    "astropy.extern.six._SIX_MIN_VERSION",
    "astropy.extern.six._SIX_SEARCH_PATH",
    "astropy.extern.six._find_module",
    "astropy.extern.six.imp",
    "distutils.version.StrictVersion"
   ]
  },
  "type": "function"
 },
 "astropy.extern.six.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "astropy.io": {
  "data": {},
  "type": "module"
 },
 "astropy.io.ascii": {
  "data": {},
  "type": "module"
 },
 "astropy.io.ascii.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.ascii.basic": {
  "data": {},
  "type": "module"
 },
 "astropy.io.ascii.basic.Basic": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "astropy.io.ascii.basic.BasicData",
    "astropy.io.ascii.basic.BasicHeader"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.basic.BasicData": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "astropy.io.ascii.basic.BasicHeader": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "astropy.io.ascii.basic.CommentedHeader": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "astropy.io.ascii.basic.Basic",
    "astropy.io.ascii.basic.CommentedHeaderHeader",
    "astropy.io.ascii.basic.NoHeaderData"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.basic.CommentedHeader.read": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "astropy.io.ascii.basic.CommentedHeader",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.basic.CommentedHeader.write_header": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "astropy.io.ascii.basic.CommentedHeaderHeader": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "astropy.io.ascii.basic.BasicHeader"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.basic.CommentedHeaderHeader.process_lines": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "astropy.io.ascii.basic.re"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.basic.CommentedHeaderHeader.write": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "astropy.io.ascii.basic.Csv": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "astropy.io.ascii.basic.Basic",
    "astropy.io.ascii.basic.CsvData",
    "astropy.io.ascii.basic.CsvHeader"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.basic.Csv.inconsistent_handler": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.basic.CsvData": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "astropy.io.ascii.basic.BasicData",
    "astropy.io.ascii.basic.CsvSplitter"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.basic.CsvHeader": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "astropy.io.ascii.basic.BasicHeader",
    "astropy.io.ascii.basic.CsvSplitter"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.basic.CsvSplitter": {
  "data": {
   "lineno": 223
  },
  "type": "class"
 },
 "astropy.io.ascii.basic.NoHeader": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "astropy.io.ascii.basic.Basic",
    "astropy.io.ascii.basic.NoHeaderData",
    "astropy.io.ascii.basic.NoHeaderHeader"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.basic.NoHeaderData": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "astropy.io.ascii.basic.BasicData"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.basic.NoHeaderHeader": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "astropy.io.ascii.basic.BasicHeader"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.basic.Rdb": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "astropy.io.ascii.basic.RdbData",
    "astropy.io.ascii.basic.RdbHeader",
    "astropy.io.ascii.basic.Tab"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.basic.RdbData": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "astropy.io.ascii.basic.TabData"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.basic.RdbHeader": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "astropy.io.ascii.basic.TabHeader"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.basic.RdbHeader.get_cols": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "astropy.io.ascii.basic.re",
    "len",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.basic.RdbHeader.get_type_map_key": {
  "data": {
   "lineno": 315
  },
  "type": "function"
 },
 "astropy.io.ascii.basic.RdbHeader.write": {
  "data": {
   "lineno": 355
  },
  "type": "function"
 },
 "astropy.io.ascii.basic.Tab": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "astropy.io.ascii.basic.Basic",
    "astropy.io.ascii.basic.TabData",
    "astropy.io.ascii.basic.TabHeader"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.basic.TabData": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "astropy.io.ascii.basic.BasicData",
    "astropy.io.ascii.basic.TabDataSplitter"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.basic.TabDataSplitter": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "astropy.io.ascii.basic.TabHeaderSplitter"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.basic.TabHeader": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "astropy.io.ascii.basic.BasicHeader",
    "astropy.io.ascii.basic.TabHeaderSplitter"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.basic.TabHeaderSplitter": {
  "data": {
   "lineno": 177
  },
  "type": "class"
 },
 "astropy.io.ascii.basic.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.ascii.basic.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.ascii.basic.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.ascii.basic.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.io.ascii.cds": {
  "data": {},
  "type": "module"
 },
 "astropy.io.ascii.cds.Cds": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "astropy.io.ascii.cds.CdsData",
    "astropy.io.ascii.cds.CdsHeader"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.cds.Cds.__init__": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "astropy.io.ascii.cds.Cds",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.cds.Cds.read": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "astropy.io.ascii.cds.Cds",
    "astropy.io.ascii.cds.os",
    "len",
    "range",
    "super",
    "suppress"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.cds.Cds.write": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.cds.CdsData": {
  "data": {
   "lineno": 158
  },
  "type": "class"
 },
 "astropy.io.ascii.cds.CdsData.process_lines": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.cds.CdsHeader": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "astropy.io.ascii.cds.CdsHeader.get_cols": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.ascii.cds.fnmatch",
    "astropy.io.ascii.cds.itertools",
    "astropy.io.ascii.cds.re",
    "enumerate",
    "int",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.cds.CdsHeader.get_type_map_key": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.ascii.cds.re"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.cds.__doctest_skip__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "astropy.io.ascii.cds.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.ascii.cds.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.ascii.cds.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "astropy.io.ascii.cds.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "astropy.io.ascii.cds.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.ascii.cds.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.ascii.cds.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.io.ascii.connect": {
  "data": {
   "symbols_in_volume": [
    "Table",
    "astropy.io.ascii.connect.csv_identify",
    "astropy.io.ascii.connect.functools",
    "astropy.io.ascii.connect.io_identify",
    "astropy.io.ascii.connect.read_asciitable",
    "astropy.io.ascii.connect.read_csv",
    "astropy.io.ascii.connect.write_asciitable",
    "astropy.io.ascii.connect.write_csv"
   ]
  },
  "type": "module"
 },
 "astropy.io.ascii.connect.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "astropy.io.ascii.connect._get_connectors_table": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "Table",
    "format",
    "getattr",
    "len",
    "list",
    "max",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.connect.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.ascii.connect.csv_identify": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "astropy.io.ascii.connect.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.ascii.connect.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "astropy.io.ascii.connect.io_identify": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "astropy.io.ascii.connect.io_read": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "astropy.io.ascii.connect.re",
    "format",
    "read"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.connect.io_registry": {
  "data": {
   "shadows": "registry"
  },
  "type": "import"
 },
 "astropy.io.ascii.connect.io_write": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "astropy.io.ascii.connect.re",
    "format",
    "write"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.connect.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.ascii.connect.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.io.ascii.connect.read_asciitable": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "read"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.connect.read_csv": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "read"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.connect.write_asciitable": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "write"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.connect.write_csv": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "write"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core": {
  "data": {
   "symbols_in_volume": [
    "astropy.io.ascii.core.MaskedConstant"
   ]
  },
  "type": "module"
 },
 "astropy.io.ascii.core.AllType": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "astropy.io.ascii.core.FloatType",
    "astropy.io.ascii.core.IntType",
    "astropy.io.ascii.core.StrType"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.core.BaseData": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "astropy.io.ascii.core.DefaultSplitter",
    "astropy.io.ascii.core.masked",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.core.BaseData.__init__": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "astropy.io.ascii.core.copy"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseData._replace_vals": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "astropy.io.ascii.core.masked",
    "enumerate",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseData._set_col_formats": {
  "data": {
   "lineno": 835
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseData._set_fill_values": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "enumerate",
    "hasattr",
    "len",
    "reversed",
    "set",
    "str",
    "suppress"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseData._set_masks": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "astropy.io.ascii.core.numpy",
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseData.get_data_lines": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "astropy.io.ascii.core._get_line_index",
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseData.get_str_vals": {
  "data": {
   "lineno": 731
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseData.masks": {
  "data": {
   "lineno": 736
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseData.process_lines": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "astropy.io.ascii.core.re"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseData.str_vals": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseData.write": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "TypeError",
    "astropy.io.ascii.core.itertools",
    "hasattr",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseHeader": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "astropy.io.ascii.core.DefaultSplitter",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.core.BaseHeader.__init__": {
  "data": {
   "lineno": 536
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseHeader._set_cols_from_names": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "astropy.io.ascii.core.Column"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseHeader.check_column_names": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.ascii.core._is_number",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseHeader.colnames": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "astropy.io.ascii.core.Column",
    "isinstance",
    "property",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseHeader.get_col_type": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "KeyError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseHeader.get_cols": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "StopIteration",
    "ValueError",
    "astropy.io.ascii.core.InconsistentTableError",
    "astropy.io.ascii.core._get_line_index",
    "enumerate",
    "len",
    "next",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseHeader.get_type_map_key": {
  "data": {
   "lineno": 622
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseHeader.process_lines": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "astropy.io.ascii.core.re"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseHeader.update_meta": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "astropy.io.ascii.core.re"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseHeader.write": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "astropy.io.ascii.core.itertools",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseHeader.write_comments": {
  "data": {
   "lineno": 604
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseInputter": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.core.BaseInputter.get_lines": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "TypeError",
    "get_readable_fileobj",
    "hasattr",
    "iter"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseInputter.process_lines": {
  "data": {
   "lineno": 312
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseOutputter": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.core.BaseOutputter._convert_vals": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "IndexError",
    "OverflowError",
    "TypeError",
    "ValueError",
    "astropy.io.ascii.core.convert_numpy",
    "astropy.io.ascii.core.numpy",
    "astropy.io.ascii.core.warnings",
    "converter_func",
    "hasattr",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseOutputter._validate_and_copy": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.io.ascii.core.NoType",
    "issubclass",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseReader": {
  "data": {
   "lineno": 1082,
   "symbols_in_volume": [
    "astropy.io.ascii.core.BaseData",
    "astropy.io.ascii.core.BaseHeader",
    "astropy.io.ascii.core.BaseInputter",
    "astropy.io.ascii.core.MetaBaseReader",
    "astropy.io.ascii.core.TableOutputter",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.core.BaseReader.__init__": {
  "data": {
   "lineno": 1109,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseReader.comment_lines": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.ascii.core.re",
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseReader.inconsistent_handler": {
  "data": {
   "lineno": 1209
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseReader.read": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "TypeError",
    "astropy.io.ascii.core.InconsistentTableError",
    "astropy.io.ascii.core._apply_include_exclude_names",
    "astropy.io.ascii.core.os",
    "enumerate",
    "hasattr",
    "len",
    "suppress"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseReader.update_table_data": {
  "data": {
   "lineno": 1249
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseReader.write": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": [
    "astropy.io.ascii.core._apply_include_exclude_names",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseReader.write_header": {
  "data": {
   "lineno": 1269
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseSplitter": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.core.BaseSplitter.__call__": {
  "data": {
   "lineno": 357
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseSplitter.join": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseSplitter.process_line": {
  "data": {
   "lineno": 348
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BaseSplitter.process_val": {
  "data": {
   "lineno": 353
  },
  "type": "function"
 },
 "astropy.io.ascii.core.BoolType": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "astropy.io.ascii.core.NoType"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.core.Column": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.core.Column.__init__": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "astropy.io.ascii.core.NoType"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.ContinuationLinesInputter": {
  "data": {
   "lineno": 1318,
   "symbols_in_volume": [
    "astropy.io.ascii.core.BaseInputter"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.core.ContinuationLinesInputter.process_lines": {
  "data": {
   "lineno": 1336,
   "symbols_in_volume": [
    "astropy.io.ascii.core.re"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.CsvWriter": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.core.CsvWriter.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "astropy.io.ascii.core.csv"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.CsvWriter._writerow": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "astropy.io.ascii.core.re",
    "writerow_func"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.CsvWriter.writerow": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.CsvWriter.writerows": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.DefaultSplitter": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "astropy.io.ascii.core.BaseSplitter",
    "astropy.io.ascii.core.csv"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.core.DefaultSplitter.__call__": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "astropy.io.ascii.core.csv",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.DefaultSplitter.join": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "astropy.io.ascii.core.CsvWriter",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.DefaultSplitter.process_line": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "astropy.io.ascii.core._replace_tab_with_space"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.FAST_CLASSES": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "astropy.io.ascii.core.FORMAT_CLASSES": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "astropy.io.ascii.core.FastOptionsError": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.core.FloatType": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "astropy.io.ascii.core.NumType"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.core.InconsistentTableError": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.core.IntType": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "astropy.io.ascii.core.NumType"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.core.MaskedConstant": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "astropy.io.ascii.core.numpy"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.core.MaskedConstant.__hash__": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "astropy.io.ascii.core.MetaBaseReader": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.core.MetaBaseReader.__init__": {
  "data": {
   "lineno": 1009,
   "symbols_in_volume": [
    "Table",
    "astropy.io.ascii.core.FAST_CLASSES",
    "astropy.io.ascii.core.FORMAT_CLASSES",
    "astropy.io.ascii.core.MetaBaseReader",
    "astropy.io.ascii.core.functools",
    "format",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.NoType": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.core.NumType": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "astropy.io.ascii.core.NoType"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.core.OptionalTableImportError": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.core.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.io.ascii.core.ParameterError": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.core.StrType": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "astropy.io.ascii.core.NoType"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.core.StringIO": {
  "data": {
   "shadows": "cStringIO"
  },
  "type": "import"
 },
 "astropy.io.ascii.core.TableOutputter": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "astropy.io.ascii.core.BaseOutputter",
    "astropy.io.ascii.core.convert_numpy",
    "astropy.io.ascii.core.numpy"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.core.TableOutputter.__call__": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "Table",
    "any",
    "astropy.io.ascii.core.masked",
    "astropy.io.ascii.core.numpy",
    "getattr",
    "hasattr",
    "setattr",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.WhitespaceSplitter": {
  "data": {
   "lineno": 1354,
   "symbols_in_volume": [
    "astropy.io.ascii.core.DefaultSplitter"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.core.WhitespaceSplitter.process_line": {
  "data": {
   "lineno": 1355
  },
  "type": "function"
 },
 "astropy.io.ascii.core._apply_include_exclude_names": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "list",
    "max",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core._get_line_index": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "hasattr",
    "line_or_func",
    "sum"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core._get_reader": {
  "data": {
   "lineno": 1380,
   "symbols_in_volume": [
    "Inputter",
    "Outputter",
    "Reader",
    "TypeError",
    "ValueError",
    "astropy.io.ascii.core.extra_reader_pars",
    "dict",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core._get_writer": {
  "data": {
   "lineno": 1477,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "Writer",
    "Writer._format_name",
    "astropy.io.ascii.core.FAST_CLASSES",
    "astropy.io.ascii.core.extra_writer_pars",
    "astropy.io.ascii.core.operator",
    "dict",
    "issubclass",
    "suppress"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core._is_number": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "suppress"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core._replace_tab_with_space": {
  "data": {
   "lineno": 472
  },
  "type": "function"
 },
 "astropy.io.ascii.core.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.ascii.core.convert_numpy": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "astropy.io.ascii.core.AllType",
    "astropy.io.ascii.core.BoolType",
    "astropy.io.ascii.core.FloatType",
    "astropy.io.ascii.core.IntType",
    "astropy.io.ascii.core.StrType",
    "astropy.io.ascii.core.numpy"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.convert_numpy.bool_converter": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.ascii.core.numpy",
    "bool",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.convert_numpy.generic_converter": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "astropy.io.ascii.core.numpy"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.core.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "astropy.io.ascii.core.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "astropy.io.ascii.core.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.ascii.core.extra_reader_pars": {
  "data": {
   "lineno": 1372
  },
  "type": "constant"
 },
 "astropy.io.ascii.core.extra_writer_pars": {
  "data": {
   "lineno": 1470
  },
  "type": "constant"
 },
 "astropy.io.ascii.core.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "astropy.io.ascii.core.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "astropy.io.ascii.core.masked": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "astropy.io.ascii.core.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.ascii.core.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "astropy.io.ascii.core.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.ascii.core.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.ascii.core.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.io.ascii.core.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.io.ascii.daophot": {
  "data": {},
  "type": "module"
 },
 "astropy.io.ascii.daophot.Daophot": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "astropy.io.ascii.daophot.DaophotData",
    "astropy.io.ascii.daophot.DaophotHeader",
    "astropy.io.ascii.daophot.DaophotInputter"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.daophot.Daophot.__init__": {
  "data": {
   "lineno": 389
  },
  "type": "function"
 },
 "astropy.io.ascii.daophot.Daophot.write": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.daophot.DaophotData": {
  "data": {
   "lineno": 200
  },
  "type": "class"
 },
 "astropy.io.ascii.daophot.DaophotData.__init__": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "astropy.io.ascii.daophot.DaophotData.get_data_lines": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "float",
    "map",
    "next",
    "str.split",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.daophot.DaophotHeader": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "astropy.io.ascii.daophot.re"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.daophot.DaophotHeader.__init__": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "astropy.io.ascii.daophot.DaophotHeader.extract_keyword_line": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.daophot.DaophotHeader.get_cols": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "any",
    "enumerate",
    "hasattr",
    "map",
    "numpy.cumsum",
    "sum"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.daophot.DaophotHeader.parse_col_defs": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict",
    "get_col_width",
    "int",
    "itertools.repeat",
    "len",
    "list",
    "map",
    "numpy.arange",
    "numpy.fromiter",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.daophot.DaophotHeader.update_meta": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "dict",
    "groupmore",
    "len",
    "map",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.daophot.DaophotInputter": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "astropy.io.ascii.daophot.re"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.daophot.DaophotInputter.process_lines": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ValueError",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.daophot.DaophotInputter.search_multiline": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "first_false_index",
    "first_true_index",
    "numpy.cumsum",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.daophot.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.io.ascii.daophot.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.ascii.daophot.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "astropy.io.ascii.daophot.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.ascii.daophot.itt": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "astropy.io.ascii.daophot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.ascii.daophot.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.ascii.daophot.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.io.ascii.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.ascii.ecsv": {
  "data": {},
  "type": "module"
 },
 "astropy.io.ascii.ecsv.DELIMITERS": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "astropy.io.ascii.ecsv.ECSV_VERSION": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.io.ascii.ecsv.Ecsv": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "astropy.io.ascii.ecsv.EcsvHeader",
    "astropy.io.ascii.ecsv.EcsvOutputter"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.ecsv.Ecsv.update_table_data": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "serialize_context_as"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.ecsv.EcsvHeader": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "astropy.io.ascii.ecsv.EcsvHeader.get_cols": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.io.ascii.ecsv.DELIMITERS",
    "astropy.io.ascii.ecsv.EcsvHeader",
    "astropy.io.ascii.ecsv.re",
    "collections.OrderedDict",
    "list",
    "next",
    "setattr",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.ecsv.EcsvHeader.process_lines": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "astropy.io.ascii.ecsv.re"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.ecsv.EcsvHeader.update_meta": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "astropy.io.ascii.ecsv.EcsvHeader.write": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.ascii.ecsv.DELIMITERS",
    "astropy.io.ascii.ecsv.ECSV_VERSION",
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.ecsv.EcsvHeader.write_comments": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "astropy.io.ascii.ecsv.EcsvOutputter": {
  "data": {
   "lineno": 174
  },
  "type": "class"
 },
 "astropy.io.ascii.ecsv.EcsvOutputter.__call__": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "astropy.io.ascii.ecsv.EcsvOutputter",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.ecsv.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.io.ascii.ecsv.__doctest_requires__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "astropy.io.ascii.ecsv.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "astropy.io.ascii.ecsv.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.io.ascii.fastbasic": {
  "data": {},
  "type": "module"
 },
 "astropy.io.ascii.fastbasic.FastBasic": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.fastbasic.FastBasic.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.fastbasic.FastBasic._read_header": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "astropy.io.ascii.fastbasic.FastBasic._write": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "astropy.io.ascii.fastbasic.FastBasic.check_header": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.fastbasic.FastBasic.read": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "Table",
    "collections.OrderedDict",
    "isinstance",
    "len",
    "list",
    "set_locale"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.fastbasic.FastBasic.write": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "astropy.io.ascii.fastbasic.FastCommentedHeader": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "astropy.io.ascii.fastbasic.FastBasic"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.fastbasic.FastCommentedHeader.__init__": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "astropy.io.ascii.fastbasic.FastCommentedHeader",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.fastbasic.FastCommentedHeader._read_header": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.fastbasic.FastCommentedHeader.read": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "astropy.io.ascii.fastbasic.FastCommentedHeader",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.fastbasic.FastCommentedHeader.write": {
  "data": {
   "lineno": 270
  },
  "type": "function"
 },
 "astropy.io.ascii.fastbasic.FastCsv": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "astropy.io.ascii.fastbasic.FastBasic"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.fastbasic.FastCsv.__init__": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "astropy.io.ascii.fastbasic.FastCsv",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.fastbasic.FastCsv.write": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "astropy.io.ascii.fastbasic.FastNoHeader": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "astropy.io.ascii.fastbasic.FastBasic"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.fastbasic.FastNoHeader.__init__": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "astropy.io.ascii.fastbasic.FastNoHeader",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.fastbasic.FastNoHeader.write": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "astropy.io.ascii.fastbasic.FastRdb": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "astropy.io.ascii.fastbasic.FastBasic"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.fastbasic.FastRdb.__init__": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "astropy.io.ascii.fastbasic.FastRdb",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.fastbasic.FastRdb._read_header": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "astropy.io.ascii.fastbasic.re",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.fastbasic.FastRdb.write": {
  "data": {
   "lineno": 341
  },
  "type": "function"
 },
 "astropy.io.ascii.fastbasic.FastTab": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "astropy.io.ascii.fastbasic.FastBasic"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.fastbasic.FastTab.__init__": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "astropy.io.ascii.fastbasic.FastTab",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.fastbasic.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.io.ascii.fastbasic.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.io.ascii.fixedwidth": {
  "data": {},
  "type": "module"
 },
 "astropy.io.ascii.fixedwidth.FixedWidth": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "astropy.io.ascii.fixedwidth.FixedWidthData",
    "astropy.io.ascii.fixedwidth.FixedWidthHeader"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.fixedwidth.FixedWidth.__init__": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "astropy.io.ascii.fixedwidth.FixedWidth",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.fixedwidth.FixedWidthData": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "astropy.io.ascii.fixedwidth.FixedWidthSplitter"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.fixedwidth.FixedWidthData.write": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "max",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.fixedwidth.FixedWidthHeader": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "astropy.io.ascii.fixedwidth.FixedWidthHeaderSplitter",
    "set"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.fixedwidth.FixedWidthHeader.get_cols": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "InconsistentTableError",
    "ValueError",
    "enumerate",
    "len",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.fixedwidth.FixedWidthHeader.get_fixedwidth_params": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "InconsistentTableError",
    "ValueError",
    "len",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.fixedwidth.FixedWidthHeader.get_line": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "InconsistentTableError",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.fixedwidth.FixedWidthHeader.write": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "astropy.io.ascii.fixedwidth.FixedWidthHeaderSplitter": {
  "data": {
   "lineno": 62
  },
  "type": "class"
 },
 "astropy.io.ascii.fixedwidth.FixedWidthNoHeader": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "astropy.io.ascii.fixedwidth.FixedWidth",
    "astropy.io.ascii.fixedwidth.FixedWidthNoHeaderData",
    "astropy.io.ascii.fixedwidth.FixedWidthNoHeaderHeader"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.fixedwidth.FixedWidthNoHeader.__init__": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "astropy.io.ascii.fixedwidth.FixedWidthNoHeader",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.fixedwidth.FixedWidthNoHeaderData": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "astropy.io.ascii.fixedwidth.FixedWidthData"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.fixedwidth.FixedWidthNoHeaderHeader": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "astropy.io.ascii.fixedwidth.FixedWidthHeader"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.fixedwidth.FixedWidthSplitter": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "astropy.io.ascii.fixedwidth.FixedWidthSplitter.__call__": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "astropy.io.ascii.fixedwidth.FixedWidthSplitter.join": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.fixedwidth.FixedWidthTwoLine": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "astropy.io.ascii.fixedwidth.FixedWidth",
    "astropy.io.ascii.fixedwidth.FixedWidthTwoLineData",
    "astropy.io.ascii.fixedwidth.FixedWidthTwoLineHeader"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.fixedwidth.FixedWidthTwoLine.__init__": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "astropy.io.ascii.fixedwidth.FixedWidthTwoLine",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.fixedwidth.FixedWidthTwoLineData": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "astropy.io.ascii.fixedwidth.FixedWidthData",
    "astropy.io.ascii.fixedwidth.FixedWidthTwoLineDataSplitter"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.fixedwidth.FixedWidthTwoLineDataSplitter": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "astropy.io.ascii.fixedwidth.FixedWidthSplitter"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.fixedwidth.FixedWidthTwoLineHeader": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "astropy.io.ascii.fixedwidth.FixedWidthHeader"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.fixedwidth.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.ascii.fixedwidth.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.ascii.fixedwidth.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.ascii.html": {
  "data": {},
  "type": "module"
 },
 "astropy.io.ascii.html.BeautifulSoup": {
  "data": {
   "shadows": "bs4.BeautifulSoup"
  },
  "type": "import"
 },
 "astropy.io.ascii.html.HTML": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "astropy.io.ascii.html.HTMLData",
    "astropy.io.ascii.html.HTMLHeader",
    "astropy.io.ascii.html.HTMLInputter"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.html.HTML.__init__": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "astropy.io.ascii.html.HTML",
    "copy.deepcopy",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.html.HTML.fill_values": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "enumerate",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.html.HTML.read": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "astropy.io.ascii.html.HTML",
    "astropy.io.ascii.html.HTMLOutputter",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.html.HTML.write": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "Column",
    "astropy.io.ascii.html.ListWriter",
    "isinstance",
    "len",
    "list",
    "range",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.html.HTMLData": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "astropy.io.ascii.html.HTMLSplitter"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.html.HTMLData.end_line": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "TypeError",
    "astropy.io.ascii.html.SoupString",
    "enumerate",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.html.HTMLData.start_line": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "TypeError",
    "astropy.io.ascii.html.SoupString",
    "enumerate",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.html.HTMLHeader": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "astropy.io.ascii.html.HTMLSplitter"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.html.HTMLHeader._set_cols_from_names": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.html.HTMLHeader.start_line": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "TypeError",
    "astropy.io.ascii.html.SoupString",
    "enumerate",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.html.HTMLInputter": {
  "data": {
   "lineno": 72
  },
  "type": "class"
 },
 "astropy.io.ascii.html.HTMLInputter.process_lines": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ImportError",
    "astropy.io.ascii.html.SoupString",
    "astropy.io.ascii.html.identify_table",
    "astropy.io.ascii.html.warnings",
    "bs4.BeautifulSoup",
    "enumerate",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.html.HTMLOutputter": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "astropy.io.ascii.html.numpy"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.html.HTMLOutputter.__call__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "astropy.io.ascii.html.HTMLOutputter",
    "hasattr",
    "len",
    "list",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.html.HTMLSplitter": {
  "data": {
   "lineno": 118
  },
  "type": "class"
 },
 "astropy.io.ascii.html.HTMLSplitter.__call__": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "TypeError",
    "astropy.io.ascii.html.SoupString",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.html.ListWriter": {
  "data": {
   "lineno": 38
  },
  "type": "class"
 },
 "astropy.io.ascii.html.ListWriter.__init__": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "astropy.io.ascii.html.ListWriter.write": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "astropy.io.ascii.html.SoupString": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.html.SoupString.__init__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "astropy.io.ascii.html.SoupString.__new__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "str.__new__"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.html.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.ascii.html.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "astropy.io.ascii.html.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.ascii.html.identify_table": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.html.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.ascii.html.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.ascii.html.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.io.ascii.ipac": {
  "data": {},
  "type": "module"
 },
 "astropy.io.ascii.ipac.Ipac": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "astropy.io.ascii.ipac.IpacData",
    "astropy.io.ascii.ipac.IpacHeader"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.ipac.Ipac.__init__": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.ascii.ipac.Ipac",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.ipac.Ipac.write": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "TypeError",
    "any",
    "enumerate",
    "len",
    "list",
    "max",
    "str",
    "textwrap.wrap",
    "warnings.warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.ipac.IpacData": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "astropy.io.ascii.ipac.IpacDataSplitter"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.ipac.IpacData.write": {
  "data": {
   "lineno": 317
  },
  "type": "function"
 },
 "astropy.io.ascii.ipac.IpacDataSplitter": {
  "data": {
   "lineno": 304
  },
  "type": "class"
 },
 "astropy.io.ascii.ipac.IpacFormatError": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.ipac.IpacFormatError.__str__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "Exception",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.ipac.IpacFormatErrorDBMS": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.ipac.IpacFormatErrorDBMS.__str__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "Exception",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.ipac.IpacHeader": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "astropy.io.ascii.ipac.IpacHeaderSplitter"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.ipac.IpacHeader.get_col_type": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.ipac.IpacHeader.get_cols": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "issubclass",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.ipac.IpacHeader.process_lines": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "astropy.io.ascii.ipac.IpacHeader.str_vals": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "Exception",
    "IpacFormatE",
    "astropy.io.ascii.ipac.IpacFormatError",
    "astropy.io.ascii.ipac.IpacFormatErrorDBMS",
    "astropy.io.ascii.ipac.re",
    "collections.defaultdict",
    "format_func",
    "get_auto_format_func",
    "id",
    "int",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.ipac.IpacHeader.update_meta": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "astropy.io.ascii.ipac.re",
    "collections.OrderedDict",
    "isinstance",
    "process_keyword_value"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.ipac.IpacHeader.update_meta.process_keyword_value": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "Exception",
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.ipac.IpacHeader.write": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "astropy.io.ascii.ipac.IpacHeaderSplitter": {
  "data": {
   "lineno": 42
  },
  "type": "class"
 },
 "astropy.io.ascii.ipac.IpacHeaderSplitter.join": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.ipac.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.io.ascii.ipac.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.ascii.ipac.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "astropy.io.ascii.ipac.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.ascii.ipac.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.ascii.ipac.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.io.ascii.ipac.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "astropy.io.ascii.ipac.wrap": {
  "data": {
   "shadows": "textwrap.wrap"
  },
  "type": "import"
 },
 "astropy.io.ascii.latex": {
  "data": {
   "symbols_in_volume": [
    "astropy.io.ascii.latex.re"
   ]
  },
  "type": "module"
 },
 "astropy.io.ascii.latex.AASTex": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "astropy.io.ascii.latex.AASTexData",
    "astropy.io.ascii.latex.AASTexHeader",
    "astropy.io.ascii.latex.Latex"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.latex.AASTex.__init__": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "astropy.io.ascii.latex.AASTex",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.latex.AASTexData": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "astropy.io.ascii.latex.LatexData"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.latex.AASTexData.start_line": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "astropy.io.ascii.latex.find_latex_line"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.latex.AASTexData.write": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "astropy.io.ascii.latex.add_dictval_to_list",
    "astropy.io.ascii.latex.re",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.latex.AASTexHeader": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "astropy.io.ascii.latex.AASTexHeaderSplitter",
    "astropy.io.ascii.latex.LatexHeader"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.latex.AASTexHeader.start_line": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "astropy.io.ascii.latex.find_latex_line"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.latex.AASTexHeader.write": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "astropy.io.ascii.latex.add_dictval_to_list",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.latex.AASTexHeaderSplitter": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "astropy.io.ascii.latex.LatexSplitter"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.latex.AASTexHeaderSplitter.__call__": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "astropy.io.ascii.latex.LatexSplitter",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.latex.AASTexHeaderSplitter.join": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.latex.AASTexHeaderSplitter.process_line": {
  "data": {
   "lineno": 345
  },
  "type": "function"
 },
 "astropy.io.ascii.latex.Latex": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "astropy.io.ascii.latex.LatexData",
    "astropy.io.ascii.latex.LatexHeader"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.latex.Latex.__init__": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "astropy.io.ascii.latex.Latex",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.latex.Latex.write": {
  "data": {
   "lineno": 328
  },
  "type": "function"
 },
 "astropy.io.ascii.latex.LatexData": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "astropy.io.ascii.latex.LatexSplitter"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.latex.LatexData.end_line": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "astropy.io.ascii.latex.find_latex_line"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.latex.LatexData.start_line": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "astropy.io.ascii.latex.find_latex_line"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.latex.LatexData.write": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "astropy.io.ascii.latex.add_dictval_to_list"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.latex.LatexHeader": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "astropy.io.ascii.latex.LatexSplitter"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.latex.LatexHeader._get_units": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "AttributeError",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.latex.LatexHeader.start_line": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "astropy.io.ascii.latex.find_latex_line"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.latex.LatexHeader.write": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "astropy.io.ascii.latex.add_dictval_to_list",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.latex.LatexSplitter": {
  "data": {
   "lineno": 81
  },
  "type": "class"
 },
 "astropy.io.ascii.latex.LatexSplitter.__call__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "astropy.io.ascii.latex.LatexSplitter",
    "astropy.io.ascii.latex.RE_COMMENT",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.latex.LatexSplitter.join": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "astropy.io.ascii.latex.LatexSplitter.process_line": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "astropy.io.ascii.latex.RE_COMMENT"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.latex.LatexSplitter.process_val": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "astropy.io.ascii.latex.RE_COMMENT": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "astropy.io.ascii.latex.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.ascii.latex.add_dictval_to_list": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.latex.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.ascii.latex.find_latex_line": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "astropy.io.ascii.latex.re",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.latex.latexdicts": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.io.ascii.latex.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.ascii.latex.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.io.ascii.misc": {
  "data": {},
  "type": "module"
 },
 "astropy.io.ascii.misc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.ascii.misc.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "astropy.io.ascii.misc.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.ascii.misc.first_false_index": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "astropy.io.ascii.misc.first_true_index",
    "astropy.io.ascii.misc.operator",
    "pred"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.misc.first_true_index": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "astropy.io.ascii.misc.operator",
    "enumerate",
    "filter",
    "next",
    "pred"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.misc.groupmore": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "astropy.io.ascii.misc.itertools",
    "astropy.io.ascii.misc.sortmore",
    "func",
    "key",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.misc.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "astropy.io.ascii.misc.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "astropy.io.ascii.misc.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.ascii.misc.sortmore": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "astropy.io.ascii.misc.collections",
    "f",
    "globalkey",
    "isinstance",
    "key",
    "len",
    "list",
    "map",
    "reversed",
    "sorted",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.ascii.rst": {
  "data": {},
  "type": "module"
 },
 "astropy.io.ascii.rst.RST": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "astropy.io.ascii.rst.SimpleRSTData",
    "astropy.io.ascii.rst.SimpleRSTHeader"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.rst.RST.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "astropy.io.ascii.rst.RST",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.rst.RST.write": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "astropy.io.ascii.rst.RST",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.rst.SimpleRSTData": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "astropy.io.ascii.rst.SimpleRSTHeader": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "astropy.io.ascii.rst.SimpleRSTHeader.get_fixedwidth_params": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "astropy.io.ascii.rst.SimpleRSTHeader",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.rst.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.ascii.rst.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.ascii.rst.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.ascii.setup_package": {
  "data": {
   "symbols_in_volume": [
    "astropy.io.ascii.setup_package.os"
   ]
  },
  "type": "module"
 },
 "astropy.io.ascii.setup_package.Extension": {
  "data": {
   "shadows": "distutils.extension.Extension"
  },
  "type": "import"
 },
 "astropy.io.ascii.setup_package.ROOT": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "astropy.io.ascii.setup_package.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.ascii.setup_package.get_extensions": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "astropy.io.ascii.setup_package.ROOT",
    "astropy.io.ascii.setup_package.os",
    "distutils.extension.Extension"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.setup_package.get_package_data": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "astropy.io.ascii.setup_package.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.ascii.setup_package.requires_2to3": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "astropy.io.ascii.sextractor": {
  "data": {},
  "type": "module"
 },
 "astropy.io.ascii.sextractor.SExtractor": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "astropy.io.ascii.sextractor.SExtractorData",
    "astropy.io.ascii.sextractor.SExtractorHeader"
   ]
  },
  "type": "class"
 },
 "astropy.io.ascii.sextractor.SExtractor.read": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "astropy.io.ascii.sextractor.SExtractor",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.sextractor.SExtractor.write": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.sextractor.SExtractorData": {
  "data": {
   "lineno": 101
  },
  "type": "class"
 },
 "astropy.io.ascii.sextractor.SExtractorHeader": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "astropy.io.ascii.sextractor.SExtractorHeader.get_cols": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "astropy.io.ascii.sextractor.re",
    "int",
    "len",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.sextractor.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.ascii.sextractor.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.ascii.sextractor.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.ascii.sextractor.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.io.ascii.tests.common": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.io.ascii.tests.common.os",
    "print"
   ]
  },
  "type": "module"
 },
 "astropy.io.ascii.tests.common.CWD": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.common.TEST_DIR": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.common.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.common.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.common.assert_almost_equal": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.common.assert_equal": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.common.assert_true": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.common.has_isnan": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.common.isnan": {
  "data": {
   "shadows": "numpy.isnan"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.common.make_decorator": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.common.make_decorator.decorate": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.common.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.common.raises": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.common.raises.decorate": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "astropy.io.ascii.tests.common.make_decorator",
    "func"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.common.raises.decorate.newfunc": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "AssertionError",
    "func"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.common.setup_function": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "astropy.io.ascii.tests.common.TEST_DIR",
    "astropy.io.ascii.tests.common.os"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.common.teardown_function": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "astropy.io.ascii.tests.common.CWD",
    "astropy.io.ascii.tests.common.os"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.io.ascii.tests.test_c_reader.os",
    "cStringIO.StringIO",
    "io.BytesIO"
   ]
  },
  "type": "module"
 },
 "astropy.io.ascii.tests.test_c_reader.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_c_reader.StringIO": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_c_reader.TRAVIS": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_c_reader._filename_counter": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_c_reader._read": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "Reader",
    "ascii.read",
    "astropy.io.ascii.tests.test_c_reader.TRAVIS",
    "astropy.io.ascii.tests.test_c_reader._filename_counter",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.os",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "cStringIO.StringIO",
    "format",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.assert_table_equal": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "assert_almost_equal",
    "assert_equal",
    "assert_true",
    "enumerate",
    "isinstance",
    "len",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_c_reader.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_c_reader.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_c_reader.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_c_reader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_c_reader.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_c_reader.read_basic": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "astropy.io.ascii.tests.test_c_reader._read",
    "astropy.io.ascii.tests.test_c_reader.functools",
    "astropy.io.ascii.tests.test_c_reader.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.read_commented_header": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "astropy.io.ascii.tests.test_c_reader._read",
    "astropy.io.ascii.tests.test_c_reader.functools",
    "astropy.io.ascii.tests.test_c_reader.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.read_csv": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "astropy.io.ascii.tests.test_c_reader._read",
    "astropy.io.ascii.tests.test_c_reader.functools",
    "astropy.io.ascii.tests.test_c_reader.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.read_no_header": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "astropy.io.ascii.tests.test_c_reader._read",
    "astropy.io.ascii.tests.test_c_reader.functools",
    "astropy.io.ascii.tests.test_c_reader.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.read_rdb": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "astropy.io.ascii.tests.test_c_reader._read",
    "astropy.io.ascii.tests.test_c_reader.functools",
    "astropy.io.ascii.tests.test_c_reader.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.read_tab": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "astropy.io.ascii.tests.test_c_reader._read",
    "astropy.io.ascii.tests.test_c_reader.functools",
    "astropy.io.ascii.tests.test_c_reader.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_comment": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "Table",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_basic"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_commented_header": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "Table",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_commented_header"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_conversion": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "assert_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_basic"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_csv_comment_default": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "Table",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_csv"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_data_end": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "Table",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_basic",
    "astropy.io.ascii.tests.test_c_reader.read_rdb"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_data_out_of_range": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": [
    "ascii.read",
    "assert_almost_equal",
    "astropy.io.ascii.tests.test_c_reader.TRAVIS",
    "astropy.io.ascii.tests.test_c_reader.os",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "cStringIO.StringIO",
    "numpy.array",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_data_start": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "Table",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_basic",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_default_data_start": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "Table",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_basic"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_delimiter": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "Table",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_basic"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_empty_lines": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "Table",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_basic"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_empty_quotes": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "Table",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_basic"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_exclude_names": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "Table",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_basic"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_fast_reader": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "NotImplementedError",
    "ascii.read",
    "astropy.io.ascii.tests.test_c_reader.os",
    "astropy.io.ascii.tests.test_c_reader.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_fast_tab_with_names": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_tab",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_fill_include_exclude_names": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_csv",
    "numpy.ma.masked"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_fill_values": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "assert_almost_equal",
    "assert_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_basic",
    "isinstance",
    "numpy.isnan",
    "numpy.ma.masked"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_fortran_invalid_exp": {
  "data": {
   "lineno": 1104,
   "symbols_in_volume": [
    "ascii.read",
    "astropy.io.ascii.tests.test_c_reader.TRAVIS",
    "astropy.io.ascii.tests.test_c_reader.os",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "cStringIO.StringIO"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_fortran_reader": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "Table",
    "ascii.read",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.os",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_include_exclude_names": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "Table",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_basic"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_include_names": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "Table",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_basic"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_inf_nan": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "Table",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_basic",
    "numpy.inf",
    "numpy.nan",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_int_out_of_range": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": [
    "Table",
    "ascii.read",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.os",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "numpy.iinfo",
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_invalid_parameters": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "FastBasic",
    "TypeError",
    "ascii.ContinuationLinesInputter",
    "ascii.DefaultSplitter",
    "ascii.TableOutputter",
    "ascii.convert_numpy",
    "ascii.read",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "dict",
    "numpy.uint",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_line_endings": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "Table",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_basic",
    "astropy.io.ascii.tests.test_c_reader.read_commented_header",
    "astropy.io.ascii.tests.test_c_reader.read_rdb",
    "numpy.all",
    "numpy.ma.masked"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_lstrip_whitespace": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "Table",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_basic"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_many_columns": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "Table",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_basic",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_many_rows": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "Table",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_basic",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_no_data": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "Table",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_basic"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_no_header": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "Table",
    "ValueError",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_basic",
    "astropy.io.ascii.tests.test_c_reader.read_no_header"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_no_header_supplied_names": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "Table",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_no_header"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_not_enough_cols": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "FastBasic",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_csv",
    "numpy.ma.masked"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_quoted_empty_values": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_basic",
    "numpy.ma.masked"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_quoted_fields": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "Table",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_basic"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_rdb": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "Table",
    "ValueError",
    "assert_equal",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_rdb",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_read_big_table": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "Table",
    "Table.read",
    "astropy.io.ascii.tests.test_c_reader.os",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "len",
    "numpy.random.random",
    "open",
    "print",
    "range",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_read_tab": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "assert_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_tab",
    "numpy.ma.masked"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_read_types": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ascii.read",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "cStringIO.StringIO"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_rstrip_whitespace": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "Table",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_basic"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_simple_data": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "Table",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_basic"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_store_comments": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "assert_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_basic"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_strip_line_trailing_whitespace": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "Table",
    "ascii.read",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_basic",
    "cStringIO.StringIO",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_supplied_names": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "Table",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_basic"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_too_many_cols1": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "FastBasic",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_too_many_cols2": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "FastCsv",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_too_many_cols3": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "FastCsv",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_c_reader.test_whitespace_before_comment": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "Table",
    "astropy.io.ascii.tests.test_c_reader.assert_table_equal",
    "astropy.io.ascii.tests.test_c_reader.pytest",
    "astropy.io.ascii.tests.test_c_reader.read_tab"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_cds_header_from_readme": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "astropy.io.ascii.tests.test_cds_header_from_readme.test_description",
    "astropy.io.ascii.tests.test_cds_header_from_readme.test_glob_header",
    "astropy.io.ascii.tests.test_cds_header_from_readme.test_header_from_readme",
    "astropy.io.ascii.tests.test_cds_header_from_readme.test_multi_header"
   ]
  },
  "type": "module"
 },
 "astropy.io.ascii.tests.test_cds_header_from_readme.read_table1": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ascii.Cds"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_cds_header_from_readme.read_table2": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ascii.Cds",
    "ascii.TableOutputter",
    "ascii.get_reader"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_cds_header_from_readme.read_table3": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ascii.read"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_cds_header_from_readme.test_description": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "assert_equal",
    "astropy.io.ascii.tests.test_cds_header_from_readme.read_table1",
    "astropy.io.ascii.tests.test_cds_header_from_readme.read_table2",
    "astropy.io.ascii.tests.test_cds_header_from_readme.read_table3",
    "len",
    "read_table"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_cds_header_from_readme.test_glob_header": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "assert_equal",
    "astropy.io.ascii.tests.test_cds_header_from_readme.read_table1",
    "astropy.io.ascii.tests.test_cds_header_from_readme.read_table2",
    "astropy.io.ascii.tests.test_cds_header_from_readme.read_table3",
    "len",
    "read_table"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_cds_header_from_readme.test_header_from_readme": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ascii.Cds",
    "enumerate",
    "isnan",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_cds_header_from_readme.test_multi_header": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "assert_almost_equal",
    "assert_equal",
    "astropy.io.ascii.tests.test_cds_header_from_readme.read_table1",
    "astropy.io.ascii.tests.test_cds_header_from_readme.read_table2",
    "astropy.io.ascii.tests.test_cds_header_from_readme.read_table3",
    "len",
    "read_table"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_compressed": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.io.ascii.tests.test_compressed.os",
    "astropy.io.ascii.tests.test_compressed.sys"
   ]
  },
  "type": "module"
 },
 "astropy.io.ascii.tests.test_compressed.HAS_BZ2": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_compressed.HAS_XZ": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_compressed.ROOT": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_compressed.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_compressed.lzma": {
  "data": {
   "shadows": "backports.lzma"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_compressed.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_compressed.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_compressed.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_compressed.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_compressed.test_bzip2": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "astropy.io.ascii.tests.test_compressed.ROOT",
    "astropy.io.ascii.tests.test_compressed.os",
    "astropy.io.ascii.tests.test_compressed.pytest",
    "numpy.all",
    "read"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_compressed.test_gzip": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "astropy.io.ascii.tests.test_compressed.ROOT",
    "astropy.io.ascii.tests.test_compressed.os",
    "astropy.io.ascii.tests.test_compressed.pytest",
    "numpy.all",
    "read"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_compressed.test_xz": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "astropy.io.ascii.tests.test_compressed.ROOT",
    "astropy.io.ascii.tests.test_compressed.os",
    "astropy.io.ascii.tests.test_compressed.pytest",
    "numpy.all",
    "read"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_connect": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.io.ascii.tests.test_connect.HAS_BEAUTIFUL_SOUP",
    "astropy.io.ascii.tests.test_connect.files",
    "astropy.io.ascii.tests.test_connect.os"
   ]
  },
  "type": "module"
 },
 "astropy.io.ascii.tests.test_connect.BeautifulSoup": {
  "data": {
   "shadows": "bs4.BeautifulSoup"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_connect.HAS_BEAUTIFUL_SOUP": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_connect.ROOT": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_connect.files": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_connect.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_connect.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_connect.test_read_cds": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "Table.read",
    "astropy.io.ascii.tests.test_connect.ROOT",
    "astropy.io.ascii.tests.test_connect.os"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_connect.test_read_csv": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "Table.read",
    "astropy.io.ascii.tests.test_connect.ROOT",
    "astropy.io.ascii.tests.test_connect.os"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_connect.test_read_dapphot": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "Table.read",
    "astropy.io.ascii.tests.test_connect.ROOT",
    "astropy.io.ascii.tests.test_connect.os"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_connect.test_read_generic": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "astropy.io.ascii.tests.test_connect.ROOT",
    "astropy.io.ascii.tests.test_connect.files",
    "astropy.io.ascii.tests.test_connect.os",
    "astropy.io.ascii.tests.test_connect.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_connect.test_read_html": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "Table.read",
    "astropy.io.ascii.tests.test_connect.ROOT",
    "astropy.io.ascii.tests.test_connect.os",
    "astropy.io.ascii.tests.test_connect.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_connect.test_read_html_noformat": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "Table.read",
    "astropy.io.ascii.tests.test_connect.ROOT",
    "astropy.io.ascii.tests.test_connect.os",
    "astropy.io.ascii.tests.test_connect.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_connect.test_read_ipac": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "Table.read",
    "astropy.io.ascii.tests.test_connect.ROOT",
    "astropy.io.ascii.tests.test_connect.os"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_connect.test_read_latex": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "Table.read",
    "astropy.io.ascii.tests.test_connect.ROOT",
    "astropy.io.ascii.tests.test_connect.os"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_connect.test_read_latex_noformat": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "Table.read",
    "astropy.io.ascii.tests.test_connect.ROOT",
    "astropy.io.ascii.tests.test_connect.os"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_connect.test_read_rdb": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "Table.read",
    "astropy.io.ascii.tests.test_connect.ROOT",
    "astropy.io.ascii.tests.test_connect.os"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_connect.test_read_rdb_noformat": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "Table.read",
    "astropy.io.ascii.tests.test_connect.ROOT",
    "astropy.io.ascii.tests.test_connect.os"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_connect.test_write_csv": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "Column",
    "Table",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_connect.test_write_generic": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "Column",
    "Table",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_connect.test_write_html": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "Column",
    "Table",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_connect.test_write_html_noformat": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "Column",
    "Table",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_connect.test_write_latex": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "Column",
    "Table",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_connect.test_write_latex_noformat": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "Column",
    "Table",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_connect.test_write_rdb": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "Column",
    "Table",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_connect.test_write_rdb_noformat": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "Column",
    "Table",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ecsv": {
  "data": {
   "symbols_in_volume": [
    "Angle",
    "Column",
    "EarthLocation",
    "ImportError",
    "Latitude",
    "Longitude",
    "SkyCoord",
    "Table",
    "Time",
    "TimeDelta",
    "astropy.io.ascii.tests.test_ecsv.DTYPES",
    "astropy.io.ascii.tests.test_ecsv.T_DTYPES",
    "astropy.io.ascii.tests.test_ecsv.c",
    "astropy.io.ascii.tests.test_ecsv.data",
    "astropy.io.ascii.tests.test_ecsv.el",
    "astropy.io.ascii.tests.test_ecsv.os",
    "astropy.io.ascii.tests.test_ecsv.sc",
    "astropy.io.ascii.tests.test_ecsv.scc",
    "astropy.io.ascii.tests.test_ecsv.sys",
    "astropy.io.ascii.tests.test_ecsv.time_attrs",
    "astropy.io.ascii.tests.test_ecsv.tm",
    "astropy.io.ascii.tests.test_ecsv.tm2",
    "astropy.io.ascii.tests.test_ecsv.tm3",
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "astropy.io.ascii.tests.test_ecsv.DTYPES": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_ecsv.HAS_YAML": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_ecsv.SIMPLE_LINES": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_ecsv.T_DTYPES": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_ecsv.assert_objects_equal": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "isinstance",
    "numpy.all",
    "numpy.ndarray",
    "quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ecsv.c": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_ecsv.compare_attrs": {
  "data": {
   "lineno": 286
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_ecsv.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_ecsv.data": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_ecsv.el": {
  "data": {
   "lineno": 256
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_ecsv.mixin_cols": {
  "data": {
   "lineno": 267
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_ecsv.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_ecsv.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_ecsv.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_ecsv.sc": {
  "data": {
   "lineno": 257
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_ecsv.scc": {
  "data": {
   "lineno": 259
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_ecsv.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_ecsv.test_bad_delimiter": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "StringIO",
    "ValueError",
    "astropy.io.ascii.tests.test_ecsv.T_DTYPES",
    "astropy.io.ascii.tests.test_ecsv.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ecsv.test_bad_delimiter_input": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "Table.read",
    "ValueError",
    "astropy.io.ascii.tests.test_ecsv.SIMPLE_LINES",
    "astropy.io.ascii.tests.test_ecsv.copy",
    "astropy.io.ascii.tests.test_ecsv.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ecsv.test_bad_header_start": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "Table.read",
    "ascii.InconsistentTableError",
    "astropy.io.ascii.tests.test_ecsv.SIMPLE_LINES",
    "astropy.io.ascii.tests.test_ecsv.copy",
    "astropy.io.ascii.tests.test_ecsv.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ecsv.test_csv_ecsv_colnames_mismatch": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "ValueError",
    "ascii.read",
    "astropy.io.ascii.tests.test_ecsv.SIMPLE_LINES",
    "astropy.io.ascii.tests.test_ecsv.copy",
    "astropy.io.ascii.tests.test_ecsv.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ecsv.test_ecsv_mixins_as_one": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "QTable",
    "StringIO",
    "Table",
    "astropy.io.ascii.tests.test_ecsv.mixin_cols",
    "astropy.io.ascii.tests.test_ecsv.pytest",
    "sorted",
    "table_cls",
    "table_cls.read"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ecsv.test_ecsv_mixins_ascii_read_class": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "QTable",
    "StringIO",
    "Table",
    "ascii.read",
    "astropy.io.ascii.tests.test_ecsv.mixin_cols",
    "astropy.io.ascii.tests.test_ecsv.pytest",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ecsv.test_ecsv_mixins_per_column": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "QTable",
    "StringIO",
    "Table",
    "astropy.io.ascii.tests.test_ecsv.assert_objects_equal",
    "astropy.io.ascii.tests.test_ecsv.c",
    "astropy.io.ascii.tests.test_ecsv.compare_attrs",
    "astropy.io.ascii.tests.test_ecsv.mixin_cols",
    "astropy.io.ascii.tests.test_ecsv.pytest",
    "isinstance",
    "list",
    "numpy.ndarray",
    "table_cls",
    "table_cls.read"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ecsv.test_ecsv_mixins_qtable_to_table": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "Column",
    "QTable",
    "StringIO",
    "Table.read",
    "astropy.io.ascii.tests.test_ecsv.assert_objects_equal",
    "astropy.io.ascii.tests.test_ecsv.compare_attrs",
    "astropy.io.ascii.tests.test_ecsv.mixin_cols",
    "astropy.io.ascii.tests.test_ecsv.pytest",
    "isinstance",
    "sorted",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ecsv.test_multidim_input": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "StringIO",
    "Table",
    "ValueError",
    "astropy.io.ascii.tests.test_ecsv.pytest",
    "numpy.arange",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ecsv.test_regression_5604": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "StringIO",
    "Table",
    "astropy.io.ascii.tests.test_ecsv.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ecsv.test_round_trip_empty_table": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "StringIO",
    "Table",
    "Table.read",
    "astropy.io.ascii.tests.test_ecsv.pytest",
    "bool",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ecsv.test_write_full": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "StringIO",
    "astropy.io.ascii.tests.test_ecsv.T_DTYPES",
    "astropy.io.ascii.tests.test_ecsv.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ecsv.test_write_read_roundtrip": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "StringIO",
    "Table.read",
    "ascii.read",
    "astropy.io.ascii.tests.test_ecsv.T_DTYPES",
    "astropy.io.ascii.tests.test_ecsv.pytest",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ecsv.test_write_simple": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "StringIO",
    "astropy.io.ascii.tests.test_ecsv.SIMPLE_LINES",
    "astropy.io.ascii.tests.test_ecsv.pytest",
    "simple_table"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ecsv.time_attrs": {
  "data": {
   "lineno": 284
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_ecsv.tm": {
  "data": {
   "lineno": 261
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_ecsv.tm2": {
  "data": {
   "lineno": 262
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_ecsv.tm3": {
  "data": {
   "lineno": 263
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_ecsv.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_ecsv.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_fixedwidth": {
  "data": {
   "symbols_in_volume": [
    "ascii.FixedWidth",
    "ascii.read",
    "astropy.io.ascii.tests.test_fixedwidth.table"
   ]
  },
  "type": "module"
 },
 "astropy.io.ascii.tests.test_fixedwidth.StringIO": {
  "data": {
   "shadows": "cStringIO"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_fixedwidth.assert_equal_splitlines": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.dat": {
  "data": {
   "lineno": 239
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_fixedwidth.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_fixedwidth.table": {
  "data": {
   "lineno": 234
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_read_col_starts": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "ascii.FixedWidthNoHeader",
    "ascii.read",
    "assert_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_read_detect_col_starts_or_ends": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ascii.FixedWidthNoHeader",
    "ascii.read",
    "assert_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_read_double": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ascii.FixedWidth",
    "ascii.read",
    "assert_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_read_no_header_autocolumn": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ascii.FixedWidth",
    "ascii.read",
    "assert_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_read_no_header_autocolumn_NoHeader": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ascii.FixedWidthNoHeader",
    "ascii.read",
    "assert_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_read_no_header_names": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ascii.FixedWidth",
    "ascii.read",
    "assert_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_read_no_header_names_NoHeader": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "ascii.FixedWidthNoHeader",
    "ascii.read",
    "assert_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_read_normal": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ascii.FixedWidth",
    "ascii.get_reader",
    "assert_almost_equal",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_read_normal_exclude": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ascii.FixedWidth",
    "ascii.get_reader",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_read_normal_names": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ascii.FixedWidth",
    "ascii.get_reader",
    "assert_almost_equal",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_read_normal_names_include": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ascii.FixedWidth",
    "ascii.get_reader",
    "assert_almost_equal",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_read_space_delimiter": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ascii.FixedWidth",
    "ascii.read",
    "assert_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_read_twoline_ReST": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "ascii.FixedWidthTwoLine",
    "ascii.read",
    "assert_almost_equal",
    "assert_equal",
    "astropy.io.ascii.tests.test_fixedwidth.dat",
    "astropy.io.ascii.tests.test_fixedwidth.table"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_read_twoline_fail": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "ascii.FixedWidthTwoLine",
    "ascii.read",
    "astropy.io.ascii.tests.test_fixedwidth.dat",
    "astropy.io.ascii.tests.test_fixedwidth.pytest",
    "astropy.io.ascii.tests.test_fixedwidth.table",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_read_twoline_human": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "ascii.FixedWidthTwoLine",
    "ascii.read",
    "assert_almost_equal",
    "assert_equal",
    "astropy.io.ascii.tests.test_fixedwidth.dat",
    "astropy.io.ascii.tests.test_fixedwidth.table"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_read_twoline_normal": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "ascii.FixedWidthTwoLine",
    "ascii.read",
    "assert_almost_equal",
    "assert_equal",
    "astropy.io.ascii.tests.test_fixedwidth.dat",
    "astropy.io.ascii.tests.test_fixedwidth.table"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_read_twoline_wrong_marker": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "ascii.FixedWidthTwoLine",
    "ascii.read",
    "astropy.io.ascii.tests.test_fixedwidth.dat",
    "astropy.io.ascii.tests.test_fixedwidth.pytest",
    "astropy.io.ascii.tests.test_fixedwidth.table",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_read_weird": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ascii.FixedWidth",
    "ascii.get_reader",
    "assert_almost_equal",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_write_fill_values": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "ascii.FixedWidth",
    "ascii.write",
    "astropy.io.ascii.tests.test_fixedwidth.assert_equal_splitlines",
    "astropy.io.ascii.tests.test_fixedwidth.dat"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_write_formats": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "ascii.FixedWidth",
    "ascii.write",
    "astropy.io.ascii.tests.test_fixedwidth.assert_equal_splitlines",
    "astropy.io.ascii.tests.test_fixedwidth.dat"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_write_no_bookend": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "ascii.FixedWidth",
    "ascii.write",
    "astropy.io.ascii.tests.test_fixedwidth.assert_equal_splitlines",
    "astropy.io.ascii.tests.test_fixedwidth.dat"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_write_no_delimiter": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "ascii.FixedWidth",
    "ascii.write",
    "astropy.io.ascii.tests.test_fixedwidth.assert_equal_splitlines",
    "astropy.io.ascii.tests.test_fixedwidth.dat"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_write_no_pad": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "ascii.FixedWidth",
    "ascii.write",
    "astropy.io.ascii.tests.test_fixedwidth.assert_equal_splitlines",
    "astropy.io.ascii.tests.test_fixedwidth.dat"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_write_noheader_no_bookend": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "ascii.FixedWidthNoHeader",
    "ascii.write",
    "astropy.io.ascii.tests.test_fixedwidth.assert_equal_splitlines",
    "astropy.io.ascii.tests.test_fixedwidth.dat"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_write_noheader_no_delimiter": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "ascii.FixedWidthNoHeader",
    "ascii.write",
    "astropy.io.ascii.tests.test_fixedwidth.assert_equal_splitlines",
    "astropy.io.ascii.tests.test_fixedwidth.dat"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_write_noheader_no_pad": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "ascii.FixedWidthNoHeader",
    "ascii.write",
    "astropy.io.ascii.tests.test_fixedwidth.assert_equal_splitlines",
    "astropy.io.ascii.tests.test_fixedwidth.dat"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_write_noheader_normal": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "ascii.FixedWidthNoHeader",
    "ascii.write",
    "astropy.io.ascii.tests.test_fixedwidth.assert_equal_splitlines",
    "astropy.io.ascii.tests.test_fixedwidth.dat"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_write_normal": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "ascii.FixedWidth",
    "ascii.write",
    "astropy.io.ascii.tests.test_fixedwidth.assert_equal_splitlines",
    "astropy.io.ascii.tests.test_fixedwidth.dat"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_write_twoline_no_bookend": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "ascii.FixedWidthTwoLine",
    "ascii.write",
    "astropy.io.ascii.tests.test_fixedwidth.assert_equal_splitlines",
    "astropy.io.ascii.tests.test_fixedwidth.dat"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_write_twoline_no_pad": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "ascii.FixedWidthTwoLine",
    "ascii.write",
    "astropy.io.ascii.tests.test_fixedwidth.assert_equal_splitlines",
    "astropy.io.ascii.tests.test_fixedwidth.dat"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_fixedwidth.test_write_twoline_normal": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "ascii.FixedWidthTwoLine",
    "ascii.write",
    "astropy.io.ascii.tests.test_fixedwidth.assert_equal_splitlines",
    "astropy.io.ascii.tests.test_fixedwidth.dat"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_html": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.io.ascii.tests.test_html.BeautifulSoup": {
  "data": {
   "shadows": "bs4.BeautifulSoup"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_html.FeatureNotFound": {
  "data": {
   "shadows": "bs4.FeatureNotFound"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_html.HAS_BEAUTIFUL_SOUP": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_html.StringIO": {
  "data": {
   "shadows": "cStringIO"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_html.bleach": {
  "data": {
   "shadows": "bleach"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_html.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_html.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_html.test_backend_parsers": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "astropy.io.ascii.tests.test_html.pytest",
    "bs4.FeatureNotFound"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_html.test_htmldata": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "TypeError",
    "astropy.io.ascii.tests.test_html.pytest",
    "bs4.BeautifulSoup",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_html.test_htmlheader_start": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "TypeError",
    "astropy.io.ascii.tests.test_html.pytest",
    "bs4.BeautifulSoup",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_html.test_htmlinputter": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "astropy.io.ascii.tests.test_html.pytest",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_html.test_htmlinputter_no_bs4": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "astropy.io.ascii.tests.test_html.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_html.test_htmlsplitter": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "TypeError",
    "astropy.io.ascii.tests.test_html.pytest",
    "bs4.BeautifulSoup",
    "list",
    "splitter"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_html.test_identify_table": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "astropy.io.ascii.tests.test_html.pytest",
    "bs4.BeautifulSoup"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_html.test_identify_table_fail": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "astropy.io.ascii.tests.test_html.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_html.test_listwriter": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_html.test_missing_data": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "astropy.io.ascii.tests.test_html.pytest",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_html.test_multi_column_write_table_html_fill_values_masked": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "Table",
    "ascii.masked",
    "ascii.write",
    "numpy.ma.masked",
    "print"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_html.test_multicolumn_read": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "Table",
    "Table.read",
    "astropy.io.ascii.tests.test_html.pytest",
    "numpy.all",
    "numpy.array",
    "numpy.dtype",
    "numpy.str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_html.test_multicolumn_table_html_fill_values": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "Table",
    "ascii.write"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_html.test_multicolumn_write": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "Table"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_html.test_multicolumn_write_escape": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "Table",
    "astropy.io.ascii.tests.test_html.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_html.test_no_names": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "astropy.io.ascii.tests.test_html.pytest",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_html.test_raw_html_write": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "Table",
    "astropy.io.ascii.tests.test_html.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_html.test_raw_html_write_clean": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "Table",
    "astropy.io.ascii.tests.test_html.bleach",
    "astropy.io.ascii.tests.test_html.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_html.test_read_html_unicode": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "Table.read",
    "astropy.io.ascii.tests.test_html.pytest",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_html.test_rename_cols": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "astropy.io.ascii.tests.test_html.pytest",
    "len",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_html.test_soupstring": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "astropy.io.ascii.tests.test_html.pytest",
    "bs4.BeautifulSoup",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_html.test_write_no_multicols": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "Table"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_html.test_write_table_html_fill_values": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "Table",
    "ascii.write"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_html.test_write_table_html_fill_values_masked": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "Table",
    "ascii.masked",
    "ascii.write",
    "numpy.ma.masked"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_html.test_write_table_html_fill_values_optional_columns": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "Table",
    "ascii.write"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ipac_definitions": {
  "data": {},
  "type": "module"
 },
 "astropy.io.ascii.tests.test_ipac_definitions.DATA": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_ipac_definitions.StringIO": {
  "data": {
   "shadows": "cStringIO"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_ipac_definitions.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_ipac_definitions.test_colname_starswithnumber_strict": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "Table",
    "ascii.write",
    "astropy.io.ascii.tests.test_ipac_definitions.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ipac_definitions.test_double_colname_strict": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "Table",
    "ascii.write",
    "astropy.io.ascii.tests.test_ipac_definitions.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ipac_definitions.test_include_exclude_names": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "Table",
    "ascii.write"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ipac_definitions.test_ipac_default": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "astropy.io.ascii.tests.test_ipac_definitions.DATA",
    "read"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ipac_definitions.test_ipac_ignore": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "astropy.io.ascii.tests.test_ipac_definitions.DATA",
    "read"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ipac_definitions.test_ipac_left": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "astropy.io.ascii.tests.test_ipac_definitions.DATA",
    "read"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ipac_definitions.test_ipac_right": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "astropy.io.ascii.tests.test_ipac_definitions.DATA",
    "read"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ipac_definitions.test_non_alfnum_colname": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "Table",
    "ascii.write",
    "astropy.io.ascii.tests.test_ipac_definitions.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ipac_definitions.test_out_with_nonstring_null": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "Table",
    "ascii.write"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ipac_definitions.test_reserved_colname_strict": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "Table",
    "ascii.write",
    "astropy.io.ascii.tests.test_ipac_definitions.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ipac_definitions.test_too_long_colname_default": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "Table",
    "ascii.write",
    "astropy.io.ascii.tests.test_ipac_definitions.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ipac_definitions.test_too_long_colname_notstrict": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "Table",
    "ascii.write",
    "astropy.io.ascii.tests.test_ipac_definitions.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ipac_definitions.test_too_long_colname_strict": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "Table",
    "ascii.write",
    "astropy.io.ascii.tests.test_ipac_definitions.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_ipac_definitions.test_too_long_comment": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "Table",
    "UserWarning",
    "ascii.write",
    "catch_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_rst": {
  "data": {
   "symbols_in_volume": [
    "ascii.RST",
    "ascii.read",
    "astropy.io.ascii.tests.test_rst.table"
   ]
  },
  "type": "module"
 },
 "astropy.io.ascii.tests.test_rst.StringIO": {
  "data": {
   "shadows": "cStringIO"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_rst.assert_equal_splitlines": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_rst.dat": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_rst.table": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_rst.test_read_normal": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ascii.RST",
    "ascii.get_reader",
    "assert_almost_equal",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_rst.test_read_normal_exclude": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ascii.RST",
    "ascii.get_reader",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_rst.test_read_normal_names": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ascii.RST",
    "ascii.get_reader",
    "assert_almost_equal",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_rst.test_read_normal_names_include": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ascii.RST",
    "ascii.get_reader",
    "assert_almost_equal",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_rst.test_read_right_indented_table": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ascii.RST",
    "ascii.get_reader",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_rst.test_read_unbounded_right_column": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ascii.RST",
    "ascii.get_reader",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_rst.test_read_unbounded_right_column_header": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ascii.RST",
    "ascii.get_reader",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_rst.test_trailing_spaces_in_row_definition": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ascii.RST",
    "ascii.get_reader",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_rst.test_write_normal": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "ascii.RST",
    "ascii.write",
    "astropy.io.ascii.tests.test_rst.assert_equal_splitlines",
    "astropy.io.ascii.tests.test_rst.dat"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_types": {
  "data": {},
  "type": "module"
 },
 "astropy.io.ascii.tests.test_types.StringIO": {
  "data": {
   "shadows": "cStringIO"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_types.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_types.test_ipac_read_types": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ascii.FloatType",
    "ascii.IntType",
    "ascii.Ipac",
    "ascii.StrType",
    "ascii.get_reader",
    "assert_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_types.test_rdb_write_types": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ascii.Basic",
    "ascii.Rdb",
    "ascii.read",
    "ascii.write",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_types.test_types_from_dat": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ascii.Basic",
    "ascii.convert_numpy",
    "ascii.read",
    "numpy.float",
    "numpy.str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_write": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "ascii.AASTex",
    "ascii.CommentedHeader",
    "ascii.Csv",
    "ascii.HTML",
    "ascii.Ipac",
    "ascii.Latex",
    "ascii.NoHeader",
    "ascii.Rdb",
    "ascii.Tab",
    "ascii.core.FAST_CLASSES.items",
    "ascii.core.FORMAT_CLASSES.items",
    "ascii.latexdicts",
    "ascii.masked",
    "dict",
    "itertools.chain",
    "list"
   ]
  },
  "type": "module"
 },
 "astropy.io.ascii.tests.test_write.BeautifulSoup": {
  "data": {
   "shadows": "bs4.BeautifulSoup"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_write.FeatureNotFound": {
  "data": {
   "shadows": "bs4.FeatureNotFound"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_write.HAS_BEAUTIFUL_SOUP": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_write.StringIO": {
  "data": {
   "shadows": "cStringIO"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_write.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_write.check_write_table": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "ValueError",
    "ascii.write",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_write.check_write_table_via_table": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.ascii.tests.test_write.copy",
    "format",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_write.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_write.fmt_name_classes": {
  "data": {
   "lineno": 704
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_write.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_write.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_write.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.io.ascii.tests.test_write.tab_to_fill": {
  "data": {
   "lineno": 305
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_write.test_byte_string_output": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "ascii.write",
    "astropy.io.ascii.tests.test_write.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_write.test_columns_names_with_formats": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "ascii.write",
    "astropy.io.ascii.tests.test_write.pytest",
    "catch_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_write.test_commented_header_comments": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "ValueError",
    "ascii.write",
    "astropy.io.ascii.tests.test_write.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_write.test_def_masked_fill_value": {
  "data": {
   "lineno": 364
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_write.test_defs": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_write.test_defs_fill_value": {
  "data": {
   "lineno": 307
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_write.test_defs_no_data": {
  "data": {
   "lineno": 288
  },
  "type": "constant"
 },
 "astropy.io.ascii.tests.test_write.test_latex_units": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "ascii.latexdicts",
    "ascii.write",
    "astropy.io.ascii.tests.test_write.copy",
    "astropy.io.ascii.tests.test_write.os"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_write.test_names_with_formats": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "ascii.write",
    "astropy.io.ascii.tests.test_write.pytest",
    "catch_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_write.test_roundtrip_masked": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "ImportError",
    "ascii.core.FAST_CLASSES",
    "ascii.read",
    "ascii.write",
    "astropy.io.ascii.tests.test_write.HAS_BEAUTIFUL_SOUP",
    "astropy.io.ascii.tests.test_write.fmt_name_classes",
    "astropy.io.ascii.tests.test_write.pytest",
    "getattr",
    "numpy.all",
    "simple_table",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_write.test_strip_names": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "ascii.write",
    "astropy.io.ascii.tests.test_write.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_write.test_write_comments": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "ascii.read",
    "ascii.write",
    "astropy.io.ascii.tests.test_write.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_write.test_write_fill_masked_different": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "ascii.read",
    "astropy.io.ascii.tests.test_write.check_write_table",
    "astropy.io.ascii.tests.test_write.pytest",
    "astropy.io.ascii.tests.test_write.tab_to_fill",
    "astropy.io.ascii.tests.test_write.test_def_masked_fill_value"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_write.test_write_fill_values": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "ascii.read",
    "astropy.io.ascii.tests.test_write.check_write_table",
    "astropy.io.ascii.tests.test_write.pytest",
    "astropy.io.ascii.tests.test_write.tab_to_fill",
    "astropy.io.ascii.tests.test_write.test_defs_fill_value"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_write.test_write_format": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "ascii.read",
    "ascii.write",
    "astropy.io.ascii.tests.test_write.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_write.test_write_invalid_keyword_meta_ipac": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "ascii.Ipac",
    "ascii.get_reader",
    "catch_warnings",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_write.test_write_invalid_toplevel_meta_ipac": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "ascii.Ipac",
    "ascii.get_reader",
    "catch_warnings",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_write.test_write_no_data_ipac": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "ascii.Ipac",
    "ascii.get_reader",
    "astropy.io.ascii.tests.test_write.check_write_table",
    "astropy.io.ascii.tests.test_write.check_write_table_via_table",
    "astropy.io.ascii.tests.test_write.pytest",
    "astropy.io.ascii.tests.test_write.test_defs_no_data"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_write.test_write_overwrite_ascii": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "IOError",
    "astropy.io.ascii.tests.test_write.pytest",
    "catch_warnings",
    "format",
    "len",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_write.test_write_quoted_empty_field": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "ascii.write",
    "astropy.io.ascii.tests.test_write.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_write.test_write_table": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "ascii.Daophot",
    "ascii.get_reader",
    "astropy.io.ascii.tests.test_write.check_write_table",
    "astropy.io.ascii.tests.test_write.check_write_table_via_table",
    "astropy.io.ascii.tests.test_write.pytest",
    "astropy.io.ascii.tests.test_write.test_defs"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.tests.test_write.test_write_valid_meta_ipac": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "ascii.Ipac",
    "ascii.get_reader",
    "catch_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.ui": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.io.ascii.ui.HAS_YAML": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "astropy.io.ascii.ui._GUESS": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "astropy.io.ascii.ui._get_format_class": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "ValueError",
    "format",
    "sorted"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.ui._get_guess_kwargs_list": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "astropy.io.ascii.ui.HAS_YAML",
    "dict",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.ui._guess": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "ValueError",
    "astropy.io.ascii.ui._get_guess_kwargs_list",
    "astropy.io.ascii.ui._read_trace",
    "astropy.io.ascii.ui.get_reader",
    "astropy.io.ascii.ui.re",
    "astropy.io.ascii.ui.time",
    "format",
    "len",
    "repr",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.ui._probably_html": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "Exception",
    "all",
    "astropy.io.ascii.ui.os",
    "astropy.io.ascii.ui.re",
    "enumerate",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.ui._read_trace": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "astropy.io.ascii.ui.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.ascii.ui.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "astropy.io.ascii.ui.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.ascii.ui.extra_writer_pars": {
  "data": {
   "lineno": 598
  },
  "type": "constant"
 },
 "astropy.io.ascii.ui.get_read_trace": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "astropy.io.ascii.ui._read_trace",
    "astropy.io.ascii.ui.copy"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.ui.get_reader": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "astropy.io.ascii.ui.get_writer": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "ValueError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.ui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.ascii.ui.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.ascii.ui.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.io.ascii.ui.read": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "astropy.io.ascii.ui._GUESS",
    "astropy.io.ascii.ui._get_format_class",
    "astropy.io.ascii.ui._guess",
    "astropy.io.ascii.ui._probably_html",
    "astropy.io.ascii.ui._read_trace",
    "astropy.io.ascii.ui.copy",
    "astropy.io.ascii.ui.get_reader",
    "astropy.io.ascii.ui.os",
    "astropy.io.ascii.ui.re",
    "format",
    "get_readable_fileobj"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.ui.set_guess": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "astropy.io.ascii.ui._GUESS"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.ui.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.io.ascii.ui.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "astropy.io.ascii.ui.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.io.ascii.ui.write": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "IOError",
    "astropy.io.ascii.ui._get_format_class",
    "astropy.io.ascii.ui.get_writer",
    "astropy.io.ascii.ui.os",
    "astropy.io.ascii.ui.sys",
    "astropy.io.ascii.ui.warnings",
    "format",
    "hasattr",
    "isinstance",
    "open",
    "set",
    "table_cls"
   ]
  },
  "type": "function"
 },
 "astropy.io.ascii.ui.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "astropy.io.fits": {
  "data": {
   "symbols_in_volume": [
    "astropy.io.fits.Conf"
   ]
  },
  "type": "module"
 },
 "astropy.io.fits.Conf": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "astropy.io.fits.__all__": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "astropy.io.fits._config": {
  "data": {
   "shadows": "config"
  },
  "type": "import"
 },
 "astropy.io.fits._numpy_hacks": {
  "data": {},
  "type": "module"
 },
 "astropy.io.fits._numpy_hacks.realign_dtype": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ValueError",
    "cls",
    "len",
    "max",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card": {
  "data": {
   "symbols_in_volume": [
    "astropy.io.fits.card.CARD_LENGTH",
    "astropy.io.fits.card.Undefined",
    "maketrans"
   ]
  },
  "type": "module"
 },
 "astropy.io.fits.card.BLANK_CARD": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "astropy.io.fits.card.CARD_LENGTH": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.io.fits.card.Card": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "astropy.io.fits.card.CARD_LENGTH",
    "astropy.io.fits.card.KEYWORD_LENGTH",
    "astropy.io.fits.card.VALUE_INDICATOR",
    "astropy.io.fits.card.re",
    "set"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.card.Card.__getitem__": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card.__init__": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card.__len__": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card.__repr__": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card.__str__": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card._check_if_rvkc": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card._check_if_rvkc_image": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "astropy.io.fits.card.VALUE_INDICATOR",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card._fix_keyword": {
  "data": {
   "lineno": 837
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card._fix_value": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "astropy.io.fits.card.FIX_FP_TABLE",
    "translate"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card._format_comment": {
  "data": {
   "lineno": 927
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card._format_image": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.card.Card",
    "astropy.io.fits.card.VALUE_INDICATOR",
    "astropy.io.fits.card.warnings",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card._format_keyword": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "astropy.io.fits.card.KEYWORD_LENGTH"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card._format_long_commentary_image": {
  "data": {
   "lineno": 1034,
   "symbols_in_volume": [
    "astropy.io.fits.card.Card",
    "astropy.io.fits.card.KEYWORD_LENGTH",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card._format_long_image": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "_words_group",
    "astropy.io.fits.card.Card",
    "astropy.io.fits.card.KEYWORD_LENGTH",
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card._format_value": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "astropy.io.fits.card.KEYWORD_LENGTH",
    "astropy.io.fits.card._format_value",
    "complex",
    "float",
    "isinstance",
    "len",
    "numpy.complexfloating",
    "numpy.floating",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card._init_rvkc": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "astropy.io.fits.card._int_or_float"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card._itersubcards": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "VerifyError",
    "astropy.io.fits.card.Card",
    "isinstance",
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card._parse_comment": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "astropy.io.fits.card.Card",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card._parse_keyword": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "astropy.io.fits.card.HIERARCH_VALUE_INDICATOR",
    "astropy.io.fits.card.KEYWORD_LENGTH",
    "astropy.io.fits.card.VALUE_INDICATOR",
    "astropy.io.fits.card.warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card._parse_value": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "VerifyError",
    "_str_to_num",
    "astropy.io.fits.card.FIX_FP_TABLE2",
    "astropy.io.fits.card.KEYWORD_LENGTH",
    "astropy.io.fits.card.UNDEFINED",
    "astropy.io.fits.card.re",
    "len",
    "translate"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card._split": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.card.KEYWORD_LENGTH"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card._verify": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": [
    "_ErrList"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card.comment": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card.field_specifier": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card.fromstring": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "astropy.io.fits.card._pad",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card.image": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card.is_blank": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "astropy.io.fits.card.BLANK_CARD",
    "isinstance",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card.keyword": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "astropy.io.fits.card.HIERARCH_VALUE_INDICATOR",
    "astropy.io.fits.card.KEYWORD_LENGTH",
    "astropy.io.fits.card.warnings",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card.normalize_keyword": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "astropy.io.fits.card.KEYWORD_LENGTH",
    "classmethod",
    "cls._keywd_FSC_RE.match",
    "cls._rvkc_keyword_name_RE.match",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card.rawkeyword": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card.rawvalue": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card.Card.value": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card.FIX_FP_TABLE": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.io.fits.card.FIX_FP_TABLE2": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "astropy.io.fits.card.HIERARCH_VALUE_INDICATOR": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "astropy.io.fits.card.KEYWORD_LENGTH": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "astropy.io.fits.card.UNDEFINED": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "astropy.io.fits.card.Undefined": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.card.Undefined.__init__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "astropy.io.fits.card.VALUE_INDICATOR": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "astropy.io.fits.card.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "astropy.io.fits.card._format_float": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card._format_value": {
  "data": {
   "lineno": 1182,
   "symbols_in_volume": [
    "_is_int",
    "astropy.io.fits.card.Undefined",
    "astropy.io.fits.card._format_float",
    "bool",
    "complex",
    "float",
    "isinstance",
    "numpy.bool_",
    "numpy.complexfloating",
    "numpy.floating",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card._int_or_float": {
  "data": {
   "lineno": 1162,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card._pad": {
  "data": {
   "lineno": 1251,
   "symbols_in_volume": [
    "astropy.io.fits.card.Card",
    "input",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.card.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.fits.card.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.io.fits.card.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.io.fits.conf": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "astropy.io.fits.connect": {
  "data": {
   "symbols_in_volume": [
    "Table",
    "astropy.io.fits.connect.is_fits",
    "astropy.io.fits.connect.read_table_fits",
    "astropy.io.fits.connect.write_table_fits"
   ]
  },
  "type": "module"
 },
 "astropy.io.fits.connect.COLUMN_KEYWORDS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "astropy.io.fits.connect.FITS_SIGNATURE": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "astropy.io.fits.connect.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.io.fits.connect.REMOVE_KEYWORDS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "astropy.io.fits.connect.fits_open": {
  "data": {
   "shadows": "fitsopen"
  },
  "type": "import"
 },
 "astropy.io.fits.connect.io_registry": {
  "data": {
   "shadows": "registry"
  },
  "type": "import"
 },
 "astropy.io.fits.connect.is_column_keyword": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "astropy.io.fits.connect.COLUMN_KEYWORDS",
    "astropy.io.fits.connect.re"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.connect.is_fits": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "astropy.io.fits.connect.FITS_SIGNATURE",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.connect.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.fits.connect.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.fits.connect.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.io.fits.connect.read_table_fits": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "Table",
    "ValueError",
    "astropy.io.fits.connect.REMOVE_KEYWORDS",
    "astropy.io.fits.connect.is_column_keyword",
    "astropy.io.fits.connect.warnings",
    "collections.OrderedDict",
    "enumerate",
    "first",
    "input",
    "input.index_of",
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.connect.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.io.fits.connect.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.io.fits.connect.write_table_fits": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "IOError",
    "astropy.io.fits.connect.os",
    "input",
    "isinstance",
    "table_to_hdu"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.file": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "b"
   ]
  },
  "type": "module"
 },
 "astropy.io.fits.file.BZIP2_MAGIC": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "astropy.io.fits.file.FILE_MODES": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "astropy.io.fits.file.GZIP_MAGIC": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "astropy.io.fits.file.HAS_PATHLIB": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "astropy.io.fits.file.IO_FITS_MODES": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "astropy.io.fits.file.MEMMAP_MODES": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "astropy.io.fits.file.Memmap": {
  "data": {
   "shadows": "numpy.memmap"
  },
  "type": "import"
 },
 "astropy.io.fits.file.PKZIP_MAGIC": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "astropy.io.fits.file._File": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.file._File.__enter__": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "astropy.io.fits.file._File.__exit__": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "astropy.io.fits.file._File.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ValueError",
    "_is_url",
    "astropy.io.fits.file.FILE_MODES",
    "astropy.io.fits.file.HAS_PATHLIB",
    "astropy.io.fits.file.IO_FITS_MODES",
    "astropy.io.fits.file._is_random_access_file_backed",
    "astropy.io.fits.file.bz2",
    "astropy.io.fits.file.gzip",
    "astropy.io.fits.file.pathlib",
    "astropy.io.fits.file.zipfile",
    "bool",
    "deprecated_renamed_argument",
    "download_file",
    "fileobj_mode",
    "fileobj_name",
    "hasattr",
    "isfile",
    "isinstance",
    "numpy.memmap",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.file._File.__repr__": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "astropy.io.fits.file._File._maybe_close_mmap": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "astropy.io.fits.file.sys"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.file._File._mmap_available": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "astropy.io.fits.file.mmap",
    "astropy.io.fits.file.os",
    "astropy.io.fits.file.tempfile",
    "astropy.io.fits.file.warnings",
    "classproperty",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.file._File._open_filelike": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "IOError",
    "astropy.io.fits.file.zipfile",
    "fileobj_closed",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.file._File._open_filename": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "IOError",
    "astropy.io.fits.file.BZIP2_MAGIC",
    "astropy.io.fits.file.GZIP_MAGIC",
    "astropy.io.fits.file.IO_FITS_MODES",
    "astropy.io.fits.file.PKZIP_MAGIC",
    "astropy.io.fits.file.bz2",
    "astropy.io.fits.file.gzip",
    "astropy.io.fits.file.os",
    "b",
    "fileobj_open",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.file._File._open_fileobj": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.file.IO_FITS_MODES",
    "astropy.io.fits.file.gzip",
    "fileobj_closed",
    "fileobj_mode",
    "fileobj_open",
    "isfile"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.file._File._open_zipfile": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "IOError",
    "astropy.io.fits.file.tempfile",
    "astropy.io.fits.file.zipfile",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.file._File._overwrite_existing": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "IOError",
    "astropy.io.fits.file.os",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.file._File.close": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.file._File.flush": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.file._File.read": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "EOFError",
    "IOError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.file._File.readable": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "isreadable"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.file._File.readarray": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "EOFError",
    "ValueError",
    "_array_from_file",
    "astropy.io.fits.file.MEMMAP_MODES",
    "astropy.io.fits.file.operator",
    "astropy.io.fits.file.warnings",
    "functools.reduce",
    "hasattr",
    "int",
    "isinstance",
    "numpy.dtype",
    "numpy.memmap",
    "numpy.memmap._mmap",
    "numpy.memmap.base",
    "numpy.ndarray",
    "numpy.prod",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.file._File.seek": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.file.gzip",
    "astropy.io.fits.file.warnings",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.file._File.tell": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "EOFError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.file._File.truncate": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.file._File.writable": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "iswritable"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.file._File.write": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "_write_string",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.file._File.writearray": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "_array_to_file",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.file._is_random_access_file_backed": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "astropy.io.fits.file.gzip",
    "isfile",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.file.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "astropy.io.fits.file.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.fits.file.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "astropy.io.fits.file.mmap": {
  "data": {
   "shadows": "mmap"
  },
  "type": "import"
 },
 "astropy.io.fits.file.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.fits.file.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "astropy.io.fits.file.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.fits.file.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "astropy.io.fits.file.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "astropy.io.fits.file.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.io.fits.file.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "astropy.io.fits.file.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.io.fits.file.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "astropy.io.fits.file.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "astropy.io.fits.hdu": {
  "data": {},
  "type": "module"
 },
 "astropy.io.fits.hdu.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "astropy.io.fits.hdu.base": {
  "data": {
   "symbols_in_volume": [
    "astropy.io.fits.hdu.base.ExtensionHDU",
    "astropy.io.fits.hdu.base.NonstandardExtHDU",
    "astropy.io.fits.hdu.base._BaseHDU",
    "astropy.io.fits.hdu.base._Delayed"
   ]
  },
  "type": "module"
 },
 "astropy.io.fits.hdu.base.BITPIX2DTYPE": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "astropy.io.fits.hdu.base.DELAYED": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "astropy.io.fits.hdu.base.DTYPE2BITPIX": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "astropy.io.fits.hdu.base.ExtensionHDU": {
  "data": {
   "lineno": 1566,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.base._ValidHDU"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.hdu.base.ExtensionHDU._verify": {
  "data": {
   "lineno": 1605,
   "symbols_in_volume": [
    "_is_int",
    "astropy.io.fits.hdu.base.ExtensionHDU",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base.ExtensionHDU.match_header": {
  "data": {
   "lineno": 1576,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base.ExtensionHDU.writeto": {
  "data": {
   "lineno": 1586,
   "symbols_in_volume": [
    "HDUList",
    "PrimaryHDU",
    "deprecated_renamed_argument"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base.InvalidHDUException": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.hdu.base.NonstandardExtHDU": {
  "data": {
   "lineno": 1624,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.base.ExtensionHDU"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.hdu.base.NonstandardExtHDU._summary": {
  "data": {
   "lineno": 1658,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base.NonstandardExtHDU.data": {
  "data": {
   "lineno": 1661
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base.NonstandardExtHDU.match_header": {
  "data": {
   "lineno": 1638,
   "symbols_in_volume": [
    "classmethod",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._AllHDU": {
  "data": {
   "lineno": 738
  },
  "type": "constant"
 },
 "astropy.io.fits.hdu.base._BaseHDU": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "add_metaclass",
    "astropy.io.fits.hdu.base._BaseHDUMeta",
    "object",
    "set"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.hdu.base._BaseHDU.__init__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "Header"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDU.__new__": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.base._BaseHDU",
    "astropy.io.fits.hdu.base._hdu_class_from_header",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDU._close": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "_get_array_mmap"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDU._data_loaded": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.base.DELAYED",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDU._get_raw_data": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDU._has_data": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDU._postwriteto": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "KeyError",
    "_is_pseudo_unsigned",
    "suppress"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDU._prewriteto": {
  "data": {
   "lineno": 488
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDU._readfrom_internal": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "Header._from_blocks",
    "Header.fromfile",
    "TypeError",
    "_File",
    "_pad_length",
    "astropy.io.fits.hdu.base.DELAYED",
    "astropy.io.fits.hdu.base._hdu_class_from_header",
    "classmethod",
    "cls",
    "isinstance",
    "len",
    "numpy.ndarray",
    "signature"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDU._readfrom_internal.block_iter": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDU._update_checksum": {
  "data": {
   "lineno": 513
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDU._update_uint_scale_keywords": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "_is_pseudo_unsigned",
    "_unsigned_zero"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDU._writedata": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "IOError",
    "_pad_length",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDU._writedata_direct_copy": {
  "data": {
   "lineno": 631
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDU._writedata_internal": {
  "data": {
   "lineno": 618
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDU._writeheader": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "AttributeError",
    "IOError",
    "len",
    "str",
    "suppress"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDU._writeto": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "AttributeError",
    "_free_space_check",
    "astropy.io.fits.hdu.base.os"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDU._writeto_internal": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "_get_array_mmap"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDU.fromstring": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDU.header": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDU.is_image": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDU.level": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "TypeError",
    "_is_int"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDU.match_header": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDU.name": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "TypeError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDU.readfrom": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "_File",
    "astropy.io.fits.hdu.base.os",
    "classmethod",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDU.register_hdu": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDU.unregister_hdu": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDU.ver": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "TypeError",
    "_is_int"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDU.writeto": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "HDUList",
    "deprecated_renamed_argument"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDUMeta": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.hdu.base._BaseHDUMeta.__init__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "isinstance",
    "property",
    "setattr"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._BaseHDUMeta.__init__.data": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.base.sys"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._CorruptedHDU": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.base._BaseHDU"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.hdu.base._CorruptedHDU._summary": {
  "data": {
   "lineno": 777
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._CorruptedHDU.size": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._CorruptedHDU.verify": {
  "data": {
   "lineno": 780
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._Delayed": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.hdu.base._ExtensionHDU": {
  "data": {
   "lineno": 1621
  },
  "type": "constant"
 },
 "astropy.io.fits.hdu.base._NonstandardExtHDU": {
  "data": {
   "lineno": 1671
  },
  "type": "constant"
 },
 "astropy.io.fits.hdu.base._NonstandardHDU": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.base._BaseHDU"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.hdu.base._NonstandardHDU._summary": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._NonstandardHDU._verify": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "_ErrList"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._NonstandardHDU._writedata": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "IOError",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._NonstandardHDU.data": {
  "data": {
   "lineno": 862
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._NonstandardHDU.match_header": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.base.InvalidHDUException",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._NonstandardHDU.size": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._ValidHDU": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.base._BaseHDU"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.hdu.base._ValidHDU.__init__": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.base._ValidHDU",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._ValidHDU._calculate_checksum": {
  "data": {
   "lineno": 1397,
   "symbols_in_volume": [
    "numpy.fromstring",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._ValidHDU._calculate_datasum": {
  "data": {
   "lineno": 1376
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._ValidHDU._char_encode": {
  "data": {
   "lineno": 1534,
   "symbols_in_volume": [
    "ascii",
    "ascii.tostring",
    "decode_ascii",
    "numpy.uint32",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._ValidHDU._compute_checksum": {
  "data": {
   "lineno": 1421,
   "symbols_in_volume": [
    "len",
    "min",
    "numpy.uint32",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._ValidHDU._compute_hdu_checksum": {
  "data": {
   "lineno": 1457,
   "symbols_in_volume": [
    "numpy.add.reduce",
    "numpy.uint32",
    "numpy.uint64"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._ValidHDU._encode_byte": {
  "data": {
   "lineno": 1511,
   "symbols_in_volume": [
    "numpy.array",
    "ord"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._ValidHDU._get_timestamp": {
  "data": {
   "lineno": 1366,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.base.datetime"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._ValidHDU._verify": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": [
    "ValueError",
    "_ErrList",
    "_extract_number",
    "_is_int",
    "astropy.io.fits.hdu.base.BITPIX2DTYPE",
    "int",
    "is_valid",
    "isinstance",
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._ValidHDU._verify.fix": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._ValidHDU._verify_checksum_datasum": {
  "data": {
   "lineno": 1331,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.base.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._ValidHDU.add_checksum": {
  "data": {
   "lineno": 1206
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._ValidHDU.add_datasum": {
  "data": {
   "lineno": 1165,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._ValidHDU.copy": {
  "data": {
   "lineno": 967
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._ValidHDU.filebytes": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "_File"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._ValidHDU.fileinfo": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._ValidHDU.match_header": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "classmethod",
    "first"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._ValidHDU.req_cards": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "ValueError",
    "_is_int",
    "len",
    "pos",
    "test"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._ValidHDU.req_cards.fix": {
  "data": {
   "lineno": 1157
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._ValidHDU.size": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "abs",
    "property",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._ValidHDU.verify_checksum": {
  "data": {
   "lineno": 1297
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._ValidHDU.verify_datasum": {
  "data": {
   "lineno": 1267,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base._hdu_class_from_header": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "Exception",
    "NotImplementedError",
    "astropy.io.fits.hdu.base.warnings",
    "itersubclasses",
    "list",
    "reversed"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.base.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "astropy.io.fits.hdu.base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.fits.hdu.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.fits.hdu.base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.fits.hdu.base.register_hdu": {
  "data": {
   "lineno": 743
  },
  "type": "constant"
 },
 "astropy.io.fits.hdu.base.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.io.fits.hdu.base.unregister_hdu": {
  "data": {
   "lineno": 744
  },
  "type": "constant"
 },
 "astropy.io.fits.hdu.base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.io.fits.hdu.compressed": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "astropy.io.fits.hdu.compressed.CMTYPE_ALIASES",
    "astropy.io.fits.hdu.compressed.DITHER_SEED_CLOCK",
    "astropy.io.fits.hdu.compressed.NO_DITHER",
    "astropy.io.fits.hdu.compressed.SUBTRACTIVE_DITHER_1",
    "astropy.io.fits.hdu.compressed.SUBTRACTIVE_DITHER_2",
    "set"
   ]
  },
  "type": "module"
 },
 "astropy.io.fits.hdu.compressed.CFITSIO_SUPPORTS_GZIPDATA": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "astropy.io.fits.hdu.compressed.CFITSIO_SUPPORTS_Q_FORMAT": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "astropy.io.fits.hdu.compressed.CMTYPE_ALIASES": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "astropy.io.fits.hdu.compressed.COMPRESSION_KEYWORDS": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "astropy.io.fits.hdu.compressed.CompImageHDU": {
  "data": {
   "lineno": 378
  },
  "type": "class"
 },
 "astropy.io.fits.hdu.compressed.CompImageHDU.__init__": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "Exception",
    "astropy.io.fits.hdu.compressed.CMTYPE_ALIASES",
    "astropy.io.fits.hdu.compressed.CompImageHDU",
    "astropy.io.fits.hdu.compressed.DEFAULT_COMPRESSION_TYPE",
    "astropy.io.fits.hdu.compressed.DEFAULT_DITHER_SEED",
    "astropy.io.fits.hdu.compressed.DEFAULT_HCOMP_SCALE",
    "astropy.io.fits.hdu.compressed.DEFAULT_HCOMP_SMOOTH",
    "astropy.io.fits.hdu.compressed.DEFAULT_QUANTIZE_LEVEL",
    "astropy.io.fits.hdu.compressed.DEFAULT_QUANTIZE_METHOD",
    "astropy.io.fits.hdu.compressed.warnings",
    "locals",
    "range",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.compressed.CompImageHDU._close": {
  "data": {
   "lineno": 1864,
   "symbols_in_volume": [
    "_get_array_mmap",
    "astropy.io.fits.hdu.compressed.CompImageHDU",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.compressed.CompImageHDU._dtype_for_bitpix": {
  "data": {
   "lineno": 1875,
   "symbols_in_volume": [
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.compressed.CompImageHDU._generate_dither_seed": {
  "data": {
   "lineno": 1919,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_is_int",
    "astropy.io.fits.hdu.compressed.DITHER_SEED_CHECKSUM",
    "astropy.io.fits.hdu.compressed.DITHER_SEED_CLOCK",
    "astropy.io.fits.hdu.compressed.ctypes",
    "astropy.io.fits.hdu.compressed.math",
    "astropy.io.fits.hdu.compressed.time",
    "id",
    "int",
    "range",
    "slice",
    "sum",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.compressed.CompImageHDU._prewriteto": {
  "data": {
   "lineno": 1803,
   "symbols_in_volume": [
    "ImageHDU",
    "astropy.io.fits.hdu.compressed.CompImageHDU",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.compressed.CompImageHDU._summary": {
  "data": {
   "lineno": 1594,
   "symbols_in_volume": [
    "len",
    "list",
    "range",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.compressed.CompImageHDU._update_compressed_data": {
  "data": {
   "lineno": 1626,
   "symbols_in_volume": [
    "_is_pseudo_unsigned",
    "_unsigned_zero",
    "numpy.array",
    "numpy.rec.recarray"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.compressed.CompImageHDU._update_header_data": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "ColDefs",
    "Column",
    "IOError",
    "ImageHDU",
    "KeyError",
    "ValueError",
    "astropy.io.fits.hdu.compressed.CFITSIO_SUPPORTS_GZIPDATA",
    "astropy.io.fits.hdu.compressed.CFITSIO_SUPPORTS_Q_FORMAT",
    "astropy.io.fits.hdu.compressed.CMTYPE_ALIASES",
    "astropy.io.fits.hdu.compressed.CompImageHeader",
    "astropy.io.fits.hdu.compressed.DEFAULT_BLOCK_SIZE",
    "astropy.io.fits.hdu.compressed.DEFAULT_BYTE_PIX",
    "astropy.io.fits.hdu.compressed.DEFAULT_COMPRESSION_TYPE",
    "astropy.io.fits.hdu.compressed.DEFAULT_DITHER_SEED",
    "astropy.io.fits.hdu.compressed.DEFAULT_HCOMP_SCALE",
    "astropy.io.fits.hdu.compressed.DEFAULT_QUANTIZE_LEVEL",
    "astropy.io.fits.hdu.compressed.DEFAULT_QUANTIZE_METHOD",
    "astropy.io.fits.hdu.compressed.NO_DITHER",
    "astropy.io.fits.hdu.compressed.QUANTIZE_METHOD_NAMES",
    "astropy.io.fits.hdu.compressed.SUBTRACTIVE_DITHER_1",
    "astropy.io.fits.hdu.compressed.SUBTRACTIVE_DITHER_2",
    "astropy.io.fits.hdu.compressed.warnings",
    "enumerate",
    "isinstance",
    "iteritems",
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.compressed.CompImageHDU._update_header_scale_info": {
  "data": {
   "lineno": 1896,
   "symbols_in_volume": [
    "KeyError",
    "suppress"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.compressed.CompImageHDU._writedata": {
  "data": {
   "lineno": 1848,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.compressed.CompImageHDU",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.compressed.CompImageHDU._writeheader": {
  "data": {
   "lineno": 1839
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.compressed.CompImageHDU.compressed_data": {
  "data": {
   "lineno": 1445,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.compressed.gc"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.compressed.CompImageHDU.data": {
  "data": {
   "lineno": 1418,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numpy.ndarray",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.compressed.CompImageHDU.header": {
  "data": {
   "lineno": 1474,
   "symbols_in_volume": [
    "Exception",
    "astropy.io.fits.hdu.compressed.CompImageHeader",
    "astropy.io.fits.hdu.compressed.warnings",
    "hasattr",
    "int",
    "list",
    "range",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.compressed.CompImageHDU.match_header": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.compressed.warnings",
    "classmethod",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.compressed.CompImageHDU.scale": {
  "data": {
   "lineno": 1695,
   "symbols_in_volume": [
    "KeyError",
    "getattr",
    "isinstance",
    "numpy",
    "numpy.around",
    "numpy.array",
    "numpy.floating",
    "numpy.maximum.reduce",
    "numpy.minimum.reduce",
    "numpy.subtract",
    "numpy.uint8",
    "suppress",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.compressed.CompImageHDU.shape": {
  "data": {
   "lineno": 1465,
   "symbols_in_volume": [
    "property",
    "reversed",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.compressed.CompImageHeader": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.compressed.re",
    "set"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.hdu.compressed.CompImageHeader.__delitem__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "KeyError",
    "astropy.io.fits.hdu.compressed.CompImageHeader",
    "int",
    "isinstance",
    "slice",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.compressed.CompImageHeader.__init__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "Header"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.compressed.CompImageHeader.__setitem__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.compressed.CompImageHeader",
    "int",
    "isinstance",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.compressed.CompImageHeader._is_reserved_keyword": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.compressed.warnings",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.compressed.CompImageHeader._relativeinsert": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "Card",
    "astropy.io.fits.hdu.compressed.CompImageHeader",
    "int",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.compressed.CompImageHeader._remap_index": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "int",
    "isinstance",
    "suppress"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.compressed.CompImageHeader._remap_keyword": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "int",
    "suppress"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.compressed.CompImageHeader._update": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "Card._commentary_keywords",
    "astropy.io.fits.hdu.compressed.CompImageHeader",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.compressed.CompImageHeader.append": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "Card",
    "ValueError",
    "astropy.io.fits.hdu.compressed.CompImageHeader",
    "isinstance",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.compressed.CompImageHeader.insert": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "Card",
    "ValueError",
    "astropy.io.fits.hdu.compressed.CompImageHeader",
    "int",
    "isinstance",
    "len",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.compressed.DEFAULT_BLOCK_SIZE": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "astropy.io.fits.hdu.compressed.DEFAULT_BYTE_PIX": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "astropy.io.fits.hdu.compressed.DEFAULT_COMPRESSION_TYPE": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "astropy.io.fits.hdu.compressed.DEFAULT_DITHER_SEED": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "astropy.io.fits.hdu.compressed.DEFAULT_HCOMP_SCALE": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "astropy.io.fits.hdu.compressed.DEFAULT_HCOMP_SMOOTH": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "astropy.io.fits.hdu.compressed.DEFAULT_QUANTIZE_LEVEL": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "astropy.io.fits.hdu.compressed.DEFAULT_QUANTIZE_METHOD": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "astropy.io.fits.hdu.compressed.DITHER_SEED_CHECKSUM": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "astropy.io.fits.hdu.compressed.DITHER_SEED_CLOCK": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "astropy.io.fits.hdu.compressed.NO_DITHER": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "astropy.io.fits.hdu.compressed.QUANTIZE_METHOD_NAMES": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "astropy.io.fits.hdu.compressed.SUBTRACTIVE_DITHER_1": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "astropy.io.fits.hdu.compressed.SUBTRACTIVE_DITHER_2": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "astropy.io.fits.hdu.compressed.TABLE_KEYWORD_NAMES": {
  "data": {
   "shadows": "KEYWORD_NAMES"
  },
  "type": "import"
 },
 "astropy.io.fits.hdu.compressed.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "astropy.io.fits.hdu.compressed.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "astropy.io.fits.hdu.compressed.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "astropy.io.fits.hdu.compressed.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.fits.hdu.compressed.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.io.fits.hdu.compressed.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "astropy.io.fits.hdu.compressed.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.io.fits.hdu.hdulist": {
  "data": {},
  "type": "module"
 },
 "astropy.io.fits.hdu.hdulist.HDUList": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.hdu.hdulist.HDUList.__contains__": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList.__delitem__": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.hdulist.HDUList",
    "isinstance",
    "len",
    "slice",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList.__delslice__": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList.__enter__": {
  "data": {
   "lineno": 393
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList.__exit__": {
  "data": {
   "lineno": 396
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList.__getitem__": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "IndexError",
    "astropy.io.fits.hdu.hdulist.HDUList",
    "astropy.io.fits.hdu.hdulist.sys",
    "isinstance",
    "len",
    "range",
    "slice",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList.__getslice__": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList.__init__": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "TypeError",
    "astropy.io.fits.hdu.hdulist.HDUList",
    "bytes",
    "enumerate",
    "isinstance",
    "list",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList.__iter__": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList.__len__": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.hdulist.HDUList",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList.__repr__": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.hdulist.HDUList",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList.__setitem__": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "_is_int",
    "astropy.io.fits.hdu.hdulist.HDUList",
    "isinstance",
    "list",
    "slice",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList._flush_resize": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": [
    "_File",
    "_get_array_mmap",
    "_tmp_name",
    "astropy.io.fits.hdu.hdulist.bz2",
    "astropy.io.fits.hdu.hdulist.gzip",
    "astropy.io.fits.hdu.hdulist.os",
    "astropy.io.fits.hdu.hdulist.sys",
    "enumerate",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList._flush_update": {
  "data": {
   "lineno": 1196
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList._positive_index_of": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "IndexError",
    "abs",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList._read_next_hdu": {
  "data": {
   "lineno": 1062,
   "symbols_in_volume": [
    "EOFError",
    "IOError",
    "ValueError",
    "astropy.io.fits.hdu.hdulist.HDUList",
    "astropy.io.fits.hdu.hdulist.os",
    "astropy.io.fits.hdu.hdulist.warnings",
    "indent",
    "len",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList._readfrom": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "IOError",
    "_File",
    "classmethod",
    "cls",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList._try_while_unread_hdus": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "Exception",
    "func"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList._verify": {
  "data": {
   "lineno": 1148,
   "symbols_in_volume": [
    "PrimaryHDU",
    "_ErrList",
    "enumerate",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList._verify.fix": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList._wasresized": {
  "data": {
   "lineno": 1332,
   "symbols_in_volume": [
    "IOError",
    "_pad_length",
    "len",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList.append": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "ImageHDU",
    "PrimaryHDU",
    "ValueError",
    "astropy.io.fits.hdu.hdulist.HDUList",
    "isinstance",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList.close": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList.fileinfo": {
  "data": {
   "lineno": 460
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList.filename": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList.flush": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "IOError",
    "KeyError",
    "_free_space_check",
    "astropy.io.fits.hdu.hdulist.os",
    "astropy.io.fits.hdu.hdulist.shutil",
    "astropy.io.fits.hdu.hdulist.warnings",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList.fromfile": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList.fromstring": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList.index_of": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "KeyError",
    "_is_int",
    "enumerate",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList.info": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.hdulist.sys",
    "enumerate",
    "format",
    "format.format",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList.insert": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "ImageHDU",
    "PrimaryHDU",
    "ValueError",
    "astropy.io.fits.hdu.hdulist.HDUList",
    "isinstance",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList.readall": {
  "data": {
   "lineno": 722
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList.update_extend": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "PrimaryHDU",
    "get_first_ext",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList.update_extend.get_first_ext": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.HDUList.writeto": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "AttributeError",
    "_File",
    "_free_space_check",
    "astropy.io.fits.hdu.hdulist.os",
    "astropy.io.fits.hdu.hdulist.warnings",
    "deprecated_renamed_argument",
    "fileobj_closed",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "astropy.io.fits.hdu.hdulist.fitsopen": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "bool"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.hdulist.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "astropy.io.fits.hdu.hdulist.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.fits.hdu.hdulist.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.fits.hdu.hdulist.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.fits.hdu.hdulist.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "astropy.io.fits.hdu.hdulist.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.io.fits.hdu.hdulist.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.io.fits.hdu.image": {
  "data": {},
  "type": "module"
 },
 "astropy.io.fits.hdu.image.ImageHDU": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.image._ImageBaseHDU"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.hdu.image.ImageHDU.__init__": {
  "data": {
   "lineno": 1053,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.image.ImageHDU",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image.ImageHDU._verify": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "_is_int",
    "astropy.io.fits.hdu.image.ImageHDU",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image.ImageHDU.match_header": {
  "data": {
   "lineno": 1100,
   "symbols_in_volume": [
    "classmethod",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image.PrimaryHDU": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.image._ImageBaseHDU"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.hdu.image.PrimaryHDU.__init__": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.image.PrimaryHDU",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image.PrimaryHDU._verify": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.image.PrimaryHDU",
    "bool",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image.PrimaryHDU.match_header": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image.PrimaryHDU.update_header": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.image.PrimaryHDU",
    "len",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image.Section": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.hdu.image.Section.__getitem__": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "Ellipsis",
    "IndexError",
    "_is_int",
    "abs",
    "all",
    "any",
    "astropy.io.fits.hdu.image._IndexInfo",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "next",
    "numpy.integer",
    "range",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image.Section.__init__": {
  "data": {
   "lineno": 871
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image.Section._getdata": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "any",
    "enumerate",
    "int",
    "isinstance",
    "isiterable",
    "numpy.arange",
    "numpy.array",
    "numpy.atleast_1d",
    "numpy.concatenate",
    "range",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image._ImageBaseHDU": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "astropy.io.fits.hdu.image._ImageBaseHDU.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "Header",
    "ValueError",
    "astropy.io.fits.hdu.image._ImageBaseHDU",
    "isinstance",
    "range",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image._ImageBaseHDU._calculate_datasum": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "_is_pseudo_unsigned",
    "_unsigned_zero",
    "astropy.io.fits.hdu.image._ImageBaseHDU",
    "numpy.array",
    "numpy.uint8",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image._ImageBaseHDU._convert_pseudo_unsigned": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.uint64"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image._ImageBaseHDU._dtype_for_bitpix": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image._ImageBaseHDU._get_scaled_image_data": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "len",
    "numpy.array",
    "numpy.multiply",
    "numpy.nan",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image._ImageBaseHDU._prewriteto": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.image._ImageBaseHDU",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image._ImageBaseHDU._scale_internal": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "KeyError",
    "_type",
    "getattr",
    "issubclass",
    "max",
    "min",
    "numpy",
    "numpy.add",
    "numpy.around",
    "numpy.array",
    "numpy.floating",
    "numpy.integer",
    "numpy.isnan",
    "numpy.maximum.reduce",
    "numpy.minimum.reduce",
    "numpy.uint8",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image._ImageBaseHDU._summary": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "all",
    "format",
    "format.rfind",
    "len",
    "reversed",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image._ImageBaseHDU._update_header_scale_info": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image._ImageBaseHDU._verify": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.image._ImageBaseHDU",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image._ImageBaseHDU._verify_blank": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "_is_int",
    "astropy.io.fits.hdu.image.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image._ImageBaseHDU._writedata_internal": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "_is_pseudo_unsigned",
    "_unsigned_zero",
    "astropy.io.fits.hdu.image.sys",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image._ImageBaseHDU.data": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "ValueError",
    "_is_pseudo_unsigned",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image._ImageBaseHDU.header": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image._ImageBaseHDU.is_image": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image._ImageBaseHDU.match_header": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image._ImageBaseHDU.scale": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image._ImageBaseHDU.section": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.image.Section",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image._ImageBaseHDU.shape": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "property",
    "reversed",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image._ImageBaseHDU.update_header": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "KeyError",
    "enumerate",
    "len",
    "list",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image._IndexInfo": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.hdu.image._IndexInfo.__init__": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "IndexError",
    "_is_int",
    "isinstance",
    "isiterable",
    "len",
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.image.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.fits.hdu.image.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.io.fits.hdu.image.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.io.fits.hdu.nonstandard": {
  "data": {},
  "type": "module"
 },
 "astropy.io.fits.hdu.nonstandard.FitsHDU": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "astropy.io.fits.hdu.nonstandard.FitsHDU._summary": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.nonstandard.FitsHDU.fromfile": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.nonstandard.FitsHDU.fromhdulist": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "Header",
    "_File",
    "_pad_length",
    "astropy.io.fits.hdu.nonstandard.gzip",
    "astropy.io.fits.hdu.nonstandard.io",
    "classmethod",
    "enumerate",
    "fileobj_name",
    "hasattr",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.nonstandard.FitsHDU.hdulist": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "astropy.io.fits.hdu.nonstandard.gzip",
    "astropy.io.fits.hdu.nonstandard.io"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.nonstandard.FitsHDU.match_header": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "classmethod",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.nonstandard.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "astropy.io.fits.hdu.nonstandard.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "astropy.io.fits.hdu.streaming": {
  "data": {},
  "type": "module"
 },
 "astropy.io.fits.hdu.streaming.StreamingHDU": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.hdu.streaming.StreamingHDU.__enter__": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.streaming.StreamingHDU.__exit__": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.streaming.StreamingHDU.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "HDUList",
    "PrimaryHDU",
    "TypeError",
    "_BaseHDU",
    "_File",
    "astropy.io.fits.hdu.streaming.gzip",
    "astropy.io.fits.hdu.streaming.os",
    "fileobj_name",
    "hasattr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.streaming.StreamingHDU.close": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.streaming.StreamingHDU.size": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "abs",
    "property",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.streaming.StreamingHDU.write": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "IOError",
    "TypeError",
    "_pad_length"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.hdu.streaming.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "astropy.io.fits.hdu.streaming.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.fits.open": {
  "data": {
   "shadows": "fitsopen"
  },
  "type": "import"
 },
 "astropy.io.fits.py3compat": {
  "data": {
   "symbols_in_volume": [
    "astropy.io.fits.py3compat.chararray",
    "astropy.io.fits.py3compat.decode_ascii",
    "astropy.io.fits.py3compat.encode_ascii",
    "astropy.io.fits.py3compat.numpy"
   ]
  },
  "type": "module"
 },
 "astropy.io.fits.py3compat._chararray": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "astropy.io.fits.py3compat.chararray": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "astropy.io.fits.py3compat._chararray"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.py3compat.chararray.__getitem__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "astropy.io.fits.py3compat.numpy",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.py3compat.decode_ascii": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "TypeError",
    "UnicodeDecodeError",
    "astropy.io.fits.py3compat.numpy",
    "astropy.io.fits.py3compat.warnings",
    "bytes",
    "isinstance",
    "issubclass",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.py3compat.encode_ascii": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "TypeError",
    "astropy.io.fits.py3compat.numpy",
    "isinstance",
    "issubclass",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.py3compat.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.fits.py3compat.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.io.fits.scripts": {
  "data": {},
  "type": "module"
 },
 "astropy.io.fits.scripts.fitscheck": {
  "data": {
   "symbols_in_volume": [
    "astropy.io.fits.scripts.fitscheck.logging",
    "astropy.io.fits.scripts.fitscheck.warnings"
   ]
  },
  "type": "module"
 },
 "astropy.io.fits.scripts.fitscheck.handle_options": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "astropy.io.fits.scripts.fitscheck.optparse",
    "astropy.io.fits.scripts.fitscheck.textwrap",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.scripts.fitscheck.log": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "astropy.io.fits.scripts.fitscheck.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "astropy.io.fits.scripts.fitscheck.main": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "astropy.io.fits.scripts.fitscheck.handle_options",
    "astropy.io.fits.scripts.fitscheck.log",
    "astropy.io.fits.scripts.fitscheck.process_file",
    "astropy.io.fits.scripts.fitscheck.setup_logging",
    "astropy.io.fits.scripts.fitscheck.sys",
    "bool",
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.scripts.fitscheck.optparse": {
  "data": {
   "shadows": "optparse"
  },
  "type": "import"
 },
 "astropy.io.fits.scripts.fitscheck.process_file": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "Exception",
    "astropy.io.fits.scripts.fitscheck.log",
    "astropy.io.fits.scripts.fitscheck.update",
    "astropy.io.fits.scripts.fitscheck.verify_checksums",
    "astropy.io.fits.scripts.fitscheck.verify_compliance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.scripts.fitscheck.setup_logging": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "astropy.io.fits.scripts.fitscheck.log",
    "astropy.io.fits.scripts.fitscheck.logging"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.scripts.fitscheck.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.io.fits.scripts.fitscheck.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "astropy.io.fits.scripts.fitscheck.update": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "astropy.io.fits.scripts.fitscheck.verify_checksums": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "UserWarning",
    "astropy.io.fits.scripts.fitscheck.log",
    "enumerate",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.scripts.fitscheck.verify_compliance": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "astropy.io.fits.scripts.fitscheck.log",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.scripts.fitscheck.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.io.fits.scripts.fitsdiff": {
  "data": {
   "symbols_in_volume": [
    "astropy.io.fits.scripts.fitsdiff.logging"
   ]
  },
  "type": "module"
 },
 "astropy.io.fits.scripts.fitsdiff.EPILOG": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "astropy.io.fits.scripts.fitsdiff.HelpFormatter": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "astropy.io.fits.scripts.fitsdiff.optparse"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.scripts.fitsdiff.HelpFormatter.format_epilog": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "fill"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.scripts.fitsdiff.USAGE": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.io.fits.scripts.fitsdiff.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "astropy.io.fits.scripts.fitsdiff.handle_options": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "astropy.io.fits.scripts.fitsdiff.EPILOG",
    "astropy.io.fits.scripts.fitsdiff.HelpFormatter",
    "astropy.io.fits.scripts.fitsdiff.USAGE",
    "astropy.io.fits.scripts.fitsdiff.optparse",
    "astropy.io.fits.scripts.fitsdiff.textwrap",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.scripts.fitsdiff.handle_options.store_list": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "IOError",
    "astropy.io.fits.scripts.fitsdiff.log",
    "astropy.io.fits.scripts.fitsdiff.os",
    "open",
    "setattr"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.scripts.fitsdiff.log": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "astropy.io.fits.scripts.fitsdiff.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "astropy.io.fits.scripts.fitsdiff.main": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "all",
    "astropy.io.fits.scripts.fitsdiff.handle_options",
    "astropy.io.fits.scripts.fitsdiff.match_files",
    "astropy.io.fits.scripts.fitsdiff.os",
    "astropy.io.fits.scripts.fitsdiff.setup_logging",
    "astropy.io.fits.scripts.fitsdiff.sys",
    "astropy.io.fits.scripts.fitsdiff.warnings",
    "int",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.scripts.fitsdiff.match_files": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "astropy.io.fits.scripts.fitsdiff.glob",
    "astropy.io.fits.scripts.fitsdiff.log",
    "astropy.io.fits.scripts.fitsdiff.os",
    "astropy.io.fits.scripts.fitsdiff.sys",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.scripts.fitsdiff.optparse": {
  "data": {
   "shadows": "optparse"
  },
  "type": "import"
 },
 "astropy.io.fits.scripts.fitsdiff.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.fits.scripts.fitsdiff.setup_logging": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "LevelFilter",
    "astropy.io.fits.scripts.fitsdiff.log",
    "astropy.io.fits.scripts.fitsdiff.logging",
    "astropy.io.fits.scripts.fitsdiff.sys"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.scripts.fitsdiff.setup_logging.LevelFilter": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "astropy.io.fits.scripts.fitsdiff.logging"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.scripts.fitsdiff.setup_logging.LevelFilter.__init__": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "astropy.io.fits.scripts.fitsdiff.logging"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.scripts.fitsdiff.setup_logging.LevelFilter.filter": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "astropy.io.fits.scripts.fitsdiff.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.io.fits.scripts.fitsdiff.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "astropy.io.fits.scripts.fitsdiff.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.io.fits.scripts.fitsheader": {
  "data": {},
  "type": "module"
 },
 "astropy.io.fits.scripts.fitsheader.ExtensionNotFoundException": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.scripts.fitsheader.HeaderFormatter": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.scripts.fitsheader.HeaderFormatter.__init__": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "astropy.io.fits.scripts.fitsheader.HeaderFormatter._get_cards": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "astropy.io.fits.scripts.fitsheader.ExtensionNotFoundException",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.scripts.fitsheader.HeaderFormatter._parse_internal": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "astropy.io.fits.scripts.fitsheader.ExtensionNotFoundException",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.scripts.fitsheader.HeaderFormatter.parse": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.scripts.fitsheader.TableHeaderFormatter": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "astropy.io.fits.scripts.fitsheader.HeaderFormatter"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.scripts.fitsheader.TableHeaderFormatter._parse_internal": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "astropy.io.fits.scripts.fitsheader.ExtensionNotFoundException",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.scripts.fitsheader.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.fits.scripts.fitsheader.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "astropy.io.fits.scripts.fitsheader.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.fits.scripts.fitsheader.main": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "IOError",
    "astropy.io.fits.scripts.fitsheader.argparse",
    "astropy.io.fits.scripts.fitsheader.print_headers_as_table",
    "astropy.io.fits.scripts.fitsheader.print_headers_traditional"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.scripts.fitsheader.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.fits.scripts.fitsheader.print_headers_as_table": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "IOError",
    "astropy.io.fits.scripts.fitsheader.TableHeaderFormatter",
    "astropy.io.fits.scripts.fitsheader.sys",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.scripts.fitsheader.print_headers_traditional": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "IOError",
    "astropy.io.fits.scripts.fitsheader.HeaderFormatter",
    "enumerate",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.scripts.fitsheader.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.io.fits.scripts.fitsinfo": {
  "data": {},
  "type": "module"
 },
 "astropy.io.fits.scripts.fitsinfo.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.fits.scripts.fitsinfo.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "astropy.io.fits.scripts.fitsinfo.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.fits.scripts.fitsinfo.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "astropy.io.fits.scripts.fitsinfo.fitsinfo": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "IOError",
    "astropy.io.fits.info",
    "astropy.log.error",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.scripts.fitsinfo.log": {
  "data": {
   "shadows": "astropy.log"
  },
  "type": "import"
 },
 "astropy.io.fits.scripts.fitsinfo.main": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "astropy.io.fits.scripts.fitsinfo.argparse",
    "astropy.io.fits.scripts.fitsinfo.fitsinfo",
    "enumerate",
    "print"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.scripts.fitsinfo.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.fits.scripts.fitsinfo.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.io.fits.setup_package": {
  "data": {},
  "type": "module"
 },
 "astropy.io.fits.setup_package.Extension": {
  "data": {
   "shadows": "distutils.core.Extension"
  },
  "type": "import"
 },
 "astropy.io.fits.setup_package._get_compression_extension": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "astropy.io.fits.setup_package.os",
    "astropy_helpers.distutils_helpers.get_distutils_build_option",
    "astropy_helpers.setup_helpers.DistutilsExtensionArgs",
    "astropy_helpers.setup_helpers.get_compiler_option",
    "astropy_helpers.setup_helpers.pkg_config",
    "astropy_helpers.setup_helpers.use_system_library",
    "distutils.core.Extension",
    "glob.glob"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.setup_package.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.fits.setup_package.get_distutils_build_option": {
  "data": {
   "shadows": "astropy_helpers.distutils_helpers.get_distutils_build_option"
  },
  "type": "import"
 },
 "astropy.io.fits.setup_package.get_extensions": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "astropy.io.fits.setup_package._get_compression_extension"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.setup_package.get_external_libraries": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "astropy.io.fits.setup_package.get_package_data": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "astropy.io.fits.setup_package.os"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.setup_package.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "astropy.io.fits.setup_package.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.fits.setup_package.requires_2to3": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "astropy.io.fits.setup_package.setup_helpers": {
  "data": {
   "shadows": "astropy_helpers.setup_helpers"
  },
  "type": "import"
 },
 "astropy.io.fits.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.io.fits.tests.FitsTestCase": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.tests.FitsTestCase.copy_file": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "astropy.io.fits.tests.os",
    "astropy.io.fits.tests.shutil",
    "astropy.io.fits.tests.stat"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.FitsTestCase.data": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "astropy.io.fits.tests.os"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.FitsTestCase.setup": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "astropy.io.fits.tests.os",
    "astropy.io.fits.tests.tempfile"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.FitsTestCase.teardown": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "OSError",
    "astropy.io.fits.tests.os",
    "astropy.io.fits.tests.shutil",
    "astropy.io.fits.tests.time",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.FitsTestCase.temp": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "astropy.io.fits.tests.os"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_checksum": {
  "data": {},
  "type": "module"
 },
 "astropy.io.fits.tests.test_checksum.TestChecksumFunctions": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "astropy.io.fits.tests.test_checksum.TestChecksumFunctions._check_checksums": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_checksum.pytest",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_checksum.TestChecksumFunctions.setup": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_checksum.TestChecksumFunctions",
    "astropy.io.fits.tests.test_checksum.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_checksum.TestChecksumFunctions.teardown": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_checksum.TestChecksumFunctions",
    "astropy.io.fits.tests.test_checksum.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_checksum.TestChecksumFunctions.test_append": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_checksum.TestChecksumFunctions.test_ascii_table_data": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_checksum.sys",
    "comparerecords",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_checksum.TestChecksumFunctions.test_binary_table_data": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "comparerecords",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_checksum.TestChecksumFunctions.test_compressed_image_data": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_checksum.TestChecksumFunctions.test_compressed_image_data_float32": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_checksum.sys",
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_checksum.TestChecksumFunctions.test_compressed_image_data_int16": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_checksum.TestChecksumFunctions.test_datasum_only": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_checksum.pytest",
    "hasattr",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_checksum.TestChecksumFunctions.test_groups_hdu_data": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "comparerecords",
    "numpy.arange",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_checksum.TestChecksumFunctions.test_hdu_writeto": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_checksum.TestChecksumFunctions.test_hdu_writeto_existing": {
  "data": {
   "lineno": 338
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_checksum.TestChecksumFunctions.test_image_create": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_checksum.sys",
    "numpy.arange",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_checksum.TestChecksumFunctions.test_nonstandard_checksum": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_checksum.sys",
    "numpy.arange",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_checksum.TestChecksumFunctions.test_open_update_mode_preserve_checksum": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "comparerecords"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_checksum.TestChecksumFunctions.test_open_update_mode_update_checksum": {
  "data": {
   "lineno": 399
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_checksum.TestChecksumFunctions.test_open_with_no_keywords": {
  "data": {
   "lineno": 309
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_checksum.TestChecksumFunctions.test_sample_file": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_checksum.TestChecksumFunctions.test_scaled_data": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_checksum.TestChecksumFunctions.test_scaled_data_auto_rescale": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_checksum.TestChecksumFunctions.test_uint16_data": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "enumerate",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_checksum.TestChecksumFunctions.test_variable_length_table_data": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "comparerecords",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_checksum.TestChecksumFunctions.test_writeto_convenience": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_checksum.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_checksum.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_checksum.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_checksum.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_connect": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.io.fits.tests.test_connect.os"
   ]
  },
  "type": "module"
 },
 "astropy.io.fits.tests.test_connect.DATA": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "astropy.io.fits.tests.test_connect.HAS_PATHLIB": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "astropy.io.fits.tests.test_connect.TestMultipleHDU": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.tests.test_connect.TestMultipleHDU.setup_class": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "BinTableHDU",
    "HDUList",
    "PrimaryHDU",
    "float",
    "int",
    "list",
    "numpy.array",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.TestMultipleHDU.setup_method": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_connect.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.TestMultipleHDU.teardown_class": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.TestMultipleHDU.test_read": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "Table.read",
    "astropy.io.fits.tests.test_connect.equal_data",
    "catch_warnings",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.TestMultipleHDU.test_read_from_hdulist": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "Table.read",
    "astropy.io.fits.tests.test_connect.equal_data",
    "catch_warnings",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.TestMultipleHDU.test_read_from_hdulist_with_hdu_0": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "Table.read",
    "ValueError",
    "astropy.io.fits.tests.test_connect.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.TestMultipleHDU.test_read_from_hdulist_with_hdu_1": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "Table.read",
    "astropy.io.fits.tests.test_connect.equal_data",
    "astropy.io.fits.tests.test_connect.pytest",
    "catch_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.TestMultipleHDU.test_read_from_hdulist_with_hdu_2": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "Table.read",
    "astropy.io.fits.tests.test_connect.equal_data",
    "astropy.io.fits.tests.test_connect.pytest",
    "catch_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.TestMultipleHDU.test_read_from_single_hdu": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "Table.read",
    "astropy.io.fits.tests.test_connect.equal_data",
    "catch_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.TestMultipleHDU.test_read_with_hdu_0": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "Table.read",
    "ValueError",
    "astropy.io.fits.tests.test_connect.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.TestMultipleHDU.test_read_with_hdu_1": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "Table.read",
    "astropy.io.fits.tests.test_connect.equal_data",
    "astropy.io.fits.tests.test_connect.pytest",
    "catch_warnings",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.TestMultipleHDU.test_read_with_hdu_2": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "Table.read",
    "astropy.io.fits.tests.test_connect.equal_data",
    "astropy.io.fits.tests.test_connect.pytest",
    "catch_warnings",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.TestSingleTable": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.tests.test_connect.TestSingleTable.setup_class": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "float",
    "int",
    "list",
    "numpy.array",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.TestSingleTable.test_masked": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "Table",
    "Table.read",
    "astropy.io.fits.tests.test_connect.equal_data",
    "numpy.all",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.TestSingleTable.test_masked_nan": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "Table",
    "Table.read",
    "list",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.nan",
    "numpy.testing.assert_array_almost_equal",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.TestSingleTable.test_read_from_fileobj": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "BinTableHDU",
    "Table.read",
    "astropy.io.fits.tests.test_connect.equal_data",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.TestSingleTable.test_read_with_nonstandard_units": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "BinTableHDU",
    "Table.read",
    "astropy.io.fits.tests.test_connect.equal_data"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.TestSingleTable.test_simple": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "Table",
    "Table.read",
    "astropy.io.fits.tests.test_connect.equal_data",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.TestSingleTable.test_simple_meta": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "Table",
    "Table.read",
    "astropy.io.fits.tests.test_connect.equal_data",
    "isinstance",
    "len",
    "list",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.TestSingleTable.test_simple_meta_conflicting": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "Table",
    "catch_warnings",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.TestSingleTable.test_simple_noextension": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "Table",
    "Table.read",
    "astropy.io.fits.tests.test_connect.equal_data",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.TestSingleTable.test_simple_pathlib": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "Table",
    "Table.read",
    "astropy.io.fits.tests.test_connect.equal_data",
    "astropy.io.fits.tests.test_connect.pathlib",
    "astropy.io.fits.tests.test_connect.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.TestSingleTable.test_with_units": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "Table",
    "astropy.io.fits.tests.test_connect.equal_data",
    "astropy.io.fits.tests.test_connect.pytest",
    "str",
    "table_type",
    "table_type.read"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_connect.equal_data": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_connect.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_connect.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_connect.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_connect.test_bool_column": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "Table",
    "bool",
    "numpy.False_",
    "numpy.all",
    "numpy.dtype",
    "numpy.ones",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.test_convert_comment_convention": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "Table.read",
    "astropy.io.fits.tests.test_connect.DATA",
    "astropy.io.fits.tests.test_connect.os"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.test_masking_regression_1795": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "Table.read",
    "astropy.io.fits.tests.test_connect.DATA",
    "astropy.io.fits.tests.test_connect.os",
    "numpy.all",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.test_scale_error": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "Table",
    "astropy.io.fits.tests.test_connect.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.test_unicode_column": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "Table",
    "UnicodeEncodeError",
    "astropy.io.fits.tests.test_connect.pytest",
    "numpy.all",
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.test_unit_warnings_read_write": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "Table",
    "Table.read",
    "catch_warnings",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_connect.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_connect.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_convenience": {
  "data": {},
  "type": "module"
 },
 "astropy.io.fits.tests.test_convenience.TestConvenience": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "astropy.io.fits.tests.test_convenience.TestConvenience.test_fileobj_not_closed": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_convenience.TestConvenience.test_image_extension_update_header": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_convenience.TestConvenience.test_printdiff": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "IOError",
    "NotImplementedError",
    "ValueError",
    "astropy.io.fits.tests.test_convenience.pytest",
    "printdiff"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_convenience.TestConvenience.test_resource_warning": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ResourceWarning",
    "astropy.io.fits.tests.test_convenience.pytest",
    "astropy.io.fits.tests.test_convenience.warnings",
    "catch_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_convenience.TestConvenience.test_table_to_hdu": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "Table",
    "catch_warnings",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_convenience.TestConvenience.test_table_to_hdu_convert_comment_convention": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "Table",
    "ValueError",
    "astropy.io.fits.tests.test_convenience.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_convenience.TestConvenience.test_table_writeto_header": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.float",
    "numpy.int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_convenience.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_convenience.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_convenience.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_convenience.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_convenience.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_core": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.io.fits.tests.test_core.HAS_PATHLIB": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "astropy.io.fits.tests.test_core.HAVE_STRINGIO": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.io.fits.tests.test_core.StringIO": {
  "data": {
   "shadows": "StringIO"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_core.TestConvenienceFunctions": {
  "data": {
   "lineno": 537
  },
  "type": "class"
 },
 "astropy.io.fits.tests.test_core.TestConvenienceFunctions.test_writeto": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "len",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestConvenienceFunctions.test_writeto_2": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "len",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestCore": {
  "data": {
   "lineno": 42
  },
  "type": "class"
 },
 "astropy.io.fits.tests.test_core.TestCore.test_add_del_columns": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestCore.test_add_del_columns2": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ignore_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestCore.test_byteswap": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestCore.test_combined_verify_options": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "Exception",
    "astropy.io.fits.tests.test_core.warnings",
    "catch_warnings",
    "len",
    "make_invalid_hdu",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestCore.test_combined_verify_options.make_invalid_hdu": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestCore.test_consecutive_writeto": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.all",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestCore.test_exception_on_verification_error": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestCore.test_extension_name_case_sensitive": {
  "data": {
   "lineno": 362
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestCore.test_extname": {
  "data": {
   "lineno": 439
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestCore.test_extver_extlevel": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "TypeError",
    "astropy.io.fits.tests.test_core.pytest",
    "setattr"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestCore.test_fits_file_path_object": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "FITSDiff",
    "astropy.io.fits.tests.test_core.pathlib",
    "astropy.io.fits.tests.test_core.pytest",
    "get_pkg_data_filename"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestCore.test_fix_invalid_keyword_value": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestCore.test_fix_missing_card_append": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestCore.test_getext": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_getext",
    "astropy.io.fits.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestCore.test_hdu_fromstring": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestCore.test_ignore_verification_error": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "Exception",
    "astropy.io.fits.tests.test_core.warnings",
    "catch_warnings"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestCore.test_missing_file": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "IOError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestCore.test_naxisj_check": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestCore.test_nonstandard_hdu": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestCore.test_set_card_value": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestCore.test_uint": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.float32",
    "numpy.uint16"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestCore.test_unfixable_missing_card": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "TestHDU",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestCore.test_unfixable_missing_card.TestHDU": {
  "data": {
   "lineno": 203
  },
  "type": "class"
 },
 "astropy.io.fits.tests.test_core.TestCore.test_unfixable_missing_card.TestHDU._verify": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestCore.test_unfixable_missing_card.TestHDU.match_header": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestCore.test_unrecognized_verify_option": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestCore.test_update_header_card": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestCore.test_with_statement": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions": {
  "data": {
   "lineno": 571
  },
  "type": "class"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions._make_bzip2_file": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_core.bz2",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions._make_gzip_file": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_core.gzip",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions._make_zip_file": {
  "data": {
   "lineno": 1092,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_core.zipfile"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions._test_write_string_bytes_io": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "FITSDiff"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_detect_bzipped": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "ignore_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_detect_gzipped": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "ignore_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_detect_zipped": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "ignore_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_filename_with_colon": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_core.pytest",
    "numpy.all",
    "numpy.arange",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_fileobj_mode_guessing": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.tests.test_core.pytest",
    "len",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_flush_full_disk": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "OSError",
    "astropy.io.fits.tests.test_core.pytest",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_flush_full_disk._writedata": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "OSError"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_flush_full_disk.get_free_space_in_dir": {
  "data": {
   "lineno": 1057
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_mmap_closing": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_core.pytest",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_mmap_unwriteable": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_core.mmap",
    "catch_warnings",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_mmap_unwriteable.MockMmap": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_core.mmap"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_mmap_unwriteable.MockMmap.flush": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_core.mmap"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_open_bzipped": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "ignore_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_open_gzip_file_for_writing": {
  "data": {
   "lineno": 736
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_open_gzipped": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "ignore_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_open_multiple_member_zipfile": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "IOError",
    "astropy.io.fits.tests.test_core.zipfile",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_open_nonexistent": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "IOError",
    "astropy.io.fits.tests.test_core.os",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_open_zipped": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_core.zipfile",
    "ignore_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_open_zipped_writeable": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "IOError",
    "astropy.io.fits.tests.test_core.pytest",
    "astropy.io.fits.tests.test_core.zipfile"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_read_closed_file": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "len",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_read_file_like_object": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_core.io",
    "ignore_warnings",
    "len",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_read_open_astropy_gzip_file": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_core.gzip",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_read_open_file": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "len",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_read_open_gzip_file": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_core.gzip",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_uncloseable_file": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "MyFileLike",
    "numpy.all",
    "open",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_uncloseable_file.MyFileLike": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_uncloseable_file.MyFileLike.__init__": {
  "data": {
   "lineno": 935
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_uncloseable_file.MyFileLike.read": {
  "data": {
   "lineno": 938
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_uncloseable_file.MyFileLike.seek": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_core.os"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_uncloseable_file.MyFileLike.tell": {
  "data": {
   "lineno": 944
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_updated_file_permissions": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_core.os"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_write_bytesio": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_core.io"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_write_read_gzip_file": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_write_stringio": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_core.StringIO",
    "astropy.io.fits.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_write_stringio_discontiguous": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_core.StringIO",
    "astropy.io.fits.tests.test_core.pytest",
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_writeto_append_mode_gzip": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_core.gzip"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_writeto_bzip2_filename": {
  "data": {
   "lineno": 650
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_writeto_bzip2_fileobj": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_core.bz2"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_writeto_full_disk": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "OSError",
    "astropy.io.fits.tests.test_core.pytest",
    "numpy.arange",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_writeto_full_disk._writeto": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "OSError"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestFileFunctions.test_writeto_full_disk.get_free_space_in_dir": {
  "data": {
   "lineno": 1025
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestStreamingFunctions": {
  "data": {
   "lineno": 1109
  },
  "type": "class"
 },
 "astropy.io.fits.tests.test_core.TestStreamingFunctions._make_streaming_hdu": {
  "data": {
   "lineno": 1180
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestStreamingFunctions.test_blank_ignore": {
  "data": {
   "lineno": 1190
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestStreamingFunctions.test_error_if_memmap_impossible": {
  "data": {
   "lineno": 1195,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestStreamingFunctions.test_fix_invalid_extname": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestStreamingFunctions.test_streaming_hdu": {
  "data": {
   "lineno": 1112,
   "symbols_in_volume": [
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestStreamingFunctions.test_streaming_hdu_append_extension": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": [
    "numpy.int32",
    "numpy.zeros",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestStreamingFunctions.test_streaming_hdu_file_wrong_mode": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "ValueError",
    "open",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestStreamingFunctions.test_streaming_hdu_write_file": {
  "data": {
   "lineno": 1128,
   "symbols_in_volume": [
    "len",
    "numpy.int32",
    "numpy.zeros",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.TestStreamingFunctions.test_streaming_hdu_write_file_like": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_core.io",
    "len",
    "numpy.int32",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_core.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_core.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_core.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_core.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_core.mmap": {
  "data": {
   "shadows": "mmap"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_core.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_core.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_core.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_core.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_core.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_core.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_diff": {
  "data": {},
  "type": "module"
 },
 "astropy.io.fits.tests.test_diff.TestDiff": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_asymmetric_duplicate_keywords": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "Header",
    "HeaderDiff"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_common_keywords": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "Header",
    "HeaderDiff"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_deprecation_tolerance": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "Header",
    "HeaderDiff",
    "catch_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_diff_empty_tables": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "Column",
    "FITSDiff"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_diff_nans": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "ImageDataDiff",
    "TableDataDiff",
    "numpy.empty",
    "numpy.float64",
    "numpy.isnan",
    "numpy.nan",
    "numpy.rec.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_diff_types": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_diff.io",
    "report_diff_values"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_different_dimensions": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "ImageDataDiff",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_different_keyword_comments": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "Header",
    "HeaderDiff"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_different_keyword_count": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "Header",
    "HeaderDiff"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_different_keyword_values": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "Header",
    "HeaderDiff"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_different_keyword_values_with_duplicate": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "Header",
    "HeaderDiff"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_different_keywords": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "Header",
    "HeaderDiff"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_different_pixels": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "ImageDataDiff",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_different_table_data": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "Column",
    "TableDataDiff"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_different_table_field_counts": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "Column",
    "TableDataDiff",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_different_table_field_names": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "Column",
    "TableDataDiff",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_different_table_rows": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "Column",
    "TableDataDiff",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_file_output_from_path_string": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "Header",
    "HeaderDiff",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_file_output_overwrite_safety": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "Header",
    "HeaderDiff",
    "IOError",
    "astropy.io.fits.tests.test_diff.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_file_output_overwrite_success": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "Header",
    "HeaderDiff",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_file_output_overwrite_vs_clobber": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "Header",
    "HeaderDiff",
    "catch_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_float_comparison": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_diff.io",
    "numpy.float32",
    "report_diff_values"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_floating_point_atol": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "Header",
    "HeaderDiff"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_floating_point_rtol": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "Header",
    "HeaderDiff"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_identical_comp_image_hdus": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "FITSDiff",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_identical_files_basic": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "FITSDiff",
    "HDUDiff",
    "ImageHDU",
    "PrimaryHDU",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_identical_headers": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "Header",
    "HeaderDiff",
    "TypeError",
    "astropy.io.fits.tests.test_diff.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_identical_tables": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "Column",
    "TableDataDiff",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_identical_within_absolute_tolerance": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "ImageDataDiff",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_identical_within_relative_tolerance": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "ImageDataDiff",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_identical_within_rtol_and_atol": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "ImageDataDiff",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_ignore_blank_cards": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "Header",
    "HeaderDiff"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_ignore_blanks": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "Header",
    "HeaderDiff"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_ignore_keyword_comments": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "Header",
    "HeaderDiff"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_ignore_keyword_values": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "Header",
    "HeaderDiff"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_ignore_table_fields": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "Column",
    "TableDataDiff",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_not_identical_within_rtol_and_atol": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "ImageDataDiff",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_partially_identical_files1": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "FITSDiff",
    "HDUList",
    "ImageHDU",
    "PrimaryHDU",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_partially_identical_files2": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "FITSDiff",
    "HDUList",
    "ImageDataDiff",
    "ImageHDU",
    "PrimaryHDU",
    "isinstance",
    "len",
    "numpy.arange",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_partially_identical_files3": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "BinTableHDU",
    "FITSDiff",
    "HDUList",
    "ImageHDU",
    "PrimaryHDU"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_slightly_different_headers": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "Header",
    "HeaderDiff"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.TestDiff.test_trivial_identical_images": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "ImageDataDiff",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_diff.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_diff.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_diff.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_division": {
  "data": {},
  "type": "module"
 },
 "astropy.io.fits.tests.test_division.TestDivisionFunctions": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "astropy.io.fits.tests.test_division.TestDivisionFunctions.test_card_with_continue": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "catch_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_division.TestDivisionFunctions.test_hdu_get_size": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "catch_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_division.TestDivisionFunctions.test_rec_from_string": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "len",
    "numpy.dtype",
    "numpy.rec.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_division.TestDivisionFunctions.test_section": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "catch_warnings",
    "len",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_division.TestDivisionFunctions.test_valid_hdu_size": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_division.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_fitsdiff": {
  "data": {},
  "type": "module"
 },
 "astropy.io.fits.tests.test_fitsdiff.TestFITSDiff_script": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "astropy.io.fits.tests.test_fitsdiff.TestFITSDiff_script.setup_method": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_fitsdiff.sys"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_fitsdiff.TestFITSDiff_script.teardown_method": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_fitsdiff.sys"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_fitsdiff.TestFITSDiff_script.test_fitsdiff_script_both_d_and_r": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "PrimaryHDU",
    "astropy.io.fits.tests.test_fitsdiff.sys",
    "catch_warnings",
    "numpy.arange",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_fitsdiff.TestFITSDiff_script.test_noargs": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "SystemExit"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_fitsdiff.TestFITSDiff_script.test_nodiff": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "PrimaryHDU",
    "astropy.io.fits.tests.test_fitsdiff.sys",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_fitsdiff.TestFITSDiff_script.test_not_quiet": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "PrimaryHDU",
    "astropy.io.fits.tests.test_fitsdiff.sys",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_fitsdiff.TestFITSDiff_script.test_oneargargs": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "SystemExit",
    "astropy.io.fits.tests.test_fitsdiff.sys"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_fitsdiff.TestFITSDiff_script.test_onediff": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "PrimaryHDU",
    "astropy.io.fits.tests.test_fitsdiff.sys",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_fitsdiff.TestFITSDiff_script.test_quiet": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "PrimaryHDU",
    "astropy.io.fits.tests.test_fitsdiff.sys",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_fitsdiff.TestFITSDiff_script.test_rtol": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "PrimaryHDU",
    "astropy.io.fits.tests.test_fitsdiff.sys",
    "numpy.arange",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_fitsdiff.TestFITSDiff_script.test_rtol_diff": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "PrimaryHDU",
    "astropy.io.fits.tests.test_fitsdiff.sys",
    "numpy.arange",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_fitsdiff.TestFITSDiff_script.test_wildcard": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "SystemExit",
    "astropy.io.fits.tests.test_fitsdiff.sys"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_fitsdiff.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_fitsdiff.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_groups": {
  "data": {},
  "type": "module"
 },
 "astropy.io.fits.tests.test_groups.TestGroupsFunctions": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "astropy.io.fits.tests.test_groups.TestGroupsFunctions.test_create_groupdata": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "comparerecords",
    "len",
    "numpy.arange",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_groups.TestGroupsFunctions.test_duplicate_parameter": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.tests.test_groups.pytest",
    "numpy.arange",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_groups.TestGroupsFunctions.test_group_slice": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_groups.TestGroupsFunctions.test_groupdata_slice": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_groups.TestGroupsFunctions.test_open": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_groups.TestGroupsFunctions.test_open_groups_in_update_mode": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_groups.os",
    "astropy.io.fits.tests.test_groups.time"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_groups.TestGroupsFunctions.test_parnames_round_trip": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_groups.TestGroupsFunctions.test_random_groups_data_update": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_groups.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_groups.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_groups.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_groups.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_groups.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_hdulist": {
  "data": {},
  "type": "module"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_append_extension_to_empty_list": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_append_extension_to_non_empty_list": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_append_groupshdu_to_empty_list": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_append_groupshdu_to_non_empty_list": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.int32",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_append_primary_to_empty_list": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_append_primary_to_non_empty_list": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_append_table_extension_to_empty_list": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_create_from_multiple_primary": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_hdulist.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_extname_in_hdulist": {
  "data": {
   "lineno": 818
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_file_like": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int32",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_file_like_2": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int32",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_file_like_3": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int32",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_filename": {
  "data": {
   "lineno": 338
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_fix_extend_keyword": {
  "data": {
   "lineno": 430
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_fix_malformed_naxisj": {
  "data": {
   "lineno": 440
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_fix_wellformed_naxisj": {
  "data": {
   "lineno": 463
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_flush_readonly": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_hdulist.os",
    "catch_warnings",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_hdu_file_bytes": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_hdul_fromstring": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "TypeError",
    "astropy.io.fits.tests.test_hdulist.glob",
    "astropy.io.fits.tests.test_hdulist.os",
    "astropy.io.fits.tests.test_hdulist.pytest",
    "astropy.io.fits.tests.test_hdulist.sys",
    "ignore_warnings",
    "test_fromstring"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_hdul_fromstring.test_fromstring": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "any",
    "len",
    "numpy.testing.assert_array_equal",
    "open",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_hdulist_file_info": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "test_fileinfo"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_hdulist_file_info.test_fileinfo": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_insert_extension_to_empty_list": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_insert_extension_to_non_empty_list": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_insert_extension_to_primary_in_non_empty_list": {
  "data": {
   "lineno": 302
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_insert_groupshdu_to_begin_of_hdulist_with_groupshdu": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_insert_groupshdu_to_empty_list": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_insert_groupshdu_to_non_empty_list": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.tests.test_hdulist.pytest",
    "numpy.arange",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_insert_image_extension_to_primary_in_non_empty_list": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_insert_primary_to_empty_list": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_insert_primary_to_non_empty_list": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_insert_table_extension_to_empty_list": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_invalid_hdu_key_in_contains": {
  "data": {
   "lineno": 848
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_iteration_of_lazy_loaded_hdulist": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_new_hdu_extname": {
  "data": {
   "lineno": 381
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_new_hdulist_extend_keyword": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_no_resource_warning_raised_on_non_fits_file": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": [
    "OSError",
    "ResourceWarning",
    "astropy.io.fits.tests.test_hdulist.pytest",
    "catch_warnings",
    "len",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_open_file_with_bad_header_padding": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "catch_warnings",
    "len",
    "numpy.arange",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_open_file_with_end_padding": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_hdulist.os",
    "ignore_warnings",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_overwrite_vs_clobber": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "catch_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_proper_error_raised_on_non_fits_file_with_unicode": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "IOError",
    "astropy.io.fits.tests.test_hdulist.codecs",
    "astropy.io.fits.tests.test_hdulist.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_replace_memmaped_array": {
  "data": {
   "lineno": 501
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_replace_mmap_data": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "ignore_warnings",
    "numpy.arange",
    "test"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_replace_mmap_data.test": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_replace_mmap_data_2": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "ignore_warnings",
    "numpy.arange",
    "test"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_replace_mmap_data_2.test": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_save_backup": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_hdulist.os",
    "ignore_warnings"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_update_filelike": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_hdulist.io",
    "len",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_update_name": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_update_resized_header": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_hdulist.platform",
    "astropy.io.fits.tests.test_hdulist.pytest",
    "len",
    "numpy.arange",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_update_resized_header2": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.TestHDUListFunctions.test_update_with_truncated_header": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "len",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_hdulist.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_hdulist.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_hdulist.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_hdulist.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_hdulist.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_hdulist.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_hdulist.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_hdulist.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_header": {
  "data": {},
  "type": "module"
 },
 "astropy.io.fits.tests.test_header.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_header.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions": {
  "data": {
   "lineno": 74
  },
  "type": "class"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_add_commentary": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_append_end_card": {
  "data": {
   "lineno": 1565,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.tests.test_header.pytest",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_append_end_card.setitem": {
  "data": {
   "lineno": 1575
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_assign_boolean": {
  "data": {
   "lineno": 1821,
   "symbols_in_volume": [
    "_pad",
    "numpy.bool_",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_assign_inf_nan": {
  "data": {
   "lineno": 2138,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.tests.test_header.pytest",
    "float",
    "numpy.inf",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_assign_non_ascii": {
  "data": {
   "lineno": 1999,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.tests.test_header.pytest",
    "bytes",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_assign_unicode": {
  "data": {
   "lineno": 1951,
   "symbols_in_volume": [
    "ValueError",
    "_pad",
    "astropy.io.fits.tests.test_header.pytest",
    "repr",
    "u"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_assign_unicode.assign": {
  "data": {
   "lineno": 1964
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_blank_keyword": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "_pad",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_blank_keyword_long_value": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_boolean_value_card": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "_pad",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_card_constructor_default_args": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_card_image_constructed_too_long": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ignore_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_comment_slice_filter_assign": {
  "data": {
   "lineno": 1375,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_comment_slices_and_filters": {
  "data": {
   "lineno": 1365,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_commentary_card_created_by_fromstring": {
  "data": {
   "lineno": 258
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_commentary_card_will_not_parse_numerical_value": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "_pad",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_commentary_cards": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "_pad",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_commentary_comparison": {
  "data": {
   "lineno": 1443
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_commentary_slicing": {
  "data": {
   "lineno": 1390,
   "symbols_in_volume": [
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_complex_number_using_string_input": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "_pad",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_complex_value_card": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "_pad",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_constructor_filter_illegal_data_structures": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.tests.test_header.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_continue_card_with_equals_in_value": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "_pad"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_end_in_comment": {
  "data": {
   "lineno": 1911,
   "symbols_in_volume": [
    "ignore_warnings",
    "len",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_equal_only_up_to_column_10": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "_pad",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_equal_sign_after_column8": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "_pad",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_final_continue_card_ampersand_removal_on_long_comments": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_final_continue_card_lacks_ampersand": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "_pad",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_fix_hierarch_with_invalid_value": {
  "data": {
   "lineno": 2127,
   "symbols_in_volume": [
    "_pad",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_fix_invalid_equal_sign": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "_pad",
    "catch_warnings",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_fixable_non_fsc": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_fixable_non_standard_fits_card": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "_pad",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_floating_point_value_card": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "_pad",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_append_keyword_only": {
  "data": {
   "lineno": 1252,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_append_use_blanks": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_clear": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_comments": {
  "data": {
   "lineno": 1359,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_count": {
  "data": {
   "lineno": 1215,
   "symbols_in_volume": [
    "KeyError",
    "astropy.io.fits.tests.test_header.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_dict_like_pop": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "astropy.io.fits.tests.test_header.pytest",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_extend": {
  "data": {
   "lineno": 1089,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_extend_exact": {
  "data": {
   "lineno": 1203
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_extend_unique": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_extend_unique_commentary": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_extend_update": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_extend_update_commentary": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_fromkeys": {
  "data": {
   "lineno": 924
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_fromkeys_with_duplicates": {
  "data": {
   "lineno": 948
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_fromkeys_with_value": {
  "data": {
   "lineno": 933
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_fromkeys_with_value_and_comment": {
  "data": {
   "lineno": 942
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_fromtextfile": {
  "data": {
   "lineno": 1525,
   "symbols_in_volume": [
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_fromtextfile_with_end_card": {
  "data": {
   "lineno": 1543,
   "symbols_in_volume": [
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_history": {
  "data": {
   "lineno": 912
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_insert_before_keyword": {
  "data": {
   "lineno": 1295,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_insert_use_blanks": {
  "data": {
   "lineno": 1275,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_items": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "iteritems",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_iter": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_iterkeys": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": [
    "iterkeys",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_itervalues": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "itervalues",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_keys": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_list_like_pop": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "IndexError",
    "astropy.io.fits.tests.test_header.pytest",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_method_keyword_normalization": {
  "data": {
   "lineno": 1854,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_set_value_to_none": {
  "data": {
   "lineno": 787
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_setitem_1tuple": {
  "data": {
   "lineno": 766
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_setitem_2tuple": {
  "data": {
   "lineno": 776
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_setitem_invalid": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.tests.test_header.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_setitem_invalid.test": {
  "data": {
   "lineno": 761
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_slice": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_slice_assignment": {
  "data": {
   "lineno": 829
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_slice_delete": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_header_strip_whitespace": {
  "data": {
   "lineno": 2021
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_hierarch_card_creation": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "_pad",
    "catch_warnings",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_hierarch_card_delete": {
  "data": {
   "lineno": 614
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_hierarch_card_insert_delete": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_hierarch_card_lookup": {
  "data": {
   "lineno": 604
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_hierarch_create_and_update": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "catch_warnings",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_hierarch_keyword_whitespace": {
  "data": {
   "lineno": 541
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_hierarch_with_abbrev_value_indicator": {
  "data": {
   "lineno": 531
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_illegal_characters_in_key": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "_pad",
    "catch_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_invalid_characters": {
  "data": {
   "lineno": 1657,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_header.pytest",
    "catch_warnings",
    "len",
    "numpy.arange",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_invalid_end_cards": {
  "data": {
   "lineno": 1584,
   "symbols_in_volume": [
    "catch_warnings",
    "invalid_header",
    "len",
    "numpy.arange",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_invalid_end_cards.invalid_header": {
  "data": {
   "lineno": 1596,
   "symbols_in_volume": [
    "_pad_length",
    "bytes",
    "io.BytesIO",
    "io.StringIO",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_invalid_float_cards": {
  "data": {
   "lineno": 1725,
   "symbols_in_volume": [
    "_pad",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_invalid_float_cards2": {
  "data": {
   "lineno": 1771,
   "symbols_in_volume": [
    "catch_warnings",
    "encode_ascii",
    "len",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_invalid_keyword_cards": {
  "data": {
   "lineno": 2085,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.tests.test_header.pytest",
    "catch_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_keep_duplicate_history_in_orig_header": {
  "data": {
   "lineno": 2052
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_keyword_too_long": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "UserWarning",
    "astropy.io.fits.tests.test_header.pytest",
    "astropy.io.fits.tests.test_header.warnings",
    "catch_warnings"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_leading_zeros": {
  "data": {
   "lineno": 1799,
   "symbols_in_volume": [
    "_pad",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_long_commentary_card": {
  "data": {
   "lineno": 1459,
   "symbols_in_volume": [
    "len",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_long_integer_value_card": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "_pad",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_long_string_from_file": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_long_string_repr": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_long_string_value": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_long_string_value_via_fromstring": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "_pad",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_long_unicode_string": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "catch_warnings",
    "len",
    "str",
    "u"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_mislocated_equal_sign": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "_pad",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_missing_keyword": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "KeyError",
    "astropy.io.fits.tests.test_header.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_newlines_in_commentary": {
  "data": {
   "lineno": 2256,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.tests.test_header.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_popitem": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "KeyError",
    "astropy.io.fits.tests.test_header.pytest",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_remove": {
  "data": {
   "lineno": 1332,
   "symbols_in_volume": [
    "KeyError",
    "astropy.io.fits.tests.test_header.pytest",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_rename_keyword": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_set_comment_only": {
  "data": {
   "lineno": 799
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_setdefault": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_short_hierarch_create_and_update": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "catch_warnings",
    "len",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_specify_undefined_value": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "_pad",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_string_value_card": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "_pad",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_totxtfile": {
  "data": {
   "lineno": 1496,
   "symbols_in_volume": [
    "ignore_warnings",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_undefined_value_using_string_input": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "_pad",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_unnecessary_move": {
  "data": {
   "lineno": 1685,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_update": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "FakeHeader",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_update.FakeHeader": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_update.FakeHeader.__getitem__": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "next"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_update.FakeHeader.keys": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_update_bool": {
  "data": {
   "lineno": 2153,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "numpy.bool_"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_update_comment": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.tests.test_header.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_update_commentary": {
  "data": {
   "lineno": 1421
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_update_from_dict": {
  "data": {
   "lineno": 1052
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_update_from_iterable": {
  "data": {
   "lineno": 1075
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_update_numeric": {
  "data": {
   "lineno": 2181,
   "symbols_in_volume": [
    "complex",
    "float",
    "int",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_verify_invalid_equal_sign": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "catch_warnings",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_verify_mixed_case_hierarch": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_wildcard_slice": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_wildcard_slice_assignment": {
  "data": {
   "lineno": 883
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_wildcard_slice_deletion": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_wildcard_with_hyphen": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestHeaderFunctions.test_word_in_long_string_too_long": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestRecordValuedKeywordCards": {
  "data": {
   "lineno": 2296
  },
  "type": "class"
 },
 "astropy.io.fits.tests.test_header.TestRecordValuedKeywordCards.setup": {
  "data": {
   "lineno": 2306,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_header.TestRecordValuedKeywordCards",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestRecordValuedKeywordCards.test_access_nonexistent_rvkc": {
  "data": {
   "lineno": 2446,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "astropy.io.fits.tests.test_header.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestRecordValuedKeywordCards.test_field_specifier_case_senstivity": {
  "data": {
   "lineno": 2398
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestRecordValuedKeywordCards.test_fitsheader_script": {
  "data": {
   "lineno": 2675,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestRecordValuedKeywordCards.test_fitsheader_table_feature": {
  "data": {
   "lineno": 2715,
   "symbols_in_volume": [
    "len",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestRecordValuedKeywordCards.test_get_rvkc_by_index": {
  "data": {
   "lineno": 2413,
   "symbols_in_volume": [
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestRecordValuedKeywordCards.test_get_rvkc_by_keyword": {
  "data": {
   "lineno": 2424
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestRecordValuedKeywordCards.test_get_rvkc_by_keyword_and_field_specifier": {
  "data": {
   "lineno": 2436,
   "symbols_in_volume": [
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestRecordValuedKeywordCards.test_initialize_rvkc": {
  "data": {
   "lineno": 2318,
   "symbols_in_volume": [
    "ignore_warnings"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestRecordValuedKeywordCards.test_overly_aggressive_rvkc_lookup": {
  "data": {
   "lineno": 2650,
   "symbols_in_volume": [
    "KeyError",
    "astropy.io.fits.tests.test_header.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestRecordValuedKeywordCards.test_overly_permissive_parsing": {
  "data": {
   "lineno": 2613,
   "symbols_in_volume": [
    "_pad",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestRecordValuedKeywordCards.test_parse_field_specifier": {
  "data": {
   "lineno": 2371
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestRecordValuedKeywordCards.test_pattern_matching_key_deletion": {
  "data": {
   "lineno": 2554,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestRecordValuedKeywordCards.test_pattern_matching_keys": {
  "data": {
   "lineno": 2524,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestRecordValuedKeywordCards.test_raw_keyword_value": {
  "data": {
   "lineno": 2480
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestRecordValuedKeywordCards.test_rvkc_delete": {
  "data": {
   "lineno": 2503,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestRecordValuedKeywordCards.test_rvkc_in_cardlist_keys": {
  "data": {
   "lineno": 2585,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestRecordValuedKeywordCards.test_rvkc_in_cardlist_values": {
  "data": {
   "lineno": 2594,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestRecordValuedKeywordCards.test_rvkc_insert_after": {
  "data": {
   "lineno": 2493
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestRecordValuedKeywordCards.test_rvkc_value_attribute": {
  "data": {
   "lineno": 2603,
   "symbols_in_volume": [
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestRecordValuedKeywordCards.test_successive_pattern_matching": {
  "data": {
   "lineno": 2564,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestRecordValuedKeywordCards.test_update_field_specifier": {
  "data": {
   "lineno": 2383,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestRecordValuedKeywordCards.test_update_rvkc": {
  "data": {
   "lineno": 2461,
   "symbols_in_volume": [
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.TestRecordValuedKeywordCards.test_update_rvkc_2": {
  "data": {
   "lineno": 2471
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_header.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_header.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_header.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_header.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_header.test_init_with_dict": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.test_init_with_header": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.test_init_with_ordereddict": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "all",
    "astropy.io.fits.tests.test_header.collections",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.test_shallow_copy": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_header.copy"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_header.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_header.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_image": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.io.fits.tests.test_image.HAS_SCIPY": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "astropy.io.fits.tests.test_image.TestCompressedImage": {
  "data": {
   "lineno": 1095
  },
  "type": "class"
 },
 "astropy.io.fits.tests.test_image.TestCompressedImage.test_comp_image": {
  "data": {
   "lineno": 1119,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_image.pytest",
    "numpy.float32",
    "numpy.zeros",
    "sum"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestCompressedImage.test_comp_image_hcompress_image_stack": {
  "data": {
   "lineno": 1186,
   "symbols_in_volume": [
    "ignore_warnings",
    "numpy.abs",
    "numpy.arange",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestCompressedImage.test_comp_image_hcompression_1_invalid_data": {
  "data": {
   "lineno": 1174,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.tests.test_image.pytest",
    "ignore_warnings",
    "numpy.float32",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestCompressedImage.test_comp_image_quantize_level": {
  "data": {
   "lineno": 1144,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_image.pytest",
    "astropy.io.fits.tests.test_image.scipy",
    "numpy.array_equal",
    "numpy.isclose",
    "numpy.max",
    "numpy.min",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestCompressedImage.test_compressed_header_missing_znaxis": {
  "data": {
   "lineno": 1740,
   "symbols_in_volume": [
    "TypeError",
    "astropy.io.fits.tests.test_image.pytest",
    "numpy.arange",
    "numpy.uint16"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestCompressedImage.test_compressed_scaled_float": {
  "data": {
   "lineno": 1751,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_image.pytest",
    "numpy.arange",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestCompressedImage.test_compression_column_tforms": {
  "data": {
   "lineno": 1444,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_image.re",
    "numpy.arange",
    "numpy.float32",
    "numpy.newaxis",
    "numpy.random.seed",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestCompressedImage.test_compression_header_append": {
  "data": {
   "lineno": 1547,
   "symbols_in_volume": [
    "catch_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestCompressedImage.test_compression_header_append2": {
  "data": {
   "lineno": 1569,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestCompressedImage.test_compression_header_append_commentary": {
  "data": {
   "lineno": 1642,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestCompressedImage.test_compression_header_insert": {
  "data": {
   "lineno": 1583,
   "symbols_in_volume": [
    "catch_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestCompressedImage.test_compression_header_set_before_after": {
  "data": {
   "lineno": 1610,
   "symbols_in_volume": [
    "catch_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestCompressedImage.test_compression_update_header": {
  "data": {
   "lineno": 1463,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestCompressedImage.test_compression_update_header_with_reserved": {
  "data": {
   "lineno": 1526,
   "symbols_in_volume": [
    "test_set_keyword"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestCompressedImage.test_compression_update_header_with_reserved.test_set_keyword": {
  "data": {
   "lineno": 1532,
   "symbols_in_volume": [
    "catch_warnings",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestCompressedImage.test_compression_with_gzip_column": {
  "data": {
   "lineno": 1655,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.linspace",
    "numpy.random.normal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestCompressedImage.test_disable_image_compression": {
  "data": {
   "lineno": 1232,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_image.warnings",
    "catch_warnings",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestCompressedImage.test_duplicate_compression_header_keywords": {
  "data": {
   "lineno": 1679,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestCompressedImage.test_empty": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.all",
    "numpy.arange",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestCompressedImage.test_lossless_gzip_compression": {
  "data": {
   "lineno": 1420,
   "symbols_in_volume": [
    "ignore_warnings",
    "numpy.abs",
    "numpy.random.normal"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestCompressedImage.test_open_comp_image_in_update_mode": {
  "data": {
   "lineno": 1246,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_image.os",
    "astropy.io.fits.tests.test_image.time"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestCompressedImage.test_open_scaled_in_update_mode_compressed": {
  "data": {
   "lineno": 1266,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_image.os",
    "astropy.io.fits.tests.test_image.time",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestCompressedImage.test_rewriting_large_scaled_image_compressed": {
  "data": {
   "lineno": 1329,
   "symbols_in_volume": [
    "ignore_warnings"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestCompressedImage.test_scale_back_compressed": {
  "data": {
   "lineno": 1379,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_image.math",
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestCompressedImage.test_scale_back_compressed_uint_assignment": {
  "data": {
   "lineno": 1722,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.arange",
    "numpy.uint16"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestCompressedImage.test_scale_bzero_with_compressed_int_data": {
  "data": {
   "lineno": 1703,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.arange",
    "numpy.int16"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestCompressedImage.test_subtractive_dither_seed": {
  "data": {
   "lineno": 1207,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestCompressedImage.test_write_comp_hdu_direct_from_existing": {
  "data": {
   "lineno": 1319,
   "symbols_in_volume": [
    "comparerecords",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_append_uint_data": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_blanks": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "numpy.int32",
    "numpy.isnan",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_bzero_with_floats": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_constructor_copies_header": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_constructor_name_arg": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_do_not_scale_image_data": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_image_none": {
  "data": {
   "lineno": 998
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_image_update_header": {
  "data": {
   "lineno": 901
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_invalid_blank": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "catch_warnings",
    "len",
    "numpy.all",
    "numpy.arange",
    "numpy.float64",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_invalid_blanks": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "catch_warnings",
    "len",
    "numpy.all",
    "numpy.arange",
    "numpy.float64",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_io_manipulation": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.tests.test_image.os",
    "astropy.io.fits.tests.test_image.platform",
    "astropy.io.fits.tests.test_image.pytest",
    "numpy.array",
    "numpy.array_equal",
    "numpy.float32",
    "numpy.int16",
    "numpy.ones",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_memory_mapping": {
  "data": {
   "lineno": 311
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_open": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "IndexError",
    "astropy.io.fits.tests.test_image.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_open_2": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_open_3": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "IndexError",
    "astropy.io.fits.tests.test_image.pytest",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_open_scaled_in_update_mode": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_image.os",
    "astropy.io.fits.tests.test_image.time",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_primary_with_extname": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_rewriting_large_scaled_image": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "ignore_warnings"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_scale_back": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_image.math",
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_scale_back_uint_assignment": {
  "data": {
   "lineno": 1079,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.arange",
    "numpy.uint16"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_scale_back_with_blanks": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "catch_warnings",
    "len",
    "numpy.arange",
    "numpy.int32",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_scale_bzero_with_int_data": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.arange",
    "numpy.int16"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_scale_with_explicit_bzero_bscale": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_scaled_image_fromfile": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.arange",
    "numpy.float32",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_section": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_section_data_cube": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_section_data_four": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_section_data_scaled": {
  "data": {
   "lineno": 582
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_section_data_single": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_section_data_square": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_set_data": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_uint_header_consistency": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange",
    "numpy.empty",
    "numpy.uint64"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_uint_header_keywords_removed_after_bitpix_change": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_image.pytest",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.TestImageFunctions.test_verification_on_output": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "catch_warnings",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_image.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_image.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_image.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_image.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_image.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_image.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_image.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_image.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_image.scipy.misc": {
  "data": {
   "shadows": "scipy.misc"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_image.test_bzero_implicit_casting_compressed": {
  "data": {
   "lineno": 1823,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_image.os"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.test_bzero_mishandled_info": {
  "data": {
   "lineno": 1839,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.test_comphdu_bscale": {
  "data": {
   "lineno": 1783,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.random.random",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.test_image_write_readonly": {
  "data": {
   "lineno": 1852,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.test_scale_implicit_casting": {
  "data": {
   "lineno": 1814,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_image.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_image.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_image.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_nonstandard": {
  "data": {},
  "type": "module"
 },
 "astropy.io.fits.tests.test_nonstandard.TestNonstandardHdus": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "astropy.io.fits.tests.test_nonstandard.TestNonstandardHdus._test_create_fitshdu": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_nonstandard.TestNonstandardHdus.test_create_fitshdu": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_nonstandard.TestNonstandardHdus.test_create_fitshdu_from_filename": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "len",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_nonstandard.TestNonstandardHdus.test_create_fitshdu_with_compression": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_nonstandard.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_structured": {
  "data": {},
  "type": "module"
 },
 "astropy.io.fits.tests.test_structured.TestStructured": {
  "data": {
   "lineno": 73
  },
  "type": "class"
 },
 "astropy.io.fits.tests.test_structured.TestStructured.test_structured": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_structured.compare_arrays",
    "astropy.io.fits.tests.test_structured.get_test_data",
    "numpy.all",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_structured.compare_arrays": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.tests.test_structured.sys",
    "numpy.ndarray",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_structured.get_test_data": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.random.random",
    "numpy.random.seed",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_structured.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_structured.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_table": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.io.fits.tests.test_table.HAVE_OBJGRAPH": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "astropy.io.fits.tests.test_table.TestColumnFunctions": {
  "data": {
   "lineno": 2721
  },
  "type": "class"
 },
 "astropy.io.fits.tests.test_table.TestColumnFunctions.test_column_array_type_mismatch": {
  "data": {
   "lineno": 2828
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestColumnFunctions.test_column_attribute_change_after_removal": {
  "data": {
   "lineno": 2889,
   "symbols_in_volume": [
    "KeyError",
    "astropy.io.fits.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestColumnFunctions.test_column_format_interpretation": {
  "data": {
   "lineno": 2722,
   "symbols_in_volume": [
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestColumnFunctions.test_column_lookup_by_name": {
  "data": {
   "lineno": 2878
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestColumnFunctions.test_new_coldefs_with_invalid_seqence": {
  "data": {
   "lineno": 2835,
   "symbols_in_volume": [
    "TypeError",
    "astropy.io.fits.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestColumnFunctions.test_p_column_deepcopy": {
  "data": {
   "lineno": 2951,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_table.copy",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestColumnFunctions.test_pickle": {
  "data": {
   "lineno": 2842,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_table.comparerecords",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestColumnFunctions.test_x_column_deepcopy": {
  "data": {
   "lineno": 2938,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_table.copy",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestColumnFunctions.test_zero_precision_float_column": {
  "data": {
   "lineno": 2809,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.dtype",
    "numpy.rec.recarray.field"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions": {
  "data": {
   "lineno": 109
  },
  "type": "class"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_add_data_by_rows": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "id",
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_adding_a_column": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_table.comparerecords",
    "numpy.array",
    "numpy.float32",
    "numpy.rec.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_appending_a_column": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_table.comparerecords",
    "len",
    "numpy.array",
    "numpy.float32",
    "numpy.rec.array",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_array_broadcasting": {
  "data": {
   "lineno": 1937,
   "symbols_in_volume": [
    "container",
    "list",
    "numpy.all",
    "numpy.array",
    "numpy.array_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_array_slicing": {
  "data": {
   "lineno": 1921,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_table.comparerecords",
    "isinstance",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_array_slicing_readonly": {
  "data": {
   "lineno": 1954,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_table.comparerecords",
    "isinstance",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_ascii_table": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_table.comparerecords",
    "dict",
    "numpy.array",
    "numpy.char.array",
    "numpy.dtype",
    "numpy.rec.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_assign_multiple_rows_to_table": {
  "data": {
   "lineno": 1009,
   "symbols_in_volume": [
    "id",
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_attribute_field_shadowing": {
  "data": {
   "lineno": 2056
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_bin_table_hdu_constructor": {
  "data": {
   "lineno": 1402,
   "symbols_in_volume": [
    "id",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_bin_table_init_from_string_array_column": {
  "data": {
   "lineno": 1707,
   "symbols_in_volume": [
    "catch_warnings",
    "len",
    "numpy.array",
    "test_dims_and_roundtrip"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_bin_table_init_from_string_array_column.test_dims_and_roundtrip": {
  "data": {
   "lineno": 1732,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_bin_table_with_logical_array": {
  "data": {
   "lineno": 1533,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bool"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_binary_table": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_table.comparerecords",
    "numpy.array",
    "numpy.rec.array",
    "numpy.rec.recarray.field",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_bintable_to_asciitable": {
  "data": {
   "lineno": 2274,
   "symbols_in_volume": [
    "ignore_warnings",
    "numpy.all",
    "numpy.float32",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_blank_field_zero": {
  "data": {
   "lineno": 2153,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.isnan",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_bool_column_update": {
  "data": {
   "lineno": 2111
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_column_array_type_mismatch": {
  "data": {
   "lineno": 2200
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_column_endianness": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_columns_with_truncating_tdim": {
  "data": {
   "lineno": 1756,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_constructor_copies_header": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_constructor_name_arg": {
  "data": {
   "lineno": 1495,
   "symbols_in_volume": [
    "hducls"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_dim_column_byte_order_mismatch": {
  "data": {
   "lineno": 2346,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_dump_clobber_vs_overwrite": {
  "data": {
   "lineno": 2498,
   "symbols_in_volume": [
    "catch_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_dump_load_array_colums": {
  "data": {
   "lineno": 1993,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_table.comparerecords",
    "numpy.rec.array",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_dump_load_round_trip": {
  "data": {
   "lineno": 1972,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_table.comparerecords",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_endianness": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ndarray",
    "object"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_fits_rec_column_access": {
  "data": {
   "lineno": 1552
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_fits_rec_from_existing": {
  "data": {
   "lineno": 2364,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_table.comparerecords",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_fits_record_len": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "len",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_load_guess_format": {
  "data": {
   "lineno": 2014,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_table.comparerecords",
    "numpy.array",
    "numpy.bool",
    "numpy.complex128",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_mask_array": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_table.re",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_merge_tables": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_table.comparerecords",
    "numpy.array",
    "numpy.float32",
    "numpy.rec.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_mismatched_tform_and_tdim": {
  "data": {
   "lineno": 1863,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_table.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_missing_tnull": {
  "data": {
   "lineno": 2127,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.tests.test_table.pytest",
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_modify_column_attributes": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "float",
    "int",
    "list",
    "numpy.array",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_multi_dimensional_columns": {
  "data": {
   "lineno": 1642,
   "symbols_in_volume": [
    "ignore_warnings",
    "numpy.array",
    "numpy.rec.array",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_new_fitsrec": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "numpy.append",
    "numpy.array",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_new_table_from_recarray": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_table.comparerecords",
    "id",
    "ignore_warnings",
    "numpy.array",
    "numpy.float64",
    "numpy.int16",
    "numpy.rec.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_new_table_with_fits_rec": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.array",
    "numpy.ndarray",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_new_table_with_nd_column": {
  "data": {
   "lineno": 1836,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_new_table_with_ndarray": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "id",
    "numpy.array",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_numpy_ndarray_to_bintablehdu": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_table.comparerecords",
    "numpy.array",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_numpy_ndarray_to_bintablehdu_with_unicode": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_table.comparerecords",
    "numpy.array",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_open": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_table.comparerecords",
    "numpy.array",
    "numpy.char.array",
    "numpy.float32",
    "numpy.rec.array",
    "numpy.uint8",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_pickle": {
  "data": {
   "lineno": 2296,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_table.comparerecords",
    "ignore_warnings",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_recarray_to_bintablehdu": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_table.comparerecords",
    "numpy.rec.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_reference_leak": {
  "data": {
   "lineno": 2453,
   "symbols_in_volume": [
    "TestCore",
    "TestMultipleHDU",
    "astropy.io.fits.tests.test_table._refcounting",
    "astropy.io.fits.tests.test_table.pytest",
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_reference_leak.readfile": {
  "data": {
   "lineno": 2443
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_slice_a_row": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "KeyError",
    "astropy.io.fits.tests.test_table.pytest",
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_slicing": {
  "data": {
   "lineno": 1903,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_string_array_round_trip": {
  "data": {
   "lineno": 1802,
   "symbols_in_volume": [
    "len",
    "numpy.char.decode",
    "numpy.rec.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_string_column_padding": {
  "data": {
   "lineno": 1607,
   "symbols_in_volume": [
    "ignore_warnings",
    "numpy.char.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_table_from_bool_fields": {
  "data": {
   "lineno": 2081,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_table.comparerecords",
    "numpy.rec.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_table_from_bool_fields2": {
  "data": {
   "lineno": 2099,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_table_from_columns_of_other_table": {
  "data": {
   "lineno": 2247,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_table.comparerecords",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_table_none": {
  "data": {
   "lineno": 2207,
   "symbols_in_volume": [
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_table_with_zero_width_column": {
  "data": {
   "lineno": 1560,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_table.comparefloats",
    "numpy.array",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_tdim_of_size_one": {
  "data": {
   "lineno": 1897
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_unicode_colname": {
  "data": {
   "lineno": 1524
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_unncessary_table_load": {
  "data": {
   "lineno": 2226,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_table.comparerecords",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_update_string_column_inplace": {
  "data": {
   "lineno": 2396,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_verify_data_references": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "id",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestTableFunctions.test_zero_length_table": {
  "data": {
   "lineno": 2333,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestVLATables": {
  "data": {
   "lineno": 2531
  },
  "type": "class"
 },
 "astropy.io.fits.tests.test_table.TestVLATables.test_copy_vla": {
  "data": {
   "lineno": 2667,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_table.comparerecords",
    "numpy.arange",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestVLATables.test_extend_variable_length_array": {
  "data": {
   "lineno": 2553,
   "symbols_in_volume": [
    "test"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestVLATables.test_extend_variable_length_array.test": {
  "data": {
   "lineno": 2556,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestVLATables.test_getdata_vla": {
  "data": {
   "lineno": 2645,
   "symbols_in_volume": [
    "test"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestVLATables.test_getdata_vla.test": {
  "data": {
   "lineno": 2648,
   "symbols_in_volume": [
    "ignore_warnings",
    "numpy.arange",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestVLATables.test_variable_length_columns": {
  "data": {
   "lineno": 2534,
   "symbols_in_volume": [
    "test"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestVLATables.test_variable_length_columns.test": {
  "data": {
   "lineno": 2535,
   "symbols_in_volume": [
    "ignore_warnings",
    "numpy.array",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestVLATables.test_variable_length_table_format_pa_from_list": {
  "data": {
   "lineno": 2628,
   "symbols_in_volume": [
    "test"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestVLATables.test_variable_length_table_format_pa_from_list.test": {
  "data": {
   "lineno": 2629,
   "symbols_in_volume": [
    "ignore_warnings",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestVLATables.test_variable_length_table_format_pa_from_object_array": {
  "data": {
   "lineno": 2610,
   "symbols_in_volume": [
    "test"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestVLATables.test_variable_length_table_format_pa_from_object_array.test": {
  "data": {
   "lineno": 2611,
   "symbols_in_volume": [
    "ignore_warnings",
    "len",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestVLATables.test_variable_length_table_format_pd_from_list": {
  "data": {
   "lineno": 2592,
   "symbols_in_volume": [
    "test"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestVLATables.test_variable_length_table_format_pd_from_list.test": {
  "data": {
   "lineno": 2593,
   "symbols_in_volume": [
    "ignore_warnings",
    "len",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestVLATables.test_variable_length_table_format_pd_from_object_array": {
  "data": {
   "lineno": 2575,
   "symbols_in_volume": [
    "test"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.TestVLATables.test_variable_length_table_format_pd_from_object_array.test": {
  "data": {
   "lineno": 2576,
   "symbols_in_volume": [
    "ignore_warnings",
    "len",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table._refcounting": {
  "data": {
   "lineno": 2514,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_table.contextlib",
    "astropy.io.fits.tests.test_table.gc",
    "astropy.io.fits.tests.test_table.objgraph",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.chararray": {
  "data": {
   "shadows": "numpy.char"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_table.comparefloats": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.absolute",
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.comparerecords": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_table.comparefloats",
    "decode_ascii",
    "isinstance",
    "len",
    "numpy.any",
    "numpy.floating",
    "print",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_table.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_table.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_table.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_table.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_table.objgraph": {
  "data": {
   "shadows": "objgraph"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_table.pickle": {
  "data": {
   "shadows": "cPickle"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_table.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_table.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_table.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_table.test_regression_5383": {
  "data": {
   "lineno": 2974,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.test_table_to_hdu": {
  "data": {
   "lineno": 2985,
   "symbols_in_volume": [
    "Table",
    "catch_warnings",
    "len",
    "numpy.array_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_table.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_uint": {
  "data": {},
  "type": "module"
 },
 "astropy.io.fits.tests.test_uint.TestUintFunctions": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "astropy.io.fits.tests.test_uint.TestUintFunctions.setup_class": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "classmethod",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_uint.TestUintFunctions.test_uint": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_uint.platform",
    "astropy.io.fits.tests.test_uint.pytest",
    "ignore_warnings",
    "int",
    "numpy.array",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_uint.TestUintFunctions.test_uint_columns": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_uint.platform",
    "astropy.io.fits.tests.test_uint.pytest",
    "ignore_warnings",
    "int",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_uint.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_uint.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_uint.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_util": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.io.fits.tests.test_util.HAS_PIL": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "astropy.io.fits.tests.test_util.Image": {
  "data": {
   "shadows": "PIL.Image"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_util.TestUtilMode": {
  "data": {
   "lineno": 73
  },
  "type": "class"
 },
 "astropy.io.fits.tests.test_util.TestUtilMode.test_mode_gzip": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "astropy.io.fits.tests.test_util.gzip",
    "sys.version_info.major",
    "sys.version_info.minor"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_util.TestUtilMode.test_mode_normal_buffering": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "open",
    "sys.version_info.major",
    "sys.version_info.minor"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_util.TestUtilMode.test_mode_normal_no_buffering": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "open",
    "sys.version_info.major",
    "sys.version_info.minor"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_util.TestUtilMode.test_mode_normalization": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_util.TestUtilMode.test_mode_pil_image": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "PIL.Image.fromarray",
    "PIL.Image.open",
    "astropy.io.fits.tests.test_util.pytest",
    "numpy.random.randint",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_util.TestUtilMode.test_mode_strings": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_util.TestUtils": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "astropy.io.fits.tests.test_util.TestUtils.test_ignore_sigint": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "astropy.io.fits.tests.test_util.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_util.TestUtils.test_ignore_sigint.test": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "UserWarning",
    "astropy.io.fits.tests.test_util.os",
    "astropy.io.fits.tests.test_util.signal",
    "catch_warnings",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_util.TestUtils.test_realign_dtype": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int8",
    "realign_dtype"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.tests.test_util.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_util.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_util.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_util.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_util.version_info": {
  "data": {
   "shadows": "sys.version_info"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.test_util.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "astropy.io.fits.tests.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "astropy.io.fits.util": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.io.fits.util.string",
    "numpy.integer",
    "str.maketrans"
   ]
  },
  "type": "module"
 },
 "astropy.io.fits.util.CHUNKED_FROMFILE": {
  "data": {
   "lineno": 593
  },
  "type": "constant"
 },
 "astropy.io.fits.util.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "astropy.io.fits.util.NotifierMixin": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.util.NotifierMixin.__getstate__": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "AttributeError",
    "astropy.io.fits.util.NotifierMixin",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util.NotifierMixin._add_listener": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "astropy.io.fits.util.weakref",
    "id"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util.NotifierMixin._notify": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "callable",
    "getattr",
    "hasattr",
    "listener",
    "method"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util.NotifierMixin._remove_listener": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "KeyError",
    "id",
    "suppress"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util.StringIO": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.util._OSX_WRITE_LIMIT": {
  "data": {
   "lineno": 630
  },
  "type": "constant"
 },
 "astropy.io.fits.util._WIN_WRITE_LIMIT": {
  "data": {
   "lineno": 631
  },
  "type": "constant"
 },
 "astropy.io.fits.util._array_from_file": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "astropy.io.fits.util.CHUNKED_FROMFILE",
    "astropy.io.fits.util.isfile",
    "astropy.io.fits.util.platform",
    "astropy.io.fits.util.sys",
    "distutils.version.LooseVersion",
    "int",
    "min",
    "numpy.dtype",
    "numpy.empty",
    "numpy.fromfile",
    "numpy.fromstring",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util._array_to_file": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "astropy.io.fits.util._OSX_WRITE_LIMIT",
    "astropy.io.fits.util._WIN_WRITE_LIMIT",
    "astropy.io.fits.util.isfile",
    "astropy.io.fits.util.sys",
    "numpy.ndarray",
    "write"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util._array_to_file_like": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "TypeError",
    "astropy.io.fits.util.sys",
    "hasattr",
    "len",
    "numpy",
    "numpy.nditer"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util._convert_array": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "numpy.issubdtype",
    "numpy.number"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util._extract_number": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.io.fits.util._str_to_num",
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util._fileobj_normalize_mode": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "astropy.io.fits.util.gzip",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util._free_space_check": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "OSError",
    "astropy.io.fits.util.os",
    "contextlib.contextmanager",
    "isinstance",
    "list",
    "numpy.sum",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util._get_array_mmap": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "astropy.io.fits.util.mmap",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util._is_int": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "astropy.io.fits.util.all_integer_types",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util._is_pseudo_unsigned": {
  "data": {
   "lineno": 778
  },
  "type": "function"
 },
 "astropy.io.fits.util._str_to_num": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util._tmp_name": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "astropy.io.fits.util.os",
    "astropy.io.fits.util.tempfile",
    "input"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util._unsigned_zero": {
  "data": {
   "lineno": 768
  },
  "type": "function"
 },
 "astropy.io.fits.util._words_group": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "Exception",
    "input",
    "input.count",
    "len",
    "max",
    "numpy.fromstring",
    "numpy.nonzero",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util._write_string": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "StringIO.StringIO",
    "astropy.io.fits.util.decode_ascii",
    "astropy.io.fits.util.encode_ascii",
    "astropy.io.fits.util.fileobj_is_binary",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util.all_integer_types": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "astropy.io.fits.util.cmp": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "astropy.io.fits.util.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "astropy.io.fits.util.decode_ascii": {
  "data": {
   "lineno": 294
  },
  "type": "function"
 },
 "astropy.io.fits.util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.fits.util.encode_ascii": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "astropy.io.fits.util.fileobj_closed": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util.fileobj_is_binary": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "astropy.io.fits.util.fileobj_mode",
    "astropy.io.fits.util.io",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util.fileobj_mode": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "astropy.io.fits.util._fileobj_normalize_mode",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util.fileobj_name": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "astropy.io.fits.util.gzip",
    "hasattr",
    "isinstance",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util.fileobj_open": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util.fill": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "maybe_fill"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util.fill.maybe_fill": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "all",
    "astropy.io.fits.util.textwrap",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util.first": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "iter",
    "next"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "astropy.io.fits.util.ignore_sigint": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "astropy.io.fits.util.ignore_sigint.wrapped": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "SigintHandler",
    "astropy.io.fits.util.signal",
    "astropy.io.fits.util.threading",
    "func",
    "wraps"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util.ignore_sigint.wrapped.SigintHandler": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.util.ignore_sigint.wrapped.SigintHandler.__call__": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "astropy.io.fits.util.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util.ignore_sigint.wrapped.SigintHandler.__init__": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "astropy.io.fits.util.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "astropy.io.fits.util.isfile": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "astropy.io.fits.util.io",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util.isreadable": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util.iswritable": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util.itersubclasses": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "TypeError",
    "astropy.io.fits.util.operator",
    "isinstance",
    "set",
    "sorted",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "astropy.io.fits.util.maketrans": {
  "data": {
   "lineno": 560
  },
  "type": "constant"
 },
 "astropy.io.fits.util.mmap": {
  "data": {
   "shadows": "mmap"
  },
  "type": "import"
 },
 "astropy.io.fits.util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.fits.util.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "astropy.io.fits.util.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.fits.util.pairwise": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "astropy.io.fits.util.itertools",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "astropy.io.fits.util.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "astropy.io.fits.util.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "astropy.io.fits.util.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.io.fits.util.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "astropy.io.fits.util.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "astropy.io.fits.util.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "astropy.io.fits.util.translate": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.util.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.io.fits.util.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "astropy.io.fits.verify": {
  "data": {},
  "type": "module"
 },
 "astropy.io.fits.verify.VERIFY_OPTIONS": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "astropy.io.fits.verify.VerifyError": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.verify.VerifyWarning": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "astropy.io.fits.verify._ErrList": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.verify._ErrList.__init__": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "astropy.io.fits.verify._ErrList.__new__": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.verify._ErrList.__str__": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "astropy.io.fits.verify._ErrList.iter_lines": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "StopIteration",
    "astropy.io.fits.verify._ErrList",
    "filter",
    "indent",
    "isinstance",
    "next"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.verify._Verify": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.fits.verify._Verify.run_option": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "fix"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.verify._Verify.verify": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.verify.VERIFY_OPTIONS",
    "astropy.io.fits.verify.VerifyError",
    "astropy.io.fits.verify.VerifyWarning",
    "astropy.io.fits.verify.operator",
    "astropy.io.fits.verify.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.io.fits.verify.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "astropy.io.fits.verify.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.io.fits.verify.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.io.misc": {
  "data": {},
  "type": "module"
 },
 "astropy.io.misc.connect": {
  "data": {},
  "type": "module"
 },
 "astropy.io.misc.connect.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.misc.connect.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.misc.connect.io_registry": {
  "data": {
   "shadows": "registry"
  },
  "type": "import"
 },
 "astropy.io.misc.connect.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.misc.connect.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.io.misc.hdf5": {
  "data": {},
  "type": "module"
 },
 "astropy.io.misc.hdf5.HDF5_SIGNATURE": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.io.misc.hdf5.META_KEY": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "astropy.io.misc.hdf5.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "astropy.io.misc.hdf5._find_all_structured_arrays": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "astropy.io.misc.hdf5._find_all_structured_arrays.append_structured_arrays": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "astropy.io.misc.hdf5.h5py",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.hdf5.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.misc.hdf5.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.misc.hdf5.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "astropy.io.misc.hdf5.is_hdf5": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ImportError",
    "astropy.io.misc.hdf5.HDF5_SIGNATURE",
    "astropy.io.misc.hdf5.h5py",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.hdf5.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.misc.hdf5.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.misc.hdf5.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.misc.hdf5.read_table_hdf5": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "IOError",
    "ImportError",
    "KeyError",
    "Table",
    "TypeError",
    "ValueError",
    "astropy.io.misc.hdf5.META_KEY",
    "astropy.io.misc.hdf5._find_all_structured_arrays",
    "astropy.io.misc.hdf5.h5py",
    "astropy.io.misc.hdf5.warnings",
    "dict",
    "hasattr",
    "input",
    "input.attrs",
    "input.name",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "setattr"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.hdf5.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.io.misc.hdf5.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.io.misc.hdf5.write_table_hdf5": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "Exception",
    "IOError",
    "ImportError",
    "KeyError",
    "TypeError",
    "ValueError",
    "astropy.io.misc.hdf5.META_KEY",
    "astropy.io.misc.hdf5.h5py",
    "astropy.io.misc.hdf5.os",
    "astropy.io.misc.hdf5.warnings",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.pickle_helpers": {
  "data": {},
  "type": "module"
 },
 "astropy.io.misc.pickle_helpers.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "astropy.io.misc.pickle_helpers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.misc.pickle_helpers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.misc.pickle_helpers.fnpickle": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "cPickle.HIGHEST_PROTOCOL",
    "cPickle.dump",
    "isinstance",
    "object",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.pickle_helpers.fnunpickle": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "EOFError",
    "cPickle.load",
    "isinstance",
    "open",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.pickle_helpers.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "astropy.io.misc.pickle_helpers.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.misc.pickle_helpers.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.io.misc.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.io.misc.tests.test_hdf5": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "numpy.bool",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8"
   ]
  },
  "type": "module"
 },
 "astropy.io.misc.tests.test_hdf5.ALL_DTYPES": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "astropy.io.misc.tests.test_hdf5.HAS_H5PY": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "astropy.io.misc.tests.test_hdf5.HAS_YAML": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.io.misc.tests.test_hdf5._default_values": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.bool"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "astropy.io.misc.tests.test_hdf5.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.misc.tests.test_hdf5.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.misc.tests.test_hdf5.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.io.misc.tests.test_hdf5.test_metadata_too_large": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "Column",
    "Table",
    "astropy.io.misc.tests.test_hdf5.pytest",
    "catch_warnings",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_preserve_all_dtypes": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "Column",
    "Table",
    "Table.read",
    "astropy.io.misc.tests.test_hdf5.ALL_DTYPES",
    "astropy.io.misc.tests.test_hdf5._default_values",
    "astropy.io.misc.tests.test_hdf5.pytest",
    "numpy.all",
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_preserve_meta": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "Column",
    "Table",
    "Table.read",
    "astropy.io.misc.tests.test_hdf5.pytest",
    "numpy.all",
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_preserve_serialized": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "Column",
    "Table",
    "Table.read",
    "astropy.io.misc.tests.test_hdf5.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_preserve_single_dtypes": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "Column",
    "Table",
    "Table.read",
    "astropy.io.misc.tests.test_hdf5.ALL_DTYPES",
    "astropy.io.misc.tests.test_hdf5._default_values",
    "astropy.io.misc.tests.test_hdf5.pytest",
    "numpy.all",
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_read_fileobj": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "Column",
    "Table",
    "Table.read",
    "astropy.io.misc.tests.test_hdf5.h5py",
    "astropy.io.misc.tests.test_hdf5.pytest",
    "numpy.all",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_read_filobj_group_path": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "Column",
    "Table",
    "Table.read",
    "astropy.io.misc.tests.test_hdf5.h5py",
    "astropy.io.misc.tests.test_hdf5.pytest",
    "numpy.all",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_read_filobj_path": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "Column",
    "Table",
    "Table.read",
    "astropy.io.misc.tests.test_hdf5.h5py",
    "astropy.io.misc.tests.test_hdf5.pytest",
    "numpy.all",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_read_h5py_objects": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "Column",
    "Table",
    "Table.read",
    "astropy.io.misc.tests.test_hdf5.h5py",
    "astropy.io.misc.tests.test_hdf5.pytest",
    "numpy.all",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_read_invalid_path": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "Column",
    "IOError",
    "Table",
    "Table.read",
    "astropy.io.misc.tests.test_hdf5.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_read_missing_group": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "IOError",
    "Table.read",
    "astropy.io.misc.tests.test_hdf5.h5py",
    "astropy.io.misc.tests.test_hdf5.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_read_missing_group_fileobj": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "IOError",
    "Table.read",
    "astropy.io.misc.tests.test_hdf5.h5py",
    "astropy.io.misc.tests.test_hdf5.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_read_missing_table": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "IOError",
    "Table.read",
    "astropy.io.misc.tests.test_hdf5.h5py",
    "astropy.io.misc.tests.test_hdf5.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_read_nopath": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "Column",
    "Table",
    "Table.read",
    "astropy.io.misc.tests.test_hdf5.pytest",
    "numpy.all",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_read_notable_nopath": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "Table.read",
    "ValueError",
    "astropy.io.misc.tests.test_hdf5.h5py",
    "astropy.io.misc.tests.test_hdf5.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_read_write_existing": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "Column",
    "IOError",
    "Table",
    "astropy.io.misc.tests.test_hdf5.h5py",
    "astropy.io.misc.tests.test_hdf5.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_read_write_existing_append": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "Column",
    "Table",
    "Table.read",
    "astropy.io.misc.tests.test_hdf5.h5py",
    "astropy.io.misc.tests.test_hdf5.pytest",
    "numpy.all",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_read_write_existing_append_groups": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "Column",
    "Table",
    "Table.read",
    "astropy.io.misc.tests.test_hdf5.h5py",
    "astropy.io.misc.tests.test_hdf5.pytest",
    "numpy.all",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_read_write_existing_append_overwrite": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "Column",
    "IOError",
    "Table",
    "Table.read",
    "astropy.io.misc.tests.test_hdf5.pytest",
    "numpy.all",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_read_write_existing_overwrite": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "Column",
    "Table",
    "Table.read",
    "astropy.io.misc.tests.test_hdf5.h5py",
    "astropy.io.misc.tests.test_hdf5.pytest",
    "numpy.all",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_read_write_existing_table": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "Column",
    "IOError",
    "Table",
    "astropy.io.misc.tests.test_hdf5.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_read_write_memory": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "Column",
    "Table",
    "Table.read",
    "astropy.io.misc.tests.test_hdf5.h5py",
    "astropy.io.misc.tests.test_hdf5.pytest",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_read_write_simple": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "Column",
    "Table",
    "Table.read",
    "astropy.io.misc.tests.test_hdf5.pytest",
    "numpy.all",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_read_wrong_fileobj": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "FakeFile",
    "Table.read",
    "TypeError",
    "astropy.io.misc.tests.test_hdf5.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_read_wrong_fileobj.FakeFile": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.misc.tests.test_hdf5.test_read_wrong_fileobj.FakeFile.read": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_skip_meta": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "Column",
    "Table",
    "astropy.io.misc.tests.test_hdf5.pytest",
    "catch_warnings",
    "len",
    "numpy.array",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_write_fileobj": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "Column",
    "Table",
    "Table.read",
    "astropy.io.misc.tests.test_hdf5.h5py",
    "astropy.io.misc.tests.test_hdf5.pytest",
    "numpy.all",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_write_filobj_group": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "Column",
    "Table",
    "Table.read",
    "astropy.io.misc.tests.test_hdf5.h5py",
    "astropy.io.misc.tests.test_hdf5.pytest",
    "numpy.all",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_write_invalid_path": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "Column",
    "Table",
    "ValueError",
    "astropy.io.misc.tests.test_hdf5.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_write_nopath": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "Column",
    "Table",
    "ValueError",
    "astropy.io.misc.tests.test_hdf5.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.test_write_wrong_type": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "Column",
    "Table",
    "TypeError",
    "astropy.io.misc.tests.test_hdf5.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_hdf5.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "astropy.io.misc.tests.test_pickle_helpers": {
  "data": {},
  "type": "module"
 },
 "astropy.io.misc.tests.test_pickle_helpers.ToBePickled": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.misc.tests.test_pickle_helpers.ToBePickled.__eq__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "astropy.io.misc.tests.test_pickle_helpers.ToBePickled",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_pickle_helpers.ToBePickled.__init__": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_pickle_helpers.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "astropy.io.misc.tests.test_pickle_helpers.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.io.misc.tests.test_pickle_helpers.test_fnpickling_class": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "astropy.io.misc.tests.test_pickle_helpers.ToBePickled",
    "fnpickle",
    "fnunpickle",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_pickle_helpers.test_fnpickling_many": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "EOFError",
    "astropy.io.misc.tests.test_pickle_helpers.pytest",
    "fnpickle",
    "fnunpickle",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_pickle_helpers.test_fnpickling_protocol": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "astropy.io.misc.tests.test_pickle_helpers.ToBePickled",
    "astropy.io.misc.tests.test_pickle_helpers.pickle",
    "fnpickle",
    "fnunpickle",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_pickle_helpers.test_fnpickling_simple": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "fnpickle",
    "fnunpickle",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_yaml": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.io.misc.tests.test_yaml.pytest"
   ]
  },
  "type": "module"
 },
 "astropy.io.misc.tests.test_yaml.HAS_YAML": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "astropy.io.misc.tests.test_yaml._get_time": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "EarthLocation",
    "Time",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_yaml.compare_coord": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "getattr",
    "list",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_yaml.compare_time": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "getattr",
    "numpy.all",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_yaml.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.misc.tests.test_yaml.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.io.misc.tests.test_yaml.pytestmark": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "astropy.io.misc.tests.test_yaml.test_ecsv_astropy_objects_in_meta": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "EarthLocation",
    "QTable",
    "QTable.read",
    "SkyCoord",
    "StringIO",
    "Time",
    "astropy.io.misc.tests.test_yaml._get_time",
    "astropy.io.misc.tests.test_yaml.compare_coord",
    "astropy.io.misc.tests.test_yaml.compare_time",
    "astropy.io.misc.tests.test_yaml.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_yaml.test_load_all": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "EarthLocation",
    "SkyCoord",
    "Time",
    "astropy.io.misc.tests.test_yaml._get_time",
    "astropy.io.misc.tests.test_yaml.compare_coord",
    "astropy.io.misc.tests.test_yaml.compare_time",
    "dump",
    "list",
    "load_all"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_yaml.test_ndarray_subclasses": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "Angle",
    "Latitude",
    "Longitude",
    "astropy.io.misc.tests.test_yaml.pytest",
    "dump",
    "hasattr",
    "load",
    "numpy.all",
    "numpy.array",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_yaml.test_numpy_types": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "astropy.io.misc.tests.test_yaml.pytest",
    "dump",
    "load",
    "numpy.bool",
    "numpy.complex",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.complex_",
    "numpy.float",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_yaml.test_serialized_column": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "SerializedColumn",
    "dump",
    "load"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_yaml.test_skycoord": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "EarthLocation",
    "SkyCoord",
    "Time",
    "astropy.io.misc.tests.test_yaml.compare_coord",
    "astropy.io.misc.tests.test_yaml.pytest",
    "dump",
    "load"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_yaml.test_time": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "astropy.io.misc.tests.test_yaml._get_time",
    "astropy.io.misc.tests.test_yaml.compare_time",
    "dump",
    "load"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_yaml.test_timedelta": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "astropy.io.misc.tests.test_yaml._get_time",
    "dump",
    "getattr",
    "load",
    "numpy.all",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_yaml.test_unit": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "astropy.io.misc.tests.test_yaml.pytest",
    "dump",
    "isinstance",
    "load"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.tests.test_yaml.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.io.misc.yaml": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "SerializedColumn",
    "astropy.io.misc.yaml.AstropyDumper",
    "astropy.io.misc.yaml.AstropyLoader",
    "astropy.io.misc.yaml._complex_constructor",
    "astropy.io.misc.yaml._complex_representer",
    "astropy.io.misc.yaml._ndarray_constructor",
    "astropy.io.misc.yaml._ndarray_representer",
    "astropy.io.misc.yaml._quantity_constructor",
    "astropy.io.misc.yaml._quantity_representer",
    "astropy.io.misc.yaml._serialized_column_constructor",
    "astropy.io.misc.yaml._serialized_column_representer",
    "astropy.io.misc.yaml._skycoord_constructor",
    "astropy.io.misc.yaml._skycoord_representer",
    "astropy.io.misc.yaml._time_constructor",
    "astropy.io.misc.yaml._time_representer",
    "astropy.io.misc.yaml._timedelta_constructor",
    "astropy.io.misc.yaml._timedelta_representer",
    "astropy.io.misc.yaml._unit_constructor",
    "astropy.io.misc.yaml._unit_representer",
    "astropy.io.misc.yaml.yaml",
    "minversion",
    "numpy.bool_",
    "numpy.complex",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.complex_",
    "numpy.float",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.float_",
    "numpy.int",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.int_",
    "numpy.intc",
    "numpy.intp",
    "numpy.longdouble",
    "numpy.ndarray",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "tuple"
   ]
  },
  "type": "module"
 },
 "astropy.io.misc.yaml.AstropyDumper": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "astropy.io.misc.yaml.YAML_LT_3_12",
    "astropy.io.misc.yaml.yaml"
   ]
  },
  "type": "class"
 },
 "astropy.io.misc.yaml.AstropyDumper._represent_tuple": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "astropy.io.misc.yaml.AstropyDumper.ignore_aliases": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.yaml.AstropyLoader": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "astropy.io.misc.yaml.yaml"
   ]
  },
  "type": "class"
 },
 "astropy.io.misc.yaml.AstropyLoader._construct_python_tuple": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.yaml.AstropyLoader._construct_python_unicode": {
  "data": {
   "lineno": 223
  },
  "type": "function"
 },
 "astropy.io.misc.yaml.YAML_LT_3_12": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "astropy.io.misc.yaml.__all__": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "astropy.io.misc.yaml._complex_constructor": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "complex",
    "map"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.yaml._complex_representer": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "astropy.io.misc.yaml._ndarray_constructor": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "astropy.io.misc.yaml.base64",
    "map",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.yaml._ndarray_representer": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "astropy.io.misc.yaml.base64",
    "dict",
    "numpy.ascontiguousarray",
    "numpy.isfortran",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.yaml._quantity_constructor": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "astropy.io.misc.yaml._quantity_constructor.constructor": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "map"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.yaml._quantity_representer": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "astropy.io.misc.yaml._quantity_representer.representer": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "astropy.io.misc.yaml._serialized_column_constructor": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "SerializedColumn",
    "map"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.yaml._serialized_column_representer": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "astropy.io.misc.yaml._skycoord_constructor": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "map"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.yaml._skycoord_representer": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "map"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.yaml._time_constructor": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "map"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.yaml._time_representer": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "astropy.io.misc.yaml._timedelta_constructor": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "map"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.yaml._timedelta_representer": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "astropy.io.misc.yaml._unit_constructor": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "map"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.yaml._unit_representer": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.yaml.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.misc.yaml.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "astropy.io.misc.yaml.coords": {
  "data": {
   "shadows": "coordinates"
  },
  "type": "import"
 },
 "astropy.io.misc.yaml.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.misc.yaml.dump": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "astropy.io.misc.yaml.AstropyDumper",
    "astropy.io.misc.yaml.yaml"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.yaml.load": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "astropy.io.misc.yaml.AstropyLoader",
    "astropy.io.misc.yaml.yaml"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.yaml.load_all": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "astropy.io.misc.yaml.AstropyLoader",
    "astropy.io.misc.yaml.yaml"
   ]
  },
  "type": "function"
 },
 "astropy.io.misc.yaml.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.misc.yaml.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.io.misc.yaml.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "astropy.io.setup_package": {
  "data": {},
  "type": "module"
 },
 "astropy.io.setup_package.requires_2to3": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "astropy.io.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.io.tests.test_registry": {
  "data": {
   "symbols_in_volume": [
    "copy.copy"
   ]
  },
  "type": "module"
 },
 "astropy.io.tests.test_registry.TestData": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "classmethod",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.tests.test_registry.TestSubclass": {
  "data": {
   "lineno": 366
  },
  "type": "class"
 },
 "astropy.io.tests.test_registry.TestSubclass.test_read_table_subclass": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "Table.read",
    "numpy.all",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.TestSubclass.test_read_table_subclass.MyTable": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "Table"
   ]
  },
  "type": "class"
 },
 "astropy.io.tests.test_registry.TestSubclass.test_write_table_subclass": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "MyTable",
    "StringIO",
    "astropy.io.tests.test_registry.os"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.TestSubclass.test_write_table_subclass.MyTable": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "Table"
   ]
  },
  "type": "class"
 },
 "astropy.io.tests.test_registry._IDENTIFIERS_ORIGINAL": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "astropy.io.tests.test_registry._READERS_ORIGINAL": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "astropy.io.tests.test_registry._WRITERS_ORIGINAL": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.io.tests.test_registry.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.tests.test_registry.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "astropy.io.tests.test_registry.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.tests.test_registry.empty_identifier": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.empty_reader": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "astropy.io.tests.test_registry.TestData"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.empty_writer": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.io_registry": {
  "data": {
   "shadows": "registry"
  },
  "type": "import"
 },
 "astropy.io.tests.test_registry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.tests.test_registry.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.tests.test_registry.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.tests.test_registry.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.io.tests.test_registry.setup_function": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.teardown_function": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "astropy.io.tests.test_registry._IDENTIFIERS_ORIGINAL",
    "astropy.io.tests.test_registry._READERS_ORIGINAL",
    "astropy.io.tests.test_registry._WRITERS_ORIGINAL"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_get_reader_invalid": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "astropy.io.tests.test_registry.TestData",
    "astropy.io.tests.test_registry.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_get_writer_invalid": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "astropy.io.tests.test_registry.TestData",
    "astropy.io.tests.test_registry.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_identifier_origin": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "astropy.io.tests.test_registry.TestData",
    "astropy.io.tests.test_registry.empty_reader",
    "astropy.io.tests.test_registry.empty_writer",
    "astropy.io.tests.test_registry.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_non_existing_unknown_ext": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "IOError",
    "Table.read",
    "astropy.io.tests.test_registry.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_read_basic_table": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "Table",
    "Table.read",
    "int",
    "list",
    "numpy.array",
    "range",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_read_format_noreader": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "astropy.io.tests.test_registry.TestData",
    "astropy.io.tests.test_registry.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_read_identifier": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "astropy.io.tests.test_registry.TestData",
    "astropy.io.tests.test_registry.pytest",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_read_invalid_return": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "TypeError",
    "astropy.io.tests.test_registry.TestData",
    "astropy.io.tests.test_registry.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_read_noformat": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "astropy.io.tests.test_registry.TestData",
    "astropy.io.tests.test_registry.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_read_noformat_arbitrary": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "astropy.io.tests.test_registry.TestData",
    "astropy.io.tests.test_registry._IDENTIFIERS_ORIGINAL",
    "astropy.io.tests.test_registry.pytest",
    "object",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_read_noformat_arbitrary_file": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "astropy.io.tests.test_registry._READERS_ORIGINAL",
    "astropy.io.tests.test_registry.pytest",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_read_toomanyformats": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "astropy.io.tests.test_registry.TestData",
    "astropy.io.tests.test_registry.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_read_valid_return": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "astropy.io.tests.test_registry.TestData",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_register_identifier": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "astropy.io.tests.test_registry.TestData",
    "astropy.io.tests.test_registry.empty_identifier"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_register_identifier_force": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "astropy.io.tests.test_registry.TestData",
    "astropy.io.tests.test_registry.empty_identifier"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_register_identifier_invalid": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "astropy.io.tests.test_registry.TestData",
    "astropy.io.tests.test_registry.empty_identifier",
    "astropy.io.tests.test_registry.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_register_reader": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "astropy.io.tests.test_registry.TestData",
    "astropy.io.tests.test_registry.empty_reader",
    "astropy.io.tests.test_registry.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_register_reader_force": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "astropy.io.tests.test_registry.TestData",
    "astropy.io.tests.test_registry.empty_reader"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_register_reader_invalid": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "astropy.io.tests.test_registry.TestData",
    "astropy.io.tests.test_registry.empty_reader",
    "astropy.io.tests.test_registry.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_register_readers_with_same_name_on_different_classes": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "Table",
    "Table.read",
    "astropy.io.tests.test_registry.TestData",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_register_writer": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "astropy.io.tests.test_registry.TestData",
    "astropy.io.tests.test_registry.empty_writer",
    "astropy.io.tests.test_registry.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_register_writer_force": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "astropy.io.tests.test_registry.TestData",
    "astropy.io.tests.test_registry.empty_writer"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_register_writer_invalid": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "astropy.io.tests.test_registry.TestData",
    "astropy.io.tests.test_registry.empty_writer",
    "astropy.io.tests.test_registry.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_unregister_identifier_invalid": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "astropy.io.tests.test_registry.TestData",
    "astropy.io.tests.test_registry.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_unregister_reader_invalid": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "astropy.io.tests.test_registry.TestData",
    "astropy.io.tests.test_registry.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_unregister_writer_invalid": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "astropy.io.tests.test_registry.TestData",
    "astropy.io.tests.test_registry.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_write_format_nowriter": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "astropy.io.tests.test_registry.TestData",
    "astropy.io.tests.test_registry.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_write_identifier": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "astropy.io.tests.test_registry.TestData",
    "astropy.io.tests.test_registry.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_write_noformat": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "astropy.io.tests.test_registry.TestData",
    "astropy.io.tests.test_registry.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_write_noformat_arbitrary": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "astropy.io.tests.test_registry.TestData",
    "astropy.io.tests.test_registry._IDENTIFIERS_ORIGINAL",
    "astropy.io.tests.test_registry.pytest",
    "object",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_write_noformat_arbitrary_file": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "Table",
    "astropy.io.tests.test_registry._WRITERS_ORIGINAL",
    "astropy.io.tests.test_registry.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.test_write_toomanyformats": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "astropy.io.tests.test_registry.TestData",
    "astropy.io.tests.test_registry.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.tests.test_registry.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.io.votable": {
  "data": {
   "symbols_in_volume": [
    "astropy.io.votable.Conf"
   ]
  },
  "type": "module"
 },
 "astropy.io.votable.Conf": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "astropy.io.votable.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "astropy.io.votable._config": {
  "data": {
   "shadows": "config"
  },
  "type": "import"
 },
 "astropy.io.votable.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.votable.conf": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "astropy.io.votable.connect": {
  "data": {
   "symbols_in_volume": [
    "astropy.io.votable.connect.is_votable",
    "astropy.io.votable.connect.read_table_votable",
    "astropy.io.votable.connect.write_table_votable"
   ]
  },
  "type": "module"
 },
 "astropy.io.votable.connect.VOTable": {
  "data": {
   "shadows": "Table"
  },
  "type": "import"
 },
 "astropy.io.votable.connect.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.votable.connect.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.votable.connect.io_registry": {
  "data": {
   "shadows": "registry"
  },
  "type": "import"
 },
 "astropy.io.votable.connect.is_votable": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.connect.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.votable.connect.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.votable.connect.read_table_votable": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "dict",
    "input",
    "input.iter_tables",
    "isinstance",
    "len",
    "parse"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.connect.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.io.votable.connect.write_table_votable": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "astropy.io.votable.connect.os",
    "from_table",
    "input",
    "input.columns.not_isinstance",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters": {
  "data": {
   "symbols_in_volume": [
    "astropy.io.votable.converters.Bit",
    "astropy.io.votable.converters.Boolean",
    "astropy.io.votable.converters.Char",
    "astropy.io.votable.converters.Double",
    "astropy.io.votable.converters.DoubleComplex",
    "astropy.io.votable.converters.Float",
    "astropy.io.votable.converters.FloatComplex",
    "astropy.io.votable.converters.Int",
    "astropy.io.votable.converters.Long",
    "astropy.io.votable.converters.Short",
    "astropy.io.votable.converters.UnicodeChar",
    "astropy.io.votable.converters.UnsignedByte",
    "astropy.io.votable.converters.numpy_dtype_to_field_mapping",
    "astropy.io.votable.converters.re",
    "astropy.io.votable.converters.sys",
    "numpy.bool_",
    "numpy.bytes_",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.uint8",
    "numpy.unicode_",
    "struct.pack",
    "struct.unpack"
   ]
  },
  "type": "module"
 },
 "astropy.io.votable.converters.Array": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "astropy.io.votable.converters.Converter"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.converters.Array.__init__": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "astropy.io.votable.converters.Converter"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Array._splitter_lax": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "astropy.io.votable.converters.array_splitter",
    "staticmethod",
    "vo_warn"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Array._splitter_pedantic": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "astropy.io.votable.converters.pedantic_array_splitter",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Array.parse_scalar": {
  "data": {
   "lineno": 459
  },
  "type": "function"
 },
 "astropy.io.votable.converters.ArrayVarArray": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "astropy.io.votable.converters.VarArray"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.converters.ArrayVarArray.parse": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "astropy.io.votable.converters._make_masked_array",
    "len",
    "numpy.ma.array",
    "parse_parts",
    "range",
    "vo_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Bit": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": [
    "astropy.io.votable.converters.BitArray",
    "astropy.io.votable.converters.Converter",
    "astropy.io.votable.converters.ScalarVarArray",
    "format"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.converters.Bit.binoutput": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "vo_warn"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Bit.binparse": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": [
    "ord",
    "read"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Bit.output": {
  "data": {
   "lineno": 1113,
   "symbols_in_volume": [
    "vo_warn"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Bit.parse": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "KeyError",
    "vo_raise",
    "warn_or_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.BitArray": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "astropy.io.votable.converters.ArrayVarArray",
    "astropy.io.votable.converters.NumericArray"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.converters.BitArray.__init__": {
  "data": {
   "lineno": 1052,
   "symbols_in_volume": [
    "astropy.io.votable.converters.NumericArray"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.BitArray._splitter_lax": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": [
    "astropy.io.votable.converters.re",
    "list",
    "staticmethod",
    "vo_warn"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.BitArray._splitter_pedantic": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "astropy.io.votable.converters.re",
    "list",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.BitArray.binoutput": {
  "data": {
   "lineno": 1081,
   "symbols_in_volume": [
    "astropy.io.votable.converters.bool_to_bitarray",
    "numpy.any",
    "vo_warn"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.BitArray.binparse": {
  "data": {
   "lineno": 1074,
   "symbols_in_volume": [
    "astropy.io.votable.converters.bitarray_to_bool",
    "numpy.zeros",
    "read"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.BitArray.output": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.asarray",
    "vo_warn"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Boolean": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "astropy.io.votable.converters.BooleanArray",
    "astropy.io.votable.converters.Converter",
    "astropy.io.votable.converters.ScalarVarArray",
    "format",
    "ord"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.converters.Boolean.binoutput": {
  "data": {
   "lineno": 1227
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Boolean.binparse": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": [
    "ord",
    "read"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Boolean.binparse_value": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": [
    "KeyError",
    "vo_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Boolean.output": {
  "data": {
   "lineno": 1199
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Boolean.parse": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": [
    "KeyError",
    "vo_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.BooleanArray": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "astropy.io.votable.converters.ArrayVarArray",
    "astropy.io.votable.converters.NumericArray"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.converters.BooleanArray.binoutput": {
  "data": {
   "lineno": 1158,
   "symbols_in_volume": [
    "astropy.io.votable.converters._empty_bytes",
    "binoutput",
    "numpy.asarray",
    "numpy.broadcast"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.BooleanArray.binparse": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "binparse",
    "numpy.array",
    "ord",
    "read"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Char": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "astropy.io.votable.converters.Converter",
    "astropy.io.votable.converters._empty_bytes"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.converters.Char.__init__": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.votable.converters.Converter",
    "int",
    "vo_raise",
    "vo_warn"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Char._ascii_parse": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "len",
    "vo_warn"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Char._binoutput_fixed": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "astropy.io.votable.converters._empty_bytes",
    "astropy.io.votable.converters.struct_pack"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Char._binoutput_var": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "astropy.io.votable.converters._zero_int",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Char._binparse_fixed": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "astropy.io.votable.converters._zero_byte",
    "astropy.io.votable.converters.struct_unpack",
    "read"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Char._binparse_var": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "read"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Char._str_parse": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "len",
    "vo_warn"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Char.output": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "xml_escape_cdata"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Char.supports_empty_values": {
  "data": {
   "lineno": 339
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Complex": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "astropy.io.votable.converters.Array",
    "astropy.io.votable.converters.ComplexArray",
    "astropy.io.votable.converters.ComplexVarArray",
    "astropy.io.votable.converters.FloatingPoint",
    "numpy.nan",
    "parse"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.converters.Complex.__init__": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "astropy.io.votable.converters.Array",
    "astropy.io.votable.converters.FloatingPoint"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Complex.output": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Complex.parse": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.nan",
    "splitter",
    "vo_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Complex.parse_parts": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "complex"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.ComplexArray": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "astropy.io.votable.converters.ComplexArrayVarArray",
    "astropy.io.votable.converters.NumericArray"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.converters.ComplexArray.__init__": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "astropy.io.votable.converters.NumericArray"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.ComplexArray.parse": {
  "data": {
   "lineno": 962
  },
  "type": "function"
 },
 "astropy.io.votable.converters.ComplexArray.parse_parts": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "base_parse",
    "float",
    "len",
    "numpy.array",
    "range",
    "vo_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.ComplexArrayVarArray": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "astropy.io.votable.converters.VarArray"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.converters.ComplexArrayVarArray.parse": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "astropy.io.votable.converters._make_masked_array",
    "len",
    "numpy.ma.array",
    "parse_parts",
    "range",
    "vo_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.ComplexVarArray": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "astropy.io.votable.converters.VarArray"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.converters.ComplexVarArray.parse": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "astropy.io.votable.converters._make_masked_array",
    "float",
    "len",
    "numpy.array",
    "numpy.ma.array",
    "parse_parts",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Converter": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.converters.Converter.__init__": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Converter._parse_length": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "astropy.io.votable.converters.struct_unpack",
    "read",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Converter._write_length": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "astropy.io.votable.converters.struct_pack",
    "int",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Converter.binoutput": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Converter.binparse": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Converter.output": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Converter.parse": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Converter.parse_scalar": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Converter.supports_empty_values": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Double": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "astropy.io.votable.converters.FloatingPoint",
    "format"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.converters.DoubleComplex": {
  "data": {
   "lineno": 1038,
   "symbols_in_volume": [
    "astropy.io.votable.converters.Complex",
    "format"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.converters.Float": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "astropy.io.votable.converters.FloatingPoint",
    "format"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.converters.FloatComplex": {
  "data": {
   "lineno": 1030,
   "symbols_in_volume": [
    "astropy.io.votable.converters.Complex",
    "format"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.converters.FloatingPoint": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "astropy.io.votable.converters.Numeric",
    "numpy.nan"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.converters.FloatingPoint.__init__": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "astropy.io.votable.converters.Numeric",
    "int",
    "numpy.array",
    "numpy.asarray",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.FloatingPoint._filter_nan": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.FloatingPoint._filter_null": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.FloatingPoint._parse_pedantic": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.FloatingPoint._parse_permissive": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "vo_warn"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.FloatingPoint.binoutput": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "astropy.io.votable.converters._ensure_bigendian"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.FloatingPoint.output": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "RuntimeError",
    "numpy.isfinite",
    "numpy.isnan",
    "numpy.isneginf",
    "numpy.isposinf",
    "numpy.isscalar",
    "vo_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.FloatingPoint.output_format": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.FloatingPoint.supports_empty_values": {
  "data": {
   "lineno": 718
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Int": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "astropy.io.votable.converters.Integer",
    "format"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.converters.Integer": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "astropy.io.votable.converters.Numeric"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.converters.Integer.__init__": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "astropy.io.votable.converters.Numeric"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Integer.binoutput": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "astropy.io.votable.converters._ensure_bigendian",
    "vo_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Integer.filter_array": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.where",
    "vo_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Integer.output": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "warn_or_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Integer.parse": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "warn_or_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Long": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "astropy.io.votable.converters.Integer",
    "format"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.converters.Numeric": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "astropy.io.votable.converters.Converter",
    "astropy.io.votable.converters.NumericArray",
    "astropy.io.votable.converters.ScalarVarArray"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.converters.Numeric.__init__": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "astropy.io.votable.converters.Converter",
    "numpy.asarray",
    "numpy.dtype",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Numeric._is_null": {
  "data": {
   "lineno": 663
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Numeric.binparse": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "numpy.fromstring",
    "read"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.NumericArray": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "astropy.io.votable.converters.Array",
    "astropy.io.votable.converters.ArrayVarArray"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.converters.NumericArray.__init__": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "astropy.io.votable.converters.Array",
    "numpy.dtype",
    "numpy.empty",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.NumericArray.binoutput": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "astropy.io.votable.converters._ensure_bigendian"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.NumericArray.binparse": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "numpy.fromstring",
    "read"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.NumericArray.output": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "base_output",
    "numpy.asarray",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.NumericArray.parse": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "len",
    "numpy.zeros",
    "warn_or_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.NumericArray.parse_parts": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "base_parse",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.ScalarVarArray": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "astropy.io.votable.converters.VarArray"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.converters.ScalarVarArray.parse": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "astropy.io.votable.converters._make_masked_array",
    "numpy.ma.array",
    "parse"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.Short": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "astropy.io.votable.converters.Integer",
    "format"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.converters.UnicodeChar": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "astropy.io.votable.converters.Converter"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.converters.UnicodeChar.__init__": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.votable.converters.Converter",
    "int",
    "vo_raise",
    "vo_warn"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.UnicodeChar._binoutput_fixed": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "astropy.io.votable.converters.struct_pack"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.UnicodeChar._binoutput_var": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "astropy.io.votable.converters._zero_int",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.UnicodeChar._binparse_fixed": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "astropy.io.votable.converters.struct_unpack",
    "read"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.UnicodeChar._binparse_var": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "read"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.UnicodeChar.output": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "xml_escape_cdata"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.UnicodeChar.parse": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "len",
    "vo_warn"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.UnsignedByte": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "astropy.io.votable.converters.Integer",
    "format"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.converters.VarArray": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "astropy.io.votable.converters.Array",
    "format"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.converters.VarArray.__init__": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "astropy.io.votable.converters.Array",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.VarArray.binoutput": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "astropy.io.votable.converters._empty_bytes",
    "astropy.io.votable.converters._zero_int",
    "binoutput",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.VarArray.binparse": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "astropy.io.votable.converters._make_masked_array",
    "binparse",
    "range",
    "read"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.VarArray.output": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "numpy.broadcast",
    "output"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "astropy.io.votable.converters._all_bytes": {
  "data": {
   "lineno": 1328,
   "symbols_in_volume": [
    "bytes",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters._all_matching_dtype": {
  "data": {
   "lineno": 1342,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters._all_unicode": {
  "data": {
   "lineno": 1335,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters._empty_bytes": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "astropy.io.votable.converters._ensure_bigendian": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "astropy.io.votable.converters._make_masked_array": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.ma.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters._struct_pack": {
  "data": {
   "shadows": "struct.pack"
  },
  "type": "import"
 },
 "astropy.io.votable.converters._struct_unpack": {
  "data": {
   "shadows": "struct.unpack"
  },
  "type": "import"
 },
 "astropy.io.votable.converters._zero_byte": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "astropy.io.votable.converters._zero_int": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "astropy.io.votable.converters.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.votable.converters.array_splitter": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "astropy.io.votable.converters.bitarray_to_bool": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "ord",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.bool_to_bitarray": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "astropy.io.votable.converters.struct_pack",
    "bytes",
    "bytes.append",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.converter_mapping": {
  "data": {
   "lineno": 1235
  },
  "type": "constant"
 },
 "astropy.io.votable.converters.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.votable.converters.get_converter": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": [
    "astropy.io.votable.converters.converter_mapping",
    "cls",
    "int",
    "vo_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "astropy.io.votable.converters.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.votable.converters.numpy_dtype_to_field_mapping": {
  "data": {
   "lineno": 1311
  },
  "type": "constant"
 },
 "astropy.io.votable.converters.numpy_to_votable_dtype": {
  "data": {
   "lineno": 1359,
   "symbols_in_volume": [
    "TypeError",
    "astropy.io.votable.converters.numpy_dtype_to_field_mapping",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.pedantic_array_splitter": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "astropy.io.votable.converters.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.votable.converters.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.io.votable.converters.struct_pack": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "format.encode",
    "struct.pack"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.struct_unpack": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "format.encode",
    "struct.unpack"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.io.votable.converters.table_column_to_votable_datatype": {
  "data": {
   "lineno": 1395,
   "symbols_in_volume": [
    "astropy.io.votable.converters._all_bytes",
    "astropy.io.votable.converters._all_matching_dtype",
    "astropy.io.votable.converters._all_unicode",
    "astropy.io.votable.converters.numpy_to_votable_dtype",
    "bytes",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.converters.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.io.votable.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.votable.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.votable.setup_package": {
  "data": {},
  "type": "module"
 },
 "astropy.io.votable.setup_package.Extension": {
  "data": {
   "shadows": "distutils.core.Extension"
  },
  "type": "import"
 },
 "astropy.io.votable.setup_package.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.votable.setup_package.get_extensions": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "distutils.core.Extension",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.setup_package.get_package_data": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "astropy.io.votable.setup_package.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "astropy.io.votable.setup_package.requires_2to3": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "astropy.io.votable.table": {
  "data": {},
  "type": "module"
 },
 "astropy.io.votable.table.__all__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "astropy.io.votable.table.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.votable.table.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.votable.table.from_table": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "astropy.io.votable.table.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "astropy.io.votable.table.is_votable": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.table.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.votable.table.parse": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.table.parse_single_table": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "astropy.io.votable.table.parse"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.table.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.votable.table.reset_vo_warnings": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.table.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.io.votable.table.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "astropy.io.votable.table.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.io.votable.table.validate": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.votable.table.io",
    "astropy.io.votable.table.os",
    "astropy.io.votable.table.parse",
    "astropy.io.votable.table.reset_vo_warnings",
    "astropy.io.votable.table.sys",
    "astropy.io.votable.table.textwrap",
    "astropy.io.votable.table.warnings",
    "color_print",
    "hasattr",
    "isinstance",
    "issubclass",
    "len",
    "print_code_line",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.table.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.io.votable.table.writeto": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "TypeError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.io.votable.tests.converter_test": {
  "data": {},
  "type": "module"
 },
 "astropy.io.votable.tests.converter_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.votable.tests.converter_test.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "astropy.io.votable.tests.converter_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.votable.tests.converter_test.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "astropy.io.votable.tests.converter_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.votable.tests.converter_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.votable.tests.converter_test.test_bit": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.converter_test.test_bit_mask": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "catch_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.converter_test.test_boolean": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.converter_test.test_boolean_array": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.converter_test.test_char_mask": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "astropy.io.votable.tests.converter_test.test_complex": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.converter_test.test_complex_array_vararray": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.converter_test.test_complex_array_vararray2": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.converter_test.test_complex_array_vararray3": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "complex",
    "len",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.converter_test.test_complex_vararray": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "complex",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.converter_test.test_float_default_precision": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "astropy.io.votable.tests.converter_test.test_float_mask": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.converter_test.test_float_mask_permissive": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "astropy.io.votable.tests.converter_test.test_gemini_v1_2": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "get_pkg_data_filename",
    "parse_single_table"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.converter_test.test_integer_overflow": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.converter_test.test_invalid_arraysize": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.converter_test.test_invalid_type": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.converter_test.test_oversize_char": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "catch_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.converter_test.test_oversize_unicode": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "catch_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.converter_test.test_precision": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "astropy.io.votable.tests.converter_test.test_unicode_mask": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "astropy.io.votable.tests.converter_test.test_vararray": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "astropy.io.votable.tests.converter_test.io",
    "len",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.converter_test.test_wrong_number_of_elements": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.converter_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.io.votable.tests.exception_test": {
  "data": {},
  "type": "module"
 },
 "astropy.io.votable.tests.exception_test.test_parse_vowarning": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "catch_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.exception_test.test_reraise": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "RuntimeError",
    "fail",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.exception_test.test_reraise.fail": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.table_test": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.io.votable.tests.table_test.HAS_PATHLIB": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "astropy.io.votable.tests.table_test.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "astropy.io.votable.tests.table_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.votable.tests.table_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.votable.tests.table_test.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "astropy.io.votable.tests.table_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.io.votable.tests.table_test.test_empty_table": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "get_pkg_data_filename",
    "parse"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.table_test.test_from_table_without_mask": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "Column",
    "Table",
    "astropy.io.votable.tests.table_test.io"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.table_test.test_names_over_ids": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "get_pkg_data_fileobj",
    "parse"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.table_test.test_read_through_table_interface": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "astropy.io.votable.tests.table_test.os",
    "get_pkg_data_fileobj",
    "len",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.table_test.test_read_through_table_interface2": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "get_pkg_data_fileobj",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.table_test.test_table": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "astropy.io.votable.tests.table_test.os",
    "get_pkg_data_filename",
    "numpy.all",
    "parse",
    "str",
    "type",
    "writeto",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.table_test.test_table_read_with_unnamed_tables": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "get_pkg_data_fileobj",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.table_test.test_votable_path_object": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "astropy.io.votable.tests.table_test.pathlib",
    "astropy.io.votable.tests.table_test.pytest",
    "get_pkg_data_filename",
    "int",
    "len",
    "parse"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.table_test.test_write_with_format": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "Column",
    "Table",
    "astropy.io.votable.tests.table_test.io"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.tree_test": {
  "data": {},
  "type": "module"
 },
 "astropy.io.votable.tests.tree_test.test_check_astroyear_fail": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.tree_test.test_make_Fields": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "astropy.io.votable.tests.tree_test.test_string_fail": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.ucd_test": {
  "data": {},
  "type": "module"
 },
 "astropy.io.votable.tests.ucd_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.votable.tests.ucd_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.votable.tests.ucd_test.examples": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.io.votable.tests.ucd_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.votable.tests.ucd_test.test_check": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "astropy.io.votable.tests.ucd_test.examples"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.ucd_test.test_invalid_namespace": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.ucd_test.test_invalid_word": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.ucd_test.test_none": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "astropy.io.votable.tests.ucd_test.test_too_many_colons": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.ucd_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.io.votable.tests.util_test": {
  "data": {},
  "type": "module"
 },
 "astropy.io.votable.tests.util_test.test_range_list": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "astropy.io.votable.tests.util_test.test_range_list2": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "astropy.io.votable.tests.util_test.test_range_list3": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "astropy.io.votable.tests.util_test.test_range_list4": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "astropy.io.votable.tests.util_test.test_range_list4a": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.util_test.test_range_list5": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.util_test.test_range_list6": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "print",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.util_test.test_range_list7": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "astropy.io.votable.tests.util_test.test_range_list8": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "astropy.io.votable.tests.util_test.test_range_list9": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "astropy.io.votable.tests.util_test.test_range_list9a": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.io.votable.tests.vo_test.sys",
    "hasattr"
   ]
  },
  "type": "module"
 },
 "astropy.io.votable.tests.vo_test.HAS_PATHLIB": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "astropy.io.votable.tests.vo_test.TestFixups": {
  "data": {
   "lineno": 209
  },
  "type": "class"
 },
 "astropy.io.votable.tests.vo_test.TestFixups.setup_class": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "get_pkg_data_filename",
    "parse"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestFixups.test_implicit_id": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse": {
  "data": {
   "lineno": 290
  },
  "type": "class"
 },
 "astropy.io.votable.tests.vo_test.TestParse.setup_class": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "get_pkg_data_filename",
    "parse"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_array": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "issubclass",
    "numpy.int64",
    "numpy.object_",
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_bit": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "issubclass",
    "numpy.bool_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_bit_array2": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_bit_array2_mask": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_bit_mask": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_bitarray": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "issubclass",
    "numpy.bool_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_bitarray_mask": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_bitvararray": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "issubclass",
    "numpy.object_",
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_bitvararray2": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "issubclass",
    "numpy.bool_",
    "numpy.object_",
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_boolean": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "issubclass",
    "numpy.bool_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_boolean_array": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "issubclass",
    "numpy.bool_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_boolean_array_mask": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_boolean_mask": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_double": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "issubclass",
    "numpy.float64",
    "numpy.inf",
    "numpy.nan",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_doubleComplex": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "issubclass",
    "numpy.complex128",
    "numpy.inf",
    "numpy.nan",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_doubleComplexArray": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "issubclass",
    "len",
    "numpy.object_"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_double_array": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "issubclass",
    "len",
    "numpy.inf",
    "numpy.nan",
    "numpy.object_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_fixed_string_test": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "issubclass",
    "numpy.string_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_fixed_unicode_test": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "issubclass",
    "numpy.testing.assert_array_equal",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_float": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "issubclass",
    "numpy.float32",
    "numpy.inf",
    "numpy.nan",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_floatComplex": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "issubclass",
    "numpy.complex64",
    "numpy.nan",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_get_coosys_by_id": {
  "data": {
   "lineno": 594
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_get_field_by_utype": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_get_info_by_id": {
  "data": {
   "lineno": 603
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_int": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "issubclass",
    "numpy.int32",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_long": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "issubclass",
    "numpy.int64",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_nulls": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_nulls_array": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_repr": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "list",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_short": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "issubclass",
    "numpy.any",
    "numpy.int16",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_string_test": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "issubclass",
    "numpy.object_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_unicode_test": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "issubclass",
    "numpy.object_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestParse.test_unsignedByte": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "issubclass",
    "numpy.any",
    "numpy.testing.assert_array_equal",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestReferences": {
  "data": {
   "lineno": 222
  },
  "type": "class"
 },
 "astropy.io.votable.tests.vo_test.TestReferences.setup_class": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "get_pkg_data_filename",
    "parse"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestReferences.test_fieldref": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestReferences.test_iter_coosys": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestReferences.test_iter_fields_and_params_on_a_group": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestReferences.test_iter_groups": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestReferences.test_iter_groups_on_a_group": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestReferences.test_paramref": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestReferences.test_ref_table": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "list",
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestThroughBinary": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "astropy.io.votable.tests.vo_test.TestParse"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.tests.vo_test.TestThroughBinary.setup_class": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "astropy.io.votable.tests.vo_test.io",
    "get_pkg_data_filename",
    "parse"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestThroughBinary.test_bit_array2_mask": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestThroughBinary.test_bit_mask": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestThroughBinary.test_bitarray_mask": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestThroughBinary2": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "astropy.io.votable.tests.vo_test.TestParse"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.tests.vo_test.TestThroughBinary2.setup_class": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "astropy.io.votable.tests.vo_test.io",
    "get_pkg_data_filename",
    "parse"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestThroughBinary2.test_get_coosys_by_id": {
  "data": {
   "lineno": 702
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestThroughTableData": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "astropy.io.votable.tests.vo_test.TestParse"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.tests.vo_test.TestThroughTableData.setup_class": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "astropy.io.votable.tests.vo_test.io",
    "get_pkg_data_filename",
    "parse"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestThroughTableData.test_bit_array2_mask": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestThroughTableData.test_bit_mask": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestThroughTableData.test_bitarray_mask": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.TestThroughTableData.test_schema": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "astropy.io.votable.tests.vo_test.assert_validate_schema",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test._run_test_from_scratch_example": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "Field",
    "Resource",
    "Table",
    "VOTableFile"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test._test_regression": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "astropy.io.votable.tests.vo_test.assert_validate_schema",
    "astropy.io.votable.tests.vo_test.difflib",
    "astropy.io.votable.tests.vo_test.gzip",
    "astropy.io.votable.tests.vo_test.io",
    "astropy.io.votable.tests.vo_test.sys",
    "get_pkg_data_filename",
    "list",
    "open",
    "parse",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.votable.tests.vo_test.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "astropy.io.votable.tests.vo_test.assert_validate_schema": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "OSError",
    "astropy.io.votable.tests.vo_test.sys",
    "validate_schema"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.difflib": {
  "data": {
   "shadows": "difflib"
  },
  "type": "import"
 },
 "astropy.io.votable.tests.vo_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.votable.tests.vo_test.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "astropy.io.votable.tests.vo_test.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "astropy.io.votable.tests.vo_test.legacy_float_repr": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "astropy.io.votable.tests.vo_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.votable.tests.vo_test.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "astropy.io.votable.tests.vo_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.votable.tests.vo_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.io.votable.tests.vo_test.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.io.votable.tests.vo_test.table_from_scratch": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "Field",
    "Resource",
    "Table",
    "VOTableFile",
    "astropy.io.votable.tests.vo_test.io"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.test_build_from_scratch": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "parse",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.test_custom_datatype": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "get_pkg_data_filename",
    "numpy.int32",
    "parse"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.test_fileobj": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "astropy.io.votable.tests.vo_test.io",
    "astropy.io.votable.tests.vo_test.sys",
    "fd",
    "get_pkg_data_filename",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.test_from_scratch_example": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.votable.tests.vo_test._run_test_from_scratch_example",
    "catch_warnings",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.test_gzip_filehandles": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "get_pkg_data_filename",
    "open",
    "parse",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.test_instantiate_vowarning": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "VOWarning"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.test_no_resource_check": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "astropy.io.votable.tests.vo_test.difflib",
    "astropy.io.votable.tests.vo_test.io",
    "astropy.io.votable.tests.vo_test.sys",
    "catch_warnings",
    "fd",
    "fd.readlines",
    "get_pkg_data_filename",
    "validate"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.test_nonstandard_units": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "get_pkg_data_filename",
    "isinstance",
    "parse"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.test_open_files": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "get_pkg_data_filenames",
    "parse"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.test_parse_single_table": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "get_pkg_data_filename",
    "isinstance",
    "len",
    "parse_single_table"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.test_parse_single_table2": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "get_pkg_data_filename",
    "isinstance",
    "len",
    "parse_single_table"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.test_parse_single_table3": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "IndexError",
    "get_pkg_data_filename",
    "parse_single_table",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.test_regression": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "astropy.io.votable.tests.vo_test._test_regression",
    "astropy.io.votable.tests.vo_test.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.test_regression_binary2": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "astropy.io.votable.tests.vo_test._test_regression",
    "astropy.io.votable.tests.vo_test.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.test_regression_python_based_parser": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "astropy.io.votable.tests.vo_test._test_regression",
    "astropy.io.votable.tests.vo_test.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.test_resource_structure": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "astropy.io.votable.tests.vo_test.io",
    "astropy.io.votable.tree.Resource",
    "astropy.io.votable.tree.Table",
    "astropy.io.votable.tree.VOTableFile",
    "len",
    "parse",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.test_select_columns_by_index": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "get_pkg_data_filename",
    "numpy.all",
    "parse"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.test_select_columns_by_name": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "get_pkg_data_filename",
    "numpy.all",
    "parse"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.test_too_many_columns": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "get_pkg_data_filename",
    "parse",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.test_validate": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "astropy.io.votable.tests.vo_test.difflib",
    "astropy.io.votable.tests.vo_test.io",
    "astropy.io.votable.tests.vo_test.pathlib",
    "astropy.io.votable.tests.vo_test.sys",
    "catch_warnings",
    "get_pkg_data_filename",
    "validate"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.test_validate_path_object": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "astropy.io.votable.tests.vo_test.pytest",
    "astropy.io.votable.tests.vo_test.test_validate"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tests.vo_test.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.io.votable.tests.vo_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.io.votable.tests.vo_test.vot": {
  "data": {
   "shadows": "astropy.io.votable.tree"
  },
  "type": "import"
 },
 "astropy.io.votable.tree": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.io.votable.tree.CooSys": {
  "data": {
   "lineno": 1634,
   "symbols_in_volume": [
    "astropy.io.votable.tree.SimpleElement"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.tree.CooSys.ID": {
  "data": {
   "lineno": 1672,
   "symbols_in_volume": [
    "vo_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.CooSys.__init__": {
  "data": {
   "lineno": 1644,
   "symbols_in_volume": [
    "astropy.io.votable.tree.SimpleElement",
    "astropy.io.votable.tree.resolve_id",
    "id",
    "warn_or_raise",
    "warn_unknown_attrs"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.CooSys.epoch": {
  "data": {
   "lineno": 1733
  },
  "type": "function"
 },
 "astropy.io.votable.tree.CooSys.equinox": {
  "data": {
   "lineno": 1716
  },
  "type": "function"
 },
 "astropy.io.votable.tree.CooSys.system": {
  "data": {
   "lineno": 1698
  },
  "type": "function"
 },
 "astropy.io.votable.tree.DEFAULT_CHUNK_SIZE": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "astropy.io.votable.tree.Element": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.tree.Element._add_definitions": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "warn_or_raise",
    "warn_unknown_attrs"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Element._add_unknown_tag": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "warn_or_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Element._ignore_add": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "warn_unknown_attrs"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Element.parse": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Element.to_xml": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Field": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "astropy.io.votable.tree.SimpleElement",
    "astropy.io.votable.tree._IDProperty",
    "astropy.io.votable.tree._NameProperty",
    "astropy.io.votable.tree._UcdProperty",
    "astropy.io.votable.tree._UtypeProperty",
    "astropy.io.votable.tree._XtypeProperty"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.tree.Field.__init__": {
  "data": {
   "lineno": 1158,
   "symbols_in_volume": [
    "HomogeneousList",
    "astropy.io.votable.tree.Link",
    "astropy.io.votable.tree.SimpleElement",
    "astropy.io.votable.tree.Values",
    "astropy.io.votable.tree.resolve_id",
    "id",
    "type",
    "vo_raise",
    "vo_warn",
    "warn_or_raise",
    "warn_unknown_attrs"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Field._setup": {
  "data": {
   "lineno": 1284
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Field.arraysize": {
  "data": {
   "lineno": 1432
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Field.datatype": {
  "data": {
   "lineno": 1305,
   "symbols_in_volume": [
    "vo_raise",
    "warn_or_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Field.from_table_column": {
  "data": {
   "lineno": 1547,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Link",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Field.links": {
  "data": {
   "lineno": 1469,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Field.parse": {
  "data": {
   "lineno": 1479,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Link",
    "warn_or_raise",
    "warn_unknown_attrs"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Field.precision": {
  "data": {
   "lineno": 1334
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Field.ref": {
  "data": {
   "lineno": 1378
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Field.to_table_column": {
  "data": {
   "lineno": 1526,
   "symbols_in_volume": [
    "getattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Field.to_xml": {
  "data": {
   "lineno": 1514
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Field.type": {
  "data": {
   "lineno": 1448,
   "symbols_in_volume": [
    "type.deleter"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Field.uniqify_names": {
  "data": {
   "lineno": 1247,
   "symbols_in_volume": [
    "classmethod",
    "vo_warn"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Field.unit": {
  "data": {
   "lineno": 1411
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Field.values": {
  "data": {
   "lineno": 1465
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Field.width": {
  "data": {
   "lineno": 1358
  },
  "type": "function"
 },
 "astropy.io.votable.tree.FieldRef": {
  "data": {
   "lineno": 1738,
   "symbols_in_volume": [
    "astropy.io.votable.tree.SimpleElement",
    "astropy.io.votable.tree._UcdProperty",
    "astropy.io.votable.tree._UtypeProperty"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.tree.FieldRef.__init__": {
  "data": {
   "lineno": 1748,
   "symbols_in_volume": [
    "astropy.io.votable.tree.SimpleElement",
    "warn_unknown_attrs"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.FieldRef.get_ref": {
  "data": {
   "lineno": 1791,
   "symbols_in_volume": [
    "KeyError",
    "astropy.io.votable.tree.Field",
    "isinstance",
    "vo_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.FieldRef.ref": {
  "data": {
   "lineno": 1787
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Group": {
  "data": {
   "lineno": 1870,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Element",
    "astropy.io.votable.tree._DescriptionProperty",
    "astropy.io.votable.tree._IDProperty",
    "astropy.io.votable.tree._NameProperty",
    "astropy.io.votable.tree._UcdProperty",
    "astropy.io.votable.tree._UtypeProperty"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.tree.Group.__init__": {
  "data": {
   "lineno": 1884,
   "symbols_in_volume": [
    "HomogeneousList",
    "astropy.io.votable.tree.Element",
    "astropy.io.votable.tree.FieldRef",
    "astropy.io.votable.tree.Group",
    "astropy.io.votable.tree.Param",
    "astropy.io.votable.tree.ParamRef",
    "astropy.io.votable.tree.resolve_id",
    "id",
    "warn_unknown_attrs"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Group.__repr__": {
  "data": {
   "lineno": 1907,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Group._add_fieldref": {
  "data": {
   "lineno": 1936,
   "symbols_in_volume": [
    "astropy.io.votable.tree.FieldRef"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Group._add_group": {
  "data": {
   "lineno": 1953,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Group"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Group._add_param": {
  "data": {
   "lineno": 1944,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Param",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Group._add_paramref": {
  "data": {
   "lineno": 1940,
   "symbols_in_volume": [
    "astropy.io.votable.tree.ParamRef"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Group.entries": {
  "data": {
   "lineno": 1927,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Group.iter_fields_and_params": {
  "data": {
   "lineno": 1989,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Group",
    "astropy.io.votable.tree.Param",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Group.iter_groups": {
  "data": {
   "lineno": 2001,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Group",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Group.parse": {
  "data": {
   "lineno": 1958,
   "symbols_in_volume": [
    "warn_or_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Group.ref": {
  "data": {
   "lineno": 1923
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Group.to_xml": {
  "data": {
   "lineno": 1979
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Info": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "astropy.io.votable.tree.SimpleElementWithContent",
    "astropy.io.votable.tree._IDProperty",
    "astropy.io.votable.tree._UtypeProperty",
    "astropy.io.votable.tree._XtypeProperty"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.tree.Info.__init__": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "astropy.io.votable.tree.SimpleElementWithContent",
    "astropy.io.votable.tree.resolve_id",
    "id",
    "warn_unknown_attrs"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Info.content": {
  "data": {
   "lineno": 736
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Info.name": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "warn_or_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Info.ref": {
  "data": {
   "lineno": 771
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Info.to_xml": {
  "data": {
   "lineno": 812
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Info.unit": {
  "data": {
   "lineno": 808
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Info.value": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "astropy.io.votable.tree.check_string",
    "warn_or_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Link": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "astropy.io.votable.tree.SimpleElement",
    "astropy.io.votable.tree._IDProperty"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.tree.Link.__init__": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "astropy.io.votable.tree.SimpleElement",
    "astropy.io.votable.tree.resolve_id",
    "id",
    "warn_or_raise",
    "warn_unknown_attrs"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Link.content_role": {
  "data": {
   "lineno": 599
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Link.content_type": {
  "data": {
   "lineno": 613
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Link.from_table_column": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Link.href": {
  "data": {
   "lineno": 630
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Link.to_table_column": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Param": {
  "data": {
   "lineno": 1580,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Field"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.tree.Param.__init__": {
  "data": {
   "lineno": 1591,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Field",
    "id",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Param._setup": {
  "data": {
   "lineno": 1620,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Field"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Param.to_xml": {
  "data": {
   "lineno": 1624,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Field"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Param.value": {
  "data": {
   "lineno": 1609,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.ParamRef": {
  "data": {
   "lineno": 1804,
   "symbols_in_volume": [
    "astropy.io.votable.tree.SimpleElement",
    "astropy.io.votable.tree._UcdProperty",
    "astropy.io.votable.tree._UtypeProperty"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.tree.ParamRef.__init__": {
  "data": {
   "lineno": 1821,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Element",
    "warn_unknown_attrs"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.ParamRef.get_ref": {
  "data": {
   "lineno": 1857,
   "symbols_in_volume": [
    "KeyError",
    "astropy.io.votable.tree.Param",
    "isinstance",
    "vo_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.ParamRef.ref": {
  "data": {
   "lineno": 1853
  },
  "type": "function"
 },
 "astropy.io.votable.tree.RESIZE_AMOUNT": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "astropy.io.votable.tree.Resource": {
  "data": {
   "lineno": 2991,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Element",
    "astropy.io.votable.tree._DescriptionProperty",
    "astropy.io.votable.tree._IDProperty",
    "astropy.io.votable.tree._NameProperty",
    "astropy.io.votable.tree._UtypeProperty"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.tree.Resource.__init__": {
  "data": {
   "lineno": 3000,
   "symbols_in_volume": [
    "HomogeneousList",
    "astropy.io.votable.tree.CooSys",
    "astropy.io.votable.tree.Element",
    "astropy.io.votable.tree.Info",
    "astropy.io.votable.tree.Link",
    "astropy.io.votable.tree.Param",
    "astropy.io.votable.tree.Resource",
    "astropy.io.votable.tree.Table",
    "astropy.io.votable.tree.resolve_id",
    "id",
    "type",
    "warn_unknown_attrs"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Resource.__repr__": {
  "data": {
   "lineno": 3024,
   "symbols_in_volume": [
    "XMLWriter",
    "astropy.io.votable.tree.io"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Resource._add_coosys": {
  "data": {
   "lineno": 3125,
   "symbols_in_volume": [
    "astropy.io.votable.tree.CooSys"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Resource._add_info": {
  "data": {
   "lineno": 3115,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Info"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Resource._add_link": {
  "data": {
   "lineno": 3135,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Link"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Resource._add_param": {
  "data": {
   "lineno": 3120,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Param"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Resource._add_resource": {
  "data": {
   "lineno": 3130,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Resource"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Resource._add_table": {
  "data": {
   "lineno": 3110,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Table"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Resource.coordinate_systems": {
  "data": {
   "lineno": 3061,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Resource.extra_attributes": {
  "data": {
   "lineno": 3051,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Resource.infos": {
  "data": {
   "lineno": 3069,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Resource.iter_coosys": {
  "data": {
   "lineno": 3205
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Resource.iter_fields_and_params": {
  "data": {
   "lineno": 3191
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Resource.iter_info": {
  "data": {
   "lineno": 3216
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Resource.iter_tables": {
  "data": {
   "lineno": 3180
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Resource.links": {
  "data": {
   "lineno": 3085,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Resource.params": {
  "data": {
   "lineno": 3077,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Resource.parse": {
  "data": {
   "lineno": 3140,
   "symbols_in_volume": [
    "warn_or_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Resource.resources": {
  "data": {
   "lineno": 3102,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Resource.tables": {
  "data": {
   "lineno": 3094,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Resource.to_xml": {
  "data": {
   "lineno": 3168
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Resource.type": {
  "data": {
   "lineno": 3045,
   "symbols_in_volume": [
    "type",
    "type.setter",
    "vo_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.SimpleElement": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Element"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.tree.SimpleElement.__init__": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Element"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.SimpleElement.__repr__": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "XMLWriter",
    "astropy.io.votable.tree.SimpleElement",
    "astropy.io.votable.tree.io"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.SimpleElement.parse": {
  "data": {
   "lineno": 487
  },
  "type": "function"
 },
 "astropy.io.votable.tree.SimpleElement.to_xml": {
  "data": {
   "lineno": 496
  },
  "type": "function"
 },
 "astropy.io.votable.tree.SimpleElementWithContent": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "astropy.io.votable.tree.SimpleElement"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.tree.SimpleElementWithContent.__init__": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "astropy.io.votable.tree.SimpleElement"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.SimpleElementWithContent.content": {
  "data": {
   "lineno": 537
  },
  "type": "function"
 },
 "astropy.io.votable.tree.SimpleElementWithContent.parse": {
  "data": {
   "lineno": 512
  },
  "type": "function"
 },
 "astropy.io.votable.tree.SimpleElementWithContent.to_xml": {
  "data": {
   "lineno": 523
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table": {
  "data": {
   "lineno": 2013,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Element",
    "astropy.io.votable.tree._DescriptionProperty",
    "astropy.io.votable.tree._IDProperty",
    "astropy.io.votable.tree._NameProperty",
    "astropy.io.votable.tree._UcdProperty",
    "astropy.io.votable.tree._lookup_by_attr_factory",
    "astropy.io.votable.tree._lookup_by_id_or_name_factory"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.tree.Table.__bytes__": {
  "data": {
   "lineno": 2076,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table.__init__": {
  "data": {
   "lineno": 2036,
   "symbols_in_volume": [
    "HomogeneousList",
    "ValueError",
    "astropy.io.votable.tree.Element",
    "astropy.io.votable.tree.Field",
    "astropy.io.votable.tree.Group",
    "astropy.io.votable.tree.Info",
    "astropy.io.votable.tree.Link",
    "astropy.io.votable.tree.Param",
    "astropy.io.votable.tree.resolve_id",
    "id",
    "int",
    "numpy.ma.array",
    "warn_unknown_attrs"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table.__repr__": {
  "data": {
   "lineno": 2073,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table.__unicode__": {
  "data": {
   "lineno": 2081
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table._add_field": {
  "data": {
   "lineno": 2274,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Field"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table._add_group": {
  "data": {
   "lineno": 2284,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Group"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table._add_info": {
  "data": {
   "lineno": 2294,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Info",
    "warn_or_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table._add_link": {
  "data": {
   "lineno": 2289,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Link"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table._add_param": {
  "data": {
   "lineno": 2279,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Param"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table._get_binary_data_stream": {
  "data": {
   "lineno": 2569,
   "symbols_in_volume": [
    "NotImplementedError",
    "astropy.io.votable.tree.base64",
    "astropy.io.votable.tree.codecs",
    "astropy.io.votable.tree.gzip",
    "astropy.io.votable.tree.io",
    "vo_raise",
    "warn_or_raise",
    "warn_unknown_attrs"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table._get_binary_data_stream.careful_read": {
  "data": {
   "lineno": 2615,
   "symbols_in_volume": [
    "EOFError",
    "len",
    "read"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table._parse_binary": {
  "data": {
   "lineno": 2623,
   "symbols_in_volume": [
    "EOFError",
    "Exception",
    "astropy.io.votable.tree._resize",
    "binparse",
    "careful_read",
    "enumerate",
    "int",
    "len",
    "list",
    "tuple",
    "vo_reraise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table._parse_fits": {
  "data": {
   "lineno": 2682,
   "symbols_in_volume": [
    "NotImplementedError",
    "astropy.io.votable.tree.codecs",
    "astropy.io.votable.tree.gzip",
    "int",
    "vo_raise",
    "warn_or_raise",
    "warn_unknown_attrs"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table._parse_tabledata": {
  "data": {
   "lineno": 2453,
   "symbols_in_volume": [
    "Exception",
    "astropy.io.votable.tree.DEFAULT_CHUNK_SIZE",
    "astropy.io.votable.tree._resize",
    "astropy.io.votable.tree.base64",
    "astropy.io.votable.tree.io",
    "len",
    "range",
    "tuple",
    "vo_raise",
    "vo_reraise",
    "warn_or_raise",
    "warn_unknown_attrs"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table._resize_strategy": {
  "data": {
   "lineno": 2262,
   "symbols_in_volume": [
    "astropy.io.votable.tree.RESIZE_AMOUNT",
    "int",
    "numpy.ceil"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table._write_binary": {
  "data": {
   "lineno": 2814,
   "symbols_in_volume": [
    "Exception",
    "astropy.io.votable.tree.base64",
    "astropy.io.votable.tree.io",
    "converter",
    "enumerate",
    "len",
    "numpy.all",
    "numpy.array",
    "range",
    "type",
    "vo_reraise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table._write_tabledata": {
  "data": {
   "lineno": 2765,
   "symbols_in_volume": [
    "Exception",
    "astropy.io.votable.tree._has_c_tabledata_writer",
    "enumerate",
    "len",
    "numpy.all",
    "output",
    "range",
    "vo_reraise",
    "write"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table.create_arrays": {
  "data": {
   "lineno": 2215,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Field",
    "id",
    "len",
    "numpy.dtype",
    "numpy.ma.array",
    "numpy.recarray",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table.fields": {
  "data": {
   "lineno": 2165,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table.format": {
  "data": {
   "lineno": 2141,
   "symbols_in_volume": [
    "NotImplementedError",
    "format",
    "format.lower",
    "format.setter",
    "vo_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table.from_table": {
  "data": {
   "lineno": 2904,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Field",
    "classmethod",
    "cls",
    "numpy.asarray",
    "numpy.ma.array"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table.groups": {
  "data": {
   "lineno": 2181,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table.infos": {
  "data": {
   "lineno": 2199,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table.is_empty": {
  "data": {
   "lineno": 2207
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table.iter_fields_and_params": {
  "data": {
   "lineno": 2931
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table.iter_groups": {
  "data": {
   "lineno": 2963
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table.iter_info": {
  "data": {
   "lineno": 2986
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table.links": {
  "data": {
   "lineno": 2191,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table.nrows": {
  "data": {
   "lineno": 2157,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table.params": {
  "data": {
   "lineno": 2173,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table.parse": {
  "data": {
   "lineno": 2301,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.io.votable.tree.Field",
    "astropy.io.votable.tree.Info",
    "int",
    "isinstance",
    "issubclass",
    "len",
    "list",
    "numpy.any",
    "numpy.asarray",
    "numpy.character",
    "numpy.integer",
    "range",
    "vo_raise",
    "warn_or_raise",
    "warn_unknown_attrs"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table.ref": {
  "data": {
   "lineno": 2120
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table.to_table": {
  "data": {
   "lineno": 2849,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Table",
    "astropy.io.votable.tree.sys",
    "enumerate",
    "getattr",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Table.to_xml": {
  "data": {
   "lineno": 2720,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Group",
    "format",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.VOTableFile": {
  "data": {
   "lineno": 3231,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Element",
    "astropy.io.votable.tree._DescriptionProperty",
    "astropy.io.votable.tree._IDProperty",
    "astropy.io.votable.tree._lookup_by_attr_factory",
    "astropy.io.votable.tree._lookup_by_id_or_name_factory"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.tree.VOTableFile.__init__": {
  "data": {
   "lineno": 3242,
   "symbols_in_volume": [
    "HomogeneousList",
    "ValueError",
    "astropy.io.votable.tree.CooSys",
    "astropy.io.votable.tree.Element",
    "astropy.io.votable.tree.Group",
    "astropy.io.votable.tree.Info",
    "astropy.io.votable.tree.Param",
    "astropy.io.votable.tree.Resource",
    "astropy.io.votable.tree.resolve_id",
    "id",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.VOTableFile.__repr__": {
  "data": {
   "lineno": 3265,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.VOTableFile._add_coosys": {
  "data": {
   "lineno": 3336,
   "symbols_in_volume": [
    "astropy.io.votable.tree.CooSys"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.VOTableFile._add_group": {
  "data": {
   "lineno": 3346,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Group",
    "warn_or_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.VOTableFile._add_info": {
  "data": {
   "lineno": 3341,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Info"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.VOTableFile._add_param": {
  "data": {
   "lineno": 3326,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Param"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.VOTableFile._add_resource": {
  "data": {
   "lineno": 3331,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Resource"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.VOTableFile.coordinate_systems": {
  "data": {
   "lineno": 3285,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.VOTableFile.from_table": {
  "data": {
   "lineno": 3635,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Resource",
    "astropy.io.votable.tree.Table",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.VOTableFile.get_first_table": {
  "data": {
   "lineno": 3497,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.VOTableFile.get_table_by_index": {
  "data": {
   "lineno": 3521,
   "symbols_in_volume": [
    "IndexError",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.VOTableFile.groups": {
  "data": {
   "lineno": 3317,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.VOTableFile.infos": {
  "data": {
   "lineno": 3301,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.VOTableFile.iter_coosys": {
  "data": {
   "lineno": 3598
  },
  "type": "function"
 },
 "astropy.io.votable.tree.VOTableFile.iter_fields_and_params": {
  "data": {
   "lineno": 3531
  },
  "type": "function"
 },
 "astropy.io.votable.tree.VOTableFile.iter_groups": {
  "data": {
   "lineno": 3575
  },
  "type": "function"
 },
 "astropy.io.votable.tree.VOTableFile.iter_info": {
  "data": {
   "lineno": 3613
  },
  "type": "function"
 },
 "astropy.io.votable.tree.VOTableFile.iter_tables": {
  "data": {
   "lineno": 3488
  },
  "type": "function"
 },
 "astropy.io.votable.tree.VOTableFile.iter_values": {
  "data": {
   "lineno": 3560
  },
  "type": "function"
 },
 "astropy.io.votable.tree.VOTableFile.params": {
  "data": {
   "lineno": 3293,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.VOTableFile.parse": {
  "data": {
   "lineno": 3353,
   "symbols_in_volume": [
    "len",
    "vo_raise",
    "vo_warn",
    "warn_or_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.VOTableFile.resources": {
  "data": {
   "lineno": 3309,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.VOTableFile.set_all_tables_format": {
  "data": {
   "lineno": 3628,
   "symbols_in_volume": [
    "format"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.VOTableFile.to_xml": {
  "data": {
   "lineno": 3416,
   "symbols_in_volume": [
    "ValueError",
    "XMLWriter",
    "format",
    "locals"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.VOTableFile.version": {
  "data": {
   "lineno": 3276,
   "symbols_in_volume": [
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Values": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Element",
    "astropy.io.votable.tree._IDProperty"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.tree.Values.__init__": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "astropy.io.votable.tree.Element",
    "astropy.io.votable.tree.resolve_id",
    "id",
    "type",
    "warn_unknown_attrs"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Values.__repr__": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "XMLWriter",
    "astropy.io.votable.tree.io"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Values.from_table_column": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": [
    "list",
    "setattr"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Values.is_defaults": {
  "data": {
   "lineno": 1060
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Values.max": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "max.deleter"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Values.max_inclusive": {
  "data": {
   "lineno": 1004
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Values.min": {
  "data": {
   "lineno": 950,
   "symbols_in_volume": [
    "min.deleter"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Values.min_inclusive": {
  "data": {
   "lineno": 968
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Values.null": {
  "data": {
   "lineno": 879
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Values.options": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Values.parse": {
  "data": {
   "lineno": 1017,
   "symbols_in_volume": [
    "vo_raise",
    "warn_or_raise",
    "warn_unknown_attrs"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Values.ref": {
  "data": {
   "lineno": 932
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Values.to_table_column": {
  "data": {
   "lineno": 1101,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Values.to_xml": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": [
    "yes_no"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Values.to_xml.yes_no": {
  "data": {
   "lineno": 1071
  },
  "type": "function"
 },
 "astropy.io.votable.tree.Values.type": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "type",
    "type.setter",
    "vo_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree._DescriptionProperty": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.tree._DescriptionProperty.description": {
  "data": {
   "lineno": 409
  },
  "type": "function"
 },
 "astropy.io.votable.tree._IDProperty": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.tree._IDProperty.ID": {
  "data": {
   "lineno": 305
  },
  "type": "function"
 },
 "astropy.io.votable.tree._NameProperty": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.tree._NameProperty.name": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "astropy.io.votable.tree._UcdProperty": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.tree._UcdProperty.ucd": {
  "data": {
   "lineno": 391
  },
  "type": "function"
 },
 "astropy.io.votable.tree._UtypeProperty": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.tree._UtypeProperty.utype": {
  "data": {
   "lineno": 365
  },
  "type": "function"
 },
 "astropy.io.votable.tree._XtypeProperty": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.tree._XtypeProperty.xtype": {
  "data": {
   "lineno": 341
  },
  "type": "function"
 },
 "astropy.io.votable.tree.__all__": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "astropy.io.votable.tree._get_default_unit_format": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "astropy.io.votable.tree._get_unit_format": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "astropy.io.votable.tree._get_default_unit_format",
    "format"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree._has_c_tabledata_writer": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "astropy.io.votable.tree._lookup_by_attr_factory": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "lookup_by_attr",
    "lookup_by_attr.__doc__"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree._lookup_by_attr_factory.lookup_by_attr": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "KeyError",
    "getattr",
    "vo_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree._lookup_by_attr_factory.lookup_by_attr_unique": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "KeyError",
    "lookup_by_attr"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree._lookup_by_id_or_name_factory": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "astropy.io.votable.tree._lookup_by_id_or_name_factory.lookup_by_id_or_name": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "KeyError",
    "getattr",
    "vo_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree._resize": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "min",
    "numpy.ma.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.votable.tree.astropy_version": {
  "data": {
   "shadows": "__version__"
  },
  "type": "import"
 },
 "astropy.io.votable.tree.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "astropy.io.votable.tree.check_astroyear": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "astropy.io.votable.tree.re",
    "warn_or_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.check_string": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "isinstance",
    "warn_or_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.check_ucd": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "ValueError",
    "vo_raise",
    "vo_warn"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "astropy.io.votable.tree.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.votable.tree.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "astropy.io.votable.tree.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "astropy.io.votable.tree.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "astropy.io.votable.tree.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.io.votable.tree.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.votable.tree.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.io.votable.tree.resolve_id": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "id",
    "warn_or_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.tree.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.io.votable.tree.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.io.votable.tree.ucd_mod": {
  "data": {
   "shadows": "ucd"
  },
  "type": "import"
 },
 "astropy.io.votable.tree.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.io.votable.tree.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.io.votable.ucd": {
  "data": {},
  "type": "module"
 },
 "astropy.io.votable.ucd.UCDWords": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "astropy.io.votable.ucd.UCDWords.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.ucd.UCDWords.get_description": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "astropy.io.votable.ucd.UCDWords.is_primary": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "astropy.io.votable.ucd.UCDWords.is_secondary": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "astropy.io.votable.ucd.UCDWords.normalize_capitalization": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "astropy.io.votable.ucd.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "astropy.io.votable.ucd._ucd_singleton": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "astropy.io.votable.ucd.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.votable.ucd.check_ucd": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.votable.ucd.parse_ucd"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.ucd.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.votable.ucd.parse_ucd": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "astropy.io.votable.ucd.UCDWords",
    "astropy.io.votable.ucd._ucd_singleton",
    "astropy.io.votable.ucd.re",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.ucd.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.votable.ucd.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.io.votable.ucd.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.io.votable.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.io.votable.util": {
  "data": {
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "module"
 },
 "astropy.io.votable.util.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.io.votable.util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.votable.util.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "astropy.io.votable.util.coerce_range_list_param": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.io.votable.util.re",
    "float",
    "is_frame_of_reference",
    "isinstance",
    "len",
    "list",
    "numeric_or_range",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.util.coerce_range_list_param.is_frame_of_reference": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.util.coerce_range_list_param.numeric_or_range": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "str_or_none",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.util.coerce_range_list_param.str_or_none": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.util.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "astropy.io.votable.util.convert_to_writable_filelike": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "TypeError",
    "astropy.io.votable.util.codecs",
    "astropy.io.votable.util.contextlib",
    "astropy.io.votable.util.gzip",
    "astropy.io.votable.util.io",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.votable.util.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "astropy.io.votable.util.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "astropy.io.votable.util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.votable.util.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.io.votable.util.stc_reference_frames": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "astropy.io.votable.util.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.io.votable.util.version": {
  "data": {
   "shadows": "distutils.version"
  },
  "type": "import"
 },
 "astropy.io.votable.util.version_compare": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "version_to_tuple"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.util.version_compare.version_to_tuple": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "distutils.version.StrictVersion"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.validator": {
  "data": {},
  "type": "module"
 },
 "astropy.io.votable.validator.__doc__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "astropy.io.votable.validator.html": {
  "data": {},
  "type": "module"
 },
 "astropy.io.votable.validator.html.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.votable.validator.html.add_subset": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "float",
    "len",
    "list",
    "reversed"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.validator.html.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "astropy.io.votable.validator.html.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "astropy.io.votable.validator.html.default_style": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "astropy.io.votable.validator.html.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.votable.validator.html.html_header": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "astropy.io.votable.validator.html.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "astropy.io.votable.validator.html.make_html_header": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "astropy.io.votable.validator.html.contextlib",
    "astropy.io.votable.validator.html.default_style",
    "astropy.io.votable.validator.html.html_header"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.validator.html.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.votable.validator.html.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.votable.validator.html.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.io.votable.validator.html.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.io.votable.validator.html.write_index": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "XMLWriter",
    "astropy.io.votable.validator.html.add_subset",
    "astropy.io.votable.validator.html.io",
    "astropy.io.votable.validator.html.make_html_header",
    "astropy.io.votable.validator.html.os",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.validator.html.write_index_table": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "astropy.io.votable.validator.html.write_table",
    "float",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.validator.html.write_result": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "XMLWriter",
    "astropy.io.votable.validator.html.io",
    "astropy.io.votable.validator.html.make_html_header",
    "astropy.io.votable.validator.html.os",
    "astropy.io.votable.validator.html.write_votlint_warning",
    "astropy.io.votable.validator.html.write_warning",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.validator.html.write_result_row": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "astropy.io.votable.validator.html.write_source_line": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "xml_escape"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.validator.html.write_table": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "XMLWriter",
    "astropy.io.votable.validator.html.io",
    "astropy.io.votable.validator.html.make_html_header",
    "astropy.io.votable.validator.html.os",
    "astropy.io.votable.validator.html.write_result_row",
    "enumerate",
    "float",
    "int",
    "len",
    "math.ceil",
    "max",
    "range",
    "write_page_links"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.validator.html.write_table.write_page_links": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.validator.html.write_votlint_warning": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "astropy.io.votable.validator.html.re",
    "astropy.io.votable.validator.html.write_source_line",
    "int",
    "xml_escape"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.validator.html.write_warning": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "astropy.io.votable.validator.html.write_source_line",
    "isinstance",
    "len",
    "xml_escape"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.validator.main": {
  "data": {},
  "type": "module"
 },
 "astropy.io.votable.validator.main.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "astropy.io.votable.validator.main.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.votable.validator.main.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.votable.validator.main.download": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "astropy.io.votable.validator.main.get_srcdir": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "astropy.io.votable.validator.main.os"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.validator.main.get_urls": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "astropy.io.votable.validator.main.gzip",
    "get_pkg_data_filename",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.validator.main.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "astropy.io.votable.validator.main.make_validation_report": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "Spinner",
    "ValueError",
    "astropy.io.votable.validator.main.download",
    "astropy.io.votable.validator.main.get_urls",
    "astropy.io.votable.validator.main.os",
    "astropy.io.votable.validator.main.validate_vo",
    "astropy.io.votable.validator.main.votlint_validate",
    "astropy.io.votable.validator.main.write_html_result",
    "astropy.io.votable.validator.main.write_subindex",
    "color_print",
    "len",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.validator.main.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.votable.validator.main.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.votable.validator.main.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.io.votable.validator.main.validate_vo": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "astropy.io.votable.validator.main.votlint_validate": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "astropy.io.votable.validator.main.write_html_result": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "astropy.io.votable.validator.main.write_subindex": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "astropy.io.votable.validator.result": {
  "data": {},
  "type": "module"
 },
 "astropy.io.votable.validator.result.ExpatError": {
  "data": {
   "shadows": "xml.parsers.expat.ExpatError"
  },
  "type": "import"
 },
 "astropy.io.votable.validator.result.Result": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.io.votable.validator.result.Result.__contains__": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "astropy.io.votable.validator.result.Result.__enter__": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "astropy.io.votable.validator.result.Result.__exit__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "astropy.io.votable.validator.result.Result.__getitem__": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "astropy.io.votable.validator.result.Result.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "astropy.io.votable.validator.result.hashlib",
    "astropy.io.votable.validator.result.os"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.validator.result.Result.__setitem__": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "astropy.io.votable.validator.result.Result.download_xml_content": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "astropy.io.votable.validator.result.os",
    "astropy.io.votable.validator.result.socket",
    "fail",
    "hasattr",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.validator.result.Result.download_xml_content.fail": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.validator.result.Result.get_attribute_path": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "astropy.io.votable.validator.result.os"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.validator.result.Result.get_dirpath": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "astropy.io.votable.validator.result.os"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.validator.result.Result.get_htmlpath": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "astropy.io.votable.validator.result.Result.get_vo_xml_path": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "astropy.io.votable.validator.result.os"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.validator.result.Result.get_xml_content": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "astropy.io.votable.validator.result.os",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.validator.result.Result.has_warning": {
  "data": {
   "lineno": 208
  },
  "type": "function"
 },
 "astropy.io.votable.validator.result.Result.load_attributes": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "Exception",
    "astropy.io.votable.validator.result.os",
    "astropy.io.votable.validator.result.shutil",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.validator.result.Result.match_expectations": {
  "data": {
   "lineno": 211
  },
  "type": "function"
 },
 "astropy.io.votable.validator.result.Result.save_attributes": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.validator.result.Result.validate_vo": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "OSError",
    "TypeError",
    "ValueError",
    "astropy.io.votable.validator.result.os",
    "astropy.io.votable.validator.result.warnings",
    "input",
    "open",
    "set",
    "str",
    "xml.parsers.expat.ExpatError"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.validator.result.Result.validate_with_votlint": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "astropy.io.votable.validator.result.subprocess",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.validator.result.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.votable.validator.result.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.votable.validator.result.get_result_subsets": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "astropy.io.votable.validator.result.Result",
    "getattr",
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.validator.result.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "astropy.io.votable.validator.result.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.io.votable.validator.result.pickle": {
  "data": {
   "shadows": "cPickle"
  },
  "type": "import"
 },
 "astropy.io.votable.validator.result.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.votable.validator.result.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "astropy.io.votable.validator.result.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "astropy.io.votable.validator.result.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "astropy.io.votable.validator.result.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.io.votable.validator.result.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.io.votable.volint": {
  "data": {},
  "type": "module"
 },
 "astropy.io.votable.volint.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "astropy.io.votable.volint.main": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "astropy.io.votable.volint.argparse"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.xmlutil": {
  "data": {},
  "type": "module"
 },
 "astropy.io.votable.xmlutil.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "astropy.io.votable.xmlutil._token_regex": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "astropy.io.votable.xmlutil.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.io.votable.xmlutil.check_anyuri": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "warn_or_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.xmlutil.check_id": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "warn_or_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.xmlutil.check_mime_content_type": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "warn_or_raise"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.xmlutil.check_token": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "astropy.io.votable.xmlutil.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.io.votable.xmlutil.fix_id": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "vo_warn"
   ]
  },
  "type": "function"
 },
 "astropy.io.votable.xmlutil.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.io.votable.xmlutil.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.io.votable.xmlutil.validate_schema": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "astropy.io.votable.xmlutil.xml_check": {
  "data": {
   "shadows": "check"
  },
  "type": "import"
 },
 "astropy.log": {
  "data": {
   "lineno": 287
  },
  "type": "constant"
 },
 "astropy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "astropy.modeling": {
  "data": {},
  "type": "module"
 },
 "astropy.modeling.blackbody": {
  "data": {
   "symbols_in_volume": [
    "RuntimeWarning",
    "astropy.modeling.blackbody.warnings",
    "numpy.expm1",
    "numpy.isnan"
   ]
  },
  "type": "module"
 },
 "astropy.modeling.blackbody.BlackBody1D": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.blackbody.BlackBody1D._parameter_units_for_data_units": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.blackbody.BlackBody1D.evaluate": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "astropy.modeling.blackbody.blackbody_nu",
    "hasattr",
    "isinstance",
    "numpy.pi.to"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.blackbody.BlackBody1D.input_units": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.blackbody.BlackBody1D.lambda_max": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.blackbody.FLAM": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "astropy.modeling.blackbody.FNU": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "astropy.modeling.blackbody.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.modeling.blackbody.__all__": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "astropy.modeling.blackbody._has_buggy_expm1": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "astropy.modeling.blackbody.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.blackbody.blackbody_lambda": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "astropy.modeling.blackbody.FLAM",
    "astropy.modeling.blackbody.blackbody_nu",
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.blackbody.blackbody_nu": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "ValueError",
    "astropy.modeling.blackbody.FNU",
    "astropy.modeling.blackbody._has_buggy_expm1",
    "astropy.modeling.blackbody.warnings",
    "numpy.all",
    "numpy.any",
    "numpy.expm1",
    "numpy.float64",
    "numpy.inf",
    "numpy.isfinite",
    "numpy.isnan",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.blackbody.const": {
  "data": {
   "shadows": "constants"
  },
  "type": "import"
 },
 "astropy.modeling.blackbody.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.blackbody.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.blackbody.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.blackbody.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.modeling.blackbody.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.blackbody.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.modeling.core": {
  "data": {
   "symbols_in_volume": [
    "astropy.modeling.core.OPERATOR_PRECEDENCE",
    "astropy.modeling.core._CompoundModelMeta",
    "astropy.modeling.core._ModelMeta",
    "astropy.modeling.core._ORDER_OF_OPERATORS",
    "astropy.modeling.core._composition_operator",
    "astropy.modeling.core._join_operator",
    "astropy.modeling.core._make_arithmetic_operator",
    "astropy.modeling.core.operator",
    "enumerate"
   ]
  },
  "type": "module"
 },
 "astropy.modeling.core.BINARY_OPERATORS": {
  "data": {
   "lineno": 2156
  },
  "type": "constant"
 },
 "astropy.modeling.core.Fittable1DModel": {
  "data": {
   "lineno": 2095,
   "symbols_in_volume": [
    "astropy.modeling.core.FittableModel"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.core.Fittable2DModel": {
  "data": {
   "lineno": 2107,
   "symbols_in_volume": [
    "astropy.modeling.core.FittableModel"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.core.FittableModel": {
  "data": {
   "lineno": 2074,
   "symbols_in_volume": [
    "astropy.modeling.core.Model"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.core.Model": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "astropy.modeling.core._ModelMeta",
    "astropy.modeling.core._model_oper",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.core.Model.__call__": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "NotImplementedError",
    "Quantity",
    "any",
    "enumerate",
    "input",
    "input.shape",
    "isinstance",
    "isiterable",
    "itertools.chain",
    "len",
    "numpy.asarray",
    "numpy.bool",
    "numpy.logical_not",
    "numpy.logical_or",
    "numpy.nan",
    "numpy.zeros",
    "range",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.__init__": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "astropy.modeling.core.Model",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.__len__": {
  "data": {
   "lineno": 715
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.__repr__": {
  "data": {
   "lineno": 709
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.__str__": {
  "data": {
   "lineno": 712
  },
  "type": "function"
 },
 "astropy.modeling.core.Model._check_param_broadcast": {
  "data": {
   "lineno": 1867,
   "symbols_in_volume": [
    "InputParameterError",
    "check_broadcast",
    "len",
    "numpy.shape",
    "self._model_set_axis",
    "self._param_metrics",
    "self.param_names"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model._format_repr": {
  "data": {
   "lineno": 2003,
   "symbols_in_volume": [
    "getattr",
    "len",
    "param_repr_oneline",
    "repr",
    "self",
    "self.__class__.__name__",
    "self.name",
    "self.param_names"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model._format_str": {
  "data": {
   "lineno": 2034,
   "symbols_in_volume": [
    "Table",
    "getattr",
    "indent",
    "len",
    "self",
    "self.__class__.__name__",
    "self.inputs",
    "self.name",
    "self.outputs",
    "self.param_names",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model._from_existing": {
  "data": {
   "lineno": 1572,
   "symbols_in_volume": [
    "AliasDict",
    "aliases",
    "collections.defaultdict",
    "dict",
    "isinstance",
    "len",
    "self",
    "self.__init__",
    "self.__new__",
    "self._constraints",
    "self._model_set_axis",
    "self._n_models",
    "self._param_metrics",
    "self._parameters",
    "self.copy",
    "self.param_names",
    "self.parameter_constraints",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model._has_units": {
  "data": {
   "lineno": 1232,
   "symbols_in_volume": [
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model._initialize_constraints": {
  "data": {
   "lineno": 1621,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "self",
    "self._constraints",
    "self.model_constraints",
    "self.param_names",
    "self.parameter_constraints"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model._initialize_parameter_values": {
  "data": {
   "lineno": 1784,
   "symbols_in_volume": [
    "InputParameterError",
    "Quantity",
    "TypeError",
    "getattr",
    "isinstance",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float64",
    "numpy.shape",
    "numpy.size",
    "self",
    "self.__class__.__name__",
    "self._param_metrics",
    "self._parameters",
    "self.param_names",
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model._initialize_parameters": {
  "data": {
   "lineno": 1651,
   "symbols_in_volume": [
    "InputParameterError",
    "TypeError",
    "ValueError",
    "abs",
    "bool",
    "collections.defaultdict",
    "dict",
    "enumerate",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "max",
    "numpy.float",
    "numpy.integer",
    "numpy.ndim",
    "quantity_asanyarray",
    "self",
    "self.__class__.__name__",
    "self._check_param_broadcast",
    "self._initialize_parameter_values",
    "self._model_set_axis",
    "self._n_models",
    "self._param_metrics",
    "self.param_names"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model._param_sets": {
  "data": {
   "lineno": 1936,
   "symbols_in_volume": [
    "Quantity",
    "getattr",
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.shape",
    "object",
    "self",
    "self._param_metrics",
    "self.param_names",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model._supports_unit_fitting": {
  "data": {
   "lineno": 1241,
   "symbols_in_volume": [
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.bounding_box": {
  "data": {
   "lineno": 1130
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.bounds": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.copy": {
  "data": {
   "lineno": 1544,
   "symbols_in_volume": [
    "astropy.modeling.core.copy",
    "self"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.eqcons": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.evaluate": {
  "data": {
   "lineno": 1248,
   "symbols_in_volume": [
    "astropy.modeling.core.abc"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.fixed": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.has_user_bounding_box": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.has_user_inverse": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.ineqcons": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.input_units": {
  "data": {
   "lineno": 1402,
   "symbols_in_volume": [
    "self._input_units"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.inverse": {
  "data": {
   "lineno": 998
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.model_set_axis": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.n_inputs": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.n_outputs": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.n_submodels": {
  "data": {
   "lineno": 1563
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.name": {
  "data": {
   "lineno": 827
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.param_sets": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.parameters": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "InputParameterError",
    "ValueError",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.prepare_inputs": {
  "data": {
   "lineno": 1430,
   "symbols_in_volume": [
    "Quantity",
    "UnitsError",
    "_combine_equivalency_dict",
    "astropy.modeling.core._prepare_inputs_model_set",
    "astropy.modeling.core._prepare_inputs_single_model",
    "astropy.modeling.core._validate_input_shapes",
    "float",
    "getattr",
    "isinstance",
    "len",
    "numpy.any",
    "numpy.asanyarray",
    "range",
    "self",
    "self.input_units",
    "self.input_units.get",
    "self.input_units_allow_dimensionless",
    "self.input_units_equivalencies",
    "self.input_units_strict",
    "self.inputs",
    "self.model_set_axis",
    "self.param_names",
    "self.standard_broadcasting"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.prepare_outputs": {
  "data": {
   "lineno": 1538,
   "symbols_in_volume": [
    "astropy.modeling.core._prepare_outputs_model_set",
    "astropy.modeling.core._prepare_outputs_single_model",
    "len",
    "self"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.rename": {
  "data": {
   "lineno": 1554,
   "symbols_in_volume": [
    "self.copy"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.render": {
  "data": {
   "lineno": 1265,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "add_array",
    "extract_array",
    "float",
    "int",
    "len",
    "numpy.array",
    "numpy.asanyarray",
    "numpy.ceil",
    "numpy.mean",
    "numpy.mgrid",
    "numpy.zeros",
    "self",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.return_units": {
  "data": {
   "lineno": 1426,
   "symbols_in_volume": [
    "self._return_units"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.sum_of_implicit_terms": {
  "data": {
   "lineno": 1252
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.tied": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.with_units_from_data": {
  "data": {
   "lineno": 1189,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.Model.without_units_for_data": {
  "data": {
   "lineno": 1146,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.ModelDefinitionError": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.core.OPERATOR_PRECEDENCE": {
  "data": {
   "lineno": 2168
  },
  "type": "constant"
 },
 "astropy.modeling.core.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.modeling.core._CompoundModel": {
  "data": {
   "lineno": 2764,
   "symbols_in_volume": [
    "astropy.modeling.core.Model",
    "astropy.modeling.core._CompoundModelMeta",
    "astropy.modeling.core.sys"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.core._CompoundModel.__getattr__": {
  "data": {
   "lineno": 2780,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "self",
    "self.__class__"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModel.__getitem__": {
  "data": {
   "lineno": 2796,
   "symbols_in_volume": [
    "isinstance",
    "model",
    "model._from_existing",
    "model.param_names",
    "self",
    "self.__class__",
    "self.__class__._normalize_index",
    "self.__class__._param_map_inverse",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModel.__reduce__": {
  "data": {
   "lineno": 2810,
   "symbols_in_volume": [
    "RuntimeError",
    "astropy.modeling.core._CompoundModel",
    "astropy.modeling.core.copy",
    "find_current_module",
    "self",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModel.__str__": {
  "data": {
   "lineno": 2771,
   "symbols_in_volume": [
    "astropy.modeling.core._CompoundModel",
    "indent",
    "self",
    "self._format_components",
    "self._format_expression",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModel._get_submodels": {
  "data": {
   "lineno": 2882,
   "symbols_in_volume": [
    "self.__class__._get_submodels"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModel._parameter_units_for_data_units": {
  "data": {
   "lineno": 2886,
   "symbols_in_volume": [
    "enumerate",
    "model",
    "model._parameter_units_for_data_units",
    "self._param_map_inverse",
    "self._submodels"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModel.evaluate": {
  "data": {
   "lineno": 2842,
   "symbols_in_volume": [
    "self.__class__.evaluate"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModel.fittable": {
  "data": {
   "lineno": 2838,
   "symbols_in_volume": [
    "property",
    "self.__class__.fittable"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModel.inverse": {
  "data": {
   "lineno": 2851,
   "symbols_in_volume": [
    "_not_implemented",
    "astropy.modeling.core.operator",
    "dict",
    "property",
    "self._tree.evaluate"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModel.inverse._not_implemented": {
  "data": {
   "lineno": 2853
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModel.inverse._not_implemented._raise": {
  "data": {
   "lineno": 2854,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModel.inverse.getter": {
  "data": {
   "lineno": 2868,
   "symbols_in_volume": [
    "NotImplementedError",
    "model",
    "self.inverse"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModel.n_submodels": {
  "data": {
   "lineno": 2830,
   "symbols_in_volume": [
    "len",
    "self.submodel_names"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModel.param_names": {
  "data": {
   "lineno": 2834,
   "symbols_in_volume": [
    "property",
    "self.__class__.param_names"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModel.submodel_names": {
  "data": {
   "lineno": 2826,
   "symbols_in_volume": [
    "property",
    "self.__class__.submodel_names"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModelMeta": {
  "data": {
   "lineno": 2175,
   "symbols_in_volume": [
    "astropy.modeling.core._ModelMeta"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.core._CompoundModelMeta.__dir__": {
  "data": {
   "lineno": 2236,
   "symbols_in_volume": [
    "AttributeError",
    "astropy.modeling.core._CompoundModelMeta",
    "dir",
    "list",
    "set",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModelMeta.__getattr__": {
  "data": {
   "lineno": 2212,
   "symbols_in_volume": [
    "AttributeError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModelMeta.__getitem__": {
  "data": {
   "lineno": 2204,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModelMeta.__reduce__": {
  "data": {
   "lineno": 2256,
   "symbols_in_volume": [
    "KeyError",
    "astropy.modeling.core._CompoundModelMeta",
    "isinstance",
    "super",
    "suppress",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModelMeta.__repr__": {
  "data": {
   "lineno": 2222,
   "symbols_in_volume": [
    "indent"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModelMeta._check_inputs_and_outputs": {
  "data": {
   "lineno": 2436,
   "symbols_in_volume": [
    "astropy.modeling.core.ModelDefinitionError",
    "astropy.modeling.core.operator",
    "classmethod",
    "combine_labels"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModelMeta._format_components": {
  "data": {
   "lineno": 2635,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModelMeta._format_expression": {
  "data": {
   "lineno": 2630,
   "symbols_in_volume": [
    "astropy.modeling.core.OPERATOR_PRECEDENCE"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModelMeta._from_operator": {
  "data": {
   "lineno": 2328,
   "symbols_in_volume": [
    "ExpressionTree",
    "ValueError",
    "astropy.modeling.core.Model",
    "astropy.modeling.core._CompoundModelMeta",
    "astropy.modeling.core.copy",
    "astropy.modeling.core.operator",
    "classmethod",
    "find_current_module",
    "isinstance",
    "mcls",
    "mcls._make_user_inverse",
    "new_cls",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModelMeta._get_slice": {
  "data": {
   "lineno": 2709,
   "symbols_in_volume": [
    "astropy.modeling.core.BINARY_OPERATORS",
    "astropy.modeling.core._model_oper",
    "dict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModelMeta._get_submodels": {
  "data": {
   "lineno": 2516
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModelMeta._init_param_descriptors": {
  "data": {
   "lineno": 2527,
   "symbols_in_volume": [
    "astropy.modeling.core.Model",
    "dict",
    "getattr",
    "isinstance",
    "setattr"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModelMeta._init_param_names": {
  "data": {
   "lineno": 2576,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModelMeta._make_user_inverse": {
  "data": {
   "lineno": 2472,
   "symbols_in_volume": [
    "NotImplementedError",
    "astropy.modeling.core.operator",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModelMeta._model_evaluate_getter": {
  "data": {
   "lineno": 2729,
   "symbols_in_volume": [
    "astropy.modeling.core.Model",
    "evaluate",
    "isinstance",
    "isinstancemethod",
    "itertools.chain",
    "itertools.islice",
    "len",
    "model.evaluate",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModelMeta._model_evaluate_getter.f": {
  "data": {
   "lineno": 2748,
   "symbols_in_volume": [
    "itertools.chain",
    "itertools.islice",
    "model",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModelMeta._normalize_index": {
  "data": {
   "lineno": 2639,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "ValueError",
    "check_for_negative_index",
    "get_index_from_name",
    "int",
    "isinstance",
    "len",
    "numpy.integer",
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModelMeta._normalize_index.check_for_negative_index": {
  "data": {
   "lineno": 2658,
   "symbols_in_volume": [
    "IndexError",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModelMeta._normalize_index.get_index_from_name": {
  "data": {
   "lineno": 2650,
   "symbols_in_volume": [
    "IndexError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModelMeta.evaluate": {
  "data": {
   "lineno": 2304,
   "symbols_in_volume": [
    "astropy.modeling.core.BINARY_OPERATORS",
    "func",
    "iter",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModelMeta.fittable": {
  "data": {
   "lineno": 2293,
   "symbols_in_volume": [
    "all",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModelMeta.param_names": {
  "data": {
   "lineno": 2286,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._CompoundModelMeta.submodel_names": {
  "data": {
   "lineno": 2266,
   "symbols_in_volume": [
    "enumerate",
    "property",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._ModelMeta": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "astropy.modeling.core._model_oper",
    "astropy.modeling.core.abc",
    "collections.OrderedDict",
    "set"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.core._ModelMeta.__init__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "astropy.modeling.core._ModelMeta",
    "astropy.modeling.core.inspect",
    "hasattr",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._ModelMeta.__new__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "astropy.modeling.core._ModelMeta",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._ModelMeta.__reduce__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "dict",
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._ModelMeta.__repr__": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "astropy.modeling.core._ModelMeta._create_bounding_box_property": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "ValueError",
    "astropy.modeling.core.ModelDefinitionError",
    "astropy.modeling.core.types",
    "callable",
    "isinstance",
    "len",
    "object",
    "property",
    "signature"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._ModelMeta._create_bounding_box_subclass": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "astropy.modeling.core.ModelDefinitionError",
    "enumerate",
    "make_function_with_signature",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._ModelMeta._create_bounding_box_subclass.__call__": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._ModelMeta._create_inverse_property": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "isinstance",
    "object",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._ModelMeta._format_cls_repr": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "Exception",
    "astropy.modeling.core._ModelMeta",
    "format_inheritance",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._ModelMeta._format_cls_repr.format_inheritance": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "astropy.modeling.core.inspect",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._ModelMeta._handle_special_methods": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "Quantity",
    "all",
    "astropy.modeling.core.inspect",
    "isinstance",
    "make_function_with_signature",
    "numpy.nan",
    "tuple",
    "update_wrapper"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._ModelMeta._handle_special_methods.__call__": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._ModelMeta._handle_special_methods.__init__": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._ModelMeta._handle_special_methods.update_wrapper": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._ModelMeta._is_concrete": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "astropy.modeling.core.inspect",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._ModelMeta._repr_pretty_": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._ModelMeta.n_inputs": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._ModelMeta.n_outputs": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._ModelMeta.name": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._ModelMeta.rename": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "find_current_module",
    "hasattr",
    "isinstance",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._ORDER_OF_OPERATORS": {
  "data": {
   "lineno": 2167
  },
  "type": "constant"
 },
 "astropy.modeling.core.__all__": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "astropy.modeling.core._composition_operator": {
  "data": {
   "lineno": 2132
  },
  "type": "function"
 },
 "astropy.modeling.core._custom_model_wrapper": {
  "data": {
   "lineno": 2979,
   "symbols_in_volume": [
    "Parameter",
    "astropy.modeling.core.FittableModel",
    "astropy.modeling.core.ModelDefinitionError",
    "dict",
    "find_current_module",
    "func",
    "func.__doc__",
    "func.__name__",
    "get_inputs_and_params",
    "len",
    "staticmethod",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._join_operator": {
  "data": {
   "lineno": 2143
  },
  "type": "function"
 },
 "astropy.modeling.core._make_arithmetic_operator": {
  "data": {
   "lineno": 2119
  },
  "type": "function"
 },
 "astropy.modeling.core._make_arithmetic_operator.op": {
  "data": {
   "lineno": 2126,
   "symbols_in_volume": [
    "make_binary_operator_eval"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._model_oper": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "astropy.modeling.core._prepare_inputs_model_set": {
  "data": {
   "lineno": 3210,
   "symbols_in_volume": [
    "ValueError",
    "check_broadcast",
    "enumerate",
    "len",
    "model.inputs",
    "model.model_set_axis",
    "model.n_inputs",
    "model.n_outputs",
    "numpy.rollaxis"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._prepare_inputs_single_model": {
  "data": {
   "lineno": 3134,
   "symbols_in_volume": [
    "ValueError",
    "check_broadcast",
    "enumerate",
    "len",
    "max",
    "model.inputs",
    "model.n_inputs",
    "model.n_outputs",
    "model.standard_broadcasting",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._prepare_outputs_model_set": {
  "data": {
   "lineno": 3275,
   "symbols_in_volume": [
    "enumerate",
    "list",
    "model.model_set_axis",
    "numpy.rollaxis",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._prepare_outputs_single_model": {
  "data": {
   "lineno": 3193,
   "symbols_in_volume": [
    "enumerate",
    "list",
    "numpy.asscalar",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core._validate_input_shapes": {
  "data": {
   "lineno": 3289,
   "symbols_in_volume": [
    "ValueError",
    "check_broadcast",
    "enumerate",
    "len",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "astropy.modeling.core.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.core.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "astropy.modeling.core.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "astropy.modeling.core.custom_model": {
  "data": {
   "lineno": 2896,
   "symbols_in_volume": [
    "TypeError",
    "__name__",
    "astropy.modeling.core._custom_model_wrapper",
    "astropy.modeling.core.functools",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "astropy.modeling.core.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.core.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "astropy.modeling.core.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "astropy.modeling.core.islice": {
  "data": {
   "shadows": "itertools.islice"
  },
  "type": "import"
 },
 "astropy.modeling.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.core.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "astropy.modeling.core.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.core.render_model": {
  "data": {
   "lineno": 3040,
   "symbols_in_volume": [
    "ValueError",
    "add_array",
    "extract_array",
    "int",
    "len",
    "model",
    "model.bounding_box",
    "model.n_inputs",
    "numpy.array",
    "numpy.ceil",
    "numpy.mean",
    "numpy.mgrid",
    "numpy.zeros",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.core.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.modeling.core.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "astropy.modeling.core.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.functional_models": {
  "data": {
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float",
    "numpy.float32",
    "numpy.pi"
   ]
  },
  "type": "module"
 },
 "astropy.modeling.functional_models.AiryDisk2D": {
  "data": {
   "lineno": 2156,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.AiryDisk2D._parameter_units_for_data_units": {
  "data": {
   "lineno": 2245,
   "symbols_in_volume": [
    "UnitsError",
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.AiryDisk2D.evaluate": {
  "data": {
   "lineno": 2206,
   "symbols_in_volume": [
    "ImportError",
    "Quantity",
    "ValueError",
    "classmethod",
    "isinstance",
    "numpy.ones",
    "numpy.pi",
    "numpy.sqrt",
    "scipy.special.j1",
    "scipy.special.jn_zeros"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.AiryDisk2D.input_units": {
  "data": {
   "lineno": 2237,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.BaseGaussian1D": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "Parameter",
    "astropy.modeling.functional_models.FLOAT_EPSILON"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.BaseGaussian1D.bounding_box": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.BaseGaussian1D.fwhm": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Box1D": {
  "data": {
   "lineno": 1637,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.Box1D._parameter_units_for_data_units": {
  "data": {
   "lineno": 1734,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Box1D.bounding_box": {
  "data": {
   "lineno": 1715,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Box1D.evaluate": {
  "data": {
   "lineno": 1694,
   "symbols_in_volume": [
    "Quantity",
    "isinstance",
    "numpy.logical_and",
    "numpy.select",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Box1D.fit_deriv": {
  "data": {
   "lineno": 1706,
   "symbols_in_volume": [
    "classmethod",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Box1D.input_units": {
  "data": {
   "lineno": 1727,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Box2D": {
  "data": {
   "lineno": 1740,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.Box2D._parameter_units_for_data_units": {
  "data": {
   "lineno": 1821,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Box2D.bounding_box": {
  "data": {
   "lineno": 1799,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Box2D.evaluate": {
  "data": {
   "lineno": 1783,
   "symbols_in_volume": [
    "Quantity",
    "isinstance",
    "numpy.logical_and",
    "numpy.select",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Box2D.input_units": {
  "data": {
   "lineno": 1813,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Const1D": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.Const1D._parameter_units_for_data_units": {
  "data": {
   "lineno": 1248,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Const1D.evaluate": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": [
    "Quantity",
    "isinstance",
    "numpy.empty_like",
    "numpy.ones_like",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Const1D.fit_deriv": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": [
    "numpy.ones_like",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Const1D.input_units": {
  "data": {
   "lineno": 1244,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Const2D": {
  "data": {
   "lineno": 1252,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.Const2D._parameter_units_for_data_units": {
  "data": {
   "lineno": 1297,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Const2D.evaluate": {
  "data": {
   "lineno": 1275,
   "symbols_in_volume": [
    "Quantity",
    "isinstance",
    "numpy.empty_like",
    "numpy.ones_like",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Const2D.input_units": {
  "data": {
   "lineno": 1293,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Delta1D": {
  "data": {
   "lineno": 1623
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.Delta1D.__init__": {
  "data": {
   "lineno": 1626,
   "symbols_in_volume": [
    "ModelDefinitionError"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Delta2D": {
  "data": {
   "lineno": 1630
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.Delta2D.__init__": {
  "data": {
   "lineno": 1633,
   "symbols_in_volume": [
    "ModelDefinitionError"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Disk2D": {
  "data": {
   "lineno": 1434,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.Disk2D._parameter_units_for_data_units": {
  "data": {
   "lineno": 1503,
   "symbols_in_volume": [
    "UnitsError",
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Disk2D.bounding_box": {
  "data": {
   "lineno": 1484,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Disk2D.evaluate": {
  "data": {
   "lineno": 1472,
   "symbols_in_volume": [
    "Quantity",
    "isinstance",
    "numpy.select",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Disk2D.input_units": {
  "data": {
   "lineno": 1495,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Ellipse2D": {
  "data": {
   "lineno": 1301,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.Ellipse2D._parameter_units_for_data_units": {
  "data": {
   "lineno": 1420,
   "symbols_in_volume": [
    "UnitsError",
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Ellipse2D.bounding_box": {
  "data": {
   "lineno": 1396,
   "symbols_in_volume": [
    "ellipse_extent",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Ellipse2D.evaluate": {
  "data": {
   "lineno": 1378,
   "symbols_in_volume": [
    "Quantity",
    "isinstance",
    "numpy.cos",
    "numpy.select",
    "numpy.sin",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Ellipse2D.input_units": {
  "data": {
   "lineno": 1412,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.FLOAT_EPSILON": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "astropy.modeling.functional_models.Gaussian1D": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "astropy.modeling.functional_models.BaseGaussian1D"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.Gaussian1D._parameter_units_for_data_units": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Gaussian1D.evaluate": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.exp",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Gaussian1D.fit_deriv": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "numpy.exp",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Gaussian1D.input_units": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Gaussian2D": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.Gaussian2D.__init__": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "InputParameterError",
    "ValueError",
    "astropy.modeling.functional_models.FLOAT_EPSILON",
    "astropy.modeling.functional_models.Gaussian2D",
    "numpy.arctan2",
    "numpy.array",
    "numpy.linalg.eig",
    "numpy.sqrt",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Gaussian2D._parameter_units_for_data_units": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "UnitsError",
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Gaussian2D.bounding_box": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "ellipse_extent"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Gaussian2D.evaluate": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.exp",
    "numpy.sin",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Gaussian2D.fit_deriv": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.exp",
    "numpy.sin",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Gaussian2D.input_units": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Gaussian2D.x_fwhm": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Gaussian2D.y_fwhm": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.GaussianAbsorption1D": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "astropy.modeling.functional_models.BaseGaussian1D",
    "deprecated"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.GaussianAbsorption1D.__init__": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "astropy.modeling.functional_models.GaussianAbsorption1D",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.GaussianAbsorption1D.evaluate": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "astropy.modeling.functional_models.Gaussian1D",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.GaussianAbsorption1D.fit_deriv": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "astropy.modeling.functional_models.Gaussian1D",
    "astropy.modeling.functional_models.operator",
    "list",
    "map",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Linear1D": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.Linear1D._parameter_units_for_data_units": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Linear1D.evaluate": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Linear1D.fit_deriv": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "numpy.ones_like",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Linear1D.input_units": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Linear1D.inverse": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Lorentz1D": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.Lorentz1D._parameter_units_for_data_units": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Lorentz1D.bounding_box": {
  "data": {
   "lineno": 1039
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Lorentz1D.evaluate": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Lorentz1D.fit_deriv": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Lorentz1D.input_units": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.MexicanHat1D": {
  "data": {
   "lineno": 2005,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.MexicanHat1D._parameter_units_for_data_units": {
  "data": {
   "lineno": 2087,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.MexicanHat1D.bounding_box": {
  "data": {
   "lineno": 2065
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.MexicanHat1D.evaluate": {
  "data": {
   "lineno": 2058,
   "symbols_in_volume": [
    "numpy.exp",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.MexicanHat1D.input_units": {
  "data": {
   "lineno": 2080,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.MexicanHat2D": {
  "data": {
   "lineno": 2093,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.MexicanHat2D._parameter_units_for_data_units": {
  "data": {
   "lineno": 2144,
   "symbols_in_volume": [
    "UnitsError",
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.MexicanHat2D.evaluate": {
  "data": {
   "lineno": 2129,
   "symbols_in_volume": [
    "numpy.exp",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.MexicanHat2D.input_units": {
  "data": {
   "lineno": 2136,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Moffat1D": {
  "data": {
   "lineno": 2257,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.Moffat1D._parameter_units_for_data_units": {
  "data": {
   "lineno": 2346,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Moffat1D.evaluate": {
  "data": {
   "lineno": 2321,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Moffat1D.fit_deriv": {
  "data": {
   "lineno": 2327,
   "symbols_in_volume": [
    "numpy.log",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Moffat1D.fwhm": {
  "data": {
   "lineno": 2312,
   "symbols_in_volume": [
    "numpy.sqrt",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Moffat1D.input_units": {
  "data": {
   "lineno": 2339,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Moffat2D": {
  "data": {
   "lineno": 2352,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.Moffat2D._parameter_units_for_data_units": {
  "data": {
   "lineno": 2427,
   "symbols_in_volume": [
    "UnitsError",
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Moffat2D.evaluate": {
  "data": {
   "lineno": 2398,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Moffat2D.fit_deriv": {
  "data": {
   "lineno": 2405,
   "symbols_in_volume": [
    "numpy.log",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Moffat2D.fwhm": {
  "data": {
   "lineno": 2389,
   "symbols_in_volume": [
    "numpy.sqrt",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Moffat2D.input_units": {
  "data": {
   "lineno": 2419,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.modeling.functional_models.Planar2D": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.Planar2D.evaluate": {
  "data": {
   "lineno": 955,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Planar2D.fit_deriv": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "numpy.ones_like",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.RedshiftScaleFactor": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.RedshiftScaleFactor.evaluate": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.RedshiftScaleFactor.fit_deriv": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.RedshiftScaleFactor.inverse": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Ring2D": {
  "data": {
   "lineno": 1515,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.Ring2D.__init__": {
  "data": {
   "lineno": 1560,
   "symbols_in_volume": [
    "InputParameterError",
    "astropy.modeling.functional_models.Ring2D",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Ring2D._parameter_units_for_data_units": {
  "data": {
   "lineno": 1610,
   "symbols_in_volume": [
    "UnitsError",
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Ring2D.bounding_box": {
  "data": {
   "lineno": 1589,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Ring2D.evaluate": {
  "data": {
   "lineno": 1576,
   "symbols_in_volume": [
    "Quantity",
    "isinstance",
    "numpy.logical_and",
    "numpy.select",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Ring2D.input_units": {
  "data": {
   "lineno": 1602,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Scale": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.Scale.evaluate": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "isinstance",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Scale.fit_deriv": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Scale.input_units": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Scale.inverse": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Sersic1D": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.Sersic1D._parameter_units_for_data_units": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Sersic1D.evaluate": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "classmethod",
    "numpy.exp",
    "scipy.special.gammaincinv"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Sersic1D.input_units": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Sersic2D": {
  "data": {
   "lineno": 2439,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.Sersic2D._parameter_units_for_data_units": {
  "data": {
   "lineno": 2549,
   "symbols_in_volume": [
    "UnitsError",
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Sersic2D.evaluate": {
  "data": {
   "lineno": 2521,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "classmethod",
    "numpy.cos",
    "numpy.exp",
    "numpy.sin",
    "numpy.sqrt",
    "scipy.special.gammaincinv"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Sersic2D.input_units": {
  "data": {
   "lineno": 2541,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Shift": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.Shift.evaluate": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "isinstance",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Shift.fit_deriv": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "numpy.ones_like",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Shift.input_units": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Shift.inverse": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Shift.sum_of_implicit_terms": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Sine1D": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.Sine1D._parameter_units_for_data_units": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Sine1D.evaluate": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "astropy.modeling.functional_models.TWOPI",
    "isinstance",
    "numpy.sin",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Sine1D.fit_deriv": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "astropy.modeling.functional_models.TWOPI",
    "numpy.cos",
    "numpy.sin",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Sine1D.input_units": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.TWOPI": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "astropy.modeling.functional_models.Trapezoid1D": {
  "data": {
   "lineno": 1829,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.Trapezoid1D._parameter_units_for_data_units": {
  "data": {
   "lineno": 1920,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Trapezoid1D.bounding_box": {
  "data": {
   "lineno": 1901,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Trapezoid1D.evaluate": {
  "data": {
   "lineno": 1876,
   "symbols_in_volume": [
    "Quantity",
    "isinstance",
    "numpy.logical_and",
    "numpy.select",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Trapezoid1D.input_units": {
  "data": {
   "lineno": 1913,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.TrapezoidDisk2D": {
  "data": {
   "lineno": 1927,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.TrapezoidDisk2D._parameter_units_for_data_units": {
  "data": {
   "lineno": 1992,
   "symbols_in_volume": [
    "UnitsError",
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.TrapezoidDisk2D.bounding_box": {
  "data": {
   "lineno": 1971,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.TrapezoidDisk2D.evaluate": {
  "data": {
   "lineno": 1955,
   "symbols_in_volume": [
    "Quantity",
    "isinstance",
    "numpy.logical_and",
    "numpy.select",
    "numpy.sqrt",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.TrapezoidDisk2D.input_units": {
  "data": {
   "lineno": 1984,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Voigt1D": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": [
    "Parameter",
    "numpy.array",
    "numpy.log",
    "numpy.pi"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.functional_models.Voigt1D._parameter_units_for_data_units": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Voigt1D.evaluate": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "classmethod",
    "numpy.atleast_1d",
    "numpy.log",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Voigt1D.fit_deriv": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "classmethod",
    "numpy.atleast_1d",
    "numpy.log",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.square",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.Voigt1D.input_units": {
  "data": {
   "lineno": 1161,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.functional_models.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.modeling.functional_models.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.functional_models.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.functional_models.gammaincinv": {
  "data": {
   "shadows": "scipy.special.gammaincinv"
  },
  "type": "import"
 },
 "astropy.modeling.functional_models.j1": {
  "data": {
   "shadows": "scipy.special.j1"
  },
  "type": "import"
 },
 "astropy.modeling.functional_models.jn_zeros": {
  "data": {
   "shadows": "scipy.special.jn_zeros"
  },
  "type": "import"
 },
 "astropy.modeling.functional_models.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.functional_models.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "astropy.modeling.functional_models.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.functional_models.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.modeling.functional_models.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.mappings": {
  "data": {},
  "type": "module"
 },
 "astropy.modeling.mappings.Identity": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "astropy.modeling.mappings.Mapping"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.mappings.Identity.__init__": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "astropy.modeling.mappings.Identity",
    "range",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.mappings.Identity.__repr__": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "astropy.modeling.mappings.Identity.inverse": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.mappings.Mapping": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "astropy.modeling.mappings.Mapping.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "astropy.modeling.mappings.Mapping",
    "len",
    "max",
    "range",
    "str",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.mappings.Mapping.__repr__": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "astropy.modeling.mappings.Mapping.evaluate": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.mappings.Mapping.inputs": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.mappings.Mapping.inverse": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "property",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.mappings.Mapping.mapping": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.mappings.Mapping.outputs": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.mappings.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "astropy.modeling.models": {
  "data": {
   "symbols_in_volume": [
    "astropy.modeling.models.CONSTRAINTS_DOC",
    "astropy.modeling.models.MODELS_WITH_CONSTRAINTS",
    "isinstance"
   ]
  },
  "type": "module"
 },
 "astropy.modeling.models.CONSTRAINTS_DOC": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "astropy.modeling.models.MODELS_WITH_CONSTRAINTS": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "astropy.modeling.models.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.models.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.models.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.models.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.optimizers": {
  "data": {
   "symbols_in_volume": [
    "float",
    "numpy.finfo",
    "numpy.sqrt"
   ]
  },
  "type": "module"
 },
 "astropy.modeling.optimizers.DEFAULT_ACC": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "astropy.modeling.optimizers.DEFAULT_BOUNDS": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "astropy.modeling.optimizers.DEFAULT_EPS": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.modeling.optimizers.DEFAULT_MAXITER": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "astropy.modeling.optimizers.Optimization": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "astropy.modeling.optimizers.abc",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.optimizers.Optimization.__call__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "NotImplementedError",
    "astropy.modeling.optimizers.abc"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.optimizers.Optimization.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "astropy.modeling.optimizers.DEFAULT_ACC",
    "astropy.modeling.optimizers.DEFAULT_EPS",
    "astropy.modeling.optimizers.DEFAULT_MAXITER"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.optimizers.Optimization.__repr__": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "astropy.modeling.optimizers.Optimization.acc": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "astropy.modeling.optimizers.Optimization.eps": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "astropy.modeling.optimizers.Optimization.maxiter": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "astropy.modeling.optimizers.Optimization.opt_method": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.optimizers.SLSQP": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "astropy.modeling.optimizers.Optimization"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.optimizers.SLSQP.__call__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "astropy.modeling.optimizers.DEFAULT_BOUNDS",
    "astropy.modeling.optimizers.warnings",
    "getattr",
    "numpy.array",
    "numpy.asarray",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.optimizers.SLSQP.__init__": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "astropy.modeling.optimizers.SLSQP",
    "scipy.optimize.fmin_slsqp",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.optimizers.Simplex": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "astropy.modeling.optimizers.Optimization"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.optimizers.Simplex.__call__": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "astropy.modeling.optimizers.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.optimizers.Simplex.__init__": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "astropy.modeling.optimizers.Simplex",
    "scipy.optimize.fmin",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.optimizers.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "astropy.modeling.optimizers.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "astropy.modeling.optimizers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.optimizers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.optimizers.fmin_slsqp": {
  "data": {
   "shadows": "scipy.optimize.fmin_slsqp"
  },
  "type": "import"
 },
 "astropy.modeling.optimizers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.optimizers.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.optimizers.simplex": {
  "data": {
   "shadows": "scipy.optimize.fmin"
  },
  "type": "import"
 },
 "astropy.modeling.optimizers.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.optimizers.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.modeling.parameters": {
  "data": {},
  "type": "module"
 },
 "astropy.modeling.parameters.InputParameterError": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "astropy.modeling.parameters.ParameterError"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.parameters.Parameter": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "astropy.modeling.parameters._binary_arithmetic_operation",
    "astropy.modeling.parameters._binary_comparison_operation",
    "astropy.modeling.parameters._unary_arithmetic_operation",
    "astropy.modeling.parameters.operator"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.parameters.Parameter.__array__": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "Quantity",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter.__get__": {
  "data": {
   "lineno": 270
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter.__getitem__": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter.__init__": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "Quantity",
    "ValueError",
    "astropy.modeling.parameters.Parameter",
    "astropy.modeling.parameters.ParameterDefinitionError",
    "isinstance",
    "max",
    "min",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter.__len__": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "TypeError",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter.__nonzero__": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter.__repr__": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter.__set__": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "Quantity",
    "UnitsError",
    "astropy.modeling.parameters._tofloat",
    "isinstance",
    "setter"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter.__setitem__": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "IndexError",
    "astropy.modeling.parameters.InputParameterError",
    "isinstance",
    "len",
    "range",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter._bind": {
  "data": {
   "lineno": 766
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter._create_value_wrapper": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "TypeError",
    "astropy.modeling.parameters.functools",
    "get_inputs_and_params",
    "isinstance",
    "len",
    "numpy.ufunc",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter._get_model_value": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter._raw_value": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter._set_model_value": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "_update_parameter_value",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter._set_model_value._update_parameter_value": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "astropy.modeling.parameters.InputParameterError",
    "numpy.array",
    "numpy.prod",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter._set_unit": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter.bounds": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "astropy.modeling.parameters.numbers",
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter.copy": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "locals"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter.default": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "len",
    "numpy.ndim",
    "numpy.repeat",
    "numpy.reshape",
    "numpy.rollaxis",
    "numpy.shape",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter.fixed": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter.max": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "AttributeError",
    "max.setter"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter.min": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "AttributeError",
    "min.setter"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter.name": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter.quantity": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "Quantity",
    "TypeError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter.shape": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "AttributeError",
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter.size": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "numpy.size",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter.tied": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter.unit": {
  "data": {
   "lineno": 457
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter.validator": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "astropy.modeling.parameters.types",
    "property",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter.validator.validator": {
  "data": {
   "lineno": 707
  },
  "type": "function"
 },
 "astropy.modeling.parameters.Parameter.value": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "AttributeError",
    "Quantity",
    "TypeError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters.ParameterDefinitionError": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "astropy.modeling.parameters.ParameterError"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.parameters.ParameterError": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.parameters.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "astropy.modeling.parameters._binary_arithmetic_operation": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "astropy.modeling.parameters._binary_arithmetic_operation.wrapper": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "NotImplemented",
    "Quantity",
    "astropy.modeling.parameters.functools",
    "op"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters._binary_comparison_operation": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "astropy.modeling.parameters._binary_comparison_operation.wrapper": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "NotImplemented",
    "Quantity",
    "astropy.modeling.parameters.functools",
    "astropy.modeling.parameters.operator",
    "op",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters._tofloat": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.modeling.parameters.InputParameterError",
    "astropy.modeling.parameters.numbers",
    "bool",
    "float",
    "isinstance",
    "isiterable",
    "numpy.asanyarray",
    "numpy.float",
    "numpy.ndarray",
    "numpy.number",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters._unary_arithmetic_operation": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "astropy.modeling.parameters._unary_arithmetic_operation.wrapper": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "NotImplemented",
    "Quantity",
    "astropy.modeling.parameters.functools",
    "op"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.parameters.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.parameters.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "astropy.modeling.parameters.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.parameters.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "astropy.modeling.parameters.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "astropy.modeling.parameters.param_repr_oneline": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "array_repr_oneline"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.parameters.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.parameters.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "astropy.modeling.parameters.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.modeling.parameters.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.polynomial": {
  "data": {},
  "type": "module"
 },
 "astropy.modeling.polynomial.Chebyshev1D": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "astropy.modeling.polynomial.PolynomialModel"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.polynomial.Chebyshev1D.__init__": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "astropy.modeling.polynomial.Chebyshev1D",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Chebyshev1D.clenshaw": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "len",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Chebyshev1D.evaluate": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "poly_map_domain"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Chebyshev1D.fit_deriv": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty",
    "numpy.float",
    "numpy.rollaxis",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Chebyshev1D.prepare_inputs": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "astropy.modeling.polynomial.PolynomialModel",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Chebyshev2D": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "astropy.modeling.polynomial.OrthoPolynomialBase"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.polynomial.Chebyshev2D.__init__": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": [
    "astropy.modeling.polynomial.Chebyshev2D",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Chebyshev2D._chebderiv1d": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.float",
    "numpy.rollaxis",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Chebyshev2D._fcache": {
  "data": {
   "lineno": 1075,
   "symbols_in_volume": [
    "numpy.ones",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Chebyshev2D.fit_deriv": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Hermite1D": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "astropy.modeling.polynomial.PolynomialModel"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.polynomial.Hermite1D.__init__": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "astropy.modeling.polynomial.Hermite1D",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Hermite1D.clenshaw": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "len",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Hermite1D.evaluate": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "poly_map_domain"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Hermite1D.fit_deriv": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty",
    "numpy.float",
    "numpy.rollaxis",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Hermite1D.prepare_inputs": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "astropy.modeling.polynomial.PolynomialModel",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Hermite2D": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "astropy.modeling.polynomial.OrthoPolynomialBase"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.polynomial.Hermite2D.__init__": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "astropy.modeling.polynomial.Hermite2D",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Hermite2D._fcache": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "numpy.ones",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Hermite2D._hermderiv1d": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.float",
    "numpy.rollaxis",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Hermite2D.fit_deriv": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.InverseSIP": {
  "data": {
   "lineno": 1451
  },
  "type": "class"
 },
 "astropy.modeling.polynomial.InverseSIP.__init__": {
  "data": {
   "lineno": 1471,
   "symbols_in_volume": [
    "astropy.modeling.polynomial.InverseSIP",
    "astropy.modeling.polynomial.Polynomial2D",
    "dict",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.InverseSIP.__repr__": {
  "data": {
   "lineno": 1497
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.InverseSIP.__str__": {
  "data": {
   "lineno": 1501,
   "symbols_in_volume": [
    "indent",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.InverseSIP.evaluate": {
  "data": {
   "lineno": 1509
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Legendre1D": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "astropy.modeling.polynomial.PolynomialModel"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.polynomial.Legendre1D.__init__": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "astropy.modeling.polynomial.Legendre1D",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Legendre1D.clenshaw": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "len",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Legendre1D.evaluate": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "poly_map_domain"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Legendre1D.fit_deriv": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty",
    "numpy.float",
    "numpy.rollaxis",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Legendre1D.prepare_inputs": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "astropy.modeling.polynomial.PolynomialModel",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Legendre2D": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "astropy.modeling.polynomial.OrthoPolynomialBase"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.polynomial.Legendre2D.__init__": {
  "data": {
   "lineno": 1197,
   "symbols_in_volume": [
    "astropy.modeling.polynomial.Legendre2D",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Legendre2D._fcache": {
  "data": {
   "lineno": 1205,
   "symbols_in_volume": [
    "numpy.ones",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Legendre2D._legendderiv1d": {
  "data": {
   "lineno": 1262,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty",
    "numpy.float",
    "numpy.rollaxis",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Legendre2D.fit_deriv": {
  "data": {
   "lineno": 1226,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.modeling.polynomial.OrthoPolynomialBase": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "astropy.modeling.polynomial.PolynomialBase"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.polynomial.OrthoPolynomialBase.__init__": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "astropy.modeling.polynomial.OrthoPolynomialBase",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.OrthoPolynomialBase.__repr__": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.OrthoPolynomialBase.__str__": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.OrthoPolynomialBase._alpha": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "len",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.OrthoPolynomialBase._fcache": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.OrthoPolynomialBase._generate_coeff_names": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.OrthoPolynomialBase._invlex": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.OrthoPolynomialBase.evaluate": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "poly_map_domain"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.OrthoPolynomialBase.get_num_coeff": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.OrthoPolynomialBase.imhorner": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "getattr",
    "len",
    "list",
    "numpy.diff",
    "range",
    "setattr",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.OrthoPolynomialBase.invlex_coeff": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.OrthoPolynomialBase.prepare_inputs": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "ValueError",
    "astropy.modeling.polynomial.OrthoPolynomialBase",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Polynomial1D": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "astropy.modeling.polynomial.PolynomialModel"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.polynomial.Polynomial1D.__init__": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "astropy.modeling.polynomial.Polynomial1D",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Polynomial1D._parameter_units_for_data_units": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "getattr",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Polynomial1D.evaluate": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "poly_map_domain"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Polynomial1D.fit_deriv": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.float",
    "numpy.rollaxis",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Polynomial1D.horner": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "len",
    "numpy.ones_like",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Polynomial1D.input_units": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Polynomial1D.prepare_inputs": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "astropy.modeling.polynomial.Polynomial1D",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Polynomial2D": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "astropy.modeling.polynomial.PolynomialModel"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.polynomial.Polynomial2D.__init__": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "astropy.modeling.polynomial.Polynomial2D",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Polynomial2D._parameter_units_for_data_units": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "getattr",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Polynomial2D.evaluate": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "check_broadcast",
    "numpy.empty",
    "numpy.shape",
    "poly_map_domain"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Polynomial2D.fit_deriv": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "numpy.hstack",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Polynomial2D.input_units": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Polynomial2D.invlex_coeff": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Polynomial2D.multivariate_horner": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "len",
    "numpy.diff",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.Polynomial2D.prepare_inputs": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "ValueError",
    "astropy.modeling.polynomial.Polynomial2D",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.PolynomialBase": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "astropy.modeling.polynomial.PolynomialBase.__getattr__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "AttributeError",
    "Parameter"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.PolynomialBase.__setattr__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "Parameter",
    "astropy.modeling.polynomial.PolynomialBase",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.PolynomialBase.param_names": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.PolynomialModel": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "astropy.modeling.polynomial.PolynomialBase"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.polynomial.PolynomialModel.__init__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "astropy.modeling.polynomial.PolynomialModel",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.PolynomialModel.__repr__": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.PolynomialModel.__str__": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.PolynomialModel._generate_coeff_names": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.PolynomialModel._invlex": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.PolynomialModel.degree": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.PolynomialModel.get_num_coeff": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ValueError",
    "comb"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.SIP": {
  "data": {
   "lineno": 1365
  },
  "type": "class"
 },
 "astropy.modeling.polynomial.SIP.__init__": {
  "data": {
   "lineno": 1401,
   "symbols_in_volume": [
    "Shift",
    "astropy.modeling.polynomial.SIP",
    "astropy.modeling.polynomial._SIP1D",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.SIP.__repr__": {
  "data": {
   "lineno": 1423
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.SIP.__str__": {
  "data": {
   "lineno": 1427,
   "symbols_in_volume": [
    "indent",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.SIP.evaluate": {
  "data": {
   "lineno": 1443
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.SIP.inverse": {
  "data": {
   "lineno": 1435,
   "symbols_in_volume": [
    "NotImplementedError",
    "astropy.modeling.polynomial.InverseSIP",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial._SIP1D": {
  "data": {
   "lineno": 1275,
   "symbols_in_volume": [
    "astropy.modeling.polynomial.PolynomialBase"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.polynomial._SIP1D.__init__": {
  "data": {
   "lineno": 1286,
   "symbols_in_volume": [
    "astropy.modeling.polynomial._SIP1D",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial._SIP1D.__repr__": {
  "data": {
   "lineno": 1296
  },
  "type": "function"
 },
 "astropy.modeling.polynomial._SIP1D.__str__": {
  "data": {
   "lineno": 1299
  },
  "type": "function"
 },
 "astropy.modeling.polynomial._SIP1D._coeff_matrix": {
  "data": {
   "lineno": 1335,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial._SIP1D._eval_sip": {
  "data": {
   "lineno": 1350,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.float64",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial._SIP1D._generate_coeff_names": {
  "data": {
   "lineno": 1323,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial._SIP1D.evaluate": {
  "data": {
   "lineno": 1304
  },
  "type": "function"
 },
 "astropy.modeling.polynomial._SIP1D.get_num_coeff": {
  "data": {
   "lineno": 1310,
   "symbols_in_volume": [
    "ValueError",
    "comb"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.polynomial.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "astropy.modeling.polynomial.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.polynomial.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.polynomial.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.polynomial.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.polynomial.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.powerlaws": {
  "data": {},
  "type": "module"
 },
 "astropy.modeling.powerlaws.BrokenPowerLaw1D": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.powerlaws.BrokenPowerLaw1D._parameter_units_for_data_units": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.powerlaws.BrokenPowerLaw1D.evaluate": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "numpy.where",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.powerlaws.BrokenPowerLaw1D.fit_deriv": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.where",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.powerlaws.BrokenPowerLaw1D.input_units": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.powerlaws.ExponentialCutoffPowerLaw1D": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.powerlaws.ExponentialCutoffPowerLaw1D._parameter_units_for_data_units": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.powerlaws.ExponentialCutoffPowerLaw1D.evaluate": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "numpy.exp",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.powerlaws.ExponentialCutoffPowerLaw1D.fit_deriv": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.powerlaws.ExponentialCutoffPowerLaw1D.input_units": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.powerlaws.LogParabola1D": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.powerlaws.LogParabola1D._parameter_units_for_data_units": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.powerlaws.LogParabola1D.evaluate": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "numpy.log",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.powerlaws.LogParabola1D.fit_deriv": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "numpy.log",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.powerlaws.LogParabola1D.input_units": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.powerlaws.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.modeling.powerlaws.PowerLaw1D": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.powerlaws.PowerLaw1D._parameter_units_for_data_units": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.powerlaws.PowerLaw1D.evaluate": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.powerlaws.PowerLaw1D.fit_deriv": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.log",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.powerlaws.PowerLaw1D.input_units": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.powerlaws.SmoothlyBrokenPowerLaw1D": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.powerlaws.SmoothlyBrokenPowerLaw1D._parameter_units_for_data_units": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.powerlaws.SmoothlyBrokenPowerLaw1D.amplitude": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "InputParameterError",
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.powerlaws.SmoothlyBrokenPowerLaw1D.delta": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "InputParameterError",
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.powerlaws.SmoothlyBrokenPowerLaw1D.evaluate": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "Quantity",
    "isinstance",
    "numpy.abs",
    "numpy.exp",
    "numpy.log",
    "numpy.zeros_like",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.powerlaws.SmoothlyBrokenPowerLaw1D.fit_deriv": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.exp",
    "numpy.log",
    "numpy.zeros_like",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.powerlaws.SmoothlyBrokenPowerLaw1D.input_units": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.powerlaws.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "astropy.modeling.powerlaws.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.powerlaws.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.powerlaws.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.powerlaws.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.powerlaws.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.projections": {
  "data": {
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2Sky_Airy",
    "astropy.modeling.projections.Pix2Sky_BonneEqualArea",
    "astropy.modeling.projections.Pix2Sky_COBEQuadSphericalCube",
    "astropy.modeling.projections.Pix2Sky_ConicEqualArea",
    "astropy.modeling.projections.Pix2Sky_ConicEquidistant",
    "astropy.modeling.projections.Pix2Sky_ConicOrthomorphic",
    "astropy.modeling.projections.Pix2Sky_ConicPerspective",
    "astropy.modeling.projections.Pix2Sky_CylindricalEqualArea",
    "astropy.modeling.projections.Pix2Sky_CylindricalPerspective",
    "astropy.modeling.projections.Pix2Sky_Gnomonic",
    "astropy.modeling.projections.Pix2Sky_HEALPix",
    "astropy.modeling.projections.Pix2Sky_HEALPixPolar",
    "astropy.modeling.projections.Pix2Sky_HammerAitoff",
    "astropy.modeling.projections.Pix2Sky_Mercator",
    "astropy.modeling.projections.Pix2Sky_Molleweide",
    "astropy.modeling.projections.Pix2Sky_Parabolic",
    "astropy.modeling.projections.Pix2Sky_PlateCarree",
    "astropy.modeling.projections.Pix2Sky_Polyconic",
    "astropy.modeling.projections.Pix2Sky_QuadSphericalCube",
    "astropy.modeling.projections.Pix2Sky_SansonFlamsteed",
    "astropy.modeling.projections.Pix2Sky_SlantOrthographic",
    "astropy.modeling.projections.Pix2Sky_SlantZenithalPerspective",
    "astropy.modeling.projections.Pix2Sky_Stereographic",
    "astropy.modeling.projections.Pix2Sky_TangentialSphericalCube",
    "astropy.modeling.projections.Pix2Sky_ZenithalEqualArea",
    "astropy.modeling.projections.Pix2Sky_ZenithalEquidistant",
    "astropy.modeling.projections.Pix2Sky_ZenithalPerspective",
    "astropy.modeling.projections.Sky2Pix_Airy",
    "astropy.modeling.projections.Sky2Pix_BonneEqualArea",
    "astropy.modeling.projections.Sky2Pix_COBEQuadSphericalCube",
    "astropy.modeling.projections.Sky2Pix_ConicEqualArea",
    "astropy.modeling.projections.Sky2Pix_ConicEquidistant",
    "astropy.modeling.projections.Sky2Pix_ConicOrthomorphic",
    "astropy.modeling.projections.Sky2Pix_ConicPerspective",
    "astropy.modeling.projections.Sky2Pix_CylindricalEqualArea",
    "astropy.modeling.projections.Sky2Pix_CylindricalPerspective",
    "astropy.modeling.projections.Sky2Pix_Gnomonic",
    "astropy.modeling.projections.Sky2Pix_HEALPix",
    "astropy.modeling.projections.Sky2Pix_HEALPixPolar",
    "astropy.modeling.projections.Sky2Pix_HammerAitoff",
    "astropy.modeling.projections.Sky2Pix_Mercator",
    "astropy.modeling.projections.Sky2Pix_Molleweide",
    "astropy.modeling.projections.Sky2Pix_Parabolic",
    "astropy.modeling.projections.Sky2Pix_PlateCarree",
    "astropy.modeling.projections.Sky2Pix_Polyconic",
    "astropy.modeling.projections.Sky2Pix_QuadSphericalCube",
    "astropy.modeling.projections.Sky2Pix_SansonFlamsteed",
    "astropy.modeling.projections.Sky2Pix_SlantOrthographic",
    "astropy.modeling.projections.Sky2Pix_SlantZenithalPerspective",
    "astropy.modeling.projections.Sky2Pix_Stereographic",
    "astropy.modeling.projections.Sky2Pix_TangentialSphericalCube",
    "astropy.modeling.projections.Sky2Pix_ZenithalEqualArea",
    "astropy.modeling.projections.Sky2Pix_ZenithalEquidistant",
    "astropy.modeling.projections.Sky2Pix_ZenithalPerspective"
   ]
  },
  "type": "module"
 },
 "astropy.modeling.projections.AffineTransformation2D": {
  "data": {
   "lineno": 1890,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.AffineTransformation2D._create_augmented_matrix": {
  "data": {
   "lineno": 1985,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.float",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.AffineTransformation2D.evaluate": {
  "data": {
   "lineno": 1955,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "numpy.dot",
    "numpy.ones",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.AffineTransformation2D.inverse": {
  "data": {
   "lineno": 1935,
   "symbols_in_volume": [
    "InputParameterError",
    "numpy.dot",
    "numpy.linalg.det",
    "numpy.linalg.inv",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.AffineTransformation2D.matrix": {
  "data": {
   "lineno": 1913,
   "symbols_in_volume": [
    "InputParameterError",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.AffineTransformation2D.translation": {
  "data": {
   "lineno": 1921,
   "symbols_in_volume": [
    "InputParameterError",
    "numpy.ndim",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Conic": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": [
    "Parameter",
    "_to_orig_unit",
    "astropy.modeling.projections.Projection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Cylindrical": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "astropy.modeling.projections.Projection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.HEALPix": {
  "data": {
   "lineno": 1791,
   "symbols_in_volume": [
    "astropy.modeling.projections.Projection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Pix2SkyProjection": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "astropy.modeling.projections.Projection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Pix2SkyProjection.input_units": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2SkyProjection.return_units": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_AIR": {
  "data": {
   "lineno": 660
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Pix2Sky_AIT": {
  "data": {
   "lineno": 1142
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Pix2Sky_ARC": {
  "data": {
   "lineno": 562
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Pix2Sky_AZP": {
  "data": {
   "lineno": 226
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Pix2Sky_Airy": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "Parameter",
    "astropy.modeling.projections.Pix2SkyProjection",
    "astropy.modeling.projections.Zenithal"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Pix2Sky_Airy.evaluate": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_Airy.inverse": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2Pix_Airy",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_BON": {
  "data": {
   "lineno": 1590
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Pix2Sky_BonneEqualArea": {
  "data": {
   "lineno": 1556,
   "symbols_in_volume": [
    "Parameter",
    "_to_orig_unit",
    "astropy.modeling.projections.Pix2SkyProjection",
    "astropy.modeling.projections.PseudoConic"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Pix2Sky_BonneEqualArea.evaluate": {
  "data": {
   "lineno": 1585,
   "symbols_in_volume": [
    "_to_orig_unit",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_BonneEqualArea.inverse": {
  "data": {
   "lineno": 1581,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2Pix_BonneEqualArea",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_CAR": {
  "data": {
   "lineno": 891
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Pix2Sky_CEA": {
  "data": {
   "lineno": 834
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Pix2Sky_COBEQuadSphericalCube": {
  "data": {
   "lineno": 1719,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2SkyProjection",
    "astropy.modeling.projections.QuadCube"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Pix2Sky_COBEQuadSphericalCube.evaluate": {
  "data": {
   "lineno": 1729,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_COBEQuadSphericalCube.inverse": {
  "data": {
   "lineno": 1725,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2Pix_COBEQuadSphericalCube",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_COD": {
  "data": {
   "lineno": 1406
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Pix2Sky_COE": {
  "data": {
   "lineno": 1321
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Pix2Sky_COO": {
  "data": {
   "lineno": 1496
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Pix2Sky_COP": {
  "data": {
   "lineno": 1237
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Pix2Sky_CSC": {
  "data": {
   "lineno": 1734
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Pix2Sky_CYP": {
  "data": {
   "lineno": 757
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Pix2Sky_ConicEqualArea": {
  "data": {
   "lineno": 1280,
   "symbols_in_volume": [
    "astropy.modeling.projections.Conic",
    "astropy.modeling.projections.Pix2SkyProjection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Pix2Sky_ConicEqualArea.evaluate": {
  "data": {
   "lineno": 1316,
   "symbols_in_volume": [
    "_to_orig_unit",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_ConicEqualArea.inverse": {
  "data": {
   "lineno": 1312,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2Pix_ConicEqualArea",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_ConicEquidistant": {
  "data": {
   "lineno": 1369,
   "symbols_in_volume": [
    "astropy.modeling.projections.Conic",
    "astropy.modeling.projections.Pix2SkyProjection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Pix2Sky_ConicEquidistant.evaluate": {
  "data": {
   "lineno": 1401,
   "symbols_in_volume": [
    "_to_orig_unit",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_ConicEquidistant.inverse": {
  "data": {
   "lineno": 1397,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2Pix_ConicEquidistant",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_ConicOrthomorphic": {
  "data": {
   "lineno": 1450,
   "symbols_in_volume": [
    "astropy.modeling.projections.Conic",
    "astropy.modeling.projections.Pix2SkyProjection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Pix2Sky_ConicOrthomorphic.evaluate": {
  "data": {
   "lineno": 1491,
   "symbols_in_volume": [
    "_to_orig_unit",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_ConicOrthomorphic.inverse": {
  "data": {
   "lineno": 1487,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2Pix_ConicOrthomorphic",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_ConicPerspective": {
  "data": {
   "lineno": 1201,
   "symbols_in_volume": [
    "astropy.modeling.projections.Conic",
    "astropy.modeling.projections.Pix2SkyProjection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Pix2Sky_ConicPerspective.evaluate": {
  "data": {
   "lineno": 1232,
   "symbols_in_volume": [
    "_to_orig_unit",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_ConicPerspective.inverse": {
  "data": {
   "lineno": 1228,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2Pix_ConicPerspective",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_CylindricalEqualArea": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "Parameter",
    "astropy.modeling.projections.Cylindrical",
    "astropy.modeling.projections.Pix2SkyProjection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Pix2Sky_CylindricalEqualArea.evaluate": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_CylindricalEqualArea.inverse": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2Pix_CylindricalEqualArea",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_CylindricalPerspective": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "Parameter",
    "astropy.modeling.projections.Cylindrical",
    "astropy.modeling.projections.Pix2SkyProjection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Pix2Sky_CylindricalPerspective.evaluate": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_CylindricalPerspective.inverse": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2Pix_CylindricalPerspective",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_CylindricalPerspective.lam": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "InputParameterError",
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_CylindricalPerspective.mu": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "InputParameterError",
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_Gnomonic": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2SkyProjection",
    "astropy.modeling.projections.Zenithal"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Pix2Sky_Gnomonic.evaluate": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_Gnomonic.inverse": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2Pix_Gnomonic",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_HEALPix": {
  "data": {
   "lineno": 1796,
   "symbols_in_volume": [
    "Parameter",
    "astropy.modeling.projections.HEALPix",
    "astropy.modeling.projections.Pix2SkyProjection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Pix2Sky_HEALPix.evaluate": {
  "data": {
   "lineno": 1817,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_HEALPix.inverse": {
  "data": {
   "lineno": 1813,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2Pix_HEALPix",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_HEALPixPolar": {
  "data": {
   "lineno": 1854,
   "symbols_in_volume": [
    "astropy.modeling.projections.HEALPix",
    "astropy.modeling.projections.Pix2SkyProjection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Pix2Sky_HEALPixPolar.evaluate": {
  "data": {
   "lineno": 1864,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_HEALPixPolar.inverse": {
  "data": {
   "lineno": 1860,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2Pix_HEALPix",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_HPX": {
  "data": {
   "lineno": 1822
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Pix2Sky_HammerAitoff": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2SkyProjection",
    "astropy.modeling.projections.PseudoCylindrical"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Pix2Sky_HammerAitoff.evaluate": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_HammerAitoff.inverse": {
  "data": {
   "lineno": 1133,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2Pix_HammerAitoff",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_MER": {
  "data": {
   "lineno": 941
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Pix2Sky_MOL": {
  "data": {
   "lineno": 1089
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Pix2Sky_Mercator": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "astropy.modeling.projections.Cylindrical",
    "astropy.modeling.projections.Pix2SkyProjection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Pix2Sky_Mercator.evaluate": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_Mercator.inverse": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2Pix_Mercator",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_Molleweide": {
  "data": {
   "lineno": 1069,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2SkyProjection",
    "astropy.modeling.projections.PseudoCylindrical"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Pix2Sky_Molleweide.evaluate": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_Molleweide.inverse": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2Pix_Molleweide",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_PAR": {
  "data": {
   "lineno": 1043
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Pix2Sky_PCO": {
  "data": {
   "lineno": 1645
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Pix2Sky_Parabolic": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2SkyProjection",
    "astropy.modeling.projections.PseudoCylindrical"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Pix2Sky_Parabolic.evaluate": {
  "data": {
   "lineno": 1038,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_Parabolic.inverse": {
  "data": {
   "lineno": 1034,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2Pix_Parabolic",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_PlateCarree": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "astropy.modeling.projections.Cylindrical",
    "astropy.modeling.projections.Pix2SkyProjection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Pix2Sky_PlateCarree.evaluate": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "numpy.array",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_PlateCarree.inverse": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2Pix_PlateCarree",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_Polyconic": {
  "data": {
   "lineno": 1630,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2SkyProjection",
    "astropy.modeling.projections.PseudoConic"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Pix2Sky_Polyconic.evaluate": {
  "data": {
   "lineno": 1640,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_Polyconic.inverse": {
  "data": {
   "lineno": 1636,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2Pix_Polyconic",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_QSC": {
  "data": {
   "lineno": 1770
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Pix2Sky_QuadSphericalCube": {
  "data": {
   "lineno": 1755,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2SkyProjection",
    "astropy.modeling.projections.QuadCube"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Pix2Sky_QuadSphericalCube.evaluate": {
  "data": {
   "lineno": 1765,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_QuadSphericalCube.inverse": {
  "data": {
   "lineno": 1761,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2Pix_QuadSphericalCube",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_SFL": {
  "data": {
   "lineno": 997
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Pix2Sky_SIN": {
  "data": {
   "lineno": 503
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Pix2Sky_STG": {
  "data": {
   "lineno": 434
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Pix2Sky_SZP": {
  "data": {
   "lineno": 318
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Pix2Sky_SansonFlamsteed": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2SkyProjection",
    "astropy.modeling.projections.PseudoCylindrical"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Pix2Sky_SansonFlamsteed.evaluate": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_SansonFlamsteed.inverse": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2Pix_SansonFlamsteed",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_SlantOrthographic": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "Parameter",
    "astropy.modeling.projections.Pix2SkyProjection",
    "astropy.modeling.projections.Zenithal"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Pix2Sky_SlantOrthographic.evaluate": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_SlantOrthographic.inverse": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2Pix_SlantOrthographic",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_SlantZenithalPerspective": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "Parameter",
    "_to_orig_unit",
    "astropy.modeling.projections.Pix2SkyProjection",
    "astropy.modeling.projections.Zenithal"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Pix2Sky_SlantZenithalPerspective._validate_mu": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_SlantZenithalPerspective.evaluate": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "_to_orig_unit",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_SlantZenithalPerspective.inverse": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2Pix_SlantZenithalPerspective",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_Stereographic": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2SkyProjection",
    "astropy.modeling.projections.Zenithal"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Pix2Sky_Stereographic.evaluate": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_Stereographic.inverse": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2Pix_Stereographic",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_TAN": {
  "data": {
   "lineno": 386
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Pix2Sky_TSC": {
  "data": {
   "lineno": 1698
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Pix2Sky_TangentialSphericalCube": {
  "data": {
   "lineno": 1683,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2SkyProjection",
    "astropy.modeling.projections.QuadCube"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Pix2Sky_TangentialSphericalCube.evaluate": {
  "data": {
   "lineno": 1693,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_TangentialSphericalCube.inverse": {
  "data": {
   "lineno": 1689,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2Pix_TangentialSphericalCube",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_XPH": {
  "data": {
   "lineno": 1869
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Pix2Sky_ZEA": {
  "data": {
   "lineno": 608
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Pix2Sky_ZenithalEqualArea": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2SkyProjection",
    "astropy.modeling.projections.Zenithal"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Pix2Sky_ZenithalEqualArea.evaluate": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_ZenithalEqualArea.inverse": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2Pix_ZenithalEqualArea",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_ZenithalEquidistant": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2SkyProjection",
    "astropy.modeling.projections.Zenithal"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Pix2Sky_ZenithalEquidistant.evaluate": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_ZenithalEquidistant.inverse": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2Pix_ZenithalEquidistant",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_ZenithalPerspective": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "Parameter",
    "astropy.modeling.projections.Pix2SkyProjection",
    "astropy.modeling.projections.Zenithal"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Pix2Sky_ZenithalPerspective.__init__": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2Sky_ZenithalPerspective",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_ZenithalPerspective.evaluate": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "_to_orig_unit",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_ZenithalPerspective.inverse": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2Pix_ZenithalPerspective",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Pix2Sky_ZenithalPerspective.mu": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "InputParameterError",
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Projection": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.pi"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Projection.inverse": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "astropy.modeling.projections.abc"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.PseudoConic": {
  "data": {
   "lineno": 1549,
   "symbols_in_volume": [
    "astropy.modeling.projections.Projection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.PseudoCylindrical": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "astropy.modeling.projections.Projection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.QuadCube": {
  "data": {
   "lineno": 1666,
   "symbols_in_volume": [
    "astropy.modeling.projections.Projection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Sky2PixProjection": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "astropy.modeling.projections.Projection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Sky2PixProjection.input_units": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2PixProjection.return_units": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_AIR": {
  "data": {
   "lineno": 697
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Sky2Pix_AIT": {
  "data": {
   "lineno": 1170
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Sky2Pix_ARC": {
  "data": {
   "lineno": 585
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Sky2Pix_AZP": {
  "data": {
   "lineno": 273
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Sky2Pix_Airy": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "Parameter",
    "astropy.modeling.projections.Sky2PixProjection",
    "astropy.modeling.projections.Zenithal"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Sky2Pix_Airy.evaluate": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_Airy.inverse": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2Sky_Airy",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_BON": {
  "data": {
   "lineno": 1627
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Sky2Pix_BonneEqualArea": {
  "data": {
   "lineno": 1593,
   "symbols_in_volume": [
    "Parameter",
    "_to_orig_unit",
    "astropy.modeling.projections.PseudoConic",
    "astropy.modeling.projections.Sky2PixProjection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Sky2Pix_BonneEqualArea.evaluate": {
  "data": {
   "lineno": 1621,
   "symbols_in_volume": [
    "_to_orig_unit",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_BonneEqualArea.inverse": {
  "data": {
   "lineno": 1617,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2Sky_BonneEqualArea",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_CAR": {
  "data": {
   "lineno": 918
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Sky2Pix_CEA": {
  "data": {
   "lineno": 864
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Sky2Pix_COBEQuadSphericalCube": {
  "data": {
   "lineno": 1737,
   "symbols_in_volume": [
    "astropy.modeling.projections.QuadCube",
    "astropy.modeling.projections.Sky2PixProjection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Sky2Pix_COBEQuadSphericalCube.evaluate": {
  "data": {
   "lineno": 1747,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_COBEQuadSphericalCube.inverse": {
  "data": {
   "lineno": 1743,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2Sky_COBEQuadSphericalCube",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_COD": {
  "data": {
   "lineno": 1447
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Sky2Pix_COE": {
  "data": {
   "lineno": 1366
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Sky2Pix_COO": {
  "data": {
   "lineno": 1546
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Sky2Pix_COP": {
  "data": {
   "lineno": 1277
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Sky2Pix_CSC": {
  "data": {
   "lineno": 1752
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Sky2Pix_CYP": {
  "data": {
   "lineno": 804
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Sky2Pix_ConicEqualArea": {
  "data": {
   "lineno": 1324,
   "symbols_in_volume": [
    "astropy.modeling.projections.Conic",
    "astropy.modeling.projections.Sky2PixProjection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Sky2Pix_ConicEqualArea.evaluate": {
  "data": {
   "lineno": 1360,
   "symbols_in_volume": [
    "_to_orig_unit",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_ConicEqualArea.inverse": {
  "data": {
   "lineno": 1356,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2Sky_ConicEqualArea",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_ConicEquidistant": {
  "data": {
   "lineno": 1409,
   "symbols_in_volume": [
    "astropy.modeling.projections.Conic",
    "astropy.modeling.projections.Sky2PixProjection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Sky2Pix_ConicEquidistant.evaluate": {
  "data": {
   "lineno": 1441,
   "symbols_in_volume": [
    "_to_orig_unit",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_ConicEquidistant.inverse": {
  "data": {
   "lineno": 1437,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2Sky_ConicEquidistant",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_ConicOrthomorphic": {
  "data": {
   "lineno": 1499,
   "symbols_in_volume": [
    "astropy.modeling.projections.Conic",
    "astropy.modeling.projections.Sky2PixProjection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Sky2Pix_ConicOrthomorphic.evaluate": {
  "data": {
   "lineno": 1540,
   "symbols_in_volume": [
    "_to_orig_unit",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_ConicOrthomorphic.inverse": {
  "data": {
   "lineno": 1536,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2Sky_ConicOrthomorphic",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_ConicPerspective": {
  "data": {
   "lineno": 1240,
   "symbols_in_volume": [
    "astropy.modeling.projections.Conic",
    "astropy.modeling.projections.Sky2PixProjection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Sky2Pix_ConicPerspective.evaluate": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "_to_orig_unit",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_ConicPerspective.inverse": {
  "data": {
   "lineno": 1267,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2Sky_ConicPerspective",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_CylindricalEqualArea": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "Parameter",
    "astropy.modeling.projections.Cylindrical",
    "astropy.modeling.projections.Sky2PixProjection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Sky2Pix_CylindricalEqualArea.evaluate": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_CylindricalEqualArea.inverse": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2Sky_CylindricalEqualArea",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_CylindricalPerspective": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "Parameter",
    "astropy.modeling.projections.Cylindrical",
    "astropy.modeling.projections.Sky2PixProjection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Sky2Pix_CylindricalPerspective.evaluate": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_CylindricalPerspective.inverse": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2Sky_CylindricalPerspective",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_CylindricalPerspective.lam": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "InputParameterError",
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_CylindricalPerspective.mu": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "InputParameterError",
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_Gnomonic": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2PixProjection",
    "astropy.modeling.projections.Zenithal"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Sky2Pix_Gnomonic.evaluate": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_Gnomonic.inverse": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2Sky_Gnomonic",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_HEALPix": {
  "data": {
   "lineno": 1825,
   "symbols_in_volume": [
    "Parameter",
    "astropy.modeling.projections.HEALPix",
    "astropy.modeling.projections.Sky2PixProjection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Sky2Pix_HEALPix.evaluate": {
  "data": {
   "lineno": 1846,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_HEALPix.inverse": {
  "data": {
   "lineno": 1842,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2Sky_HEALPix",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_HEALPixPolar": {
  "data": {
   "lineno": 1872,
   "symbols_in_volume": [
    "astropy.modeling.projections.HEALPix",
    "astropy.modeling.projections.Sky2PixProjection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Sky2Pix_HEALPixPolar.evaluate": {
  "data": {
   "lineno": 1882,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_HEALPixPolar.inverse": {
  "data": {
   "lineno": 1878,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2Sky_HEALPix",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_HPX": {
  "data": {
   "lineno": 1851
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Sky2Pix_HammerAitoff": {
  "data": {
   "lineno": 1145,
   "symbols_in_volume": [
    "astropy.modeling.projections.PseudoCylindrical",
    "astropy.modeling.projections.Sky2PixProjection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Sky2Pix_HammerAitoff.evaluate": {
  "data": {
   "lineno": 1165,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_HammerAitoff.inverse": {
  "data": {
   "lineno": 1161,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2Sky_HammerAitoff",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_MER": {
  "data": {
   "lineno": 964
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Sky2Pix_MOL": {
  "data": {
   "lineno": 1119
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Sky2Pix_Mercator": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "astropy.modeling.projections.Cylindrical",
    "astropy.modeling.projections.Sky2PixProjection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Sky2Pix_Mercator.evaluate": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_Mercator.inverse": {
  "data": {
   "lineno": 955,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2Sky_Mercator",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_Molleweide": {
  "data": {
   "lineno": 1092,
   "symbols_in_volume": [
    "astropy.modeling.projections.PseudoCylindrical",
    "astropy.modeling.projections.Sky2PixProjection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Sky2Pix_Molleweide.evaluate": {
  "data": {
   "lineno": 1114,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_Molleweide.inverse": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2Sky_Molleweide",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_PAR": {
  "data": {
   "lineno": 1066
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Sky2Pix_PCO": {
  "data": {
   "lineno": 1663
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Sky2Pix_Parabolic": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "astropy.modeling.projections.PseudoCylindrical",
    "astropy.modeling.projections.Sky2PixProjection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Sky2Pix_Parabolic.evaluate": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_Parabolic.inverse": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2Sky_Parabolic",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_PlateCarree": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "astropy.modeling.projections.Cylindrical",
    "astropy.modeling.projections.Sky2PixProjection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Sky2Pix_PlateCarree.evaluate": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "numpy.array",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_PlateCarree.inverse": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2Sky_PlateCarree",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_Polyconic": {
  "data": {
   "lineno": 1648,
   "symbols_in_volume": [
    "astropy.modeling.projections.PseudoConic",
    "astropy.modeling.projections.Sky2PixProjection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Sky2Pix_Polyconic.evaluate": {
  "data": {
   "lineno": 1658,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_Polyconic.inverse": {
  "data": {
   "lineno": 1654,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2Sky_Polyconic",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_QSC": {
  "data": {
   "lineno": 1788
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Sky2Pix_QuadSphericalCube": {
  "data": {
   "lineno": 1773,
   "symbols_in_volume": [
    "astropy.modeling.projections.QuadCube",
    "astropy.modeling.projections.Sky2PixProjection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Sky2Pix_QuadSphericalCube.evaluate": {
  "data": {
   "lineno": 1783,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_QuadSphericalCube.inverse": {
  "data": {
   "lineno": 1779,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2Sky_QuadSphericalCube",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_SFL": {
  "data": {
   "lineno": 1020
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Sky2Pix_SIN": {
  "data": {
   "lineno": 539
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Sky2Pix_STG": {
  "data": {
   "lineno": 458
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Sky2Pix_SZP": {
  "data": {
   "lineno": 362
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Sky2Pix_SansonFlamsteed": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": [
    "astropy.modeling.projections.PseudoCylindrical",
    "astropy.modeling.projections.Sky2PixProjection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Sky2Pix_SansonFlamsteed.evaluate": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_SansonFlamsteed.inverse": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2Sky_SansonFlamsteed",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_SlantOrthographic": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "Parameter",
    "astropy.modeling.projections.Sky2PixProjection",
    "astropy.modeling.projections.Zenithal"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Sky2Pix_SlantOrthographic.evaluate": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_SlantOrthographic.inverse": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2Sky_SlantOrthographic",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_SlantZenithalPerspective": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "Parameter",
    "_to_orig_unit",
    "astropy.modeling.projections.Sky2PixProjection",
    "astropy.modeling.projections.Zenithal"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Sky2Pix_SlantZenithalPerspective._validate_mu": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_SlantZenithalPerspective.evaluate": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "_to_orig_unit",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_SlantZenithalPerspective.inverse": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2Sky_SlantZenithalPerspective",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_Stereographic": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2PixProjection",
    "astropy.modeling.projections.Zenithal"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Sky2Pix_Stereographic.evaluate": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_Stereographic.inverse": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2Sky_Stereographic",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_TAN": {
  "data": {
   "lineno": 410
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Sky2Pix_TSC": {
  "data": {
   "lineno": 1716
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Sky2Pix_TangentialSphericalCube": {
  "data": {
   "lineno": 1701,
   "symbols_in_volume": [
    "astropy.modeling.projections.QuadCube",
    "astropy.modeling.projections.Sky2PixProjection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Sky2Pix_TangentialSphericalCube.evaluate": {
  "data": {
   "lineno": 1711,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_TangentialSphericalCube.inverse": {
  "data": {
   "lineno": 1707,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2Sky_TangentialSphericalCube",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_XPH": {
  "data": {
   "lineno": 1887
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Sky2Pix_ZEA": {
  "data": {
   "lineno": 632
  },
  "type": "constant"
 },
 "astropy.modeling.projections.Sky2Pix_ZenithalEqualArea": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2PixProjection",
    "astropy.modeling.projections.Zenithal"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Sky2Pix_ZenithalEqualArea.evaluate": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_ZenithalEqualArea.inverse": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2Sky_ZenithalEqualArea",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_ZenithalEquidistant": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "astropy.modeling.projections.Sky2PixProjection",
    "astropy.modeling.projections.Zenithal"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Sky2Pix_ZenithalEquidistant.evaluate": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_ZenithalEquidistant.inverse": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2Sky_ZenithalEquidistant",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_ZenithalPerspective": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "Parameter",
    "_to_orig_unit",
    "astropy.modeling.projections.Sky2PixProjection",
    "astropy.modeling.projections.Zenithal"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.Sky2Pix_ZenithalPerspective.evaluate": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "_to_orig_unit",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_ZenithalPerspective.inverse": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "astropy.modeling.projections.Pix2Sky_AZP",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Sky2Pix_ZenithalPerspective.mu": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "InputParameterError",
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.projections.Zenithal": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "astropy.modeling.projections.Projection"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.projections.__all__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "astropy.modeling.projections.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "astropy.modeling.projections.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.projections.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.projections.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.projections.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.projections.projcodes": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "astropy.modeling.projections.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.modeling.projections.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.rotations": {
  "data": {},
  "type": "module"
 },
 "astropy.modeling.rotations.EulerAngleRotation": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "Parameter",
    "astropy.modeling.rotations._EulerRotation"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.rotations.EulerAngleRotation.__init__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "any",
    "astropy.modeling.rotations.EulerAngleRotation",
    "isinstance",
    "len",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.rotations.EulerAngleRotation.evaluate": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "astropy.modeling.rotations.EulerAngleRotation",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.rotations.EulerAngleRotation.inverse": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "astropy.modeling.rotations.RotateCelestial2Native": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "astropy.modeling.rotations._SkyRotation"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.rotations.RotateCelestial2Native.__init__": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "astropy.modeling.rotations.RotateCelestial2Native",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.rotations.RotateCelestial2Native.evaluate": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "astropy.modeling.rotations.RotateCelestial2Native",
    "isinstance",
    "numpy.pi",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.rotations.RotateCelestial2Native.input_units": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.rotations.RotateCelestial2Native.inverse": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "astropy.modeling.rotations.RotateNative2Celestial",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.rotations.RotateCelestial2Native.return_units": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.rotations.RotateNative2Celestial": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "astropy.modeling.rotations._SkyRotation"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.rotations.RotateNative2Celestial.__init__": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "astropy.modeling.rotations.RotateNative2Celestial",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.rotations.RotateNative2Celestial.evaluate": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "astropy.modeling.rotations.RotateNative2Celestial",
    "isinstance",
    "numpy.pi",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.rotations.RotateNative2Celestial.input_units": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.rotations.RotateNative2Celestial.inverse": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "astropy.modeling.rotations.RotateCelestial2Native",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.rotations.RotateNative2Celestial.return_units": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.rotations.Rotation2D": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.rotations.Rotation2D._compute_matrix": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "astropy.modeling.rotations.math",
    "numpy.array",
    "numpy.float64",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.rotations.Rotation2D.evaluate": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "isinstance",
    "numpy.array",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.rotations.Rotation2D.inverse": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.rotations._EulerRotation": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.rotations._EulerRotation._create_matrix": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "isinstance",
    "matrix_product",
    "numpy.asscalar",
    "rotation_matrix",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.rotations._EulerRotation.cartesian2spherical": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.arctan2",
    "numpy.hypot",
    "numpy.rad2deg",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.rotations._EulerRotation.evaluate": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "isinstance",
    "numpy.dot",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.rotations._EulerRotation.input_units": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.rotations._EulerRotation.return_units": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.rotations._EulerRotation.rotation_matrix_from_angle": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "astropy.modeling.rotations.math",
    "deprecated",
    "numpy.array",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.rotations._EulerRotation.spherical2cartesian": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cos",
    "numpy.deg2rad",
    "numpy.sin",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.rotations._SkyRotation": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "Parameter",
    "astropy.modeling.rotations._EulerRotation"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.rotations._SkyRotation.__init__": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "any",
    "astropy.modeling.rotations._SkyRotation",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.rotations._SkyRotation._evaluate": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "astropy.modeling.rotations._SkyRotation",
    "isinstance",
    "numpy.ndarray",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.rotations.__all__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "astropy.modeling.rotations.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.rotations.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.rotations.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "astropy.modeling.rotations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.rotations.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.rotations.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.modeling.rotations.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.statistic": {
  "data": {},
  "type": "module"
 },
 "astropy.modeling.statistic.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "astropy.modeling.statistic.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.statistic.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.statistic.leastsquare": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.sum",
    "updated_model"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.statistic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.statistic.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.statistic.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.tabular": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.modeling.tabular.Tabular1D",
    "astropy.modeling.tabular.Tabular2D",
    "astropy.modeling.tabular._tab_docs",
    "astropy.modeling.tabular.scipy",
    "astropy.modeling.tabular.tabular_model",
    "minversion"
   ]
  },
  "type": "module"
 },
 "astropy.modeling.tabular.Tabular1D": {
  "data": {
   "lineno": 241
  },
  "type": "constant"
 },
 "astropy.modeling.tabular.Tabular2D": {
  "data": {
   "lineno": 244
  },
  "type": "constant"
 },
 "astropy.modeling.tabular._Tabular": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "astropy.modeling.tabular.abc"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tabular._Tabular.__init__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "astropy.modeling.tabular._Tabular",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.asarray",
    "numpy.float",
    "numpy.nan",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tabular._Tabular.__repr__": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "astropy.modeling.tabular._Tabular.__str__": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "astropy.modeling.tabular._Tabular.bounding_box": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "len",
    "max",
    "min",
    "property",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tabular._Tabular.evaluate": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "ImportError",
    "astropy.modeling.tabular.has_scipy",
    "numpy.array",
    "scipy.interpolate.interpn"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tabular.__all__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "astropy.modeling.tabular.__doctest_requires__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "astropy.modeling.tabular._tab_docs": {
  "data": {
   "lineno": 246
  },
  "type": "constant"
 },
 "astropy.modeling.tabular.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "astropy.modeling.tabular.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.tabular.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.tabular.has_scipy": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "astropy.modeling.tabular.interpn": {
  "data": {
   "shadows": "scipy.interpolate.interpn"
  },
  "type": "import"
 },
 "astropy.modeling.tabular.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.tabular.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.tabular.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "astropy.modeling.tabular.tabular_model": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "astropy.modeling.tabular._Tabular",
    "numpy.zeros",
    "range",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tabular.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.modeling.tests.data": {
  "data": {
   "symbols_in_volume": [
    "astropy.modeling.tests.data.os"
   ]
  },
  "type": "module"
 },
 "astropy.modeling.tests.data.dpath": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "astropy.modeling.tests.data.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.modeling.tests.example_models": {
  "data": {
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "module"
 },
 "astropy.modeling.tests.example_models.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.tests.example_models.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.tests.example_models.models_1D": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "astropy.modeling.tests.example_models.models_2D": {
  "data": {
   "lineno": 218
  },
  "type": "constant"
 },
 "astropy.modeling.tests.example_models.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.tests.example_models.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.tests.example_models.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.tests.irafutil": {
  "data": {},
  "type": "module"
 },
 "astropy.modeling.tests.irafutil.FitcoordsRecord": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "astropy.modeling.tests.irafutil.Record"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.irafutil.FitcoordsRecord.__init__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "astropy.modeling.tests.irafutil.FitcoordsRecord",
    "astropy.modeling.tests.irafutil.iraf_models_map",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.irafutil.FitcoordsRecord.get_coeff": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "astropy.modeling.tests.irafutil.IDB": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.irafutil.IDB.__init__": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "astropy.modeling.tests.irafutil.IdentifyRecord",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.irafutil.IDB.aslist": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "Exception",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.irafutil.IdentifyRecord": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "astropy.modeling.tests.irafutil.Record"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.irafutil.IdentifyRecord.__init__": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "astropy.modeling.tests.irafutil.IdentifyRecord",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.irafutil.IdentifyRecord.get_coeff": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "astropy.modeling.tests.irafutil.IdentifyRecord.get_model_name": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "astropy.modeling.tests.irafutil.iraf_models_map"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.irafutil.IdentifyRecord.get_nterms": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "astropy.modeling.tests.irafutil.IdentifyRecord.get_range": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "astropy.modeling.tests.irafutil.IdentifyRecord.get_ydata": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.irafutil.Record": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.irafutil.Record.__init__": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "astropy.modeling.tests.irafutil.Record.aslist": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.irafutil.Record.get_fields": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "int",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.irafutil.Record.get_task_name": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.irafutil.Record.read_array_field": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "Exception",
    "numpy.array",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.irafutil.ReidentifyRecord": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "astropy.modeling.tests.irafutil.IDB"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.irafutil.ReidentifyRecord.__init__": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "astropy.modeling.tests.irafutil.ReidentifyRecord",
    "numpy.array",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.irafutil.ReidentifyRecord.get_ydata": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.newaxis",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.irafutil.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.tests.irafutil.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.tests.irafutil.get_database_string": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.irafutil.get_records": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "astropy.modeling.tests.irafutil.Record",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.irafutil.iraf_models_map": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "astropy.modeling.tests.irafutil.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.tests.irafutil.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.tests.irafutil.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_blackbody": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.modeling.tests.test_blackbody.HAS_SCIPY": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.modeling.tests.test_blackbody.TestBlackbody1D": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_blackbody.TestBlackbody1D.test_evaluate": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "BlackBody1D",
    "assert_quantity_allclose",
    "astropy.modeling.tests.test_blackbody.pytest",
    "b",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_blackbody.TestBlackbody1D.test_fit": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "BlackBody1D",
    "LevMarLSQFitter",
    "assert_quantity_allclose",
    "astropy.modeling.tests.test_blackbody.pytest",
    "b",
    "fitter",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_blackbody.__doctest_skip__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.modeling.tests.test_blackbody.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_blackbody.const": {
  "data": {
   "shadows": "constants"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_blackbody.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_blackbody.integrate": {
  "data": {
   "shadows": "scipy.integrate"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_blackbody.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_blackbody.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_blackbody.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_blackbody.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_blackbody.test_blackbody_array_temperature": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "blackbody_nu",
    "numpy.ones",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_blackbody.test_blackbody_exceptions_and_warnings": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ValueError",
    "astropy.modeling.tests.test_blackbody.pytest",
    "blackbody_nu",
    "catch_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_blackbody.test_blackbody_overflow": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "blackbody_lambda",
    "numpy.errstate",
    "numpy.isnan",
    "numpy.log10",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_blackbody.test_blackbody_scipy": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_blackbody.pytest",
    "blackbody_nu",
    "numpy.errstate",
    "numpy.logspace",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "scipy.integrate.trapz"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_blackbody.test_blackbody_synphot": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "blackbody_nu",
    "numpy.errstate",
    "numpy.log10",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_blackbody.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_blackbody.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_compound": {
  "data": {},
  "type": "module"
 },
 "astropy.modeling.tests.test_compound._ConstraintsTestA": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_compound._ConstraintsTestA.evaluate": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound._ConstraintsTestB": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_compound._ConstraintsTestB.evaluate": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound._TestPickleModel": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "Gaussian1D"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_compound.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_compound.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.utils.assert_allclose"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_compound.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.utils.assert_array_equal"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_compound.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_compound.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_compound.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_compound.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_compound.pickle": {
  "data": {
   "shadows": "cPickle"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_compound.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_compound.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_compound.test_basic_compound_inverse": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "Rotation2D",
    "Scale",
    "Shift",
    "numpy.testing.utils.assert_allclose",
    "t"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_compound_custom_inverse": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "NotImplementedError",
    "Polynomial1D",
    "Scale",
    "Shift",
    "astropy.modeling.tests.test_compound.pytest",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_compound_model_classify_attributes": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "Gaussian1D",
    "astropy.modeling.tests.test_compound.inspect"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_compound_model_with_nonstandard_broadcasting": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "AffineTransformation2D",
    "Shift",
    "float",
    "isinstance",
    "m",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_compound_unsupported_inverse": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "Gaussian1D",
    "NotImplementedError",
    "Shift",
    "astropy.modeling.tests.test_compound.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_compound_with_polynomials": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "Chebyshev1D",
    "Chebyshev2D",
    "Legendre1D",
    "Legendre2D",
    "Polynomial1D",
    "Polynomial2D",
    "Shift",
    "astropy.modeling.tests.test_compound.pytest",
    "model",
    "numpy.mgrid",
    "numpy.testing.utils.assert_allclose",
    "poly",
    "shift"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_expression_formatting": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "Gaussian1D"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_identity_input": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "Identity",
    "Rotation2D",
    "Shift",
    "TestModel",
    "model",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_indexing_on_class": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "Const1D",
    "Gaussian1D",
    "IndexError",
    "Polynomial1D",
    "astropy.modeling.tests.test_compound.pytest",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_indexing_on_instance": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "Const1D",
    "Gaussian1D",
    "IndexError",
    "M",
    "Polynomial1D",
    "astropy.modeling.tests.test_compound.pytest",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_inherit_constraints": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "Gaussian1D",
    "astropy.modeling.tests.test_compound._ConstraintsTestA",
    "astropy.modeling.tests.test_compound._ConstraintsTestB",
    "astropy.modeling.tests.test_compound.pytest",
    "copy.deepcopy",
    "model",
    "model.bounds",
    "model.fixed",
    "model.mean.fixed",
    "model.mean_0.fixed",
    "model.mean_1.fixed",
    "model.stddev.bounds",
    "model.stddev_0.bounds"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_invalid_operands": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "Gaussian1D",
    "Rotation2D",
    "astropy.modeling.tests.test_compound.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_mapping_basic_permutations": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "M",
    "MS",
    "Mapping",
    "RS",
    "Rotation2D",
    "Scale",
    "m",
    "ms",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_mapping_inverse": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "M",
    "Mapping",
    "RS",
    "Rotation2D",
    "Scale",
    "m",
    "m.inverse",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_model_set": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "Const1D",
    "astropy.modeling.tests.test_compound.pytest",
    "expr",
    "numpy.testing.utils.assert_array_equal",
    "s"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_model_set_raises_value_error": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "Const1D",
    "ValueError",
    "astropy.modeling.tests.test_compound.pytest",
    "expr",
    "s"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_n_submodels": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "Gaussian1D"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_name": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "Scale",
    "Shift",
    "m",
    "m._submodel_names",
    "m.name",
    "m.rename"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_pickle_compound": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "GG",
    "GG2",
    "Gaussian1D",
    "astropy.modeling.tests.test_compound._TestPickleModel",
    "astropy.modeling.tests.test_compound.pytest",
    "m",
    "m.__class__.__name__",
    "m.param_names",
    "m.parameters",
    "m2",
    "numpy.all",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_pickle_compound_fallback": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "Gaussian1D",
    "RuntimeError",
    "astropy.modeling.tests.test_compound.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_simple_two_model_class_compose_1d": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "S1",
    "S1.n_inputs",
    "S1.n_outputs",
    "S2",
    "S2.n_inputs",
    "S2.n_outputs",
    "issubclass",
    "numpy.testing.utils.assert_array_equal",
    "s1",
    "s2"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_simple_two_model_class_compose_2d": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "R",
    "R2",
    "issubclass",
    "numpy.testing.utils.assert_allclose",
    "r1",
    "r2",
    "r3"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_slicing_on_class": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "Const1D.rename"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_slicing_on_instance": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "Const1D.rename",
    "M",
    "isinstance",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_slicing_on_instance_with_parameterless_model": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "AffineTransformation2D",
    "Mapping",
    "Polynomial2D",
    "Shift",
    "m",
    "m.param_names",
    "model",
    "model.param_names"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_slicing_on_instances_2": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "IndexError",
    "Rotation2D",
    "Scale",
    "Shift",
    "astropy.modeling.tests.test_compound.pytest",
    "m",
    "m.name",
    "m.submodel_names"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_slicing_on_instances_3": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "Gaussian1D",
    "IndexError",
    "Scale",
    "Shift",
    "astropy.modeling.tests.test_compound.pytest",
    "m",
    "m.name",
    "m.submodel_names"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_two_model_class_arithmetic_1d": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "S",
    "astropy.modeling.tests.test_compound.pytest",
    "expr",
    "float",
    "isinstance",
    "issubclass",
    "s"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_two_model_instance_arithmetic_1d": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "Const1D",
    "astropy.modeling.tests.test_compound.pytest",
    "expr",
    "float",
    "isinstance",
    "s",
    "s.n_inputs",
    "s.n_outputs"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_two_model_mixed_arithmetic_1d": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "Const1D",
    "S1",
    "S2",
    "astropy.modeling.tests.test_compound.pytest",
    "expr",
    "float",
    "isinstance",
    "issubclass",
    "s1",
    "s2"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.test_update_parameters": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "Scale",
    "Shift",
    "m",
    "m.factor_1",
    "m2"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_compound.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_constraints": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.modeling.tests.test_constraints.HAS_SCIPY": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "astropy.modeling.tests.test_constraints.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_constraints.TestBounds": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_constraints.pytest",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_constraints.TestBounds.setup_class": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linspace",
    "numpy.random.normal"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.TestBounds.test_bounds_gauss2d_lsq": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "gauss_fit",
    "numpy.arange",
    "numpy.meshgrid"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.TestBounds.test_bounds_gauss2d_slsqp": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "gauss_fit",
    "ignore_non_integer_warning",
    "numpy.arange",
    "numpy.meshgrid"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.TestBounds.test_bounds_lsq": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "fitter"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.TestBounds.test_bounds_slsqp": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "fitter",
    "ignore_non_integer_warning"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.TestLinearConstraints": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_constraints.TestLinearConstraints.setup_class": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.TestLinearConstraints.test": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "model",
    "numpy.testing.utils.assert_allclose",
    "pfit"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.TestNonLinearConstraints": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_constraints.TestNonLinearConstraints.setup_class": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.TestNonLinearConstraints.test_fixed_par": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_constraints.pytest",
    "fitter"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.TestNonLinearConstraints.test_joint_fitter": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_constraints.pytest",
    "g1",
    "g1.amplitude.value",
    "g2",
    "g2.amplitude.value",
    "jf",
    "jf.fitparams",
    "numpy.arange",
    "numpy.r_",
    "numpy.random.randn",
    "numpy.testing.utils.assert_allclose",
    "scipy.optimize.leastsq"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.TestNonLinearConstraints.test_joint_fitter.compmodel": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.TestNonLinearConstraints.test_joint_fitter.errf": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "compmodel",
    "numpy.r_",
    "numpy.ravel"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.TestNonLinearConstraints.test_no_constraints": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_constraints.pytest",
    "fitter",
    "g1",
    "numpy.random.randn",
    "numpy.testing.utils.assert_allclose",
    "scipy.optimize.leastsq"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.TestNonLinearConstraints.test_no_constraints.errf": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.TestNonLinearConstraints.test_no_constraints.func": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.TestNonLinearConstraints.test_tied_par": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_constraints.pytest",
    "fitter",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.TestNonLinearConstraints.test_tied_par.tied": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_constraints.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_constraints.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_constraints.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_constraints.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_constraints.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_constraints.test_default_constraints": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "MyModel"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.test_default_constraints.MyModel": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_constraints.test_default_constraints.MyModel.evaluate": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.test_fit_with_bound_constraints_estimate_jacobian": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "MyModel",
    "astropy.modeling.tests.test_constraints.pytest",
    "f",
    "f2",
    "f2.fit_info",
    "m_real",
    "numpy.allclose",
    "numpy.any",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.test_fit_with_bound_constraints_estimate_jacobian.MyModel": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_constraints.test_fit_with_bound_constraints_estimate_jacobian.MyModel.evaluate": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.test_fit_with_fixed_and_bound_constraints": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_constraints.pytest",
    "f",
    "numpy.exp",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.test_gaussian2d_positive_stddev": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_constraints.pytest",
    "fitter",
    "numpy.mgrid",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.test_set_bounds_1": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.test_set_bounds_2": {
  "data": {
   "lineno": 294
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.test_set_fixed_1": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.test_set_fixed_2": {
  "data": {
   "lineno": 244
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.test_set_tied_1": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_constraints.types",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.test_set_tied_1.tie_amplitude": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "model.stddev"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.test_set_tied_2": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.test_set_tied_2.tie_amplitude": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "model.stddev"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.test_unset_bounds": {
  "data": {
   "lineno": 302
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.test_unset_fixed": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.test_unset_tied": {
  "data": {
   "lineno": 276
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.test_unset_tied.tie_amplitude": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "model.stddev"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_constraints.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_constraints.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_constraints.utils": {
  "data": {
   "shadows": "numpy.testing.utils"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_core": {
  "data": {},
  "type": "module"
 },
 "astropy.modeling.tests.test_core.NonFittableModel": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_core.NonFittableModel.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_core.NonFittableModel",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_core.NonFittableModel.evaluate": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_core.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_core.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.utils.assert_allclose"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_core.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_core.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_core.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_core.test_Model_array_parameter": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_core.test_Model_instance_repr_and_str": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_core.NonFittableModel",
    "len",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_core.test_ParametericModel": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "TypeError",
    "astropy.modeling.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_core.test_custom_bounding_box_1d": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_core.test_custom_inverse": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "NotImplementedError",
    "astropy.modeling.tests.test_core.pytest",
    "numpy.arange",
    "numpy.testing.utils.assert_allclose",
    "p",
    "p.inverse"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_core.test_custom_inverse_reset": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "TestModel",
    "isinstance",
    "m",
    "m.inverse"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_core.test_custom_inverse_reset.TestModel": {
  "data": {
   "lineno": 208
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_core.test_custom_inverse_reset.TestModel.evaluate": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_core.test_custom_inverse_reset.TestModel.inverse": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_core.test_custom_model_parametrized_decorator": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "issubclass",
    "numpy.pi",
    "numpy.testing.utils.assert_allclose",
    "s",
    "s.fit_deriv",
    "sine"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_core.test_custom_model_parametrized_decorator.cosine": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.cos"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_core.test_custom_model_parametrized_decorator.sine": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "custom_model",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_core.test_custom_model_signature": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "list",
    "signature"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_core.test_custom_model_signature.model_a": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_core.test_custom_model_signature.model_b": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_core.test_custom_model_signature.model_c": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_core.test_custom_model_subclass": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "b",
    "list",
    "model_b",
    "model_b.__call__",
    "model_b.__init__",
    "signature"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_core.test_custom_model_subclass.model_a": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_core.test_custom_model_subclass.model_b": {
  "data": {
   "lineno": 147
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_core.test_custom_model_subclass.model_b.evaluate": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "classmethod",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_core.test_inputless_model": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "TestModel",
    "len",
    "m",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_core.test_inputless_model.TestModel": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_core.test_inputless_model.TestModel.evaluate": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_core.test_n_submodels_in_single_models": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_core.test_render_model_1d": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "model",
    "model.mean",
    "model.render",
    "model.stddev",
    "numpy.arange",
    "numpy.sum",
    "numpy.testing.utils.assert_allclose",
    "numpy.zeros",
    "p",
    "s"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_core.test_render_model_2d": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "ValueError",
    "b",
    "model",
    "model.render",
    "numpy.indices",
    "numpy.pi",
    "numpy.sum",
    "numpy.testing.utils.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_core.test_render_model_3d": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "Ellipsoid3D",
    "model",
    "model.render",
    "model.x0",
    "model.y0",
    "model.z0",
    "numpy.indices",
    "numpy.sum",
    "numpy.testing.utils.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_core.test_render_model_3d.Ellipsoid3D": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "custom_model"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_core.test_render_model_3d.Ellipsoid3D.bounding_box": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_core.test_render_model_3d.ellipsoid": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "b"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_core.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_fitters": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.modeling.tests.test_fitters.EntryPoint": {
  "data": {
   "shadows": "pkg_resources.EntryPoint"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_fitters.HAS_MOCK": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "astropy.modeling.tests.test_fitters.HAS_PKG": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "astropy.modeling.tests.test_fitters.HAS_SCIPY": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "astropy.modeling.tests.test_fitters.Test1DFittingWithOutlierRemoval": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_fitters.pytest",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_fitters.Test1DFittingWithOutlierRemoval.setup_class": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "func",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.Test1DFittingWithOutlierRemoval.setup_class.func": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.Test1DFittingWithOutlierRemoval.test_with_fitters_and_sigma_clip": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "FittingWithOutlierRemoval",
    "LevMarLSQFitter",
    "SLSQPLSQFitter",
    "SimplexLSQFitter",
    "fit",
    "fitted_model",
    "fitted_model.parameters",
    "numpy.random.normal",
    "numpy.random.seed",
    "numpy.testing.utils.assert_allclose",
    "scipy.stats.bernoulli.rvs"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.Test2DFittingWithOutlierRemoval": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_fitters.pytest",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_fitters.Test2DFittingWithOutlierRemoval.initial_guess": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "int",
    "numpy.around",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.Test2DFittingWithOutlierRemoval.setup_class": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "Gaussian_2D",
    "numpy.array",
    "numpy.mgrid"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.Test2DFittingWithOutlierRemoval.setup_class.Gaussian_2D": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.Test2DFittingWithOutlierRemoval.test_with_fitters_and_sigma_clip": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "FittingWithOutlierRemoval",
    "LevMarLSQFitter",
    "SLSQPLSQFitter",
    "SimplexLSQFitter",
    "fit",
    "fitted_model",
    "fitted_model.parameters",
    "numpy.array",
    "numpy.random.normal",
    "numpy.random.seed",
    "numpy.testing.utils.assert_allclose",
    "scipy.stats.bernoulli.rvs"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestEntryPoint": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_fitters.pytest",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_fitters.TestEntryPoint.raiseimporterror": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestEntryPoint.returnbadclass": {
  "data": {
   "lineno": 499
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestEntryPoint.returnbadclass.badclass": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_fitters.TestEntryPoint.returnbadfunc": {
  "data": {
   "lineno": 493
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestEntryPoint.returnbadfunc.badfunc": {
  "data": {
   "lineno": 494
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestEntryPoint.setup_class": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestEntryPoint.successfulimport": {
  "data": {
   "lineno": 483
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestEntryPoint.successfulimport.goodclass": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_fitters.TestEntryPoint.test_bad_class": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_fitters.warnings",
    "pkg_resources.EntryPoint",
    "populate_entry_points",
    "unittest.mock.create_autospec"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestEntryPoint.test_bad_func": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_fitters.warnings",
    "pkg_resources.EntryPoint",
    "populate_entry_points",
    "unittest.mock.create_autospec"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestEntryPoint.test_import_error": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_fitters.warnings",
    "pkg_resources.EntryPoint",
    "populate_entry_points",
    "unittest.mock.create_autospec"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestEntryPoint.test_working": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "pkg_resources.EntryPoint",
    "populate_entry_points",
    "unittest.mock.create_autospec"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestICheb2D": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_fitters.TestICheb2D.setup_class": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "LinearLSQFitter",
    "numpy.mgrid"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestICheb2D.test_chebyshev2D_nonlinear_fitting": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "LevMarLSQFitter",
    "astropy.modeling.tests.test_fitters.pytest",
    "cheb2d",
    "cheb2d.parameters",
    "model",
    "model.parameters",
    "nlfitter",
    "numpy.arange",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestICheb2D.test_chebyshev2D_nonlinear_fitting_with_weights": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "LevMarLSQFitter",
    "astropy.modeling.tests.test_fitters.pytest",
    "cheb2d",
    "cheb2d.parameters",
    "model",
    "model.parameters",
    "nlfitter",
    "numpy.arange",
    "numpy.ones_like",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestICheb2D.test_default_params": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.testing.utils.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestICheb2D.test_poly2D_cheb2D": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "model",
    "numpy.testing.utils.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestJointFitter": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_fitters.pytest",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_fitters.TestJointFitter.setup_class": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "JointFitter",
    "NumpyRNGContext",
    "astropy.modeling.tests.test_fitters._RANDOM_SEED",
    "numpy.arange",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestJointFitter.test_joint_fitter": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.r_",
    "numpy.testing.utils.assert_allclose",
    "scipy.optimize.leastsq"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestJointFitter.test_joint_fitter.errfunc": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "model",
    "numpy.r_",
    "numpy.ravel"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestJointFitter.test_joint_fitter.model": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestJointFitter.test_joint_parameter": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestLinearLSQFitter": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_fitters.TestLinearLSQFitter.test_chebyshev1D": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "LinearLSQFitter",
    "fitter",
    "get_pkg_data_filename",
    "int",
    "numpy.array",
    "numpy.testing.utils.assert_allclose",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestLinearLSQFitter.test_linear_fit_2d_model_set": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "LinearLSQFitter",
    "NumpyRNGContext",
    "astropy.modeling.tests.test_fitters._RANDOM_SEED",
    "fitted_model",
    "fitter",
    "init_model",
    "numpy.arange",
    "numpy.random.normal",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestLinearLSQFitter.test_linear_fit_2d_model_set_fixed_parameters": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "LinearLSQFitter",
    "fitted_model",
    "fitter",
    "init_model",
    "numpy.array",
    "numpy.mgrid",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestLinearLSQFitter.test_linear_fit_fixed_parameter": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "LinearLSQFitter",
    "fitted_model",
    "fitted_model.parameters",
    "fitter",
    "init_model",
    "init_model.c1.fixed",
    "numpy.arange",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestLinearLSQFitter.test_linear_fit_model_set": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "LinearLSQFitter",
    "NumpyRNGContext",
    "astropy.modeling.tests.test_fitters._RANDOM_SEED",
    "fitted_model",
    "fitter",
    "init_model",
    "numpy.arange",
    "numpy.random.normal",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestLinearLSQFitter.test_linear_fit_model_set_fixed_parameter": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "LinearLSQFitter",
    "fitted_model",
    "fitted_model.c0",
    "fitted_model.c1",
    "fitted_model.c2",
    "fitter",
    "init_model",
    "init_model.c1.fixed",
    "numpy.arange",
    "numpy.array",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestNonLinearFitters": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_fitters.pytest",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_fitters.TestNonLinearFitters.setup_class": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "astropy.modeling.tests.test_fitters._RANDOM_SEED",
    "func",
    "numpy.arange",
    "numpy.ones_like",
    "numpy.random.normal"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestNonLinearFitters.setup_class.func": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestNonLinearFitters.test_LSQ_SLSQP_with_constraints": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "LevMarLSQFitter",
    "SLSQPLSQFitter",
    "fitter",
    "fslsqp",
    "ignore_non_integer_warning",
    "model",
    "model.parameters",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestNonLinearFitters.test_estimated_vs_analytic_deriv": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "LevMarLSQFitter",
    "efitter",
    "fitter",
    "model",
    "model.parameters",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestNonLinearFitters.test_estimated_vs_analytic_deriv_with_weights": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "LevMarLSQFitter",
    "efitter",
    "fitter",
    "model",
    "model.parameters",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestNonLinearFitters.test_fitter_against_LevMar": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "LevMarLSQFitter",
    "astropy.modeling.tests.test_fitters.fitters",
    "astropy.modeling.tests.test_fitters.pytest",
    "fitter",
    "fitter_class",
    "ignore_non_integer_warning",
    "levmar",
    "model",
    "model.parameters",
    "new_model",
    "new_model.parameters",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestNonLinearFitters.test_param_cov": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "LevMarLSQFitter",
    "NumpyRNGContext",
    "astropy.modeling.tests.test_fitters._RANDOM_SEED",
    "fitter",
    "fitter.fit_info",
    "len",
    "numpy.linalg.inv",
    "numpy.linspace",
    "numpy.matrix",
    "numpy.ones",
    "numpy.random.randn",
    "numpy.sum",
    "numpy.testing.utils.assert_allclose",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestNonLinearFitters.test_simplex_lsq_fitter": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "Rosenbrock",
    "SimplexLSQFitter",
    "astropy.modeling.tests.test_fitters._RANDOM_SEED",
    "fitter",
    "numpy.linspace",
    "numpy.random.normal",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestNonLinearFitters.test_simplex_lsq_fitter.Rosenbrock": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_fitters.TestNonLinearFitters.test_simplex_lsq_fitter.Rosenbrock.evaluate": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestNonLinearFitters.test_with_optimize": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "LevMarLSQFitter",
    "fitter",
    "model",
    "model.parameters",
    "numpy.testing.utils.assert_allclose",
    "scipy.optimize.leastsq"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestNonLinearFitters.test_with_optimize.errfunc": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestNonLinearFitters.test_with_optimize.func": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestNonLinearFitters.test_with_weights": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "LevMarLSQFitter",
    "fitter",
    "model",
    "model.parameters",
    "numpy.ones_like",
    "numpy.testing.utils.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestPolynomial2D": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_fitters.TestPolynomial2D.setup_class": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "LinearLSQFitter",
    "numpy.mgrid",
    "poly2"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestPolynomial2D.setup_class.poly2": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestPolynomial2D.test_eval": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "new_model",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestPolynomial2D.test_poly2D_fitting": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.linalg.lstsq",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.TestPolynomial2D.test_polynomial2D_nonlinear_fitting": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "LevMarLSQFitter",
    "astropy.modeling.tests.test_fitters.pytest",
    "new_model",
    "new_model.parameters",
    "nlfitter",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters._RANDOM_SEED": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "astropy.modeling.tests.test_fitters.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_fitters.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.utils.assert_allclose"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_fitters.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.utils.assert_almost_equal"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_fitters.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_fitters.fitters": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "astropy.modeling.tests.test_fitters.linalg": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_fitters.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_fitters.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_fitters.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_fitters.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_fitters.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_fitters.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_fitters.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_fitters.test_fitters_interface": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "LevMarLSQFitter",
    "SLSQPLSQFitter",
    "SimplexLSQFitter",
    "astropy.modeling.tests.test_fitters.pytest",
    "levmar",
    "model",
    "numpy.arange",
    "simplex",
    "slsqp"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.test_fitters_with_weights": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "LevMarLSQFitter",
    "NumpyRNGContext",
    "astropy.modeling.tests.test_fitters._RANDOM_SEED",
    "astropy.modeling.tests.test_fitters.pytest",
    "fitter",
    "g2",
    "g2.parameters",
    "numpy.arange",
    "numpy.mgrid",
    "numpy.random.normal",
    "numpy.testing.utils.assert_allclose",
    "p2",
    "p2.parameters"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_fitters.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_fitters.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_functional_models": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.modeling.tests.test_functional_models.HAS_SCIPY": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "astropy.modeling.tests.test_functional_models.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_functional_models.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_functional_models.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_functional_models.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_functional_models.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_functional_models.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_functional_models.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_functional_models.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_functional_models.test_Ellipse2D": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "Angle",
    "e1",
    "e2",
    "em",
    "numpy.all",
    "numpy.array",
    "numpy.mgrid",
    "rotation"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_functional_models.test_Ellipse2D_circular": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.mgrid"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_functional_models.test_Gaussian2D": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "model",
    "model.x_fwhm",
    "model.y_fwhm",
    "numpy.mgrid",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_functional_models.test_Gaussian2DCovariance": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "model",
    "numpy.mgrid",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_functional_models.test_Gaussian2DRotation": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "Angle",
    "dict",
    "g1",
    "g2",
    "numpy.testing.assert_allclose",
    "rotation"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_functional_models.test_Gaussian2D_invalid_inputs": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_functional_models.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_functional_models.test_GaussianAbsorption1D": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "catch_warnings",
    "g_ab",
    "g_ab.bounding_box",
    "g_ab.fit_deriv",
    "g_ab.fwhm",
    "g_em",
    "g_em.bounding_box",
    "g_em.fit_deriv",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_functional_models.test_RedshiftScaleFactor": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "m",
    "m.inverse",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_functional_models.test_Ring2D_rout": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "m",
    "m.width.value"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_functional_models.test_Scale_inverse": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "m",
    "m.inverse",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_functional_models.test_Scale_model_set_linear_fit": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "fitter",
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_functional_models.test_Shift_inverse": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "m",
    "m.inverse",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_functional_models.test_Shift_model_levmar_fit": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_functional_models.pytest",
    "fitter",
    "numpy.arange",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_functional_models.test_Shift_model_set_linear_fit": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "fitter",
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_functional_models.test_Trapezoid1D": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "model",
    "numpy.linspace",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_functional_models.test_Voigt1D": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_functional_models.pytest",
    "fitter",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "voi",
    "voi.param_sets"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_functional_models.test_compound_models_with_class_variables": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "CompoundModel1D",
    "CompoundModel2D",
    "astropy.modeling.tests.test_functional_models.pytest",
    "numpy.arange",
    "numpy.mgrid"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_functional_models.test_compound_models_with_class_variables.CompoundModel1D": {
  "data": {
   "lineno": 267
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_functional_models.test_compound_models_with_class_variables.CompoundModel2D": {
  "data": {
   "lineno": 260
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_functional_models.test_moffat_fwhm": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_functional_models.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_input": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.modeling.tests.test_input.HAS_SCIPY": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.modeling.tests.test_input.TInputFormatter": {
  "data": {
   "lineno": 822
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_input.TInputFormatter.evaluate": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TModel_1_1": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "Parameter",
    "p1",
    "p2"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_input.TModel_1_1.evaluate": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "p1",
    "p2",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TModel_1_2": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "Parameter",
    "p1",
    "p2"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_input.TModel_1_2.evaluate": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "p1",
    "p2",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestEvaluation": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_input.TestEvaluation.setup_class": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.mgrid"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestEvaluation.test_evaluate_gauss2d": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "g",
    "numpy.array",
    "numpy.mgrid"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestEvaluation.test_non_linear_NXYset": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "g1",
    "numpy.array",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestEvaluation.test_non_linear_NYset": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "g1",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestEvaluation.test_nset_domain": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.utils.assert_allclose",
    "p1"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestEvaluation.test_p1_1set_1pset": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "p1"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestEvaluation.test_p1_nset_npset": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.utils.assert_allclose",
    "p1"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestEvaluation.test_p2_1set_1pset": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "p2"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestEvaluation.test_p2_nset_npset": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "numpy.array",
    "p2"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestFitting": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_input.TestFitting.setup_class": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.mgrid"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestFitting.test_linear_fitter_1dcheb": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ch1",
    "model",
    "model.param_sets",
    "numpy.array",
    "numpy.testing.utils.assert_allclose",
    "pfit"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestFitting.test_linear_fitter_1dlegend": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "leg1",
    "model",
    "model.param_sets",
    "numpy.array",
    "numpy.testing.utils.assert_allclose",
    "pfit"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestFitting.test_linear_fitter_1set": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "model",
    "model.parameters",
    "numpy.array",
    "numpy.testing.utils.assert_allclose",
    "p1",
    "pfit"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestFitting.test_linear_fitter_1set2d": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "model",
    "model.parameters",
    "numpy.testing.utils.assert_allclose",
    "p2",
    "pfit"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestFitting.test_linear_fitter_Nset": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "model",
    "model.param_sets",
    "numpy.array",
    "numpy.testing.utils.assert_allclose",
    "p1",
    "p1.param_names",
    "p1.parameters",
    "pfit",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestFitting.test_nonlinear_lsqt_1set_1d": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_input.pytest",
    "g1",
    "gfit",
    "model",
    "model.parameters",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestFitting.test_nonlinear_lsqt_1set_2d": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_input.pytest",
    "g2",
    "gfit",
    "model",
    "model.parameters",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestFitting.test_nonlinear_lsqt_Nset_1d": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "ValueError",
    "astropy.modeling.tests.test_input.pytest",
    "g1",
    "gfit",
    "model"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestFitting.test_nonlinear_lsqt_Nset_2d": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "ValueError",
    "astropy.modeling.tests.test_input.pytest",
    "g2",
    "gfit",
    "model"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestFitting.test_wrong_numpset": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ValueError",
    "astropy.modeling.tests.test_input.pytest",
    "model",
    "p1",
    "pfit"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestFitting.test_wrong_pset": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "model",
    "model.param_sets",
    "numpy.array",
    "numpy.testing.utils.assert_allclose",
    "p1",
    "p1.param_names",
    "pfit",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestInputType": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_input.TestInputType.setup_class": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.mgrid"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestInputType.test_input1D": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_input.model1d_params",
    "astropy.modeling.tests.test_input.pytest",
    "m",
    "model"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestInputType.test_input2D": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_input.model2d_params",
    "astropy.modeling.tests.test_input.pytest",
    "m",
    "model"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestSingleInputDoubleOutputSingleModel": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_input.TestSingleInputDoubleOutputSingleModel.test_1d_array_parameters_1d_array_input": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "ValueError",
    "astropy.modeling.tests.test_input.TModel_1_2",
    "astropy.modeling.tests.test_input.pytest",
    "numpy.all",
    "numpy.shape",
    "t"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestSingleInputDoubleOutputSingleModel.test_1d_array_parameters_scalar_input": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_input.TModel_1_2",
    "isinstance",
    "numpy.all",
    "numpy.ndarray",
    "numpy.shape",
    "t"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestSingleInputDoubleOutputSingleModel.test_2d_array_parameters_2d_array_input": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "ValueError",
    "astropy.modeling.tests.test_input.TModel_1_2",
    "astropy.modeling.tests.test_input.pytest",
    "numpy.all",
    "numpy.shape",
    "t"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestSingleInputDoubleOutputSingleModel.test_mixed_array_parameters_1d_array_input": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_input.TModel_1_2",
    "numpy.shape",
    "numpy.testing.utils.assert_allclose",
    "t"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestSingleInputDoubleOutputSingleModel.test_scalar_parameters_1d_array_input": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_input.TModel_1_2",
    "isinstance",
    "numpy.all",
    "numpy.arange",
    "numpy.ndarray",
    "numpy.shape",
    "t"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestSingleInputDoubleOutputSingleModel.test_scalar_parameters_2d_array_input": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_input.TModel_1_2",
    "isinstance",
    "numpy.all",
    "numpy.arange",
    "numpy.ndarray",
    "numpy.shape",
    "t"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestSingleInputDoubleOutputSingleModel.test_scalar_parameters_3d_array_input": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_input.TModel_1_2",
    "isinstance",
    "numpy.all",
    "numpy.arange",
    "numpy.ndarray",
    "numpy.shape",
    "t"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestSingleInputDoubleOutputSingleModel.test_scalar_parameters_scalar_input": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_input.TModel_1_2",
    "float",
    "isinstance",
    "numpy.ndim",
    "t"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestSingleInputSingleOutputSingleModel": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_input.TestSingleInputSingleOutputSingleModel.test_1d_array_parameters_1d_array_input": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "ValueError",
    "astropy.modeling.tests.test_input.TModel_1_1",
    "astropy.modeling.tests.test_input.pytest",
    "numpy.all",
    "numpy.shape",
    "t"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestSingleInputSingleOutputSingleModel.test_1d_array_parameters_scalar_input": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_input.TModel_1_1",
    "isinstance",
    "numpy.all",
    "numpy.ndarray",
    "numpy.shape",
    "t"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestSingleInputSingleOutputSingleModel.test_2d_array_parameters_2d_array_input": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "ValueError",
    "astropy.modeling.tests.test_input.TModel_1_1",
    "astropy.modeling.tests.test_input.pytest",
    "numpy.all",
    "numpy.shape",
    "t"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestSingleInputSingleOutputSingleModel.test_mixed_array_parameters_1d_array_input": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_input.TModel_1_1",
    "numpy.shape",
    "numpy.testing.utils.assert_allclose",
    "t"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestSingleInputSingleOutputSingleModel.test_scalar_parameters_1d_array_input": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_input.TModel_1_1",
    "isinstance",
    "numpy.all",
    "numpy.arange",
    "numpy.ndarray",
    "numpy.shape",
    "t"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestSingleInputSingleOutputSingleModel.test_scalar_parameters_2d_array_input": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_input.TModel_1_1",
    "isinstance",
    "numpy.all",
    "numpy.arange",
    "numpy.ndarray",
    "numpy.shape",
    "t"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestSingleInputSingleOutputSingleModel.test_scalar_parameters_3d_array_input": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_input.TModel_1_1",
    "isinstance",
    "numpy.all",
    "numpy.arange",
    "numpy.ndarray",
    "numpy.shape",
    "t"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestSingleInputSingleOutputSingleModel.test_scalar_parameters_scalar_input": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_input.TModel_1_1",
    "float",
    "isinstance",
    "numpy.ndim",
    "t"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestSingleInputSingleOutputTwoModel": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_input.TestSingleInputSingleOutputTwoModel.test_1d_array_parameters_1d_array_input": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "ValueError",
    "astropy.modeling.tests.test_input.TModel_1_1",
    "astropy.modeling.tests.test_input.pytest",
    "numpy.all",
    "numpy.shape",
    "t"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestSingleInputSingleOutputTwoModel.test_1d_array_parameters_scalar_input": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_input.TModel_1_1",
    "numpy.all",
    "numpy.shape",
    "t"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestSingleInputSingleOutputTwoModel.test_2d_array_parameters_2d_array_input": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "ValueError",
    "astropy.modeling.tests.test_input.TModel_1_1",
    "astropy.modeling.tests.test_input.pytest",
    "numpy.all",
    "numpy.shape",
    "t"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestSingleInputSingleOutputTwoModel.test_mixed_array_parameters_1d_array_input": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "ValueError",
    "astropy.modeling.tests.test_input.TModel_1_1",
    "astropy.modeling.tests.test_input.pytest",
    "numpy.shape",
    "numpy.testing.utils.assert_allclose",
    "t"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestSingleInputSingleOutputTwoModel.test_scalar_parameters_1d_array_input": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "ValueError",
    "astropy.modeling.tests.test_input.TModel_1_1",
    "astropy.modeling.tests.test_input.pytest",
    "numpy.all",
    "numpy.arange",
    "numpy.shape",
    "t"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestSingleInputSingleOutputTwoModel.test_scalar_parameters_2d_array_input": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_input.TModel_1_1",
    "numpy.all",
    "numpy.arange",
    "numpy.shape",
    "t"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestSingleInputSingleOutputTwoModel.test_scalar_parameters_3d_array_input": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_input.TModel_1_1",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.shape",
    "t"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.TestSingleInputSingleOutputTwoModel.test_scalar_parameters_scalar_input": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_input.TModel_1_1",
    "numpy.all",
    "numpy.shape",
    "t"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_input.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.utils.assert_allclose"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_input.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_input.model1d_params": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "astropy.modeling.tests.test_input.model2d_params": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "astropy.modeling.tests.test_input.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_input.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_input.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_input.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_input.test_format_input_arrays": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_input.TInputFormatter",
    "model",
    "numpy.array",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.test_format_input_arrays_transposed": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_input.TInputFormatter",
    "input",
    "model",
    "numpy.array",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.test_format_input_scalars": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_input.TInputFormatter",
    "model"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_input.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_mappings": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.modeling.tests.test_mappings.HAS_SCIPY": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "astropy.modeling.tests.test_mappings.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_mappings.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.utils.assert_allclose"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_mappings.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.utils.assert_array_equal"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_mappings.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_mappings.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_mappings.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_mappings.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_mappings.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_mappings.test_drop_axes_1": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "Mapping",
    "mapping"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_mappings.test_drop_axes_2": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "Mapping",
    "NotImplementedError",
    "astropy.modeling.tests.test_mappings.pytest",
    "mapping",
    "mapping.inverse"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_mappings.test_drop_axes_3": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "Mapping",
    "Rotation2D",
    "mapping",
    "mapping.n_inputs",
    "model",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_mappings.test_duplicate_axes": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "Mapping",
    "mapping",
    "mapping.inverse",
    "mapping.inverse.n_inputs",
    "mapping.inverse.n_outputs"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_mappings.test_fittable_compound": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "Gaussian1D",
    "Identity",
    "LevMarLSQFitter",
    "Mapping",
    "NumpyRNGContext",
    "astropy.modeling.tests.test_mappings.pytest",
    "m",
    "new_model",
    "numpy.arange",
    "numpy.random.normal",
    "numpy.testing.utils.assert_allclose",
    "pfit"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_mappings.test_identity": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "Identity",
    "Rotation2D",
    "Shift",
    "model",
    "model.inverse",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.utils.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_mappings.test_swap_axes": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "Mapping",
    "mapping",
    "mapping.inverse",
    "numpy.ones",
    "numpy.testing.utils.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_mappings.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_models_quantities": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.modeling.tests.test_models_quantities.FUNC_MODELS_1D",
    "astropy.modeling.tests.test_models_quantities.FUNC_MODELS_2D",
    "astropy.modeling.tests.test_models_quantities.POWERLAW_MODELS",
    "numpy.exp",
    "numpy.log",
    "set"
   ]
  },
  "type": "module"
 },
 "astropy.modeling.tests.test_models_quantities.FUNC_MODELS_1D": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "astropy.modeling.tests.test_models_quantities.FUNC_MODELS_2D": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "astropy.modeling.tests.test_models_quantities.HAS_SCIPY": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "astropy.modeling.tests.test_models_quantities.MODELS": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "astropy.modeling.tests.test_models_quantities.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_models_quantities.POLY_MODELS": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "astropy.modeling.tests.test_models_quantities.POWERLAW_MODELS": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "astropy.modeling.tests.test_models_quantities.SCIPY_MODELS": {
  "data": {
   "lineno": 195
  },
  "type": "constant"
 },
 "astropy.modeling.tests.test_models_quantities.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_models_quantities.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_models_quantities.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_models_quantities.test_models_bounding_box": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "NotImplementedError",
    "assert_quantity_allclose",
    "astropy.modeling.tests.test_models_quantities.HAS_SCIPY",
    "astropy.modeling.tests.test_models_quantities.MODELS",
    "astropy.modeling.tests.test_models_quantities.SCIPY_MODELS",
    "astropy.modeling.tests.test_models_quantities.pytest",
    "len",
    "m",
    "m.bounding_box",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_models_quantities.test_models_evaluate_with_units": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "assert_quantity_allclose",
    "astropy.modeling.tests.test_models_quantities.HAS_SCIPY",
    "astropy.modeling.tests.test_models_quantities.MODELS",
    "astropy.modeling.tests.test_models_quantities.SCIPY_MODELS",
    "astropy.modeling.tests.test_models_quantities.pytest",
    "m"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_models_quantities.test_models_evaluate_with_units_param_array": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "assert_quantity_allclose",
    "astropy.modeling.tests.test_models_quantities.HAS_SCIPY",
    "astropy.modeling.tests.test_models_quantities.MODELS",
    "astropy.modeling.tests.test_models_quantities.SCIPY_MODELS",
    "astropy.modeling.tests.test_models_quantities.pytest",
    "len",
    "m",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_models_quantities.test_models_evaluate_with_units_x_array": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "assert_quantity_allclose",
    "astropy.modeling.tests.test_models_quantities.HAS_SCIPY",
    "astropy.modeling.tests.test_models_quantities.MODELS",
    "astropy.modeling.tests.test_models_quantities.SCIPY_MODELS",
    "astropy.modeling.tests.test_models_quantities.pytest",
    "len",
    "m"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_models_quantities.test_models_evaluate_without_units": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "assert_quantity_allclose",
    "astropy.modeling.tests.test_models_quantities.HAS_SCIPY",
    "astropy.modeling.tests.test_models_quantities.MODELS",
    "astropy.modeling.tests.test_models_quantities.SCIPY_MODELS",
    "astropy.modeling.tests.test_models_quantities.pytest",
    "collections.OrderedDict",
    "len",
    "mnu",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_models_quantities.test_models_fitting": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "LevMarLSQFitter",
    "astropy.modeling.tests.test_models_quantities.MODELS",
    "astropy.modeling.tests.test_models_quantities.pytest",
    "fitter",
    "getattr",
    "len",
    "m",
    "m.param_names",
    "numpy.exp",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_models_quantities.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_parameters": {
  "data": {},
  "type": "module"
 },
 "astropy.modeling.tests.test_parameters.MockModel": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_parameters.MockModel.evaluate": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.SetterModel": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "Parameter",
    "astropy.modeling.tests.test_parameters.setter1",
    "astropy.modeling.tests.test_parameters.setter2"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_parameters.SetterModel.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_parameters.SetterModel",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.SetterModel.do_something": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.SetterModel.evaluate": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TParModel": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_parameters.TParModel.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_parameters.TParModel",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TParModel.evaluate": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestMultipleParameterSets": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_parameters.TestMultipleParameterSets.setup_class": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.mgrid"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestMultipleParameterSets.test_change_par": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.testing.utils.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestMultipleParameterSets.test_change_par2": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.testing.utils.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestMultipleParameterSets.test_change_parameters": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameterInitialization": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_parameters.TestParameterInitialization.test_array_parameter1": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_parameters.TParModel",
    "astropy.modeling.tests.test_parameters.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameterInitialization.test_array_parameter2": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_parameters.TParModel",
    "astropy.modeling.tests.test_parameters.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameterInitialization.test_array_parameter4": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_parameters.TParModel",
    "len",
    "numpy.all",
    "numpy.issubdtype",
    "object"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameterInitialization.test_single_model_1d_array_different_length_parameters": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_parameters.TParModel",
    "astropy.modeling.tests.test_parameters.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameterInitialization.test_single_model_1d_array_parameters": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_parameters.TParModel",
    "len",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameterInitialization.test_single_model_2d_array_parameters": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_parameters.TParModel",
    "len",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameterInitialization.test_single_model_2d_broadcastable_parameters": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_parameters.TParModel",
    "len",
    "numpy.all",
    "numpy.issubdtype",
    "object"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameterInitialization.test_single_model_2d_non_square_parameters": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_parameters.TParModel",
    "astropy.modeling.tests.test_parameters.pytest",
    "len",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameterInitialization.test_single_model_scalar_and_array_parameters": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_parameters.TParModel",
    "len",
    "numpy.all",
    "numpy.issubdtype",
    "object"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameterInitialization.test_single_model_scalar_parameters": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_parameters.TParModel",
    "len",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameterInitialization.test_two_model_1d_array_parameters": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_parameters.TParModel",
    "len",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameterInitialization.test_two_model_2d_array_parameters": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_parameters.TParModel",
    "len",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameterInitialization.test_two_model_incorrect_scalar_parameters": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_parameters.TParModel",
    "astropy.modeling.tests.test_parameters.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameterInitialization.test_two_model_mixed_dimension_array_parameters": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_parameters.TParModel",
    "astropy.modeling.tests.test_parameters.pytest",
    "len",
    "numpy.all",
    "numpy.issubdtype",
    "object"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameterInitialization.test_two_model_nonzero_model_set_axis": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_parameters.TParModel",
    "len",
    "numpy.all",
    "numpy.array",
    "numpy.issubdtype",
    "numpy.rollaxis",
    "object"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameterInitialization.test_two_model_scalar_and_array_parameters": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_parameters.TParModel",
    "astropy.modeling.tests.test_parameters.pytest",
    "len",
    "numpy.all",
    "numpy.issubdtype",
    "object"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameterInitialization.test_two_model_scalar_parameters": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_parameters.TParModel",
    "astropy.modeling.tests.test_parameters.pytest",
    "len",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameterInitialization.test_wrong_number_of_params": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_parameters.TParModel",
    "astropy.modeling.tests.test_parameters.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameterInitialization.test_wrong_number_of_params2": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_parameters.TParModel",
    "astropy.modeling.tests.test_parameters.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameters": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_parameters.TestParameters.setup_class": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "get_pkg_data_filename",
    "int",
    "numpy.array",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameters.testPolynomial1D": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameters.test_par_against_iraf": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.utils.assert_allclose",
    "print"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameters.test_par_slicing": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameters.test_parameters_wrong_shape": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_parameters.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameters.test_poly1d_multiple_sets": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_array_equal",
    "numpy.testing.utils.assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameters.test_poly2d": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameters.test_poly2d_multiple_sets": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameters.test_scale_model_parametersnd": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.testing.utils.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameters.test_set_as_tuple": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameters.test_set_item": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameters.test_set_model_attr_num": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameters.test_set_model_attr_seq": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameters.test_set_parameters_as_array": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameters.test_set_parameters_as_list": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameters.test_set_slice": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameters.test_shift_model_parameters1d": {
  "data": {
   "lineno": 290
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameters.test_wrong_shape": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_parameters.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameters.test_wrong_size1": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_parameters.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.TestParameters.test_wrong_size2": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_parameters.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_parameters.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_parameters.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_parameters.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_parameters.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_parameters.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_parameters.setter1": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.setter2": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.test_non_broadcasting_parameters": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "TestModel",
    "astropy.modeling.tests.test_parameters.itertools",
    "astropy.modeling.tests.test_parameters.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.test_non_broadcasting_parameters.TestModel": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_parameters.test_non_broadcasting_parameters.TestModel.evaluate": {
  "data": {
   "lineno": 608
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.test_parameter_operators": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "abs",
    "astropy.modeling.tests.test_parameters.MockModel"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.test_parameter_properties": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "AttributeError",
    "astropy.modeling.tests.test_parameters.MockModel",
    "astropy.modeling.tests.test_parameters.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.test_setter": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_parameters.SetterModel",
    "model",
    "numpy.pi",
    "numpy.random.rand",
    "numpy.testing.utils.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_parameters.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_parameters.utils": {
  "data": {
   "shadows": "numpy.testing.utils"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_polynomial": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.modeling.tests.test_polynomial.HAS_SCIPY": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "astropy.modeling.tests.test_polynomial.TestFitting": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_polynomial.pytest",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_polynomial.TestFitting.setup_class": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.mgrid",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_polynomial.TestFitting.test_linear_fitter_1D": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_polynomial.linear1d",
    "astropy.modeling.tests.test_polynomial.pytest",
    "getattr",
    "itertools.product",
    "list",
    "model",
    "model.parameters",
    "model_class",
    "numpy.testing.utils.assert_allclose",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_polynomial.TestFitting.test_linear_fitter_2D": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_polynomial.linear2d",
    "astropy.modeling.tests.test_polynomial.pytest",
    "getattr",
    "itertools.product",
    "list",
    "model",
    "model.parameters",
    "model_class",
    "numpy.testing.utils.assert_allclose",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_polynomial.TestFitting.test_non_linear_fitter_1D": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_polynomial.linear1d",
    "astropy.modeling.tests.test_polynomial.pytest",
    "getattr",
    "itertools.product",
    "list",
    "model",
    "model.parameters",
    "model_class",
    "numpy.testing.utils.assert_allclose",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_polynomial.TestFitting.test_non_linear_fitter_2D": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_polynomial.linear2d",
    "astropy.modeling.tests.test_polynomial.pytest",
    "getattr",
    "itertools.product",
    "list",
    "model",
    "model.parameters",
    "model_class",
    "numpy.testing.utils.assert_allclose",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_polynomial.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_polynomial.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.utils.assert_allclose"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_polynomial.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_polynomial.linear1d": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "astropy.modeling.tests.test_polynomial.linear2d": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "astropy.modeling.tests.test_polynomial.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_polynomial.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_polynomial.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_polynomial.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_polynomial.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_polynomial.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_polynomial.test_2d_orthopolynomial_in_compound_model": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "Chebyshev2D",
    "Identity",
    "astropy.modeling.tests.test_polynomial.pytest",
    "compound_fit",
    "fitter",
    "numpy.mgrid",
    "numpy.testing.utils.assert_allclose",
    "simple_fit"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_polynomial.test_polynomial_init_with_constraints": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_polynomial.linear1d",
    "astropy.modeling.tests.test_polynomial.linear2d",
    "astropy.modeling.tests.test_polynomial.pytest",
    "getattr",
    "isinstance",
    "issubclass",
    "list",
    "model_class",
    "model_class.__name__"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_polynomial.test_sip_hst": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "SIP",
    "astropy.modeling.tests.test_polynomial.os",
    "dict",
    "get_pkg_data_filename",
    "numpy.testing.utils.assert_allclose",
    "sip"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_polynomial.test_sip_irac": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "SIP",
    "astropy.modeling.tests.test_polynomial.os",
    "dict",
    "get_pkg_data_filename",
    "numpy.testing.utils.assert_allclose",
    "sip",
    "sip.inverse"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_polynomial.test_sip_no_coeff": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "NotImplementedError",
    "SIP",
    "astropy.modeling.tests.test_polynomial.pytest",
    "numpy.testing.utils.assert_allclose",
    "sip",
    "sip.inverse",
    "sip.sip1d_a.parameters",
    "sip.sip1d_b.parameters"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_polynomial.test_zero_degree_polynomial": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_polynomial.pytest",
    "cls",
    "cls.n_inputs",
    "fitter",
    "issubclass",
    "len",
    "numpy.all",
    "numpy.linspace",
    "numpy.mgrid",
    "numpy.ones",
    "numpy.random.uniform",
    "numpy.testing.utils.assert_allclose",
    "numpy.zeros",
    "p1",
    "p2"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_polynomial.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_projections": {
  "data": {
   "symbols_in_volume": [
    "astropy.modeling.tests.test_projections.pars"
   ]
  },
  "type": "module"
 },
 "astropy.modeling.tests.test_projections.PIX_COORDINATES": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "astropy.modeling.tests.test_projections.TestCylindricalPerspective": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_projections.TestCylindricalPerspective.setup_class": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_projections.os",
    "get_pkg_data_filename",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_projections.TestCylindricalPerspective.test_CYP_p2s": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.testing.utils.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_projections.TestCylindricalPerspective.test_CYP_s2p": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.testing.utils.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_projections.TestZenithalPerspective": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_projections.TestZenithalPerspective.setup_class": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_projections.os",
    "get_pkg_data_filename",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_projections.TestZenithalPerspective.test_AZP_p2s": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.testing.utils.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_projections.TestZenithalPerspective.test_AZP_s2p": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.testing.utils.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_projections.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_projections.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_projections.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_projections.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_projections.pars": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "astropy.modeling.tests.test_projections.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_projections.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_projections.test_AffineTransformation2D": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "model",
    "numpy.all",
    "numpy.vstack",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_projections.test_AffineTransformation2D_inverse": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_projections.pytest",
    "model2",
    "numpy.testing.utils.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_projections.test_Pix2Sky": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_projections.PIX_COORDINATES",
    "astropy.modeling.tests.test_projections.os",
    "astropy.modeling.tests.test_projections.pars",
    "astropy.modeling.tests.test_projections.pytest",
    "get_pkg_data_filename",
    "getattr",
    "model",
    "numpy.asarray",
    "numpy.testing.utils.assert_almost_equal",
    "range",
    "tanprj"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_projections.test_Pix2Sky_unit": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "assert_quantity_allclose",
    "astropy.modeling.tests.test_projections.PIX_COORDINATES",
    "astropy.modeling.tests.test_projections.os",
    "astropy.modeling.tests.test_projections.pars",
    "astropy.modeling.tests.test_projections.pytest",
    "get_pkg_data_filename",
    "getattr",
    "model",
    "range",
    "tanprj"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_projections.test_Projection_properties": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_projections.test_Sky2Pix": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_projections.PIX_COORDINATES",
    "astropy.modeling.tests.test_projections.os",
    "astropy.modeling.tests.test_projections.pars",
    "astropy.modeling.tests.test_projections.pytest",
    "get_pkg_data_filename",
    "getattr",
    "model",
    "numpy.asarray",
    "numpy.testing.utils.assert_almost_equal",
    "range",
    "tinv"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_projections.test_Sky2Pix_unit": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "assert_quantity_allclose",
    "astropy.modeling.tests.test_projections.PIX_COORDINATES",
    "astropy.modeling.tests.test_projections.os",
    "astropy.modeling.tests.test_projections.pars",
    "astropy.modeling.tests.test_projections.pytest",
    "get_pkg_data_filename",
    "getattr",
    "model",
    "range",
    "tinv"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_projections.test_c_projection_striding": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "model",
    "numpy.arange",
    "numpy.testing.utils.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_projections.test_c_projections_shaped": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "model",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_projections.test_projection_default": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_projections.pars",
    "astropy.modeling.tests.test_projections.pytest",
    "getattr",
    "model",
    "tinv"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_projections.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_projections.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_projections.utils": {
  "data": {
   "shadows": "numpy.testing.utils"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_evaluation": {
  "data": {},
  "type": "module"
 },
 "astropy.modeling.tests.test_quantities_evaluation.MyTestModel": {
  "data": {
   "lineno": 88
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_quantities_evaluation.MyTestModel.evaluate": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_evaluation.TestInputUnits": {
  "data": {
   "lineno": 98
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_quantities_evaluation.TestInputUnits.setup_method": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_quantities_evaluation.MyTestModel"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_evaluation.TestInputUnits.test_evaluate": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "assert_quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_evaluation.TestInputUnits.test_input_units": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "assert_quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_evaluation.TestInputUnits.test_input_units_allow_dimensionless": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "assert_quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_evaluation.TestInputUnits.test_input_units_equivalencies": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "assert_quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_evaluation.TestInputUnits.test_input_units_strict": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "assert_quantity_allclose",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_evaluation.TestInputUnits.test_return_units": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "assert_quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_evaluation.TestInputUnits.test_return_units_scalar": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "assert_quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_evaluation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_evaluation.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_evaluation.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_evaluation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_evaluation.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_evaluation.test_evaluate_with_quantities": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "Gaussian1D",
    "assert_quantity_allclose",
    "g",
    "gq",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_evaluation.test_evaluate_with_quantities_and_equivalencies": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "Gaussian1D",
    "assert_quantity_allclose",
    "g"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_evaluation.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_evaluation.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_fitting": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.modeling.tests.test_quantities_fitting.HAS_SCIPY": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.modeling.tests.test_quantities_fitting._fake_gaussian_data": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "numpy.exp",
    "numpy.linspace",
    "numpy.random.normal"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_fitting.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_fitting.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_fitting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_fitting.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_fitting.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_fitting.test_fitting_incompatible_units": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "Gaussian1D",
    "fit_g"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_fitting.test_fitting_missing_data_units": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "Gaussian1D",
    "fit_g"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_fitting.test_fitting_missing_model_units": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "Gaussian1D",
    "assert_quantity_allclose",
    "astropy.modeling.tests.test_quantities_fitting._fake_gaussian_data",
    "fit_g"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_fitting.test_fitting_simple": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "Gaussian1D",
    "assert_quantity_allclose",
    "astropy.modeling.tests.test_quantities_fitting._fake_gaussian_data",
    "fit_g"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_fitting.test_fitting_with_initial_values": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "Gaussian1D",
    "assert_quantity_allclose",
    "astropy.modeling.tests.test_quantities_fitting._fake_gaussian_data",
    "fit_g"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_fitting.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_fitting.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_model": {
  "data": {},
  "type": "module"
 },
 "astropy.modeling.tests.test_quantities_model.test_gaussian1d_bounding_box": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "Gaussian1D",
    "assert_quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_model.test_gaussian1d_n_models": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "Gaussian1D",
    "assert_quantity_allclose",
    "g"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_model.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_parameters": {
  "data": {},
  "type": "module"
 },
 "astropy.modeling.tests.test_quantities_parameters.BaseTestModel": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_quantities_parameters.BaseTestModel.evaluate": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_parameters.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_parameters.coord": {
  "data": {
   "shadows": "coordinates"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_parameters.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_parameters.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_parameters.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_parameters.test_parameter_add_units": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "Gaussian1D",
    "assert_quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_parameters.test_parameter_change_unit": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "Gaussian1D",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_parameters.test_parameter_default_units_match": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_parameters.test_parameter_default_units_match.TestC": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_quantities_parameters.test_parameter_defaults": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "TestModel"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_parameters.test_parameter_defaults.TestModel": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "Parameter",
    "astropy.modeling.tests.test_quantities_parameters.BaseTestModel"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.tests.test_quantities_parameters.test_parameter_lose_units": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Gaussian1D"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_parameters.test_parameter_quantity": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "Gaussian1D"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_parameters.test_parameter_quantity_arithmetic": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "Gaussian1D",
    "abs"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_parameters.test_parameter_quantity_comparison": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "Gaussian1D",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_parameters.test_parameter_quantity_property": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "Gaussian1D",
    "TypeError",
    "assert_quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_parameters.test_parameter_set_quantity": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "Gaussian1D",
    "assert_quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_parameters.test_parameter_set_value": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "Gaussian1D",
    "TypeError",
    "assert_quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_parameters.test_parameters_compound_models": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "Pix2Sky_TAN",
    "RotateNative2Celestial",
    "Rotation2D"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_parameters.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_parameters.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_rotations": {
  "data": {},
  "type": "module"
 },
 "astropy.modeling.tests.test_quantities_rotations.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_rotations.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_rotations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_rotations.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_rotations.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_rotations.test_Rotation2D": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "assert_quantity_allclose",
    "model"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_rotations.test_Rotation2D_inverse": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "assert_quantity_allclose",
    "model",
    "model.inverse"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_rotations.test_against_wcslib": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_quantities_rotations.pytest",
    "m",
    "minv",
    "numpy.mgrid",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_rotations.test_attributes": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "n2c",
    "n2c._param_metrics",
    "n2c.lat._raw_value",
    "n2c.lat.unit",
    "n2c.lat.value",
    "n2c.lon._raw_value",
    "n2c.lon.unit",
    "n2c.lon.value",
    "n2c.lon_pole._raw_value",
    "n2c.lon_pole.unit",
    "n2c.lon_pole.value",
    "numpy.pi",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_rotations.test_euler_angle_rotations": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "assert_quantity_allclose",
    "model",
    "numpy.pi",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_rotations.test_euler_rotations_with_units": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "assert_quantity_allclose",
    "astropy.modeling.tests.test_quantities_rotations.pytest",
    "numpy.testing.utils.assert_allclose",
    "urot"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_rotations.test_roundtrip_sky_rotaion": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "assert_quantity_allclose",
    "astropy.modeling.tests.test_quantities_rotations.pytest",
    "c2n",
    "n2c"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_quantities_rotations.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_rotations.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_quantities_rotations.utils": {
  "data": {
   "shadows": "numpy.testing.utils"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_rotations": {
  "data": {},
  "type": "module"
 },
 "astropy.modeling.tests.test_rotations.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_rotations.cos": {
  "data": {
   "shadows": "math.cos"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_rotations.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_rotations.euler_axes_order": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "astropy.modeling.tests.test_rotations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_rotations.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_rotations.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_rotations.sin": {
  "data": {
   "shadows": "math.sin"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_rotations.test_Rotation2D": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "model",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_rotations.test_Rotation2D_inverse": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "model",
    "model.inverse",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_rotations.test_against_wcslib": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_rotations.pytest",
    "m",
    "minv",
    "numpy.mgrid",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_rotations.test_euler_angle_rotations": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "model",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_rotations.test_euler_angles": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_rotations.euler_axes_order",
    "astropy.modeling.tests.test_rotations.pytest",
    "math.cos",
    "math.sin",
    "model",
    "model._create_matrix",
    "numpy.array",
    "numpy.deg2rad",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_rotations.test_native_celestial_lat90": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "n2c",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_rotations.test_roundtrip_sky_rotaion": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_rotations.pytest",
    "c2n",
    "n2c",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_rotations.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_rotations.utils": {
  "data": {
   "shadows": "numpy.testing.utils"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "astropy.modeling.tests.test_utils.ET": {
  "data": {
   "shadows": "ExpressionTree"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_utils.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.tests.test_utils.test_ellipse_extent": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "Ellipse2D",
    "ellipse_extent",
    "model",
    "numpy.abs",
    "numpy.array",
    "numpy.indices",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_utils.test_traverse_postorder_duplicate_subtrees": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_utils.test_tree_evaluate_subexpression": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "astropy.modeling.tests.test_utils.operator",
    "test_slice"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_utils.test_tree_evaluate_subexpression.test_slice": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.test_utils.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.tests.utils": {
  "data": {},
  "type": "module"
 },
 "astropy.modeling.tests.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.tests.utils.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "astropy.modeling.tests.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.tests.utils.ignore_non_integer_warning": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "DeprecationWarning",
    "astropy.modeling.tests.utils.contextlib",
    "astropy.modeling.tests.utils.warnings",
    "catch_warnings"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.tests.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.tests.utils.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.modeling.tests.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.modeling.utils": {
  "data": {},
  "type": "module"
 },
 "astropy.modeling.utils.AliasDict": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "collections.MutableMapping",
    "dict"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.utils.AliasDict.__delitem__": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.utils.AliasDict.__getitem__": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.utils.AliasDict.__init__": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "aliases",
    "dict"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.utils.AliasDict.__iter__": {
  "data": {
   "lineno": 323
  },
  "type": "function"
 },
 "astropy.modeling.utils.AliasDict.__len__": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "iter",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.utils.AliasDict.__repr__": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.utils.AliasDict.__setitem__": {
  "data": {
   "lineno": 308
  },
  "type": "function"
 },
 "astropy.modeling.utils.ExpressionTree": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.utils.ExpressionTree.__getstate__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "dict",
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.utils.ExpressionTree.__init__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "astropy.modeling.utils.ExpressionTree.__setstate__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.utils.ExpressionTree.copy": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "astropy.modeling.utils.ExpressionTree",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.utils.ExpressionTree.evaluate": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "collections.deque",
    "getter",
    "len",
    "operator"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.utils.ExpressionTree.format_expression": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "collections.deque",
    "format_leaf"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.utils.ExpressionTree.isleaf": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.utils.ExpressionTree.traverse_inorder": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "collections.deque"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.utils.ExpressionTree.traverse_postorder": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "collections.deque"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.utils.ExpressionTree.traverse_preorder": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "collections.deque"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.utils.MutableMapping": {
  "data": {
   "shadows": "collections.MutableMapping"
  },
  "type": "import"
 },
 "astropy.modeling.utils._BoundingBox": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "class"
 },
 "astropy.modeling.utils._BoundingBox.__call__": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.utils._BoundingBox.__new__": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "astropy.modeling.utils._BoundingBox",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.utils._BoundingBox.validate": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "cls",
    "isiterable",
    "len",
    "numpy.shape",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.utils.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "astropy.modeling.utils._combine_equivalency_dict": {
  "data": {
   "lineno": 625
  },
  "type": "function"
 },
 "astropy.modeling.utils._parameter_with_unit": {
  "data": {
   "lineno": 611
  },
  "type": "function"
 },
 "astropy.modeling.utils._parameter_without_unit": {
  "data": {
   "lineno": 618
  },
  "type": "function"
 },
 "astropy.modeling.utils._to_orig_unit": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "numpy.rad2deg"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.utils._to_radian": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "isinstance",
    "numpy.deg2rad"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.modeling.utils.array_repr_oneline": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "numpy.array2string"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.utils.comb": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.utils.combine_labels": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.utils.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "astropy.modeling.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.modeling.utils.ellipse_extent": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "isinstance",
    "numpy.abs",
    "numpy.arctan2",
    "numpy.cos",
    "numpy.sin",
    "numpy.tan"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.utils.get_inputs_and_params": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "ValueError",
    "signature"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.utils.make_binary_operator_eval": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "f",
    "g",
    "oper",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.modeling.utils.poly_map_domain": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "astropy.modeling.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.modeling.utils.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.modeling.utils.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.nddata": {
  "data": {
   "symbols_in_volume": [
    "astropy.nddata.Conf"
   ]
  },
  "type": "module"
 },
 "astropy.nddata.Conf": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "astropy.nddata._config": {
  "data": {
   "shadows": "config"
  },
  "type": "import"
 },
 "astropy.nddata.ccddata": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "astropy.nddata.ccddata.CCDData",
    "astropy.nddata.ccddata.fits_ccddata_reader",
    "astropy.nddata.ccddata.fits_ccddata_writer"
   ]
  },
  "type": "module"
 },
 "astropy.nddata.ccddata.CCDData": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "astropy.nddata.ccddata._arithmetic",
    "numpy.add",
    "numpy.multiply",
    "numpy.subtract",
    "numpy.true_divide"
   ]
  },
  "type": "class"
 },
 "astropy.nddata.ccddata.CCDData.__init__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ValueError",
    "astropy.nddata.ccddata.CCDData",
    "astropy.nddata.ccddata._config_ccd_requires_unit",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.ccddata.CCDData._insert_in_metadata_fits_safe": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.ccddata.CCDData.copy": {
  "data": {
   "lineno": 336
  },
  "type": "function"
 },
 "astropy.nddata.ccddata.CCDData.data": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "astropy.nddata.ccddata.CCDData.header": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "astropy.nddata.ccddata.CCDData.to_hdu": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "astropy.nddata.ccddata.CCDData",
    "hasattr",
    "isinstance",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.ccddata.CCDData.uncertainty": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "StdDevUncertainty",
    "TypeError",
    "ValueError",
    "getattr",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.ccddata.CCDData.unit": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "astropy.nddata.ccddata.CCDData.wcs": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "astropy.nddata.ccddata._KEEP_THESE_KEYWORDS_IN_HEADER": {
  "data": {
   "lineno": 381
  },
  "type": "constant"
 },
 "astropy.nddata.ccddata.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "astropy.nddata.ccddata._arithmetic": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "astropy.nddata.ccddata._arithmetic.decorator": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "sharedmethod"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.ccddata._arithmetic.decorator.inner": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "astropy.nddata.ccddata._config_ccd_requires_unit"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.ccddata._config_ccd_requires_unit": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.nddata.ccddata._generate_wcs_and_update_header": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "WCS",
    "astropy.nddata.ccddata._KEEP_THESE_KEYWORDS_IN_HEADER"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.ccddata.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.nddata.ccddata.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.nddata.ccddata.fits_ccddata_reader": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "NotImplementedError",
    "StdDevUncertainty",
    "TypeError",
    "astropy.nddata.ccddata.CCDData",
    "astropy.nddata.ccddata._generate_wcs_and_update_header",
    "len",
    "numpy.bool_",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.ccddata.fits_ccddata_writer": {
  "data": {
   "lineno": 528
  },
  "type": "function"
 },
 "astropy.nddata.ccddata.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.nddata.ccddata.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.nddata.ccddata.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.nddata.ccddata.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.nddata.compat": {
  "data": {},
  "type": "module"
 },
 "astropy.nddata.compat.NDDataArray": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "astropy.nddata.compat.NDDataArray.__array__": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ma.masked_array"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.compat.NDDataArray.__array_prepare__": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "numpy.ma.masked_array"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.compat.NDDataArray.__init__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "astropy.nddata.compat.NDDataArray",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.compat.NDDataArray.convert_unit_to": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.compat.NDDataArray.dtype": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.compat.NDDataArray.flags": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.compat.NDDataArray.mask": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.bool_",
    "numpy.ma.nomask"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.compat.NDDataArray.ndim": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.compat.NDDataArray.shape": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.compat.NDDataArray.size": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.compat.NDDataArray.uncertainty": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "TypeError",
    "UnitConversionError",
    "ValueError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.compat.NDDataArray.unit": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "AttributeError",
    "Unit"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.compat.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.nddata.compat.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.nddata.compat.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.nddata.compat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.nddata.compat.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.nddata.compat.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.nddata.conf": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "astropy.nddata.decorators": {
  "data": {},
  "type": "module"
 },
 "astropy.nddata.decorators.SUPPORTED_PROPERTIES": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "astropy.nddata.decorators.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "astropy.nddata.decorators.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.nddata.decorators.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "astropy.nddata.decorators.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.nddata.decorators.islice": {
  "data": {
   "shadows": "itertools.islice"
  },
  "type": "import"
 },
 "astropy.nddata.decorators.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.nddata.decorators.support_nddata": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "support_nddata_decorator"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.decorators.support_nddata.support_nddata_decorator": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "ValueError",
    "signature",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.decorators.support_nddata.support_nddata_decorator.wrapper": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "ValueError",
    "astropy.nddata.decorators.SUPPORTED_PROPERTIES",
    "astropy.nddata.decorators.warnings",
    "copy.deepcopy",
    "func",
    "getattr",
    "isinstance",
    "itertools.islice",
    "len",
    "tuple",
    "wraps",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.decorators.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.nddata.decorators.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.nddata.flag_collection": {
  "data": {},
  "type": "module"
 },
 "astropy.nddata.flag_collection.FlagCollection": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "class"
 },
 "astropy.nddata.flag_collection.FlagCollection.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "collections.OrderedDict.__init__",
    "isiterable"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.flag_collection.FlagCollection.__setitem__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "collections.OrderedDict.__setitem__",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.flag_collection.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.nddata.flag_collection.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "astropy.nddata.flag_collection.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.nddata.flag_collection.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.nddata.flag_collection.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.nddata.flag_collection.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.nddata.flag_collection.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.nddata.mixins": {
  "data": {},
  "type": "module"
 },
 "astropy.nddata.mixins.ndarithmetic": {
  "data": {},
  "type": "module"
 },
 "astropy.nddata.mixins.ndarithmetic.NDArithmeticMixin": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.nddata.mixins.ndarithmetic.NDArithmeticMixin._arithmetic": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "KeyError",
    "copy.deepcopy",
    "numpy.logical_or"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.ndarithmetic.NDArithmeticMixin._arithmetic_data": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "operation"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.ndarithmetic.NDArithmeticMixin._arithmetic_mask": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "copy.deepcopy",
    "handle_mask"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.ndarithmetic.NDArithmeticMixin._arithmetic_meta": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "handle_meta"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.ndarithmetic.NDArithmeticMixin._arithmetic_uncertainty": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "operation"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.ndarithmetic.NDArithmeticMixin._arithmetic_wcs": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "ValueError",
    "compare_wcs"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.ndarithmetic.NDArithmeticMixin._prepare_then_do_arithmetic": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "TypeError",
    "astropy.nddata.mixins.ndarithmetic.NDArithmeticMixin",
    "cls",
    "isinstance",
    "operation"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.ndarithmetic.NDArithmeticMixin.add": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "astropy.nddata.mixins.ndarithmetic._arit_doc",
    "format_doc",
    "numpy.add"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.ndarithmetic.NDArithmeticMixin.divide": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "astropy.nddata.mixins.ndarithmetic._arit_doc",
    "format_doc",
    "numpy.true_divide"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.ndarithmetic.NDArithmeticMixin.multiply": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "astropy.nddata.mixins.ndarithmetic._arit_doc",
    "format_doc",
    "numpy.multiply"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.ndarithmetic.NDArithmeticMixin.subtract": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "astropy.nddata.mixins.ndarithmetic._arit_doc",
    "format_doc",
    "numpy.subtract"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.ndarithmetic.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "astropy.nddata.mixins.ndarithmetic._arit_doc": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "astropy.nddata.mixins.ndarithmetic.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.ndarithmetic.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.ndarithmetic.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.ndarithmetic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.ndarithmetic.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.ndarithmetic.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.ndio": {
  "data": {},
  "type": "module"
 },
 "astropy.nddata.mixins.ndio.NDIOMixin": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.nddata.mixins.ndio.NDIOMixin.read": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.ndio.NDIOMixin.write": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "astropy.nddata.mixins.ndio.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "astropy.nddata.mixins.ndio.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.ndio.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.ndio.io_registry": {
  "data": {
   "shadows": "registry"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.ndio.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.ndio.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.ndslicing": {
  "data": {},
  "type": "module"
 },
 "astropy.nddata.mixins.ndslicing.NDSlicingMixin": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.nddata.mixins.ndslicing.NDSlicingMixin.__getitem__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.ndslicing.NDSlicingMixin._slice": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "astropy.nddata.mixins.ndslicing.NDSlicingMixin._slice_mask": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.ndslicing.NDSlicingMixin._slice_uncertainty": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.ndslicing.NDSlicingMixin._slice_wcs": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.ndslicing.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "astropy.nddata.mixins.ndslicing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.ndslicing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.ndslicing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.ndslicing.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic": {
  "data": {},
  "type": "module"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.NDDataArithmetic": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.StdDevUncertaintyUncorrelated": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.StdDevUncertaintyUncorrelated.supports_correlated": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.test_arithmetics_data": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "astropy.nddata.mixins.tests.test_ndarithmetic.NDDataArithmetic",
    "astropy.nddata.mixins.tests.test_ndarithmetic.pytest",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.test_arithmetics_data_invalid": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ValueError",
    "astropy.nddata.mixins.tests.test_ndarithmetic.NDDataArithmetic",
    "astropy.nddata.mixins.tests.test_ndarithmetic.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.test_arithmetics_data_masks": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "astropy.nddata.mixins.tests.test_ndarithmetic.NDDataArithmetic",
    "astropy.nddata.mixins.tests.test_ndarithmetic.pytest",
    "len",
    "numpy.array",
    "numpy.bool_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.test_arithmetics_data_masks_invalid": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "ValueError",
    "astropy.nddata.mixins.tests.test_ndarithmetic.NDDataArithmetic",
    "astropy.nddata.mixins.tests.test_ndarithmetic.pytest",
    "numpy.array",
    "numpy.bool_"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.test_arithmetics_data_unit_identical": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "astropy.nddata.mixins.tests.test_ndarithmetic.NDDataArithmetic",
    "astropy.nddata.mixins.tests.test_ndarithmetic.pytest",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.test_arithmetics_data_unit_not_identical": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "astropy.nddata.mixins.tests.test_ndarithmetic.NDDataArithmetic",
    "astropy.nddata.mixins.tests.test_ndarithmetic.pytest",
    "len",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.test_arithmetics_data_wcs": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "astropy.nddata.mixins.tests.test_ndarithmetic.NDDataArithmetic",
    "astropy.nddata.mixins.tests.test_ndarithmetic.pytest",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.test_arithmetics_handle_switches": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "StdDevUncertainty",
    "astropy.nddata.mixins.tests.test_ndarithmetic.NDDataArithmetic",
    "astropy.nddata.mixins.tests.test_ndarithmetic.pytest",
    "len",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.test_arithmetics_mask_func": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "KeyError",
    "StdDevUncertainty",
    "astropy.nddata.mixins.tests.test_ndarithmetic.NDDataArithmetic",
    "astropy.nddata.mixins.tests.test_ndarithmetic.pytest",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.test_arithmetics_mask_func.mask_sad_func": {
  "data": {
   "lineno": 749
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.test_arithmetics_meta_func": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "KeyError",
    "StdDevUncertainty",
    "astropy.nddata.mixins.tests.test_ndarithmetic.NDDataArithmetic",
    "astropy.nddata.mixins.tests.test_ndarithmetic.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.test_arithmetics_meta_func.meta_fun_func": {
  "data": {
   "lineno": 681
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.test_arithmetics_stddevuncertainty_basic": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "StdDevUncertainty",
    "astropy.nddata.mixins.tests.test_ndarithmetic.NDDataArithmetic",
    "numpy.abs",
    "numpy.array",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.test_arithmetics_stddevuncertainty_basic_with_correlation": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "StdDevUncertainty",
    "astropy.nddata.mixins.tests.test_ndarithmetic.NDDataArithmetic",
    "astropy.nddata.mixins.tests.test_ndarithmetic.pytest",
    "numpy.abs",
    "numpy.array",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.test_arithmetics_stddevuncertainty_basic_with_correlation_array": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "StdDevUncertainty",
    "astropy.nddata.mixins.tests.test_ndarithmetic.NDDataArithmetic",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.test_arithmetics_stddevuncertainty_one_missing": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "StdDevUncertainty",
    "astropy.nddata.mixins.tests.test_ndarithmetic.NDDataArithmetic",
    "numpy.abs",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.test_arithmetics_stddevuncertainty_with_units": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "StdDevUncertainty",
    "astropy.nddata.mixins.tests.test_ndarithmetic.NDDataArithmetic",
    "astropy.nddata.mixins.tests.test_ndarithmetic.pytest",
    "isinstance",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.test_arithmetics_unknown_uncertainties": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "UnknownUncertainty",
    "astropy.nddata.mixins.tests.test_ndarithmetic.NDDataArithmetic",
    "astropy.nddata.mixins.tests.test_ndarithmetic.pytest",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.test_arithmetics_wcs_func": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "KeyError",
    "StdDevUncertainty",
    "ValueError",
    "astropy.nddata.mixins.tests.test_ndarithmetic.NDDataArithmetic",
    "astropy.nddata.mixins.tests.test_ndarithmetic.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.test_arithmetics_wcs_func.wcs_comp_func": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.test_arithmetics_with_correlation_unsupported": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "ValueError",
    "astropy.nddata.mixins.tests.test_ndarithmetic.NDDataArithmetic",
    "astropy.nddata.mixins.tests.test_ndarithmetic.StdDevUncertaintyUncorrelated",
    "astropy.nddata.mixins.tests.test_ndarithmetic.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.test_two_argument_useage": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "astropy.nddata.mixins.tests.test_ndarithmetic.NDDataArithmetic",
    "astropy.nddata.mixins.tests.test_ndarithmetic.pytest",
    "getattr",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.test_two_argument_useage_non_nddata_first_arg": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "astropy.nddata.mixins.tests.test_ndarithmetic.NDDataArithmetic",
    "astropy.nddata.mixins.tests.test_ndarithmetic.pytest",
    "getattr",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.tests.test_ndarithmetic.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.tests.test_ndio": {
  "data": {},
  "type": "module"
 },
 "astropy.nddata.mixins.tests.test_ndio.NDDataIO": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "astropy.nddata.mixins.tests.test_ndio.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.tests.test_ndio.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.tests.test_ndio.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.tests.test_ndio.test_simple_write_read": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "astropy.nddata.mixins.tests.test_ndio.NDDataIO",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndio.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.tests.test_ndslicing": {
  "data": {},
  "type": "module"
 },
 "astropy.nddata.mixins.tests.test_ndslicing.NDDataSliceable": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "astropy.nddata.mixins.tests.test_ndslicing.SomeUncertainty": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "astropy.nddata.mixins.tests.test_ndslicing.SomeUncertainty._propagate_add": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndslicing.SomeUncertainty._propagate_divide": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndslicing.SomeUncertainty._propagate_multiply": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndslicing.SomeUncertainty._propagate_subtract": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndslicing.SomeUncertainty.uncertainty_type": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndslicing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.tests.test_ndslicing.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.tests.test_ndslicing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.tests.test_ndslicing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.tests.test_ndslicing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.tests.test_ndslicing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.tests.test_ndslicing.test_boolean_slicing": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "StdDevUncertainty",
    "astropy.nddata.mixins.tests.test_ndslicing.NDDataSliceable",
    "numpy.arange",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndslicing.test_slicing_1ddata_ndslice": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "IndexError",
    "astropy.nddata.mixins.tests.test_ndslicing.NDDataSliceable",
    "astropy.nddata.mixins.tests.test_ndslicing.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndslicing.test_slicing_1dmask_ndslice": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "IndexError",
    "astropy.nddata.mixins.tests.test_ndslicing.NDDataSliceable",
    "astropy.nddata.mixins.tests.test_ndslicing.pytest",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndslicing.test_slicing_all_npndarray_1d": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "astropy.nddata.mixins.tests.test_ndslicing.NDDataSliceable",
    "numpy.arange",
    "numpy.linspace",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndslicing.test_slicing_all_npndarray_nd": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "astropy.nddata.mixins.tests.test_ndslicing.NDDataSliceable",
    "numpy.arange",
    "numpy.linspace",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndslicing.test_slicing_all_npndarray_shape_diff": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "astropy.nddata.mixins.tests.test_ndslicing.NDDataSliceable",
    "numpy.arange",
    "numpy.linspace",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndslicing.test_slicing_all_something_wrong": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "astropy.nddata.mixins.tests.test_ndslicing.NDDataSliceable",
    "numpy.arange",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndslicing.test_slicing_data_scalar_fail": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "TypeError",
    "astropy.nddata.mixins.tests.test_ndslicing.NDDataSliceable",
    "astropy.nddata.mixins.tests.test_ndslicing.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndslicing.test_slicing_only_data": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "astropy.nddata.mixins.tests.test_ndslicing.NDDataSliceable",
    "numpy.arange",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.mixins.tests.test_ndslicing.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.nddata.mixins.tests.test_ndslicing.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.nddata.nddata": {
  "data": {},
  "type": "module"
 },
 "astropy.nddata.nddata.NDData": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "MetaData",
    "astropy.nddata.nddata._meta_doc"
   ]
  },
  "type": "class"
 },
 "astropy.nddata.nddata.NDData.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "TypeError",
    "Unit",
    "astropy.nddata.nddata.NDData",
    "copy.deepcopy",
    "hasattr",
    "isinstance",
    "numpy.array",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nddata.NDData.__repr__": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "numpy.array2string"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nddata.NDData.__str__": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nddata.NDData.data": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nddata.NDData.mask": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "astropy.nddata.nddata.NDData.uncertainty": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "UnknownUncertainty",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nddata.NDData.unit": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nddata.NDData.wcs": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nddata.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "astropy.nddata.nddata._meta_doc": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "astropy.nddata.nddata.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.nddata.nddata.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "astropy.nddata.nddata.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.nddata.nddata.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.nddata.nddata.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.nddata.nddata.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.nddata.nddata_base": {
  "data": {},
  "type": "module"
 },
 "astropy.nddata.nddata_base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "astropy.nddata.nddata_base.NDDataBase": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.nddata.nddata_base.NDDataBase.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nddata_base.NDDataBase.data": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nddata_base.NDDataBase.mask": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nddata_base.NDDataBase.meta": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nddata_base.NDDataBase.uncertainty": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nddata_base.NDDataBase.unit": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nddata_base.NDDataBase.wcs": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nddata_base.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "astropy.nddata.nddata_base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.nddata.nddata_base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "astropy.nddata.nddata_base.abstractproperty": {
  "data": {
   "shadows": "abc.abstractproperty"
  },
  "type": "import"
 },
 "astropy.nddata.nddata_base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.nddata.nddata_base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.nddata.nddata_base.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.nddata.nddata_withmixins": {
  "data": {},
  "type": "module"
 },
 "astropy.nddata.nddata_withmixins.NDDataRef": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "astropy.nddata.nddata_withmixins.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "astropy.nddata.nddata_withmixins.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.nddata.nddata_withmixins.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.nddata.nddata_withmixins.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.nddata.nddata_withmixins.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.nddata.nduncertainty": {
  "data": {},
  "type": "module"
 },
 "astropy.nddata.nduncertainty.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "astropy.nddata.nduncertainty.IncompatibleUncertaintiesException": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "astropy.nddata.nduncertainty.MissingDataAssociationException": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "astropy.nddata.nduncertainty.NDUncertainty": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.nddata.nduncertainty.NDUncertainty.__getitem__": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "astropy.nddata.nduncertainty.NDUncertainty.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "Unit",
    "astropy.nddata.nduncertainty.IncompatibleUncertaintiesException",
    "astropy.nddata.nduncertainty.NDUncertainty",
    "copy.deepcopy",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nduncertainty.NDUncertainty.__repr__": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.array2string",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nduncertainty.NDUncertainty._convert_uncertainty": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "astropy.nddata.nduncertainty.IncompatibleUncertaintiesException",
    "astropy.nddata.nduncertainty.NDUncertainty",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nduncertainty.NDUncertainty._propagate_add": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nduncertainty.NDUncertainty._propagate_divide": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nduncertainty.NDUncertainty._propagate_multiply": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nduncertainty.NDUncertainty._propagate_subtract": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nduncertainty.NDUncertainty.array": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.array",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nduncertainty.NDUncertainty.parent_nddata": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "astropy.nddata.nduncertainty.weakref",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nduncertainty.NDUncertainty.propagate": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nduncertainty.NDUncertainty.supports_correlated": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nduncertainty.NDUncertainty.uncertainty_type": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nduncertainty.NDUncertainty.unit": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nduncertainty.StdDevUncertainty": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "astropy.nddata.nduncertainty.NDUncertainty"
   ]
  },
  "type": "class"
 },
 "astropy.nddata.nduncertainty.StdDevUncertainty._convert_uncertainty": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "astropy.nddata.nduncertainty.IncompatibleUncertaintiesException",
    "astropy.nddata.nduncertainty.StdDevUncertainty",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nduncertainty.StdDevUncertainty._propagate_add": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "copy.deepcopy",
    "isinstance",
    "numpy.ndarray",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nduncertainty.StdDevUncertainty._propagate_divide": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "isinstance",
    "numpy.abs",
    "numpy.ndarray",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nduncertainty.StdDevUncertainty._propagate_multiply": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "isinstance",
    "numpy.abs",
    "numpy.ndarray",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nduncertainty.StdDevUncertainty._propagate_subtract": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "copy.deepcopy",
    "isinstance",
    "numpy.ndarray",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nduncertainty.StdDevUncertainty.supports_correlated": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nduncertainty.StdDevUncertainty.uncertainty_type": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nduncertainty.UnknownUncertainty": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "astropy.nddata.nduncertainty.NDUncertainty"
   ]
  },
  "type": "class"
 },
 "astropy.nddata.nduncertainty.UnknownUncertainty._convert_uncertainty": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "astropy.nddata.nduncertainty.IncompatibleUncertaintiesException"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nduncertainty.UnknownUncertainty._propagate_add": {
  "data": {
   "lineno": 349
  },
  "type": "function"
 },
 "astropy.nddata.nduncertainty.UnknownUncertainty._propagate_divide": {
  "data": {
   "lineno": 360
  },
  "type": "function"
 },
 "astropy.nddata.nduncertainty.UnknownUncertainty._propagate_multiply": {
  "data": {
   "lineno": 357
  },
  "type": "function"
 },
 "astropy.nddata.nduncertainty.UnknownUncertainty._propagate_subtract": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "astropy.nddata.nduncertainty.UnknownUncertainty.supports_correlated": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nduncertainty.UnknownUncertainty.uncertainty_type": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.nduncertainty.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "astropy.nddata.nduncertainty.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.nddata.nduncertainty.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "astropy.nddata.nduncertainty.abstractproperty": {
  "data": {
   "shadows": "abc.abstractproperty"
  },
  "type": "import"
 },
 "astropy.nddata.nduncertainty.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "astropy.nddata.nduncertainty.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.nddata.nduncertainty.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.nddata.nduncertainty.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.nddata.nduncertainty.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.nddata.nduncertainty.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "astropy.nddata.setup_package": {
  "data": {},
  "type": "module"
 },
 "astropy.nddata.setup_package.get_package_data": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "astropy.nddata.setup_package.requires_2to3": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "astropy.nddata.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.nddata.tests.test_ccddata": {
  "data": {},
  "type": "module"
 },
 "astropy.nddata.tests.test_ccddata.DEFAULTS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.nddata.tests.test_ccddata.DEFAULT_DATA_SCALE": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "astropy.nddata.tests.test_ccddata.DEFAULT_DATA_SIZE": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "astropy.nddata.tests.test_ccddata.DEFAULT_SEED": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "astropy.nddata.tests.test_ccddata.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_ccddata.ccd_data": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "CCDData",
    "NumpyRNGContext",
    "astropy.nddata.tests.test_ccddata.DEFAULTS",
    "astropy.nddata.tests.test_ccddata.pytest",
    "astropy.nddata.tests.test_ccddata.value_from_markers",
    "numpy.random.normal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_ccddata.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_ccddata.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_ccddata.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_ccddata.test_add_sub_overload": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "AttributeError",
    "CCDData",
    "StdDevUncertainty",
    "astropy.nddata.tests.test_ccddata.ccd_data",
    "astropy.nddata.tests.test_ccddata.pytest",
    "isinstance",
    "method",
    "np_method",
    "numpy.__getattribute__",
    "numpy.ones_like",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_arithmetic_add_with_array": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "CCDData",
    "ValueError",
    "astropy.nddata.tests.test_ccddata.pytest",
    "numpy.arange",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_arithmetic_divide_with_array": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "CCDData",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_arithmetic_multiply_with_array": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "CCDData",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_arithmetic_no_wcs_compare": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "CCDData",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_arithmetic_overload_ccddata_operand": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "StdDevUncertainty",
    "astropy.nddata.tests.test_ccddata.ccd_data",
    "len",
    "numpy.abs",
    "numpy.ones_like",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_arithmetic_overload_differing_units": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "CCDData",
    "numpy.add",
    "numpy.array",
    "numpy.divide",
    "numpy.multiply",
    "numpy.subtract",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_arithmetic_overload_fails": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "TypeError",
    "astropy.nddata.tests.test_ccddata.ccd_data",
    "astropy.nddata.tests.test_ccddata.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_arithmetic_subtract_with_array": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "CCDData",
    "ValueError",
    "astropy.nddata.tests.test_ccddata.pytest",
    "numpy.arange",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_arithmetic_with_wcs_compare": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "CCDData",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_arithmetic_with_wcs_compare.return_diff_smaller_3": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_arithmetic_with_wcs_compare_fail": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "CCDData",
    "ValueError",
    "astropy.nddata.tests.test_ccddata.pytest",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_arithmetic_with_wcs_compare_fail.return_diff_smaller_1": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_ccddata_empty": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "CCDData",
    "TypeError",
    "astropy.nddata.tests.test_ccddata.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_ccddata_init_with_string_electron_unit": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "CCDData",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_ccddata_meta_header_conflict": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "CCDData",
    "ValueError",
    "astropy.nddata.tests.test_ccddata.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_ccddata_meta_is_case_sensitive": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_ccddata.ccd_data"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_ccddata_meta_is_not_fits_header": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_ccddata.ccd_data",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_ccddata_must_have_unit": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "CCDData",
    "ValueError",
    "astropy.nddata.tests.test_ccddata.pytest",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_ccddata_simple": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_ccddata.ccd_data",
    "astropy.nddata.tests.test_ccddata.pytest",
    "float",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_ccddata_unit_cannot_be_set_to_none": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "TypeError",
    "astropy.nddata.tests.test_ccddata.ccd_data",
    "astropy.nddata.tests.test_ccddata.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_ccddata_writer": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "CCDData.read",
    "astropy.nddata.tests.test_ccddata.ccd_data",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_copy": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_ccddata.ccd_data",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_fromMEF": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "CCDData.read",
    "astropy.nddata.tests.test_ccddata.ccd_data",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_header": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "CCDData",
    "astropy.nddata.tests.test_ccddata.ccd_data"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_header2meta": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "CCDData",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_history_preserved_if_metadata_is_fits_header": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "CCDData.read",
    "len",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_infol_logged_if_unit_in_fits_header": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "CCDData.read",
    "astropy.nddata.tests.test_ccddata.ccd_data"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_initialize_from_FITS": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "CCDData.read",
    "astropy.nddata.tests.test_ccddata.ccd_data",
    "astropy.nddata.tests.test_ccddata.pytest",
    "numpy.float",
    "numpy.issubdtype"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_initialize_from_FITS_bad_keyword_raises_error": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "CCDData.read",
    "TypeError",
    "astropy.nddata.tests.test_ccddata.ccd_data",
    "astropy.nddata.tests.test_ccddata.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_initialize_from_fits_with_ADU_in_header": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "CCDData.read",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_initialize_from_fits_with_data_in_different_extension": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "CCDData.read",
    "numpy.random.random",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_initialize_from_fits_with_extension": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "CCDData.read",
    "numpy.random.random",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_initialize_from_fits_with_unit_in_header": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "CCDData.read",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_mask_arithmetic_ccd": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_ccddata.ccd_data",
    "astropy.nddata.tests.test_ccddata.pytest",
    "method",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_metafromdict": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "CCDData",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_metafromheader": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "CCDData",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_metafromstring_fail": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "CCDData",
    "TypeError",
    "astropy.nddata.tests.test_ccddata.pytest",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_mult_div_overload": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "AttributeError",
    "CCDData",
    "StdDevUncertainty",
    "astropy.nddata.tests.test_ccddata.ccd_data",
    "astropy.nddata.tests.test_ccddata.pytest",
    "isinstance",
    "method",
    "np_method",
    "numpy.__getattribute__",
    "numpy.ones_like",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_recognized_fits_formats_for_read_write": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "CCDData.read",
    "astropy.nddata.tests.test_ccddata.ccd_data"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_setting_bad_uncertainty_raises_error": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "TypeError",
    "astropy.nddata.tests.test_ccddata.ccd_data",
    "astropy.nddata.tests.test_ccddata.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_setting_uncertainty_with_array": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_ccddata.ccd_data",
    "numpy.abs",
    "numpy.sqrt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_setting_uncertainty_wrong_shape_raises_error": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "ValueError",
    "astropy.nddata.tests.test_ccddata.ccd_data",
    "astropy.nddata.tests.test_ccddata.pytest",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_stddevuncertainty_compat_descriptor_no_parent": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "StdDevUncertainty",
    "astropy.nddata.tests.test_ccddata.pytest",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_stddevuncertainty_compat_descriptor_no_weakref": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "CCDData",
    "StdDevUncertainty",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_to_hdu": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_ccddata.ccd_data",
    "isinstance",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_wcs": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_ccddata.ccd_data"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_wcs_arithmetic": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_ccddata.ccd_data"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_wcs_arithmetic_ccd": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_ccddata.ccd_data",
    "astropy.nddata.tests.test_ccddata.pytest",
    "method"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_wcs_attribute": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "CCDData",
    "CCDData.read",
    "WCS",
    "astropy.nddata.tests.test_ccddata.ccd_data",
    "len",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_wcs_keyword_removal_for_wcs_test_files": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "WCS",
    "_generate_wcs_and_update_header",
    "get_pkg_data_contents",
    "get_pkg_data_filenames",
    "isinstance",
    "numpy.testing.assert_almost_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_wcs_keywords_removed_from_header": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "CCDData.read",
    "get_pkg_data_filename",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_wcs_sip_handling": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "CCDData.read",
    "all",
    "any",
    "check_wcs_ctypes",
    "get_pkg_data_filename"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_wcs_sip_handling.check_wcs_ctypes": {
  "data": {
   "lineno": 713
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_write_read_multiextensionfits_custom_ext_names": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "CCDData.read",
    "StdDevUncertainty",
    "astropy.nddata.tests.test_ccddata.ccd_data",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_write_read_multiextensionfits_mask_default": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "CCDData.read",
    "astropy.nddata.tests.test_ccddata.ccd_data",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_write_read_multiextensionfits_not": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "CCDData.read",
    "StdDevUncertainty",
    "astropy.nddata.tests.test_ccddata.ccd_data"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_write_read_multiextensionfits_uncertainty_default": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "CCDData.read",
    "StdDevUncertainty",
    "astropy.nddata.tests.test_ccddata.ccd_data",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.test_write_unit_to_hdu": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_ccddata.ccd_data"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_ccddata.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_ccddata.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_ccddata.value_from_markers": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "KeyError",
    "astropy.nddata.tests.test_ccddata.DEFAULTS"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_compat": {
  "data": {},
  "type": "module"
 },
 "astropy.nddata.tests.test_compat.NDDATA_ATTRIBUTES": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "astropy.nddata.tests.test_compat.SubNDData": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "NDDataArray"
   ]
  },
  "type": "class"
 },
 "astropy.nddata.tests.test_compat.SubNDData.__init__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "ValueError",
    "astropy.nddata.tests.test_compat.SubNDData",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_compat.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_compat.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_compat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_compat.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_compat.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_compat.test_convert_unit_to": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "NDDataArray",
    "StdDevUncertainty",
    "numpy.all",
    "numpy.array",
    "numpy.bool",
    "numpy.ones",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_compat.test_init_of_subclass_in_convert_unit_to": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_compat.SubNDData",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_compat.test_nddata_conversion": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "NDDataArray",
    "int",
    "numpy.array",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_compat.test_nddata_flags_init_without_np_array": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "NDDataArray",
    "astropy.nddata.tests.test_compat.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_compat.test_nddata_flags_invalid_shape": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "NDDataArray",
    "ValueError",
    "astropy.nddata.tests.test_compat.pytest",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_compat.test_nddata_parameters": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "NDDataArray",
    "StdDevUncertainty",
    "float",
    "numpy.dtype",
    "numpy.zeros",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_compat.test_nddata_simple": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "NDDataArray",
    "float",
    "numpy.dtype",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_compat.test_nddataarray_from_nddata": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "NDData",
    "NDDataArray",
    "StdDevUncertainty"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_compat.test_nddataarray_from_nddataarray": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "NDDataArray",
    "StdDevUncertainty"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_compat.test_nddataarray_has_attributes_of_old_nddata": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "NDDataArray",
    "astropy.nddata.tests.test_compat.NDDATA_ATTRIBUTES",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_compat.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_compat.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_decorators": {
  "data": {},
  "type": "module"
 },
 "astropy.nddata.tests.test_decorators.CCDData": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "astropy.nddata.tests.test_decorators.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_decorators.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_decorators.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_decorators.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_decorators.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_decorators.test_accepting_property_meta_empty": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "NDData",
    "numpy.ones",
    "test"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_accepting_property_meta_empty.test": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "support_nddata"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_accepting_property_normal": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "NDData",
    "catch_warnings",
    "len",
    "numpy.all",
    "numpy.ones",
    "numpy.zeros",
    "test"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_accepting_property_normal.test": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "support_nddata"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_accepting_property_notexist": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "NDData",
    "numpy.ones",
    "test"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_accepting_property_notexist.test": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "support_nddata"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_accepting_property_translated": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "NDData",
    "catch_warnings",
    "len",
    "numpy.all",
    "numpy.ones",
    "numpy.zeros",
    "test"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_accepting_property_translated.test": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "support_nddata"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_incorrect_first_argument": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_incorrect_first_argument.wrapped_function_2": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_incorrect_first_argument.wrapped_function_3": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_incorrect_first_argument.wrapped_function_4": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_parameter_default_identical_to_explicit_passed_argument": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "NDData",
    "catch_warnings",
    "func",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_parameter_default_identical_to_explicit_passed_argument.func": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "support_nddata"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_pass_all_separate": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_decorators.wrapped_function_1",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_pass_nddata": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "NDData",
    "astropy.nddata.tests.test_decorators.wrapped_function_1",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_pass_nddata_and_explicit": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "NDData",
    "astropy.nddata.tests.test_decorators.wrapped_function_1",
    "catch_warnings",
    "len",
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_pass_nddata_ignored": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "NDData",
    "astropy.nddata.tests.test_decorators.wrapped_function_1",
    "catch_warnings",
    "len",
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_pass_numpy": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_decorators.wrapped_function_1",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_setup_failures1": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ValueError",
    "support_nddata"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_setup_failures10": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_setup_failures10.test": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "support_nddata"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_setup_failures11": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_setup_failures11.test": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "support_nddata"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_setup_failures2": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "ValueError",
    "support_nddata"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_setup_failures3": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "ValueError",
    "support_nddata"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_setup_failures4": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_setup_failures4.test": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "support_nddata"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_setup_failures5": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_setup_failures5.test": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "support_nddata"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_setup_failures6": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_setup_failures6.test": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "support_nddata"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_setup_failures7": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "NDData",
    "TypeError",
    "numpy.ones",
    "test"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_setup_failures7.test": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_decorators.CCDData",
    "support_nddata"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_setup_failures8": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "NDData",
    "ValueError",
    "numpy.ones",
    "test"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_setup_failures8.test": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "support_nddata"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_setup_failures9": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "ValueError",
    "support_nddata"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_setup_numpyarray_default": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_setup_numpyarray_default.func": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "numpy.array",
    "support_nddata"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_still_accepts_other_input": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "NDData",
    "int",
    "isinstance",
    "list",
    "numpy.ones",
    "test"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_still_accepts_other_input.test": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "support_nddata"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_wrap_function_accepts": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "MyData",
    "NDData",
    "TypeError",
    "numpy.array",
    "wrapped_function_5"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_wrap_function_accepts.MyData": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "NDData"
   ]
  },
  "type": "class"
 },
 "astropy.nddata.tests.test_decorators.test_wrap_function_accepts.wrapped_function_5": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "support_nddata"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_wrap_function_no_kwargs": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "NDData",
    "numpy.array",
    "wrapped_function_5"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_wrap_function_no_kwargs.wrapped_function_5": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_wrap_function_repack_valid": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "NDData",
    "isinstance",
    "numpy.array",
    "wrapped_function_5"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_wrap_function_repack_valid.wrapped_function_5": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "support_nddata"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_wrap_preserve_signature_docstring": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_decorators.inspect"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.test_wrap_preserve_signature_docstring.wrapped_function_6": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "support_nddata"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_decorators.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_decorators.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_decorators.wrapped_function_1": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_flag_collection": {
  "data": {},
  "type": "module"
 },
 "astropy.nddata.tests.test_flag_collection.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_flag_collection.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_flag_collection.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_flag_collection.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_flag_collection.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_flag_collection.test_init": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "FlagCollection"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_flag_collection.test_init_noshape": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Exception",
    "FlagCollection",
    "astropy.nddata.tests.test_flag_collection.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_flag_collection.test_init_notiterable": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "Exception",
    "FlagCollection",
    "astropy.nddata.tests.test_flag_collection.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_flag_collection.test_setitem": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "FlagCollection",
    "bool",
    "float",
    "int",
    "numpy.ones",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_flag_collection.test_setitem_invalid_shape": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "FlagCollection",
    "ValueError",
    "astropy.nddata.tests.test_flag_collection.pytest",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_flag_collection.test_setitem_invalid_type": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "Exception",
    "FlagCollection",
    "astropy.nddata.tests.test_flag_collection.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_flag_collection.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_nddata": {
  "data": {},
  "type": "module"
 },
 "astropy.nddata.tests.test_nddata.BadNDDataSubclass": {
  "data": {
   "lineno": 75
  },
  "type": "class"
 },
 "astropy.nddata.tests.test_nddata.BadNDDataSubclass.__init__": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.FakeNumpyArray": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.nddata.tests.test_nddata.FakeNumpyArray.__array__": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.FakeNumpyArray.__getitem__": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.FakeNumpyArray.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_nddata.FakeNumpyArray",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.FakeNumpyArray.dtype": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.FakeNumpyArray.shape": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.FakeUncertainty": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "astropy.nddata.tests.test_nddata.FakeUncertainty._propagate_add": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.FakeUncertainty._propagate_divide": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.FakeUncertainty._propagate_multiply": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.FakeUncertainty._propagate_subtract": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.FakeUncertainty.uncertainty_type": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.MinimalUncertainty": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.nddata.tests.test_nddata.MinimalUncertainty.__init__": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.MinimalUncertainty.uncertainty_type": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_nddata.TestMetaNDData": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "NDData",
    "numpy.array"
   ]
  },
  "type": "class"
 },
 "astropy.nddata.tests.test_nddata.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_nddata.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_nddata.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_nddata.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_nddata.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_nddata.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_nddata.test_arithmetic_not_supported": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "NDData",
    "TypeError",
    "astropy.nddata.tests.test_nddata.pytest",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.test_mask_setter": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "NDData"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.test_nddata_empty": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "NDData",
    "TypeError",
    "astropy.nddata.tests.test_nddata.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.test_nddata_init_data_fail": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "NDData",
    "Shape",
    "TypeError",
    "astropy.nddata.tests.test_nddata.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.test_nddata_init_data_fail.Shape": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.nddata.tests.test_nddata.test_nddata_init_data_fail.Shape.__init__": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.test_nddata_init_data_fail.Shape.__repr__": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.test_nddata_init_data_fakes": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "NDData",
    "astropy.nddata.tests.test_nddata.FakeNumpyArray",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.test_nddata_init_data_masked_quantity": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "NDData",
    "isinstance",
    "numpy.array",
    "numpy.ma.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.test_nddata_init_data_maskedarray": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "NDData",
    "NumpyRNGContext",
    "numpy.ma.masked_where",
    "numpy.random.randn",
    "numpy.random.random",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.test_nddata_init_data_ndarray": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "NDData",
    "NumpyRNGContext",
    "float",
    "int",
    "numpy.array",
    "numpy.dtype",
    "numpy.ones",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.test_nddata_init_data_nddata": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "NDData",
    "numpy.array",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.test_nddata_init_data_nddata_subclass": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "NDData",
    "TypeError",
    "astropy.nddata.tests.test_nddata.BadNDDataSubclass",
    "astropy.nddata.tests.test_nddata.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.test_nddata_init_data_nonarray": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "NDData",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.test_nddata_init_data_quantity": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "NDData",
    "astropy.nddata.tests.test_nddata.pytest",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.test_nddata_repr": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "NDData",
    "astropy.nddata.tests.test_nddata.textwrap",
    "numpy.array",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.test_nddata_str": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "NDData",
    "astropy.nddata.tests.test_nddata.textwrap",
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.test_param_mask": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "NDData",
    "numpy.array",
    "numpy.ma.array"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.test_param_meta": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "NDData",
    "TypeError",
    "astropy.nddata.tests.test_nddata.pytest",
    "collections.OrderedDict",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.test_param_uncertainty": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "NDData",
    "StdDevUncertainty",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.test_param_unit": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "NDData",
    "ValueError",
    "astropy.nddata.tests.test_nddata.pytest",
    "numpy.array",
    "numpy.ma.array",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.test_param_wcs": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "NDData"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.test_slicing_not_supported": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "NDData",
    "TypeError",
    "astropy.nddata.tests.test_nddata.pytest",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.test_uncertainty_setter": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "NDData",
    "astropy.nddata.tests.test_nddata.FakeUncertainty",
    "astropy.nddata.tests.test_nddata.MinimalUncertainty",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_nddata.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_nddata.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_nddata_base": {
  "data": {},
  "type": "module"
 },
 "astropy.nddata.tests.test_nddata_base.MinimalSubclass": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "astropy.nddata.tests.test_nddata_base.MinimalSubclass.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_nddata_base.MinimalSubclass",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata_base.MinimalSubclass.data": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata_base.MinimalSubclass.mask": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_nddata_base.MinimalSubclass",
    "property",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata_base.MinimalSubclass.meta": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_nddata_base.MinimalSubclass",
    "property",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata_base.MinimalSubclass.uncertainty": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_nddata_base.MinimalSubclass",
    "property",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata_base.MinimalSubclass.unit": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_nddata_base.MinimalSubclass",
    "property",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata_base.MinimalSubclass.wcs": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_nddata_base.MinimalSubclass",
    "property",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata_base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_nddata_base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_nddata_base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_nddata_base.test_nddata_base_subclass": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_nddata_base.MinimalSubclass"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nddata_base.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_nduncertainty": {
  "data": {},
  "type": "module"
 },
 "astropy.nddata.tests.test_nduncertainty.FakeUncertainty": {
  "data": {
   "lineno": 40
  },
  "type": "class"
 },
 "astropy.nddata.tests.test_nduncertainty.FakeUncertainty._propagate_add": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nduncertainty.FakeUncertainty._propagate_divide": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nduncertainty.FakeUncertainty._propagate_multiply": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nduncertainty.FakeUncertainty._propagate_subtract": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nduncertainty.FakeUncertainty.uncertainty_type": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nduncertainty.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_nduncertainty.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_nduncertainty.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_nduncertainty.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_nduncertainty.get_objects": {
  "data": {
   "shadows": "gc.get_objects"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_nduncertainty.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_nduncertainty.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_nduncertainty.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_nduncertainty.test_for_leak_with_uncertainty": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "NDData",
    "NDDataArray",
    "test_leak"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nduncertainty.test_for_leak_with_uncertainty.leaker_nddata": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "NDData",
    "StdDevUncertainty",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nduncertainty.test_for_leak_with_uncertainty.leaker_nddataarray": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "NDDataArray",
    "StdDevUncertainty",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nduncertainty.test_for_leak_with_uncertainty.non_leaker_nddata": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "NDData",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nduncertainty.test_for_leak_with_uncertainty.non_leaker_nddataarray": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "NDDataArray",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nduncertainty.test_for_leak_with_uncertainty.test_leak": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "all",
    "collections.defaultdict",
    "func",
    "gc.get_objects",
    "int",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nduncertainty.test_for_stolen_uncertainty": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "NDData"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nduncertainty.test_init_fake_with_StdDevUncertainty": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "StdDevUncertainty",
    "astropy.nddata.tests.test_nduncertainty.FakeUncertainty",
    "astropy.nddata.tests.test_nduncertainty.pytest",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nduncertainty.test_init_fake_with_fake": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "UncertClass",
    "astropy.nddata.tests.test_nduncertainty.FakeUncertainty",
    "astropy.nddata.tests.test_nduncertainty.pytest",
    "numpy.arange",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nduncertainty.test_init_fake_with_list": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "UncertClass",
    "astropy.nddata.tests.test_nduncertainty.FakeUncertainty",
    "astropy.nddata.tests.test_nduncertainty.pytest",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nduncertainty.test_init_fake_with_ndarray": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "UncertClass",
    "astropy.nddata.tests.test_nduncertainty.FakeUncertainty",
    "astropy.nddata.tests.test_nduncertainty.pytest",
    "numpy.arange",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nduncertainty.test_init_fake_with_quantity": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "UncertClass",
    "astropy.nddata.tests.test_nduncertainty.FakeUncertainty",
    "astropy.nddata.tests.test_nduncertainty.pytest",
    "numpy.arange",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nduncertainty.test_init_fake_with_somethingElse": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "UncertClass",
    "astropy.nddata.tests.test_nduncertainty.FakeUncertainty",
    "astropy.nddata.tests.test_nduncertainty.pytest",
    "id"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nduncertainty.test_uncertainty_correlated": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "StdDevUncertainty",
    "astropy.nddata.tests.test_nduncertainty.FakeUncertainty"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nduncertainty.test_uncertainty_type": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "StdDevUncertainty",
    "astropy.nddata.tests.test_nduncertainty.FakeUncertainty"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_nduncertainty.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_nduncertainty.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_utils": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "slice"
   ]
  },
  "type": "module"
 },
 "astropy.nddata.tests.test_utils.HAS_SKIMAGE": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.nddata.tests.test_utils.TestBlockReduce": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_utils.pytest",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.nddata.tests.test_utils.TestBlockReduce.test_1d": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "block_reduce",
    "numpy.all",
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.TestBlockReduce.test_1d_mean": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "block_reduce",
    "numpy.all",
    "numpy.arange",
    "numpy.mean",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.TestBlockReduce.test_2d": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "block_reduce",
    "numpy.all",
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.TestBlockReduce.test_2d_mean": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "block_reduce",
    "numpy.all",
    "numpy.arange",
    "numpy.mean",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.TestBlockReduce.test_2d_trim": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "block_reduce",
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.TestBlockReduce.test_block_size_broadcasting": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "block_reduce",
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.TestBlockReduce.test_block_size_len": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "ValueError",
    "astropy.nddata.tests.test_utils.pytest",
    "block_reduce",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.TestBlockReplicate": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_utils.pytest",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.nddata.tests.test_utils.TestBlockReplicate.test_1d": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "block_replicate",
    "numpy.all",
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.TestBlockReplicate.test_1d_conserve_sum": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "block_replicate",
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.TestBlockReplicate.test_2d": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "block_replicate",
    "numpy.all",
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.TestBlockReplicate.test_2d_conserve_sum": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "block_replicate",
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.TestBlockReplicate.test_block_size_broadcasting": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "block_replicate",
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.TestBlockReplicate.test_block_size_len": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "ValueError",
    "astropy.nddata.tests.test_utils.pytest",
    "block_replicate",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.TestCutout2D": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.nddata.tests.test_utils.TestCutout2D.setup_class": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "SkyCoord",
    "WCS",
    "numpy.arange",
    "numpy.cos",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.TestCutout2D.test_copy": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "Cutout2D",
    "numpy.copy"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.TestCutout2D.test_cutout": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "Cutout2D",
    "numpy.testing.assert_allclose",
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.TestCutout2D.test_cutout_partial_overlap": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "Cutout2D",
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.TestCutout2D.test_cutout_partial_overlap_fill_value": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "Cutout2D"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.TestCutout2D.test_cutout_trim_overlap": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "Cutout2D",
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.TestCutout2D.test_size_angle": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "Cutout2D",
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.TestCutout2D.test_size_angle_without_wcs": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "Cutout2D",
    "ValueError",
    "astropy.nddata.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.TestCutout2D.test_size_length": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "Cutout2D",
    "ValueError",
    "astropy.nddata.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.TestCutout2D.test_size_pixel": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "Cutout2D",
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.TestCutout2D.test_size_units": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "Cutout2D",
    "ValueError",
    "astropy.nddata.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.TestCutout2D.test_skycoord": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "Cutout2D",
    "assert_quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.TestCutout2D.test_skycoord_partial": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "Cutout2D",
    "assert_quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.TestCutout2D.test_skycoord_without_wcs": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "Cutout2D",
    "ValueError",
    "astropy.nddata.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.TestCutout2D.test_to_from_large": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "Cutout2D",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_utils.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_utils.skimage": {
  "data": {
   "shadows": "skimage"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_utils.subsampling": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "astropy.nddata.tests.test_utils.test_add_array_even_shape": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "add_array",
    "numpy.all",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.test_add_array_odd_shape": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "add_array",
    "numpy.all",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.test_extract_Array_float": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "extract_array",
    "numpy.all",
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.test_extract_array_1d": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "extract_array",
    "numpy.all",
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.test_extract_array_1d_even": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "extract_array",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.test_extract_array_1d_odd": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "extract_array",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.test_extract_array_1d_trim": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "extract_array",
    "numpy.all",
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.test_extract_array_easy": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_utils.pytest",
    "extract_array",
    "numpy.all",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.test_extract_array_return_pos": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "extract_array",
    "numpy.arange",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.test_extract_array_wrong_mode": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ValueError",
    "astropy.nddata.tests.test_utils.pytest",
    "extract_array",
    "numpy.arange",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.test_pos_bad": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "astropy.nddata.tests.test_utils.test_position_indices": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "astropy.nddata.tests.test_utils.test_positions": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "astropy.nddata.tests.test_utils.test_slices": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "astropy.nddata.tests.test_utils.test_slices_different_dim": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "astropy.nddata.tests.test_utils.pytest",
    "overlap_slices",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.test_slices_no_overlap": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_utils.pytest",
    "astropy.nddata.tests.test_utils.test_pos_bad",
    "overlap_slices"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.test_slices_overlap_wrong_mode": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "astropy.nddata.tests.test_utils.pytest",
    "overlap_slices",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.test_slices_partial_overlap": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_utils.pytest",
    "overlap_slices",
    "slice",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.test_slices_pos_different_dim": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "astropy.nddata.tests.test_utils.pytest",
    "overlap_slices",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.test_subpixel_indices": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "astropy.nddata.tests.test_utils.pytest",
    "astropy.nddata.tests.test_utils.subsampling",
    "astropy.nddata.tests.test_utils.test_position_indices",
    "astropy.nddata.tests.test_utils.test_positions",
    "numpy.all",
    "subpixel_indices",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.tests.test_utils.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.nddata.tests.test_utils.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.nddata.utils": {
  "data": {},
  "type": "module"
 },
 "astropy.nddata.utils.Cutout2D": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.nddata.utils.Cutout2D.__init__": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "ValueError",
    "astropy.nddata.utils.extract_array",
    "astropy.nddata.utils.overlap_slices",
    "copy.deepcopy",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "numpy.asanyarray",
    "numpy.atleast_1d",
    "numpy.copy",
    "numpy.int",
    "numpy.isscalar",
    "numpy.nan",
    "numpy.repeat",
    "numpy.round",
    "numpy.zeros",
    "proj_plane_pixel_scales",
    "skycoord_to_pixel",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.utils.Cutout2D._calc_bbox": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.utils.Cutout2D._calc_center": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "staticmethod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.utils.Cutout2D.bbox_cutout": {
  "data": {
   "lineno": 907
  },
  "type": "function"
 },
 "astropy.nddata.utils.Cutout2D.bbox_original": {
  "data": {
   "lineno": 897
  },
  "type": "function"
 },
 "astropy.nddata.utils.Cutout2D.center_cutout": {
  "data": {
   "lineno": 888
  },
  "type": "function"
 },
 "astropy.nddata.utils.Cutout2D.center_original": {
  "data": {
   "lineno": 879
  },
  "type": "function"
 },
 "astropy.nddata.utils.Cutout2D.origin_cutout": {
  "data": {
   "lineno": 852
  },
  "type": "function"
 },
 "astropy.nddata.utils.Cutout2D.origin_original": {
  "data": {
   "lineno": 842
  },
  "type": "function"
 },
 "astropy.nddata.utils.Cutout2D.plot_on_original": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "matplotlib.patches.Rectangle",
    "matplotlib.pyplot.gca",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.utils.Cutout2D.position_cutout": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "astropy.nddata.utils._round"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.utils.Cutout2D.position_original": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "astropy.nddata.utils._round"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.utils.Cutout2D.to_cutout_position": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.utils.Cutout2D.to_original_position": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.utils.NoOverlapError": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "astropy.nddata.utils.PartialOverlapError": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "astropy.nddata.utils.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.nddata.utils._offset": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.mod"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.utils._round": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "int",
    "numpy.floor"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.nddata.utils.add_array": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "astropy.nddata.utils.overlap_slices",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.utils.block_reduce": {
  "data": {
   "shadows": "skimage.measure.block_reduce",
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "numpy.array",
    "numpy.asanyarray",
    "numpy.atleast_1d",
    "numpy.repeat",
    "range",
    "skimage.measure.block_reduce",
    "tuple"
   ]
  },
  "type": "import"
 },
 "astropy.nddata.utils.block_replicate": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len",
    "numpy.asanyarray",
    "numpy.atleast_1d",
    "numpy.prod",
    "numpy.repeat",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.utils.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "astropy.nddata.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.nddata.utils.extract_array": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "ValueError",
    "astropy.nddata.utils.overlap_slices",
    "numpy.isscalar",
    "numpy.nan",
    "numpy.zeros",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.utils.mpatches": {
  "data": {
   "shadows": "matplotlib.patches"
  },
  "type": "import"
 },
 "astropy.nddata.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.nddata.utils.overlap_slices": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "astropy.nddata.utils.NoOverlapError",
    "astropy.nddata.utils.PartialOverlapError",
    "astropy.nddata.utils._offset",
    "astropy.nddata.utils._round",
    "len",
    "max",
    "min",
    "numpy.isscalar",
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.utils.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "astropy.nddata.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.nddata.utils.subpixel_indices": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "numpy.asanyarray",
    "numpy.floor",
    "numpy.modf"
   ]
  },
  "type": "function"
 },
 "astropy.nddata.utils.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.nddata.utils.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.online_docs_root": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "astropy.online_help": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "astropy.webbrowser",
    "urlencode"
   ]
  },
  "type": "function"
 },
 "astropy.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.samp": {
  "data": {
   "symbols_in_volume": [
    "astropy.samp.Conf"
   ]
  },
  "type": "module"
 },
 "astropy.samp.Conf": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "astropy.samp._config": {
  "data": {
   "shadows": "config"
  },
  "type": "import"
 },
 "astropy.samp.client": {
  "data": {},
  "type": "module"
 },
 "astropy.samp.client.SAMPClient": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.samp.client.SAMPClient.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ThreadingXMLRPCServer",
    "astropy.samp.client.socket",
    "astropy.samp.client.threading",
    "callable",
    "internet_on",
    "urlunparse"
   ]
  },
  "type": "function"
 },
 "astropy.samp.client.SAMPClient._client_env_get": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "astropy.samp.client.os"
   ]
  },
  "type": "function"
 },
 "astropy.samp.client.SAMPClient._declare_subscriptions": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "SAMPClientError",
    "astropy.samp.client.copy"
   ]
  },
  "type": "function"
 },
 "astropy.samp.client.SAMPClient._handle_call": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "astropy.samp.client.SAMPClient._handle_notification": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "bound_func",
    "get_num_args"
   ]
  },
  "type": "function"
 },
 "astropy.samp.client.SAMPClient._handle_response": {
  "data": {
   "lineno": 323
  },
  "type": "function"
 },
 "astropy.samp.client.SAMPClient._ping": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "astropy.samp.client.SAMPClient._run_client": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "astropy.samp.client.SAMPClient._serve_forever": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "astropy.samp.client.select",
    "astropy.samp.client.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.samp.client.SAMPClient._set_xmlrpc_callback": {
  "data": {
   "lineno": 652
  },
  "type": "function"
 },
 "astropy.samp.client.SAMPClient.bind_receive_call": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "SAMPClientError"
   ]
  },
  "type": "function"
 },
 "astropy.samp.client.SAMPClient.bind_receive_message": {
  "data": {
   "lineno": 366
  },
  "type": "function"
 },
 "astropy.samp.client.SAMPClient.bind_receive_notification": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "SAMPClientError"
   ]
  },
  "type": "function"
 },
 "astropy.samp.client.SAMPClient.bind_receive_response": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "SAMPClientError"
   ]
  },
  "type": "function"
 },
 "astropy.samp.client.SAMPClient.declare_metadata": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "SAMPClientError"
   ]
  },
  "type": "function"
 },
 "astropy.samp.client.SAMPClient.declare_subscriptions": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "SAMPClientError"
   ]
  },
  "type": "function"
 },
 "astropy.samp.client.SAMPClient.get_private_key": {
  "data": {
   "lineno": 700
  },
  "type": "function"
 },
 "astropy.samp.client.SAMPClient.get_public_id": {
  "data": {
   "lineno": 712
  },
  "type": "function"
 },
 "astropy.samp.client.SAMPClient.is_registered": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.samp.client.SAMPClient.is_running": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.samp.client.SAMPClient.receive_call": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "astropy.samp.client.SAMPClient.receive_notification": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "astropy.samp.client.SAMPClient.receive_response": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "astropy.samp.client.SAMPClient.register": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "SAMPClientError"
   ]
  },
  "type": "function"
 },
 "astropy.samp.client.SAMPClient.start": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "astropy.samp.client.SAMPClient.stop": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "SAMPClientError"
   ]
  },
  "type": "function"
 },
 "astropy.samp.client.SAMPClient.unbind_receive_call": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "SAMPClientError"
   ]
  },
  "type": "function"
 },
 "astropy.samp.client.SAMPClient.unbind_receive_notification": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "SAMPClientError"
   ]
  },
  "type": "function"
 },
 "astropy.samp.client.SAMPClient.unbind_receive_response": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "SAMPClientError"
   ]
  },
  "type": "function"
 },
 "astropy.samp.client.SAMPClient.unregister": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "SAMPClientError"
   ]
  },
  "type": "function"
 },
 "astropy.samp.client.__all__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "astropy.samp.client.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.samp.client.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "astropy.samp.client.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.samp.client.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.samp.client.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.samp.client.select": {
  "data": {
   "shadows": "select"
  },
  "type": "import"
 },
 "astropy.samp.client.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "astropy.samp.client.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "astropy.samp.client.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.samp.client.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.samp.conf": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "astropy.samp.constants": {
  "data": {
   "symbols_in_volume": [
    "get_pkg_data_filename",
    "open"
   ]
  },
  "type": "module"
 },
 "astropy.samp.constants.SAFE_MTYPES": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.samp.constants.SAMP_ICON": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "astropy.samp.constants.SAMP_STATUS_ERROR": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.samp.constants.SAMP_STATUS_OK": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "astropy.samp.constants.SAMP_STATUS_WARNING": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.samp.constants.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "astropy.samp.constants.__profile_version__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "astropy.samp.constants.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.samp.constants.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.samp.constants.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.samp.constants.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.samp.errors": {
  "data": {},
  "type": "module"
 },
 "astropy.samp.errors.SAMPClientError": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "astropy.samp.errors.SAMPHubError": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "astropy.samp.errors.SAMPProxyError": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "astropy.samp.errors.SAMPWarning": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "astropy.samp.errors.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "astropy.samp.errors.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.samp.errors.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.samp.errors.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.samp.errors.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.samp.errors.xmlrpc": {
  "data": {
   "shadows": "xmlrpc_client"
  },
  "type": "import"
 },
 "astropy.samp.hub": {
  "data": {},
  "type": "module"
 },
 "astropy.samp.hub.SAMPHubServer": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.samp.hub.SAMPHubServer.__init__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "astropy.samp.hub.socket",
    "astropy.samp.hub.threading",
    "astropy.samp.hub.uuid",
    "internet_on",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._call": {
  "data": {
   "lineno": 1030,
   "symbols_in_volume": [
    "SAMPProxyError"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._call_": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": [
    "Exception",
    "astropy.samp.hub.warnings",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._call_all": {
  "data": {
   "lineno": 1074,
   "symbols_in_volume": [
    "SAMPProxyError"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._call_all_": {
  "data": {
   "lineno": 1089,
   "symbols_in_volume": [
    "astropy.samp.hub.SAMPHubServer"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._call_and_wait": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "SAMPProxyError",
    "astropy.samp.hub.copy",
    "astropy.samp.hub.time",
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._create_secret_code": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "astropy.samp.hub.uuid",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._declare_metadata": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "SAMPProxyError",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._declare_subscriptions": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "SAMPProxyError",
    "ValueError",
    "astropy.samp.hub.copy",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._get_metadata": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "SAMPProxyError"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._get_new_hub_msg_id": {
  "data": {
   "lineno": 1248
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._get_new_ids": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "astropy.samp.hub.uuid",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._get_registered_clients": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "SAMPProxyError"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._get_subscribed_clients": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "SAMPProxyError"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._get_subscriptions": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "SAMPProxyError",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._hub_as_client_request_handler": {
  "data": {
   "lineno": 341
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._is_subscribed": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "astropy.samp.hub.SAMPHubServer"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._join_all_threads": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "astropy.samp.hub.threading"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._join_launched_threads": {
  "data": {
   "lineno": 298
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._launch_thread": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "astropy.samp.hub.threading"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._notify": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "SAMPProxyError"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._notify_": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "Exception",
    "astropy.samp.hub.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._notify_all": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": [
    "SAMPProxyError"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._notify_all_": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "astropy.samp.hub.SAMPHubServer"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._notify_disconnection": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "astropy.samp.hub.SAMPHubServer"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._notify_disconnection._xmlrpc_call_disconnect": {
  "data": {
   "lineno": 635
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._notify_metadata": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "astropy.samp.hub.SAMPHubServer"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._notify_register": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "astropy.samp.hub.SAMPHubServer"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._notify_shutdown": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "astropy.samp.hub.SAMPHubServer"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._notify_subscriptions": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "astropy.samp.hub.SAMPHubServer"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._notify_unregister": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "astropy.samp.hub.SAMPHubServer"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._perform_standard_register": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "astropy.samp.hub.time"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._ping": {
  "data": {
   "lineno": 651
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._public_id_to_private_key": {
  "data": {
   "lineno": 1241
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._query_by_metadata": {
  "data": {
   "lineno": 656
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._receive_call": {
  "data": {
   "lineno": 1264
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._receive_notification": {
  "data": {
   "lineno": 1261
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._receive_response": {
  "data": {
   "lineno": 1285
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._register": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "SAMPProxyError"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._register_standard_api": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._register_web_profile_api": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._reply": {
  "data": {
   "lineno": 1139,
   "symbols_in_volume": [
    "SAMPProxyError"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._reply_": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": [
    "Exception",
    "astropy.samp.hub.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._retry_method": {
  "data": {
   "lineno": 1186,
   "symbols_in_volume": [
    "SAMPHubError",
    "astropy.samp.hub.time",
    "getattr",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._serve_forever": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "astropy.samp.hub.select",
    "astropy.samp.hub.warnings",
    "web_profile_text_dialog"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._set_xmlrpc_callback": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "SAMPProxyError",
    "ServerProxyPool",
    "_HubAsClient"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._setup_hub_as_client": {
  "data": {
   "lineno": 351
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._start_standard_server": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "ThreadingXMLRPCServer",
    "urlunparse"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._start_threads": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "astropy.samp.hub.threading"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._start_web_profile_server": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "WebProfileXMLRPCServer",
    "astropy.samp.hub.socket"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._timeout_test_client": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "astropy.samp.hub.time",
    "astropy.samp.hub.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._timeout_test_hub": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "astropy.samp.hub.time",
    "astropy.samp.hub.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._unregister": {
  "data": {
   "lineno": 724
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._update_last_activity_time": {
  "data": {
   "lineno": 1255,
   "symbols_in_volume": [
    "astropy.samp.hub.time"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._web_profile_allowReverseCallbacks": {
  "data": {
   "lineno": 1329,
   "symbols_in_volume": [
    "SAMPProxyError"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._web_profile_pullCallbacks": {
  "data": {
   "lineno": 1342,
   "symbols_in_volume": [
    "SAMPProxyError"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer._web_profile_register": {
  "data": {
   "lineno": 1288,
   "symbols_in_volume": [
    "SAMPProxyError",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer.get_mtype_subtypes": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "len",
    "list",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer.id": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer.is_running": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer.params": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer.start": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "SAMPHubError",
    "create_lock_file"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.SAMPHubServer.stop": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "astropy.samp.hub.os",
    "read_lockfile"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.WebProfileDialog": {
  "data": {
   "lineno": 1359,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.samp.hub.WebProfileDialog.consent": {
  "data": {
   "lineno": 1401
  },
  "type": "function"
 },
 "astropy.samp.hub.WebProfileDialog.handle_queue": {
  "data": {
   "lineno": 1386,
   "symbols_in_volume": [
    "AttributeError",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub.WebProfileDialog.reject": {
  "data": {
   "lineno": 1404
  },
  "type": "function"
 },
 "astropy.samp.hub.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "astropy.samp.hub.__doctest_skip__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "astropy.samp.hub.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.samp.hub.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "astropy.samp.hub.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.samp.hub.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.samp.hub.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.samp.hub.select": {
  "data": {
   "shadows": "select"
  },
  "type": "import"
 },
 "astropy.samp.hub.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "astropy.samp.hub.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "astropy.samp.hub.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "astropy.samp.hub.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.samp.hub.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "astropy.samp.hub.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.samp.hub.xmlrpc": {
  "data": {
   "shadows": "xmlrpc_client"
  },
  "type": "import"
 },
 "astropy.samp.hub_proxy": {
  "data": {},
  "type": "module"
 },
 "astropy.samp.hub_proxy.SAMPHubProxy": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.samp.hub_proxy.SAMPHubProxy.__init__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "astropy.samp.hub_proxy.SAMPHubProxy._samp_hub": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub_proxy.SAMPHubProxy.call": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "astropy.samp.hub_proxy.SAMPHubProxy.call_all": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "astropy.samp.hub_proxy.SAMPHubProxy.call_and_wait": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "astropy.samp.hub_proxy.SAMPHubProxy.connect": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "SAMPHubError",
    "ServerProxyPool",
    "ValueError",
    "astropy.samp.hub_proxy.copy",
    "get_main_running_hub"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub_proxy.SAMPHubProxy.declare_metadata": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "astropy.samp.hub_proxy.SAMPHubProxy.declare_subscriptions": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "astropy.samp.hub_proxy.SAMPHubProxy.disconnect": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "astropy.samp.hub_proxy.SAMPHubProxy.get_metadata": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "astropy.samp.hub_proxy.SAMPHubProxy.get_registered_clients": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "astropy.samp.hub_proxy.SAMPHubProxy.get_subscribed_clients": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "astropy.samp.hub_proxy.SAMPHubProxy.get_subscriptions": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "astropy.samp.hub_proxy.SAMPHubProxy.is_connected": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub_proxy.SAMPHubProxy.notify": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "astropy.samp.hub_proxy.SAMPHubProxy.notify_all": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "astropy.samp.hub_proxy.SAMPHubProxy.ping": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "astropy.samp.hub_proxy.SAMPHubProxy.register": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "astropy.samp.hub_proxy.SAMPHubProxy.reply": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "astropy.samp.hub_proxy.SAMPHubProxy.server_close": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "astropy.samp.hub_proxy.SAMPHubProxy.set_xmlrpc_callback": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "astropy.samp.hub_proxy.SAMPHubProxy.unregister": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "astropy.samp.hub_proxy.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "astropy.samp.hub_proxy.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.samp.hub_proxy.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "astropy.samp.hub_proxy.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.samp.hub_proxy.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.samp.hub_proxy.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.samp.hub_proxy.xmlrpc": {
  "data": {
   "shadows": "xmlrpc_client"
  },
  "type": "import"
 },
 "astropy.samp.hub_script": {
  "data": {},
  "type": "module"
 },
 "astropy.samp.hub_script.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "astropy.samp.hub_script.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.samp.hub_script.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "astropy.samp.hub_script.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "astropy.samp.hub_script.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.samp.hub_script.hub_script": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "IOError",
    "KeyboardInterrupt",
    "NameError",
    "SAMPHubServer",
    "SystemExit",
    "astropy.samp.hub_script.argparse",
    "astropy.samp.hub_script.copy",
    "astropy.samp.hub_script.sys",
    "astropy.samp.hub_script.time",
    "dummy_context",
    "int",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.samp.hub_script.hub_script.dummy_context": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.samp.hub_script.hub_script.dummy_context.__enter__": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "astropy.samp.hub_script.hub_script.dummy_context.__exit__": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "astropy.samp.hub_script.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.samp.hub_script.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.samp.hub_script.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "astropy.samp.hub_script.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.samp.integrated_client": {
  "data": {},
  "type": "module"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "SAMPClient.bind_receive_call.__doc__",
    "SAMPClient.bind_receive_message.__doc__",
    "SAMPClient.bind_receive_notification.__doc__",
    "SAMPClient.bind_receive_response.__doc__",
    "SAMPClient.declare_subscriptions.__doc__",
    "SAMPClient.get_private_key.__doc__",
    "SAMPClient.get_public_id.__doc__",
    "SAMPClient.receive_call.__doc__",
    "SAMPClient.receive_notification.__doc__",
    "SAMPClient.receive_response.__doc__",
    "SAMPClient.unbind_receive_call.__doc__",
    "SAMPClient.unbind_receive_notification.__doc__",
    "SAMPClient.unbind_receive_response.__doc__",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "SAMPHubProxy",
    "callable"
   ]
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient._format_easy_msg": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient._format_easy_response": {
  "data": {
   "lineno": 394
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.bind_receive_call": {
  "data": {
   "lineno": 462
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.bind_receive_message": {
  "data": {
   "lineno": 452
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.bind_receive_notification": {
  "data": {
   "lineno": 457
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.bind_receive_response": {
  "data": {
   "lineno": 467
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.call": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.call_all": {
  "data": {
   "lineno": 305
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.call_and_wait": {
  "data": {
   "lineno": 345
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.connect": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "SAMPClient"
   ]
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.declare_metadata": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.declare_subscriptions": {
  "data": {
   "lineno": 487
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.disconnect": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.ecall": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.ecall_all": {
  "data": {
   "lineno": 311
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.ecall_and_wait": {
  "data": {
   "lineno": 351
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.enotify": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.enotify_all": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.ereply": {
  "data": {
   "lineno": 404
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.get_metadata": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.get_private_key": {
  "data": {
   "lineno": 492
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.get_public_id": {
  "data": {
   "lineno": 497
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.get_registered_clients": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.get_subscribed_clients": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.get_subscriptions": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.is_connected": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.notify": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.notify_all": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.ping": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.receive_call": {
  "data": {
   "lineno": 442
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.receive_notification": {
  "data": {
   "lineno": 437
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.receive_response": {
  "data": {
   "lineno": 447
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.reply": {
  "data": {
   "lineno": 388
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.unbind_receive_call": {
  "data": {
   "lineno": 477
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.unbind_receive_notification": {
  "data": {
   "lineno": 472
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.SAMPIntegratedClient.unbind_receive_response": {
  "data": {
   "lineno": 482
  },
  "type": "function"
 },
 "astropy.samp.integrated_client.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "astropy.samp.integrated_client.__doctest_skip__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "astropy.samp.integrated_client.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.samp.integrated_client.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.samp.integrated_client.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.samp.integrated_client.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.samp.setup_package": {
  "data": {},
  "type": "module"
 },
 "astropy.samp.setup_package.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.samp.setup_package.get_package_data": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "astropy.samp.setup_package.os"
   ]
  },
  "type": "function"
 },
 "astropy.samp.setup_package.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.samp.setup_package.requires_2to3": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "astropy.samp.standard_profile": {
  "data": {},
  "type": "module"
 },
 "astropy.samp.standard_profile.SAMPSimpleXMLRPCRequestHandler": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "xmlrpc.server.SimpleXMLRPCRequestHandler"
   ]
  },
  "type": "class"
 },
 "astropy.samp.standard_profile.SAMPSimpleXMLRPCRequestHandler.do_GET": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "astropy.samp.standard_profile.SAMPSimpleXMLRPCRequestHandler.do_POST": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "Exception",
    "NotImplementedError",
    "astropy.samp.standard_profile.traceback",
    "getattr",
    "hasattr",
    "int",
    "len",
    "list",
    "min",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.samp.standard_profile.SimpleXMLRPCRequestHandler": {
  "data": {
   "shadows": "xmlrpc.server.SimpleXMLRPCRequestHandler"
  },
  "type": "import"
 },
 "astropy.samp.standard_profile.SimpleXMLRPCServer": {
  "data": {
   "shadows": "xmlrpc.server.SimpleXMLRPCServer"
  },
  "type": "import"
 },
 "astropy.samp.standard_profile.ThreadingXMLRPCServer": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "xmlrpc.server.SimpleXMLRPCServer"
   ]
  },
  "type": "class"
 },
 "astropy.samp.standard_profile.ThreadingXMLRPCServer.__init__": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "astropy.samp.standard_profile.SAMPSimpleXMLRPCRequestHandler",
    "xmlrpc.server.SimpleXMLRPCServer.__init__"
   ]
  },
  "type": "function"
 },
 "astropy.samp.standard_profile.ThreadingXMLRPCServer.handle_error": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "astropy.samp.standard_profile.sys",
    "astropy.samp.standard_profile.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.samp.standard_profile.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.samp.standard_profile.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.samp.standard_profile.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.samp.standard_profile.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.samp.standard_profile.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.samp.standard_profile.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "astropy.samp.standard_profile.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.samp.standard_profile.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.samp.standard_profile.xmlrpc": {
  "data": {
   "shadows": "xmlrpc_client"
  },
  "type": "import"
 },
 "astropy.samp.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.samp.tests.test_client": {
  "data": {},
  "type": "module"
 },
 "astropy.samp.tests.test_client.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.samp.tests.test_client.samp_hub": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "SAMPHubServer",
    "astropy.samp.tests.test_client.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.test_client.setup_module": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "astropy.samp.tests.test_client.test_SAMPClient": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "SAMPClient",
    "SAMPHubProxy"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.test_client.test_SAMPHubProxy": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "SAMPHubProxy"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.test_client.test_SAMPIntegratedClient": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "SAMPIntegratedClient"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.test_client.test_reconnect": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "SAMPIntegratedClient"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.test_errors": {
  "data": {},
  "type": "module"
 },
 "astropy.samp.tests.test_errors.setup_module": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "astropy.samp.tests.test_errors.test_SAMPClientError": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "SAMPClientError"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.test_errors.test_SAMPHubError": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "SAMPHubError"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.test_errors.test_SAMPProxyError": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "SAMPProxyError"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.test_helpers": {
  "data": {},
  "type": "module"
 },
 "astropy.samp.tests.test_helpers.Receiver": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.samp.tests.test_helpers.Receiver.__init__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "astropy.samp.tests.test_helpers.Receiver.receive_call": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "astropy.samp.tests.test_helpers.TEST_REPLY"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.test_helpers.Receiver.receive_notification": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "astropy.samp.tests.test_helpers.write_output"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.test_helpers.Receiver.receive_response": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "astropy.samp.tests.test_helpers.TEST_REPLY": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "astropy.samp.tests.test_helpers.assert_output": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "EOFError",
    "Exception",
    "IOError",
    "astropy.samp.tests.test_helpers.pickle",
    "astropy.samp.tests.test_helpers.time",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.test_helpers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.samp.tests.test_helpers.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "astropy.samp.tests.test_helpers.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "astropy.samp.tests.test_helpers.random_id": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "astropy.samp.tests.test_helpers.random",
    "astropy.samp.tests.test_helpers.string"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.test_helpers.random_params": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "astropy.samp.tests.test_helpers.os",
    "astropy.samp.tests.test_helpers.random_id"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.test_helpers.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "astropy.samp.tests.test_helpers.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "astropy.samp.tests.test_helpers.write_output": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "astropy.samp.tests.test_helpers.pickle",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.test_hub": {
  "data": {},
  "type": "module"
 },
 "astropy.samp.tests.test_hub.setup_module": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "astropy.samp.tests.test_hub.test_SAMPHubServer": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "SAMPHubServer"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.test_hub.test_SAMPHubServer_run": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "SAMPHubServer",
    "astropy.samp.tests.test_hub.time"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.test_hub.test_SAMPHubServer_run_repeated": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "SAMPHubServer",
    "astropy.samp.tests.test_hub.time"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.test_hub.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "astropy.samp.tests.test_hub_proxy": {
  "data": {},
  "type": "module"
 },
 "astropy.samp.tests.test_hub_proxy.TestHubProxy": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.samp.tests.test_hub_proxy.TestHubProxy.setup_method": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "SAMPHubProxy",
    "SAMPHubServer"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.test_hub_proxy.TestHubProxy.teardown_method": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "astropy.samp.tests.test_hub_proxy.TestHubProxy.test_disconnect": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "astropy.samp.tests.test_hub_proxy.TestHubProxy.test_is_connected": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "astropy.samp.tests.test_hub_proxy.TestHubProxy.test_ping": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "astropy.samp.tests.test_hub_proxy.TestHubProxy.test_registration": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "astropy.samp.tests.test_hub_proxy.setup_module": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "astropy.samp.tests.test_hub_proxy.test_custom_lockfile": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "SAMPHubProxy",
    "SAMPHubServer"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.test_hub_script": {
  "data": {},
  "type": "module"
 },
 "astropy.samp.tests.test_hub_script.setup_function": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "astropy.samp.tests.test_hub_script.sys"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.test_hub_script.setup_module": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "astropy.samp.tests.test_hub_script.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.samp.tests.test_hub_script.teardown_function": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "astropy.samp.tests.test_hub_script.sys"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.test_hub_script.test_hub_script": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "astropy.samp.tests.test_hub_script.sys",
    "hub_script"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.test_standard_profile": {
  "data": {},
  "type": "module"
 },
 "astropy.samp.tests.test_standard_profile.TestStandardProfile": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.samp.tests.test_standard_profile.TestStandardProfile.client_connect_kwargs": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.test_standard_profile.TestStandardProfile.client_init_kwargs": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.test_standard_profile.TestStandardProfile.hub_init_kwargs": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.test_standard_profile.TestStandardProfile.setup_method": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "SAMPHubServer",
    "SAMPIntegratedClient",
    "astropy.samp.tests.test_standard_profile.tempfile"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.test_standard_profile.TestStandardProfile.teardown_method": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "astropy.samp.tests.test_standard_profile.TestStandardProfile.test_main": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "Receiver",
    "assert_output",
    "astropy.samp.tests.test_standard_profile.pytest",
    "random_params"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.test_standard_profile.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.samp.tests.test_standard_profile.setup_module": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "astropy.samp.tests.test_standard_profile.ssl": {
  "data": {
   "shadows": "ssl"
  },
  "type": "import"
 },
 "astropy.samp.tests.test_standard_profile.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "astropy.samp.tests.test_web_profile": {
  "data": {},
  "type": "module"
 },
 "astropy.samp.tests.test_web_profile.BaseTestStandardProfile": {
  "data": {
   "shadows": "TestStandardProfile"
  },
  "type": "import"
 },
 "astropy.samp.tests.test_web_profile.TestWebProfile": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "astropy.samp.tests.test_web_profile.TestWebProfile.setup_method": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "AlwaysApproveWebProfileDialog",
    "SAMPHubServer",
    "SAMPIntegratedClient",
    "SAMPIntegratedWebClient",
    "astropy.samp.tests.test_web_profile.os",
    "astropy.samp.tests.test_web_profile.tempfile",
    "astropy.samp.tests.test_web_profile.threading"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.test_web_profile.TestWebProfile.teardown_method": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "astropy.samp.tests.test_web_profile.TestWebProfile.test_web_profile": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "Request",
    "get_readable_fileobj",
    "urlopen"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.test_web_profile.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.samp.tests.test_web_profile.setup_module": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "astropy.samp.tests.test_web_profile.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "astropy.samp.tests.test_web_profile.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "astropy.samp.tests.web_profile_test_helpers": {
  "data": {},
  "type": "module"
 },
 "astropy.samp.tests.web_profile_test_helpers.AlwaysApproveWebProfileDialog": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "astropy.samp.tests.web_profile_test_helpers.AlwaysApproveWebProfileDialog.__init__": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "astropy.samp.tests.web_profile_test_helpers.AlwaysApproveWebProfileDialog.poll": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "astropy.samp.tests.web_profile_test_helpers.time"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.web_profile_test_helpers.AlwaysApproveWebProfileDialog.show_dialog": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "astropy.samp.tests.web_profile_test_helpers.AlwaysApproveWebProfileDialog.stop": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "astropy.samp.tests.web_profile_test_helpers.SAMPIntegratedWebClient": {
  "data": {
   "lineno": 215
  },
  "type": "class"
 },
 "astropy.samp.tests.web_profile_test_helpers.SAMPIntegratedWebClient.__init__": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "astropy.samp.tests.web_profile_test_helpers.SAMPWebClient",
    "astropy.samp.tests.web_profile_test_helpers.SAMPWebHubProxy",
    "callable"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.web_profile_test_helpers.SAMPIntegratedWebClient.connect": {
  "data": {
   "lineno": 253
  },
  "type": "function"
 },
 "astropy.samp.tests.web_profile_test_helpers.SAMPWebClient": {
  "data": {
   "lineno": 94
  },
  "type": "class"
 },
 "astropy.samp.tests.web_profile_test_helpers.SAMPWebClient.__init__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "astropy.samp.tests.web_profile_test_helpers.threading",
    "callable"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.web_profile_test_helpers.SAMPWebClient._serve_forever": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "astropy.samp.tests.web_profile_test_helpers.SAMPWebClient.register": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "SAMPClientError"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.web_profile_test_helpers.SAMPWebHubProxy": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "astropy.samp.tests.web_profile_test_helpers.SAMPWebHubProxy._samp_hub": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.web_profile_test_helpers.SAMPWebHubProxy.allow_reverse_callbacks": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "astropy.samp.tests.web_profile_test_helpers.SAMPWebHubProxy.connect": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "SAMPHubError",
    "ServerProxyPool"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.web_profile_test_helpers.SAMPWebHubProxy.pull_callbacks": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "astropy.samp.tests.web_profile_test_helpers.SAMPWebHubProxy.register": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "astropy.samp.tests.web_profile_test_helpers.SAMPWebHubProxy.set_xmlrpc_callback": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.samp.tests.web_profile_test_helpers.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "astropy.samp.tests.web_profile_test_helpers.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "astropy.samp.tests.web_profile_test_helpers.xmlrpc": {
  "data": {
   "shadows": "xmlrpc_client"
  },
  "type": "import"
 },
 "astropy.samp.utils": {
  "data": {},
  "type": "module"
 },
 "astropy.samp.utils.SAMPMsgReplierWrapper": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.samp.utils.SAMPMsgReplierWrapper.__call__": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "astropy.samp.utils.SAMPMsgReplierWrapper.__call__.wrapped_f": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "Exception",
    "StringIO",
    "astropy.samp.utils.get_num_args",
    "astropy.samp.utils.traceback",
    "f"
   ]
  },
  "type": "function"
 },
 "astropy.samp.utils.SAMPMsgReplierWrapper.__init__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "astropy.samp.utils.ServerProxyPool": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.samp.utils.ServerProxyPool.__getattr__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "astropy.samp.utils._ServerProxyPoolMethod"
   ]
  },
  "type": "function"
 },
 "astropy.samp.utils.ServerProxyPool.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "proxy_class",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.samp.utils._HubAsClient": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.samp.utils._HubAsClient.__getattr__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "astropy.samp.utils._HubAsClientMethod"
   ]
  },
  "type": "function"
 },
 "astropy.samp.utils._HubAsClient.__init__": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "astropy.samp.utils._HubAsClientMethod": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.samp.utils._HubAsClientMethod.__call__": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "astropy.samp.utils._HubAsClientMethod.__getattr__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "astropy.samp.utils._HubAsClientMethod"
   ]
  },
  "type": "function"
 },
 "astropy.samp.utils._HubAsClientMethod.__init__": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "astropy.samp.utils._ServerProxyPoolMethod": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.samp.utils._ServerProxyPoolMethod.__call__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "SAMPProxyError",
    "astropy.samp.utils.getattr_recursive",
    "function"
   ]
  },
  "type": "function"
 },
 "astropy.samp.utils._ServerProxyPoolMethod.__getattr__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "astropy.samp.utils._ServerProxyPoolMethod"
   ]
  },
  "type": "function"
 },
 "astropy.samp.utils._ServerProxyPoolMethod.__init__": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "astropy.samp.utils.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "astropy.samp.utils.__doctest_skip__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "astropy.samp.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.samp.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.samp.utils.get_num_args": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "TypeError",
    "astropy.samp.utils.inspect",
    "f",
    "f.__code__.co_argcount",
    "f.__func__.__code__.co_argcount"
   ]
  },
  "type": "function"
 },
 "astropy.samp.utils.getattr_recursive": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.samp.utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "astropy.samp.utils.internet_on": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Exception",
    "urlopen"
   ]
  },
  "type": "function"
 },
 "astropy.samp.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.samp.utils.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "astropy.samp.utils.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.samp.utils.xmlrpc": {
  "data": {
   "shadows": "xmlrpc_client"
  },
  "type": "import"
 },
 "astropy.samp.web_profile": {
  "data": {
   "symbols_in_volume": [
    "get_pkg_data_contents"
   ]
  },
  "type": "module"
 },
 "astropy.samp.web_profile.CLIENT_ACCESS_POLICY": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "astropy.samp.web_profile.CROSS_DOMAIN": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "astropy.samp.web_profile.WebProfileRequestHandler": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "astropy.samp.web_profile.WebProfileRequestHandler._send_CORS_header": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "astropy.samp.web_profile.WebProfileRequestHandler._serve_cross_domain_xml": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "astropy.samp.web_profile.CLIENT_ACCESS_POLICY",
    "astropy.samp.web_profile.CROSS_DOMAIN",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.samp.web_profile.WebProfileRequestHandler.do_GET": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "IOError",
    "parse_qs",
    "urlopen"
   ]
  },
  "type": "function"
 },
 "astropy.samp.web_profile.WebProfileRequestHandler.do_HEAD": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "astropy.samp.web_profile.WebProfileRequestHandler.do_OPTIONS": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "astropy.samp.web_profile.WebProfileRequestHandler.do_POST": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "astropy.samp.web_profile.WebProfileRequestHandler.end_headers": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "astropy.samp.web_profile.WebProfileRequestHandler.is_http_path_valid": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "astropy.samp.web_profile.WebProfileXMLRPCServer": {
  "data": {
   "lineno": 132
  },
  "type": "class"
 },
 "astropy.samp.web_profile.WebProfileXMLRPCServer.__init__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "astropy.samp.web_profile.WebProfileRequestHandler"
   ]
  },
  "type": "function"
 },
 "astropy.samp.web_profile.WebProfileXMLRPCServer.add_client": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "astropy.samp.web_profile.WebProfileXMLRPCServer.remove_client": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.samp.web_profile.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "astropy.samp.web_profile.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.samp.web_profile.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.samp.web_profile.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.samp.web_profile.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.samp.web_profile.web_profile_text_dialog": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "input",
    "isinstance",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.setup_package": {
  "data": {},
  "type": "module"
 },
 "astropy.setup_package.get_package_data": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "astropy.stats": {
  "data": {},
  "type": "module"
 },
 "astropy.stats.bayesian_blocks": {
  "data": {},
  "type": "module"
 },
 "astropy.stats.bayesian_blocks.Events": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "astropy.stats.bayesian_blocks.FitnessFunc"
   ]
  },
  "type": "class"
 },
 "astropy.stats.bayesian_blocks.Events.__init__": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "astropy.stats.bayesian_blocks.Events",
    "astropy.stats.bayesian_blocks.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.stats.bayesian_blocks.Events.fitness": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "astropy.stats.bayesian_blocks.Events.validate_input": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "ValueError",
    "astropy.stats.bayesian_blocks.Events",
    "numpy.any",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.stats.bayesian_blocks.FitnessFunc": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.stats.bayesian_blocks.FitnessFunc.__init__": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "astropy.stats.bayesian_blocks.FitnessFunc._fitness_args": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "property",
    "signature"
   ]
  },
  "type": "function"
 },
 "astropy.stats.bayesian_blocks.FitnessFunc.compute_ncp_prior": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "ValueError",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "astropy.stats.bayesian_blocks.FitnessFunc.fit": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "numpy.argmax",
    "numpy.concatenate",
    "numpy.cumsum",
    "numpy.ones_like",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.stats.bayesian_blocks.FitnessFunc.fitness": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.stats.bayesian_blocks.FitnessFunc.p0_prior": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "astropy.stats.bayesian_blocks.FitnessFunc.validate_input": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.bincount",
    "numpy.ones_like",
    "numpy.unique",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "astropy.stats.bayesian_blocks.PointMeasures": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "astropy.stats.bayesian_blocks.FitnessFunc"
   ]
  },
  "type": "class"
 },
 "astropy.stats.bayesian_blocks.PointMeasures.__init__": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "astropy.stats.bayesian_blocks.PointMeasures",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.stats.bayesian_blocks.PointMeasures.fitness": {
  "data": {
   "lineno": 510
  },
  "type": "function"
 },
 "astropy.stats.bayesian_blocks.PointMeasures.validate_input": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "ValueError",
    "astropy.stats.bayesian_blocks.PointMeasures",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.stats.bayesian_blocks.RegularEvents": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "astropy.stats.bayesian_blocks.FitnessFunc"
   ]
  },
  "type": "class"
 },
 "astropy.stats.bayesian_blocks.RegularEvents.__init__": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "astropy.stats.bayesian_blocks.RegularEvents",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.stats.bayesian_blocks.RegularEvents.fitness": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "astropy.stats.bayesian_blocks.warnings",
    "numpy.any",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "astropy.stats.bayesian_blocks.RegularEvents.validate_input": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "ValueError",
    "astropy.stats.bayesian_blocks.RegularEvents",
    "numpy.all",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.stats.bayesian_blocks.__all__": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "astropy.stats.bayesian_blocks.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.stats.bayesian_blocks.bayesian_blocks": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "fitness",
    "isinstance",
    "issubclass",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.stats.bayesian_blocks.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.stats.bayesian_blocks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.stats.bayesian_blocks.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.stats.bayesian_blocks.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.stats.bayesian_blocks.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.stats.biweight": {
  "data": {},
  "type": "module"
 },
 "astropy.stats.biweight.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "astropy.stats.biweight.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.stats.biweight.biweight_location": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "deprecated_renamed_argument",
    "median_absolute_deviation",
    "numpy.abs",
    "numpy.asanyarray",
    "numpy.expand_dims",
    "numpy.median"
   ]
  },
  "type": "function"
 },
 "astropy.stats.biweight.biweight_midcorrelation": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "ValueError",
    "astropy.stats.biweight.biweight_midcovariance",
    "numpy.asanyarray",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "astropy.stats.biweight.biweight_midcovariance": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "ValueError",
    "deprecated_renamed_argument",
    "float",
    "median_absolute_deviation",
    "numpy.abs",
    "numpy.asanyarray",
    "numpy.dot",
    "numpy.inner",
    "numpy.median",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "astropy.stats.biweight.biweight_midvariance": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "deprecated_renamed_argument",
    "median_absolute_deviation",
    "numpy.abs",
    "numpy.asanyarray",
    "numpy.expand_dims",
    "numpy.median"
   ]
  },
  "type": "function"
 },
 "astropy.stats.biweight.biweight_scale": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "astropy.stats.biweight.biweight_midvariance",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "astropy.stats.biweight.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.stats.biweight.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.stats.biweight.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.stats.biweight.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.stats.circstats": {
  "data": {},
  "type": "module"
 },
 "astropy.stats.circstats.Quantity": {
  "data": {
   "shadows": "astropy.units.Quantity"
  },
  "type": "import"
 },
 "astropy.stats.circstats._A1inv": {
  "data": {
   "lineno": 404
  },
  "type": "function"
 },
 "astropy.stats.circstats.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.stats.circstats.__doctest_requires__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.stats.circstats._angle": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "astropy.stats.circstats._components",
    "astropy.units.Quantity",
    "isinstance",
    "numpy.arctan2"
   ]
  },
  "type": "function"
 },
 "astropy.stats.circstats._components": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "astropy.utils.compat.numpy.broadcast_to",
    "numpy.cos",
    "numpy.ones",
    "numpy.sin",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "astropy.stats.circstats._length": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "astropy.stats.circstats._components",
    "numpy.hypot"
   ]
  },
  "type": "function"
 },
 "astropy.stats.circstats.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.stats.circstats.broadcast_to": {
  "data": {
   "shadows": "astropy.utils.compat.numpy.broadcast_to"
  },
  "type": "import"
 },
 "astropy.stats.circstats.circcorrcoef": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ValueError",
    "astropy.stats.circstats.circmean",
    "numpy.sin",
    "numpy.size",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "astropy.stats.circstats.circmean": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "astropy.stats.circstats._angle"
   ]
  },
  "type": "function"
 },
 "astropy.stats.circstats.circmoment": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "astropy.stats.circstats._angle",
    "astropy.stats.circstats._length",
    "astropy.stats.circstats.circmean"
   ]
  },
  "type": "function"
 },
 "astropy.stats.circstats.circvar": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "astropy.stats.circstats._length"
   ]
  },
  "type": "function"
 },
 "astropy.stats.circstats.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.stats.circstats.norm": {
  "data": {
   "shadows": "scipy.stats.norm"
  },
  "type": "import"
 },
 "astropy.stats.circstats.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.stats.circstats.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.stats.circstats.rayleightest": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "astropy.stats.circstats._length",
    "numpy.exp",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "astropy.stats.circstats.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.stats.circstats.vonmisesmle": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "astropy.stats.circstats._A1inv",
    "astropy.stats.circstats.circmean",
    "numpy.cos",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "astropy.stats.circstats.vtest": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "ValueError",
    "astropy.utils.compat.numpy.broadcast_to",
    "numpy.cos",
    "numpy.ones",
    "numpy.size",
    "numpy.sqrt",
    "numpy.sum",
    "scipy.stats.norm.cdf",
    "scipy.stats.norm.pdf"
   ]
  },
  "type": "function"
 },
 "astropy.stats.funcs": {
  "data": {
   "symbols_in_volume": [
    "astropy.stats.funcs.gaussian_sigma_to_fwhm",
    "numpy.log",
    "numpy.sqrt"
   ]
  },
  "type": "module"
 },
 "astropy.stats.funcs.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "astropy.stats.funcs.__doctest_requires__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "astropy.stats.funcs.__doctest_skip__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "astropy.stats.funcs._check_poisson_conf_inputs": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.stats.funcs._kraft_burrows_nousek": {
  "data": {
   "lineno": 1200,
   "symbols_in_volume": [
    "ImportError",
    "OverflowError",
    "ValueError",
    "astropy.stats.funcs._mpmath_kraft_burrows_nousek",
    "astropy.stats.funcs._scipy_kraft_burrows_nousek"
   ]
  },
  "type": "function"
 },
 "astropy.stats.funcs._mpmath_kraft_burrows_nousek": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "eqn8",
    "find_s_min",
    "float",
    "func",
    "mpmath.factorial",
    "mpmath.findroot",
    "mpmath.mpf"
   ]
  },
  "type": "function"
 },
 "astropy.stats.funcs._mpmath_kraft_burrows_nousek.eqn7": {
  "data": {
   "lineno": 1164,
   "symbols_in_volume": [
    "mpmath.exp"
   ]
  },
  "type": "function"
 },
 "astropy.stats.funcs._mpmath_kraft_burrows_nousek.eqn8": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": [
    "int",
    "mpmath.exp",
    "mpmath.factorial",
    "mpmath.fsum",
    "mpmath.power",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.stats.funcs._mpmath_kraft_burrows_nousek.eqn9_left": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "mpmath.quad"
   ]
  },
  "type": "function"
 },
 "astropy.stats.funcs._mpmath_kraft_burrows_nousek.eqn9_left.eqn7NB": {
  "data": {
   "lineno": 1169,
   "symbols_in_volume": [
    "eqn7"
   ]
  },
  "type": "function"
 },
 "astropy.stats.funcs._mpmath_kraft_burrows_nousek.find_s_min": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": [
    "eqn7",
    "mpmath.findroot"
   ]
  },
  "type": "function"
 },
 "astropy.stats.funcs._mpmath_kraft_burrows_nousek.find_s_min.eqn7ysmax": {
  "data": {
   "lineno": 1186,
   "symbols_in_volume": [
    "eqn7"
   ]
  },
  "type": "function"
 },
 "astropy.stats.funcs._mpmath_kraft_burrows_nousek.func": {
  "data": {
   "lineno": 1190,
   "symbols_in_volume": [
    "eqn9_left",
    "find_s_min"
   ]
  },
  "type": "function"
 },
 "astropy.stats.funcs._scipy_kraft_burrows_nousek": {
  "data": {
   "lineno": 1038,
   "symbols_in_volume": [
    "astropy.stats.funcs.math",
    "eqn8",
    "find_s_min",
    "float",
    "func",
    "scipy.optimize.brentq"
   ]
  },
  "type": "function"
 },
 "astropy.stats.funcs._scipy_kraft_burrows_nousek.eqn7": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "math.exp"
   ]
  },
  "type": "function"
 },
 "astropy.stats.funcs._scipy_kraft_burrows_nousek.eqn8": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "math.exp",
    "numpy.arange",
    "numpy.cumprod",
    "numpy.float64",
    "numpy.ones",
    "numpy.power",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "astropy.stats.funcs._scipy_kraft_burrows_nousek.eqn9_left": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": [
    "scipy.integrate.quad"
   ]
  },
  "type": "function"
 },
 "astropy.stats.funcs._scipy_kraft_burrows_nousek.find_s_min": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "eqn7",
    "scipy.optimize.brentq"
   ]
  },
  "type": "function"
 },
 "astropy.stats.funcs._scipy_kraft_burrows_nousek.func": {
  "data": {
   "lineno": 1113,
   "symbols_in_volume": [
    "eqn9_left",
    "find_s_min"
   ]
  },
  "type": "function"
 },
 "astropy.stats.funcs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.stats.funcs.betaincinv": {
  "data": {
   "shadows": "scipy.special.betaincinv"
  },
  "type": "import"
 },
 "astropy.stats.funcs.binned_binom_proportion": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ValueError",
    "astropy.stats.funcs.binom_conf_interval",
    "numpy.abs",
    "numpy.bool",
    "numpy.histogram",
    "numpy.ravel",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.stats.funcs.binom_conf_interval": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ValueError",
    "min",
    "numpy.array",
    "numpy.asarray",
    "numpy.float",
    "numpy.int",
    "numpy.sqrt",
    "scipy.special.betaincinv",
    "scipy.special.erfinv"
   ]
  },
  "type": "function"
 },
 "astropy.stats.funcs.bootstrap": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bootfunc",
    "len",
    "numpy.empty",
    "numpy.random.randint",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.stats.funcs.brentq": {
  "data": {
   "shadows": "scipy.optimize.brentq"
  },
  "type": "import"
 },
 "astropy.stats.funcs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.stats.funcs.erfinv": {
  "data": {
   "shadows": "scipy.special.erfinv"
  },
  "type": "import"
 },
 "astropy.stats.funcs.exp": {
  "data": {
   "shadows": "mpmath.exp"
  },
  "type": "import"
 },
 "astropy.stats.funcs.factorial": {
  "data": {
   "shadows": "mpmath.factorial"
  },
  "type": "import"
 },
 "astropy.stats.funcs.findroot": {
  "data": {
   "shadows": "mpmath.findroot"
  },
  "type": "import"
 },
 "astropy.stats.funcs.fsum": {
  "data": {
   "shadows": "mpmath.fsum"
  },
  "type": "import"
 },
 "astropy.stats.funcs.gaussian_fwhm_to_sigma": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "astropy.stats.funcs.gaussian_sigma_to_fwhm": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "astropy.stats.funcs.mad_std": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "astropy.stats.funcs.median_absolute_deviation",
    "func"
   ]
  },
  "type": "function"
 },
 "astropy.stats.funcs.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "astropy.stats.funcs.median_absolute_deviation": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "deprecated_renamed_argument",
    "func",
    "isinstance",
    "isiterable",
    "list",
    "numpy.abs",
    "numpy.any",
    "numpy.asanyarray",
    "numpy.expand_dims",
    "numpy.isnan",
    "numpy.ma.MaskedArray",
    "numpy.ma.isMaskedArray",
    "numpy.ma.masked_invalid",
    "numpy.ma.median",
    "numpy.median",
    "numpy.nan",
    "numpy.nanmedian",
    "sorted",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "astropy.stats.funcs.mpf": {
  "data": {
   "shadows": "mpmath.mpf"
  },
  "type": "import"
 },
 "astropy.stats.funcs.mpmath": {
  "data": {
   "shadows": "mpmath"
  },
  "type": "import"
 },
 "astropy.stats.funcs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.stats.funcs.poisson_conf_interval": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "ValueError",
    "astropy.stats.funcs._check_poisson_conf_inputs",
    "numpy.any",
    "numpy.array",
    "numpy.asanyarray",
    "numpy.isscalar",
    "numpy.sqrt",
    "numpy.vectorize",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "astropy.stats.funcs.power": {
  "data": {
   "shadows": "mpmath.power"
  },
  "type": "import"
 },
 "astropy.stats.funcs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.stats.funcs.quad": {
  "data": {
   "shadows": "mpmath.quad"
  },
  "type": "import"
 },
 "astropy.stats.funcs.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "astropy.stats.funcs.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "astropy.stats.funcs.signal_to_noise_oir_ccd": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "astropy.stats.funcs.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.stats.funcs.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "astropy.stats.histogram": {
  "data": {},
  "type": "module"
 },
 "astropy.stats.histogram._KnuthF": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.stats.histogram._KnuthF.__call__": {
  "data": {
   "lineno": 328
  },
  "type": "function"
 },
 "astropy.stats.histogram._KnuthF.__init__": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "astropy.stats.histogram._KnuthF.bins": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "int",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "astropy.stats.histogram._KnuthF.eval": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "int",
    "numpy.histogram",
    "numpy.inf",
    "numpy.log",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "astropy.stats.histogram.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "astropy.stats.histogram.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.stats.histogram.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.stats.histogram.freedman_bin_width": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ValueError",
    "max",
    "numpy.arange",
    "numpy.asarray",
    "numpy.ceil",
    "numpy.percentile"
   ]
  },
  "type": "function"
 },
 "astropy.stats.histogram.histogram": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "astropy.stats.histogram.freedman_bin_width",
    "astropy.stats.histogram.knuth_bin_width",
    "astropy.stats.histogram.scott_bin_width",
    "bayesian_blocks",
    "isinstance",
    "numpy.asarray",
    "numpy.histogram",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.stats.histogram.knuth_bin_width": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "astropy.stats.histogram._KnuthF",
    "astropy.stats.histogram.freedman_bin_width",
    "len",
    "scipy.optimize.fmin"
   ]
  },
  "type": "function"
 },
 "astropy.stats.histogram.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.stats.histogram.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "astropy.stats.histogram.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.stats.histogram.scott_bin_width": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ValueError",
    "max",
    "numpy.arange",
    "numpy.asarray",
    "numpy.ceil",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "astropy.stats.histogram.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "astropy.stats.histogram.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.stats.info_theory": {
  "data": {},
  "type": "module"
 },
 "astropy.stats.info_theory.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "astropy.stats.info_theory.__doctest_requires__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "astropy.stats.info_theory.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.stats.info_theory.akaike_info_criterion": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "astropy.stats.info_theory.akaike_info_criterion_lsq": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "astropy.stats.info_theory.akaike_info_criterion",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "astropy.stats.info_theory.bayesian_info_criterion": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "astropy.stats.info_theory.bayesian_info_criterion_lsq": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "astropy.stats.info_theory.bayesian_info_criterion",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "astropy.stats.info_theory.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.stats.info_theory.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.stats.info_theory.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.stats.info_theory.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.stats.jackknife": {
  "data": {},
  "type": "module"
 },
 "astropy.stats.jackknife.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "astropy.stats.jackknife.__doctest_requires__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "astropy.stats.jackknife.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.stats.jackknife.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.stats.jackknife.erfinv": {
  "data": {
   "shadows": "scipy.special.erfinv"
  },
  "type": "import"
 },
 "astropy.stats.jackknife.jackknife_resampling": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "numpy.delete",
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.stats.jackknife.jackknife_stats": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "astropy.stats.jackknife.jackknife_resampling",
    "numpy.apply_along_axis",
    "numpy.array",
    "numpy.mean",
    "numpy.sqrt",
    "scipy.special.erfinv",
    "statistic"
   ]
  },
  "type": "function"
 },
 "astropy.stats.jackknife.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.stats.jackknife.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.stats.jackknife.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle": {
  "data": {},
  "type": "module"
 },
 "astropy.stats.lombscargle.core": {
  "data": {},
  "type": "module"
 },
 "astropy.stats.lombscargle.core.LombScargle": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "available_methods",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.stats.lombscargle.core.LombScargle.__init__": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.core.LombScargle._power_unit": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "astropy.stats.lombscargle.core.has_units"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.core.LombScargle._validate_frequency": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "astropy.stats.lombscargle.core.has_units",
    "numpy.asanyarray"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.core.LombScargle._validate_inputs": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "astropy.stats.lombscargle.core.has_units",
    "broadcast_arrays",
    "map"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.core.LombScargle._validate_t": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ValueError",
    "astropy.stats.lombscargle.core.has_units",
    "numpy.asanyarray"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.core.LombScargle.autofrequency": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.core.LombScargle.autopower": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.core.LombScargle.model": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "astropy.stats.lombscargle.core.get_unit",
    "astropy.stats.lombscargle.core.strip_units",
    "periodic_fit"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.core.LombScargle.power": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "astropy.stats.lombscargle.core.strip_units",
    "lombscargle"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.core.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.core.get_unit": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.core.has_units": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.core.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.core.strip_units": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "len",
    "map",
    "numpy.asarray",
    "strip"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations": {
  "data": {},
  "type": "module"
 },
 "astropy.stats.lombscargle.implementations.chi2_impl": {
  "data": {},
  "type": "module"
 },
 "astropy.stats.lombscargle.implementations.chi2_impl.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.chi2_impl.lombscargle_chi2": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ValueError",
    "compute_power",
    "numpy.array",
    "numpy.asarray",
    "numpy.broadcast_arrays",
    "numpy.dot",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations.chi2_impl.lombscargle_chi2.compute_power": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "design_matrix",
    "numpy.dot",
    "numpy.linalg.solve"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations.chi2_impl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.chi2_impl.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.fast_impl": {
  "data": {},
  "type": "module"
 },
 "astropy.stats.lombscargle.implementations.fast_impl.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.fast_impl.lombscargle_fast": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ValueError",
    "dict.copy",
    "numpy.broadcast_arrays",
    "numpy.dot",
    "numpy.log",
    "numpy.sign",
    "numpy.sqrt",
    "trig_sum"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations.fast_impl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.fast_impl.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.fastchi2_impl": {
  "data": {},
  "type": "module"
 },
 "astropy.stats.lombscargle.implementations.fastchi2_impl.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.fastchi2_impl.lombscargle_fastchi2": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "compute_power",
    "dict",
    "dict.copy",
    "numpy.array",
    "numpy.broadcast_arrays",
    "numpy.dot",
    "numpy.log",
    "numpy.ones",
    "numpy.sign",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "sum",
    "trig_sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations.fastchi2_impl.lombscargle_fastchi2.compute_power": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.linalg.solve"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations.fastchi2_impl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.fastchi2_impl.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.main": {
  "data": {},
  "type": "module"
 },
 "astropy.stats.lombscargle.implementations.main.METHODS": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "astropy.stats.lombscargle.implementations.main.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "astropy.stats.lombscargle.implementations.main._get_frequency_grid": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "astropy.stats.lombscargle.implementations.main._is_regular",
    "len",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations.main._is_regular": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "len",
    "numpy.allclose",
    "numpy.asarray",
    "numpy.diff"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations.main.available_methods": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ImportError",
    "astropy.stats.lombscargle.implementations.main.imp",
    "hasattr",
    "numpy.ufunc"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations.main.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.main.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.main.lombscargle": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "ValueError",
    "astropy.stats.lombscargle.implementations.main.METHODS",
    "astropy.stats.lombscargle.implementations.main._get_frequency_grid",
    "astropy.stats.lombscargle.implementations.main.validate_method",
    "dict",
    "numpy.allclose",
    "numpy.asarray",
    "numpy.ravel"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations.main.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.main.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.main.validate_method": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ValueError",
    "astropy.stats.lombscargle.implementations.main.METHODS",
    "astropy.stats.lombscargle.implementations.main._is_regular",
    "astropy.stats.lombscargle.implementations.main.available_methods",
    "astropy.stats.lombscargle.implementations.main.warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations.main.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.mle": {
  "data": {},
  "type": "module"
 },
 "astropy.stats.lombscargle.implementations.mle.design_matrix": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.cos",
    "numpy.ones_like",
    "numpy.pi",
    "numpy.sin",
    "numpy.transpose",
    "numpy.vstack",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations.mle.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.mle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.mle.periodic_fit": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "astropy.stats.lombscargle.implementations.mle.design_matrix",
    "map",
    "numpy.asarray",
    "numpy.dot",
    "numpy.linalg.solve",
    "numpy.ones_like"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations.mle.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.scipy_impl": {
  "data": {},
  "type": "module"
 },
 "astropy.stats.lombscargle.implementations.scipy_impl.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.scipy_impl.lombscargle_scipy": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "float",
    "numpy.asarray",
    "numpy.broadcast_arrays",
    "numpy.log",
    "numpy.mean",
    "numpy.pi",
    "scipy.signal.lombscargle"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations.scipy_impl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.scipy_impl.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.scipy_impl.signal": {
  "data": {
   "shadows": "scipy.signal"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.slow_impl": {
  "data": {},
  "type": "module"
 },
 "astropy.stats.lombscargle.implementations.slow_impl.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.slow_impl.lombscargle_slow": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ValueError",
    "map",
    "numpy.arctan2",
    "numpy.asarray",
    "numpy.broadcast_arrays",
    "numpy.cos",
    "numpy.dot",
    "numpy.log",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations.slow_impl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.slow_impl.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.stats.lombscargle.implementations.tests.test_mle": {
  "data": {},
  "type": "module"
 },
 "astropy.stats.lombscargle.implementations.tests.test_mle.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.tests.test_mle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.tests.test_mle.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.tests.test_mle.t": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "astropy.stats.lombscargle.implementations.tests.test_mle.pytest",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations.tests.test_mle.test_design_matrix": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "astropy.stats.lombscargle.implementations.tests.test_mle.pytest",
    "astropy.stats.lombscargle.implementations.tests.test_mle.t",
    "bool",
    "design_matrix",
    "numpy.cos",
    "numpy.pi",
    "numpy.sin",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations.tests.test_mle.test_exact_mle_fit": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "astropy.stats.lombscargle.implementations.tests.test_mle.pytest",
    "astropy.stats.lombscargle.implementations.tests.test_mle.t",
    "numpy.cos",
    "numpy.ones",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sin",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "periodic_fit",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations.tests.test_mle.test_multiterm_design_matrix": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "astropy.stats.lombscargle.implementations.tests.test_mle.pytest",
    "astropy.stats.lombscargle.implementations.tests.test_mle.t",
    "design_matrix",
    "numpy.cos",
    "numpy.pi",
    "numpy.sin",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations.tests.test_utils": {
  "data": {
   "symbols_in_volume": [
    "astropy.stats.lombscargle.implementations.tests.test_utils.pytest",
    "hasattr",
    "numpy.ufunc"
   ]
  },
  "type": "module"
 },
 "astropy.stats.lombscargle.implementations.tests.test_utils.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.tests.test_utils.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.tests.test_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.tests.test_utils.extirpolate_data": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "astropy.stats.lombscargle.implementations.tests.test_utils.pytest",
    "numpy.random.RandomState",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations.tests.test_utils.extirpolate_int_data": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "astropy.stats.lombscargle.implementations.tests.test_utils.pytest",
    "astropy.stats.lombscargle.implementations.tests.test_utils.requires_numpy1_8",
    "f",
    "int",
    "numpy.random.RandomState",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.tests.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.tests.test_utils.requires_numpy1_8": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "astropy.stats.lombscargle.implementations.tests.test_utils.test_bitceil": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "astropy.stats.lombscargle.implementations.tests.test_utils.pytest",
    "bitceil",
    "int",
    "numpy.arange",
    "numpy.ceil",
    "numpy.log2",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations.tests.test_utils.test_extirpolate": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "astropy.stats.lombscargle.implementations.tests.test_utils.extirpolate_data",
    "astropy.stats.lombscargle.implementations.tests.test_utils.pytest",
    "astropy.stats.lombscargle.implementations.tests.test_utils.requires_numpy1_8",
    "extirpolate",
    "f",
    "len",
    "numpy.arange",
    "numpy.dot",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations.tests.test_utils.test_extirpolate_with_integers": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "astropy.stats.lombscargle.implementations.tests.test_utils.extirpolate_int_data",
    "astropy.stats.lombscargle.implementations.tests.test_utils.pytest",
    "astropy.stats.lombscargle.implementations.tests.test_utils.requires_numpy1_8",
    "extirpolate",
    "f",
    "len",
    "numpy.arange",
    "numpy.dot",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations.tests.test_utils.test_trig_sum": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "astropy.stats.lombscargle.implementations.tests.test_utils.pytest",
    "astropy.stats.lombscargle.implementations.tests.test_utils.requires_numpy1_8",
    "astropy.stats.lombscargle.implementations.tests.test_utils.trig_sum_data",
    "numpy.testing.assert_allclose",
    "trig_sum"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations.tests.test_utils.trig_sum_data": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "astropy.stats.lombscargle.implementations.tests.test_utils.pytest",
    "numpy.random.RandomState",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations.utils": {
  "data": {},
  "type": "module"
 },
 "astropy.stats.lombscargle.implementations.utils.add_at": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "astropy.stats.lombscargle.implementations.utils.warnings",
    "hasattr",
    "numpy.add.at",
    "numpy.asarray",
    "numpy.broadcast_arrays",
    "numpy.ufunc",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations.utils.bitceil": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "hasattr",
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.utils.extirpolate": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "astropy.stats.lombscargle.implementations.utils.add_at",
    "int",
    "map",
    "math.factorial",
    "numpy.arange",
    "numpy.broadcast_arrays",
    "numpy.clip",
    "numpy.max",
    "numpy.newaxis",
    "numpy.prod",
    "numpy.ravel",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations.utils.factorial": {
  "data": {
   "shadows": "math.factorial"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.implementations.utils.trig_sum": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "ValueError",
    "astropy.stats.lombscargle.implementations.utils.bitceil",
    "astropy.stats.lombscargle.implementations.utils.extirpolate",
    "int",
    "map",
    "numpy.arange",
    "numpy.broadcast_arrays",
    "numpy.cos",
    "numpy.dot",
    "numpy.exp",
    "numpy.fft.ifft",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.ravel",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.implementations.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.stats.lombscargle.tests.test_lombscargle": {
  "data": {
   "symbols_in_volume": [
    "astropy.stats.lombscargle.tests.test_lombscargle.ALL_METHODS"
   ]
  },
  "type": "module"
 },
 "astropy.stats.lombscargle.tests.test_lombscargle.ALL_METHODS": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "astropy.stats.lombscargle.tests.test_lombscargle.ALL_METHODS_NO_AUTO": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "astropy.stats.lombscargle.tests.test_lombscargle.FAST_METHODS": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "astropy.stats.lombscargle.tests.test_lombscargle.NORMALIZATIONS": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "astropy.stats.lombscargle.tests.test_lombscargle.NTERMS_METHODS": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "astropy.stats.lombscargle.tests.test_lombscargle._lombscargle_cdf": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.tests.test_lombscargle._lombscargle_pdf": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.tests.test_lombscargle.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.tests.test_lombscargle.data": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "astropy.stats.lombscargle.tests.test_lombscargle.pytest",
    "numpy.cos",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.tests.test_lombscargle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.tests.test_lombscargle.null_data": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "astropy.stats.lombscargle.tests.test_lombscargle.pytest",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.tests.test_lombscargle.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.stats.lombscargle.tests.test_lombscargle.test_all_methods": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "LombScargle",
    "assert_quantity_allclose",
    "astropy.stats.lombscargle.tests.test_lombscargle.ALL_METHODS_NO_AUTO",
    "astropy.stats.lombscargle.tests.test_lombscargle.FAST_METHODS",
    "astropy.stats.lombscargle.tests.test_lombscargle.NORMALIZATIONS",
    "astropy.stats.lombscargle.tests.test_lombscargle.data",
    "astropy.stats.lombscargle.tests.test_lombscargle.pytest",
    "dict",
    "hasattr",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.tests.test_lombscargle.test_autofrequency": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "LombScargle",
    "astropy.stats.lombscargle.tests.test_lombscargle.data",
    "astropy.stats.lombscargle.tests.test_lombscargle.pytest",
    "len",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.tests.test_lombscargle.test_autopower": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "LombScargle",
    "astropy.stats.lombscargle.tests.test_lombscargle.data",
    "dict",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.tests.test_lombscargle.test_distribution": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "LombScargle",
    "astropy.stats.lombscargle.tests.test_lombscargle.NORMALIZATIONS",
    "astropy.stats.lombscargle.tests.test_lombscargle._lombscargle_cdf",
    "astropy.stats.lombscargle.tests.test_lombscargle._lombscargle_pdf",
    "astropy.stats.lombscargle.tests.test_lombscargle.null_data",
    "astropy.stats.lombscargle.tests.test_lombscargle.pytest",
    "len",
    "numpy.diff",
    "numpy.histogram",
    "numpy.linspace",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.tests.test_lombscargle.test_errors_on_unit_mismatch": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "LombScargle",
    "LombScargle.available_methods",
    "ValueError",
    "astropy.stats.lombscargle.tests.test_lombscargle.data",
    "astropy.stats.lombscargle.tests.test_lombscargle.pytest",
    "numpy.linspace",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.tests.test_lombscargle.test_fast_approximations": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "LombScargle",
    "ValueError",
    "astropy.stats.lombscargle.tests.test_lombscargle.FAST_METHODS",
    "astropy.stats.lombscargle.tests.test_lombscargle.data",
    "astropy.stats.lombscargle.tests.test_lombscargle.pytest",
    "dict",
    "numpy.arange",
    "numpy.testing.assert_allclose",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.tests.test_lombscargle.test_integer_inputs": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "LombScargle",
    "astropy.stats.lombscargle.tests.test_lombscargle.ALL_METHODS_NO_AUTO",
    "astropy.stats.lombscargle.tests.test_lombscargle.NORMALIZATIONS",
    "astropy.stats.lombscargle.tests.test_lombscargle.data",
    "astropy.stats.lombscargle.tests.test_lombscargle.pytest",
    "dict",
    "int",
    "numpy.arange",
    "numpy.floor",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.tests.test_lombscargle.test_model": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "LombScargle",
    "assert_quantity_allclose",
    "astropy.stats.lombscargle.tests.test_lombscargle.pytest",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sin",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.tests.test_lombscargle.test_model_units_match": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "LombScargle",
    "astropy.stats.lombscargle.tests.test_lombscargle.data",
    "astropy.stats.lombscargle.tests.test_lombscargle.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.tests.test_lombscargle.test_model_units_mismatch": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "LombScargle",
    "ValueError",
    "astropy.stats.lombscargle.tests.test_lombscargle.data",
    "astropy.stats.lombscargle.tests.test_lombscargle.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.tests.test_lombscargle.test_nterms_methods": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "LombScargle",
    "ValueError",
    "astropy.stats.lombscargle.tests.test_lombscargle.NORMALIZATIONS",
    "astropy.stats.lombscargle.tests.test_lombscargle.NTERMS_METHODS",
    "astropy.stats.lombscargle.tests.test_lombscargle.data",
    "astropy.stats.lombscargle.tests.test_lombscargle.pytest",
    "dict",
    "numpy.arange",
    "numpy.testing.assert_allclose",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.tests.test_lombscargle.test_output_shapes": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "LombScargle",
    "LombScargle.available_methods",
    "astropy.stats.lombscargle.tests.test_lombscargle.data",
    "astropy.stats.lombscargle.tests.test_lombscargle.pytest",
    "numpy.arange",
    "numpy.asarray",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.stats.lombscargle.tests.test_lombscargle.test_unit_conversions": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "LombScargle",
    "assert_quantity_allclose",
    "astropy.stats.lombscargle.tests.test_lombscargle.data",
    "astropy.stats.lombscargle.tests.test_lombscargle.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.stats.setup_package": {
  "data": {},
  "type": "module"
 },
 "astropy.stats.setup_package.requires_2to3": {
  "data": {
   "lineno": 1
  },
  "type": "function"
 },
 "astropy.stats.sigma_clipping": {
  "data": {},
  "type": "module"
 },
 "astropy.stats.sigma_clipping.SigmaClip": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.stats.sigma_clipping.SigmaClip.__call__": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "astropy.stats.sigma_clipping.warnings",
    "numpy.any",
    "numpy.isfinite",
    "numpy.ma.array",
    "numpy.ma.masked_invalid",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.stats.sigma_clipping.SigmaClip.__init__": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.ma.median",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "astropy.stats.sigma_clipping.SigmaClip.__repr__": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "astropy.stats.sigma_clipping.SigmaClip.__str__": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.stats.sigma_clipping.SigmaClip._perform_clip": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "numpy.expand_dims",
    "numpy.ma.MaskedArray",
    "numpy.ma.masked",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "astropy.stats.sigma_clipping.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "astropy.stats.sigma_clipping.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.stats.sigma_clipping.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.stats.sigma_clipping.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.stats.sigma_clipping.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.stats.sigma_clipping.sigma_clip": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "astropy.stats.sigma_clipping.SigmaClip",
    "numpy.ma.median",
    "numpy.std",
    "sigclip"
   ]
  },
  "type": "function"
 },
 "astropy.stats.sigma_clipping.sigma_clipped_stats": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "astropy.stats.sigma_clipping.sigma_clip",
    "numpy.ma.MaskedArray",
    "numpy.ma.isMaskedArray",
    "numpy.ma.masked_values",
    "numpy.ma.mean",
    "numpy.ma.median",
    "numpy.ma.std",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "astropy.stats.sigma_clipping.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.stats.sigma_clipping.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.stats.spatial": {
  "data": {},
  "type": "module"
 },
 "astropy.stats.spatial.RipleysKEstimator": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.stats.spatial.RipleysKEstimator.Hfunction": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "astropy.stats.spatial.RipleysKEstimator.Lfunction": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "astropy.stats.spatial.RipleysKEstimator.__call__": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "astropy.stats.spatial.RipleysKEstimator.__init__": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "astropy.stats.spatial.RipleysKEstimator._pairwise_diffs": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "abs",
    "len",
    "numpy.double",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.stats.spatial.RipleysKEstimator.area": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.stats.spatial.RipleysKEstimator.evaluate": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "astropy.stats.spatial.math",
    "len",
    "max",
    "min",
    "numpy.arccos",
    "numpy.arcsin",
    "numpy.asarray",
    "numpy.double",
    "numpy.hypot",
    "numpy.minimum",
    "numpy.ones",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.stats.spatial.RipleysKEstimator.poisson": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "astropy.stats.spatial.RipleysKEstimator.x_max": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.stats.spatial.RipleysKEstimator.x_min": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.stats.spatial.RipleysKEstimator.y_max": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.stats.spatial.RipleysKEstimator.y_min": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.stats.spatial.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.stats.spatial.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.stats.spatial.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "astropy.stats.spatial.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.stats.spatial.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.stats.spatial.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.stats.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.stats.tests.test_bayesian_blocks": {
  "data": {},
  "type": "module"
 },
 "astropy.stats.tests.test_bayesian_blocks.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_bayesian_blocks.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_bayesian_blocks.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_bayesian_blocks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_bayesian_blocks.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_bayesian_blocks.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_bayesian_blocks.test_duplicate_events": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "bayesian_blocks",
    "numpy.ones_like",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_bayesian_blocks.test_errors": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ValueError",
    "astropy.stats.tests.test_bayesian_blocks.pytest",
    "bayesian_blocks",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_bayesian_blocks.test_fitness_function_results": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "bayesian_blocks",
    "len",
    "numpy.arange",
    "numpy.exp",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_bayesian_blocks.test_measures_fitness_heteroscedastic": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "bayesian_blocks",
    "len",
    "numpy.exp",
    "numpy.linspace",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_bayesian_blocks.test_measures_fitness_homoscedastic": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "bayesian_blocks",
    "len",
    "numpy.exp",
    "numpy.linspace",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_bayesian_blocks.test_regular_events": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "RegularEvents",
    "bayesian_blocks",
    "len",
    "numpy.concatenate",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_bayesian_blocks.test_single_change_point": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "bayesian_blocks",
    "len",
    "numpy.concatenate",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_bayesian_blocks.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_biweight": {
  "data": {},
  "type": "module"
 },
 "astropy.stats.tests.test_biweight.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_biweight.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.utils.assert_allclose"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_biweight.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_biweight.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_biweight.normal": {
  "data": {
   "shadows": "numpy.random.normal"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_biweight.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_biweight.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_biweight.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_biweight.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_biweight.test_biweight_location": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "abs",
    "biweight_location",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_biweight.test_biweight_location_axis": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "biweight_location",
    "numpy.array",
    "numpy.random.normal",
    "numpy.testing.utils.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_biweight.test_biweight_location_axis_3d": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "biweight_location",
    "numpy.array",
    "numpy.random.normal",
    "numpy.testing.utils.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_biweight.test_biweight_location_small": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "abs",
    "biweight_location"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_biweight.test_biweight_midcorrelation": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "biweight_midcorrelation",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_biweight.test_biweight_midcorrelation_inputs": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "ValueError",
    "astropy.stats.tests.test_biweight.pytest",
    "biweight_midcorrelation",
    "numpy.ones",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_biweight.test_biweight_midcovariance_1d": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "biweight_midcovariance",
    "biweight_midvariance",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_biweight.test_biweight_midcovariance_2d": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "biweight_midcovariance",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_biweight.test_biweight_midcovariance_midvariance": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "biweight_midcovariance",
    "biweight_midvariance",
    "numpy.random.RandomState",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_biweight.test_biweight_midcovariance_symmetric": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "biweight_midcovariance",
    "numpy.random.RandomState",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_biweight.test_biweight_midvariance": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "biweight_midvariance",
    "numpy.random.randn",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_biweight.test_biweight_midvariance_5127": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "biweight_midvariance",
    "numpy.random.RandomState",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_biweight.test_biweight_midvariance_axis": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "biweight_midvariance",
    "numpy.array",
    "numpy.random.normal",
    "numpy.testing.utils.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_biweight.test_biweight_midvariance_axis_3d": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "biweight_midvariance",
    "numpy.array",
    "numpy.random.normal",
    "numpy.testing.utils.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_biweight.test_biweight_midvariance_small": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "biweight_midvariance",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_biweight.test_biweight_scale": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "biweight_midvariance",
    "biweight_scale",
    "numpy.sqrt",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_biweight.test_midcovariance_M_shape": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "ValueError",
    "astropy.stats.tests.test_biweight.pytest",
    "biweight_midcovariance",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_biweight.test_midcovariance_shape": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "ValueError",
    "astropy.stats.tests.test_biweight.pytest",
    "biweight_midcovariance",
    "numpy.ones",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_biweight.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_circstats": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.stats.tests.test_circstats.HAS_SCIPY": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "astropy.stats.tests.test_circstats.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_circstats.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.utils.assert_allclose"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_circstats.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_circstats.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_circstats.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_circstats.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_circstats.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_circstats.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_circstats.test__length": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "_length",
    "astropy.units.deg",
    "numpy.array",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_circstats.test_circcorrcoef": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "astropy.units.deg",
    "circcorrcoef",
    "numpy.array",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_circstats.test_circmean": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "astropy.units.deg",
    "circmean",
    "numpy.around",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_circstats.test_circmean_against_scipy": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "astropy.stats.tests.test_circstats.pytest",
    "circmean",
    "numpy.around",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_circstats.test_circmoment": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "astropy.units.deg",
    "circmoment",
    "numpy.around",
    "numpy.array",
    "numpy.rad2deg",
    "numpy.testing.assert_equal",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_circstats.test_circvar": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "astropy.units.deg",
    "circvar",
    "numpy.array",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_circstats.test_rayleightest": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "_length",
    "astropy.units.deg",
    "numpy.array",
    "numpy.testing.utils.assert_allclose",
    "rayleightest"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_circstats.test_vonmisesmle": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "astropy.units.deg",
    "numpy.around",
    "numpy.array",
    "numpy.rad2deg",
    "numpy.testing.assert_equal",
    "numpy.testing.utils.assert_allclose",
    "vonmisesmle"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_circstats.test_vtest": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "astropy.stats.tests.test_circstats.pytest",
    "astropy.units.deg",
    "numpy.array",
    "numpy.testing.utils.assert_allclose",
    "vtest"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_circstats.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_circstats.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_funcs": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.stats.tests.test_funcs.HAS_MPMATH": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.stats.tests.test_funcs.HAS_SCIPY": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "astropy.stats.tests.test_funcs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_funcs.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.utils.assert_allclose"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_funcs.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_funcs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_funcs.mpmath": {
  "data": {
   "shadows": "mpmath"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_funcs.normal": {
  "data": {
   "shadows": "numpy.random.normal"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_funcs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_funcs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_funcs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_funcs.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_funcs.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_funcs.spearmanr": {
  "data": {
   "shadows": "scipy.stats.spearmanr"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_funcs.test_binned_binom_proportion": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "astropy.stats.tests.test_funcs.pytest",
    "len",
    "numpy.bool",
    "numpy.linspace",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_binom_conf_interval": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "astropy.stats.tests.test_funcs.pytest",
    "numpy.array",
    "numpy.sqrt",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_bootstrap": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "numpy.array",
    "numpy.mean",
    "numpy.testing.assert_equal",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_bootstrap_multiple_outputs": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "astropy.stats.tests.test_funcs.pytest",
    "numpy.array",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_bootstrap_multiple_outputs.bootfunc": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "scipy.stats.spearmanr"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_gaussian_fwhm_to_sigma": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.sqrt",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_gaussian_sigma_to_fwhm": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.sqrt",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_gaussian_sigma_to_fwhm_to_sigma": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_mad_std": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "numpy.random.normal",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_mad_std_scalar_return": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "astropy.stats.tests.test_funcs.pytest",
    "catch_warnings",
    "numpy.isnan",
    "numpy.isscalar",
    "numpy.ma.masked_where",
    "numpy.nan",
    "numpy.random.normal"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_mad_std_warns": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "catch_warnings",
    "numpy.isnan",
    "numpy.nan",
    "numpy.random.normal",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_mad_std_with_axis": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_mad_std_with_axis_and_nan": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_mad_std_with_axis_and_nan_array_type": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.isnan",
    "numpy.ma.isMaskedArray",
    "numpy.ma.masked_where",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_mad_std_withnan": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "numpy.empty",
    "numpy.isnan",
    "numpy.nan",
    "numpy.random.normal",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_median_absolute_deviation": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.random.randn",
    "numpy.testing.utils.assert_allclose",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_median_absolute_deviation_masked": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.ma.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_median_absolute_deviation_multidim_axis": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_median_absolute_deviation_nans": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "astropy.stats.tests.test_funcs.pytest",
    "numpy.array",
    "numpy.ma.masked_invalid",
    "numpy.nan",
    "numpy.nanmedian",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_median_absolute_deviation_quantity": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_mpmath_poisson_limit": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "astropy.stats.tests.test_funcs.pytest",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_poisson_conf_array_fc": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "astropy.stats.tests.test_funcs.pytest",
    "numpy.any",
    "numpy.isnan",
    "numpy.ones",
    "numpy.ones_like",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_poisson_conf_array_frequentist_confidence_zero": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "astropy.stats.tests.test_funcs.pytest",
    "numpy.any",
    "numpy.isnan",
    "numpy.ones_like",
    "numpy.testing.utils.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_poisson_conf_array_rootn0": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.isnan",
    "numpy.ones",
    "numpy.ones_like",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_poisson_conf_array_rootn0_zero": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.isnan",
    "numpy.ones_like",
    "numpy.testing.utils.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_poisson_conf_frequentist_confidence_gehrels": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "astropy.stats.tests.test_funcs.pytest",
    "numpy.array",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_poisson_conf_frequentist_confidence_gehrels_2sigma": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "astropy.stats.tests.test_funcs.pytest",
    "numpy.array",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_poisson_conf_frequentist_confidence_gehrels_3sigma": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "astropy.stats.tests.test_funcs.pytest",
    "numpy.array",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_poisson_conf_gehrels86": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "astropy.stats.tests.test_funcs.pytest",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_poisson_conf_interval_rootn": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_poisson_conf_kbn_value_errors": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "ValueError",
    "astropy.stats.tests.test_funcs.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_poisson_conf_large": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "astropy.stats.tests.test_funcs.pytest",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_poisson_conf_list_rootn0_zero": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.isnan",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_poisson_conf_value_errors": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "ValueError",
    "astropy.stats.tests.test_funcs.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_poisson_limit_nodependencies": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "ImportError",
    "astropy.stats.tests.test_funcs.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_scipy_poisson_limit": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "astropy.stats.tests.test_funcs.pytest",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.test_signal_to_noise_oir_ccd": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "astropy.stats.tests.test_funcs.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_funcs.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_histogram": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.stats.tests.test_histogram.HAS_SCIPY": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "astropy.stats.tests.test_histogram.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_histogram.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_histogram.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_histogram.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_histogram.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_histogram.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_histogram.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_histogram.test_freedman_bin_width": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "astropy.stats.tests.test_histogram.pytest",
    "freedman_bin_width",
    "numpy.percentile",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_histogram.test_histogram": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "histogram",
    "len",
    "numpy.linspace",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_histogram.test_histogram_badargs": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "astropy.stats.tests.test_histogram.pytest",
    "histogram",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_histogram.test_histogram_output": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "histogram",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_histogram.test_histogram_output_knuth": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "astropy.stats.tests.test_histogram.pytest",
    "histogram",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_histogram.test_histogram_range": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "histogram",
    "numpy.random.RandomState",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_histogram.test_knuth_bin_width": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "astropy.stats.tests.test_histogram.pytest",
    "knuth_bin_width",
    "len",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_histogram.test_knuth_histogram": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "astropy.stats.tests.test_histogram.pytest",
    "histogram",
    "len",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_histogram.test_scott_bin_width": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "astropy.stats.tests.test_histogram.pytest",
    "numpy.random.RandomState",
    "numpy.std",
    "numpy.testing.assert_allclose",
    "scott_bin_width"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_histogram.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_info_theory": {
  "data": {},
  "type": "module"
 },
 "astropy.stats.tests.test_info_theory.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_info_theory.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.utils.assert_allclose"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_info_theory.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_info_theory.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_info_theory.test_akaike_info_criterion": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "akaike_info_criterion",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_info_theory.test_akaike_info_criterion_lsq": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "akaike_info_criterion_lsq",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_info_theory.test_bayesian_info_criterion": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "bayesian_info_criterion",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_info_theory.test_bayesian_info_criterion_lsq": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "bayesian_info_criterion_lsq",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_info_theory.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_jackknife": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.stats.tests.test_jackknife.HAS_SCIPY": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "astropy.stats.tests.test_jackknife.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_jackknife.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.utils.assert_allclose"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_jackknife.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_jackknife.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_jackknife.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_jackknife.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_jackknife.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_jackknife.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_jackknife.test_jackknife_resampling": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "jackknife_resampling",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_jackknife.test_jackknife_stats": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "astropy.stats.tests.test_jackknife.pytest",
    "jackknife_stats",
    "numpy.array",
    "numpy.mean",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_jackknife.test_jackknife_stats_conf_interval": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "astropy.stats.tests.test_jackknife.pytest",
    "jackknife_stats",
    "numpy.array",
    "numpy.reshape",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_jackknife.test_jackknife_stats_conf_interval.mle_var": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "len",
    "numpy.mean",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_jackknife.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_sigma_clipping": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.stats.tests.test_sigma_clipping.HAS_SCIPY": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "astropy.stats.tests.test_sigma_clipping.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_sigma_clipping.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_sigma_clipping.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_sigma_clipping.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_sigma_clipping.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_sigma_clipping.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_sigma_clipping.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_sigma_clipping.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_sigma_clipping.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_sigma_clipping.test_compare_to_scipy_sigmaclip": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "astropy.stats.tests.test_sigma_clipping.pytest",
    "len",
    "numpy.mean",
    "numpy.random.randn",
    "numpy.testing.assert_equal",
    "scipy.stats.sigmaclip",
    "sigma_clip"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_sigma_clipping.test_invalid_sigma_clip": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.nan",
    "numpy.ones",
    "sigma_clip"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_sigma_clipping.test_sigma_clip": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "numpy.all",
    "numpy.arange",
    "numpy.diag",
    "numpy.mean",
    "numpy.ones",
    "numpy.random.normal",
    "numpy.random.randn",
    "numpy.var",
    "sigma_clip",
    "sum"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_sigma_clipping.test_sigma_clip_class": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "SigmaClip",
    "numpy.random.randn",
    "numpy.testing.assert_equal",
    "sigma_clip",
    "sobj"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_sigma_clipping.test_sigma_clip_scalar_mask": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.arange",
    "sigma_clip"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_sigma_clipping.test_sigma_clipped_stats": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.ma.MaskedArray",
    "numpy.testing.assert_equal",
    "numpy.zeros_like",
    "sigma_clip",
    "sigma_clipped_stats"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_sigma_clipping.test_sigma_clipped_stats_ddof": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "sigma_clipped_stats"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_sigma_clipping.test_sigmaclip_empty": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal",
    "sigma_clip"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_sigma_clipping.test_sigmaclip_empty_masked": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.ma.MaskedArray",
    "numpy.ma.allequal",
    "sigma_clip"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_sigma_clipping.test_sigmaclip_fully_masked": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.ma.MaskedArray",
    "numpy.ma.allequal",
    "sigma_clip"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_sigma_clipping.test_sigmaclip_negative_axis": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "numpy.ones",
    "sigma_clip"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_sigma_clipping.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_spatial": {
  "data": {
   "symbols_in_volume": [
    "NumpyRNGContext",
    "numpy.array",
    "numpy.random.uniform"
   ]
  },
  "type": "module"
 },
 "astropy.stats.tests.test_spatial.a": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "astropy.stats.tests.test_spatial.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_spatial.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.utils.assert_allclose"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_spatial.b": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "astropy.stats.tests.test_spatial.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_spatial.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_spatial.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.stats.tests.test_spatial.test_ripley_K_implementation": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Kest",
    "RipleysKEstimator",
    "astropy.stats.tests.test_spatial.a",
    "astropy.stats.tests.test_spatial.b",
    "numpy.array",
    "numpy.linspace",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_spatial.test_ripley_large_density": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "Kest",
    "Kest.poisson",
    "RipleysKEstimator",
    "astropy.stats.tests.test_spatial.a",
    "astropy.stats.tests.test_spatial.b",
    "numpy.linspace",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_spatial.test_ripley_large_density_var_width": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "Kest",
    "Kest.poisson",
    "RipleysKEstimator",
    "astropy.stats.tests.test_spatial.a",
    "astropy.stats.tests.test_spatial.b",
    "numpy.linspace",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_spatial.test_ripley_modes": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "Kest",
    "Kest.poisson",
    "RipleysKEstimator",
    "astropy.stats.tests.test_spatial.a",
    "astropy.stats.tests.test_spatial.b",
    "numpy.linspace",
    "numpy.mean",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_spatial.test_ripley_uniform_property": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "Kest",
    "RipleysKEstimator",
    "astropy.stats.tests.test_spatial.a",
    "astropy.stats.tests.test_spatial.b",
    "numpy.linspace",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_spatial.test_ripley_var_width": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "Kest",
    "RipleysKEstimator",
    "astropy.stats.tests.test_spatial.a",
    "astropy.stats.tests.test_spatial.b",
    "numpy.linspace",
    "numpy.mean",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.stats.tests.test_spatial.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "astropy.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.table": {
  "data": {
   "symbols_in_volume": [
    "astropy.table.Conf"
   ]
  },
  "type": "module"
 },
 "astropy.table.Conf": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "astropy.table._config": {
  "data": {
   "shadows": "config"
  },
  "type": "import"
 },
 "astropy.table.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.table.bst": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.table.bst.BST"
   ]
  },
  "type": "module"
 },
 "astropy.table.bst.BST": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "astropy.table.bst.Node",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.table.bst.BST.__init__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.table.bst.BST.__repr__": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.bst.BST.__str__": {
  "data": {
   "lineno": 451
  },
  "type": "function"
 },
 "astropy.table.bst.BST._find_recursive": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.table.bst.BST._height": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "astropy.table.bst.BST._inorder": {
  "data": {
   "lineno": 313
  },
  "type": "function"
 },
 "astropy.table.bst.BST._is_valid": {
  "data": {
   "lineno": 385
  },
  "type": "function"
 },
 "astropy.table.bst.BST._postorder": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "astropy.table.bst.BST._preorder": {
  "data": {
   "lineno": 305
  },
  "type": "function"
 },
 "astropy.table.bst.BST._print": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.bst.BST._range": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "op1",
    "op2"
   ]
  },
  "type": "function"
 },
 "astropy.table.bst.BST._same_prefix": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.bst.BST._substitute": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "astropy.table.bst.BST.add": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ValueError",
    "sorted"
   ]
  },
  "type": "function"
 },
 "astropy.table.bst.BST.find": {
  "data": {
   "lineno": 208
  },
  "type": "function"
 },
 "astropy.table.bst.BST.find_node": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "astropy.table.bst.BST.height": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.bst.BST.is_valid": {
  "data": {
   "lineno": 379
  },
  "type": "function"
 },
 "astropy.table.bst.BST.items": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "astropy.table.bst.BST.range": {
  "data": {
   "lineno": 392
  },
  "type": "function"
 },
 "astropy.table.bst.BST.range_nodes": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "astropy.table.bst.operator"
   ]
  },
  "type": "function"
 },
 "astropy.table.bst.BST.remove": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.bst.BST.replace_rows": {
  "data": {
   "lineno": 480
  },
  "type": "function"
 },
 "astropy.table.bst.BST.same_prefix": {
  "data": {
   "lineno": 422
  },
  "type": "function"
 },
 "astropy.table.bst.BST.shift_left": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "astropy.table.bst.BST.shift_right": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "astropy.table.bst.BST.sort": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.table.bst.BST.sorted_data": {
  "data": {
   "lineno": 299
  },
  "type": "function"
 },
 "astropy.table.bst.BST.traverse": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.table.bst.Epsilon": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.table.bst.Epsilon.__eq__": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "astropy.table.bst.Epsilon.__gt__": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "astropy.table.bst.Epsilon.__init__": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "astropy.table.bst.Epsilon.__lt__": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "astropy.table.bst.Epsilon.__repr__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.table.bst.FastBST": {
  "data": {
   "lineno": 680
  },
  "type": "constant"
 },
 "astropy.table.bst.FastBase": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.table.bst.FastBase.__init__": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.table.bst.FastBase.__repr__": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.bst.FastBase.__str__": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.bst.FastBase.add": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "ValueError",
    "numpy.searchsorted"
   ]
  },
  "type": "function"
 },
 "astropy.table.bst.FastBase.find": {
  "data": {
   "lineno": 531
  },
  "type": "function"
 },
 "astropy.table.bst.FastBase.items": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.bst.FastBase.range": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "astropy.table.bst.Epsilon"
   ]
  },
  "type": "function"
 },
 "astropy.table.bst.FastBase.remove": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.bst.FastBase.replace_rows": {
  "data": {
   "lineno": 645
  },
  "type": "function"
 },
 "astropy.table.bst.FastBase.shift_left": {
  "data": {
   "lineno": 564
  },
  "type": "function"
 },
 "astropy.table.bst.FastBase.shift_right": {
  "data": {
   "lineno": 576
  },
  "type": "function"
 },
 "astropy.table.bst.FastBase.sort": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.table.bst.FastBase.sorted_data": {
  "data": {
   "lineno": 621
  },
  "type": "function"
 },
 "astropy.table.bst.FastBase.traverse": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "astropy.table.bst.Node"
   ]
  },
  "type": "function"
 },
 "astropy.table.bst.FastBinaryTree": {
  "data": {
   "shadows": "bintrees.FastBinaryTree"
  },
  "type": "import"
 },
 "astropy.table.bst.FastRBT": {
  "data": {
   "lineno": 681
  },
  "type": "constant"
 },
 "astropy.table.bst.FastRBTree": {
  "data": {
   "shadows": "bintrees.FastRBTree"
  },
  "type": "import"
 },
 "astropy.table.bst.MaxValue": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.table.bst.MaxValue.__ge__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "astropy.table.bst.MaxValue.__gt__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "astropy.table.bst.MaxValue.__le__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "astropy.table.bst.MaxValue.__lt__": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "astropy.table.bst.MaxValue.__repr__": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "astropy.table.bst.MinValue": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.table.bst.MinValue.__ge__": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "astropy.table.bst.MinValue.__gt__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "astropy.table.bst.MinValue.__le__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "astropy.table.bst.MinValue.__lt__": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "astropy.table.bst.MinValue.__repr__": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "astropy.table.bst.Node": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.table.bst.Node.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.table.bst.Node.__repr__": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.bst.Node.__str__": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.bst.Node.remove": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "astropy.table.bst.Node.replace": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.table.bst.Node.set": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "astropy.table.bst.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.table.bst.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.table.bst.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.table.bst.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "astropy.table.bst.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.table.bst.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.table.column": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.table.column.StringTruncateWarning",
    "astropy.table.column.warnings",
    "numpy.equal",
    "numpy.greater",
    "numpy.greater_equal",
    "numpy.isfinite",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.less",
    "numpy.less_equal",
    "numpy.ma.core.MaskedArrayFutureWarning",
    "numpy.not_equal",
    "numpy.sign",
    "numpy.signbit",
    "set"
   ]
  },
  "type": "module"
 },
 "astropy.table.column.BaseColumn": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "MetaData",
    "astropy.table.column.ColumnInfo",
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "astropy.table.column.BaseColumn.__array_finalize__": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "astropy.table.column.BaseColumn",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.BaseColumn.__array_wrap__": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "astropy.table.column.BaseColumn",
    "astropy.table.column._comparison_functions",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.BaseColumn.__new__": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "astropy.table.column.BaseColumn",
    "copy.deepcopy",
    "fix_column_name",
    "format",
    "getattr",
    "hasattr",
    "isinstance",
    "numpy.array",
    "numpy.dtype",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.BaseColumn.__reduce__": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ma.MaskedArray",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.BaseColumn.__repr__": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.BaseColumn.__setstate__": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ma.MaskedArray",
    "numpy.ndarray",
    "setattr",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.BaseColumn._copy_attrs": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "copy.deepcopy",
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.BaseColumn._copy_groups": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.BaseColumn._encode_str": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "numpy.asarray",
    "numpy.char.encode",
    "numpy.ma.masked",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.BaseColumn._formatter": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "astropy.table.column.FORMATTER",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.BaseColumn.attrs_equal": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "astropy.table.column.BaseColumn",
    "getattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.BaseColumn.convert_unit_to": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.BaseColumn.copy": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.BaseColumn.data": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "numpy.ndarray",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.BaseColumn.descr": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.BaseColumn.group_by": {
  "data": {
   "lineno": 628
  },
  "type": "function"
 },
 "astropy.table.column.BaseColumn.groups": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.BaseColumn.iter_str_vals": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "_pformat_col_iter"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.BaseColumn.more": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "_more_tabcol"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.BaseColumn.name": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "fix_column_name"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.BaseColumn.parent_table": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "astropy.table.column.weakref"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.BaseColumn.pformat": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "_pformat_col"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.BaseColumn.pprint": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "_pformat_col",
    "color_print",
    "enumerate",
    "print"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.BaseColumn.quantity": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "Quantity",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.BaseColumn.to": {
  "data": {
   "lineno": 679
  },
  "type": "function"
 },
 "astropy.table.column.BaseColumn.unit": {
  "data": {
   "lineno": 589
  },
  "type": "function"
 },
 "astropy.table.column.Column": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "_make_compare",
    "astropy.table.column.BaseColumn"
   ]
  },
  "type": "class"
 },
 "astropy.table.column.Column.__bytes__": {
  "data": {
   "lineno": 871
  },
  "type": "function"
 },
 "astropy.table.column.Column.__new__": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "TypeError",
    "astropy.table.column.Column",
    "format",
    "isinstance",
    "numpy.any",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.Column.__repr__": {
  "data": {
   "lineno": 858
  },
  "type": "function"
 },
 "astropy.table.column.Column.__setattr__": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "AttributeError",
    "astropy.table.column.Column",
    "isinstance",
    "issubclass",
    "numpy.number",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.Column.__setitem__": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "issubclass",
    "len",
    "numpy.character"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.Column.__setslice__": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.Column.__unicode__": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.Column._base_repr_": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "dtype_info_name",
    "isinstance",
    "len",
    "repr",
    "str",
    "xml_escape"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.Column._check_string_truncate": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "astropy.table.column.StringTruncateWarning",
    "astropy.table.column.warnings",
    "dtype_bytes_or_chars",
    "numpy.asanyarray",
    "numpy.char.str_len"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.Column._make_compare": {
  "data": {
   "lineno": 920
  },
  "type": "function"
 },
 "astropy.table.column.Column._make_compare._compare": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.Column._repr_html_": {
  "data": {
   "lineno": 855
  },
  "type": "function"
 },
 "astropy.table.column.Column.insert": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.insert"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.ColumnInfo": {
  "data": {
   "lineno": 146
  },
  "type": "class"
 },
 "astropy.table.column.ColumnInfo.new_like": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "astropy.table.column.FORMATTER": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "astropy.table.column.FalseArray": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "astropy.table.column.FalseArray.__new__": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.FalseArray.__setitem__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.FalseArray.__setslice__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.MaskedArrayFutureWarning": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.table.column.MaskedColumn": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "astropy.table.column.BaseColumn",
    "astropy.table.column.Column",
    "numpy.ma.MaskedArray"
   ]
  },
  "type": "class"
 },
 "astropy.table.column.MaskedColumn.__new__": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "astropy.table.column.BaseColumn",
    "copy.deepcopy",
    "format",
    "getattr",
    "hasattr",
    "numpy.ma.MaskedArray.__new__"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.MaskedColumn.__setitem__": {
  "data": {
   "lineno": 1231,
   "symbols_in_volume": [
    "astropy.table.column.warnings",
    "issubclass",
    "len",
    "numpy.character",
    "numpy.ma.MaskedArray.__setitem__",
    "numpy.ma.asanyarray",
    "numpy.ma.core.MaskedArrayFutureWarning"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.MaskedColumn._copy_attrs_slice": {
  "data": {
   "lineno": 1220
  },
  "type": "function"
 },
 "astropy.table.column.MaskedColumn.data": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": [
    "numpy.ma.MaskedArray",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.MaskedColumn.fill_value": {
  "data": {
   "lineno": 1106
  },
  "type": "function"
 },
 "astropy.table.column.MaskedColumn.filled": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": [
    "astropy.table.column.Column",
    "astropy.table.column.MaskedColumn",
    "column_cls",
    "copy.deepcopy",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.MaskedColumn.insert": {
  "data": {
   "lineno": 1164,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.bool",
    "numpy.insert",
    "numpy.ma.array",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.StringTruncateWarning": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "astropy.table.column._auto_names": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.column._comparison_functions": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "astropy.table.column.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.table.column.col_copy": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "copy.deepcopy",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.table.column.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "astropy.table.column.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.table.column.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "astropy.table.column.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.table.column.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.table.column.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.table.column.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.table.column.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.table.column.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "astropy.table.conf": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "astropy.table.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.table.info": {
  "data": {},
  "type": "module"
 },
 "astropy.table.info.TableInfo": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "astropy.table.info.table_info"
   ]
  },
  "type": "class"
 },
 "astropy.table.info.TableInfo.__call__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "astropy.table.info.table_info"
   ]
  },
  "type": "function"
 },
 "astropy.table.info.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "astropy.table.info.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.table.info.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.table.info.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.table.info.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.table.info.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.table.info.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.table.info.table_info": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Table",
    "astropy.table.info.os",
    "astropy.table.info.sys",
    "isinstance",
    "len",
    "list",
    "numpy.all",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.table.info.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.table.jsviewer": {
  "data": {
   "symbols_in_volume": [
    "astropy.table.jsviewer.Conf",
    "astropy.table.jsviewer._SORTING_SCRIPT_PART_1",
    "astropy.table.jsviewer._SORTING_SCRIPT_PART_2",
    "astropy.table.jsviewer.write_table_jsviewer",
    "dict",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "astropy.table.jsviewer.Conf": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "astropy.table.jsviewer.DEFAULT_CSS": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "astropy.table.jsviewer.DEFAULT_CSS_NB": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "astropy.table.jsviewer.EXTERN_CSS_DIR": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "astropy.table.jsviewer.EXTERN_JS_DIR": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "astropy.table.jsviewer.HTML_JS_SCRIPT": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "astropy.table.jsviewer.IPYNB_JS_SCRIPT": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "astropy.table.jsviewer.JSViewer": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.table.jsviewer.JSViewer.__init__": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "astropy.table.jsviewer.JSViewer._jstable_file": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "astropy.table.jsviewer.EXTERN_JS_DIR",
    "astropy.table.jsviewer.conf",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "astropy.table.jsviewer.JSViewer.css_urls": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "astropy.table.jsviewer.EXTERN_CSS_DIR",
    "astropy.table.jsviewer.conf",
    "os.path.join",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.jsviewer.JSViewer.html_js": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "astropy.table.jsviewer.HTML_JS_SCRIPT"
   ]
  },
  "type": "function"
 },
 "astropy.table.jsviewer.JSViewer.ipynb": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "astropy.table.jsviewer.DEFAULT_CSS_NB",
    "astropy.table.jsviewer.IPYNB_JS_SCRIPT"
   ]
  },
  "type": "function"
 },
 "astropy.table.jsviewer.JSViewer.jquery_urls": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "astropy.table.jsviewer.EXTERN_JS_DIR",
    "astropy.table.jsviewer.conf",
    "os.path.join",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.jsviewer._SORTING_SCRIPT_PART_1": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "astropy.table.jsviewer._SORTING_SCRIPT_PART_2": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "astropy.table.jsviewer._config": {
  "data": {
   "shadows": "config"
  },
  "type": "import"
 },
 "astropy.table.jsviewer.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "astropy.table.jsviewer.conf": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "astropy.table.jsviewer.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "astropy.table.jsviewer.io_registry": {
  "data": {
   "shadows": "registry"
  },
  "type": "import"
 },
 "astropy.table.jsviewer.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "astropy.table.jsviewer.write_table_jsviewer": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "astropy.table.jsviewer.DEFAULT_CSS",
    "astropy.table.jsviewer.JSViewer",
    "enumerate",
    "id",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.meta": {
  "data": {},
  "type": "module"
 },
 "astropy.table.meta.ColumnDict": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "astropy.table.meta.ColumnDict.items": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "astropy.table.meta.ColumnDict",
    "astropy.table.meta.ColumnOrderList",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.table.meta.ColumnOrderList": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "class"
 },
 "astropy.table.meta.ColumnOrderList.sort": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "astropy.table.meta.ColumnOrderList",
    "dict",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.table.meta.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.table.meta.YamlParseError": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "astropy.table.meta.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "astropy.table.meta._construct_odict": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "astropy.table.meta.yaml",
    "collections.OrderedDict",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.meta._get_col_attributes": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "astropy.table.meta.ColumnDict",
    "getattr",
    "nontrivial",
    "str",
    "xform"
   ]
  },
  "type": "function"
 },
 "astropy.table.meta._repr_column_dict": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "astropy.table.meta._repr_odict": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "astropy.table.meta._repr_pairs"
   ]
  },
  "type": "function"
 },
 "astropy.table.meta._repr_pairs": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "astropy.table.meta.yaml",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.table.meta.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "astropy.table.meta.get_header_from_yaml": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "astropy.table.meta.YamlParseError",
    "astropy.table.meta._construct_odict",
    "astropy.table.meta.textwrap",
    "astropy.table.meta.yaml",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.meta.get_header_from_yaml.TableLoader": {
  "data": {
   "lineno": 327
  },
  "type": "class"
 },
 "astropy.table.meta.get_yaml_from_header": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ImportError",
    "astropy.table.meta.ColumnDict",
    "astropy.table.meta._get_col_attributes",
    "astropy.table.meta._repr_column_dict",
    "astropy.table.meta._repr_odict",
    "astropy.table.meta.copy",
    "astropy.table.meta.yaml",
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.table.meta.get_yaml_from_header.TableDumper": {
  "data": {
   "lineno": 239
  },
  "type": "class"
 },
 "astropy.table.meta.get_yaml_from_header.TableDumper.represent_mapping": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "TypeError",
    "astropy.table.meta.yaml",
    "hasattr",
    "isinstance",
    "list",
    "sorted"
   ]
  },
  "type": "function"
 },
 "astropy.table.meta.get_yaml_from_table": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "astropy.table.meta.get_yaml_from_header",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.table.meta.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "astropy.table.meta.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "astropy.table.np_utils": {
  "data": {},
  "type": "module"
 },
 "astropy.table.np_utils.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "astropy.table.np_utils.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.table.np_utils.TableMergeError": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "astropy.table.np_utils.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.table.np_utils._check_for_sequence_of_structured_arrays": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.table.np_utils.collections",
    "isinstance",
    "len",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.table.np_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.table.np_utils.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "astropy.table.np_utils.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "astropy.table.np_utils.common_dtype": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "astropy.table.np_utils.TableMergeError",
    "issubclass",
    "len",
    "numpy.array",
    "numpy.bool_",
    "numpy.character",
    "numpy.empty",
    "numpy.number",
    "numpy.object_",
    "numpy.void",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.table.np_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.table.np_utils.fix_column_name": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.np_utils.get_col_name_map": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "any",
    "astropy.table.np_utils.TableMergeError",
    "astropy.table.np_utils.collections",
    "collections.Counter",
    "collections.OrderedDict",
    "enumerate",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.table.np_utils.get_descrs": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "astropy.table.np_utils.TableMergeError",
    "astropy.table.np_utils.common_dtype",
    "astropy.table.np_utils.fix_column_name",
    "len",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.table.np_utils.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "astropy.table.np_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.table.np_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.table.np_utils.recarray_fromrecords": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.rec.fromarrays",
    "object",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.table.np_utils.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.table.operations": {
  "data": {},
  "type": "module"
 },
 "astropy.table.operations.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "astropy.table.operations.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.table.operations.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "astropy.table.operations._get_list_of_tables": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "Table",
    "TypeError",
    "any",
    "astropy.table.operations.collections",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.operations._get_out_class": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "astropy.table.operations._hstack": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "NotImplementedError",
    "TableMergeError",
    "ValueError",
    "any",
    "astropy.table.operations._get_out_class",
    "astropy.table.operations.collections",
    "astropy.table.operations.get_col_name_map",
    "getattr",
    "isinstance",
    "len",
    "max",
    "min",
    "numpy.arange",
    "range",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.table.operations._join": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "NotImplementedError",
    "TableMergeError",
    "ValueError",
    "astropy.table.operations._get_out_class",
    "astropy.table.operations.collections",
    "astropy.table.operations.get_col_name_map",
    "astropy.table.operations.get_descrs",
    "bool",
    "hasattr",
    "isinstance",
    "issubclass",
    "len",
    "numpy.any",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.flatnonzero",
    "numpy.ndarray",
    "numpy.where",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.table.operations._merge_table_meta": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "astropy.table.operations._vstack": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "NotImplementedError",
    "TableMergeError",
    "ValueError",
    "all",
    "any",
    "astropy.table.operations._get_out_class",
    "astropy.table.operations.collections",
    "astropy.table.operations.get_col_name_map",
    "astropy.table.operations.itertools",
    "collections.OrderedDict",
    "getattr",
    "hasattr",
    "isinstance",
    "len",
    "set",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.table.operations.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.table.operations.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "astropy.table.operations.common_dtype": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "TableMergeError"
   ]
  },
  "type": "function"
 },
 "astropy.table.operations.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "astropy.table.operations.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.table.operations.get_col_name_map": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "TableMergeError",
    "any",
    "astropy.table.operations.collections",
    "collections.Counter",
    "collections.OrderedDict",
    "enumerate",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.table.operations.get_descrs": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "TableMergeError",
    "astropy.table.operations.common_dtype",
    "fix_column_name",
    "len",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.table.operations.hstack": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "astropy.table.operations._get_list_of_tables",
    "astropy.table.operations._hstack",
    "astropy.table.operations._merge_table_meta",
    "collections.OrderedDict",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.operations.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "astropy.table.operations.join": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "Table",
    "astropy.table.operations._join",
    "astropy.table.operations._merge_table_meta",
    "collections.OrderedDict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.table.operations.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "astropy.table.operations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.table.operations.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.table.operations.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.table.operations.unique": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "numpy.any",
    "numpy.diff",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.table.operations.vstack": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "astropy.table.operations._get_list_of_tables",
    "astropy.table.operations._merge_table_meta",
    "astropy.table.operations._vstack",
    "collections.OrderedDict",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.operations.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.table.pprint": {
  "data": {},
  "type": "module"
 },
 "astropy.table.pprint.TableFormatter": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.table.pprint.TableFormatter._get_pprint_size": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "astropy.table.pprint.sys",
    "staticmethod",
    "terminal_size"
   ]
  },
  "type": "function"
 },
 "astropy.table.pprint.TableFormatter._more_tabcol": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "Exception",
    "Getch",
    "astropy.table.pprint.os",
    "color_print",
    "dict",
    "hasattr",
    "inkey",
    "len",
    "print",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.table.pprint.TableFormatter._pformat_col": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.pprint.re",
    "enumerate",
    "getattr",
    "isinstance",
    "len",
    "list",
    "max",
    "xml_escape"
   ]
  },
  "type": "function"
 },
 "astropy.table.pprint.TableFormatter._pformat_col_iter": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "AttributeError",
    "astropy.table.pprint._format_funcs",
    "astropy.table.pprint._possible_string_format_functions",
    "astropy.table.pprint.get_auto_format_func",
    "dtype_info_name",
    "format_func",
    "getattr",
    "id",
    "len",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.prod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.table.pprint.TableFormatter._pformat_table": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "id",
    "isinstance",
    "len",
    "list",
    "outwidth",
    "range",
    "sum",
    "tuple",
    "type",
    "xml_escape",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.table.pprint.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "astropy.table.pprint._format_funcs": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "astropy.table.pprint._possible_string_format_functions": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "format"
   ]
  },
  "type": "function"
 },
 "astropy.table.pprint._use_str_for_masked_values": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "format_func",
    "numpy.ma.masked",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.pprint.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.table.pprint.default_format_func": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "text_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.pprint.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.table.pprint.get_auto_format_func": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "astropy.table.pprint._possible_string_format_functions"
   ]
  },
  "type": "function"
 },
 "astropy.table.pprint.get_auto_format_func._auto_format_func": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "astropy.table.pprint._format_funcs",
    "astropy.table.pprint._use_str_for_masked_values",
    "astropy.table.pprint.default_format_func",
    "format_",
    "format_func",
    "isinstance",
    "numpy.ma.masked",
    "possible_string_format_functions",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.table.pprint.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.table.pprint.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.table.pprint.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.table.pprint.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.table.pprint.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.table.pprint.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.table.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.table.row": {
  "data": {
   "symbols_in_volume": [
    "astropy.table.row.Row",
    "astropy.table.row.collections"
   ]
  },
  "type": "module"
 },
 "astropy.table.row.Row": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.table.row.Row.__array__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "astropy.table.row.Row.__bytes__": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "astropy.table.row.Row.__eq__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.table.row.Row.__getitem__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "astropy.table.row.Row.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "IndexError",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.row.Row.__iter__": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "astropy.table.row.Row.__len__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.row.Row.__ne__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.table.row.Row.__repr__": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "astropy.table.row.Row.__setitem__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "astropy.table.row.Row.__unicode__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.row.Row._base_repr_": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "id",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.row.Row._repr_html_": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "astropy.table.row.Row.as_void": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "descr",
    "hasattr",
    "numpy.array",
    "numpy.asarray",
    "numpy.bool",
    "numpy.ma.mvoid",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.table.row.Row.colnames": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.row.Row.columns": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.row.Row.dtype": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.row.Row.index": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.row.Row.meta": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.row.Row.table": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.row.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.table.row.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "astropy.table.row.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.table.row.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.table.row.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.table.row.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.table.serialize": {
  "data": {},
  "type": "module"
 },
 "astropy.table.serialize.SerializedColumn": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "astropy.table.serialize.__construct_mixin_classes": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "astropy.table.serialize._construct_mixin_from_columns": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "astropy.table.serialize.SerializedColumn",
    "astropy.table.serialize._construct_mixin_from_obj_attrs_and_info",
    "getattr",
    "isinstance",
    "len",
    "min",
    "nontrivial"
   ]
  },
  "type": "function"
 },
 "astropy.table.serialize._construct_mixin_from_obj_attrs_and_info": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.serialize.__construct_mixin_classes",
    "astropy.table.serialize.re",
    "getattr",
    "importlib.import_module",
    "setattr"
   ]
  },
  "type": "function"
 },
 "astropy.table.serialize._construct_mixins_from_columns": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "QTable",
    "Table",
    "any",
    "astropy.table.serialize._construct_mixin_from_columns",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.table.serialize._represent_mixin_as_column": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "Column",
    "astropy.table.serialize.SerializedColumn",
    "getattr",
    "has_info_class",
    "len",
    "nontrivial",
    "str",
    "xform"
   ]
  },
  "type": "function"
 },
 "astropy.table.serialize._represent_mixins_as_columns": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "Table",
    "astropy.table.serialize._represent_mixin_as_column",
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "astropy.table.serialize.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "astropy.table.serialize.import_module": {
  "data": {
   "shadows": "importlib.import_module"
  },
  "type": "import"
 },
 "astropy.table.serialize.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.table.setup_package": {
  "data": {
   "symbols_in_volume": [
    "astropy.table.setup_package.os"
   ]
  },
  "type": "module"
 },
 "astropy.table.setup_package.Extension": {
  "data": {
   "shadows": "distutils.extension.Extension"
  },
  "type": "import"
 },
 "astropy.table.setup_package.ROOT": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "astropy.table.setup_package.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.table.setup_package.get_extensions": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "astropy.table.setup_package.ROOT",
    "astropy.table.setup_package.os",
    "distutils.extension.Extension"
   ]
  },
  "type": "function"
 },
 "astropy.table.setup_package.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.table.setup_package.requires_2to3": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "astropy.table.sorted_array": {
  "data": {},
  "type": "module"
 },
 "astropy.table.sorted_array.SortedArray": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.table.sorted_array.SortedArray.__getitem__": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "astropy.table.sorted_array.SortedArray"
   ]
  },
  "type": "function"
 },
 "astropy.table.sorted_array.SortedArray.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.sorted_array.SortedArray.__repr__": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.sorted_array.SortedArray.__str__": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.table.sorted_array.SortedArray._get_key_slice": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "astropy.table.sorted_array.SortedArray.add": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.table.sorted_array.SortedArray.cols": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.sorted_array.SortedArray.find": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "astropy.table.sorted_array._searchsorted",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.table.sorted_array.SortedArray.find_pos": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "astropy.table.sorted_array._searchsorted",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.table.sorted_array.SortedArray.items": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "enumerate",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.table.sorted_array.SortedArray.range": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.table.sorted_array.SortedArray.remove": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "len",
    "numpy.bool",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.table.sorted_array.SortedArray.replace_rows": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.array",
    "numpy.bool",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.table.sorted_array.SortedArray.shift_left": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "astropy.table.sorted_array.SortedArray.shift_right": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "astropy.table.sorted_array.SortedArray.sort": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "len",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.table.sorted_array.SortedArray.sorted_data": {
  "data": {
   "lineno": 294
  },
  "type": "function"
 },
 "astropy.table.sorted_array._searchsorted": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.sorted_array.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.table.sorted_array.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.table.sorted_array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.table.sorted_array.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.table.sorted_array.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.table.table": {
  "data": {},
  "type": "module"
 },
 "astropy.table.table.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "astropy.table.table.HTML": {
  "data": {
   "shadows": "IPython.display.HTML"
  },
  "type": "import"
 },
 "astropy.table.table.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "astropy.table.table.NdarrayMixin": {
  "data": {
   "lineno": 2816,
   "symbols_in_volume": [
    "ParentDtypeInfo",
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "astropy.table.table.NdarrayMixin.__array_finalize__": {
  "data": {
   "lineno": 2830,
   "symbols_in_volume": [
    "astropy.table.table.NdarrayMixin",
    "getattr",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.NdarrayMixin.__new__": {
  "data": {
   "lineno": 2824,
   "symbols_in_volume": [
    "cls",
    "getattr",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.NdarrayMixin.__reduce__": {
  "data": {
   "lineno": 2843,
   "symbols_in_volume": [
    "astropy.table.table.NdarrayMixin",
    "list",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.NdarrayMixin.__setstate__": {
  "data": {
   "lineno": 2851,
   "symbols_in_volume": [
    "astropy.table.table.NdarrayMixin",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.table.table.QTable": {
  "data": {
   "lineno": 2762,
   "symbols_in_volume": [
    "astropy.table.table.Table"
   ]
  },
  "type": "class"
 },
 "astropy.table.table.QTable._add_as_mixin_column": {
  "data": {
   "lineno": 2795,
   "symbols_in_volume": [
    "astropy.table.table.has_info_class"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.QTable._convert_col_for_table": {
  "data": {
   "lineno": 2802,
   "symbols_in_volume": [
    "Column",
    "astropy.table.table.QTable",
    "getattr",
    "isinstance",
    "q_cls",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "MetaData",
    "TableInfo",
    "astropy.table.table.TableColumns",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.table.table.Table.ColumnClass": {
  "data": {
   "lineno": 1418,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.__array__": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.__bytes__": {
  "data": {
   "lineno": 882
  },
  "type": "function"
 },
 "astropy.table.table.Table.__copy__": {
  "data": {
   "lineno": 2577
  },
  "type": "function"
 },
 "astropy.table.table.Table.__deepcopy__": {
  "data": {
   "lineno": 2574
  },
  "type": "function"
 },
 "astropy.table.table.Table.__delitem__": {
  "data": {
   "lineno": 1368,
   "symbols_in_volume": [
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.__eq__": {
  "data": {
   "lineno": 2608,
   "symbols_in_volume": [
    "astropy.table.table.Table",
    "bool",
    "isinstance",
    "numpy.ma.MaskedArray",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.__ge__": {
  "data": {
   "lineno": 2601,
   "symbols_in_volume": [
    "TypeError",
    "astropy.table.table.Table",
    "str",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.__getitem__": {
  "data": {
   "lineno": 1222,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "copy.deepcopy",
    "int",
    "isinstance",
    "list",
    "numpy.integer",
    "numpy.ndarray",
    "slice",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.__getstate__": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "col_copy",
    "collections.OrderedDict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.__gt__": {
  "data": {
   "lineno": 2587,
   "symbols_in_volume": [
    "TypeError",
    "astropy.table.table.Table",
    "str",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.__init__": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "ValueError",
    "all",
    "astropy.table.table.Table",
    "bool",
    "collections.Mapping",
    "dict",
    "fix_column_name",
    "hasattr",
    "init_func",
    "isinstance",
    "len",
    "list",
    "numpy.dtype",
    "numpy.ndarray",
    "numpy.newaxis",
    "recarray_fromrecords",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.__le__": {
  "data": {
   "lineno": 2594,
   "symbols_in_volume": [
    "TypeError",
    "astropy.table.table.Table",
    "str",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.__len__": {
  "data": {
   "lineno": 1436,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.__lt__": {
  "data": {
   "lineno": 2580,
   "symbols_in_volume": [
    "TypeError",
    "astropy.table.table.Table",
    "str",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.__ne__": {
  "data": {
   "lineno": 2632
  },
  "type": "function"
 },
 "astropy.table.table.Table.__repr__": {
  "data": {
   "lineno": 874
  },
  "type": "function"
 },
 "astropy.table.table.Table.__setitem__": {
  "data": {
   "lineno": 1258,
   "symbols_in_volume": [
    "Exception",
    "NewColumn",
    "TypeError",
    "ValueError",
    "all",
    "astropy.table.table.Table",
    "astropy.table.table.itertools",
    "col_copy",
    "getattr",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.asarray",
    "numpy.integer",
    "numpy.isscalar",
    "numpy.ndarray",
    "slice",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.__setstate__": {
  "data": {
   "lineno": 424
  },
  "type": "function"
 },
 "astropy.table.table.Table.__unicode__": {
  "data": {
   "lineno": 877
  },
  "type": "function"
 },
 "astropy.table.table.Table._add_as_mixin_column": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "astropy.table.table.has_info_class",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table._base_repr_": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "astropy.table.table.descr",
    "id",
    "isinstance",
    "len",
    "xml_escape"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table._check_names_dtype": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "ValueError",
    "isiterable",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table._convert_col_for_table": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table._convert_string_dtype": {
  "data": {
   "lineno": 1993,
   "symbols_in_volume": [
    "any",
    "astropy.table.table.re"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table._init_from_cols": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table._init_from_dict": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table._init_from_list": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "ValueError",
    "_auto_names",
    "all",
    "col_copy",
    "dict",
    "isinstance",
    "isiterable",
    "len",
    "numpy.ndarray",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table._init_from_list_of_dicts": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "all",
    "enumerate",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table._init_from_ndarray": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "_auto_names",
    "enumerate",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table._init_from_table": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "copy.deepcopy",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table._make_index_row_display_table": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "len",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table._make_table_from_cols": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "FalseArray",
    "TypeError",
    "ValueError",
    "hasattr",
    "len",
    "set",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table._mask": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table._new_from_slice": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "copy.deepcopy",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table._replace_cols": {
  "data": {
   "lineno": 2364,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table._replace_column_warnings": {
  "data": {
   "lineno": 1710,
   "symbols_in_volume": [
    "AttributeError",
    "astropy.table.table.TableReplaceWarning",
    "astropy.table.table.sys",
    "astropy.table.table.warnings",
    "getattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table._repr_html_": {
  "data": {
   "lineno": 870
  },
  "type": "function"
 },
 "astropy.table.table.Table._set_masked": {
  "data": {
   "lineno": 1387,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table._set_masked_from_cols": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "any",
    "isinstance",
    "numpy.any",
    "numpy.ma.MaskedArray"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.add_column": {
  "data": {
   "lineno": 1484,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.add_columns": {
  "data": {
   "lineno": 1573,
   "symbols_in_volume": [
    "ValueError",
    "col_copy",
    "enumerate",
    "len",
    "list",
    "range",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.add_index": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "Index",
    "ValueError",
    "getattr",
    "isinstance",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.add_row": {
  "data": {
   "lineno": 2171,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.argsort": {
  "data": {
   "lineno": 2373,
   "symbols_in_volume": [
    "get_index",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.as_array": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "astropy.table.table.descr",
    "astropy.table.table.sys",
    "empty_init",
    "len",
    "numpy.dtype",
    "numpy.empty",
    "numpy.ma.empty"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.colnames": {
  "data": {
   "lineno": 1429,
   "symbols_in_volume": [
    "list",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.convert_bytestring_to_unicode": {
  "data": {
   "lineno": 2025
  },
  "type": "function"
 },
 "astropy.table.table.Table.convert_unicode_to_bytestring": {
  "data": {
   "lineno": 2047
  },
  "type": "function"
 },
 "astropy.table.table.Table.copy": {
  "data": {
   "lineno": 2552,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.dtype": {
  "data": {
   "lineno": 1425,
   "symbols_in_volume": [
    "astropy.table.table.descr",
    "numpy.dtype",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.field": {
  "data": {
   "lineno": 1374
  },
  "type": "function"
 },
 "astropy.table.table.Table.filled": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.from_pandas": {
  "data": {
   "lineno": 2713,
   "symbols_in_volume": [
    "Column",
    "MaskedColumn",
    "all",
    "bytes",
    "classmethod",
    "cls",
    "collections.OrderedDict",
    "isinstance",
    "numpy.any",
    "numpy.array",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.group_by": {
  "data": {
   "lineno": 2641,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.groups": {
  "data": {
   "lineno": 2635,
   "symbols_in_volume": [
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.has_mixin_columns": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "any",
    "astropy.table.table.has_info_class",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.iloc": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "TableILoc",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.index_column": {
  "data": {
   "lineno": 1447,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.index_mode": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "_IndexModeContext"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.indices": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "TableIndices",
    "property",
    "sum"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.insert_row": {
  "data": {
   "lineno": 2224,
   "symbols_in_volume": [
    "Exception",
    "FalseArray",
    "IndexError",
    "TypeError",
    "ValueError",
    "_is_mapping",
    "any",
    "hasattr",
    "isinstance",
    "isiterable",
    "len",
    "numpy.zeros",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.insert_row._is_mapping": {
  "data": {
   "lineno": 2259,
   "symbols_in_volume": [
    "all",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.itercols": {
  "data": {
   "lineno": 816
  },
  "type": "function"
 },
 "astropy.table.table.Table.keep_columns": {
  "data": {
   "lineno": 2068,
   "symbols_in_volume": [
    "KeyError",
    "isinstance",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.keys": {
  "data": {
   "lineno": 1433,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.loc": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "TableLoc",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.mask": {
  "data": {
   "lineno": 444
  },
  "type": "function"
 },
 "astropy.table.table.Table.masked": {
  "data": {
   "lineno": 1382,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.more": {
  "data": {
   "lineno": 1184
  },
  "type": "function"
 },
 "astropy.table.table.Table.pformat": {
  "data": {
   "lineno": 1113,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.pprint": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "color_print",
    "enumerate",
    "len",
    "print"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.read": {
  "data": {
   "lineno": 2505,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "classmethod",
    "cls",
    "cls.__name__"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.remove_column": {
  "data": {
   "lineno": 1896
  },
  "type": "function"
 },
 "astropy.table.table.Table.remove_columns": {
  "data": {
   "lineno": 1937,
   "symbols_in_volume": [
    "KeyError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.remove_indices": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.remove_row": {
  "data": {
   "lineno": 1795,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.remove_rows": {
  "data": {
   "lineno": 1833,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.bool",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.rename_column": {
  "data": {
   "lineno": 2127,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.replace_column": {
  "data": {
   "lineno": 1765,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.reverse": {
  "data": {
   "lineno": 2472
  },
  "type": "function"
 },
 "astropy.table.table.Table.show_in_browser": {
  "data": {
   "lineno": 1034,
   "symbols_in_volume": [
    "astropy.table.table.os",
    "astropy.table.table.tempfile",
    "astropy.table.table.webbrowser",
    "open",
    "pathname2url",
    "urljoin"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.show_in_notebook": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "IPython.display.HTML",
    "JSViewer",
    "enumerate",
    "id",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.sort": {
  "data": {
   "lineno": 2414,
   "symbols_in_volume": [
    "ValueError",
    "get_index",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.to_pandas": {
  "data": {
   "lineno": 2671,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "collections.OrderedDict",
    "float",
    "getattr",
    "isinstance",
    "numpy.nan",
    "numpy.object",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.Table.write": {
  "data": {
   "lineno": 2535
  },
  "type": "function"
 },
 "astropy.table.table.TableColumns": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "class"
 },
 "astropy.table.table.TableColumns.__getitem__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "IndexError",
    "collections.OrderedDict.__getitem__",
    "int",
    "isinstance",
    "list",
    "numpy.integer",
    "numpy.ndarray",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.TableColumns.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "astropy.table.table.TableColumns",
    "astropy.table.table.has_info_class",
    "isinstance",
    "list",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.TableColumns.__repr__": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "astropy.table.table.TableColumns.__setitem__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.table.TableColumns",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.TableColumns._rename_column": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "KeyError",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.TableColumns.isinstance": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.TableColumns.keys": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "collections.OrderedDict.keys",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.TableColumns.not_isinstance": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.TableColumns.values": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "collections.OrderedDict.values",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.TableReplaceWarning": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "astropy.table.table.__doctest_skip__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "astropy.table.table.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.table.table.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "astropy.table.table.descr": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.table.table.has_info_class": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.table.table.io_registry": {
  "data": {
   "shadows": "registry"
  },
  "type": "import"
 },
 "astropy.table.table.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "astropy.table.table.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "astropy.table.table.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.table.table.np_broadcast_to": {
  "data": {
   "shadows": "broadcast_to"
  },
  "type": "import"
 },
 "astropy.table.table.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.table.table.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.table.table.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.table.table.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.table.table.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "astropy.table.table.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.table.table.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.table.table.webbrowser": {
  "data": {
   "shadows": "webbrowser"
  },
  "type": "import"
 },
 "astropy.table.table_helpers": {
  "data": {},
  "type": "module"
 },
 "astropy.table.table_helpers.ArrayWrapper": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "ParentDtypeInfo",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.table.table_helpers.ArrayWrapper.__getitem__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "astropy.table.table_helpers.ArrayWrapper.__init__": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "getattr",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.table_helpers.ArrayWrapper.__len__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.table_helpers.ArrayWrapper.__repr__": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "astropy.table.table_helpers.ArrayWrapper.__setitem__": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "astropy.table.table_helpers.ArrayWrapper.dtype": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.table_helpers.ArrayWrapper.shape": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.table_helpers.TimingTables": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.table.table_helpers.TimingTables.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "Table",
    "astropy.table.table_helpers.string",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.random.choice",
    "numpy.random.randint",
    "numpy.random.random",
    "numpy.random.seed",
    "numpy.repeat",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "astropy.table.table_helpers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.table.table_helpers.complex_table": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "astropy.table.table_helpers.warnings",
    "get_pkg_data_filename",
    "parse"
   ]
  },
  "type": "function"
 },
 "astropy.table.table_helpers.cycle": {
  "data": {
   "shadows": "itertools.cycle"
  },
  "type": "import"
 },
 "astropy.table.table_helpers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.table.table_helpers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.table.table_helpers.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.table.table_helpers.simple_table": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "Column",
    "Table",
    "ValueError",
    "astropy.table.table_helpers.string",
    "bool",
    "chr",
    "enumerate",
    "itertools.cycle",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.float64",
    "numpy.int64",
    "ord",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.table.table_helpers.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "astropy.table.table_helpers.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.table.table_helpers.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.table.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.table.tests.conftest": {
  "data": {
   "symbols_in_volume": [
    "astropy.table.tests.conftest.MIXIN_COLS",
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "astropy.table.tests.conftest.Column": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "astropy.table.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.conftest.MIXIN_COLS": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "astropy.table.tests.conftest.MaskedTable": {
  "data": {
   "lineno": 40
  },
  "type": "class"
 },
 "astropy.table.tests.conftest.MaskedTable.__init__": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "astropy.table.tests.conftest.MyColumn": {
  "data": {
   "lineno": 50
  },
  "type": "class"
 },
 "astropy.table.tests.conftest.MyMaskedColumn": {
  "data": {
   "lineno": 54
  },
  "type": "class"
 },
 "astropy.table.tests.conftest.MyRow": {
  "data": {
   "lineno": 46
  },
  "type": "class"
 },
 "astropy.table.tests.conftest.MyTable": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "astropy.table.tests.conftest.Column",
    "astropy.table.tests.conftest.MyColumn",
    "astropy.table.tests.conftest.MyMaskedColumn",
    "astropy.table.tests.conftest.MyRow",
    "astropy.table.tests.conftest.MyTableColumns",
    "astropy.table.tests.conftest.MyTableFormatter"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.conftest.MyTableColumns": {
  "data": {
   "lineno": 58
  },
  "type": "class"
 },
 "astropy.table.tests.conftest.MyTableFormatter": {
  "data": {
   "lineno": 62
  },
  "type": "class"
 },
 "astropy.table.tests.conftest.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.table.tests.conftest.SubclassTable": {
  "data": {
   "lineno": 112
  },
  "type": "class"
 },
 "astropy.table.tests.conftest.T1": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "astropy.table.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.conftest.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "astropy.table.tests.conftest.mixin_cols": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "astropy.table.tests.conftest.MIXIN_COLS",
    "astropy.table.tests.conftest.pytest",
    "collections.OrderedDict",
    "copy.deepcopy",
    "sorted"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.conftest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.table.tests.conftest.operation_table_type": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "astropy.table.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.conftest.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "astropy.table.tests.conftest.protocol": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "astropy.table.tests.conftest.pickle",
    "astropy.table.tests.conftest.pytest",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.table.tests.conftest.table_data": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "TableData",
    "astropy.table.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.conftest.table_data.TableData": {
  "data": {
   "lineno": 97
  },
  "type": "class"
 },
 "astropy.table.tests.conftest.table_data.TableData.__init__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "astropy.table.tests.conftest.MaskedTable"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.conftest.table_type": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "AttributeError",
    "astropy.table.tests.conftest.MaskedTable",
    "astropy.table.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.conftest.table_types": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "TableTypes",
    "astropy.table.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.conftest.table_types.TableTypes": {
  "data": {
   "lineno": 79
  },
  "type": "class"
 },
 "astropy.table.tests.conftest.table_types.TableTypes.__init__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "astropy.table.tests.conftest.MaskedTable",
    "astropy.table.tests.conftest.MyColumn",
    "astropy.table.tests.conftest.MyTable"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.conftest.tableclass": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "astropy.table.tests.conftest.SubclassTable",
    "astropy.table.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.conftest.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.table.tests.test_array": {
  "data": {},
  "type": "module"
 },
 "astropy.table.tests.test_array.array": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "SortedArray",
    "Table",
    "astropy.table.tests.test_array.pytest",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.table.tests.test_array.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.table.tests.test_array.test_array_find": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "astropy.table.tests.test_array.array",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_array.test_array_range": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "astropy.table.tests.test_array.array",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_array.test_wide_array": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "Table",
    "astropy.table.tests.test_array.wide_array",
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_array.wide_array": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "SortedArray",
    "Table",
    "astropy.table.tests.test_array.pytest",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_bst": {
  "data": {},
  "type": "module"
 },
 "astropy.table.tests.test_bst.bst": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "astropy.table.tests.test_bst.pytest",
    "astropy.table.tests.test_bst.tree"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_bst.get_tree": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "TreeType"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_bst.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.table.tests.test_bst.test_bst_add": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "astropy.table.tests.test_bst.bst"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_bst.test_bst_dimensions": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "astropy.table.tests.test_bst.bst"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_bst.test_bst_duplicate": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.tests.test_bst.bst",
    "astropy.table.tests.test_bst.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_bst.test_bst_find": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "astropy.table.tests.test_bst.bst",
    "astropy.table.tests.test_bst.tree",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_bst.test_bst_range": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "astropy.table.tests.test_bst.bst",
    "astropy.table.tests.test_bst.tree",
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_bst.test_bst_remove": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "astropy.table.tests.test_bst.bst",
    "enumerate",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_bst.test_bst_traverse": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "astropy.table.tests.test_bst.bst"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_bst.tree": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "astropy.table.tests.test_bst.get_tree",
    "astropy.table.tests.test_bst.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column": {
  "data": {},
  "type": "module"
 },
 "astropy.table.tests.test_column.TestAttrEqual": {
  "data": {
   "lineno": 364
  },
  "type": "class"
 },
 "astropy.table.tests.test_column.TestAttrEqual.test_10": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "Column",
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestAttrEqual.test_11": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "Column",
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestAttrEqual.test_12": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "Column",
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestAttrEqual.test_13": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "Column",
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestAttrEqual.test_5": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "Column",
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestAttrEqual.test_6": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "Column",
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestAttrEqual.test_7": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "Column",
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestAttrEqual.test_8": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "Column",
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestAttrEqual.test_9": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "Column",
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestAttrEqual.test_col_and_masked_col": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestColumn": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "astropy.table.tests.test_column.TestColumn.test_array_wrap": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "numpy.all",
    "numpy.allclose",
    "numpy.cos",
    "numpy.floating",
    "numpy.integer",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestColumn.test_attrs_survive_getitem_after_change": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "Column",
    "hasattr",
    "numpy.array",
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestColumn.test_convert_numpy_array": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "Column",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestColumn.test_convert_unit": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "Column",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestColumn.test_format": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "Column",
    "float",
    "numpy.arange",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestColumn.test_insert_axis": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "Column",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestColumn.test_insert_basic": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "Column",
    "IndexError",
    "ValueError",
    "astropy.table.tests.test_column.pytest",
    "hasattr",
    "int",
    "numpy.all",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestColumn.test_insert_masked": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "numpy.all",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestColumn.test_insert_masked_multidim": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.tests.test_column.pytest",
    "int",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestColumn.test_insert_multidim": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "Column",
    "ValueError",
    "astropy.table.tests.test_column.pytest",
    "int",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestColumn.test_insert_object": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "Column",
    "numpy.all",
    "object"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestColumn.test_item_access_type": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "Column",
    "hasattr",
    "int",
    "int_type",
    "isinstance",
    "numpy.all",
    "numpy.int",
    "numpy.integer",
    "numpy.ma.MaskedArray",
    "numpy.ndarray",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestColumn.test_mask_on_non_masked_table": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "AttributeError",
    "astropy.table.tests.test_column.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestColumn.test_name_none": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "Column",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestColumn.test_numpy_boolean_ufuncs": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "Column",
    "len",
    "numpy.all",
    "numpy.any",
    "numpy.array",
    "numpy.isfinite",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.ma.core.MaskedArray",
    "numpy.ndarray",
    "numpy.sign",
    "numpy.signbit",
    "type",
    "ufunc"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestColumn.test_numpy_ops": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "Column",
    "astropy.table.tests.test_column.operator",
    "len",
    "numpy.all",
    "numpy.any",
    "numpy.array",
    "numpy.ma.core.MaskedArray",
    "numpy.ndarray",
    "op",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestColumn.test_quantity_init": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "Column",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestColumn.test_subclass": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "Column",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestColumn.test_to_quantity": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "Column",
    "TypeError",
    "astropy.table.tests.test_column.pytest",
    "int",
    "numpy.all",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestColumn.test_view": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "Column",
    "Column.__name__",
    "numpy.array",
    "numpy.int64",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.TestMetaColumn": {
  "data": {
   "lineno": 444
  },
  "type": "class"
 },
 "astropy.table.tests.test_column.TestMetaMaskedColumn": {
  "data": {
   "lineno": 449
  },
  "type": "class"
 },
 "astropy.table.tests.test_column.currentframe": {
  "data": {
   "shadows": "inspect.currentframe"
  },
  "type": "import"
 },
 "astropy.table.tests.test_column.getframeinfo": {
  "data": {
   "shadows": "inspect.getframeinfo"
  },
  "type": "import"
 },
 "astropy.table.tests.test_column.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.table.tests.test_column.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "astropy.table.tests.test_column.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.table.tests.test_column.test_col_unicode_sandwich_bytes": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "Column",
    "astropy.table.tests.test_column.pytest",
    "isinstance",
    "numpy.all",
    "numpy.array",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.test_col_unicode_sandwich_create_from_str": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "Column",
    "astropy.table.tests.test_column.pytest",
    "isinstance",
    "numpy.all",
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.test_col_unicode_sandwich_unicode": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "numpy.array",
    "numpy.ndarray",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.test_getitem_metadata_regression": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "isinstance",
    "numpy.take"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.test_masked_col_unicode_sandwich": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "numpy.array",
    "numpy.ma.MaskedArray",
    "numpy.ma.masked",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.test_qtable_column_conversion": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.test_scalar_column": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.test_string_truncation_warning": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "astropy.table.tests.test_column.pytest",
    "catch_warnings",
    "inspect.currentframe",
    "inspect.getframeinfo",
    "len",
    "numpy.all",
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.test_string_truncation_warning_masked": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "catch_warnings",
    "len",
    "numpy.all",
    "numpy.ma.masked",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.test_unicode_guidelines": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "assert_follows_unicode_guidelines",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.test_unicode_sandwich_set": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "Column",
    "astropy.table.tests.test_column.pytest",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_column.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.table.tests.test_groups": {
  "data": {},
  "type": "module"
 },
 "astropy.table.tests.test_groups.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.table.tests.test_groups.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.table.tests.test_groups.sort_eq": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_groups.test_column_aggregate": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "Table",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_groups.test_column_filter": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "Table.read",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_groups.test_column_filter.all_positive": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_groups.test_column_group_by": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "Table",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_groups.test_group_by_errors": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "Table",
    "TypeError",
    "ValueError",
    "astropy.table.tests.test_groups.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_groups.test_group_by_masked": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "Table"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_groups.test_group_column_from_table": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_groups.test_grouped_copy": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "Table",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_groups.test_grouped_item_access": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "Table",
    "numpy.all",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_groups.test_grouped_slicing": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "Table",
    "len",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_groups.test_groups_iterator": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_groups.test_groups_keys": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_groups.test_groups_keys_meta": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "hasattr",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_groups.test_mutable_operations": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "Column",
    "Table",
    "len",
    "numpy.all",
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_groups.test_table_aggregate": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "Table",
    "UserWarning",
    "Warning",
    "catch_warnings",
    "numpy.all",
    "numpy.array",
    "numpy.sum",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_groups.test_table_aggregate_reduceat": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "Warning",
    "catch_warnings",
    "numpy.add",
    "numpy.all",
    "numpy.mean",
    "numpy.sum",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_groups.test_table_aggregate_reduceat.np_add": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "numpy.add"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_groups.test_table_aggregate_reduceat.np_mean": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_groups.test_table_aggregate_reduceat.np_sum": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_groups.test_table_filter": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "Table.read"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_groups.test_table_filter.all_positive": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_groups.test_table_group_by": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "Table",
    "numpy.all",
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_groups.test_table_groups_array_index": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "Table",
    "len",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_groups.test_table_groups_mask_index": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "Table",
    "len",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_groups.test_table_groups_slicing": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "Table",
    "len",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_index": {
  "data": {},
  "type": "module"
 },
 "astropy.table.tests.test_index.TestIndex": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "astropy.table.tests.test_index.pytest"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_index.TestIndex._setup": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "astropy.table.tests.test_index.TestIndex",
    "astropy.table.tests.test_index.main_col",
    "isinstance",
    "list",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_index.TestIndex.make_col": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "astropy.table.tests.test_index.TestIndex.make_val": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "Time",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_index.TestIndex.t": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_index.TestIndex.test_col_get_slice": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "astropy.table.tests.test_index.assert_col_equal",
    "astropy.table.tests.test_index.engine",
    "astropy.table.tests.test_index.main_col",
    "isinstance",
    "len",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_index.TestIndex.test_col_rename": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "astropy.table.tests.test_index.engine",
    "astropy.table.tests.test_index.main_col",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_index.TestIndex.test_col_set_slice": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "astropy.table.tests.test_index.assert_col_equal",
    "astropy.table.tests.test_index.engine",
    "astropy.table.tests.test_index.main_col",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_index.TestIndex.test_copy_index_references": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "astropy.table.tests.test_index.main_col"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_index.TestIndex.test_copy_indexed_table": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "astropy.table.tests.test_index._col",
    "len",
    "numpy.all",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_index.TestIndex.test_index_modes": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "astropy.table.tests.test_index.assert_col_equal",
    "astropy.table.tests.test_index.engine",
    "astropy.table.tests.test_index.main_col",
    "isinstance",
    "len",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_index.TestIndex.test_index_retrieval": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "IndexError",
    "astropy.table.tests.test_index.engine",
    "astropy.table.tests.test_index.main_col",
    "astropy.table.tests.test_index.pytest",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_index.TestIndex.test_insert_row": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "astropy.table.tests.test_index.assert_col_equal",
    "astropy.table.tests.test_index.engine",
    "astropy.table.tests.test_index.main_col",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_index.TestIndex.test_invalid_search": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "KeyError",
    "astropy.table.tests.test_index.main_col",
    "astropy.table.tests.test_index.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_index.TestIndex.test_multiple_slices": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "astropy.table.tests.test_index.assert_col_equal",
    "astropy.table.tests.test_index.engine",
    "astropy.table.tests.test_index.main_col",
    "numpy.all",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_index.TestIndex.test_remove_rows": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.tests.test_index.assert_col_equal",
    "astropy.table.tests.test_index.engine",
    "astropy.table.tests.test_index.main_col",
    "astropy.table.tests.test_index.pytest",
    "numpy.all",
    "numpy.array",
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_index.TestIndex.test_sort": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "astropy.table.tests.test_index.assert_col_equal",
    "astropy.table.tests.test_index.engine",
    "astropy.table.tests.test_index.main_col",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_index.TestIndex.test_table_index": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "astropy.table.tests.test_index.assert_col_equal",
    "astropy.table.tests.test_index.engine",
    "astropy.table.tests.test_index.main_col",
    "astropy.table.tests.test_index.pytest",
    "len",
    "list",
    "numpy.all",
    "numpy.allclose",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_index.TestIndex.test_table_loc": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "Time",
    "astropy.table.tests.test_index.assert_col_equal",
    "astropy.table.tests.test_index.engine",
    "astropy.table.tests.test_index.main_col",
    "isinstance",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_index.TestIndex.test_table_slicing": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "astropy.table.tests.test_index.assert_col_equal",
    "astropy.table.tests.test_index.engine",
    "astropy.table.tests.test_index.main_col",
    "len",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_index.TestIndex.test_unique_index": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.tests.test_index.engine",
    "astropy.table.tests.test_index.main_col",
    "astropy.table.tests.test_index.pytest",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_index._col": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.table.tests.test_index.assert_col_equal": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "Time",
    "isinstance",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_index.engine": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "astropy.table.tests.test_index.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_index.main_col": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "Time",
    "astropy.table.tests.test_index._col",
    "astropy.table.tests.test_index.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_index.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.table.tests.test_index.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.table.tests.test_index.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.table.tests.test_info": {
  "data": {},
  "type": "module"
 },
 "astropy.table.tests.test_info.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.table.tests.test_info.StringIO": {
  "data": {
   "shadows": "cStringIO"
  },
  "type": "import"
 },
 "astropy.table.tests.test_info.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.table.tests.test_info.test_class_attribute": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "table_cls"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_info.test_data_info": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "numpy.nan",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_info.test_data_info_subclass": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "Column",
    "collections.OrderedDict",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_info.test_data_info_subclass.Column": {
  "data": {
   "lineno": 170
  },
  "type": "class"
 },
 "astropy.table.tests.test_info.test_empty_table": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "astropy.table.tests.test_info.test_ignore_warnings": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "astropy.table.tests.test_info.warnings",
    "len",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_info.test_no_deprecation_warning": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "astropy.table.tests.test_info.warnings",
    "len",
    "simple_table"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_info.test_scalar_info": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "astropy.table.tests.test_info.test_table_info_attributes": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "dtype_info_name",
    "numpy.all",
    "numpy.array",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_info.test_table_info_stats": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "data_info_factory",
    "dtype_info_name",
    "numpy.all",
    "numpy.array",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_info.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.table.tests.test_info.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.table.tests.test_init_table": {
  "data": {},
  "type": "module"
 },
 "astropy.table.tests.test_init_table.BaseInitFrom": {
  "data": {
   "lineno": 57
  },
  "type": "class"
 },
 "astropy.table.tests.test_init_table.BaseInitFrom._setup": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.BaseInitFrom.test_basic_init": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "all",
    "numpy.all",
    "numpy.array",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.BaseInitFrom.test_names_cols_mismatch": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.tests.test_init_table.pytest",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.BaseInitFrom.test_names_dtype_mismatch": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.tests.test_init_table.pytest",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.BaseInitFrom.test_set_dtype": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "all",
    "numpy.all",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.BaseInitFromDictLike": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "astropy.table.tests.test_init_table.BaseInitFrom",
    "astropy.table.tests.test_init_table.pytest"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_init_table.BaseInitFromListLike": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "astropy.table.tests.test_init_table.BaseInitFrom",
    "astropy.table.tests.test_init_table.pytest"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_init_table.BaseInitFromListLike.test_names_cols_mismatch": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.tests.test_init_table.pytest",
    "int",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.BaseInitFromListLike.test_names_copy_false": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.tests.test_init_table.pytest",
    "int",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "astropy.table.tests.test_init_table.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.table.tests.test_init_table.TestInitFromColsList": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "astropy.table.tests.test_init_table.BaseInitFromListLike",
    "astropy.table.tests.test_init_table.pytest"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_init_table.TestInitFromColsList._setup": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "Column",
    "numpy.array",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromColsList.test_default_names": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "all",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromColsList.test_partial_names_dtype": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "all",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromColsList.test_ref": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromDict": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "astropy.table.tests.test_init_table.BaseInitFromDictLike",
    "astropy.table.tests.test_init_table.pytest"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_init_table.TestInitFromDict._setup": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "Column",
    "dict",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromListOfDicts": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "astropy.table.tests.test_init_table.BaseInitFromListLike",
    "astropy.table.tests.test_init_table.pytest"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_init_table.TestInitFromListOfDicts._setup": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromListOfDicts.test_bad_data": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.tests.test_init_table.pytest",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromListOfDicts.test_names": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "all",
    "set",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromListOfDicts.test_names_ordered": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromListOfLists": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "astropy.table.tests.test_init_table.BaseInitFromListLike",
    "astropy.table.tests.test_init_table.pytest"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_init_table.TestInitFromListOfLists.setup_method": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "Column",
    "numpy.array",
    "numpy.int32",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromListOfLists.test_bad_data": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.tests.test_init_table.pytest",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromListOfLists.test_default_names": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "all",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromListOfLists.test_partial_names_dtype": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "all",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromMapping": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "astropy.table.tests.test_init_table.BaseInitFromDictLike",
    "astropy.table.tests.test_init_table.pytest"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_init_table.TestInitFromMapping._setup": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "Column",
    "collections.Mapping",
    "collections.UserDict",
    "dict",
    "isinstance",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromNdarrayHomo": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "astropy.table.tests.test_init_table.BaseInitFromListLike",
    "astropy.table.tests.test_init_table.pytest"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_init_table.TestInitFromNdarrayHomo.setup_method": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromNdarrayHomo.test_default_names": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromNdarrayHomo.test_ndarray_ref": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromNdarrayHomo.test_partial_names_dtype": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "all",
    "numpy.float64",
    "numpy.int32",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromNdarrayHomo.test_partial_names_ref": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "all",
    "numpy.int32",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromNdarrayStruct": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "astropy.table.tests.test_init_table.BaseInitFromDictLike",
    "astropy.table.tests.test_init_table.pytest"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_init_table.TestInitFromNdarrayStruct._setup": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromNdarrayStruct.test_ndarray_ref": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "all",
    "numpy.all",
    "numpy.array",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromNdarrayStruct.test_partial_names_dtype": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "all",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromNdarrayStruct.test_partial_names_ref": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "all",
    "numpy.int32",
    "numpy.int64",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromNone": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "astropy.table.tests.test_init_table.pytest"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_init_table.TestInitFromNone.test_data_none_with_cols": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "len",
    "numpy.empty",
    "numpy.float32",
    "numpy.int32",
    "str",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromOrderedDict": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "astropy.table.tests.test_init_table.BaseInitFromDictLike",
    "astropy.table.tests.test_init_table.pytest"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_init_table.TestInitFromOrderedDict._setup": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "Column",
    "collections.OrderedDict",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromOrderedDict.test_col_order": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromRow": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "astropy.table.tests.test_init_table.BaseInitFromDictLike",
    "astropy.table.tests.test_init_table.pytest"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_init_table.TestInitFromRow._setup": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "numpy.array",
    "str",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromRow.test_init_from_row": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "all",
    "numpy.all",
    "numpy.array",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromRows": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "astropy.table.tests.test_init_table.pytest"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_init_table.TestInitFromRows.test_init_with_rows": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromRows.test_init_with_rows_and_data": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.tests.test_init_table.pytest",
    "str",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromTable": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "astropy.table.tests.test_init_table.BaseInitFromDictLike",
    "astropy.table.tests.test_init_table.pytest"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_init_table.TestInitFromTable._setup": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "numpy.array",
    "str",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromTable.test_data_meta_copy": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "all",
    "numpy.all",
    "numpy.array",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromTable.test_init_from_columns": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromTable.test_init_from_columns_mix": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromTable.test_init_from_columns_slice": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromTable.test_partial_names_dtype": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "all",
    "numpy.float32",
    "numpy.int64",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromTable.test_partial_names_ref": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "all",
    "numpy.float64",
    "numpy.int64",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestInitFromTable.test_table_ref": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "all",
    "numpy.all",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.TestTableColumnsInit": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "astropy.table.tests.test_init_table.TestTableColumnsInit.test_init": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "Column",
    "TableColumns",
    "dict",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_init_table.UserDict": {
  "data": {
   "shadows": "collections.UserDict"
  },
  "type": "import"
 },
 "astropy.table.tests.test_init_table.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.table.tests.test_init_table.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.table.tests.test_init_table.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.table.tests.test_init_table.test_init_and_ref_from_multidim_ndarray": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "astropy.table.tests.test_init_table.pytest",
    "numpy.array",
    "str",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_item_access": {
  "data": {},
  "type": "module"
 },
 "astropy.table.tests.test_item_access.BaseTestItems": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "astropy.table.tests.test_item_access.pytest"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_item_access.TestTableColumnsItems": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "astropy.table.tests.test_item_access.BaseTestItems",
    "astropy.table.tests.test_item_access.pytest"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_item_access.TestTableColumnsItems.test_by_name": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_item_access.TestTableColumnsItems.test_by_position": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_item_access.TestTableColumnsItems.test_column_slice": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "astropy.table.tests.test_item_access.TestTableColumnsItems.test_mult_columns": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "astropy.table.tests.test_item_access.TestTableItems": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "astropy.table.tests.test_item_access.BaseTestItems",
    "astropy.table.tests.test_item_access.pytest"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_item_access.TestTableItems.test_column": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "astropy.table.tests.test_item_access.pytest",
    "numpy.array",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_item_access.TestTableItems.test_empty_iterable_item": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "len",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_item_access.TestTableItems.test_fancy_index_slice": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "numpy.any",
    "numpy.array",
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_item_access.TestTableItems.test_list_index_slice": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "numpy.any",
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_item_access.TestTableItems.test_np_integers": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "len",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_item_access.TestTableItems.test_np_where": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.all",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_item_access.TestTableItems.test_row": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "astropy.table.tests.test_item_access.pytest",
    "numpy.array",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_item_access.TestTableItems.test_select_bad_column": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.tests.test_item_access.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_item_access.TestTableItems.test_select_columns": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_item_access.TestTableItems.test_select_columns_fail": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.tests.test_item_access.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_item_access.TestTableItems.test_table_slice": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_item_access.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.table.tests.test_item_access.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.table.tests.test_jsviewer": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "os.path.abspath",
    "os.path.dirname"
   ]
  },
  "type": "module"
 },
 "astropy.table.tests.test_jsviewer.EXTERN_DIR": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "astropy.table.tests.test_jsviewer.HAS_IPYTHON": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "astropy.table.tests.test_jsviewer.IPython": {
  "data": {
   "shadows": "IPython"
  },
  "type": "import"
 },
 "astropy.table.tests.test_jsviewer.REFERENCE": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.table.tests.test_jsviewer.TPL": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "astropy.table.tests.test_jsviewer.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "astropy.table.tests.test_jsviewer.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "astropy.table.tests.test_jsviewer.format_lines": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "astropy.table.tests.test_jsviewer.TPL",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_jsviewer.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "astropy.table.tests.test_jsviewer.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.table.tests.test_jsviewer.test_show_in_notebook": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "Table",
    "astropy.table.tests.test_jsviewer.pytest",
    "astropy.table.tests.test_jsviewer.textwrap"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_jsviewer.test_write_jsviewer_default": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "Table",
    "astropy.table.tests.test_jsviewer.REFERENCE",
    "astropy.table.tests.test_jsviewer.format_lines",
    "dict",
    "id",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_jsviewer.test_write_jsviewer_local": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "Table",
    "astropy.table.tests.test_jsviewer.EXTERN_DIR",
    "astropy.table.tests.test_jsviewer.REFERENCE",
    "astropy.table.tests.test_jsviewer.format_lines",
    "dict",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_jsviewer.test_write_jsviewer_options": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "Table",
    "astropy.table.tests.test_jsviewer.REFERENCE",
    "astropy.table.tests.test_jsviewer.format_lines",
    "dict",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_jsviewer.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "astropy.table.tests.test_masked": {
  "data": {},
  "type": "module"
 },
 "astropy.table.tests.test_masked.SetupData": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_masked.SetupData.setup_method": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "Column",
    "MaskedColumn",
    "Table",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestAddColumn": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_masked.TestAddColumn.test_add_masked_column_to_masked_table": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "MaskedColumn",
    "Table",
    "bool",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestAddColumn.test_add_masked_column_to_non_masked_table": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "Column",
    "MaskedColumn",
    "Table",
    "bool",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestAddColumn.test_add_non_masked_column_to_masked_table": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "Column",
    "MaskedColumn",
    "Table",
    "bool",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestAddColumn.test_convert_to_masked_table_only_if_necessary": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "Column",
    "MaskedColumn",
    "Table",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestAddRow": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_masked.TestAddRow.test_add_masked_row_to_masked_table_iterable": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "MaskedColumn",
    "Table",
    "bool",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestAddRow.test_add_masked_row_to_masked_table_mapping1": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "MaskedColumn",
    "Table",
    "bool",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestAddRow.test_add_masked_row_to_masked_table_mapping2": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "MaskedColumn",
    "Table",
    "bool",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestAddRow.test_add_masked_row_to_masked_table_mapping3": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "MaskedColumn",
    "Table",
    "bool",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestAddRow.test_add_masked_row_to_masked_table_mapping4": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "MaskedColumn",
    "Table",
    "ValueError",
    "astropy.table.tests.test_masked.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestAddRow.test_add_masked_row_to_masked_table_mismatch": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "MaskedColumn",
    "Table",
    "TypeError",
    "astropy.table.tests.test_masked.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestAddRow.test_add_masked_row_to_non_masked_table_iterable": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "Column",
    "Table",
    "bool",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestFillValue": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "astropy.table.tests.test_masked.SetupData"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_masked.TestFillValue.test_data_attribute_fill_and_mask": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestFillValue.test_init_set_fill_value": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "MaskedColumn"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestFillValue.test_set_get_fill_value_for_bare_column": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestFillValue.test_set_get_fill_value_for_str_column": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "MaskedColumn",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestFillValue.test_set_get_fill_value_for_table_column": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestFillValue.test_table_column_mask_not_ref": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestFilled": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_masked.TestFilled.setup_method": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "MaskedColumn"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestFilled.test_filled_column": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "Column",
    "MaskedColumn",
    "isinstance",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestFilled.test_filled_masked_table": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "Table",
    "isinstance",
    "numpy.all",
    "numpy.allclose",
    "tableclass"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestFilled.test_filled_unmasked_table": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "Table",
    "isinstance",
    "numpy.all",
    "tableclass"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestMaskedColumnInit": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "astropy.table.tests.test_masked.SetupData"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_masked.TestMaskedColumnInit.test_incomplete_mask_spec": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "MaskedColumn",
    "astropy.table.tests.test_masked.pytest",
    "numpy.ma.MaskError"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestMaskedColumnInit.test_override_existing_mask": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "MaskedColumn",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestMaskedColumnInit.test_set_mask_and_not_ref": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestMaskedColumnInit.test_set_mask_from_list": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "MaskedColumn",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestPprint": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "astropy.table.tests.test_masked.SetupData"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_masked.TestPprint.test_pformat": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestRemoveColumn": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_masked.TestRemoveColumn.test_remove_masked_column": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "MaskedColumn",
    "Table",
    "bool",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestRenameColumn": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_masked.TestRenameColumn.test_rename_masked_column": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "MaskedColumn",
    "Table",
    "bool",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestTableInit": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "astropy.table.tests.test_masked.SetupData"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_masked.TestTableInit.test_mask_false_if_no_input_masked": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "Table"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestTableInit.test_mask_property": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "Table",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.TestTableInit.test_mask_true_if_any_input_masked": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "Table",
    "numpy.ma.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "astropy.table.tests.test_masked.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.table.tests.test_masked.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.table.tests.test_masked.test_coercing_fill_value_type": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "MaskedColumn",
    "Table",
    "isinstance",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_masked.test_setting_from_masked_column": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "Column",
    "MaskedColumn",
    "Table",
    "len",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.ma.masked",
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_np_utils": {
  "data": {},
  "type": "module"
 },
 "astropy.table.tests.test_np_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.table.tests.test_np_utils.test_common_dtype": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.empty",
    "numpy.float32",
    "numpy.float64",
    "numpy.int",
    "numpy.object_",
    "numpy.uint8",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations": {
  "data": {},
  "type": "module"
 },
 "astropy.table.tests.test_operations.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.table.tests.test_operations.TestHStack": {
  "data": {
   "lineno": 782
  },
  "type": "class"
 },
 "astropy.table.tests.test_operations.TestHStack._setup": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "t_cls",
    "t_cls.read"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestHStack.test_bad_input_type": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.table.tests.test_operations.pytest",
    "operation_table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestHStack.test_col_meta_merge": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "catch_warnings",
    "collections.OrderedDict",
    "getattr",
    "len",
    "operation_table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestHStack.test_hstack_one_masked": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "astropy.table.tests.test_operations.pytest",
    "operation_table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestHStack.test_hstack_one_table": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "operation_table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestHStack.test_stack_basic": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "operation_table_type",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestHStack.test_stack_incompatible": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "astropy.table.tests.test_operations.pytest",
    "operation_table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestHStack.test_stack_rows": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "operation_table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestHStack.test_stack_same_table": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "operation_table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestHStack.test_table_col_rename": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "operation_table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestHStack.test_table_meta_merge": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "operation_table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestHStack.test_table_meta_merge_conflict": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.tests.test_operations.pytest",
    "catch_warnings",
    "len",
    "operation_table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestJoin": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "astropy.table.tests.test_operations.TestJoin._setup": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "t_cls"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestJoin.test_bad_join_type": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.tests.test_operations.pytest",
    "operation_table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestJoin.test_both_unmasked_inner": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "astropy.table.tests.test_operations.sort_eq",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestJoin.test_both_unmasked_left_right_outer": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "astropy.table.tests.test_operations.pytest",
    "astropy.table.tests.test_operations.sort_eq",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestJoin.test_both_unmasked_single_key_inner": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "astropy.table.tests.test_operations.sort_eq",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestJoin.test_both_unmasked_single_key_left_right_outer": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "astropy.table.tests.test_operations.pytest",
    "astropy.table.tests.test_operations.sort_eq"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestJoin.test_col_meta_merge": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "catch_warnings",
    "collections.OrderedDict",
    "len",
    "operation_table_type",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestJoin.test_col_rename": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "operation_table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestJoin.test_join_multidimensional": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "operation_table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestJoin.test_join_multidimensional_masked": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "astropy.table.tests.test_operations.pytest",
    "numpy.all",
    "operation_table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestJoin.test_masked_key_column": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "astropy.table.tests.test_operations.pytest",
    "operation_table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestJoin.test_masked_masked": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "astropy.table.tests.test_operations.pytest",
    "astropy.table.tests.test_operations.sort_eq",
    "numpy.all",
    "numpy.array",
    "operation_table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestJoin.test_masked_unmasked": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "astropy.table.tests.test_operations.pytest",
    "astropy.table.tests.test_operations.sort_eq",
    "numpy.all",
    "numpy.array",
    "operation_table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestJoin.test_missing_keys": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "astropy.table.tests.test_operations.pytest",
    "operation_table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestJoin.test_no_common_keys": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "astropy.table.tests.test_operations.pytest",
    "operation_table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestJoin.test_rename_conflict": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "astropy.table.tests.test_operations.pytest",
    "operation_table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestJoin.test_table_meta_merge": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestJoin.test_table_meta_merge_conflict": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.tests.test_operations.pytest",
    "catch_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestVStack": {
  "data": {
   "lineno": 455
  },
  "type": "class"
 },
 "astropy.table.tests.test_operations.TestVStack._setup": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "t_cls",
    "t_cls.read"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestVStack.test_bad_input_type": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.table.tests.test_operations.pytest",
    "operation_table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestVStack.test_check_for_mixin_functionality": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "NotImplementedError",
    "astropy.table.tests.test_operations.pytest",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestVStack.test_col_meta_merge_inner": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "astropy.table.tests.test_operations.pytest",
    "catch_warnings",
    "collections.OrderedDict",
    "len",
    "operation_table_type",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestVStack.test_col_meta_merge_outer": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "astropy.table.tests.test_operations.pytest",
    "catch_warnings",
    "collections.OrderedDict",
    "operation_table_type",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestVStack.test_stack_basic_inner": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "operation_table_type",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestVStack.test_stack_basic_outer": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "astropy.table.tests.test_operations.pytest",
    "operation_table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestVStack.test_stack_incompatible": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "astropy.table.tests.test_operations.pytest",
    "operation_table_type",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestVStack.test_stack_rows": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "operation_table_type",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestVStack.test_table_meta_merge": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "operation_table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestVStack.test_table_meta_merge_conflict": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.tests.test_operations.pytest",
    "catch_warnings",
    "len",
    "operation_table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestVStack.test_vstack_one_masked": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "astropy.table.tests.test_operations.pytest",
    "operation_table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.TestVStack.test_vstack_one_table": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "operation_table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.table.tests.test_operations.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.table.tests.test_operations.sort_eq": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.test_get_out_class": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "ValueError",
    "_get_out_class",
    "astropy.table.tests.test_operations.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.test_masking_required_exception": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "NotImplementedError",
    "astropy.table.tests.test_operations.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.test_unique": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.tests.test_operations.pytest",
    "astropy.table.tests.test_operations.sort_eq",
    "numpy.sort",
    "operation_table_type",
    "operation_table_type.read"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.test_vstack_bytes": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "len",
    "operation_table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.test_vstack_unicode": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_operations.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.table.tests.test_pickle": {
  "data": {},
  "type": "module"
 },
 "astropy.table.tests.test_pickle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.table.tests.test_pickle.pickle": {
  "data": {
   "shadows": "cPickle"
  },
  "type": "import"
 },
 "astropy.table.tests.test_pickle.test_pickle_column": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "Column",
    "numpy.all",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pickle.test_pickle_indexed_table": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "simple_table",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pickle.test_pickle_masked_column": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "MaskedColumn",
    "numpy.all",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pickle.test_pickle_masked_table": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "Column",
    "Table",
    "getattr",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pickle.test_pickle_multidimensional_column": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "Column",
    "numpy.all",
    "numpy.zeros",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pickle.test_pickle_table": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "Column",
    "Quantity",
    "SkyCoord",
    "Time",
    "isinstance",
    "numpy.all",
    "table_class",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "numpy.int64"
   ]
  },
  "type": "module"
 },
 "astropy.table.tests.test_pprint.BIG_WIDE_ARR": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "astropy.table.tests.test_pprint.SMALL_ARR": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "astropy.table.tests.test_pprint.TestFormat": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "astropy.table.tests.test_pprint.pytest"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_pprint.TestFormat.test_column_alignment": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "str",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestFormat.test_column_format": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.tests.test_pprint.pytest",
    "str",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestFormat.test_column_format_callable": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "format",
    "str",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestFormat.test_column_format_callable.format": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_pprint.TestFormat.test_column_format_callable.format.__call__": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestFormat.test_column_format_func": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "str",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestFormat.test_column_format_func_multiD": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "numpy.array",
    "str",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestFormat.test_column_format_func_not_str": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.tests.test_pprint.pytest",
    "str",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestFormat.test_column_format_func_wrong_number_args": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.tests.test_pprint.pytest",
    "str",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestFormat.test_column_format_func_wrong_number_args.func": {
  "data": {
   "lineno": 352
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestFormat.test_column_format_with_threshold": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "numpy.arange",
    "str",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestFormatWithMaskedElements": {
  "data": {
   "lineno": 392
  },
  "type": "class"
 },
 "astropy.table.tests.test_pprint.TestFormatWithMaskedElements.test_column_format": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "Table",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestFormatWithMaskedElements.test_column_format_callable": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "Table",
    "format",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestFormatWithMaskedElements.test_column_format_callable.format": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_pprint.TestFormatWithMaskedElements.test_column_format_callable.format.__call__": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestFormatWithMaskedElements.test_column_format_func": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "Table",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestFormatWithMaskedElements.test_column_format_func_multiD": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "Table",
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestFormatWithMaskedElements.test_column_format_func_with_special_masked": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "Table",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestFormatWithMaskedElements.test_column_format_func_with_special_masked.format_func": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "numpy.ma.masked",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestFormatWithMaskedElements.test_column_format_func_wrong_number_args": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "Table",
    "ValueError",
    "astropy.table.tests.test_pprint.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestFormatWithMaskedElements.test_column_format_func_wrong_number_args.func": {
  "data": {
   "lineno": 496
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestFormatWithMaskedElements.test_column_format_with_threshold": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "numpy.arange",
    "str",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestMultiD": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "astropy.table.tests.test_pprint.pytest"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_pprint.TestMultiD.test_fake_multidim": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "id",
    "numpy.array",
    "numpy.int64",
    "table_type",
    "table_type.__name__"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestMultiD.test_multidim": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "id",
    "numpy.array",
    "numpy.int64",
    "table_type",
    "table_type.__name__"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestPprint": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "astropy.table.tests.test_pprint.pytest"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_pprint.TestPprint._setup": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "astropy.table.tests.test_pprint.BIG_WIDE_ARR",
    "astropy.table.tests.test_pprint.SMALL_ARR",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestPprint.test_clip1": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestPprint.test_clip2": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestPprint.test_clip3": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestPprint.test_clip4": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "len",
    "max",
    "min",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestPprint.test_empty_table": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "repr",
    "table_type",
    "table_type.__name__"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestPprint.test_format0": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.float64",
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestPprint.test_format1": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestPprint.test_format2": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestPprint.test_format3": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestPprint.test_format4": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.TestPprint.test_noclip": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "table_type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.table.tests.test_pprint.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.table.tests.test_pprint.test_align": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "Table",
    "TypeError",
    "ValueError",
    "astropy.table.tests.test_pprint.pytest",
    "simple_table"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.test_auto_format_func": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "QTable",
    "Table"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.test_decode_replace": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "Table"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.test_html": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "Table",
    "id",
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.test_html_escaping": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "id",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.test_pprint_nameless_col": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.test_pprint_npfloat32": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "Table",
    "numpy.array",
    "numpy.float32",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.test_pprint_py3_bytes": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "bytes",
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_pprint.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.table.tests.test_row": {
  "data": {},
  "type": "module"
 },
 "astropy.table.tests.test_row.TestRow": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "astropy.table.tests.test_row.pytest"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_row.TestRow._setup": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "astropy.table.tests.test_row.TestRow.t": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_row.TestRow.test_as_void": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ma.masked",
    "numpy.ma.mvoid",
    "numpy.void"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_row.TestRow.test_bounds_checking": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "IndexError",
    "astropy.table.tests.test_row.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_row.TestRow.test_convert_numpy_array": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.tests.test_row.pytest",
    "list",
    "numpy.all",
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_row.TestRow.test_format_row": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "id",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_row.TestRow.test_left_equal": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.tests.test_row.pytest",
    "numpy.all",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_row.TestRow.test_left_not_equal": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.tests.test_row.pytest",
    "numpy.all",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_row.TestRow.test_ref": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "astropy.table.tests.test_row.TestRow.test_right_equal": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.tests.test_row.pytest",
    "numpy.all",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_row.TestRow.test_row_and_as_void_with_objects": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "astropy.table.tests.test_row.TestRow.test_subclass": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "Row",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_row.TestRow.test_values": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "IndexError",
    "astropy.table.tests.test_row.pytest",
    "astropy.table.tests.test_row.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_row.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.table.tests.test_row.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.table.tests.test_row.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.table.tests.test_row.test_masked_row_with_object_col": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.ma.masked"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_subclass": {
  "data": {},
  "type": "module"
 },
 "astropy.table.tests.test_subclass.MyColumn": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "astropy.table.tests.test_subclass.MyMaskedColumn": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "astropy.table.tests.test_subclass.MyRow": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "astropy.table.tests.test_subclass.MyRow.__str__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_subclass.MyTable": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "astropy.table.tests.test_subclass.MyColumn",
    "astropy.table.tests.test_subclass.MyMaskedColumn",
    "astropy.table.tests.test_subclass.MyRow",
    "astropy.table.tests.test_subclass.MyTableColumns",
    "astropy.table.tests.test_subclass.MyTableFormatter"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_subclass.MyTableColumns": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "astropy.table.tests.test_subclass.MyTableFormatter": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "astropy.table.tests.test_subclass.ParamsRow": {
  "data": {
   "lineno": 65
  },
  "type": "class"
 },
 "astropy.table.tests.test_subclass.ParamsRow.__getitem__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "astropy.table.tests.test_subclass.ParamsRow",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_subclass.ParamsRow.keys": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_subclass.ParamsRow.values": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "astropy.table.tests.test_subclass.ParamsTable": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "astropy.table.tests.test_subclass.ParamsRow"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_subclass.test_params_table": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "astropy.table.tests.test_subclass.ParamsTable",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_subclass.test_simple_subclass": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "astropy.table.tests.test_subclass.MyColumn",
    "astropy.table.tests.test_subclass.MyMaskedColumn",
    "astropy.table.tests.test_subclass.MyRow",
    "astropy.table.tests.test_subclass.MyTable",
    "astropy.table.tests.test_subclass.MyTableColumns",
    "astropy.table.tests.test_subclass.MyTableFormatter",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table": {
  "data": {
   "symbols_in_volume": [
    "DeprecationWarning",
    "ImportError",
    "ignore_warnings"
   ]
  },
  "type": "module"
 },
 "astropy.table.tests.test_table.HAS_PANDAS": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "astropy.table.tests.test_table.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.table.tests.test_table.SetupData": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_table.SetupData._setup": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.SetupData.a": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.SetupData.b": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.SetupData.c": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.SetupData.d": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.SetupData.obj": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.SetupData.t": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.StringIO": {
  "data": {
   "shadows": "cStringIO"
  },
  "type": "import"
 },
 "astropy.table.tests.test_table.TestAddColumns": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "astropy.table.tests.test_table.SetupData"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_table.TestAddColumns.test_add_columns1": {
  "data": {
   "lineno": 503
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddColumns.test_add_columns2": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddColumns.test_add_columns3": {
  "data": {
   "lineno": 516
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddColumns.test_add_columns4": {
  "data": {
   "lineno": 522
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddColumns.test_add_columns5": {
  "data": {
   "lineno": 528
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddColumns.test_add_columns6": {
  "data": {
   "lineno": 534
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddColumns.test_add_columns7": {
  "data": {
   "lineno": 541
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddColumns.test_add_duplicate_column": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddColumns.test_add_duplicate_columns": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddLength": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "astropy.table.tests.test_table.SetupData"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_table.TestAddLength.test_right_length": {
  "data": {
   "lineno": 351
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddLength.test_too_long": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddLength.test_too_short": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddName": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "astropy.table.tests.test_table.SetupData"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_table.TestAddName.test_default_name": {
  "data": {
   "lineno": 457
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddName.test_override_name": {
  "data": {
   "lineno": 433
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddPosition": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "astropy.table.tests.test_table.SetupData"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_table.TestAddPosition.test_1": {
  "data": {
   "lineno": 372
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddPosition.test_10": {
  "data": {
   "lineno": 420
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddPosition.test_2": {
  "data": {
   "lineno": 377
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddPosition.test_3": {
  "data": {
   "lineno": 382
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddPosition.test_5": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddPosition.test_6": {
  "data": {
   "lineno": 393
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddPosition.test_7": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddPosition.test_8": {
  "data": {
   "lineno": 406
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddPosition.test_9": {
  "data": {
   "lineno": 412
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddRow": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "astropy.table.tests.test_table.SetupData"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_table.TestAddRow.b": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddRow.c": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddRow.d": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddRow.t": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddRow.test_add_missing_column": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddRow.test_add_none_to_empty_table": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddRow.test_add_qtable_row_multidimensional": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddRow.test_add_row_failures": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddRow.test_add_stuff_to_empty_table": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddRow.test_add_table_row": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "numpy.allclose",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddRow.test_add_table_row_obj": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "numpy.allclose",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddRow.test_add_with_dict": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "numpy.allclose",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddRow.test_add_with_list": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "numpy.allclose",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddRow.test_add_with_none": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "numpy.allclose",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddRow.test_add_with_tuple": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "numpy.allclose",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddRow.test_insert_table_row": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "IndexError",
    "numpy.all",
    "numpy.allclose",
    "numpy.arange",
    "numpy.insert",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddRow.test_wrong_size_tuple": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestAddRow.test_wrong_vals_type": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestArrayColumns": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "astropy.table.tests.test_table.SetupData"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_table.TestArrayColumns.test_1d": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestArrayColumns.test_2d": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestArrayColumns.test_3d": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestColumnAccess": {
  "data": {
   "lineno": 325
  },
  "type": "class"
 },
 "astropy.table.tests.test_table.TestColumnAccess.test_1": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestColumnAccess.test_2": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "KeyError",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestColumnAccess.test_itercols": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "isinstance",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestConvertNumpyArray": {
  "data": {
   "lineno": 1151
  },
  "type": "class"
 },
 "astropy.table.tests.test_table.TestConvertNumpyArray.test_as_array_byteswap": {
  "data": {
   "lineno": 1171,
   "symbols_in_volume": [
    "astropy.table.tests.test_table.sys"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestConvertNumpyArray.test_byteswap_fits_array": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "astropy.table.tests.test_table.sys",
    "get_pkg_data_filename",
    "len",
    "numpy.all",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestConvertNumpyArray.test_convert_numpy_array": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.all",
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestEmptyData": {
  "data": {
   "lineno": 219
  },
  "type": "class"
 },
 "astropy.table.tests.test_table.TestEmptyData.test_1": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestEmptyData.test_2": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestEmptyData.test_3": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestEmptyData.test_4": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestEmptyData.test_5": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestEmptyData.test_add_via_setitem_and_slice": {
  "data": {
   "lineno": 247
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestInitFromTable": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "astropy.table.tests.test_table.SetupData"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_table.TestInitFromTable.test_from_table_cols": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestIterator": {
  "data": {
   "lineno": 1123
  },
  "type": "class"
 },
 "astropy.table.tests.test_table.TestIterator.test_iterator": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "numpy.array",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestKeep": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "astropy.table.tests.test_table.SetupData"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_table.TestKeep.test_1": {
  "data": {
   "lineno": 933
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestKeep.test_2": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestMetaTable": {
  "data": {
   "lineno": 1413
  },
  "type": "class"
 },
 "astropy.table.tests.test_table.TestNewFromColumns": {
  "data": {
   "lineno": 257
  },
  "type": "class"
 },
 "astropy.table.tests.test_table.TestNewFromColumns.test_from_np_array": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.int64",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestNewFromColumns.test_name_none": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestNewFromColumns.test_simple": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.float32",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestNewFromColumns.test_size_mismatch": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestPandas": {
  "data": {
   "lineno": 1537,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_table.TestPandas.test_2d": {
  "data": {
   "lineno": 1590,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestPandas.test_masking": {
  "data": {
   "lineno": 1611,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestPandas.test_mixin": {
  "data": {
   "lineno": 1600,
   "symbols_in_volume": [
    "SkyCoord",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestPandas.test_simple": {
  "data": {
   "lineno": 1540,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.dtype",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestRemove": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "astropy.table.tests.test_table.SetupData"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_table.TestRemove.t": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestRemove.t2": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestRemove.test_1": {
  "data": {
   "lineno": 832
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestRemove.test_2": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestRemove.test_3": {
  "data": {
   "lineno": 846
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestRemove.test_delitem1": {
  "data": {
   "lineno": 908
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestRemove.test_delitem2": {
  "data": {
   "lineno": 914
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestRemove.test_delitem_fail": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestRemove.test_delitems": {
  "data": {
   "lineno": 919
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestRemove.test_remove_nonexistent_row": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestRemove.test_remove_row_0": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestRemove.test_remove_row_1": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestRemove.test_remove_row_2": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestRemove.test_remove_row_list": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestRemove.test_remove_row_preserves_meta": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "numpy.dtype",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestRemove.test_remove_row_slice": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestRename": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "astropy.table.tests.test_table.SetupData"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_table.TestRename.test_1": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestRename.test_2": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestRename.test_rename_by_attr": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestReplaceColumn": {
  "data": {
   "lineno": 1644,
   "symbols_in_volume": [
    "astropy.table.tests.test_table.SetupData"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_table.TestReplaceColumn.test_fail_replace_column": {
  "data": {
   "lineno": 1646,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestReplaceColumn.test_replace_column": {
  "data": {
   "lineno": 1657,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestReplaceColumn.test_replace_index_column": {
  "data": {
   "lineno": 1677,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestReverse": {
  "data": {
   "lineno": 294
  },
  "type": "class"
 },
 "astropy.table.tests.test_table.TestReverse.test_reverse": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestReverse.test_reverse_big": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestSetMeta": {
  "data": {
   "lineno": 1139
  },
  "type": "class"
 },
 "astropy.table.tests.test_table.TestSetMeta.test_set_meta": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestSetTableColumn": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "astropy.table.tests.test_table.SetupData"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_table.TestSetTableColumn.test_set_new_col_existing_table": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestSetTableColumn.test_set_new_col_existing_table_fail": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestSetTableColumn.test_set_new_col_new_table": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestSetTableColumn.test_set_new_col_new_table_quantity": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestSetTableColumn.test_set_new_masked_col_existing_table": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestSetTableColumn.test_set_new_unmasked_col_existing_table": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestSetTableColumn.test_set_row": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestSetTableColumn.test_set_row_existing": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestSetTableColumn.test_set_row_fail_1": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "TypeError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestSetTableColumn.test_set_row_fail_2": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestSort": {
  "data": {
   "lineno": 983
  },
  "type": "class"
 },
 "astropy.table.tests.test_table.TestSort.test_argsort": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestSort.test_argsort_bytes": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestSort.test_argsort_unicode": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestSort.test_empty": {
  "data": {
   "lineno": 1016
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestSort.test_multiple": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestSort.test_multiple_with_bytes": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestSort.test_multiple_with_unicode": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestSort.test_rebuild_column_view_then_rename": {
  "data": {
   "lineno": 1097
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestSort.test_single": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestSort.test_single_big": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange",
    "numpy.argsort",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.TestTableColumn": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "astropy.table.tests.test_table.SetupData"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_table.TestTableColumn.test_column_view": {
  "data": {
   "lineno": 779
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.Test__Astropy_Table__": {
  "data": {
   "lineno": 1688
  },
  "type": "class"
 },
 "astropy.table.tests.test_table.Test__Astropy_Table__.SimpleTable": {
  "data": {
   "lineno": 1694,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.table.tests.test_table.Test__Astropy_Table__.SimpleTable.__astropy_table__": {
  "data": {
   "lineno": 1702,
   "symbols_in_volume": [
    "astropy.table.tests.test_table.copy",
    "cls"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.Test__Astropy_Table__.SimpleTable.__init__": {
  "data": {
   "lineno": 1695,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.Test__Astropy_Table__.test_kwargs_exception": {
  "data": {
   "lineno": 1750,
   "symbols_in_volume": [
    "TypeError",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.Test__Astropy_Table__.test_simple_1": {
  "data": {
   "lineno": 1711,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "table_cls",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.Test__Astropy_Table__.test_simple_2": {
  "data": {
   "lineno": 1736,
   "symbols_in_volume": [
    "all",
    "collections.OrderedDict",
    "numpy.float16",
    "numpy.float32",
    "numpy.int32",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table._assert_copies": {
  "data": {
   "lineno": 1215,
   "symbols_in_volume": [
    "numpy.may_share_memory",
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "astropy.table.tests.test_table.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "astropy.table.tests.test_table.currentframe": {
  "data": {
   "shadows": "inspect.currentframe"
  },
  "type": "import"
 },
 "astropy.table.tests.test_table.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "astropy.table.tests.test_table.getframeinfo": {
  "data": {
   "shadows": "inspect.getframeinfo"
  },
  "type": "import"
 },
 "astropy.table.tests.test_table.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.table.tests.test_table.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "astropy.table.tests.test_table.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.table.tests.test_table.test_copy": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "astropy.table.tests.test_table._assert_copies"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.test_copy_masked": {
  "data": {
   "lineno": 1233,
   "symbols_in_volume": [
    "astropy.table.tests.test_table._assert_copies"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.test_copy_protocol": {
  "data": {
   "lineno": 1241,
   "symbols_in_volume": [
    "astropy.table.tests.test_table._assert_copies",
    "astropy.table.tests.test_table.copy"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.test_disallow_inequality_comparisons": {
  "data": {
   "lineno": 1251,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.test_equality": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "bool",
    "numpy.all",
    "numpy.any",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.test_equality_masked": {
  "data": {
   "lineno": 1317,
   "symbols_in_volume": [
    "bool",
    "numpy.all",
    "numpy.any",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.test_equality_masked_bug": {
  "data": {
   "lineno": 1370,
   "symbols_in_volume": [
    "bool",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.test_nested_iteration": {
  "data": {
   "lineno": 1514
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.test_primary_key_is_inherited": {
  "data": {
   "lineno": 1917
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.test_qtable_read_for_ipac_table_with_char_columns": {
  "data": {
   "lineno": 1943
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.test_replace_column_qtable": {
  "data": {
   "lineno": 1758,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.test_replace_update_column_via_setitem": {
  "data": {
   "lineno": 1778,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.test_replace_update_column_via_setitem_replace_inplace": {
  "data": {
   "lineno": 1894,
   "symbols_in_volume": [
    "catch_warnings",
    "len",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.test_replace_update_column_via_setitem_warnings_always": {
  "data": {
   "lineno": 1870,
   "symbols_in_volume": [
    "catch_warnings",
    "inspect.currentframe",
    "inspect.getframeinfo",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.test_replace_update_column_via_setitem_warnings_attributes": {
  "data": {
   "lineno": 1838,
   "symbols_in_volume": [
    "catch_warnings",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.test_replace_update_column_via_setitem_warnings_normal": {
  "data": {
   "lineno": 1802,
   "symbols_in_volume": [
    "catch_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.test_replace_update_column_via_setitem_warnings_refcount": {
  "data": {
   "lineno": 1854,
   "symbols_in_volume": [
    "catch_warnings",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.test_replace_update_column_via_setitem_warnings_slice": {
  "data": {
   "lineno": 1818,
   "symbols_in_volume": [
    "catch_warnings",
    "len",
    "numpy.all",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.test_table_deletion": {
  "data": {
   "lineno": 1489,
   "symbols_in_volume": [
    "TestTable",
    "astropy.table.tests.test_table.gc",
    "id",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.test_table_deletion.TestTable": {
  "data": {
   "lineno": 1498
  },
  "type": "class"
 },
 "astropy.table.tests.test_table.test_table_deletion.TestTable.__del__": {
  "data": {
   "lineno": 1499,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.test_table_init_from_degenerate_arrays": {
  "data": {
   "lineno": 1526,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.test_unicode_bytestring_conversion": {
  "data": {
   "lineno": 1464
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.test_unicode_column_names": {
  "data": {
   "lineno": 1418
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.test_unicode_content": {
  "data": {
   "lineno": 1430,
   "symbols_in_volume": [
    "bytes",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.test_unicode_policy": {
  "data": {
   "lineno": 1450,
   "symbols_in_volume": [
    "assert_follows_unicode_guidelines"
   ]
  },
  "type": "function"
 },
 "astropy.table.tests.test_table.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.table.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.test": {
  "data": {
   "lineno": 156
  },
  "type": "constant"
 },
 "astropy.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.tests.command": {
  "data": {},
  "type": "module"
 },
 "astropy.tests.command.AstropyTest": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "astropy.tests.command.FixRemoteDataOption",
    "astropy.tests.command._fix_user_options",
    "object",
    "setuptools.Command"
   ]
  },
  "type": "class"
 },
 "astropy.tests.command.AstropyTest._build_temp_install": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "astropy.tests.command.os",
    "astropy.tests.command.shutil",
    "astropy.tests.command.tempfile"
   ]
  },
  "type": "function"
 },
 "astropy.tests.command.AstropyTest._generate_coverage_commands": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "astropy.tests.command.os",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.tests.command.AstropyTest.finalize_options": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "astropy.tests.command.AstropyTest.generate_testing_command": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "astropy.tests.command.AstropyTest.initialize_options": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "astropy.tests.command.AstropyTest.run": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "SystemExit",
    "astropy.tests.command.os",
    "astropy.tests.command.shutil",
    "astropy.tests.command.signal",
    "astropy.tests.command.subprocess",
    "astropy.tests.command.sys"
   ]
  },
  "type": "function"
 },
 "astropy.tests.command.Command": {
  "data": {
   "shadows": "setuptools.Command"
  },
  "type": "import"
 },
 "astropy.tests.command.FixRemoteDataOption": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "astropy.tests.command.FixRemoteDataOption.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.command.FixRemoteDataOption",
    "astropy.tests.command.sys",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.tests.command._fix_user_options": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "to_str_or_none",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.tests.command._fix_user_options.to_str_or_none": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.tests.command.coverage": {
  "data": {
   "shadows": "coverage"
  },
  "type": "import"
 },
 "astropy.tests.command.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.tests.command.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "astropy.tests.command.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "astropy.tests.command.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "astropy.tests.command.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.tests.command.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "astropy.tests.disable_internet": {
  "data": {
   "symbols_in_volume": [
    "astropy.tests.disable_internet.socket"
   ]
  },
  "type": "module"
 },
 "astropy.tests.disable_internet.INTERNET_OFF": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "astropy.tests.disable_internet._orig_opener": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.tests.disable_internet.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.tests.disable_internet.check_internet_off": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "astropy.tests.disable_internet.check_internet_off.new_function": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "IOError",
    "any",
    "astropy.tests.disable_internet.socket",
    "isinstance",
    "len",
    "original_function",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.tests.disable_internet.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "astropy.tests.disable_internet.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.tests.disable_internet.no_internet": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "astropy.tests.disable_internet.INTERNET_OFF",
    "astropy.tests.disable_internet.contextlib",
    "astropy.tests.disable_internet.turn_off_internet",
    "astropy.tests.disable_internet.turn_on_internet"
   ]
  },
  "type": "function"
 },
 "astropy.tests.disable_internet.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.tests.disable_internet.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "astropy.tests.disable_internet.socket_bind": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "astropy.tests.disable_internet.socket_connect": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "astropy.tests.disable_internet.socket_create_connection": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "astropy.tests.disable_internet.socket_original": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "astropy.tests.disable_internet.turn_off_internet": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "astropy.tests.disable_internet.INTERNET_OFF",
    "astropy.tests.disable_internet._orig_opener",
    "astropy.tests.disable_internet.check_internet_off",
    "astropy.tests.disable_internet.socket",
    "astropy.tests.disable_internet.socket_bind",
    "astropy.tests.disable_internet.socket_connect",
    "astropy.tests.disable_internet.socket_create_connection",
    "print"
   ]
  },
  "type": "function"
 },
 "astropy.tests.disable_internet.turn_on_internet": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "astropy.tests.disable_internet.INTERNET_OFF",
    "astropy.tests.disable_internet._orig_opener",
    "astropy.tests.disable_internet.socket",
    "astropy.tests.disable_internet.socket_bind",
    "astropy.tests.disable_internet.socket_connect",
    "astropy.tests.disable_internet.socket_create_connection",
    "print"
   ]
  },
  "type": "function"
 },
 "astropy.tests.disable_internet.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.tests.image_tests": {
  "data": {
   "symbols_in_volume": [
    "astropy.tests.image_tests.ROOT",
    "astropy.tests.image_tests.matplotlib",
    "distutils.version.LooseVersion"
   ]
  },
  "type": "module"
 },
 "astropy.tests.image_tests.IMAGE_REFERENCE_DIR": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "astropy.tests.image_tests.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "astropy.tests.image_tests.MPL_VERSION": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "astropy.tests.image_tests.ROOT": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "astropy.tests.image_tests.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "astropy.tests.output_checker": {
  "data": {
   "symbols_in_volume": [
    "astropy.tests.output_checker.doctest"
   ]
  },
  "type": "module"
 },
 "astropy.tests.output_checker.AstropyOutputChecker": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "astropy.tests.output_checker.doctest",
    "astropy.tests.output_checker.re"
   ]
  },
  "type": "class"
 },
 "astropy.tests.output_checker.AstropyOutputChecker.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "astropy.tests.output_checker.re"
   ]
  },
  "type": "function"
 },
 "astropy.tests.output_checker.AstropyOutputChecker.check_output": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "astropy.tests.output_checker.FIX",
    "astropy.tests.output_checker.FLOAT_CMP",
    "astropy.tests.output_checker.IGNORE_OUTPUT",
    "astropy.tests.output_checker.IGNORE_OUTPUT_2",
    "astropy.tests.output_checker.IGNORE_OUTPUT_3"
   ]
  },
  "type": "function"
 },
 "astropy.tests.output_checker.AstropyOutputChecker.do_fixes": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "astropy.tests.output_checker.re"
   ]
  },
  "type": "function"
 },
 "astropy.tests.output_checker.AstropyOutputChecker.normalize_floats": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "astropy.tests.output_checker.doctest",
    "astropy.tests.output_checker.re",
    "float",
    "len",
    "numpy.allclose",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.tests.output_checker.AstropyOutputChecker.output_difference": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "astropy.tests.output_checker.FIX"
   ]
  },
  "type": "function"
 },
 "astropy.tests.output_checker.FIX": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "astropy.tests.output_checker.FLOAT_CMP": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.tests.output_checker.IGNORE_OUTPUT": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "astropy.tests.output_checker.IGNORE_OUTPUT_2": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "astropy.tests.output_checker.IGNORE_OUTPUT_3": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "astropy.tests.output_checker.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.tests.output_checker.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.tests.output_checker.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "astropy.tests.output_checker.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.tests.output_checker.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.tests.output_checker.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.tests.output_checker.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.tests.runner": {
  "data": {},
  "type": "module"
 },
 "astropy.tests.runner.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.tests.runner.TestRunner": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "astropy.tests.runner.TestRunnerBase"
   ]
  },
  "type": "class"
 },
 "astropy.tests.runner.TestRunner.args": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "astropy.tests.runner.keyword",
    "astropy.tests.runner.shlex",
    "astropy.tests.runner.sys"
   ]
  },
  "type": "function"
 },
 "astropy.tests.runner.TestRunner.coverage": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "astropy.tests.runner.keyword",
    "astropy.tests.runner.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.tests.runner.TestRunner.docs_path": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "astropy.tests.runner.keyword",
    "astropy.tests.runner.os",
    "astropy.tests.runner.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.tests.runner.TestRunner.open_files": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "ImportError",
    "SystemError",
    "astropy.tests.runner.keyword",
    "print"
   ]
  },
  "type": "function"
 },
 "astropy.tests.runner.TestRunner.package": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.runner.keyword",
    "astropy.tests.runner.os"
   ]
  },
  "type": "function"
 },
 "astropy.tests.runner.TestRunner.parallel": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "ImportError",
    "SystemError",
    "astropy.tests.runner.keyword"
   ]
  },
  "type": "function"
 },
 "astropy.tests.runner.TestRunner.pastebin": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.runner.keyword"
   ]
  },
  "type": "function"
 },
 "astropy.tests.runner.TestRunner.pdb": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "astropy.tests.runner.keyword"
   ]
  },
  "type": "function"
 },
 "astropy.tests.runner.TestRunner.pep8": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "ImportError",
    "astropy.tests.runner.keyword"
   ]
  },
  "type": "function"
 },
 "astropy.tests.runner.TestRunner.plugins": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "astropy.tests.runner.keyword"
   ]
  },
  "type": "function"
 },
 "astropy.tests.runner.TestRunner.remote_data": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "astropy.tests.runner.keyword",
    "astropy.tests.runner.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.tests.runner.TestRunner.repeat": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "astropy.tests.runner.keyword"
   ]
  },
  "type": "function"
 },
 "astropy.tests.runner.TestRunner.run_tests": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "astropy.tests.runner.TestRunner",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.tests.runner.TestRunner.skip_docs": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "astropy.tests.runner.keyword"
   ]
  },
  "type": "function"
 },
 "astropy.tests.runner.TestRunner.test_path": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.runner.keyword",
    "astropy.tests.runner.os"
   ]
  },
  "type": "function"
 },
 "astropy.tests.runner.TestRunner.verbose": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "astropy.tests.runner.keyword"
   ]
  },
  "type": "function"
 },
 "astropy.tests.runner.TestRunnerBase": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.tests.runner.TestRunnerBase.__init__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "astropy.tests.runner.os"
   ]
  },
  "type": "function"
 },
 "astropy.tests.runner.TestRunnerBase.__new__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "Exception",
    "NotImplemented",
    "astropy.tests.runner.TestRunnerBase",
    "astropy.tests.runner.inspect",
    "collections.OrderedDict",
    "filter",
    "func",
    "func.__doc__",
    "func.__doc__.strip",
    "func._default_value",
    "sorted",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.tests.runner.TestRunnerBase._generate_args": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "NotImplemented",
    "TypeError",
    "astropy.tests.runner.copy",
    "astropy.tests.runner.keyword",
    "func",
    "getattr",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.tests.runner.TestRunnerBase.make_test_runner_in": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "find_current_module",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.tests.runner.TestRunnerBase.make_test_runner_in.test": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "wraps"
   ]
  },
  "type": "function"
 },
 "astropy.tests.runner.TestRunnerBase.run_tests": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "TypeError",
    "astropy.tests.runner.pytest",
    "astropy.tests.runner.tempfile",
    "list",
    "set",
    "set_temp_cache",
    "set_temp_config"
   ]
  },
  "type": "function"
 },
 "astropy.tests.runner.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.tests.runner.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.tests.runner.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "astropy.tests.runner.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.tests.runner.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "astropy.tests.runner.keyword": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.tests.runner.keyword.__call__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "astropy.tests.runner.keyword",
    "f.__doc__"
   ]
  },
  "type": "function"
 },
 "astropy.tests.runner.keyword.__call__.keyword": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "astropy.tests.runner.keyword.__init__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "astropy.tests.runner.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.tests.runner.plugin": {
  "data": {
   "shadows": "xdist.plugin"
  },
  "type": "import"
 },
 "astropy.tests.runner.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.tests.runner.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "astropy.tests.runner.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.tests.runner.pytest_pep8": {
  "data": {
   "shadows": "pytest_pep8"
  },
  "type": "import"
 },
 "astropy.tests.runner.shlex": {
  "data": {
   "shadows": "shlex"
  },
  "type": "import"
 },
 "astropy.tests.runner.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.tests.runner.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "astropy.tests.runner.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.tests.runner.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.tests.setup_package": {
  "data": {},
  "type": "module"
 },
 "astropy.tests.setup_package.get_package_data": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "astropy.tests.setup_package.requires_2to3": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "astropy.tests.test_logger": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "astropy.tests.test_logger.setup_function",
    "astropy.tests.test_logger.sys",
    "astropy.tests.test_logger.warnings",
    "get_ipython"
   ]
  },
  "type": "module"
 },
 "astropy.tests.test_logger._excepthook": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.tests.test_logger._showwarning": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "astropy.tests.test_logger.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.tests.test_logger.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.tests.test_logger.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "astropy.tests.test_logger.ip": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "astropy.tests.test_logger.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.tests.test_logger.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.tests.test_logger.setup_function": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "astropy.tests.test_logger.imp",
    "astropy.tests.test_logger.sys",
    "astropy.tests.test_logger.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.tests.test_logger.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.tests.test_logger.teardown_module": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "astropy.tests.test_logger.test_exception_logging": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "Exception",
    "astropy.tests.test_logger.pytest",
    "astropy.tests.test_logger.sys",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.tests.test_logger.test_exception_logging_argless_exception": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "Exception",
    "astropy.tests.test_logger.pytest",
    "astropy.tests.test_logger.sys",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.tests.test_logger.test_exception_logging_disable_no_enable": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "astropy.tests.test_logger.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.tests.test_logger.test_exception_logging_enable_twice": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "astropy.tests.test_logger.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.tests.test_logger.test_exception_logging_origin": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "HomogeneousList",
    "TypeError",
    "astropy.tests.test_logger.pytest",
    "astropy.tests.test_logger.sys",
    "int",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.tests.test_logger.test_exception_logging_overridden": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "astropy.tests.test_logger.pytest",
    "astropy.tests.test_logger.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.tests.test_logger.test_import_error_in_warning_logging": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "AstropyWarning",
    "FakeModule",
    "astropy.tests.test_logger.sys",
    "astropy.tests.test_logger.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.tests.test_logger.test_import_error_in_warning_logging.FakeModule": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.tests.test_logger.test_import_error_in_warning_logging.FakeModule.__getattr__": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "function"
 },
 "astropy.tests.test_logger.test_log_to_file": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "astropy.tests.test_logger.pytest",
    "eval",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.tests.test_logger.test_log_to_file_level": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "eval",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.tests.test_logger.test_log_to_file_origin1": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.tests.test_logger.test_log_to_file_origin2": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.tests.test_logger.test_log_to_list": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "astropy.tests.test_logger.pytest",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.tests.test_logger.test_log_to_list_level": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.tests.test_logger.test_log_to_list_origin1": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.tests.test_logger.test_log_to_list_origin2": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.tests.test_logger.test_warning_logging_with_io_votable_warning": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "catch_warnings",
    "len",
    "vo_warn"
   ]
  },
  "type": "function"
 },
 "astropy.tests.test_logger.test_warnings_logging": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "astropy.tests.test_logger.warnings",
    "catch_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.tests.test_logger.test_warnings_logging_disable_no_enable": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "astropy.tests.test_logger.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.tests.test_logger.test_warnings_logging_enable_twice": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "astropy.tests.test_logger.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.tests.test_logger.test_warnings_logging_overridden": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "astropy.tests.test_logger.pytest",
    "astropy.tests.test_logger.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.tests.test_logger.test_warnings_logging_with_custom_class": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "astropy.tests.test_logger.warnings",
    "catch_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.tests.test_logger.test_warnings_logging_with_custom_class.CustomAstropyWarningClass": {
  "data": {
   "lineno": 121
  },
  "type": "class"
 },
 "astropy.tests.test_logger.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.tests.test_logger.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.tests.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.tests.tests.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.tests.tests.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.tests.tests.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_imports": {
  "data": {
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "module"
 },
 "astropy.tests.tests.test_imports._py2_packages": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "astropy.tests.tests.test_imports._py3_packages": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "astropy.tests.tests.test_imports.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_imports.astropy": {
  "data": {
   "shadows": "astropy"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_imports.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_imports.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_imports.pkgutil": {
  "data": {
   "shadows": "pkgutil"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_imports.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_imports.test_imports": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "astropy.tests.tests.test_imports._py2_packages",
    "astropy.tests.tests.test_imports._py3_packages",
    "astropy.tests.tests.test_imports.os",
    "astropy.tests.tests.test_imports.pkgutil",
    "astropy.tests.tests.test_imports.types",
    "find_current_module",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_imports.test_imports.onerror": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_imports.test_toplevel_namespace": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "astropy.tests.tests.test_imports.astropy",
    "dir"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_imports.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_imports.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_open_file_detection": {
  "data": {},
  "type": "module"
 },
 "astropy.tests.tests.test_open_file_detection.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_open_file_detection.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_open_file_detection.fd": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "astropy.tests.tests.test_open_file_detection.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_open_file_detection.teardown": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "astropy.tests.tests.test_open_file_detection.fd"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_open_file_detection.test_open_file_detection": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "astropy.tests.tests.test_open_file_detection.fd",
    "get_pkg_data_filename",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_open_file_detection.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_quantity_helpers": {
  "data": {},
  "type": "module"
 },
 "astropy.tests.tests.test_quantity_helpers.test_assert_quantity_allclose": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "AssertionError",
    "assert_quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_quantity_helpers.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_run_tests": {
  "data": {},
  "type": "module"
 },
 "astropy.tests.tests.test_run_tests.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_run_tests.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_run_tests.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_run_tests.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_run_tests.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_run_tests.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_run_tests.run_tests": {
  "data": {
   "shadows": "test"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_run_tests.test_doctest_float_replacement": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "astropy.tests.tests.test_run_tests.doctest",
    "astropy.tests.tests.test_run_tests.pytest",
    "str",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_run_tests.test_module_not_found": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_run_tests.test_pastebin_keyword": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_run_tests.test_unicode_literal_conversion": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_run_tests.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_runner": {
  "data": {},
  "type": "module"
 },
 "astropy.tests.tests.test_runner._TestRunner": {
  "data": {
   "shadows": "astropy.tests.runner.TestRunner"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_runner._TestRunnerBase": {
  "data": {
   "shadows": "astropy.tests.runner.TestRunnerBase"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_runner.keyword": {
  "data": {
   "shadows": "astropy.tests.runner.keyword"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_runner.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_runner.test_disable_kwarg": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "TypeError",
    "astropy.tests.tests.test_runner.pytest",
    "no_remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_runner.test_disable_kwarg.no_remote_data": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "astropy.tests.runner.TestRunner"
   ]
  },
  "type": "class"
 },
 "astropy.tests.tests.test_runner.test_disable_kwarg.no_remote_data.remote_data": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "NotImplemented",
    "astropy.tests.runner.keyword"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_runner.test_docs": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "Spam"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_runner.test_docs.Spam": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "astropy.tests.runner.TestRunnerBase"
   ]
  },
  "type": "class"
 },
 "astropy.tests.tests.test_runner.test_docs.Spam.eggs": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "astropy.tests.runner.keyword"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_runner.test_docs.Spam.spam": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "astropy.tests.runner.keyword"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_runner.test_invalid_kwarg": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "TypeError",
    "astropy.tests.tests.test_runner.pytest",
    "bad_return"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_runner.test_invalid_kwarg.bad_return": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "astropy.tests.runner.TestRunnerBase"
   ]
  },
  "type": "class"
 },
 "astropy.tests.tests.test_runner.test_invalid_kwarg.bad_return.remote_data": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "astropy.tests.runner.keyword"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_runner.test_new_kwarg": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "Spam"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_runner.test_new_kwarg.Spam": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "astropy.tests.runner.TestRunnerBase"
   ]
  },
  "type": "class"
 },
 "astropy.tests.tests.test_runner.test_new_kwarg.Spam.spam": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "astropy.tests.runner.keyword"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_runner.test_priority": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "Spam"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_runner.test_priority.Spam": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "astropy.tests.runner.TestRunnerBase"
   ]
  },
  "type": "class"
 },
 "astropy.tests.tests.test_runner.test_priority.Spam.eggs": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "astropy.tests.runner.keyword"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_runner.test_priority.Spam.spam": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "astropy.tests.runner.keyword"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_runner.test_wrong_kwarg": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "TypeError",
    "astropy.tests.runner.TestRunner",
    "astropy.tests.tests.test_runner.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_skip_remote_data": {
  "data": {},
  "type": "module"
 },
 "astropy.tests.tests.test_skip_remote_data.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_skip_remote_data.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_skip_remote_data.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_skip_remote_data.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_skip_remote_data.test_skip_remote_data": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "astropy.tests.tests.test_skip_remote_data.pytest",
    "download_file",
    "get_pkg_data_filename"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_skip_remote_data.test_skip_remote_data_astropy": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "Exception",
    "astropy.tests.tests.test_skip_remote_data.pytest",
    "download_file",
    "get_pkg_data_filename",
    "remote_data",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_skip_remote_data.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_socketblocker": {
  "data": {
   "symbols_in_volume": [
    "astropy.tests.tests.test_socketblocker.sys"
   ]
  },
  "type": "module"
 },
 "astropy.tests.tests.test_socketblocker.PY3_4": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "astropy.tests.tests.test_socketblocker.StoppableHTTPServer": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.tests.tests.test_socketblocker.StoppableHTTPServer.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "astropy.tests.tests.test_socketblocker.StoppableHTTPServer",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_socketblocker.StoppableHTTPServer.handle_request": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "astropy.tests.tests.test_socketblocker.StoppableHTTPServer",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_socketblocker.StoppableHTTPServer.serve_forever": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "astropy.tests.tests.test_socketblocker.Thread": {
  "data": {
   "shadows": "threading.Thread"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_socketblocker._square": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "astropy.tests.tests.test_socketblocker.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_socketblocker.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_socketblocker.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_socketblocker.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_socketblocker.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_socketblocker.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_socketblocker.test_localconnect_succeeds": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "astropy.tests.tests.test_socketblocker.StoppableHTTPServer",
    "astropy.tests.tests.test_socketblocker.pytest",
    "astropy.tests.tests.test_socketblocker.time",
    "threading.Thread",
    "urlopen"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_socketblocker.test_multiprocessing_forkserver": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "astropy.tests.tests.test_socketblocker._square",
    "astropy.tests.tests.test_socketblocker.multiprocessing",
    "astropy.tests.tests.test_socketblocker.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_socketblocker.test_outgoing_fails": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "IOError",
    "astropy.tests.tests.test_socketblocker.pytest",
    "no_internet",
    "urlopen"
   ]
  },
  "type": "function"
 },
 "astropy.tests.tests.test_socketblocker.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "astropy.tests.tests.test_socketblocker.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.tests.tests.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.time": {
  "data": {},
  "type": "module"
 },
 "astropy.time.formats": {
  "data": {
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "module"
 },
 "astropy.time.formats.FITS_DEPRECATED_SCALES": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "astropy.time.formats.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.time.formats.TIME_DELTA_FORMATS": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "astropy.time.formats.TIME_FORMATS": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "astropy.time.formats.TimeAstropyTime": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "astropy.time.formats.TimeUnique"
   ]
  },
  "type": "class"
 },
 "astropy.time.formats.TimeAstropyTime.__new__": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "OutTimeFormat",
    "Time",
    "TypeError",
    "all",
    "getattr",
    "isinstance",
    "numpy.atleast_1d",
    "numpy.concatenate",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeBesselianEpoch": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "astropy.time.formats.TimeEpochDate",
    "epoch_to_jd",
    "jd_to_epoch"
   ]
  },
  "type": "class"
 },
 "astropy.time.formats.TimeBesselianEpoch._check_val_type": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "ValueError",
    "astropy.time.formats.TimeBesselianEpoch",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeBesselianEpochString": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "astropy.time.formats.TimeEpochDateString",
    "epoch_to_jd",
    "jd_to_epoch"
   ]
  },
  "type": "class"
 },
 "astropy.time.formats.TimeCxcSec": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "astropy.time.formats.TimeFromEpoch"
   ]
  },
  "type": "class"
 },
 "astropy.time.formats.TimeDatetime": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "astropy.time.formats.TimeUnique",
    "property"
   ]
  },
  "type": "class"
 },
 "astropy.time.formats.TimeDatetime._check_val_type": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "astropy.time.formats.datetime",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeDatetime.set_jds": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "id",
    "numpy.double",
    "numpy.intc",
    "numpy.nditer",
    "numpy.object"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeDatetime.to_value": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "ScaleValueError",
    "ValueError",
    "astropy.time.formats.TimezoneInfo",
    "astropy.time.formats.datetime",
    "id",
    "numpy.nditer",
    "numpy.object"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeDecimalYear": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "astropy.time.formats.TimeFormat"
   ]
  },
  "type": "class"
 },
 "astropy.time.formats.TimeDecimalYear.set_jds": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "Time",
    "day_frac",
    "numpy.double",
    "numpy.int",
    "numpy.ones_like",
    "numpy.trunc",
    "numpy.zeros_like",
    "two_sum"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeDecimalYear.value": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "numpy.ones_like",
    "numpy.zeros_like",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeDeltaFormat": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "astropy.time.formats.TimeDeltaFormatMeta",
    "astropy.time.formats.TimeFormat"
   ]
  },
  "type": "class"
 },
 "astropy.time.formats.TimeDeltaFormat._check_scale": {
  "data": {
   "lineno": 1115,
   "symbols_in_volume": [
    "ScaleValueError"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeDeltaFormat.set_jds": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "day_frac"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeDeltaFormat.value": {
  "data": {
   "lineno": 1130,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeDeltaFormatMeta": {
  "data": {
   "lineno": 1107,
   "symbols_in_volume": [
    "astropy.time.formats.TIME_DELTA_FORMATS",
    "astropy.time.formats.TimeFormatMeta"
   ]
  },
  "type": "class"
 },
 "astropy.time.formats.TimeDeltaJD": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "astropy.time.formats.TimeDeltaFormat"
   ]
  },
  "type": "class"
 },
 "astropy.time.formats.TimeDeltaSec": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "astropy.time.formats.TimeDeltaFormat"
   ]
  },
  "type": "class"
 },
 "astropy.time.formats.TimeEpochDate": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "astropy.time.formats.TimeFormat"
   ]
  },
  "type": "class"
 },
 "astropy.time.formats.TimeEpochDate.set_jds": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "day_frac",
    "epoch_to_jd",
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeEpochDate.value": {
  "data": {
   "lineno": 1025,
   "symbols_in_volume": [
    "getattr",
    "jd_to_epoch",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeEpochDateString": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "astropy.time.formats.TimeString"
   ]
  },
  "type": "class"
 },
 "astropy.time.formats.TimeEpochDateString.set_jds": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "epoch_to_jd",
    "float",
    "getattr",
    "numpy.double",
    "numpy.nditer"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeEpochDateString.value": {
  "data": {
   "lineno": 1081,
   "symbols_in_volume": [
    "getattr",
    "jd_to_epoch",
    "numpy.array",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeFITS": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "astropy.time.formats.TimeString",
    "tuple"
   ]
  },
  "type": "class"
 },
 "astropy.time.formats.TimeFITS.format_string": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "astropy.time.formats.TimeFITS",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeFITS.parse_string": {
  "data": {
   "lineno": 955,
   "symbols_in_volume": [
    "ValueError",
    "astropy.time.formats.FITS_DEPRECATED_SCALES",
    "astropy.time.formats.re",
    "float",
    "int",
    "sorted"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeFITS.value": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "astropy.time.formats.TimeFITS",
    "property",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeFormat": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "astropy.time.formats.TimeFormatMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.time.formats.TimeFormat.__init__": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "astropy.time.formats.TimeFormat.__len__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeFormat._check_scale": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ScaleValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeFormat._check_val_type": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "TypeError",
    "asarray_or_scalar",
    "getattr",
    "numpy.all",
    "numpy.double",
    "numpy.isfinite",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeFormat._check_val_type.asarray_or_scalar": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "isinstance",
    "numpy.asarray",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeFormat.scale": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "astropy.time.formats.TimeFormat.set_jds": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeFormat.to_value": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "astropy.time.formats.TimeFormat.value": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeFormatMeta": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "astropy.time.formats.TIME_FORMATS",
    "type"
   ]
  },
  "type": "class"
 },
 "astropy.time.formats.TimeFormatMeta.__new__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "astropy.time.formats.TimeFormatMeta",
    "astropy.time.formats._regexify_subfmts",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeFromEpoch": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "astropy.time.formats.TimeFormat",
    "property"
   ]
  },
  "type": "class"
 },
 "astropy.time.formats.TimeFromEpoch.__init__": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "Time",
    "astropy.time.formats.TimeFromEpoch",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeFromEpoch.set_jds": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "Exception",
    "ScaleValueError",
    "Time",
    "day_frac",
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeFromEpoch.to_value": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "ValueError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeGPS": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "astropy.time.formats.TimeFromEpoch"
   ]
  },
  "type": "class"
 },
 "astropy.time.formats.TimeISO": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "astropy.time.formats.TimeString"
   ]
  },
  "type": "class"
 },
 "astropy.time.formats.TimeISO.parse_string": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "ValueError",
    "astropy.time.formats.TimeISO",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeISOT": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "astropy.time.formats.TimeISO"
   ]
  },
  "type": "class"
 },
 "astropy.time.formats.TimeJD": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "astropy.time.formats.TimeFormat"
   ]
  },
  "type": "class"
 },
 "astropy.time.formats.TimeJD.set_jds": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "day_frac"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeJD.value": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeJulianEpoch": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "astropy.time.formats.TimeEpochDate",
    "epoch_to_jd",
    "jd_to_epoch"
   ]
  },
  "type": "class"
 },
 "astropy.time.formats.TimeJulianEpochString": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "astropy.time.formats.TimeEpochDateString",
    "epoch_to_jd",
    "jd_to_epoch"
   ]
  },
  "type": "class"
 },
 "astropy.time.formats.TimeMJD": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "astropy.time.formats.TimeFormat"
   ]
  },
  "type": "class"
 },
 "astropy.time.formats.TimeMJD.set_jds": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "day_frac"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeMJD.value": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimePlotDate": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "astropy.time.formats.TimeFromEpoch"
   ]
  },
  "type": "class"
 },
 "astropy.time.formats.TimeString": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "astropy.time.formats.TimeUnique"
   ]
  },
  "type": "class"
 },
 "astropy.time.formats.TimeString._check_val_type": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeString._select_subfmts": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "ValueError",
    "astropy.time.formats.fnmatch",
    "fnmatchcase",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeString.format_string": {
  "data": {
   "lineno": 784
  },
  "type": "function"
 },
 "astropy.time.formats.TimeString.parse_string": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "astropy.time.formats.re",
    "astropy.time.formats.time",
    "float",
    "getattr",
    "int",
    "isinstance",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeString.set_jds": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "id",
    "numpy.double",
    "numpy.intc",
    "numpy.nditer"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeString.str_kwargs": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "astropy.time.formats.datetime",
    "id",
    "int",
    "numpy.nditer"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeString.value": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "numpy.array",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimeUnique": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "astropy.time.formats.TimeFormat"
   ]
  },
  "type": "class"
 },
 "astropy.time.formats.TimeUnix": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "astropy.time.formats.TimeFromEpoch"
   ]
  },
  "type": "class"
 },
 "astropy.time.formats.TimeYearDayTime": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "astropy.time.formats.TimeISO"
   ]
  },
  "type": "class"
 },
 "astropy.time.formats.TimezoneInfo": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "astropy.time.formats.datetime"
   ]
  },
  "type": "class"
 },
 "astropy.time.formats.TimezoneInfo.__init__": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "astropy.time.formats.datetime"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimezoneInfo.dst": {
  "data": {
   "lineno": 676
  },
  "type": "function"
 },
 "astropy.time.formats.TimezoneInfo.tzname": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.TimezoneInfo.utcoffset": {
  "data": {
   "lineno": 670
  },
  "type": "function"
 },
 "astropy.time.formats.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.time.formats.__doctest_skip__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "astropy.time.formats._regexify_subfmts": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "astropy.time.formats.re",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.time.formats.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.time.formats.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "astropy.time.formats.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.time.formats.erfa": {
  "data": {
   "shadows": "_erfa"
  },
  "type": "import"
 },
 "astropy.time.formats.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "astropy.time.formats.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.time.formats.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.time.formats.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.time.formats.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "astropy.time.formats.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.time.formats.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.time.setup_package": {
  "data": {},
  "type": "module"
 },
 "astropy.time.setup_package.requires_2to3": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "astropy.time.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.time.tests.test_basic": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.time.tests.test_basic.functools",
    "numpy.allclose"
   ]
  },
  "type": "module"
 },
 "astropy.time.tests.test_basic.HAS_PYTZ": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "astropy.time.tests.test_basic.TestBasic": {
  "data": {
   "lineno": 46
  },
  "type": "class"
 },
 "astropy.time.tests.test_basic.TestBasic.test_all_transforms": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "Time",
    "astropy.time.tests.test_basic.allclose_jd",
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestBasic.test_copy_time": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "Time",
    "astropy.time.tests.test_basic.pytest",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestBasic.test_creating_all_formats": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "Time",
    "astropy.time.tests.test_basic.datetime"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestBasic.test_datetime": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "Time",
    "astropy.time.tests.test_basic.datetime",
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestBasic.test_different_dimensions": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "Time",
    "numpy.arange",
    "numpy.broadcast"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestBasic.test_epoch_transform": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "Time",
    "astropy.time.tests.test_basic.allclose_jd",
    "astropy.time.tests.test_basic.allclose_year",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestBasic.test_getitem": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "Time",
    "len",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.ndarray",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestBasic.test_init_from_time_objects": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "Time",
    "len",
    "numpy.all",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestBasic.test_input_validation": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "Time",
    "ValueError",
    "astropy.time.tests.test_basic.pytest",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestBasic.test_location": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "EarthLocation",
    "Time",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestBasic.test_location_array": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "Time",
    "ValueError",
    "astropy.time.tests.test_basic.pytest",
    "numpy.all",
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestBasic.test_precision": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "Time"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestBasic.test_properties": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "Time",
    "astropy.time.tests.test_basic.allclose_jd",
    "astropy.time.tests.test_basic.allclose_sec",
    "astropy.time.tests.test_basic.datetime"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestBasic.test_simple": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "Time",
    "astropy.time.tests.test_basic.allclose_jd",
    "astropy.time.tests.test_basic.allclose_jd2",
    "astropy.time.tests.test_basic.allclose_sec",
    "numpy.array",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestBasic.test_transforms": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "Time"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestBasic.test_utc_leap_sec": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "Time",
    "astropy.time.tests.test_basic.allclose_sec"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestCopyReplicate": {
  "data": {
   "lineno": 737
  },
  "type": "class"
 },
 "astropy.time.tests.test_basic.TestCopyReplicate.test_copy": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "Time"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestCopyReplicate.test_immutable_input": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "Time",
    "astropy.time.tests.test_basic.allclose_jd",
    "numpy.array",
    "numpy.double"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestCopyReplicate.test_replicate": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "Time"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestSofaErrors": {
  "data": {
   "lineno": 712
  },
  "type": "class"
 },
 "astropy.time.tests.test_basic.TestSofaErrors.test_bad_time": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "ValueError",
    "astropy.time.tests.test_basic.allclose_jd",
    "astropy.time.tests.test_basic.pytest",
    "catch_warnings",
    "id",
    "len",
    "numpy.array",
    "numpy.intc"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestSubFormat": {
  "data": {
   "lineno": 521
  },
  "type": "class"
 },
 "astropy.time.tests.test_basic.TestSubFormat.test_bad_input_subformat": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "Time",
    "ValueError",
    "astropy.time.tests.test_basic.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestSubFormat.test_epoch_times": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "Time",
    "astropy.time.tests.test_basic.allclose_sec",
    "getattr",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestSubFormat.test_fits_format": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "Time",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestSubFormat.test_fits_scale": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "Time",
    "ValueError",
    "astropy.time.tests.test_basic.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestSubFormat.test_fits_scale_representation": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "Time"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestSubFormat.test_input_subformat": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "Time",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestSubFormat.test_input_subformat_fail": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "Time",
    "ValueError",
    "astropy.time.tests.test_basic.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestSubFormat.test_output_subformat": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "Time",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestSubFormat.test_scale_default": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "Time"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestSubFormat.test_scale_input": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "Time",
    "astropy.time.tests.test_basic.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestSubFormat.test_yday_format": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "Time",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestVal2": {
  "data": {
   "lineno": 498
  },
  "type": "class"
 },
 "astropy.time.tests.test_basic.TestVal2.test_val2": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "Time"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestVal2.test_val2_ignored": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "Time"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.TestVal2.test_val_broadcasts_against_val2": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "Time",
    "ValueError",
    "astropy.time.tests.test_basic.pytest",
    "numpy.arange",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.allclose_jd": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "astropy.time.tests.test_basic.allclose_jd2": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "astropy.time.tests.test_basic.allclose_sec": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "astropy.time.tests.test_basic.allclose_year": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "astropy.time.tests.test_basic.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "astropy.time.tests.test_basic.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "astropy.time.tests.test_basic.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "astropy.time.tests.test_basic.erfa": {
  "data": {
   "shadows": "_erfa"
  },
  "type": "import"
 },
 "astropy.time.tests.test_basic.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "astropy.time.tests.test_basic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.time.tests.test_basic.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.time.tests.test_basic.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "astropy.time.tests.test_basic.setup_function": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.teardown_function": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.test_TimeFormat_scale": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "Time"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.test_bool": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "Time",
    "bool",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.test_byteorder": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "Time",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.test_cache": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "Time"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.test_datetime_tzinfo": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "TZm6",
    "Time",
    "astropy.time.tests.test_basic.datetime"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.test_datetime_tzinfo.TZm6": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "astropy.time.tests.test_basic.datetime"
   ]
  },
  "type": "class"
 },
 "astropy.time.tests.test_basic.test_datetime_tzinfo.TZm6.utcoffset": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "astropy.time.tests.test_basic.datetime"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.test_decimalyear": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "Time",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.test_dir": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "Time",
    "dir"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.test_fits_year0": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "Time"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.test_fits_year10000": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "Time"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.test_isiterable": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": [
    "Time",
    "Time.now",
    "isiterable"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.test_len_size": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "Time",
    "TypeError",
    "astropy.time.tests.test_basic.pytest",
    "len",
    "numpy.arange",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.test_now": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "Time.now",
    "astropy.time.tests.test_basic.datetime"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.test_python_builtin_copy": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "Time",
    "astropy.time.tests.test_basic.copy"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.test_remove_astropy_time": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "Time",
    "ValueError",
    "astropy.time.tests.test_basic.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.test_replicate_value_error": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "Time",
    "ValueError",
    "astropy.time.tests.test_basic.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.test_scale_conversion": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "Time",
    "Time.now",
    "astropy.time.tests.test_basic.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.test_set_format_basic": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": [
    "Time",
    "astropy.time.tests.test_basic.datetime",
    "format"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.test_set_format_does_not_share_subfmt": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "Time"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.test_set_format_shares_subfmt": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "Time"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.test_subfmts_regex": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "Time"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.test_subfmts_regex.TimeLongYear": {
  "data": {
   "lineno": 953
  },
  "type": "class"
 },
 "astropy.time.tests.test_basic.test_to_datetime": {
  "data": {
   "lineno": 1052,
   "symbols_in_volume": [
    "Time",
    "TimezoneInfo",
    "ValueError",
    "astropy.time.tests.test_basic.datetime",
    "astropy.time.tests.test_basic.pytest",
    "numpy.all",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.test_to_datetime_pytz": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "Time",
    "astropy.time.tests.test_basic.datetime",
    "astropy.time.tests.test_basic.pytest",
    "astropy.time.tests.test_basic.pytz",
    "numpy.all",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_basic.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.time.tests.test_comparisons": {
  "data": {},
  "type": "module"
 },
 "astropy.time.tests.test_comparisons.TestTimeComparisons": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "astropy.time.tests.test_comparisons.TestTimeComparisons.setup": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "Time",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_comparisons.TestTimeComparisons.test_miscompares": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Time",
    "astropy.time.tests.test_comparisons.operator",
    "astropy.time.tests.test_comparisons.pytest",
    "op",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_comparisons.TestTimeComparisons.test_time": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_comparisons.TestTimeComparisons.test_timedelta": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "TimeDelta",
    "astropy.time.tests.test_comparisons.pytest",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_comparisons.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.time.tests.test_comparisons.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "astropy.time.tests.test_comparisons.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.time.tests.test_corrs": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.time.tests.test_corrs.HAS_JPLEPHEM": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "astropy.time.tests.test_corrs.TestHelioBaryCentric": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "astropy.time.tests.test_corrs.TestHelioBaryCentric.setup": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "EarthLocation",
    "SkyCoord",
    "Time"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_corrs.TestHelioBaryCentric.test_arrays": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "astropy.time.tests.test_corrs.TestHelioBaryCentric.test_barycentric": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "abs",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_corrs.TestHelioBaryCentric.test_ephemerides": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_corrs.TestHelioBaryCentric.test_heliocentric": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "abs",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_corrs.jplephem": {
  "data": {
   "shadows": "jplephem"
  },
  "type": "import"
 },
 "astropy.time.tests.test_corrs.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.time.tests.test_delta": {
  "data": {
   "symbols_in_volume": [
    "astropy.time.tests.test_delta.functools",
    "numpy.allclose"
   ]
  },
  "type": "module"
 },
 "astropy.time.tests.test_delta.TestTimeDelta": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "astropy.time.tests.test_delta.TestTimeDelta.setup": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Time",
    "TimeDelta",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_delta.TestTimeDelta.test_add": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "astropy.time.tests.test_delta.allclose_sec",
    "astropy.time.tests.test_delta.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_delta.TestTimeDelta.test_add_vector": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "Time",
    "TimeDelta",
    "astropy.time.tests.test_delta.allclose_jd"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_delta.TestTimeDelta.test_copy_timedelta": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "Time",
    "TimeDelta",
    "astropy.time.tests.test_delta.allclose_sec",
    "astropy.time.tests.test_delta.pytest",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_delta.TestTimeDelta.test_keep_properties": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "TimeDelta",
    "astropy.time.tests.test_delta.operator",
    "hasattr",
    "op"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_delta.TestTimeDelta.test_mul_div": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "astropy.time.tests.test_delta.allclose_jd",
    "astropy.time.tests.test_delta.pytest",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_delta.TestTimeDelta.test_neg_abs": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "abs",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_delta.TestTimeDelta.test_set_format": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "TimeDelta"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_delta.TestTimeDelta.test_sub": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "astropy.time.tests.test_delta.allclose_jd",
    "astropy.time.tests.test_delta.allclose_sec",
    "astropy.time.tests.test_delta.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_delta.TestTimeDelta.test_sub_vector": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "Time",
    "TimeDelta",
    "astropy.time.tests.test_delta.allclose_jd"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_delta.TestTimeDeltaScales": {
  "data": {
   "lineno": 250
  },
  "type": "class"
 },
 "astropy.time.tests.test_delta.TestTimeDeltaScales.setup": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "Time",
    "dict"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_delta.TestTimeDeltaScales.test_delta_day_is_86400_seconds": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "TimeDelta",
    "astropy.time.tests.test_delta.allclose_jd",
    "astropy.time.tests.test_delta.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_delta.TestTimeDeltaScales.test_delta_scales_definition": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "TimeDelta",
    "astropy.time.tests.test_delta.pytest",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_delta.TestTimeDeltaScales.test_scales_for_delta_minus_delta": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "TypeError",
    "astropy.time.tests.test_delta.allclose_sec",
    "astropy.time.tests.test_delta.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_delta.TestTimeDeltaScales.test_scales_for_delta_scale_is_none": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "TimeDelta",
    "astropy.time.tests.test_delta.allclose_jd",
    "astropy.time.tests.test_delta.itertools",
    "astropy.time.tests.test_delta.operator",
    "astropy.time.tests.test_delta.pytest",
    "list",
    "op"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_delta.TestTimeDeltaScales.test_scales_for_time_minus_time": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "astropy.time.tests.test_delta.allclose_jd",
    "astropy.time.tests.test_delta.itertools",
    "astropy.time.tests.test_delta.pytest",
    "getattr",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_delta.allclose_jd": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "astropy.time.tests.test_delta.allclose_jd2": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "astropy.time.tests.test_delta.allclose_sec": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "astropy.time.tests.test_delta.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "astropy.time.tests.test_delta.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "astropy.time.tests.test_delta.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.time.tests.test_delta.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "astropy.time.tests.test_delta.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.time.tests.test_delta.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.time.tests.test_guess": {
  "data": {},
  "type": "module"
 },
 "astropy.time.tests.test_guess.TestGuess": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "astropy.time.tests.test_guess.TestGuess.test_guess1": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "Time",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_guess.TestGuess.test_guess2": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "Time",
    "ValueError",
    "astropy.time.tests.test_guess.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_guess.TestGuess.test_guess3": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Time",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_guess.TestGuess.test_guess4": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "Time",
    "ValueError",
    "astropy.time.tests.test_guess.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_guess.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.time.tests.test_methods": {
  "data": {},
  "type": "module"
 },
 "astropy.time.tests.test_methods.TestArithmetic": {
  "data": {
   "lineno": 283
  },
  "type": "class"
 },
 "astropy.time.tests.test_methods.TestArithmetic.setup": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "Time",
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_methods.TestArithmetic.test_argfuncs": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "astropy.time.tests.test_methods.itertools",
    "astropy.time.tests.test_methods.pytest",
    "getattr",
    "numpy",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_methods.TestArithmetic.test_argmax": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_methods.TestArithmetic.test_argmin": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_methods.TestArithmetic.test_argsort": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_methods.TestArithmetic.test_funcs": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "astropy.time.tests.test_methods.itertools",
    "astropy.time.tests.test_methods.pytest",
    "getattr",
    "numpy",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_methods.TestArithmetic.test_max": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_methods.TestArithmetic.test_min": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_methods.TestArithmetic.test_ptp": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_methods.TestArithmetic.test_sort": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_methods.TestManipulation": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "astropy.time.tests.test_methods.TestManipulation.setup": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "Time",
    "len",
    "numpy.arange",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_methods.TestManipulation.test_add_dimension": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.may_share_memory",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_methods.TestManipulation.test_broadcast": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.may_share_memory"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_methods.TestManipulation.test_diagonal": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.may_share_memory"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_methods.TestManipulation.test_flatten": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.may_share_memory"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_methods.TestManipulation.test_ravel": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.may_share_memory"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_methods.TestManipulation.test_reshape": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.may_share_memory"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_methods.TestManipulation.test_shape_setting": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "AttributeError",
    "astropy.time.tests.test_methods.pytest",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_methods.TestManipulation.test_squeeze": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.may_share_memory"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_methods.TestManipulation.test_swapaxes": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.may_share_memory"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_methods.TestManipulation.test_take": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_methods.TestManipulation.test_transpose": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.may_share_memory"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_methods.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "astropy.time.tests.test_methods.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "astropy.time.tests.test_methods.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.time.tests.test_methods.np_broadcast_to": {
  "data": {
   "shadows": "broadcast_to"
  },
  "type": "import"
 },
 "astropy.time.tests.test_methods.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.time.tests.test_methods.test_regression": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "Time",
    "astropy.time.tests.test_methods.copy",
    "numpy.ndarray",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_pickle": {
  "data": {},
  "type": "module"
 },
 "astropy.time.tests.test_pickle.TestPickle": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "astropy.time.tests.test_pickle.TestPickle.test_pickle": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "Time",
    "numpy.all",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_pickle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.time.tests.test_pickle.pickle": {
  "data": {
   "shadows": "cPickle"
  },
  "type": "import"
 },
 "astropy.time.tests.test_precision": {
  "data": {
   "symbols_in_volume": [
    "TimeDelta",
    "astropy.time.tests.test_precision.functools",
    "numpy.allclose"
   ]
  },
  "type": "module"
 },
 "astropy.time.tests.test_precision.allclose_jd": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "astropy.time.tests.test_precision.allclose_jd2": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "astropy.time.tests.test_precision.allclose_sec": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "astropy.time.tests.test_precision.dt_tiny": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "astropy.time.tests.test_precision.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "astropy.time.tests.test_precision.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.time.tests.test_precision.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.time.tests.test_precision.test_addition": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Time",
    "astropy.time.tests.test_precision.dt_tiny"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_precision.test_init_variations": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "Time",
    "astropy.time.tests.test_precision.dt_tiny"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_precision.test_iso_init": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "Time",
    "astropy.time.tests.test_precision.allclose_jd2"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_precision.test_jd1_is_mult_of_half_or_one": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "Time",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_precision.test_leap_seconds_rounded_correctly": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "Time",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_precision.test_mult_div": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "TimeDelta",
    "astropy.time.tests.test_precision.allclose_jd2",
    "astropy.time.tests.test_precision.dt_tiny"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_precision.test_precision_epoch": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "Time",
    "astropy.time.tests.test_precision.allclose_sec",
    "numpy.round",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_precision.test_precision_exceeds_64bit": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "Time",
    "astropy.time.tests.test_precision.dt_tiny"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_precision.test_precision_neg": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "Time",
    "astropy.time.tests.test_precision.pytest",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_precision.test_through_scale_change": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "Time",
    "astropy.time.tests.test_precision.allclose_jd",
    "astropy.time.tests.test_precision.allclose_jd2"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_quantity_interaction": {
  "data": {
   "symbols_in_volume": [
    "astropy.time.tests.test_quantity_interaction.functools",
    "numpy.allclose"
   ]
  },
  "type": "module"
 },
 "astropy.time.tests.test_quantity_interaction.TestDeltaAttributes": {
  "data": {
   "lineno": 191
  },
  "type": "class"
 },
 "astropy.time.tests.test_quantity_interaction.TestDeltaAttributes.test_delta_tdb_tt": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "Time",
    "TimeDelta",
    "astropy.time.tests.test_quantity_interaction.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_quantity_interaction.TestDeltaAttributes.test_delta_ut1_utc": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "Time",
    "TimeDelta",
    "astropy.time.tests.test_quantity_interaction.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_quantity_interaction.TestTimeDeltaQuantity": {
  "data": {
   "lineno": 104
  },
  "type": "class"
 },
 "astropy.time.tests.test_quantity_interaction.TestTimeDeltaQuantity.test_invalid_quantity_broadcast": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "TimeDelta",
    "ValueError",
    "astropy.time.tests.test_quantity_interaction.pytest",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_quantity_interaction.TestTimeDeltaQuantity.test_invalid_quantity_input": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "Time",
    "TimeDelta",
    "astropy.time.tests.test_quantity_interaction.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_quantity_interaction.TestTimeDeltaQuantity.test_invalid_quantity_operations": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "TimeDelta",
    "astropy.time.tests.test_quantity_interaction.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_quantity_interaction.TestTimeDeltaQuantity.test_quantity_output": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "TimeDelta",
    "astropy.time.tests.test_quantity_interaction.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_quantity_interaction.TestTimeDeltaQuantity.test_valid_quantity_input": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "TimeDelta"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_quantity_interaction.TestTimeDeltaQuantity.test_valid_quantity_operations1": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "TimeDelta",
    "astropy.time.tests.test_quantity_interaction.allclose_sec",
    "isinstance",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_quantity_interaction.TestTimeDeltaQuantity.test_valid_quantity_operations2": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "TimeDelta",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.log10"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_quantity_interaction.TestTimeQuantity": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "astropy.time.tests.test_quantity_interaction.TestTimeQuantity.test_column_with_and_without_units": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "Column",
    "Time",
    "astropy.time.tests.test_quantity_interaction.pytest",
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_quantity_interaction.TestTimeQuantity.test_invalid_quantity_input": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "Time",
    "astropy.time.tests.test_quantity_interaction.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_quantity_interaction.TestTimeQuantity.test_invalid_quantity_operations": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "Time",
    "astropy.time.tests.test_quantity_interaction.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_quantity_interaction.TestTimeQuantity.test_no_quantity_input_allowed": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "Time",
    "ValueError",
    "astropy.time.tests.test_quantity_interaction.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_quantity_interaction.TestTimeQuantity.test_valid_quantity_input": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Time"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_quantity_interaction.TestTimeQuantity.test_valid_quantity_operations": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "Time",
    "astropy.time.tests.test_quantity_interaction.allclose_sec",
    "isinstance",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_quantity_interaction.allclose_sec": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "astropy.time.tests.test_quantity_interaction.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "astropy.time.tests.test_quantity_interaction.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.time.tests.test_quantity_interaction.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.time.tests.test_quantity_interaction.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.time.tests.test_sidereal": {
  "data": {
   "symbols_in_volume": [
    "astropy.time.tests.test_sidereal.functools",
    "numpy.allclose"
   ]
  },
  "type": "module"
 },
 "astropy.time.tests.test_sidereal.TestERFATestCases": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "Time",
    "numpy.allclose"
   ]
  },
  "type": "class"
 },
 "astropy.time.tests.test_sidereal.TestERFATestCases.test_iau_models": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "astropy.time.tests.test_sidereal.pytest",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_sidereal.TestModelInterpretation": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "Time"
   ]
  },
  "type": "class"
 },
 "astropy.time.tests.test_sidereal.TestModelInterpretation.test_model_uniqueness": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "astropy.time.tests.test_sidereal.itertools",
    "astropy.time.tests.test_sidereal.pytest",
    "astropy.time.tests.test_sidereal.within_1_second",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_sidereal.TestModelInterpretation.test_wrong_models_raise_exceptions": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "ValueError",
    "astropy.time.tests.test_sidereal.pytest",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_sidereal.TestST": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "Time"
   ]
  },
  "type": "class"
 },
 "astropy.time.tests.test_sidereal.TestST.test_gmst": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "astropy.time.tests.test_sidereal.allclose_hours",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_sidereal.TestST.test_gmst_gst_close": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "astropy.time.tests.test_sidereal.within_2_seconds"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_sidereal.TestST.test_gmst_independent_of_self_location": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "astropy.time.tests.test_sidereal.allclose_hours"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_sidereal.TestST.test_gst": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "astropy.time.tests.test_sidereal.allclose_hours",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_sidereal.TestST.test_lst": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "astropy.time.tests.test_sidereal.allclose_hours",
    "astropy.time.tests.test_sidereal.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_sidereal.TestST.test_lst_needs_location": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "astropy.time.tests.test_sidereal.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_sidereal.allclose_hours": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "astropy.time.tests.test_sidereal.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "astropy.time.tests.test_sidereal.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "astropy.time.tests.test_sidereal.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.time.tests.test_sidereal.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.time.tests.test_sidereal.test_doc_string_contains_models": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "astropy.time.tests.test_sidereal.within_1_second": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "astropy.time.tests.test_sidereal.within_2_seconds": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "astropy.time.tests.test_ut1": {
  "data": {
   "symbols_in_volume": [
    "IOError",
    "astropy.time.tests.test_ut1.functools",
    "numpy.allclose"
   ]
  },
  "type": "module"
 },
 "astropy.time.tests.test_ut1.HAS_IERS_A": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "astropy.time.tests.test_ut1.TestTimeUT1": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "astropy.time.tests.test_ut1.TestTimeUT1.test_delta_ut1_utc": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "Time",
    "astropy.time.tests.test_ut1.allclose_sec",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_ut1.TestTimeUT1.test_ut1_to_utc": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "Time",
    "astropy.time.tests.test_ut1.allclose_jd",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_ut1.TestTimeUT1.test_utc_to_ut1": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "IndexError",
    "Time",
    "Time.now",
    "astropy.time.tests.test_ut1.allclose_jd",
    "astropy.time.tests.test_ut1.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_ut1.TestTimeUT1_IERSA": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "astropy.time.tests.test_ut1.pytest"
   ]
  },
  "type": "class"
 },
 "astropy.time.tests.test_ut1.TestTimeUT1_IERSA.test_ut1_iers_A": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "Time.now"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_ut1.TestTimeUT1_IERS_Auto": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "astropy.time.tests.test_ut1.pytest"
   ]
  },
  "type": "class"
 },
 "astropy.time.tests.test_ut1.TestTimeUT1_IERS_Auto.test_ut1_iers_auto": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "Time.now"
   ]
  },
  "type": "function"
 },
 "astropy.time.tests.test_ut1.allclose_jd": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "astropy.time.tests.test_ut1.allclose_sec": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "astropy.time.tests.test_ut1.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "astropy.time.tests.test_ut1.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.time.tests.test_ut1.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.time.utils": {
  "data": {},
  "type": "module"
 },
 "astropy.time.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.time.utils.day_frac": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "astropy.time.utils.two_product",
    "astropy.time.utils.two_sum",
    "numpy.any",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "astropy.time.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.time.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.time.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.time.utils.split": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "astropy.time.utils.two_product": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "astropy.time.utils.split"
   ]
  },
  "type": "function"
 },
 "astropy.time.utils.two_sum": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "astropy.time.utils.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units": {
  "data": {
   "symbols_in_volume": [
    "set_enabled_units"
   ]
  },
  "type": "module"
 },
 "astropy.units.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.astrophys": {
  "data": {
   "symbols_in_volume": [
    "__doc__",
    "astropy.units.astrophys._ns",
    "def_unit",
    "globals",
    "numpy.pi",
    "set_enabled_units"
   ]
  },
  "type": "module"
 },
 "astropy.units.astrophys._generate_unit_summary": {
  "data": {
   "shadows": "generate_unit_summary"
  },
  "type": "import"
 },
 "astropy.units.astrophys._ns": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "astropy.units.astrophys._numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.units.astrophys._si": {
  "data": {
   "shadows": "si"
  },
  "type": "import"
 },
 "astropy.units.astrophys.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.astrophys.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.astrophys.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.astrophys.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.cds": {
  "data": {
   "symbols_in_volume": [
    "__doc__",
    "astropy.units.cds._initialize_module",
    "globals"
   ]
  },
  "type": "module"
 },
 "astropy.units.cds._generate_unit_summary": {
  "data": {
   "shadows": "generate_unit_summary"
  },
  "type": "import"
 },
 "astropy.units.cds._initialize_module": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "astropy.units.cds._ns",
    "len",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "astropy.units.cds._ns": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "astropy.units.cds._si": {
  "data": {
   "shadows": "si"
  },
  "type": "import"
 },
 "astropy.units.cds.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.cds.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.cds.enable": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "astropy.units.cds.inspect",
    "set_enabled_units"
   ]
  },
  "type": "function"
 },
 "astropy.units.cds.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "astropy.units.cds.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.units.cds.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.cds.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.units.cds.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.cgs": {
  "data": {
   "symbols_in_volume": [
    "__doc__",
    "astropy.units.cgs.C",
    "astropy.units.cgs.K",
    "astropy.units.cgs._ns",
    "astropy.units.cgs.cd",
    "astropy.units.cgs.g",
    "astropy.units.cgs.mol",
    "astropy.units.cgs.rad",
    "astropy.units.cgs.s",
    "def_unit",
    "fractions.Fraction",
    "globals",
    "set"
   ]
  },
  "type": "module"
 },
 "astropy.units.cgs.C": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.units.cgs.Fraction": {
  "data": {
   "shadows": "fractions.Fraction"
  },
  "type": "import"
 },
 "astropy.units.cgs.K": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "astropy.units.cgs._generate_unit_summary": {
  "data": {
   "shadows": "generate_unit_summary"
  },
  "type": "import"
 },
 "astropy.units.cgs._ns": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "astropy.units.cgs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.cgs.bases": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "astropy.units.cgs.cd": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "astropy.units.cgs.deg_C": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "astropy.units.cgs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.cgs.g": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.units.cgs.mol": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "astropy.units.cgs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.cgs.rad": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "astropy.units.cgs.s": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "astropy.units.cgs.sr": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.units.cgs.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.decorators": {
  "data": {
   "symbols_in_volume": [
    "astropy.units.decorators.QuantityInput"
   ]
  },
  "type": "module"
 },
 "astropy.units.decorators.QuantityInput": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.decorators.QuantityInput.__call__": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "astropy.units.decorators.QuantityInput.__call__.wrapper": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "add_enabled_equivalencies",
    "astropy.units.decorators._validate_arg_value",
    "isinstance",
    "isiterable",
    "self.decorator_kwargs",
    "self.equivalencies",
    "str",
    "wrapped_function",
    "wraps"
   ]
  },
  "type": "function"
 },
 "astropy.units.decorators.QuantityInput.__init__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "self.decorator_kwargs",
    "self.equivalencies"
   ]
  },
  "type": "function"
 },
 "astropy.units.decorators.QuantityInput.as_decorator": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "self"
   ]
  },
  "type": "function"
 },
 "astropy.units.decorators.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "astropy.units.decorators._get_allowed_units": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "KeyError",
    "Unit",
    "Unit._from_physical_type_id",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.units.decorators._validate_arg_value": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "UnitsError",
    "astropy.units.decorators._get_allowed_units",
    "hasattr",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.units.decorators.quantity_input": {
  "data": {
   "lineno": 232
  },
  "type": "constant"
 },
 "astropy.units.deprecated": {
  "data": {
   "symbols_in_volume": [
    "__doc__",
    "astropy.units.deprecated._initialize_module",
    "globals"
   ]
  },
  "type": "module"
 },
 "astropy.units.deprecated._generate_prefixonly_unit_summary": {
  "data": {
   "shadows": "generate_prefixonly_unit_summary"
  },
  "type": "import"
 },
 "astropy.units.deprecated._generate_unit_summary": {
  "data": {
   "shadows": "generate_unit_summary"
  },
  "type": "import"
 },
 "astropy.units.deprecated._initialize_module": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "_add_prefixes",
    "astropy.units.deprecated._ns",
    "def_unit"
   ]
  },
  "type": "function"
 },
 "astropy.units.deprecated._ns": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.units.deprecated.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.deprecated.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.deprecated.enable": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "add_enabled_units",
    "astropy.units.deprecated.inspect"
   ]
  },
  "type": "function"
 },
 "astropy.units.deprecated.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "astropy.units.deprecated.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.deprecated.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.format": {
  "data": {
   "symbols_in_volume": [
    "astropy.units.format.sys"
   ]
  },
  "type": "module"
 },
 "astropy.units.format.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "astropy.units.format.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.format.base": {
  "data": {},
  "type": "module"
 },
 "astropy.units.format.base.Base": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "astropy.units.format.base._FormatterMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.format.base.Base.__new__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "astropy.units.format.base.Base.parse": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.base.Base.to_string": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.base._FormatterMeta": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "astropy.units.format.base._FormatterMeta.__new__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "astropy.units.format.base._FormatterMeta",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.format.base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.format.base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.format.base.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.format.cds": {
  "data": {},
  "type": "module"
 },
 "astropy.units.format.cds.CDS": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "astropy.units.format.cds.CDS._format_unit_list": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "classmethod",
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.cds.CDS._generate_unit_names": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "isinstance",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.cds.CDS._get_unit": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "ValueError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.cds.CDS._get_unit_name": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.cds.CDS._lexer": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "classproperty"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.cds.CDS._make_lexer": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "astropy.units.format.cds.os",
    "astropy.units.format.cds.re",
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.cds.CDS._make_lexer.t_SIGN": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.cds.CDS._make_lexer.t_UFLOAT": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "astropy.units.format.cds.re",
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.cds.CDS._make_lexer.t_UINT": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.cds.CDS._make_lexer.t_UNIT": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "astropy.units.format.cds.CDS._make_lexer.t_X": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "astropy.units.format.cds.CDS._make_lexer.t_error": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.cds.CDS._make_parser": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "astropy.units.format.cds.os",
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.cds.CDS._make_parser.p_combined_units": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "astropy.units.format.cds.CDS._make_parser.p_division_of_units": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.cds.CDS._make_parser.p_error": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.cds.CDS._make_parser.p_factor": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.cds.CDS._make_parser.p_main": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "Unit",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.cds.CDS._make_parser.p_numeric_power": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "astropy.units.format.cds.CDS._make_parser.p_product_of_units": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.cds.CDS._make_parser.p_sign": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.cds.CDS._make_parser.p_signed_float": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "astropy.units.format.cds.CDS._make_parser.p_signed_int": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "astropy.units.format.cds.CDS._make_parser.p_unit_expression": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.cds.CDS._make_parser.p_unit_with_power": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.cds.CDS._parse_unit": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "did_you_mean"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.cds.CDS._parser": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "classproperty"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.cds.CDS._units": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "classproperty"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.cds.CDS.parse": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.cds.CDS.to_string": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "astropy.units.format.cds.operator",
    "classmethod",
    "is_effectively_unity",
    "isinstance",
    "len",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.cds.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.format.cds.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.format.cds.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "astropy.units.format.cds.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.units.format.cds.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.format.cds.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.units.format.cds.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.units.format.cds.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.format.cds_lextab": {
  "data": {
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "module"
 },
 "astropy.units.format.cds_lextab._lexliterals": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "astropy.units.format.cds_lextab._lexreflags": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "astropy.units.format.cds_lextab._lexstateeoff": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "astropy.units.format.cds_lextab._lexstateerrorf": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "astropy.units.format.cds_lextab._lexstateignore": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "astropy.units.format.cds_lextab._lexstateinfo": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "astropy.units.format.cds_lextab._lexstatere": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "astropy.units.format.cds_lextab._lextokens": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "astropy.units.format.cds_lextab._tabversion": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "astropy.units.format.cds_lextab.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.format.cds_lextab.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.format.cds_lextab.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.format.cds_lextab.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.format.cds_parsetab": {
  "data": {
   "symbols_in_volume": [
    "astropy.units.format.cds_parsetab._lr_action",
    "astropy.units.format.cds_parsetab._lr_action_items",
    "astropy.units.format.cds_parsetab._lr_goto",
    "astropy.units.format.cds_parsetab._lr_goto_items",
    "zip"
   ]
  },
  "type": "module"
 },
 "astropy.units.format.cds_parsetab._lr_action": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "astropy.units.format.cds_parsetab._lr_action_items": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "astropy.units.format.cds_parsetab._lr_goto": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.units.format.cds_parsetab._lr_goto_items": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.units.format.cds_parsetab._lr_method": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "astropy.units.format.cds_parsetab._lr_productions": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "astropy.units.format.cds_parsetab._lr_signature": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "astropy.units.format.cds_parsetab._tabversion": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "astropy.units.format.cds_parsetab.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.format.cds_parsetab.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.format.cds_parsetab.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.format.cds_parsetab.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.format.console": {
  "data": {},
  "type": "module"
 },
 "astropy.units.format.console.Console": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "astropy.units.format.console.Console._format_superscript": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.console.Console._format_unit_list": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.console.Console._get_unit_name": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.console.Console.format_exponential_notation": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.console.Console.to_string": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "classmethod",
    "isinstance",
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.console.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.format.console.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.format.console.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.format.console.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.format.core": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "astropy.units.format.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.format.fits": {
  "data": {},
  "type": "module"
 },
 "astropy.units.format.fits.Fits": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "astropy.units.format.fits.Fits._generate_unit_names": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "astropy.units.format.fits.keyword",
    "getattr",
    "set",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.fits.Fits._get_unit_name": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.fits.Fits._parse_unit": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.fits.Fits._to_decomposed_alternative": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "astropy.units.format.fits.copy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.fits.Fits._validate_unit": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ValueError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.fits.Fits.parse": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.format.fits.Fits",
    "classmethod",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.fits.Fits.to_string": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "astropy.units.format.fits.operator",
    "classmethod",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.log10",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.fits.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.format.fits.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "astropy.units.format.fits.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.format.fits.keyword": {
  "data": {
   "shadows": "keyword"
  },
  "type": "import"
 },
 "astropy.units.format.fits.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.units.format.fits.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "astropy.units.format.fits.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.format.fits.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.units.format.fits.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.format.generic": {
  "data": {},
  "type": "module"
 },
 "astropy.units.format.generic.Generic": {
  "data": {
   "lineno": 54
  },
  "type": "class"
 },
 "astropy.units.format.generic.Generic._all_units": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "classproperty"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._deprecated_units": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "classproperty"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._do_parse": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "ValueError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._format_unit_list": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._functions": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "classproperty"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._get_unit": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "ValueError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._get_unit_name": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._lexer": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "classproperty"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_lexer": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "astropy.units.format.generic.os",
    "astropy.units.format.generic.re",
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_lexer.t_FUNCNAME": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_lexer.t_SIGN": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_lexer.t_UFLOAT": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "astropy.units.format.generic.re",
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_lexer.t_UINT": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_lexer.t_UNIT": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_lexer.t_error": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_parser": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "astropy.units.format.generic.os",
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_parser.p_division": {
  "data": {
   "lineno": 371
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_parser.p_division_product_of_units": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "Unit",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_parser.p_error": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_parser.p_factor": {
  "data": {
   "lineno": 223
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_parser.p_factor_fits": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_parser.p_factor_float": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_parser.p_factor_int": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_parser.p_frac": {
  "data": {
   "lineno": 348
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_parser.p_function": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "function_unit"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_parser.p_function_name": {
  "data": {
   "lineno": 397
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_parser.p_inverse_unit": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_parser.p_main": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "Unit",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_parser.p_numeric_power": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_parser.p_paren_expr": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_parser.p_power": {
  "data": {
   "lineno": 377
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_parser.p_product": {
  "data": {
   "lineno": 364
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_parser.p_product_of_units": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_parser.p_sign": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_parser.p_signed_float": {
  "data": {
   "lineno": 390
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_parser.p_signed_int": {
  "data": {
   "lineno": 384
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_parser.p_unit_expression": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._make_parser.p_unit_with_power": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._parse_unit": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "did_you_mean"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._parser": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "classproperty"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic._units": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "classproperty"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic.parse": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "astropy.units.format.generic.warnings",
    "classmethod",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Generic.to_string": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "astropy.units.format.generic._to_string",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.Unscaled": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "astropy.units.format.generic.Generic"
   ]
  },
  "type": "class"
 },
 "astropy.units.format.generic._to_string": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.generic.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.format.generic.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.format.generic.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.units.format.generic.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.format.generic.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.units.format.generic.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.format.generic.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.units.format.generic_lextab": {
  "data": {
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "module"
 },
 "astropy.units.format.generic_lextab._lexliterals": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "astropy.units.format.generic_lextab._lexreflags": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "astropy.units.format.generic_lextab._lexstateeoff": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "astropy.units.format.generic_lextab._lexstateerrorf": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "astropy.units.format.generic_lextab._lexstateignore": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "astropy.units.format.generic_lextab._lexstateinfo": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "astropy.units.format.generic_lextab._lexstatere": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "astropy.units.format.generic_lextab._lextokens": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "astropy.units.format.generic_lextab._tabversion": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "astropy.units.format.generic_lextab.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.format.generic_lextab.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.format.generic_lextab.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.format.generic_lextab.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.format.generic_parsetab": {
  "data": {
   "symbols_in_volume": [
    "astropy.units.format.generic_parsetab._lr_action",
    "astropy.units.format.generic_parsetab._lr_action_items",
    "astropy.units.format.generic_parsetab._lr_goto",
    "astropy.units.format.generic_parsetab._lr_goto_items",
    "zip"
   ]
  },
  "type": "module"
 },
 "astropy.units.format.generic_parsetab._lr_action": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "astropy.units.format.generic_parsetab._lr_action_items": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "astropy.units.format.generic_parsetab._lr_goto": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.units.format.generic_parsetab._lr_goto_items": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.units.format.generic_parsetab._lr_method": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "astropy.units.format.generic_parsetab._lr_productions": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "astropy.units.format.generic_parsetab._lr_signature": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "astropy.units.format.generic_parsetab._tabversion": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "astropy.units.format.generic_parsetab.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.format.generic_parsetab.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.format.generic_parsetab.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.format.generic_parsetab.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.format.get_format": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "format",
    "format.lower",
    "isinstance",
    "issubclass",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.latex": {
  "data": {},
  "type": "module"
 },
 "astropy.units.format.latex.Latex": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "astropy.units.format.latex.Latex._format_bases": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "classmethod",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.latex.Latex._format_unit_list": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.latex.Latex._get_unit_name": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.latex.Latex._latex_escape": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.latex.Latex.format_exponential_notation": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "classmethod",
    "numpy.isfinite",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.latex.Latex.to_string": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "classmethod",
    "hasattr",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.latex.LatexInline": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "astropy.units.format.latex.Latex"
   ]
  },
  "type": "class"
 },
 "astropy.units.format.latex.LatexInline._format_bases": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "classmethod",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.latex.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.format.latex.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.format.latex.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.units.format.latex.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.format.latex.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.format.ogip": {
  "data": {},
  "type": "module"
 },
 "astropy.units.format.ogip.Fraction": {
  "data": {
   "shadows": "fractions.Fraction"
  },
  "type": "import"
 },
 "astropy.units.format.ogip.OGIP": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "astropy.units.format.ogip.OGIP._format_unit_list": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._generate_unit_names": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "astropy.units.format.ogip.keyword",
    "getattr",
    "set",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._get_unit": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "ValueError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._get_unit_name": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._make_lexer": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "astropy.units.format.ogip.os",
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._make_lexer.t_LIT10": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._make_lexer.t_SIGN": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._make_lexer.t_UFLOAT": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._make_lexer.t_UINT": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._make_lexer.t_UNIT": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._make_lexer.t_UNKNOWN": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._make_lexer.t_X": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._make_lexer.t_error": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._make_parser": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "astropy.units.format.ogip.os",
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._make_parser.p_complete_expression": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._make_parser.p_division": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._make_parser.p_error": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._make_parser.p_main": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._make_parser.p_numeric_power": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "fractions.Fraction",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._make_parser.p_power": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._make_parser.p_product": {
  "data": {
   "lineno": 290
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._make_parser.p_product_of_units": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._make_parser.p_scale_factor": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "astropy.units.format.ogip.math",
    "astropy.units.format.ogip.warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._make_parser.p_sign": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._make_parser.p_signed_float": {
  "data": {
   "lineno": 347
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._make_parser.p_signed_int": {
  "data": {
   "lineno": 341
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._make_parser.p_unit": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._make_parser.p_unit_expression": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._parse_unit": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._to_decomposed_alternative": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "astropy.units.format.ogip.copy",
    "astropy.units.format.ogip.math",
    "classmethod",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP._validate_unit": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "ValueError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP.parse": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "ValueError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.ogip.OGIP.to_string": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "astropy.units.format.ogip.math",
    "astropy.units.format.ogip.warnings",
    "classmethod",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.ogip.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.format.ogip.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "astropy.units.format.ogip.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.format.ogip.keyword": {
  "data": {
   "shadows": "keyword"
  },
  "type": "import"
 },
 "astropy.units.format.ogip.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "astropy.units.format.ogip.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.units.format.ogip.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.format.ogip.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.units.format.ogip.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.format.ogip.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.units.format.ogip_lextab": {
  "data": {
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "module"
 },
 "astropy.units.format.ogip_lextab._lexliterals": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "astropy.units.format.ogip_lextab._lexreflags": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "astropy.units.format.ogip_lextab._lexstateeoff": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "astropy.units.format.ogip_lextab._lexstateerrorf": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "astropy.units.format.ogip_lextab._lexstateignore": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "astropy.units.format.ogip_lextab._lexstateinfo": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "astropy.units.format.ogip_lextab._lexstatere": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "astropy.units.format.ogip_lextab._lextokens": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "astropy.units.format.ogip_lextab._tabversion": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "astropy.units.format.ogip_lextab.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.format.ogip_lextab.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.format.ogip_lextab.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.format.ogip_lextab.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.format.ogip_parsetab": {
  "data": {
   "symbols_in_volume": [
    "astropy.units.format.ogip_parsetab._lr_action",
    "astropy.units.format.ogip_parsetab._lr_action_items",
    "astropy.units.format.ogip_parsetab._lr_goto",
    "astropy.units.format.ogip_parsetab._lr_goto_items",
    "zip"
   ]
  },
  "type": "module"
 },
 "astropy.units.format.ogip_parsetab._lr_action": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "astropy.units.format.ogip_parsetab._lr_action_items": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "astropy.units.format.ogip_parsetab._lr_goto": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.units.format.ogip_parsetab._lr_goto_items": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.units.format.ogip_parsetab._lr_method": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "astropy.units.format.ogip_parsetab._lr_productions": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "astropy.units.format.ogip_parsetab._lr_signature": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "astropy.units.format.ogip_parsetab._tabversion": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "astropy.units.format.ogip_parsetab.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.format.ogip_parsetab.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.format.ogip_parsetab.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.format.ogip_parsetab.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.format.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.format.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.units.format.unicode_format": {
  "data": {},
  "type": "module"
 },
 "astropy.units.format.unicode_format.Unicode": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "astropy.units.format.unicode_format.Unicode._format_superscript": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.unicode_format.Unicode._get_unit_name": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.unicode_format.Unicode.format_exponential_notation": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.unicode_format.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.format.unicode_format.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.format.unicode_format.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.format.unicode_format.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.format.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.format.utils": {
  "data": {},
  "type": "module"
 },
 "astropy.units.format.utils.Fraction": {
  "data": {
   "shadows": "fractions.Fraction"
  },
  "type": "import"
 },
 "astropy.units.format.utils._try_decomposed": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ValueError",
    "format_decomposed",
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.format.utils.decompose_to_known_units": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "isinstance",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.utils.did_you_mean_units": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "did_you_mean"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.utils.did_you_mean_units.fix_deprecated": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "astropy.units.format.utils._try_decomposed",
    "format_decomposed"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.format.utils.format_power": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "fractions.Fraction",
    "fractions.Fraction.from_float",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.utils.get_grouped_by_powers": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.format.utils.split_mantissa_exponent": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "format",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.utils.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.format.utils.unit_deprecation_warning": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "astropy.units.format.utils._try_decomposed",
    "astropy.units.format.utils.warnings",
    "format_decomposed"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.units.format.vounit": {
  "data": {},
  "type": "module"
 },
 "astropy.units.format.vounit.VOUnit": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "astropy.units.format.vounit.re"
   ]
  },
  "type": "class"
 },
 "astropy.units.format.vounit.VOUnit._def_custom_unit": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "classmethod",
    "def_base",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.vounit.VOUnit._def_custom_unit.def_base": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "astropy.units.format.vounit.VOUnit._generate_unit_names": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "do_defines",
    "set",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.vounit.VOUnit._generate_unit_names.do_defines": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "astropy.units.format.vounit.keyword",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.vounit.VOUnit._get_unit_name": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.vounit.VOUnit._parse_unit": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.format.vounit.warnings",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.vounit.VOUnit._to_decomposed_alternative": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "astropy.units.format.vounit.copy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.vounit.VOUnit.parse": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.vounit.VOUnit.to_string": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "astropy.units.format.vounit.operator",
    "classmethod",
    "isinstance",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.units.format.vounit.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.format.vounit.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "astropy.units.format.vounit.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.format.vounit.keyword": {
  "data": {
   "shadows": "keyword"
  },
  "type": "import"
 },
 "astropy.units.format.vounit.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "astropy.units.format.vounit.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.format.vounit.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.units.format.vounit.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.units.format.vounit.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.format.vounit.uvo": {
  "data": {
   "shadows": "required_by_vounit"
  },
  "type": "import"
 },
 "astropy.units.format.vounit.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.units.function": {
  "data": {},
  "type": "module"
 },
 "astropy.units.function.core": {
  "data": {
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "numpy",
    "numpy.core.umath",
    "set"
   ]
  },
  "type": "module"
 },
 "astropy.units.function.core.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "astropy.units.function.core.FunctionQuantity": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "astropy.units.function.core.SUPPORTED_FUNCTIONS",
    "astropy.units.function.core.SUPPORTED_UFUNCS"
   ]
  },
  "type": "class"
 },
 "astropy.units.function.core.FunctionQuantity.__array_prepare__": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "UnitTypeError",
    "all",
    "astropy.units.function.core.FunctionQuantity",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionQuantity.__eq__": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "UnitsError"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionQuantity.__ge__": {
  "data": {
   "lineno": 633
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionQuantity.__gt__": {
  "data": {
   "lineno": 630
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionQuantity.__le__": {
  "data": {
   "lineno": 639
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionQuantity.__lt__": {
  "data": {
   "lineno": 636
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionQuantity.__mul__": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "UnitTypeError"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionQuantity.__ne__": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "UnitsError"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionQuantity.__new__": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "Exception",
    "Unit",
    "astropy.units.function.core.FunctionQuantity",
    "astropy.units.function.core.FunctionUnitBase",
    "getattr",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionQuantity.__quantity_subclass__": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "astropy.units.function.core.FunctionQuantity",
    "astropy.units.function.core.FunctionUnitBase",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionQuantity.__rtruediv__": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "UnitTypeError"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionQuantity.__truediv__": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "UnitTypeError"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionQuantity._comparison": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "Exception",
    "NotImplemented",
    "UnitsError",
    "comparison_func"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionQuantity._function_view": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionQuantity._set_unit": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "Exception",
    "UnitTypeError",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionQuantity._wrap_function": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "astropy.units.function.core.FunctionQuantity",
    "getattr",
    "hasattr",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionQuantity.cgs": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionQuantity.decompose": {
  "data": {
   "lineno": 525
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionQuantity.physical": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionQuantity.si": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.function.core.FunctionUnitBase.__div__": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "Exception",
    "NotImplemented",
    "UnitsError",
    "astropy.units.function.core.FunctionUnitBase",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase.__eq__": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase.__hash__": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase.__init__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "Unit",
    "ValueError",
    "getattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase.__mul__": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "Exception",
    "NotImplemented",
    "UnitsError",
    "astropy.units.function.core.FunctionUnitBase",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase.__ne__": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase.__pos__": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase.__pow__": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "UnitsError"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase.__rdiv__": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "NotImplemented",
    "UnitsError",
    "astropy.units.function.core.FunctionUnitBase",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase.__repr__": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "callable"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase.__rmul__": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase.__str__": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase._copy": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase._default_function_unit": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase._get_physical_type_id": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase._quantity_class": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase._repr_latex_": {
  "data": {
   "lineno": 384
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase.cgs": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase.decompose": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase.equivalencies": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase.from_physical": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase.function_unit": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase.is_equivalent": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "any",
    "getattr",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase.is_unity": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase.physical_type": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase.physical_unit": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase.si": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase.to": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase.to_physical": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.FunctionUnitBase.to_string": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "ValueError",
    "format"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.core.SUPPORTED_FUNCTIONS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "astropy.units.function.core.SUPPORTED_UFUNCS": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "astropy.units.function.core.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "astropy.units.function.core.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.function.core.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "astropy.units.function.core.abstractproperty": {
  "data": {
   "shadows": "abc.abstractproperty"
  },
  "type": "import"
 },
 "astropy.units.function.core.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.function.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.units.function.core.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.function.core.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.function.logarithmic": {
  "data": {
   "symbols_in_volume": [
    "astropy.units.function.logarithmic.ABmag",
    "astropy.units.function.logarithmic.DecibelUnit",
    "astropy.units.function.logarithmic.DexUnit",
    "astropy.units.function.logarithmic.M_bol",
    "astropy.units.function.logarithmic.MagUnit",
    "astropy.units.function.logarithmic.STmag",
    "astropy.units.function.logarithmic.m_bol"
   ]
  },
  "type": "module"
 },
 "astropy.units.function.logarithmic.ABmag": {
  "data": {
   "lineno": 327
  },
  "type": "constant"
 },
 "astropy.units.function.logarithmic.Decibel": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "astropy.units.function.logarithmic.DecibelUnit",
    "astropy.units.function.logarithmic.LogQuantity"
   ]
  },
  "type": "class"
 },
 "astropy.units.function.logarithmic.DecibelUnit": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "astropy.units.function.logarithmic.LogUnit"
   ]
  },
  "type": "class"
 },
 "astropy.units.function.logarithmic.DecibelUnit._default_function_unit": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.logarithmic.DecibelUnit._quantity_class": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.logarithmic.Dex": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "astropy.units.function.logarithmic.DexUnit",
    "astropy.units.function.logarithmic.LogQuantity"
   ]
  },
  "type": "class"
 },
 "astropy.units.function.logarithmic.DexUnit": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "astropy.units.function.logarithmic.LogUnit"
   ]
  },
  "type": "class"
 },
 "astropy.units.function.logarithmic.DexUnit._default_function_unit": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.logarithmic.DexUnit._quantity_class": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.logarithmic.LogQuantity": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "astropy.units.function.logarithmic.LogUnit",
    "getattr",
    "numpy",
    "set"
   ]
  },
  "type": "class"
 },
 "astropy.units.function.logarithmic.LogQuantity.__add__": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.logarithmic.LogQuantity.__iadd__": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.logarithmic.LogQuantity.__isub__": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.logarithmic.LogQuantity.__radd__": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "astropy.units.function.logarithmic.LogQuantity.__rsub__": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.logarithmic.LogQuantity.__sub__": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.logarithmic.LogQuantity.diff": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "numpy.diff"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.logarithmic.LogQuantity.ediff1d": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "numpy.ediff1d"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.logarithmic.LogQuantity.ptp": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "numpy.ptp"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.logarithmic.LogQuantity.std": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.logarithmic.LogQuantity.var": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.logarithmic.LogUnit": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "astropy.units.function.logarithmic.LogUnit.__add__": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "astropy.units.function.logarithmic.LogUnit.__neg__": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "astropy.units.function.logarithmic.LogUnit.__radd__": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "astropy.units.function.logarithmic.LogUnit.__rsub__": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "astropy.units.function.logarithmic.LogUnit.__sub__": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "astropy.units.function.logarithmic.LogUnit._add_and_adjust_physical_unit": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "AttributeError",
    "CompositeUnit",
    "NotImplemented",
    "UnitsError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.logarithmic.LogUnit._default_function_unit": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.logarithmic.LogUnit._quantity_class": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.logarithmic.LogUnit.from_physical": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.log10"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.logarithmic.LogUnit.to_physical": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "astropy.units.function.logarithmic.M_bol": {
  "data": {
   "lineno": 330
  },
  "type": "constant"
 },
 "astropy.units.function.logarithmic.MagUnit": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "astropy.units.function.logarithmic.LogUnit"
   ]
  },
  "type": "class"
 },
 "astropy.units.function.logarithmic.MagUnit.__init__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "astropy.units.function.logarithmic.MagUnit",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.logarithmic.MagUnit._default_function_unit": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.logarithmic.MagUnit._quantity_class": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.logarithmic.Magnitude": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "astropy.units.function.logarithmic.LogQuantity",
    "astropy.units.function.logarithmic.MagUnit"
   ]
  },
  "type": "class"
 },
 "astropy.units.function.logarithmic.STmag": {
  "data": {
   "lineno": 324
  },
  "type": "constant"
 },
 "astropy.units.function.logarithmic.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "astropy.units.function.logarithmic.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.function.logarithmic.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.function.logarithmic.m_bol": {
  "data": {
   "lineno": 334
  },
  "type": "constant"
 },
 "astropy.units.function.logarithmic.mag0": {
  "data": {
   "shadows": "magnitude_zero_points"
  },
  "type": "import"
 },
 "astropy.units.function.logarithmic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.units.function.logarithmic.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.function.logarithmic.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.function.magnitude_zero_points": {
  "data": {
   "symbols_in_volume": [
    "__doc__",
    "astropy.units.function.magnitude_zero_points._ns",
    "def_unit",
    "globals",
    "numpy.pi"
   ]
  },
  "type": "module"
 },
 "astropy.units.function.magnitude_zero_points._generate_unit_summary": {
  "data": {
   "shadows": "generate_unit_summary"
  },
  "type": "import"
 },
 "astropy.units.function.magnitude_zero_points._ns": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "astropy.units.function.magnitude_zero_points._numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.units.function.magnitude_zero_points._si": {
  "data": {
   "shadows": "si"
  },
  "type": "import"
 },
 "astropy.units.function.magnitude_zero_points.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.function.magnitude_zero_points.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.function.magnitude_zero_points.enable": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "add_enabled_units",
    "astropy.units.function.magnitude_zero_points.inspect"
   ]
  },
  "type": "function"
 },
 "astropy.units.function.magnitude_zero_points.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "astropy.units.function.magnitude_zero_points.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.function.magnitude_zero_points.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.function.mixin": {
  "data": {},
  "type": "module"
 },
 "astropy.units.function.mixin.FunctionMixin": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.function.mixin.FunctionMixin.__call__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "astropy.units.function.mixin.IrreducibleFunctionUnit": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "astropy.units.function.mixin.FunctionMixin"
   ]
  },
  "type": "class"
 },
 "astropy.units.function.mixin.RegularFunctionUnit": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "astropy.units.function.mixin.FunctionMixin"
   ]
  },
  "type": "class"
 },
 "astropy.units.function.units": {
  "data": {
   "symbols_in_volume": [
    "IrreducibleFunctionUnit",
    "RegularFunctionUnit",
    "__doc__",
    "_add_prefixes",
    "astropy.units.function.units._ns",
    "astropy.units.function.units.dex",
    "astropy.units.function.units.mag",
    "globals"
   ]
  },
  "type": "module"
 },
 "astropy.units.function.units._generate_unit_summary": {
  "data": {
   "shadows": "generate_unit_summary"
  },
  "type": "import"
 },
 "astropy.units.function.units._ns": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "astropy.units.function.units.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.function.units.dB": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "astropy.units.function.units.dex": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.units.function.units.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.function.units.mag": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "astropy.units.function.units.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.function.units.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.function_units": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.units.imperial": {
  "data": {
   "symbols_in_volume": [
    "__doc__",
    "astropy.units.imperial._ns",
    "def_unit",
    "globals"
   ]
  },
  "type": "module"
 },
 "astropy.units.imperial._generate_unit_summary": {
  "data": {
   "shadows": "generate_unit_summary"
  },
  "type": "import"
 },
 "astropy.units.imperial._ns": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "astropy.units.imperial.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.imperial.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.imperial.enable": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "add_enabled_units",
    "astropy.units.imperial.inspect"
   ]
  },
  "type": "function"
 },
 "astropy.units.imperial.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "astropy.units.imperial.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.imperial.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.physical": {
  "data": {
   "symbols_in_volume": [
    "astropy.units.physical.def_physical_type"
   ]
  },
  "type": "module"
 },
 "astropy.units.physical.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "astropy.units.physical._physical_unit_mapping": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "astropy.units.physical._unit_physical_mapping": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "astropy.units.physical.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.physical.def_physical_type": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.physical._physical_unit_mapping",
    "astropy.units.physical._unit_physical_mapping"
   ]
  },
  "type": "function"
 },
 "astropy.units.physical.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.physical.get_physical_type": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "astropy.units.physical._physical_unit_mapping"
   ]
  },
  "type": "function"
 },
 "astropy.units.physical.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.physical.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.quantity": {
  "data": {
   "symbols_in_volume": [
    "astropy.units.quantity.Conf",
    "numpy.arccos",
    "numpy.arccosh",
    "numpy.arcsin",
    "numpy.arctanh"
   ]
  },
  "type": "module"
 },
 "astropy.units.quantity.Conf": {
  "data": {
   "lineno": 46
  },
  "type": "class"
 },
 "astropy.units.quantity.Fraction": {
  "data": {
   "shadows": "fractions.Fraction"
  },
  "type": "import"
 },
 "astropy.units.quantity.Quantity": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "astropy.units.quantity.QuantityInfo",
    "hasattr",
    "numpy",
    "numpy.ndarray",
    "property"
   ]
  },
  "type": "class"
 },
 "astropy.units.quantity.Quantity.__array_finalize__": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__array_prepare__": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "RuntimeWarning",
    "TypeError",
    "any",
    "astropy.units.quantity._UFUNCS_FILTER_WARNINGS",
    "astropy.units.quantity.warnings",
    "check_output",
    "converter",
    "converters_and_unit",
    "numpy.float16",
    "numpy.int8",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__array_ufunc__": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "NotImplemented",
    "astropy.units.quantity.Quantity",
    "check_output",
    "converter",
    "converters_and_unit",
    "function",
    "function.nout",
    "getattr",
    "super",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__array_wrap__": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "converter",
    "function",
    "function.nout",
    "getattr",
    "hasattr",
    "numpy.can_cast",
    "numpy.ndarray",
    "numpy.result_type",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__deepcopy__": {
  "data": {
   "lineno": 788
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__dir__": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "Unit._normalize_equivalencies",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__div__": {
  "data": {
   "lineno": 1078
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__divmod__": {
  "data": {
   "lineno": 1092,
   "symbols_in_volume": [
    "divmod"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__eq__": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "DeprecationWarning",
    "NotImplemented",
    "TypeError",
    "astropy.units.quantity.Quantity",
    "numpy.equal",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__float__": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "TypeError",
    "float"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__format__": {
  "data": {
   "lineno": 1301,
   "symbols_in_volume": [
    "ValueError",
    "format"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__getattr__": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": [
    "AttributeError",
    "get_virtual_unit_attribute"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__getattr__.get_virtual_unit_attribute": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "get_current_unit_registry"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__getitem__": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "astropy.units.quantity.Quantity",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__hash__": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__idiv__": {
  "data": {
   "lineno": 1082
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__imul__": {
  "data": {
   "lineno": 1034,
   "symbols_in_volume": [
    "astropy.units.quantity.Quantity",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__index__": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": [
    "Exception",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__int__": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": [
    "TypeError",
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__iter__": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "TypeError",
    "quantity_iter"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__iter__.quantity_iter": {
  "data": {
   "lineno": 1145
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__itruediv__": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": [
    "astropy.units.quantity.Quantity",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__len__": {
  "data": {
   "lineno": 1191,
   "symbols_in_volume": [
    "TypeError",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__long__": {
  "data": {
   "lineno": 1224,
   "symbols_in_volume": [
    "TypeError",
    "long"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__matmul__": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "getattr",
    "matmul"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__mul__": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "NotImplemented",
    "astropy.units.quantity.Quantity",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__ne__": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "DeprecationWarning",
    "NotImplemented",
    "TypeError",
    "astropy.units.quantity.Quantity",
    "numpy.not_equal",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__new__": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "Unit",
    "all",
    "astropy.units.quantity.Quantity",
    "astropy.units.quantity.numbers",
    "astropy.units.quantity.re",
    "float",
    "getattr",
    "isinstance",
    "isiterable",
    "issubclass",
    "len",
    "numpy.array",
    "numpy.can_cast",
    "numpy.float",
    "numpy.float32",
    "numpy.ndarray",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__nonzero__": {
  "data": {
   "lineno": 1183
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__pos__": {
  "data": {
   "lineno": 1130,
   "symbols_in_volume": [
    "numpy.positive"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__pow__": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "astropy.units.quantity.Quantity",
    "float",
    "fractions.Fraction",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__quantity_subclass__": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "astropy.units.quantity.Quantity"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__rdiv__": {
  "data": {
   "lineno": 1086
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__reduce__": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "astropy.units.quantity.Quantity",
    "list",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__repr__": {
  "data": {
   "lineno": 1248,
   "symbols_in_volume": [
    "numpy.array2string",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__rmatmul__": {
  "data": {
   "lineno": 1113,
   "symbols_in_volume": [
    "getattr",
    "matmul"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__rmul__": {
  "data": {
   "lineno": 1043
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__rtruediv__": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": [
    "astropy.units.quantity.Quantity",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__setitem__": {
  "data": {
   "lineno": 1169,
   "symbols_in_volume": [
    "len",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__setslice__": {
  "data": {
   "lineno": 1178,
   "symbols_in_volume": [
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__setstate__": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "astropy.units.quantity.Quantity",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__str__": {
  "data": {
   "lineno": 1245
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.__truediv__": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": [
    "NotImplemented",
    "astropy.units.quantity.Quantity",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity._decompose": {
  "data": {
   "lineno": 1343,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity._new_view": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "Unit",
    "astropy.units.quantity.Quantity",
    "getattr",
    "isinstance",
    "numpy.array",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity._repr_latex_": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": [
    "astropy.units.quantity._UNIT_NOT_INITIALISED",
    "astropy.units.quantity.conf",
    "numpy.array2string",
    "numpy.get_printoptions",
    "numpy.inf",
    "numpy.ndarray",
    "numpy.set_printoptions",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity._repr_latex_.float_formatter": {
  "data": {
   "lineno": 1275
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity._result_as_quantity": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity._set_unit": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "Unit",
    "UnitTypeError",
    "isinstance",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity._to_own_unit": {
  "data": {
   "lineno": 1392,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "can_have_arbitrary_unit",
    "getattr",
    "numpy.all",
    "numpy.array",
    "numpy.isnan",
    "numpy.logical_or"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity._to_value": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity._unitstr": {
  "data": {
   "lineno": 1231,
   "symbols_in_volume": [
    "astropy.units.quantity._UNIT_NOT_INITIALISED",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity._wrap_function": {
  "data": {
   "lineno": 1494,
   "symbols_in_volume": [
    "astropy.units.quantity.Quantity",
    "check_output",
    "function",
    "isinstance",
    "numpy.ndarray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.all": {
  "data": {
   "lineno": 1594,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.any": {
  "data": {
   "lineno": 1598,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.argmax": {
  "data": {
   "lineno": 1483,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.argmin": {
  "data": {
   "lineno": 1486,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.argsort": {
  "data": {
   "lineno": 1475,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.cgs": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.choose": {
  "data": {
   "lineno": 1470,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.clip": {
  "data": {
   "lineno": 1538,
   "symbols_in_volume": [
    "numpy.clip"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.cumprod": {
  "data": {
   "lineno": 1586,
   "symbols_in_volume": [
    "ValueError",
    "numpy.cumprod"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.cumsum": {
  "data": {
   "lineno": 1583,
   "symbols_in_volume": [
    "numpy.cumsum"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.decompose": {
  "data": {
   "lineno": 1321
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.diff": {
  "data": {
   "lineno": 1604,
   "symbols_in_volume": [
    "numpy.diff"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.dot": {
  "data": {
   "lineno": 1579,
   "symbols_in_volume": [
    "getattr",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.dump": {
  "data": {
   "lineno": 1432,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.dumps": {
  "data": {
   "lineno": 1436,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.ediff1d": {
  "data": {
   "lineno": 1607,
   "symbols_in_volume": [
    "numpy.ediff1d"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.equivalencies": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.fill": {
  "data": {
   "lineno": 1442,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.flat": {
  "data": {
   "lineno": 1460
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.insert": {
  "data": {
   "lineno": 1614,
   "symbols_in_volume": [
    "numpy.insert"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.isscalar": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.item": {
  "data": {
   "lineno": 1385,
   "symbols_in_volume": [
    "astropy.units.quantity.Quantity",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.itemset": {
  "data": {
   "lineno": 1417,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.max": {
  "data": {
   "lineno": 1562,
   "symbols_in_volume": [
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.mean": {
  "data": {
   "lineno": 1553,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.min": {
  "data": {
   "lineno": 1565,
   "symbols_in_volume": [
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.nansum": {
  "data": {
   "lineno": 1610,
   "symbols_in_volume": [
    "numpy.nansum"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.prod": {
  "data": {
   "lineno": 1572,
   "symbols_in_volume": [
    "ValueError",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.ptp": {
  "data": {
   "lineno": 1556,
   "symbols_in_volume": [
    "numpy.ptp"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.put": {
  "data": {
   "lineno": 1467,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.round": {
  "data": {
   "lineno": 1559,
   "symbols_in_volume": [
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.searchsorted": {
  "data": {
   "lineno": 1478,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.searchsorted"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.si": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.std": {
  "data": {
   "lineno": 1550,
   "symbols_in_volume": [
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.sum": {
  "data": {
   "lineno": 1568,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.to": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "Unit"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.to_value": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "Unit",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.tofile": {
  "data": {
   "lineno": 1428,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.tolist": {
  "data": {
   "lineno": 1388,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.tostring": {
  "data": {
   "lineno": 1424,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.trace": {
  "data": {
   "lineno": 1542,
   "symbols_in_volume": [
    "numpy.trace"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.unit": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.Quantity.var": {
  "data": {
   "lineno": 1546,
   "symbols_in_volume": [
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.QuantityInfo": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "astropy.units.quantity.QuantityInfoBase"
   ]
  },
  "type": "class"
 },
 "astropy.units.quantity.QuantityInfo._construct_from_dict": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "map",
    "map.pop"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.QuantityInfo.new_like": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "getattr",
    "map",
    "numpy.zeros",
    "setattr"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.QuantityInfoBase": {
  "data": {
   "lineno": 114
  },
  "type": "class"
 },
 "astropy.units.quantity.QuantityInfoBase.default_format": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.QuantityInfoBase.possible_string_format_functions": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "format",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.QuantityIterator": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "next",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.quantity.QuantityIterator.__getitem__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.QuantityIterator.__init__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.QuantityIterator.__iter__": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "astropy.units.quantity.QuantityIterator.__next__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "next"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.QuantityIterator.__setitem__": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "astropy.units.quantity.SpecificTypeQuantity": {
  "data": {
   "lineno": 1663,
   "symbols_in_volume": [
    "astropy.units.quantity.Quantity"
   ]
  },
  "type": "class"
 },
 "astropy.units.quantity.SpecificTypeQuantity.__quantity_subclass__": {
  "data": {
   "lineno": 1689,
   "symbols_in_volume": [
    "astropy.units.quantity.SpecificTypeQuantity",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity.SpecificTypeQuantity._set_unit": {
  "data": {
   "lineno": 1696,
   "symbols_in_volume": [
    "UnitTypeError",
    "astropy.units.quantity.SpecificTypeQuantity",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity._UFUNCS_FILTER_WARNINGS": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "astropy.units.quantity._UNIT_NOT_INITIALISED": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "astropy.units.quantity.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "astropy.units.quantity.__doctest_skip__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "astropy.units.quantity._config": {
  "data": {
   "shadows": "config"
  },
  "type": "import"
 },
 "astropy.units.quantity.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.quantity.conf": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "astropy.units.quantity.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.quantity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.units.quantity.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "astropy.units.quantity.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.quantity.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.units.quantity.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.quantity.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.units.quantity_helper": {
  "data": {
   "symbols_in_volume": [
    "astropy.units.quantity_helper.UFUNC_HELPERS",
    "astropy.units.quantity_helper.UNSUPPORTED_UFUNCS",
    "astropy.units.quantity_helper._d",
    "astropy.units.quantity_helper.helper_copysign",
    "astropy.units.quantity_helper.helper_degree_to_radian",
    "astropy.units.quantity_helper.helper_dimensionless_to_dimensionless",
    "astropy.units.quantity_helper.helper_dimensionless_to_radian",
    "astropy.units.quantity_helper.helper_division",
    "astropy.units.quantity_helper.helper_divmod",
    "astropy.units.quantity_helper.helper_frexp",
    "astropy.units.quantity_helper.helper_heaviside",
    "astropy.units.quantity_helper.helper_invariant",
    "astropy.units.quantity_helper.helper_ldexp",
    "astropy.units.quantity_helper.helper_modf",
    "astropy.units.quantity_helper.helper_multiplication",
    "astropy.units.quantity_helper.helper_onearg_test",
    "astropy.units.quantity_helper.helper_power",
    "astropy.units.quantity_helper.helper_radian_to_degree",
    "astropy.units.quantity_helper.helper_radian_to_dimensionless",
    "astropy.units.quantity_helper.helper_two_arg_dimensionless",
    "astropy.units.quantity_helper.helper_twoarg_comparison",
    "astropy.units.quantity_helper.helper_twoarg_floor_divide",
    "astropy.units.quantity_helper.helper_twoarg_invariant",
    "astropy.units.quantity_helper.helper_twoarg_invtrig",
    "fractions.Fraction",
    "getattr",
    "isinstance",
    "numpy",
    "numpy.absolute",
    "numpy.add",
    "numpy.arccos",
    "numpy.arccosh",
    "numpy.arcsin",
    "numpy.arcsinh",
    "numpy.arctan",
    "numpy.arctan2",
    "numpy.arctanh",
    "numpy.bitwise_and",
    "numpy.bitwise_or",
    "numpy.bitwise_xor",
    "numpy.cbrt",
    "numpy.ceil",
    "numpy.conj",
    "numpy.conjugate",
    "numpy.copysign",
    "numpy.core.umath",
    "numpy.core.umath._arg",
    "numpy.core.umath._ones_like",
    "numpy.cos",
    "numpy.cosh",
    "numpy.deg2rad",
    "numpy.degrees",
    "numpy.divide",
    "numpy.divmod",
    "numpy.equal",
    "numpy.exp",
    "numpy.exp2",
    "numpy.expm1",
    "numpy.fabs",
    "numpy.float_power",
    "numpy.floor",
    "numpy.floor_divide",
    "numpy.fmax",
    "numpy.fmin",
    "numpy.fmod",
    "numpy.frexp",
    "numpy.greater",
    "numpy.greater_equal",
    "numpy.heaviside",
    "numpy.hypot",
    "numpy.invert",
    "numpy.isfinite",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.isnat",
    "numpy.ldexp",
    "numpy.left_shift",
    "numpy.less",
    "numpy.less_equal",
    "numpy.log",
    "numpy.log10",
    "numpy.log1p",
    "numpy.log2",
    "numpy.logaddexp",
    "numpy.logaddexp2",
    "numpy.logical_and",
    "numpy.logical_not",
    "numpy.logical_or",
    "numpy.logical_xor",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.mod",
    "numpy.modf",
    "numpy.multiply",
    "numpy.negative",
    "numpy.nextafter",
    "numpy.not_equal",
    "numpy.positive",
    "numpy.power",
    "numpy.rad2deg",
    "numpy.radians",
    "numpy.reciprocal",
    "numpy.remainder",
    "numpy.right_shift",
    "numpy.rint",
    "numpy.sign",
    "numpy.signbit",
    "numpy.sin",
    "numpy.sinh",
    "numpy.spacing",
    "numpy.sqrt",
    "numpy.square",
    "numpy.subtract",
    "numpy.tan",
    "numpy.tanh",
    "numpy.true_divide",
    "numpy.trunc",
    "numpy.ufunc",
    "set"
   ]
  },
  "type": "module"
 },
 "astropy.units.quantity_helper.Fraction": {
  "data": {
   "shadows": "fractions.Fraction"
  },
  "type": "import"
 },
 "astropy.units.quantity_helper.UFUNC_HELPERS": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "astropy.units.quantity_helper.UNSUPPORTED_UFUNCS": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "astropy.units.quantity_helper._d": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "astropy.units.quantity_helper.can_have_arbitrary_unit": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.equal",
    "numpy.isfinite",
    "numpy.logical_or"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity_helper.check_output": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "TypeError",
    "UnitTypeError",
    "hasattr",
    "isinstance",
    "numpy.can_cast",
    "numpy.ndarray",
    "numpy.result_type",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity_helper.converters_and_unit": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "TypeError",
    "UnitConversionError",
    "UnitsError",
    "ValueError",
    "any",
    "astropy.units.quantity_helper.UFUNC_HELPERS",
    "astropy.units.quantity_helper.UNSUPPORTED_UFUNCS",
    "astropy.units.quantity_helper.can_have_arbitrary_unit",
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity_helper.get_converter": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "AttributeError",
    "UnitTypeError",
    "get_current_unit_registry"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity_helper.get_converters_and_unit": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "UnitConversionError",
    "all",
    "astropy.units.quantity_helper.get_converter"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity_helper.helper_copysign": {
  "data": {
   "lineno": 270
  },
  "type": "function"
 },
 "astropy.units.quantity_helper.helper_degree_to_radian": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "UnitTypeError",
    "astropy.units.quantity_helper.get_converter"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity_helper.helper_dimensionless_to_dimensionless": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "UnitTypeError",
    "astropy.units.quantity_helper.get_converter"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity_helper.helper_dimensionless_to_radian": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "UnitTypeError",
    "astropy.units.quantity_helper.get_converter"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity_helper.helper_division": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "astropy.units.quantity_helper._d"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity_helper.helper_divmod": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "astropy.units.quantity_helper.get_converters_and_unit"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity_helper.helper_frexp": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "UnitTypeError"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity_helper.helper_heaviside": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "UnitTypeError",
    "astropy.units.quantity_helper.get_converter"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity_helper.helper_invariant": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "astropy.units.quantity_helper.helper_ldexp": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.quantity_helper._d"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity_helper.helper_modf": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "UnitTypeError",
    "astropy.units.quantity_helper.get_converter"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity_helper.helper_multiplication": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "astropy.units.quantity_helper._d"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity_helper.helper_onearg_test": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "astropy.units.quantity_helper.helper_power": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "UnitTypeError",
    "astropy.units.quantity_helper.get_converter"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity_helper.helper_radian_to_degree": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "UnitTypeError",
    "astropy.units.quantity_helper.get_converter"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity_helper.helper_radian_to_dimensionless": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "UnitTypeError",
    "astropy.units.quantity_helper.get_converter"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity_helper.helper_two_arg_dimensionless": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "UnitTypeError",
    "astropy.units.quantity_helper.get_converter"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity_helper.helper_twoarg_comparison": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "astropy.units.quantity_helper.get_converters_and_unit"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity_helper.helper_twoarg_floor_divide": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "astropy.units.quantity_helper.get_converters_and_unit"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity_helper.helper_twoarg_invariant": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "astropy.units.quantity_helper.get_converters_and_unit"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity_helper.helper_twoarg_invtrig": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "astropy.units.quantity_helper.get_converters_and_unit"
   ]
  },
  "type": "function"
 },
 "astropy.units.quantity_helper.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.units.required_by_vounit": {
  "data": {
   "symbols_in_volume": [
    "__doc__",
    "astropy.units.required_by_vounit._enable",
    "astropy.units.required_by_vounit._initialize_module",
    "globals"
   ]
  },
  "type": "module"
 },
 "astropy.units.required_by_vounit._enable": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "add_enabled_units",
    "astropy.units.required_by_vounit.inspect"
   ]
  },
  "type": "function"
 },
 "astropy.units.required_by_vounit._generate_prefixonly_unit_summary": {
  "data": {
   "shadows": "generate_prefixonly_unit_summary"
  },
  "type": "import"
 },
 "astropy.units.required_by_vounit._generate_unit_summary": {
  "data": {
   "shadows": "generate_unit_summary"
  },
  "type": "import"
 },
 "astropy.units.required_by_vounit._initialize_module": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "_add_prefixes",
    "astropy.units.required_by_vounit._ns"
   ]
  },
  "type": "function"
 },
 "astropy.units.required_by_vounit._ns": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "astropy.units.required_by_vounit.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.required_by_vounit.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.required_by_vounit.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "astropy.units.required_by_vounit.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.required_by_vounit.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.setup_package": {
  "data": {},
  "type": "module"
 },
 "astropy.units.setup_package.requires_2to3": {
  "data": {
   "lineno": 1
  },
  "type": "function"
 },
 "astropy.units.si": {
  "data": {
   "symbols_in_volume": [
    "Unit",
    "__doc__",
    "astropy.units.si._ns",
    "def_unit",
    "globals",
    "numpy.pi",
    "set"
   ]
  },
  "type": "module"
 },
 "astropy.units.si._generate_unit_summary": {
  "data": {
   "shadows": "generate_unit_summary"
  },
  "type": "import"
 },
 "astropy.units.si._ns": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "astropy.units.si._numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.units.si._si": {
  "data": {
   "shadows": "si"
  },
  "type": "import"
 },
 "astropy.units.si.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.si.bases": {
  "data": {
   "lineno": 225
  },
  "type": "constant"
 },
 "astropy.units.si.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.si.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.si.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.units.tests.py3_test_quantity_annotations": {
  "data": {},
  "type": "module"
 },
 "astropy.units.tests.py3_test_quantity_annotations.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "astropy.units.tests.py3_test_quantity_annotations.py3only": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "astropy.units.tests.py3_test_quantity_annotations.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.py3_test_quantity_annotations.py3only.wrapper": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "compile",
    "eval",
    "func",
    "functools.wraps",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.py3_test_quantity_annotations.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.units.tests.py3_test_quantity_annotations.test_arg_equivalencies3": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "astropy.units.tests.py3_test_quantity_annotations.py3only",
    "astropy.units.tests.py3_test_quantity_annotations.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.py3_test_quantity_annotations.test_args3": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "astropy.units.tests.py3_test_quantity_annotations.py3only",
    "astropy.units.tests.py3_test_quantity_annotations.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.py3_test_quantity_annotations.test_args_noconvert3": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "astropy.units.tests.py3_test_quantity_annotations.py3only",
    "astropy.units.tests.py3_test_quantity_annotations.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.py3_test_quantity_annotations.test_args_nonquantity3": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "astropy.units.tests.py3_test_quantity_annotations.py3only",
    "astropy.units.tests.py3_test_quantity_annotations.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.py3_test_quantity_annotations.test_decorator_override": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "astropy.units.tests.py3_test_quantity_annotations.py3only"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.py3_test_quantity_annotations.test_kwarg_default3": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "astropy.units.tests.py3_test_quantity_annotations.py3only",
    "astropy.units.tests.py3_test_quantity_annotations.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.py3_test_quantity_annotations.test_kwarg_equivalencies3": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "astropy.units.tests.py3_test_quantity_annotations.py3only",
    "astropy.units.tests.py3_test_quantity_annotations.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.py3_test_quantity_annotations.test_kwarg_not_quantity3": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "astropy.units.tests.py3_test_quantity_annotations.py3only",
    "astropy.units.tests.py3_test_quantity_annotations.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.py3_test_quantity_annotations.test_kwarg_wrong_unit3": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "astropy.units.tests.py3_test_quantity_annotations.py3only",
    "astropy.units.tests.py3_test_quantity_annotations.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.py3_test_quantity_annotations.test_kwargs3": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "astropy.units.tests.py3_test_quantity_annotations.py3only",
    "astropy.units.tests.py3_test_quantity_annotations.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.py3_test_quantity_annotations.test_not_quantity3": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "astropy.units.tests.py3_test_quantity_annotations.py3only",
    "astropy.units.tests.py3_test_quantity_annotations.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.py3_test_quantity_annotations.test_return_annotation": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "astropy.units.tests.py3_test_quantity_annotations.py3only"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.py3_test_quantity_annotations.test_unused_kwargs3": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "astropy.units.tests.py3_test_quantity_annotations.py3only",
    "astropy.units.tests.py3_test_quantity_annotations.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.py3_test_quantity_annotations.test_wrong_unit3": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "astropy.units.tests.py3_test_quantity_annotations.py3only",
    "astropy.units.tests.py3_test_quantity_annotations.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.py3_test_quantity_annotations.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.units.tests.py3_test_quantity_annotations.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "astropy.units.tests.test_deprecated": {
  "data": {},
  "type": "module"
 },
 "astropy.units.tests.test_deprecated.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.tests.test_deprecated.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.tests.test_deprecated.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.tests.test_deprecated.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.units.tests.test_deprecated.test_emu": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "AttributeError",
    "astropy.units.tests.test_deprecated.pytest",
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_deprecated.test_required_by_vounit": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "AttributeError",
    "astropy.units.tests.test_deprecated.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_deprecated.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.units.tests.test_deprecated.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.tests.test_equivalencies": {
  "data": {},
  "type": "module"
 },
 "astropy.units.tests.test_equivalencies.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.tests.test_equivalencies.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.utils.assert_allclose"
  },
  "type": "import"
 },
 "astropy.units.tests.test_equivalencies.bad_values": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "astropy.units.tests.test_equivalencies.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.tests.test_equivalencies.doppler_functions": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "astropy.units.tests.test_equivalencies.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.units.tests.test_equivalencies.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.tests.test_equivalencies.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.units.tests.test_equivalencies.test_30kms": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "astropy.units.tests.test_equivalencies.doppler_functions",
    "astropy.units.tests.test_equivalencies.pytest",
    "astropy.units.tests.test_equivalencies.values_ghz",
    "function",
    "list",
    "numpy.testing.assert_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_bad_restfreqs": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "astropy.units.tests.test_equivalencies.bad_values",
    "astropy.units.tests.test_equivalencies.doppler_functions",
    "astropy.units.tests.test_equivalencies.pytest",
    "function",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_brightness_temperature": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_compose_equivalencies": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_dimensionless_angles": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "MyRad1",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_dimensionless_angles.MyRad1": {
  "data": {
   "lineno": 43
  },
  "type": "class"
 },
 "astropy.units.tests.test_equivalencies.test_doppler_energy_0": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "astropy.units.tests.test_equivalencies.doppler_functions",
    "astropy.units.tests.test_equivalencies.pytest",
    "function",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_doppler_energy_circle": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "astropy.units.tests.test_equivalencies.doppler_functions",
    "astropy.units.tests.test_equivalencies.pytest",
    "function",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_doppler_frequency_0": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "astropy.units.tests.test_equivalencies.doppler_functions",
    "astropy.units.tests.test_equivalencies.pytest",
    "function"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_doppler_frequency_circle": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "astropy.units.tests.test_equivalencies.doppler_functions",
    "astropy.units.tests.test_equivalencies.pytest",
    "function",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_doppler_wavelength_0": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "astropy.units.tests.test_equivalencies.doppler_functions",
    "astropy.units.tests.test_equivalencies.pytest",
    "function",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_doppler_wavelength_circle": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "astropy.units.tests.test_equivalencies.doppler_functions",
    "astropy.units.tests.test_equivalencies.pytest",
    "function",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_equivalency_context": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "abs",
    "all",
    "astropy.units.tests.test_equivalencies.pytest",
    "numpy.array",
    "numpy.exp",
    "numpy.testing.utils.assert_allclose",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_equivalency_context.MyQuantityLookalike": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_equivalencies.test_equivalency_context_manager": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "just_to_from_units",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_equivalency_context_manager.just_to_from_units": {
  "data": {
   "lineno": 580
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_equivalent_units": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "len",
    "repr",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_equivalent_units2": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_invalid_equivalency": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.tests.test_equivalencies.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_irrelevant_equivalency": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "astropy.units.tests.test_equivalencies.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_is_equivalent": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_logarithmic": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "astropy.units.tests.test_equivalencies.pytest",
    "numpy.abs",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_massenergy": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_molar_mass_amu": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "astropy.units.tests.test_equivalencies.pytest",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_parallax": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_parallax2": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_pixel_scale": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "assert_quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_plate_scale": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "assert_quantity_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_spectral": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_spectral2": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_spectral3": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_spectral4": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "astropy.units.tests.test_equivalencies.pytest",
    "numpy.testing.utils.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_spectraldensity2": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_spectraldensity3": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_spectraldensity4": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_spectraldensity5": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_temperature": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_temperature_energy": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.test_trivial_equivalency": {
  "data": {
   "lineno": 503
  },
  "type": "function"
 },
 "astropy.units.tests.test_equivalencies.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.units.tests.test_equivalencies.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.tests.test_equivalencies.values_ghz": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "astropy.units.tests.test_format": {
  "data": {},
  "type": "module"
 },
 "astropy.units.tests.test_format.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.tests.test_format.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.utils.assert_allclose"
  },
  "type": "import"
 },
 "astropy.units.tests.test_format.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.tests.test_format.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.tests.test_format.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.units.tests.test_format.test_cds_grammar": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "astropy.units.tests.test_format.pytest",
    "format.CDS.parse",
    "print"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_cds_grammar_fail": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.tests.test_format.pytest",
    "format.CDS.parse",
    "print"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_cds_non_ascii_unit": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_cds_units_available": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "format.CDS._units"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_console_out": {
  "data": {
   "lineno": 295
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_deprecated_did_you_mean_units": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "ValueError",
    "catch_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_fits_function": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.tests.test_format.pytest",
    "format.Fits",
    "print"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_fits_scale_factor": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.tests.test_format.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_fits_units_available": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "format.Fits._units"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_flatten_impossible": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.tests.test_format.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_flatten_to_known": {
  "data": {
   "lineno": 282
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_flexible_float": {
  "data": {
   "lineno": 302
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_format_styles": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "astropy.units.tests.test_format.pytest",
    "format"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_fraction_repr": {
  "data": {
   "lineno": 306
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_latex": {
  "data": {
   "lineno": 247
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_latex_inline_scale": {
  "data": {
   "lineno": 263
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_latex_scale": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_new_style_latex": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_ogip_grammar": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "astropy.units.tests.test_format.pytest",
    "format.OGIP.parse",
    "print"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_ogip_grammar_fail": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.tests.test_format.pytest",
    "format.OGIP.parse",
    "print"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_percent": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.tests.test_format.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_roundtrip": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "astropy.units.tests.test_format.pytest",
    "isinstance",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_roundtrip_cds": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.tests.test_format.pytest",
    "format.CDS._units.items",
    "isinstance",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_roundtrip_fits": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "astropy.units.tests.test_format.pytest",
    "format.Fits._units.items",
    "isinstance",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_roundtrip_ogip": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.tests.test_format.pytest",
    "format.OGIP._units.items",
    "isinstance",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_roundtrip_vo_unit": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "astropy.units.tests.test_format.pytest",
    "format.VOUnit._units.items",
    "isinstance",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_scale_effectively_unity": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "is_effectively_unity",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_scaled_dimensionless": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.tests.test_format.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_unit_grammar": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "astropy.units.tests.test_format.pytest",
    "format.Generic.parse",
    "print"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_unit_grammar_fail": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.tests.test_format.pytest",
    "format.Generic.parse",
    "print"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_vo_units_available": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "format.VOUnit._units"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_vounit_binary_prefix": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "catch_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_vounit_custom": {
  "data": {
   "lineno": 422
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_vounit_details": {
  "data": {
   "lineno": 414
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_vounit_function": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.tests.test_format.pytest",
    "format.VOUnit",
    "print"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_vounit_implicit_custom": {
  "data": {
   "lineno": 437
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.test_vounit_unknown": {
  "data": {
   "lineno": 408
  },
  "type": "function"
 },
 "astropy.units.tests.test_format.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.units.tests.test_format.u_format": {
  "data": {
   "shadows": "format"
  },
  "type": "import"
 },
 "astropy.units.tests.test_format.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.tests.test_logarithmic": {
  "data": {},
  "type": "module"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityArithmetic": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityArithmetic.test_addition_subtraction": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "astropy.units.tests.test_logarithmic.pytest",
    "getattr",
    "numpy.arange",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityArithmetic.test_addition_subtraction_to_normal_units_fails": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "astropy.units.tests.test_logarithmic.pu_sample",
    "astropy.units.tests.test_logarithmic.pytest",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityArithmetic.test_complicated_addition_subtraction": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityArithmetic.test_error_on_lq_as_power": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_logarithmic.pytest",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityArithmetic.test_inplace_addition_subtraction": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "astropy.units.tests.test_logarithmic.pytest",
    "getattr",
    "numpy.arange",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityArithmetic.test_inplace_addition_subtraction_unit_checks": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "astropy.units.tests.test_logarithmic.pu_sample",
    "astropy.units.tests.test_logarithmic.pytest",
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityArithmetic.test_multiplication_division": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "astropy.units.tests.test_logarithmic.pytest",
    "isinstance",
    "numpy.all",
    "numpy.arange",
    "numpy.testing.utils.assert_allclose",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityArithmetic.test_raise_to_power": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "astropy.units.tests.test_logarithmic.pytest",
    "isinstance",
    "numpy.all",
    "numpy.arange",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityComparisons": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityComparisons.test_comparison": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "astropy.units.tests.test_logarithmic.pytest",
    "numpy.all",
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityComparisons.test_comparison_to_non_quantities_fails": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_logarithmic.pytest",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityCreation": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityCreation.test_different_units": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "astropy.units.tests.test_logarithmic.pytest",
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityCreation.test_from_view": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_logarithmic.pytest",
    "isinstance",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityCreation.test_function_values": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "astropy.units.tests.test_logarithmic.pytest",
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityCreation.test_indirect_creation": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "astropy.units.tests.test_logarithmic.pytest",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityCreation.test_logarithmic_quantities": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "astropy.units.tests.test_logarithmic.lq_subclasses",
    "astropy.units.tests.test_logarithmic.lu_subclasses",
    "astropy.units.tests.test_logarithmic.pytest",
    "lu",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityCreation.test_subclass_creation": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.tests.test_logarithmic.itertools",
    "astropy.units.tests.test_logarithmic.lq_subclasses",
    "astropy.units.tests.test_logarithmic.pu_sample",
    "astropy.units.tests.test_logarithmic.pytest",
    "lq_cls",
    "numpy.arange",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityCreation.test_using_quantity_class": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "astropy.units.tests.test_logarithmic.pytest",
    "lu",
    "lu._quantity_class",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityMethods": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityMethods.setup": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityMethods.test_always_ok": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "astropy.units.tests.test_logarithmic.pytest",
    "getattr",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityMethods.test_clip": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityMethods.test_dot": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityMethods.test_never_ok": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.tests.test_logarithmic.pytest",
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityMethods.test_only_ok_if_dimensionless": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_logarithmic.pytest",
    "getattr",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantitySlicing": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantitySlicing.test_item_get_and_set": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "astropy.units.tests.test_logarithmic.pytest",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantitySlicing.test_slice_get_and_set": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "astropy.units.tests.test_logarithmic.pytest",
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityUfuncs": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityUfuncs.setup": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityUfuncs.test_not_implemented_with_physical_unit": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "astropy.units.tests.test_logarithmic.pytest",
    "numpy.all",
    "numpy.square"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityUfuncs.test_power": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "astropy.units.tests.test_logarithmic.pytest",
    "numpy.all",
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityViews": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityViews.setup": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityViews.test_function_view": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "numpy.all",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityViews.test_quantity_view": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_logarithmic.pytest",
    "numpy.all",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogQuantityViews.test_value_view": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.ndarray",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogUnitArithmetic": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_logarithmic.TestLogUnitArithmetic.test_addition_subtraction": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "astropy.units.tests.test_logarithmic.pytest",
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogUnitArithmetic.test_addition_subtraction_to_non_units_fails": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_logarithmic.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogUnitArithmetic.test_addition_subtraction_to_normal_units_fails": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "astropy.units.tests.test_logarithmic.pu_sample",
    "astropy.units.tests.test_logarithmic.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogUnitArithmetic.test_complicated_addition_subtraction": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogUnitArithmetic.test_multiplication_division": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_logarithmic.pytest",
    "isinstance",
    "numpy.arange",
    "numpy.testing.utils.assert_allclose",
    "object",
    "slice",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogUnitArithmetic.test_neg_pos": {
  "data": {
   "lineno": 385
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogUnitArithmetic.test_raise_to_power": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "astropy.units.tests.test_logarithmic.pytest",
    "isinstance",
    "numpy.arange",
    "numpy.testing.utils.assert_allclose",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogUnitConversion": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_logarithmic.TestLogUnitConversion.test_container_unit_conversion": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "astropy.units.tests.test_logarithmic.lu_units",
    "astropy.units.tests.test_logarithmic.pytest",
    "lu_unit",
    "numpy.linspace",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogUnitConversion.test_physical_unit_conversion": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "astropy.units.tests.test_logarithmic.itertools",
    "astropy.units.tests.test_logarithmic.lu_units",
    "astropy.units.tests.test_logarithmic.pu_sample",
    "astropy.units.tests.test_logarithmic.pytest",
    "lu_unit",
    "numpy.linspace",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogUnitConversion.test_subclass_conversion": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "astropy.units.tests.test_logarithmic.itertools",
    "astropy.units.tests.test_logarithmic.lu_units",
    "astropy.units.tests.test_logarithmic.pu_sample",
    "astropy.units.tests.test_logarithmic.pytest",
    "flu_unit",
    "numpy.linspace",
    "numpy.testing.utils.assert_allclose",
    "tlu_unit"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogUnitConversion.test_unit_decomposition": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogUnitConversion.test_unit_multiple_possible_equivalencies": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "astropy.units.tests.test_logarithmic.pu_sample"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogUnitCreation": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_logarithmic.TestLogUnitCreation.test_call_invalid_unit": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.units.tests.test_logarithmic.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogUnitCreation.test_call_units": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "astropy.units.tests.test_logarithmic.itertools",
    "astropy.units.tests.test_logarithmic.lu_units",
    "astropy.units.tests.test_logarithmic.pu_sample",
    "astropy.units.tests.test_logarithmic.pytest",
    "lu_unit"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogUnitCreation.test_callable_units": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "astropy.units.tests.test_logarithmic.lu_subclasses",
    "astropy.units.tests.test_logarithmic.lu_units",
    "astropy.units.tests.test_logarithmic.pytest",
    "callable",
    "isinstance",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogUnitCreation.test_equality_to_normal_unit_for_dimensionless": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "astropy.units.tests.test_logarithmic.lu_units",
    "astropy.units.tests.test_logarithmic.pytest",
    "lu_unit"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogUnitCreation.test_logarithmic_units": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogUnitCreation.test_subclass_creation": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.tests.test_logarithmic.itertools",
    "astropy.units.tests.test_logarithmic.lu_subclasses",
    "astropy.units.tests.test_logarithmic.pu_sample",
    "astropy.units.tests.test_logarithmic.pytest",
    "lu_cls"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.TestLogUnitStrings": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_logarithmic.TestLogUnitStrings.test_str": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.tests.test_logarithmic.pytest",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.tests.test_logarithmic.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.utils.assert_allclose"
  },
  "type": "import"
 },
 "astropy.units.tests.test_logarithmic.c": {
  "data": {
   "shadows": "constants"
  },
  "type": "import"
 },
 "astropy.units.tests.test_logarithmic.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.tests.test_logarithmic.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "astropy.units.tests.test_logarithmic.lq_subclasses": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "astropy.units.tests.test_logarithmic.lu_subclasses": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "astropy.units.tests.test_logarithmic.lu_units": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "astropy.units.tests.test_logarithmic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.units.tests.test_logarithmic.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "astropy.units.tests.test_logarithmic.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.tests.test_logarithmic.pu_sample": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "astropy.units.tests.test_logarithmic.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.units.tests.test_logarithmic.test_conversion_to_and_from_physical_quantities": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "isinstance",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.test_hashable": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "hash",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.test_inequality": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.test_pickle": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "astropy.units.tests.test_logarithmic.pickle"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.test_predefined_magnitudes": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "assert_quantity_allclose",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.test_predefined_reinitialisation": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.test_predefined_string_roundtrip": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.test_quantity_decomposition": {
  "data": {
   "lineno": 514
  },
  "type": "function"
 },
 "astropy.units.tests.test_logarithmic.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.units.tests.test_logarithmic.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.tests.test_physical": {
  "data": {},
  "type": "module"
 },
 "astropy.units.tests.test_physical.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.tests.test_physical.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.tests.test_physical.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.tests.test_physical.test_angular_momentum": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "astropy.units.tests.test_physical.test_data_quantity": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "astropy.units.tests.test_physical.test_dimensionless": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "astropy.units.tests.test_physical.test_flam": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "astropy.units.tests.test_physical.test_photlam": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "astropy.units.tests.test_physical.test_photnu": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "astropy.units.tests.test_physical.test_power": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "astropy.units.tests.test_physical.test_redundant_physical_type": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_physical.test_simple": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "astropy.units.tests.test_physical.test_speed": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "astropy.units.tests.test_physical.test_unknown": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "astropy.units.tests.test_physical.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.units.tests.test_physical.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.units.tests.test_quantity.matplotlib",
    "distutils.version.LooseVersion"
   ]
  },
  "type": "module"
 },
 "astropy.units.tests.test_quantity.Fraction": {
  "data": {
   "shadows": "fractions.Fraction"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity.HAS_MATPLOTLIB": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "astropy.units.tests.test_quantity.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity.MATPLOTLIB_LT_15": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "astropy.units.tests.test_quantity.TestQuantityComparison": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity.TestQuantityComparison.test_quantity_comparison": {
  "data": {
   "lineno": 750
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityComparison.test_quantity_equality": {
  "data": {
   "lineno": 743
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityCreation": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity.TestQuantityCreation.test_1": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "TypeError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityCreation.test_2": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "TypeError",
    "object"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityCreation.test_3": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityCreation.test_copy": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityCreation.test_nan_inf": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "TypeError",
    "numpy.isinf",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityCreation.test_ndmin": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityCreation.test_non_quantity_with_unit": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityCreation.test_non_quantity_with_unit.MyQuantityLookalike": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity.TestQuantityCreation.test_order": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityCreation.test_preserve_dtype": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity.decimal",
    "float",
    "int",
    "numpy.array",
    "numpy.float32",
    "object"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityCreation.test_subok": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "MyQuantitySubclass",
    "numpy.arange",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityCreation.test_subok.MyQuantitySubclass": {
  "data": {
   "lineno": 188
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity.TestQuantityCreation.test_unit_property": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityDisplay": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "int",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity.TestQuantityDisplay.test_array_quantity_repr": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityDisplay.test_array_quantity_str": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityDisplay.test_dimensionless_quantity_format": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "format"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityDisplay.test_dimensionless_quantity_repr": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "int",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityDisplay.test_dimensionless_quantity_str": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityDisplay.test_repr_latex": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.get_printoptions",
    "numpy.inf",
    "numpy.nan",
    "numpy.set_printoptions"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityDisplay.test_scalar_quantity_format": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "format"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityDisplay.test_scalar_quantity_repr": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityDisplay.test_scalar_quantity_str": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityDisplay.test_uninitialized_unit_format": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "numpy.arange",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityMatplotlib": {
  "data": {
   "lineno": 1398,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity.TestQuantityMatplotlib.test_plot": {
  "data": {
   "lineno": 1411,
   "symbols_in_volume": [
    "matplotlib.pyplot.plot"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityMatplotlib.test_scatter": {
  "data": {
   "lineno": 1415,
   "symbols_in_volume": [
    "matplotlib.pyplot.scatter"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityOperations": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity.TestQuantityOperations.test_abs": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityOperations.test_addition": {
  "data": {
   "lineno": 273
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityOperations.test_array_converters": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityOperations.test_commutativity": {
  "data": {
   "lineno": 348
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityOperations.test_comparison": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityOperations.test_complicated_operation": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "numpy.pi.to",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityOperations.test_dimensionless_operations": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "numpy.all",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityOperations.test_division": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityOperations.test_incompatible_units": {
  "data": {
   "lineno": 423
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityOperations.test_matrix_multiplication": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity.sys",
    "eval",
    "matmul",
    "numpy.all",
    "numpy.array",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityOperations.test_multiplication": {
  "data": {
   "lineno": 299
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityOperations.test_non_number_type": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityOperations.test_numeric_converter_to_index_in_practice": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityOperations.test_numeric_converters": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "int",
    "long"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityOperations.test_power": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityOperations.test_subtraction": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestQuantityOperations.test_unary": {
  "data": {
   "lineno": 393
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestSpecificTypeQuantity": {
  "data": {
   "lineno": 1339,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity.TestSpecificTypeQuantity.setup": {
  "data": {
   "lineno": 1340
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestSpecificTypeQuantity.setup.Length": {
  "data": {
   "lineno": 1341
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity.TestSpecificTypeQuantity.setup.Length2": {
  "data": {
   "lineno": 1344
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity.TestSpecificTypeQuantity.setup.Length3": {
  "data": {
   "lineno": 1347
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity.TestSpecificTypeQuantity.test_creation": {
  "data": {
   "lineno": 1354,
   "symbols_in_volume": [
    "numpy.arange",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestSpecificTypeQuantity.test_operation_precedence_and_fallback": {
  "data": {
   "lineno": 1384,
   "symbols_in_volume": [
    "numpy.arange",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.TestSpecificTypeQuantity.test_view": {
  "data": {
   "lineno": 1370,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ones",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity.pickle": {
  "data": {
   "shadows": "cPickle"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity.test_array_indexing_slicing": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_array_setslice": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_arrays": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "long",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.float",
    "numpy.ndarray",
    "numpy.testing.assert_array_equal",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_cgs": {
  "data": {
   "lineno": 723
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_copy": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_decompose": {
  "data": {
   "lineno": 884
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_decompose_regression": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_deepcopy": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity.copy",
    "isinstance",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_equality_numpy_scalar": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": [
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_implicit_conversion": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_implicit_conversion_autocomplete": {
  "data": {
   "lineno": 1074,
   "symbols_in_volume": [
    "AttributeError",
    "dir"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_inherit_docstrings": {
  "data": {
   "lineno": 1252,
   "symbols_in_volume": [
    "numpy.ndarray.argmax.__doc__"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_insert": {
  "data": {
   "lineno": 1286,
   "symbols_in_volume": [
    "minversion",
    "numpy",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_inverse_quantity": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_quantity_conversion": {
  "data": {
   "lineno": 626
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_quantity_conversion_equivalency_passed_on": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "MySpectral",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_quantity_conversion_equivalency_passed_on.MySpectral": {
  "data": {
   "lineno": 681
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity.test_quantity_conversion_equivalency_passed_on.MySpectral.__quantity_instance__": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "MySpectral"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_quantity_conversion_equivalency_passed_on.MySpectral.__quantity_view__": {
  "data": {
   "lineno": 684
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_quantity_conversion_with_equiv": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_quantity_fraction_power": {
  "data": {
   "lineno": 1243,
   "symbols_in_volume": [
    "fractions.Fraction"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_quantity_from_table": {
  "data": {
   "lineno": 1256,
   "symbols_in_volume": [
    "Table",
    "numpy.arange",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_quantity_initialisation_from_string": {
  "data": {
   "lineno": 1171,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_quantity_initialized_with_quantity": {
  "data": {
   "lineno": 1035
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_quantity_invalid_unit_string": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_quantity_iterability": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "TypeError",
    "isiterable",
    "iter"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_quantity_mutability": {
  "data": {
   "lineno": 1025,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_quantity_pickelability": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_quantity_string_unit": {
  "data": {
   "lineno": 1051
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_quantity_to_view": {
  "data": {
   "lineno": 1231,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_quantity_tuple_power": {
  "data": {
   "lineno": 1238,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_quantity_value_views": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_repr_array_of_quantity": {
  "data": {
   "lineno": 1325,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_self_equivalency": {
  "data": {
   "lineno": 704
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_si": {
  "data": {
   "lineno": 709
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_unit_class_override": {
  "data": {
   "lineno": 1421,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_unit_class_override.MyQuantity": {
  "data": {
   "lineno": 1422
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity.test_unit_identity": {
  "data": {
   "lineno": 1226
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.test_unsupported": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": [
    "TypeError",
    "numpy.arange",
    "numpy.bitwise_and"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity_array_methods": {
  "data": {},
  "type": "module"
 },
 "astropy.units.tests.test_quantity_array_methods.TestArrayConversion": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity_array_methods.TestArrayConversion.test_byte_type_view_field_changes": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "all",
    "numpy.array",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestArrayConversion.test_fill": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestArrayConversion.test_item": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "astropy.units.tests.test_quantity_array_methods.pytest",
    "int",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestArrayConversion.test_not_implemented": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "NotImplementedError",
    "astropy.units.tests.test_quantity_array_methods.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestArrayConversion.test_repeat_compress_diagonal": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestArrayConversion.test_slice": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "all",
    "astropy.units.tests.test_quantity_array_methods.pytest",
    "numpy.arange",
    "numpy.array",
    "numpy.inf",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestArrayConversion.test_slice_to_quantity": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "isinstance",
    "numpy.random.uniform",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestArrayConversion.test_sort": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "all",
    "hasattr",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestArrayConversion.test_view": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "hasattr",
    "numpy.array",
    "numpy.int64",
    "numpy.ma.MaskedArray",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityArrayCopy": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityArrayCopy.test_copy_on_creation": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityArrayCopy.test_flat": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityArrayCopy.test_getitem_is_view": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityArrayCopy.test_si_copies": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityArrayCopy.test_to_copies": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityReshapeFuncs": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityReshapeFuncs.test_flatten": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityReshapeFuncs.test_ravel": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityReshapeFuncs.test_reshape": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityReshapeFuncs.test_squeeze": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityReshapeFuncs.test_swapaxes": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityReshapeFuncs.test_transpose": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_argmax": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_argmin": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "numpy.argmin",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_clip": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_clip_func": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.clip"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_clip_inplace": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_clip_meth": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_conj": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_cumprod": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.tests.test_quantity_array_methods.pytest",
    "numpy.all",
    "numpy.array",
    "numpy.cumprod"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_cumsum": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.cumsum"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_cumsum_inplace": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.cumsum",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_diff": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.diff"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_dot_func": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_array_methods.pytest",
    "numpy.array",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_dot_meth": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_ediff1d": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.ediff1d"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_max": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_max_inplace": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_mean": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_mean_inplace": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_median": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.median"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_median_inplace": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.median"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_min": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_min_inplace": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_nansum": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.nan",
    "numpy.nansum"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_nansum_inplace": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.nansum"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_prod": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.tests.test_quantity_array_methods.pytest",
    "numpy.array",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_ptp": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ptp"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_ptp_inplace": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ptp"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_round": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_round_inplace": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_std": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_std_inplace": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_array_methods.pytest",
    "numpy.array",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_sum": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_sum_inplace": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_trace_func": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_array_methods.pytest",
    "numpy.array",
    "numpy.trace"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_trace_meth": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_var": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestQuantityStatsFuncs.test_var_inplace": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestRecArray": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity_array_methods.TestRecArray.setup": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestRecArray.test_creation": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.TestRecArray.test_equality": {
  "data": {
   "lineno": 554
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_array_methods.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity_array_methods.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity_array_methods.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity_decorator": {
  "data": {},
  "type": "module"
 },
 "astropy.units.tests.test_quantity_decorator.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity_decorator.test_arg_equivalencies": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_decorator.pytest",
    "isinstance",
    "myfunc_args"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_arg_equivalencies.myfunc_args": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_args": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_decorator.x_input",
    "astropy.units.tests.test_quantity_decorator.y_input",
    "isinstance",
    "myfunc_args"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_args.myfunc_args": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_args_None": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "isinstance",
    "myfunc_args"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_args_None.myfunc_args": {
  "data": {
   "lineno": 294
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_args_None_kwarg": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_quantity_decorator.pytest",
    "isinstance",
    "myfunc_args"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_args_None_kwarg.myfunc_args": {
  "data": {
   "lineno": 314
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_args_nonquantity": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_decorator.x_input",
    "int",
    "isinstance",
    "myfunc_args"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_args_nonquantity.myfunc_args": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_default_value_check": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_quantity_decorator.pytest",
    "isinstance",
    "myfunc_args"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_default_value_check.myfunc_args": {
  "data": {
   "lineno": 277
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_kwarg_default": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_decorator.x_input",
    "astropy.units.tests.test_quantity_decorator.y_input",
    "isinstance",
    "myfunc_args"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_kwarg_default.myfunc_args": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_kwarg_equivalencies": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_decorator.pytest",
    "isinstance",
    "myfunc_args"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_kwarg_equivalencies.myfunc_args": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_kwarg_invalid_physical_type": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.tests.test_quantity_decorator.pytest",
    "myfunc_args",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_kwarg_invalid_physical_type.myfunc_args": {
  "data": {
   "lineno": 263
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_kwarg_not_quantity": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_quantity_decorator.pytest",
    "astropy.units.tests.test_quantity_decorator.x_input",
    "astropy.units.tests.test_quantity_decorator.y_input",
    "myfunc_args",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_kwarg_not_quantity.myfunc_args": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_kwarg_wrong_unit": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_decorator.pytest",
    "astropy.units.tests.test_quantity_decorator.x_input",
    "astropy.units.tests.test_quantity_decorator.y_input",
    "myfunc_args",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_kwarg_wrong_unit.myfunc_args": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_kwargs": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_decorator.x_input",
    "astropy.units.tests.test_quantity_decorator.y_input",
    "int",
    "isinstance",
    "myfunc_args"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_kwargs.myfunc_args": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_kwargs_extra": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_decorator.x_input",
    "isinstance",
    "myfunc_args"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_kwargs_extra.myfunc_args": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_kwargs_input": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_decorator.x_input",
    "astropy.units.tests.test_quantity_decorator.y_input",
    "isinstance",
    "myfunc_args"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_kwargs_input.myfunc_args": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_no_equivalent": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_quantity_decorator.pytest",
    "myfunc_args",
    "str",
    "test_quantity"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_no_equivalent.myfunc_args": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_no_equivalent.test_quantity": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "object",
    "test_unit"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity_decorator.test_no_equivalent.test_unit": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity_decorator.test_not_quantity": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_quantity_decorator.pytest",
    "astropy.units.tests.test_quantity_decorator.x_input",
    "astropy.units.tests.test_quantity_decorator.y_input",
    "myfunc_args",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_not_quantity.myfunc_args": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_unused_kwargs": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_decorator.x_input",
    "astropy.units.tests.test_quantity_decorator.y_input",
    "int",
    "isinstance",
    "myfunc_args"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_unused_kwargs.myfunc_args": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_wrong_unit": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_decorator.pytest",
    "astropy.units.tests.test_quantity_decorator.x_input",
    "astropy.units.tests.test_quantity_decorator.y_input",
    "myfunc_args",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.test_wrong_unit.myfunc_args": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity_decorator.x_input": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_decorator.pytest",
    "astropy.units.tests.test_quantity_decorator.x_inputs",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.x_inputs": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "astropy.units.tests.test_quantity_decorator.y_input": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_decorator.pytest",
    "astropy.units.tests.test_quantity_decorator.y_inputs",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_decorator.y_inputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "astropy.units.tests.test_quantity_non_ufuncs": {
  "data": {},
  "type": "module"
 },
 "astropy.units.tests.test_quantity_non_ufuncs.TestQuantityLinAlgFuncs": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity_non_ufuncs.TestQuantityLinAlgFuncs.test_dot": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_non_ufuncs.pytest",
    "numpy.array",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_non_ufuncs.TestQuantityLinAlgFuncs.test_inner": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_non_ufuncs.pytest",
    "numpy.array",
    "numpy.inner"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_non_ufuncs.TestQuantityLinAlgFuncs.test_matmul": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_non_ufuncs.pytest",
    "numpy.array",
    "numpy.eye",
    "numpy.matmul"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_non_ufuncs.TestQuantityLinAlgFuncs.test_outer": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_non_ufuncs.pytest",
    "numpy.all",
    "numpy.array",
    "numpy.outer"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_non_ufuncs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity_non_ufuncs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity_non_ufuncs.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity_ufuncs": {
  "data": {},
  "type": "module"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestComparisonUfuncs": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestComparisonUfuncs.test_comparison_invalid_units": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.equal",
    "numpy.greater",
    "numpy.greater_equal",
    "numpy.less",
    "numpy.less_equal",
    "numpy.not_equal",
    "ufunc"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestComparisonUfuncs.test_comparison_valid_units": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "isinstance",
    "len",
    "numpy.all",
    "numpy.array",
    "numpy.bool",
    "numpy.equal",
    "numpy.greater",
    "numpy.greater_equal",
    "numpy.inf",
    "numpy.less",
    "numpy.less_equal",
    "numpy.nan",
    "numpy.not_equal",
    "numpy.ones",
    "ufunc"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestInplaceUfuncs": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestInplaceUfuncs.test_one_argument_two_output_ufunc_inplace": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.arange",
    "numpy.modf"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestInplaceUfuncs.test_one_argument_ufunc_inplace": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.arange",
    "numpy.sin",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestInplaceUfuncs.test_one_argument_ufunc_inplace_2": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.absolute",
    "numpy.all",
    "numpy.arange",
    "numpy.arcsin",
    "numpy.exp",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestInplaceUfuncs.test_two_argument_two_output_ufunc_inplace": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.arange",
    "numpy.divmod"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestInplaceUfuncs.test_two_argument_ufunc_inplace_1": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestInplaceUfuncs.test_two_argument_ufunc_inplace_2": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.add",
    "numpy.arange",
    "numpy.arctan2",
    "numpy.multiply"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestInplaceUfuncs.test_two_argument_ufunc_inplace_3": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "numpy.add",
    "numpy.all",
    "numpy.arctan2",
    "numpy.array",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestInplaceUfuncs.test_ufunc_inplace_non_contiguous_data": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestInplaceUfuncs.test_ufunc_inplace_non_standard_dtype": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.float32",
    "numpy.int32",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestInvariantUfuncs": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestInvariantUfuncs.test_invariant_array": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "isinstance",
    "numpy.absolute",
    "numpy.all",
    "numpy.array",
    "numpy.ceil",
    "numpy.conjugate",
    "numpy.floor",
    "numpy.negative",
    "numpy.rint",
    "ufunc"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestInvariantUfuncs.test_invariant_scalar": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "hasattr",
    "isinstance",
    "numpy",
    "numpy.absolute",
    "numpy.ceil",
    "numpy.conj",
    "numpy.conjugate",
    "numpy.fabs",
    "numpy.floor",
    "numpy.negative",
    "numpy.positive",
    "numpy.rint",
    "numpy.spacing",
    "ufunc"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestInvariantUfuncs.test_invariant_twoarg_array": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "isinstance",
    "numpy.add",
    "numpy.array",
    "numpy.fmod",
    "numpy.hypot",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.mod",
    "numpy.nextafter",
    "numpy.remainder",
    "numpy.subtract",
    "numpy.testing.utils.assert_allclose",
    "ufunc"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestInvariantUfuncs.test_invariant_twoarg_invalid_units": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.add",
    "numpy.fmod",
    "numpy.hypot",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.mod",
    "numpy.nextafter",
    "numpy.remainder",
    "numpy.subtract",
    "ufunc"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestInvariantUfuncs.test_invariant_twoarg_one_arbitrary": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "isinstance",
    "numpy.add",
    "numpy.array",
    "numpy.fmod",
    "numpy.hypot",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.mod",
    "numpy.nextafter",
    "numpy.remainder",
    "numpy.subtract",
    "numpy.testing.utils.assert_allclose",
    "ufunc"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestInvariantUfuncs.test_invariant_twoarg_scalar": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "isinstance",
    "numpy.add",
    "numpy.fmod",
    "numpy.hypot",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.mod",
    "numpy.nextafter",
    "numpy.remainder",
    "numpy.subtract",
    "numpy.testing.utils.assert_allclose",
    "ufunc"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_cbrt_array": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.all",
    "numpy.array",
    "numpy.cbrt"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_cbrt_scalar": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.cbrt"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_copysign_array": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "numpy.array",
    "numpy.copysign"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_copysign_scalar": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "numpy.copysign"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_dimensionless_twoarg_array": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "function",
    "numpy.array",
    "numpy.logaddexp",
    "numpy.logaddexp2",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_dimensionless_twoarg_invalid_units": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "function",
    "function.__name__",
    "numpy.logaddexp",
    "numpy.logaddexp2"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_divide_array": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "function",
    "numpy.all",
    "numpy.arange",
    "numpy.divide",
    "numpy.true_divide"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_divide_scalar": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "function",
    "numpy.divide",
    "numpy.true_divide"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_exp_array": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "function",
    "numpy.all",
    "numpy.array",
    "numpy.exp",
    "numpy.exp2",
    "numpy.expm1",
    "numpy.log",
    "numpy.log10",
    "numpy.log1p",
    "numpy.log2",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_exp_invalid_units": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "function",
    "function.__name__",
    "numpy.exp",
    "numpy.exp2",
    "numpy.expm1",
    "numpy.log",
    "numpy.log10",
    "numpy.log1p",
    "numpy.log2"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_exp_scalar": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "function",
    "numpy.exp",
    "numpy.exp2",
    "numpy.expm1",
    "numpy.log",
    "numpy.log10",
    "numpy.log1p",
    "numpy.log2"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_float_power_array": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.float_power"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_floor_divide_remainder_and_divmod": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "divmod",
    "hasattr",
    "numpy",
    "numpy.all",
    "numpy.array",
    "numpy.divmod",
    "numpy.floor_divide",
    "numpy.remainder",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_frexp_array": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "all",
    "numpy.array",
    "numpy.frexp",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_frexp_invalid_units": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.array",
    "numpy.frexp"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_frexp_scalar": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.frexp"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_heaviside_array": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.all",
    "numpy.array",
    "numpy.heaviside"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_heaviside_scalar": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.heaviside"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_ldexp_array": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.ldexp"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_ldexp_invalid": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "int",
    "numpy.ldexp"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_ldexp_scalar": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "numpy.ldexp"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_modf_array": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "all",
    "numpy.arange",
    "numpy.modf"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_modf_scalar": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "numpy.modf"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_multiply_array": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange",
    "numpy.multiply"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_multiply_scalar": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "numpy.multiply"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_power_array": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_power_array_array": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "ValueError",
    "numpy.power",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_power_array_array2": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "ValueError",
    "numpy.power",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_power_array_array3": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "cls",
    "list",
    "numpy.all",
    "numpy.array",
    "numpy.ma.array",
    "numpy.power",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_power_invalid": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_power_scalar": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_reciprocal_array": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.reciprocal"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_reciprocal_scalar": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "numpy.reciprocal"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_sqrt_array": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_sqrt_scalar": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_square_array": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.square"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityMathFuncs.test_square_scalar": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "numpy.square"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityTrigonometricFuncs": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityTrigonometricFuncs.test_arccos_array": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.arccos",
    "numpy.array",
    "numpy.cos",
    "numpy.pi",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityTrigonometricFuncs.test_arccos_invalid_units": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.arccos"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityTrigonometricFuncs.test_arccos_scalar": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.arccos",
    "numpy.cos",
    "numpy.pi",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityTrigonometricFuncs.test_arcsin_array": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.arcsin",
    "numpy.array",
    "numpy.pi",
    "numpy.sin",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityTrigonometricFuncs.test_arcsin_invalid_units": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.arcsin"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityTrigonometricFuncs.test_arcsin_no_warning_on_unscaled_quantity": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_ufuncs.warnings",
    "numpy.arcsin"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityTrigonometricFuncs.test_arcsin_scalar": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.arcsin",
    "numpy.sin",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityTrigonometricFuncs.test_arctan2_invalid": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.arctan2",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityTrigonometricFuncs.test_arctan2_valid": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.arctan2",
    "numpy.array",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityTrigonometricFuncs.test_arctan_array": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.arctan",
    "numpy.array",
    "numpy.tan",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityTrigonometricFuncs.test_arctan_invalid_units": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.arctan",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityTrigonometricFuncs.test_arctan_scalar": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.arctan",
    "numpy.pi",
    "numpy.tan"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityTrigonometricFuncs.test_cos_array": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cos",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityTrigonometricFuncs.test_cos_invalid_units": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.cos"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityTrigonometricFuncs.test_cos_scalar": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.pi",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityTrigonometricFuncs.test_degrees": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.degrees",
    "numpy.pi",
    "numpy.rad2deg",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityTrigonometricFuncs.test_radians": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.deg2rad",
    "numpy.pi",
    "numpy.radians",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityTrigonometricFuncs.test_sin_array": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.pi",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityTrigonometricFuncs.test_sin_invalid_units": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityTrigonometricFuncs.test_sin_scalar": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.sin",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityTrigonometricFuncs.test_tan_array": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.tan",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityTrigonometricFuncs.test_tan_invalid_units": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.array",
    "numpy.tan"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestQuantityTrigonometricFuncs.test_tan_scalar": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.sqrt",
    "numpy.tan",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestUfuncAt": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestUfuncAt.test_one_argument_ufunc_at": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.isfinite.at",
    "numpy.log.at",
    "numpy.negative.at",
    "numpy.sin.at",
    "numpy.square.at",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestUfuncAt.test_two_argument_ufunc_at": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.add.at",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.greater.at",
    "numpy.multiply.at"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestUfuncCoverage": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestUfuncCoverage.test_coverage": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.core.umath.__dict__.values",
    "numpy.ufunc",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestUfuncOuter": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestUfuncOuter.test_one_argument_ufunc_outer": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.arange",
    "numpy.sin.outer"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestUfuncOuter.test_two_argument_ufunc_outer": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.add.outer",
    "numpy.all",
    "numpy.arange",
    "numpy.greater.outer",
    "numpy.multiply.outer",
    "numpy.ndarray",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestUfuncReduceReduceatAccumulate": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestUfuncReduceReduceatAccumulate.test_one_argument_ufunc_reduce_accumulate": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.arange",
    "numpy.array",
    "numpy.sin.accumulate",
    "numpy.sin.reduce",
    "numpy.sin.reduceat"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.TestUfuncReduceReduceatAccumulate.test_two_argument_ufunc_reduce_accumulate": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.tests.test_quantity_ufuncs.pytest",
    "numpy.add.accumulate",
    "numpy.add.reduce",
    "numpy.add.reduceat",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.greater.accumulate",
    "numpy.greater.reduce",
    "numpy.greater.reduceat",
    "numpy.multiply.accumulate",
    "numpy.multiply.reduce",
    "numpy.multiply.reduceat"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_quantity_ufuncs.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.utils.assert_allclose"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity_ufuncs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity_ufuncs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity_ufuncs.qh": {
  "data": {
   "shadows": "quantity_helper"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity_ufuncs.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.units.tests.test_quantity_ufuncs.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.units.tests.test_units": {
  "data": {
   "symbols_in_volume": [
    "astropy.units.tests.test_units.COMPOSE_CGS_TO_SI",
    "astropy.units.tests.test_units.COMPOSE_ROUNDTRIP",
    "astropy.units.tests.test_units.COMPOSE_SI_TO_CGS",
    "isinstance",
    "set"
   ]
  },
  "type": "module"
 },
 "astropy.units.tests.test_units.COMPOSE_CGS_TO_SI": {
  "data": {
   "lineno": 343
  },
  "type": "constant"
 },
 "astropy.units.tests.test_units.COMPOSE_ROUNDTRIP": {
  "data": {
   "lineno": 320
  },
  "type": "constant"
 },
 "astropy.units.tests.test_units.COMPOSE_SI_TO_CGS": {
  "data": {
   "lineno": 362
  },
  "type": "constant"
 },
 "astropy.units.tests.test_units.Fraction": {
  "data": {
   "shadows": "fractions.Fraction"
  },
  "type": "import"
 },
 "astropy.units.tests.test_units._unit_as_str": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.tests.test_units.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.utils.assert_allclose"
  },
  "type": "import"
 },
 "astropy.units.tests.test_units.c": {
  "data": {
   "shadows": "constants"
  },
  "type": "import"
 },
 "astropy.units.tests.test_units.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.tests.test_units.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.units.tests.test_units.pickle": {
  "data": {
   "shadows": "cPickle"
  },
  "type": "import"
 },
 "astropy.units.tests.test_units.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.tests.test_units.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.units.tests.test_units.test_all_units": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "get_current_unit_registry",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_barn_prefixes": {
  "data": {
   "lineno": 651
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_cds_power": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_compare_with_none": {
  "data": {
   "lineno": 713
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_comparison": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "astropy.units.tests.test_units.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_complex_compose": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "complex",
    "complex.compose",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_complex_fractional_rounding_errors": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_compose_best_unit_first": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_compose_cgs_to_si": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "astropy.units.tests.test_units.COMPOSE_CGS_TO_SI",
    "astropy.units.tests.test_units._unit_as_str",
    "astropy.units.tests.test_units.pytest",
    "iter",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_compose_failed": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_compose_fractional_powers": {
  "data": {
   "lineno": 420
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_compose_into_arbitrary_units": {
  "data": {
   "lineno": 576
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_compose_issue_579": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_compose_no_duplicates": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_compose_roundtrip": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "astropy.units.tests.test_units.COMPOSE_ROUNDTRIP",
    "astropy.units.tests.test_units._unit_as_str",
    "astropy.units.tests.test_units.pytest",
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_compose_si_to_cgs": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "astropy.units.tests.test_units.COMPOSE_SI_TO_CGS",
    "astropy.units.tests.test_units._unit_as_str",
    "astropy.units.tests.test_units.pytest",
    "sorted"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_composite": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_composite_compose": {
  "data": {
   "lineno": 703
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_composite_unit_get_format_name": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_convert": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_convert_fail": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "astropy.units.tests.test_units.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_convertible_exception": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_convertible_exception2": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_data_quantities": {
  "data": {
   "lineno": 709
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_decompose": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_decompose_bases": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "fractions.Fraction"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_decompose_to_cgs": {
  "data": {
   "lineno": 392
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_dimensionless_to_cgs": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_dimensionless_to_si": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_duplicate_define": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_empty_compose": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "astropy.units.tests.test_units.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_enable_unit_groupings": {
  "data": {
   "lineno": 756
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_endian_independence": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_equiv_compose": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_fits_hst_unit": {
  "data": {
   "lineno": 645
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_fractional_powers": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "float",
    "fractions.Fraction",
    "isinstance",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_fractional_rounding_errors_simple": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "fractions.Fraction",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_getting_started": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_allclose",
    "speed_converter"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_in_units": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_inherit_docstrings": {
  "data": {
   "lineno": 693
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_initialisation": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "locals"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_invalid_compare": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_invalid_power": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "float",
    "fractions.Fraction",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_invalid_scale": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_invalid_type": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "A",
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_invalid_type.A": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.units.tests.test_units.test_long_int": {
  "data": {
   "lineno": 457
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_megabit": {
  "data": {
   "lineno": 603
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_multiple_solidus": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.tests.test_units.pytest",
    "catch_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_no_as": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_no_duplicates_in_names": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_null_unit": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_operations_with_strings": {
  "data": {
   "lineno": 560
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_pickle_unrecognized_unit": {
  "data": {
   "lineno": 537
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_pickling": {
  "data": {
   "lineno": 502
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_radian_base": {
  "data": {
   "lineno": 480
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_register": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "locals"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_repr": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_repr_latex": {
  "data": {
   "lineno": 556
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_represents": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "locals",
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_self_compose": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_sorted_bases": {
  "data": {
   "lineno": 598
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_sqrt_mag": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_steradian": {
  "data": {
   "lineno": 268
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_str": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_suggestions": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_to_cgs": {
  "data": {
   "lineno": 387
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_unicode_policy": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "assert_follows_unicode_guidelines"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_unit_division_by_string": {
  "data": {
   "lineno": 590
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_unit_multiplication_with_string": {
  "data": {
   "lineno": 582
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_unit_noarg": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_unit_summary_prefixes": {
  "data": {
   "lineno": 767
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_units_conversion": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_units_manipulation": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "fractions.Fraction"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_unknown_unit": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "catch_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_unknown_unit3": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.units.tests.test_units.pytest",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_unrecognized_equivalency": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.test_validate_power_detect_fraction": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "fractions.Fraction",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.units.tests.test_units.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.units.tests.test_units.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.utils": {
  "data": {
   "symbols_in_volume": [
    "astropy.units.utils._float_finfo",
    "float",
    "numpy.finfo"
   ]
  },
  "type": "module"
 },
 "astropy.units.utils.Fraction": {
  "data": {
   "shadows": "fractions.Fraction"
  },
  "type": "import"
 },
 "astropy.units.utils._JUST_ABOVE_UNITY": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "astropy.units.utils._JUST_BELOW_UNITY": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "astropy.units.utils._float_finfo": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.units.utils._get_first_sentence": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "astropy.units.utils.re"
   ]
  },
  "type": "function"
 },
 "astropy.units.utils._iter_unit_summary": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "aliases",
    "astropy.units.utils._get_first_sentence",
    "isinstance",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.units.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.units.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.units.utils.finfo": {
  "data": {
   "shadows": "numpy.finfo"
  },
  "type": "import"
 },
 "astropy.units.utils.generate_prefixonly_unit_summary": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "astropy.units.utils._iter_unit_summary",
    "astropy.units.utils.io",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.units.utils.generate_unit_summary": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "astropy.units.utils._iter_unit_summary",
    "astropy.units.utils.io"
   ]
  },
  "type": "function"
 },
 "astropy.units.utils.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "astropy.units.utils.is_effectively_unity": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.utils._JUST_ABOVE_UNITY",
    "astropy.units.utils._JUST_BELOW_UNITY"
   ]
  },
  "type": "function"
 },
 "astropy.units.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.units.utils.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "astropy.units.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.units.utils.quantity_asanyarray": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "Quantity",
    "any",
    "isinstance",
    "numpy.asanyarray",
    "numpy.isscalar",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "astropy.units.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.units.utils.resolve_fractions": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "fractions.Fraction",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.units.utils.sanitize_scale": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "abs",
    "astropy.units.utils.is_effectively_unity",
    "complex",
    "numpy.iscomplex"
   ]
  },
  "type": "function"
 },
 "astropy.units.utils.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.units.utils.validate_power": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "astropy.units.utils._float_finfo",
    "astropy.units.utils.numbers",
    "float",
    "fractions.Fraction",
    "int",
    "isinstance",
    "numpy.isscalar",
    "round"
   ]
  },
  "type": "function"
 },
 "astropy.utils": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.argparse": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.argparse.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "astropy.utils.argparse.directory": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "astropy.utils.argparse.argparse",
    "astropy.utils.argparse.os",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.utils.argparse.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.utils.argparse.readable_directory": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "astropy.utils.argparse.argparse",
    "astropy.utils.argparse.directory",
    "astropy.utils.argparse.os"
   ]
  },
  "type": "function"
 },
 "astropy.utils.argparse.writeable_directory": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "astropy.utils.argparse.argparse",
    "astropy.utils.argparse.directory",
    "astropy.utils.argparse.os"
   ]
  },
  "type": "function"
 },
 "astropy.utils.codegen": {
  "data": {
   "symbols_in_volume": [
    "astropy.utils.codegen.re"
   ]
  },
  "type": "module"
 },
 "astropy.utils.codegen._ARGNAME_RE": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "astropy.utils.codegen.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.utils.codegen.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.codegen.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.codegen.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "astropy.utils.codegen.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "astropy.utils.codegen.keyword": {
  "data": {
   "shadows": "keyword"
  },
  "type": "import"
 },
 "astropy.utils.codegen.make_function_with_signature": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "SyntaxError",
    "astropy.utils.codegen._ARGNAME_RE",
    "astropy.utils.codegen.inspect",
    "astropy.utils.codegen.itertools",
    "astropy.utils.codegen.keyword",
    "astropy.utils.codegen.os",
    "astropy.utils.codegen.textwrap",
    "compile",
    "dict",
    "enumerate",
    "eval",
    "find_current_module",
    "isinstance",
    "iter",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.utils.codegen.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.utils.codegen.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.codegen.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.utils.codegen.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "astropy.utils.codegen.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.collections": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.collections.HomogeneousList": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "class"
 },
 "astropy.utils.collections.HomogeneousList.__iadd__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "list.__iadd__"
   ]
  },
  "type": "function"
 },
 "astropy.utils.collections.HomogeneousList.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "list.__init__"
   ]
  },
  "type": "function"
 },
 "astropy.utils.collections.HomogeneousList.__setitem__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "list.__setitem__"
   ]
  },
  "type": "function"
 },
 "astropy.utils.collections.HomogeneousList._assert": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "TypeError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.utils.collections.HomogeneousList.append": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "list.append"
   ]
  },
  "type": "function"
 },
 "astropy.utils.collections.HomogeneousList.extend": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "list.extend"
   ]
  },
  "type": "function"
 },
 "astropy.utils.collections.HomogeneousList.insert": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "list.insert"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.compat._funcsigs": {
  "data": {
   "symbols_in_volume": [
    "all.__call__",
    "astropy.utils.compat._funcsigs._MethodWrapper",
    "astropy.utils.compat._funcsigs._ParameterKind",
    "astropy.utils.compat._funcsigs._WrapperDescriptor",
    "astropy.utils.compat._funcsigs.types",
    "type",
    "type.__call__"
   ]
  },
  "type": "module"
 },
 "astropy.utils.compat._funcsigs.BoundArguments": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.compat._funcsigs.BoundArguments.__eq__": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "astropy.utils.compat._funcsigs.BoundArguments",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.BoundArguments.__hash__": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.BoundArguments.__init__": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "astropy.utils.compat._funcsigs.signature"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.BoundArguments.__ne__": {
  "data": {
   "lineno": 435
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.BoundArguments.args": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "KeyError",
    "astropy.utils.compat._funcsigs._KEYWORD_ONLY",
    "astropy.utils.compat._funcsigs._VAR_KEYWORD",
    "astropy.utils.compat._funcsigs._VAR_POSITIONAL",
    "property",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.BoundArguments.kwargs": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "KeyError",
    "astropy.utils.compat._funcsigs._KEYWORD_ONLY",
    "astropy.utils.compat._funcsigs._VAR_KEYWORD",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.BoundArguments.signature": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.utils.compat._funcsigs.Parameter": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "astropy.utils.compat._funcsigs._KEYWORD_ONLY",
    "astropy.utils.compat._funcsigs._POSITIONAL_ONLY",
    "astropy.utils.compat._funcsigs._POSITIONAL_OR_KEYWORD",
    "astropy.utils.compat._funcsigs._VAR_KEYWORD",
    "astropy.utils.compat._funcsigs._VAR_POSITIONAL",
    "astropy.utils.compat._funcsigs._empty",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.compat._funcsigs.Parameter.__eq__": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "astropy.utils.compat._funcsigs.Parameter",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.Parameter.__hash__": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.Parameter.__init__": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "ValueError",
    "astropy.utils.compat._funcsigs._KEYWORD_ONLY",
    "astropy.utils.compat._funcsigs._POSITIONAL_ONLY",
    "astropy.utils.compat._funcsigs._POSITIONAL_OR_KEYWORD",
    "astropy.utils.compat._funcsigs._VAR_KEYWORD",
    "astropy.utils.compat._funcsigs._VAR_POSITIONAL",
    "astropy.utils.compat._funcsigs._empty",
    "astropy.utils.compat._funcsigs.re",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.Parameter.__ne__": {
  "data": {
   "lineno": 338
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.Parameter.__repr__": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.Parameter.__str__": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "astropy.utils.compat._funcsigs._POSITIONAL_ONLY",
    "astropy.utils.compat._funcsigs._VAR_KEYWORD",
    "astropy.utils.compat._funcsigs._VAR_POSITIONAL",
    "astropy.utils.compat._funcsigs._empty",
    "astropy.utils.compat._funcsigs.formatannotation",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.Parameter.annotation": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.Parameter.default": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.Parameter.kind": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.Parameter.name": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.Parameter.replace": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "astropy.utils.compat._funcsigs._void",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.Signature": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "astropy.utils.compat._funcsigs.BoundArguments",
    "astropy.utils.compat._funcsigs.Parameter",
    "astropy.utils.compat._funcsigs._empty",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.compat._funcsigs.Signature.__eq__": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "KeyError",
    "astropy.utils.compat._funcsigs.Signature",
    "astropy.utils.compat._funcsigs._KEYWORD_ONLY",
    "dict",
    "enumerate",
    "issubclass",
    "len",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.Signature.__hash__": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.Signature.__init__": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "ValueError",
    "astropy.utils.compat._funcsigs._POSITIONAL_ONLY",
    "astropy.utils.compat._funcsigs._empty",
    "collections.OrderedDict",
    "enumerate",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.Signature.__ne__": {
  "data": {
   "lineno": 640
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.Signature.__str__": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "astropy.utils.compat._funcsigs._KEYWORD_ONLY",
    "astropy.utils.compat._funcsigs._VAR_POSITIONAL",
    "astropy.utils.compat._funcsigs._empty",
    "astropy.utils.compat._funcsigs.formatannotation",
    "enumerate",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.Signature._bind": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "KeyError",
    "StopIteration",
    "TypeError",
    "astropy.utils.compat._funcsigs._KEYWORD_ONLY",
    "astropy.utils.compat._funcsigs._POSITIONAL_ONLY",
    "astropy.utils.compat._funcsigs._VAR_KEYWORD",
    "astropy.utils.compat._funcsigs._VAR_POSITIONAL",
    "astropy.utils.compat._funcsigs._empty",
    "astropy.utils.compat._funcsigs.itertools",
    "collections.OrderedDict",
    "iter",
    "next",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.Signature.bind": {
  "data": {
   "lineno": 771
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.Signature.bind_partial": {
  "data": {
   "lineno": 778
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.Signature.from_function": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "TypeError",
    "astropy.utils.compat._funcsigs.Parameter",
    "astropy.utils.compat._funcsigs._KEYWORD_ONLY",
    "astropy.utils.compat._funcsigs._POSITIONAL_OR_KEYWORD",
    "astropy.utils.compat._funcsigs._VAR_KEYWORD",
    "astropy.utils.compat._funcsigs._VAR_POSITIONAL",
    "astropy.utils.compat._funcsigs._empty",
    "astropy.utils.compat._funcsigs.types",
    "classmethod",
    "cls",
    "enumerate",
    "getattr",
    "isinstance",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.Signature.parameters": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "AttributeError",
    "astropy.utils.compat._funcsigs.types",
    "collections.OrderedDict",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.Signature.replace": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "astropy.utils.compat._funcsigs._void",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.Signature.return_annotation": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs._KEYWORD_ONLY": {
  "data": {
   "lineno": 198
  },
  "type": "constant"
 },
 "astropy.utils.compat._funcsigs._MethodWrapper": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.utils.compat._funcsigs._NonUserDefinedCallables": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.utils.compat._funcsigs._POSITIONAL_ONLY": {
  "data": {
   "lineno": 195
  },
  "type": "constant"
 },
 "astropy.utils.compat._funcsigs._POSITIONAL_OR_KEYWORD": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "astropy.utils.compat._funcsigs._ParameterKind": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "class"
 },
 "astropy.utils.compat._funcsigs._ParameterKind.__new__": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "int.__new__"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs._ParameterKind.__repr__": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs._ParameterKind.__str__": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs._VAR_KEYWORD": {
  "data": {
   "lineno": 199
  },
  "type": "constant"
 },
 "astropy.utils.compat._funcsigs._VAR_POSITIONAL": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "astropy.utils.compat._funcsigs._WrapperDescriptor": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "astropy.utils.compat._funcsigs.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "astropy.utils.compat._funcsigs._empty": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.compat._funcsigs._get_user_defined_method": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "AttributeError",
    "astropy.utils.compat._funcsigs._NonUserDefinedCallables",
    "getattr",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs._void": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.compat._funcsigs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.compat._funcsigs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.compat._funcsigs.formatannotation": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "isinstance",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "astropy.utils.compat._funcsigs.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "astropy.utils.compat._funcsigs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.compat._funcsigs.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.utils.compat._funcsigs.signature": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "ValueError",
    "astropy.utils.compat._funcsigs._NonUserDefinedCallables",
    "astropy.utils.compat._funcsigs._get_user_defined_method",
    "astropy.utils.compat._funcsigs.functools",
    "astropy.utils.compat._funcsigs.types",
    "callable",
    "collections.OrderedDict",
    "isinstance",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat._funcsigs.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "astropy.utils.compat.funcsigs": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.utils.compat.funcsigs.BoundArguments": {
  "data": {
   "shadows": "inspect.BoundArguments"
  },
  "type": "import"
 },
 "astropy.utils.compat.funcsigs.Parameter": {
  "data": {
   "shadows": "inspect.Parameter"
  },
  "type": "import"
 },
 "astropy.utils.compat.funcsigs.Signature": {
  "data": {
   "shadows": "inspect.Signature"
  },
  "type": "import"
 },
 "astropy.utils.compat.funcsigs.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "astropy.utils.compat.funcsigs.signature": {
  "data": {
   "shadows": "inspect.signature"
  },
  "type": "import"
 },
 "astropy.utils.compat.futures": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.utils.compat.futures.__author__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "astropy.utils.compat.futures._base": {
  "data": {
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base.CANCELLED",
    "astropy.utils.compat.futures._base.CANCELLED_AND_NOTIFIED",
    "astropy.utils.compat.futures._base.FINISHED",
    "astropy.utils.compat.futures._base.LOGGER",
    "astropy.utils.compat.futures._base.PENDING",
    "astropy.utils.compat.futures._base.RUNNING",
    "astropy.utils.compat.futures._base.STDERR_HANDLER",
    "astropy.utils.compat.futures._base.logging",
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "astropy.utils.compat.futures._base.ALL_COMPLETED": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "astropy.utils.compat.futures._base.CANCELLED": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "astropy.utils.compat.futures._base.CANCELLED_AND_NOTIFIED": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "astropy.utils.compat.futures._base.CancelledError": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base.Error"
   ]
  },
  "type": "class"
 },
 "astropy.utils.compat.futures._base.DoneAndNotDoneFutures": {
  "data": {
   "lineno": 255
  },
  "type": "constant"
 },
 "astropy.utils.compat.futures._base.Error": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "astropy.utils.compat.futures._base.Executor": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.compat.futures._base.Executor.__enter__": {
  "data": {
   "lineno": 634
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base.Executor.__exit__": {
  "data": {
   "lineno": 637
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base.Executor.map": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base.time",
    "fn",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base.Executor.shutdown": {
  "data": {
   "lineno": 619
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base.Executor.submit": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base.FINISHED": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "astropy.utils.compat.futures._base.FIRST_COMPLETED": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "astropy.utils.compat.futures._base.FIRST_EXCEPTION": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "astropy.utils.compat.futures._base.Future": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.compat.futures._base.Future.__get_result": {
  "data": {
   "lineno": 384
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base.Future.__init__": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base.PENDING",
    "astropy.utils.compat.futures._base.threading"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base.Future.__repr__": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base.FINISHED",
    "astropy.utils.compat.futures._base._STATE_TO_DESCRIPTION_MAP",
    "hex",
    "id"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base.Future._invoke_callbacks": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "Exception",
    "astropy.utils.compat.futures._base.LOGGER",
    "callback"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base.Future.add_done_callback": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base.CANCELLED",
    "astropy.utils.compat.futures._base.CANCELLED_AND_NOTIFIED",
    "astropy.utils.compat.futures._base.FINISHED",
    "fn"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base.Future.cancel": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base.CANCELLED",
    "astropy.utils.compat.futures._base.CANCELLED_AND_NOTIFIED",
    "astropy.utils.compat.futures._base.FINISHED",
    "astropy.utils.compat.futures._base.RUNNING"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base.Future.cancelled": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base.CANCELLED",
    "astropy.utils.compat.futures._base.CANCELLED_AND_NOTIFIED"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base.Future.done": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base.CANCELLED",
    "astropy.utils.compat.futures._base.CANCELLED_AND_NOTIFIED",
    "astropy.utils.compat.futures._base.FINISHED"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base.Future.exception": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base.CANCELLED",
    "astropy.utils.compat.futures._base.CANCELLED_AND_NOTIFIED",
    "astropy.utils.compat.futures._base.CancelledError",
    "astropy.utils.compat.futures._base.FINISHED",
    "astropy.utils.compat.futures._base.TimeoutError"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base.Future.result": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base.CANCELLED",
    "astropy.utils.compat.futures._base.CANCELLED_AND_NOTIFIED",
    "astropy.utils.compat.futures._base.CancelledError",
    "astropy.utils.compat.futures._base.FINISHED",
    "astropy.utils.compat.futures._base.TimeoutError"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base.Future.running": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base.RUNNING"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base.Future.set_exception": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base.FINISHED"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base.Future.set_result": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base.FINISHED"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base.Future.set_running_or_notify_cancel": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "RuntimeError",
    "astropy.utils.compat.futures._base.CANCELLED",
    "astropy.utils.compat.futures._base.CANCELLED_AND_NOTIFIED",
    "astropy.utils.compat.futures._base.LOGGER",
    "astropy.utils.compat.futures._base.PENDING",
    "astropy.utils.compat.futures._base.RUNNING",
    "id"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base.LOGGER": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "astropy.utils.compat.futures._base.PENDING": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.utils.compat.futures._base.RUNNING": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "astropy.utils.compat.futures._base.STDERR_HANDLER": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "astropy.utils.compat.futures._base.TimeoutError": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base.Error"
   ]
  },
  "type": "class"
 },
 "astropy.utils.compat.futures._base._AS_COMPLETED": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "astropy.utils.compat.futures._base._AcquireFutures": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.compat.futures._base._AcquireFutures.__enter__": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base._AcquireFutures.__exit__": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base._AcquireFutures.__init__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "id",
    "sorted"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base._AllCompletedWaiter": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base._Waiter"
   ]
  },
  "type": "class"
 },
 "astropy.utils.compat.futures._base._AllCompletedWaiter.__init__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base._AllCompletedWaiter",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base._AllCompletedWaiter._decrement_pending_calls": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base._AllCompletedWaiter.add_cancelled": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base._AllCompletedWaiter",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base._AllCompletedWaiter.add_exception": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base._AllCompletedWaiter",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base._AllCompletedWaiter.add_result": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base._AllCompletedWaiter",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base._AsCompletedWaiter": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base._Waiter"
   ]
  },
  "type": "class"
 },
 "astropy.utils.compat.futures._base._AsCompletedWaiter.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base._AsCompletedWaiter",
    "astropy.utils.compat.futures._base.threading",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base._AsCompletedWaiter.add_cancelled": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base._AsCompletedWaiter",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base._AsCompletedWaiter.add_exception": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base._AsCompletedWaiter",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base._AsCompletedWaiter.add_result": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base._AsCompletedWaiter",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base._FUTURE_STATES": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "astropy.utils.compat.futures._base._FirstCompletedWaiter": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base._Waiter"
   ]
  },
  "type": "class"
 },
 "astropy.utils.compat.futures._base._FirstCompletedWaiter.add_cancelled": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base._FirstCompletedWaiter",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base._FirstCompletedWaiter.add_exception": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base._FirstCompletedWaiter",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base._FirstCompletedWaiter.add_result": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base._FirstCompletedWaiter",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base._STATE_TO_DESCRIPTION_MAP": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "astropy.utils.compat.futures._base._Waiter": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.compat.futures._base._Waiter.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base.threading"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base._Waiter.add_cancelled": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base._Waiter.add_exception": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base._Waiter.add_result": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base.__author__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "astropy.utils.compat.futures._base._create_and_install_waiters": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "ValueError",
    "astropy.utils.compat.futures._base.ALL_COMPLETED",
    "astropy.utils.compat.futures._base.CANCELLED_AND_NOTIFIED",
    "astropy.utils.compat.futures._base.FINISHED",
    "astropy.utils.compat.futures._base.FIRST_COMPLETED",
    "astropy.utils.compat.futures._base.FIRST_EXCEPTION",
    "astropy.utils.compat.futures._base._AS_COMPLETED",
    "astropy.utils.compat.futures._base._AllCompletedWaiter",
    "astropy.utils.compat.futures._base._AsCompletedWaiter",
    "astropy.utils.compat.futures._base._FirstCompletedWaiter",
    "sum"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base.as_completed": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "astropy.utils.compat.futures._base.CANCELLED_AND_NOTIFIED",
    "astropy.utils.compat.futures._base.FINISHED",
    "astropy.utils.compat.futures._base.TimeoutError",
    "astropy.utils.compat.futures._base._AS_COMPLETED",
    "astropy.utils.compat.futures._base._AcquireFutures",
    "astropy.utils.compat.futures._base._create_and_install_waiters",
    "astropy.utils.compat.futures._base.time",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures._base.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "astropy.utils.compat.futures._base.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "astropy.utils.compat.futures._base.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "astropy.utils.compat.futures._base.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "astropy.utils.compat.futures._base.wait": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "any",
    "astropy.utils.compat.futures._base.ALL_COMPLETED",
    "astropy.utils.compat.futures._base.CANCELLED_AND_NOTIFIED",
    "astropy.utils.compat.futures._base.DoneAndNotDoneFutures",
    "astropy.utils.compat.futures._base.FINISHED",
    "astropy.utils.compat.futures._base.FIRST_COMPLETED",
    "astropy.utils.compat.futures._base.FIRST_EXCEPTION",
    "astropy.utils.compat.futures._base._AcquireFutures",
    "astropy.utils.compat.futures._base._create_and_install_waiters",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures.process": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.utils.compat.futures.process._python_exit",
    "astropy.utils.compat.futures.process.atexit",
    "set"
   ]
  },
  "type": "module"
 },
 "astropy.utils.compat.futures.process.EXTRA_QUEUED_CALLS": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "astropy.utils.compat.futures.process.ProcessPoolExecutor": {
  "data": {
   "lineno": 296
  },
  "type": "class"
 },
 "astropy.utils.compat.futures.process.ProcessPoolExecutor.__init__": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "Queue.Queue",
    "astropy.utils.compat.futures.process.EXTRA_QUEUED_CALLS",
    "astropy.utils.compat.futures.process._remove_dead_thread_references",
    "astropy.utils.compat.futures.process.multiprocessing",
    "astropy.utils.compat.futures.process.threading",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures.process.ProcessPoolExecutor._adjust_process_count": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "astropy.utils.compat.futures.process._process_worker",
    "astropy.utils.compat.futures.process.multiprocessing",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures.process.ProcessPoolExecutor._start_queue_management_thread": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "astropy.utils.compat.futures.process._queue_manangement_worker",
    "astropy.utils.compat.futures.process._thread_references",
    "astropy.utils.compat.futures.process.threading",
    "astropy.utils.compat.futures.process.weakref"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures.process.ProcessPoolExecutor.shutdown": {
  "data": {
   "lineno": 373
  },
  "type": "function"
 },
 "astropy.utils.compat.futures.process.ProcessPoolExecutor.submit": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "RuntimeError",
    "astropy.utils.compat.futures.process._WorkItem"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures.process._CallItem": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.compat.futures.process._CallItem.__init__": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "astropy.utils.compat.futures.process._ResultItem": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.compat.futures.process._ResultItem.__init__": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "astropy.utils.compat.futures.process._WorkItem": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.compat.futures.process._WorkItem.__init__": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "astropy.utils.compat.futures.process.__author__": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "astropy.utils.compat.futures.process._add_call_item_to_queue": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "Queue.Empty",
    "astropy.utils.compat.futures.process._CallItem"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures.process._process_worker": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "BaseException",
    "Queue.Empty",
    "astropy.utils.compat.futures.process._ResultItem",
    "astropy.utils.compat.futures.process.sys"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures.process._python_exit": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "astropy.utils.compat.futures.process._shutdown",
    "astropy.utils.compat.futures.process._thread_references",
    "thread_reference"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures.process._queue_manangement_worker": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "Queue.Empty",
    "astropy.utils.compat.futures.process._add_call_item_to_queue",
    "astropy.utils.compat.futures.process._shutdown",
    "executor_reference"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures.process._remove_dead_thread_references": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "astropy.utils.compat.futures.process._thread_references",
    "set",
    "thread_reference"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures.process._shutdown": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "astropy.utils.compat.futures.process._thread_references": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "astropy.utils.compat.futures.process.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "astropy.utils.compat.futures.process.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "astropy.utils.compat.futures.process.queue": {
  "data": {
   "shadows": "Queue"
  },
  "type": "import"
 },
 "astropy.utils.compat.futures.process.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.utils.compat.futures.process.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "astropy.utils.compat.futures.process.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "astropy.utils.compat.futures.thread": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.utils.compat.futures.thread._python_exit",
    "astropy.utils.compat.futures.thread.atexit",
    "set"
   ]
  },
  "type": "module"
 },
 "astropy.utils.compat.futures.thread.ThreadPoolExecutor": {
  "data": {
   "lineno": 104
  },
  "type": "class"
 },
 "astropy.utils.compat.futures.thread.ThreadPoolExecutor.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "Queue.Queue",
    "astropy.utils.compat.futures.thread._remove_dead_thread_references",
    "astropy.utils.compat.futures.thread.threading",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures.thread.ThreadPoolExecutor._adjust_thread_count": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "astropy.utils.compat.futures.thread._thread_references",
    "astropy.utils.compat.futures.thread._worker",
    "astropy.utils.compat.futures.thread.threading",
    "astropy.utils.compat.futures.thread.weakref",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures.thread.ThreadPoolExecutor.shutdown": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "astropy.utils.compat.futures.thread.ThreadPoolExecutor.submit": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "RuntimeError",
    "astropy.utils.compat.futures.thread._WorkItem"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures.thread._WorkItem": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.compat.futures.thread._WorkItem.__init__": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "astropy.utils.compat.futures.thread._WorkItem.run": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "BaseException",
    "astropy.utils.compat.futures.thread.sys"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures.thread.__author__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.utils.compat.futures.thread._python_exit": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "astropy.utils.compat.futures.thread._shutdown",
    "astropy.utils.compat.futures.thread._thread_references",
    "thread_reference"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures.thread._remove_dead_thread_references": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "astropy.utils.compat.futures.thread._thread_references",
    "set",
    "thread_reference"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures.thread._shutdown": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "astropy.utils.compat.futures.thread._thread_references": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "astropy.utils.compat.futures.thread._worker": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "BaseException",
    "Queue.Empty",
    "astropy.utils.compat.futures.thread._shutdown",
    "executor_reference"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.futures.thread.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "astropy.utils.compat.futures.thread.queue": {
  "data": {
   "shadows": "Queue"
  },
  "type": "import"
 },
 "astropy.utils.compat.futures.thread.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.utils.compat.futures.thread.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "astropy.utils.compat.futures.thread.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "astropy.utils.compat.misc": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.utils.compat.misc.sys",
    "importlib.invalidate_caches"
   ]
  },
  "type": "module"
 },
 "astropy.utils.compat.misc.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.utils.compat.misc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.compat.misc.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "astropy.utils.compat.misc.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.compat.misc.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "astropy.utils.compat.misc.invalidate_caches": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "astropy.utils.compat.misc.namedtuple_asdict": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "astropy.utils.compat.misc.override__dir__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "astropy.utils.compat.misc.sys"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.misc.override__dir__.override__dir__wrapper": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "astropy.utils.compat.misc.functools",
    "f",
    "object.__dir__",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.misc.possible_filename": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "astropy.utils.compat.misc.sys",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.misc.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.compat.misc.suppress": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.misc.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.utils.compat.misc.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpy": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.compat.numpy.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpy.core": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.compat.numpy.core.multiarray": {
  "data": {
   "symbols_in_volume": [
    "astropy.utils.compat.numpy.core.multiarray.GE1P10"
   ]
  },
  "type": "module"
 },
 "astropy.utils.compat.numpy.core.multiarray.GE1P10": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "hasattr",
    "numpy"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.numpy.core.multiarray.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "astropy.utils.compat.numpy.core.multiarray.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpy.core.multiarray.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpy.core.multiarray.matmul": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asanyarray",
    "numpy.einsum"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.numpy.core.multiarray.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpy.core.multiarray.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpy.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpy.lib": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.compat.numpy.lib.stride_tricks": {
  "data": {
   "symbols_in_volume": [
    "astropy.utils.compat.numpy.lib.stride_tricks.GE1P10"
   ]
  },
  "type": "module"
 },
 "astropy.utils.compat.numpy.lib.stride_tricks.DummyArray": {
  "data": {
   "shadows": "numpy.lib.stride_tricks.DummyArray"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpy.lib.stride_tricks.GE1P10": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "hasattr",
    "numpy"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.numpy.lib.stride_tricks.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "astropy.utils.compat.numpy.lib.stride_tricks.__doctest_skip__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.utils.compat.numpy.lib.stride_tricks._broadcast_shape": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.asarray",
    "numpy.broadcast",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.numpy.lib.stride_tricks._broadcast_to": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "astropy.utils.compat.numpy.lib.stride_tricks._maybe_view_as_subclass",
    "numpy.array",
    "numpy.iterable",
    "numpy.nditer",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.numpy.lib.stride_tricks._maybe_view_as_subclass": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.numpy.lib.stride_tricks.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpy.lib.stride_tricks.as_strided": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "astropy.utils.compat.numpy.lib.stride_tricks._maybe_view_as_subclass",
    "dict",
    "numpy.array",
    "numpy.asarray",
    "numpy.lib.stride_tricks.DummyArray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.numpy.lib.stride_tricks.broadcast_arrays": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "astropy.utils.compat.numpy.lib.stride_tricks._broadcast_shape",
    "astropy.utils.compat.numpy.lib.stride_tricks._broadcast_to",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.numpy.lib.stride_tricks.broadcast_to": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "astropy.utils.compat.numpy.lib.stride_tricks._broadcast_to"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.numpy.lib.stride_tricks.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpy.lib.stride_tricks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpy.lib.stride_tricks.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpy.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.compat.numpy.tests.test_broadcast_arrays": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.compat.numpy.tests.test_broadcast_arrays.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpy.tests.test_broadcast_arrays.anp": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpy.tests.test_broadcast_arrays.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpy.tests.test_broadcast_arrays.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpy.tests.test_broadcast_arrays.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpy.tests.test_broadcast_arrays.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpy.tests.test_broadcast_arrays.test_broadcast_quantity": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.Quantity",
    "astropy.units.deg",
    "astropy.units.m",
    "astropy.utils.compat.numpy.tests.test_broadcast_arrays.pytest",
    "broadcast_arrays",
    "numpy.ndarray",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.numpy.tests.test_broadcast_arrays.test_broadcast_to": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "astropy.units.m",
    "broadcast_to",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.numpy.tests.test_broadcast_arrays.test_import": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.broadcast_arrays",
    "numpy.broadcast_to"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.numpy.tests.test_broadcast_arrays.test_test_function": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "GE1P10",
    "hasattr",
    "numpy",
    "numpy.broadcast_arrays",
    "numpy.broadcast_to"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.numpy.tests.test_broadcast_arrays.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpy.tests.test_broadcast_arrays.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpy.tests.test_matmul": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.compat.numpy.tests.test_matmul.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpy.tests.test_matmul.anp": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpy.tests.test_matmul.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpy.tests.test_matmul.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpy.tests.test_matmul.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpy.tests.test_matmul.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpy.tests.test_matmul.test_import": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.matmul"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.numpy.tests.test_matmul.test_matmul": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "astropy.utils.compat.numpy.tests.test_matmul.pytest",
    "matmul",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.identity",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.numpy.tests.test_matmul.test_test_function": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "GE1P10",
    "hasattr",
    "numpy",
    "numpy.matmul"
   ]
  },
  "type": "function"
 },
 "astropy.utils.compat.numpy.tests.test_matmul.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpy.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpycompat": {
  "data": {
   "symbols_in_volume": [
    "minversion"
   ]
  },
  "type": "module"
 },
 "astropy.utils.compat.numpycompat.NUMPY_LT_1_10": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "astropy.utils.compat.numpycompat.NUMPY_LT_1_10_4": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.utils.compat.numpycompat.NUMPY_LT_1_11": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "astropy.utils.compat.numpycompat.NUMPY_LT_1_12": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.utils.compat.numpycompat.NUMPY_LT_1_13": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "astropy.utils.compat.numpycompat.NUMPY_LT_1_9_1": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "astropy.utils.compat.numpycompat.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "astropy.utils.compat.numpycompat.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpycompat.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpycompat.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.compat.numpycompat.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.console": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.utils.console.Carbon": {
  "data": {
   "shadows": "Carbon"
  },
  "type": "import"
 },
 "astropy.utils.console.Getch": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.console.Getch.__call__": {
  "data": {
   "lineno": 1050
  },
  "type": "function"
 },
 "astropy.utils.console.Getch.__init__": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "astropy.utils.console._GetchMacCarbon",
    "astropy.utils.console._GetchUnix",
    "astropy.utils.console._GetchWindows"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console.OutStream": {
  "data": {
   "shadows": "IPython.kernel.zmq.iostream.OutStream"
  },
  "type": "import"
 },
 "astropy.utils.console.ProgressBar": {
  "data": {
   "lineno": 501
  },
  "type": "class"
 },
 "astropy.utils.console.ProgressBar.__enter__": {
  "data": {
   "lineno": 576
  },
  "type": "function"
 },
 "astropy.utils.console.ProgressBar.__exit__": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "astropy.utils.console.signal"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console.ProgressBar.__init__": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "TypeError",
    "astropy.utils.console._CAN_RESIZE_TERMINAL",
    "astropy.utils.console._get_stdout",
    "astropy.utils.console.human_file_size",
    "astropy.utils.console.isatty",
    "astropy.utils.console.signal",
    "astropy.utils.console.time",
    "int",
    "isiterable",
    "iter",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console.ProgressBar.__iter__": {
  "data": {
   "lineno": 588
  },
  "type": "function"
 },
 "astropy.utils.console.ProgressBar.__next__": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "StopIteration",
    "next"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console.ProgressBar._handle_resize": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "astropy.utils.console.terminal_size"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console.ProgressBar._silent_update": {
  "data": {
   "lineno": 690
  },
  "type": "function"
 },
 "astropy.utils.console.ProgressBar._update_console": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "astropy.utils.console.color_print",
    "astropy.utils.console.human_file_size",
    "astropy.utils.console.human_time",
    "astropy.utils.console.time",
    "float",
    "int",
    "write"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console.ProgressBar._update_ipython_widget": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "IPython.display.display",
    "IPython.html.widgets.FloatProgressWidget",
    "IPython.version_info",
    "astropy.utils.console._IPython",
    "hasattr",
    "ipywidgets.widgets.FloatProgress"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console.ProgressBar.map": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "astropy.utils.console._get_stdout",
    "astropy.utils.console.multiprocessing",
    "classmethod",
    "cls",
    "enumerate",
    "float",
    "function",
    "int",
    "len",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console.ProgressBar.update": {
  "data": {
   "lineno": 601
  },
  "type": "function"
 },
 "astropy.utils.console.ProgressBarOrSpinner": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.console.ProgressBarOrSpinner.__enter__": {
  "data": {
   "lineno": 931
  },
  "type": "function"
 },
 "astropy.utils.console.ProgressBarOrSpinner.__exit__": {
  "data": {
   "lineno": 935
  },
  "type": "function"
 },
 "astropy.utils.console.ProgressBarOrSpinner.__init__": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "astropy.utils.console.ProgressBar",
    "astropy.utils.console.Spinner",
    "astropy.utils.console._get_stdout",
    "astropy.utils.console.color_print",
    "astropy.utils.console.isatty"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console.ProgressBarOrSpinner.update": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "next"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console.PyreadlineConsole": {
  "data": {
   "shadows": "pyreadyline.console.Console"
  },
  "type": "import"
 },
 "astropy.utils.console.Spinner": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.console.Spinner.__enter__": {
  "data": {
   "lineno": 846
  },
  "type": "function"
 },
 "astropy.utils.console.Spinner.__exit__": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "astropy.utils.console.color_print",
    "flush",
    "write"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console.Spinner.__init__": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "astropy.utils.console._get_stdout",
    "astropy.utils.console.isatty"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console.Spinner._iterator": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "UnicodeError",
    "astropy.utils.console._write_with_fallback",
    "astropy.utils.console.color_print",
    "flush",
    "len",
    "range",
    "write"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console.Spinner._silent_iterator": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "astropy.utils.console.color_print"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console._CAN_RESIZE_TERMINAL": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "astropy.utils.console._DEFAULT_ENCODING": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "astropy.utils.console._GetchMacCarbon": {
  "data": {
   "lineno": 1086,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.console._GetchMacCarbon.__call__": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "astropy.utils.console.Carbon",
    "chr"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console._GetchMacCarbon.__init__": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "astropy.utils.console.Carbon"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console._GetchUnix": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.console._GetchUnix.__call__": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "astropy.utils.console.sys",
    "astropy.utils.console.termios",
    "astropy.utils.console.tty"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console._GetchUnix.__init__": {
  "data": {
   "lineno": 1055
  },
  "type": "function"
 },
 "astropy.utils.console._GetchWindows": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.console._GetchWindows.__call__": {
  "data": {
   "lineno": 1081,
   "symbols_in_volume": [
    "astropy.utils.console.msvcrt"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console._GetchWindows.__init__": {
  "data": {
   "lineno": 1078
  },
  "type": "function"
 },
 "astropy.utils.console._IPython": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.console._IPython.IOStream": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "astropy.utils.console._IPython.OutStream": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "IPython.kernel.zmq.iostream.OutStream",
    "IPython.version_info",
    "ImportError",
    "NameError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console._IPython.get_ipython": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "IPython.get_ipython",
    "ImportError"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console._IPython.get_stream": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "classmethod",
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console._IPython.ipyio": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "IPython.utils.io",
    "ImportError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console.__all__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "astropy.utils.console._color_text": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "astropy.utils.console._IPython",
    "astropy.utils.console.sys"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console._decode_preferred_encoding": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "LookupError",
    "UnicodeDecodeError",
    "astropy.utils.console._DEFAULT_ENCODING",
    "astropy.utils.console.locale"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console._get_stdout": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "astropy.utils.console._IPython",
    "astropy.utils.console.isatty",
    "astropy.utils.console.sys",
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console._write_with_fallback": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "LookupError",
    "UnicodeEncodeError",
    "Writer",
    "astropy.utils.console._DEFAULT_ENCODING",
    "astropy.utils.console._IPython",
    "astropy.utils.console.codecs",
    "astropy.utils.console.locale",
    "isinstance",
    "write"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.console.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "astropy.utils.console.color_print": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "astropy.utils.console._color_text",
    "astropy.utils.console._decode_preferred_encoding",
    "astropy.utils.console._get_stdout",
    "astropy.utils.console._write_with_fallback",
    "astropy.utils.console.isatty",
    "bytes",
    "isinstance",
    "len",
    "range",
    "write"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console.display": {
  "data": {
   "shadows": "IPython.display.display"
  },
  "type": "import"
 },
 "astropy.utils.console.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.console.fcntl": {
  "data": {
   "shadows": "fcntl"
  },
  "type": "import"
 },
 "astropy.utils.console.get_ipython": {
  "data": {
   "shadows": "IPython.get_ipython"
  },
  "type": "import"
 },
 "astropy.utils.console.human_file_size": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "astropy.utils.console.math",
    "hasattr",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console.human_time": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "int",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console.io": {
  "data": {
   "shadows": "IPython.utils.io"
  },
  "type": "import"
 },
 "astropy.utils.console.isatty": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ImportError",
    "astropy.utils.console._IPython",
    "astropy.utils.console.multiprocessing",
    "astropy.utils.console.threading",
    "getattr",
    "hasattr",
    "isinstance",
    "pyreadyline.console.Console"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console.locale": {
  "data": {
   "shadows": "locale"
  },
  "type": "import"
 },
 "astropy.utils.console.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "astropy.utils.console.msvcrt": {
  "data": {
   "shadows": "msvcrt"
  },
  "type": "import"
 },
 "astropy.utils.console.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "astropy.utils.console.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.utils.console.print_code_line": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "ValueError",
    "astropy.utils.console._get_stdout",
    "astropy.utils.console.color_print",
    "len",
    "min",
    "write"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.console.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.utils.console.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "astropy.utils.console.strip_ansi_codes": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "astropy.utils.console.re"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "astropy.utils.console.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.utils.console.terminal_size": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "astropy.utils.console._get_stdout",
    "astropy.utils.console.fcntl",
    "astropy.utils.console.os",
    "astropy.utils.console.struct",
    "astropy.utils.console.termios",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.utils.console.termios": {
  "data": {
   "shadows": "termios"
  },
  "type": "import"
 },
 "astropy.utils.console.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "astropy.utils.console.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "astropy.utils.console.tty": {
  "data": {
   "shadows": "tty"
  },
  "type": "import"
 },
 "astropy.utils.console.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.utils.console.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.console.version_info": {
  "data": {
   "shadows": "IPython.version_info"
  },
  "type": "import"
 },
 "astropy.utils.console.widgets": {
  "data": {
   "shadows": "ipywidgets.widgets"
  },
  "type": "import"
 },
 "astropy.utils.data_info": {
  "data": {
   "symbols_in_volume": [
    "RuntimeWarning",
    "dict"
   ]
  },
  "type": "module"
 },
 "astropy.utils.data_info.BaseColumnInfo": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "astropy.utils.data_info.DataInfo",
    "set"
   ]
  },
  "type": "class"
 },
 "astropy.utils.data_info.BaseColumnInfo.adjust_indices": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.atleast_1d",
    "numpy.ndarray",
    "numpy.where",
    "range",
    "slice",
    "value",
    "value.size",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.utils.data_info.BaseColumnInfo.iter_str_vals": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "_pformat_col_iter"
   ]
  },
  "type": "function"
 },
 "astropy.utils.data_info.BaseColumnInfo.merge_cols_attributes": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "TableMergeError",
    "getattrs",
    "len",
    "set",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.utils.data_info.BaseColumnInfo.merge_cols_attributes.getattrs": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.utils.data_info.BaseColumnInfo.merge_cols_attributes.warn_str_func": {
  "data": {
   "lineno": 576
  },
  "type": "function"
 },
 "astropy.utils.data_info.BaseColumnInfo.slice_indices": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "copy.deepcopy",
    "getattr",
    "isinstance",
    "len",
    "numpy.ndarray",
    "numpy.where",
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.utils.data_info.DataInfo": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "astropy.utils.data_info._get_data_attribute",
    "astropy.utils.data_info.data_info_factory",
    "functools.partial",
    "getattr",
    "numpy",
    "object",
    "set",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "astropy.utils.data_info.DataInfo.__call__": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "ValueError",
    "astropy.utils.data_info.IGNORE_WARNINGS",
    "astropy.utils.data_info.os",
    "astropy.utils.data_info.sys",
    "astropy.utils.data_info.warnings",
    "collections.OrderedDict",
    "getattr",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "numpy.count_nonzero",
    "numpy.isinf",
    "numpy.isnan",
    "option",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.utils.data_info.DataInfo.__get__": {
  "data": {
   "lineno": 223
  },
  "type": "function"
 },
 "astropy.utils.data_info.DataInfo.__getattr__": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "KeyError",
    "astropy.utils.data_info.DataInfo",
    "callable",
    "getattr",
    "numpy.dtype",
    "super",
    "value"
   ]
  },
  "type": "function"
 },
 "astropy.utils.data_info.DataInfo.__getstate__": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "astropy.utils.data_info.DataInfo.__init__": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "astropy.utils.data_info.DataInfo.__repr__": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "astropy.utils.data_info.DataInfo",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.utils.data_info.DataInfo.__set__": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.utils.data_info.DataInfo",
    "copy.deepcopy",
    "getattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.utils.data_info.DataInfo.__setattr__": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "AttributeError",
    "astropy.utils.data_info.DataInfo",
    "astropy.utils.data_info.weakref",
    "getattr",
    "isinstance",
    "property",
    "setattr",
    "super",
    "value"
   ]
  },
  "type": "function"
 },
 "astropy.utils.data_info.DataInfo.__setstate__": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "astropy.utils.data_info.DataInfo._construct_from_dict": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "map"
   ]
  },
  "type": "function"
 },
 "astropy.utils.data_info.DataInfo._represent_as_dict": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "astropy.utils.data_info._get_obj_attrs_map"
   ]
  },
  "type": "function"
 },
 "astropy.utils.data_info.IGNORE_WARNINGS": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "astropy.utils.data_info.MixinInfo": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "astropy.utils.data_info.BaseColumnInfo"
   ]
  },
  "type": "class"
 },
 "astropy.utils.data_info.MixinInfo.__setattr__": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "astropy.utils.data_info.MixinInfo",
    "fix_column_name",
    "super",
    "value"
   ]
  },
  "type": "function"
 },
 "astropy.utils.data_info.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.utils.data_info.ParentDtypeInfo": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "astropy.utils.data_info.MixinInfo",
    "set"
   ]
  },
  "type": "class"
 },
 "astropy.utils.data_info.STRING_TYPE_NAMES": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "astropy.utils.data_info.StringIO": {
  "data": {
   "shadows": "cStringIO"
  },
  "type": "import"
 },
 "astropy.utils.data_info.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "astropy.utils.data_info._get_data_attribute": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "astropy.utils.data_info.dtype_info_name",
    "getattr",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.utils.data_info._get_obj_attrs_map": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.utils.data_info.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.data_info.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "astropy.utils.data_info.data_info_factory": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "astropy.utils.data_info.data_info_factory.func": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "Exception",
    "collections.OrderedDict",
    "func",
    "getattr",
    "isinstance",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.utils.data_info.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "astropy.utils.data_info.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.data_info.dtype_info_name": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "astropy.utils.data_info.STRING_TYPE_NAMES",
    "astropy.utils.data_info.re",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "astropy.utils.data_info.formatter": {
  "data": {
   "shadows": "FORMATTER"
  },
  "type": "import"
 },
 "astropy.utils.data_info.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.utils.data_info.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.utils.data_info.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "astropy.utils.data_info.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.data_info.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.utils.data_info.serialize_context_as": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "astropy.utils.data_info.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.utils.data_info.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.utils.data_info.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "astropy.utils.decorators": {
  "data": {
   "symbols_in_volume": [
    "astropy.utils.decorators.functools",
    "astropy.utils.decorators.wraps",
    "isinstance"
   ]
  },
  "type": "module"
 },
 "astropy.utils.decorators.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.utils.decorators._get_function_args": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "astropy.utils.decorators._get_function_args_internal",
    "func",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators._get_function_args_internal": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "astropy.utils.decorators.inspect",
    "func",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.classproperty": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "class"
 },
 "astropy.utils.decorators.classproperty.__get__": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "astropy.utils.decorators.classproperty",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.classproperty.__init__": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "astropy.utils.decorators.classproperty",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.classproperty.__new__": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "astropy.utils.decorators.classproperty",
    "cls",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.classproperty.__new__.wrapper": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "cls",
    "func"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.classproperty._wrap_fget": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "classmethod",
    "isinstance",
    "orig_fget",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.classproperty._wrap_fget.fget": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "astropy.utils.decorators.functools",
    "orig_fget"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.classproperty.deleter": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.classproperty.getter": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "astropy.utils.decorators.classproperty",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.classproperty.setter": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.deprecated": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "astropy.utils.decorators.types",
    "classmethod",
    "deprecate",
    "staticmethod",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.deprecated.deprecate": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "astropy.utils.decorators.inspect",
    "deprecate_class",
    "deprecate_function",
    "get_function",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.deprecated.deprecate_class": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "deprecate_doc",
    "deprecate_function",
    "get_function",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.deprecated.deprecate_doc": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "astropy.utils.decorators.textwrap"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.deprecated.deprecate_function": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "astropy.utils.decorators.functools",
    "deprecate_doc",
    "func",
    "func_wrapper",
    "get_function",
    "isinstance",
    "str.__dict__",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.deprecated.deprecate_function.deprecated_func": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "astropy.utils.decorators.warnings",
    "func"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.deprecated.get_function": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.deprecated_attribute": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "property",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.deprecated_attribute.delete": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "astropy.utils.decorators.deprecated",
    "delattr"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.deprecated_attribute.get": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "astropy.utils.decorators.deprecated",
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.deprecated_attribute.set": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "astropy.utils.decorators.deprecated",
    "setattr"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.deprecated_renamed_argument": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.deprecated_renamed_argument.decorator": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "range",
    "signature"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.deprecated_renamed_argument.decorator.wrapper": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "TypeError",
    "astropy.utils.decorators.functools",
    "astropy.utils.decorators.warnings",
    "function",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.format_doc": {
  "data": {
   "lineno": 946
  },
  "type": "function"
 },
 "astropy.utils.decorators.format_doc.set_docstring": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "astropy.utils.decorators.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "astropy.utils.decorators.lazyproperty": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "class"
 },
 "astropy.utils.decorators.lazyproperty.__delete__": {
  "data": {
   "lineno": 755
  },
  "type": "function"
 },
 "astropy.utils.decorators.lazyproperty.__get__": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.lazyproperty.__init__": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "astropy.utils.decorators.lazyproperty",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.lazyproperty.__set__": {
  "data": {
   "lineno": 744
  },
  "type": "function"
 },
 "astropy.utils.decorators.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.decorators.sharedmethod": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "class"
 },
 "astropy.utils.decorators.sharedmethod.__get__": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "astropy.utils.decorators.types",
    "callable",
    "func",
    "getattr",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.sharedmethod._make_method": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "astropy.utils.decorators.types",
    "func",
    "staticmethod",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "astropy.utils.decorators.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "astropy.utils.decorators.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.utils.decorators.wraps": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "astropy.utils.decorators._get_function_args",
    "astropy.utils.decorators.functools"
   ]
  },
  "type": "function"
 },
 "astropy.utils.decorators.wraps.wrapper": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "astropy.utils.decorators.functools",
    "func",
    "func.__name__",
    "make_function_with_signature"
   ]
  },
  "type": "function"
 },
 "astropy.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.exceptions": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.exceptions.AstropyBackwardsIncompatibleChangeWarning": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "astropy.utils.exceptions.AstropyWarning"
   ]
  },
  "type": "class"
 },
 "astropy.utils.exceptions.AstropyDeprecationWarning": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "astropy.utils.exceptions.AstropyWarning"
   ]
  },
  "type": "class"
 },
 "astropy.utils.exceptions.AstropyPendingDeprecationWarning": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "PendingDeprecationWarning",
    "astropy.utils.exceptions.AstropyWarning"
   ]
  },
  "type": "class"
 },
 "astropy.utils.exceptions.AstropyUserWarning": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "UserWarning",
    "astropy.utils.exceptions.AstropyWarning"
   ]
  },
  "type": "class"
 },
 "astropy.utils.exceptions.AstropyWarning": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "astropy.utils.exceptions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.exceptions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.exceptions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.exceptions.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.iers": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.iers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.iers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.iers.iers": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.utils.iers.iers.Conf",
    "astropy.utils.iers.iers.IERS",
    "astropy.utils.iers.iers.IERS_B",
    "astropy.utils.iers.iers.conf",
    "get_pkg_data_filename"
   ]
  },
  "type": "module"
 },
 "astropy.utils.iers.iers.Conf": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "astropy.utils.iers.iers.IERS_A_URL"
   ]
  },
  "type": "class"
 },
 "astropy.utils.iers.iers.FROM_IERS_A": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "astropy.utils.iers.iers.FROM_IERS_A_PREDICTION": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "astropy.utils.iers.iers.FROM_IERS_B": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "astropy.utils.iers.iers.IERS": {
  "data": {
   "lineno": 120
  },
  "type": "class"
 },
 "astropy.utils.iers.iers.IERS._check_interpolate_indices": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "astropy.utils.iers.iers.IERSRangeError",
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "astropy.utils.iers.iers.IERS._interpolate": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "astropy.utils.iers.iers.TIME_BEFORE_IERS_RANGE",
    "astropy.utils.iers.iers.TIME_BEYOND_IERS_RANGE",
    "hasattr",
    "len",
    "numpy.array",
    "numpy.clip",
    "numpy.max",
    "numpy.searchsorted",
    "source"
   ]
  },
  "type": "function"
 },
 "astropy.utils.iers.iers.IERS._refresh_table_as_needed": {
  "data": {
   "lineno": 335
  },
  "type": "function"
 },
 "astropy.utils.iers.iers.IERS.close": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.utils.iers.iers.IERS.mjd_utc": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "Exception",
    "astropy.utils.iers.iers.MJD_ZERO",
    "numpy.floor"
   ]
  },
  "type": "function"
 },
 "astropy.utils.iers.iers.IERS.open": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "astropy.utils.iers.iers.download_file",
    "classmethod",
    "urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "astropy.utils.iers.iers.IERS.pm_source": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "astropy.utils.iers.iers.IERS.pm_xy": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "astropy.utils.iers.iers.IERS.time_now": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "Exception",
    "astropy.time.Time.now",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.utils.iers.iers.IERS.ut1_utc": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "astropy.utils.iers.iers.IERS.ut1_utc_source": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "astropy.utils.iers.iers.IERSRangeError": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "class"
 },
 "astropy.utils.iers.iers.IERSStaleWarning": {
  "data": {
   "lineno": 84
  },
  "type": "class"
 },
 "astropy.utils.iers.iers.IERS_A": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "astropy.utils.iers.iers.IERS"
   ]
  },
  "type": "class"
 },
 "astropy.utils.iers.iers.IERS_A._combine_a_b_columns": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "classmethod",
    "numpy.flatnonzero",
    "numpy.min",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "astropy.utils.iers.iers.IERS_A._substitute_iers_b": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.utils.iers.iers.IERS_A.pm_source": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "astropy.utils.iers.iers.FROM_IERS_A",
    "astropy.utils.iers.iers.FROM_IERS_A_PREDICTION",
    "astropy.utils.iers.iers.FROM_IERS_B",
    "numpy.ones_like",
    "source"
   ]
  },
  "type": "function"
 },
 "astropy.utils.iers.iers.IERS_A.read": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "astropy.utils.iers.iers.IERS_A_FILE",
    "astropy.utils.iers.iers.IERS_A_README",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "astropy.utils.iers.iers.IERS_A.ut1_utc_source": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "astropy.utils.iers.iers.FROM_IERS_A",
    "astropy.utils.iers.iers.FROM_IERS_A_PREDICTION",
    "astropy.utils.iers.iers.FROM_IERS_B",
    "numpy.ones_like",
    "source"
   ]
  },
  "type": "function"
 },
 "astropy.utils.iers.iers.IERS_A_FILE": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "astropy.utils.iers.iers.IERS_A_README": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "astropy.utils.iers.iers.IERS_A_URL": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "astropy.utils.iers.iers.IERS_Auto": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "astropy.utils.iers.iers.IERS_A"
   ]
  },
  "type": "class"
 },
 "astropy.utils.iers.iers.IERS_Auto._check_interpolate_indices": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "ValueError",
    "astropy.utils.iers.iers.INTERPOLATE_ERROR",
    "astropy.utils.iers.iers.conf",
    "numpy.finfo",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "astropy.utils.iers.iers.IERS_Auto._refresh_table_as_needed": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "AstropyWarning",
    "Exception",
    "ValueError",
    "astropy.utils.iers.iers.IERSStaleWarning",
    "astropy.utils.iers.iers.conf",
    "astropy.utils.iers.iers.download_file",
    "clear_download_cache",
    "len",
    "numpy.finfo",
    "numpy.float",
    "numpy.max",
    "numpy.searchsorted",
    "str",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "astropy.utils.iers.iers.IERS_Auto._substitute_iers_b": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "ValueError",
    "astropy.utils.iers.iers.IERS_B",
    "classmethod",
    "len",
    "numpy.allclose",
    "numpy.searchsorted"
   ]
  },
  "type": "function"
 },
 "astropy.utils.iers.iers.IERS_Auto.open": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "AstropyWarning",
    "Exception",
    "astropy.utils.iers.iers.IERS",
    "astropy.utils.iers.iers.conf",
    "astropy.utils.iers.iers.download_file",
    "classmethod",
    "cls.iers_table",
    "cls.iers_table.meta",
    "cls.iers_table.meta.get",
    "cls.read",
    "str",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "astropy.utils.iers.iers.IERS_B": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "astropy.utils.iers.iers.IERS"
   ]
  },
  "type": "class"
 },
 "astropy.utils.iers.iers.IERS_B.pm_source": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "astropy.utils.iers.iers.FROM_IERS_B",
    "numpy.ones_like"
   ]
  },
  "type": "function"
 },
 "astropy.utils.iers.iers.IERS_B.read": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "astropy.utils.iers.iers.IERS_B_FILE",
    "astropy.utils.iers.iers.IERS_B_README",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "astropy.utils.iers.iers.IERS_B.ut1_utc_source": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "astropy.utils.iers.iers.FROM_IERS_B",
    "numpy.ones_like"
   ]
  },
  "type": "function"
 },
 "astropy.utils.iers.iers.IERS_B_FILE": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "astropy.utils.iers.iers.IERS_B_README": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "astropy.utils.iers.iers.IERS_B_URL": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "astropy.utils.iers.iers.INTERPOLATE_ERROR": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "astropy.utils.iers.iers.MJD_ZERO": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "astropy.utils.iers.iers.TIME_BEFORE_IERS_RANGE": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "astropy.utils.iers.iers.TIME_BEYOND_IERS_RANGE": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "astropy.utils.iers.iers.Time": {
  "data": {
   "shadows": "astropy.time.Time"
  },
  "type": "import"
 },
 "astropy.utils.iers.iers.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "astropy.utils.iers.iers._config": {
  "data": {
   "shadows": "config"
  },
  "type": "import"
 },
 "astropy.utils.iers.iers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.iers.iers.conf": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "astropy.utils.iers.iers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.iers.iers.download_file": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "astropy.utils.iers.iers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.utils.iers.iers.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.iers.iers.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.utils.iers.iers.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.iers.iers.urlparse": {
  "data": {
   "shadows": "urllib.parse.urlparse"
  },
  "type": "import"
 },
 "astropy.utils.iers.iers.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "astropy.utils.iers.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.iers.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.iers.tests.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.iers.tests.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.iers.tests.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.iers.tests.test_iers": {
  "data": {
   "symbols_in_volume": [
    "IOError",
    "astropy.utils.iers.tests.test_iers.os",
    "getattr"
   ]
  },
  "type": "module"
 },
 "astropy.utils.iers.tests.test_iers.FILE_NOT_FOUND_ERROR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "astropy.utils.iers.tests.test_iers.HAS_IERS_A": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "astropy.utils.iers.tests.test_iers.IERS_A_EXCERPT": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "astropy.utils.iers.tests.test_iers.TestBasic": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "astropy.utils.iers.tests.test_iers.TestBasic.test_open_filename": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "astropy.utils.iers.tests.test_iers.FILE_NOT_FOUND_ERROR",
    "astropy.utils.iers.tests.test_iers.pytest",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.utils.iers.tests.test_iers.TestBasic.test_open_network_url": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "astropy.utils.iers.tests.test_iers.IERS_A_EXCERPT",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.utils.iers.tests.test_iers.TestBasic.test_simple": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "IndexError",
    "Time",
    "assert_quantity_allclose",
    "astropy.utils.iers.tests.test_iers.pytest",
    "isinstance",
    "len",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.utils.iers.tests.test_iers.TestIERS_A": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "astropy.utils.iers.tests.test_iers.pytest",
    "str"
   ]
  },
  "type": "class"
 },
 "astropy.utils.iers.tests.test_iers.TestIERS_A.test_simple": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "Time.now",
    "assert_quantity_allclose",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.utils.iers.tests.test_iers.TestIERS_AExcerpt": {
  "data": {
   "lineno": 86
  },
  "type": "class"
 },
 "astropy.utils.iers.tests.test_iers.TestIERS_AExcerpt.test_simple": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "Time",
    "assert_quantity_allclose",
    "astropy.utils.iers.tests.test_iers.IERS_A_EXCERPT",
    "len",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "astropy.utils.iers.tests.test_iers.TestIERS_Auto": {
  "data": {
   "lineno": 155
  },
  "type": "class"
 },
 "astropy.utils.iers.tests.test_iers.TestIERS_Auto.test_no_auto_download": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.utils.iers.tests.test_iers.TestIERS_Auto.test_simple": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "Time",
    "ValueError",
    "astropy.utils.iers.tests.test_iers.os",
    "astropy.utils.iers.tests.test_iers.pytest",
    "catch_warnings",
    "len",
    "numpy.allclose",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.utils.iers.tests.test_iers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.iers.tests.test_iers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.iers.tests.test_iers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.utils.iers.tests.test_iers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.utils.iers.tests.test_iers.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.iers.tests.test_iers.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.utils.iers.tests.test_iers.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.utils.iers.tests.test_iers.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.iers.tests.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.iers.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.introspection": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.introspection.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "astropy.utils.introspection.__doctest_skip__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "astropy.utils.introspection._isinstancemethod": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "astropy.utils.introspection.types",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.utils.introspection.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.introspection.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.introspection.find_current_module": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ValueError",
    "__import__",
    "astropy.utils.introspection.inspect",
    "isinstance",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.utils.introspection.find_mod_objs": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "any",
    "astropy.utils.introspection.inspect",
    "astropy.utils.introspection.resolve_name",
    "dir",
    "enumerate",
    "hasattr",
    "ismodule",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.utils.introspection.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "astropy.utils.introspection.isinstancemethod": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "astropy.utils.introspection._isinstancemethod"
   ]
  },
  "type": "function"
 },
 "astropy.utils.introspection.minversion": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "astropy.utils.introspection.re",
    "astropy.utils.introspection.resolve_name",
    "astropy.utils.introspection.types",
    "distutils.version.LooseVersion",
    "getattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.utils.introspection.parse_version": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "astropy.utils.introspection.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.introspection.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.utils.introspection.resolve_name": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "__import__",
    "getattr",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.utils.introspection.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "astropy.utils.introspection.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.metadata": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.metadata.MERGE_STRATEGIES": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "astropy.utils.metadata.MergeConflictError": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "class"
 },
 "astropy.utils.metadata.MergeConflictWarning": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "astropy.utils.metadata.MergeNpConcatenate": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "astropy.utils.metadata.MergeStrategy",
    "list",
    "numpy.ndarray",
    "tuple"
   ]
  },
  "type": "class"
 },
 "astropy.utils.metadata.MergeNpConcatenate.merge": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "astropy.utils.metadata.common_dtype",
    "classmethod",
    "numpy.asanyarray",
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "astropy.utils.metadata.MergePlus": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "astropy.utils.metadata.MergeStrategy",
    "list",
    "tuple"
   ]
  },
  "type": "class"
 },
 "astropy.utils.metadata.MergePlus.merge": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.utils.metadata.MergeStrategy": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "astropy.utils.metadata.MergeStrategyMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.metadata.MergeStrategyMeta": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "astropy.utils.metadata.MergeStrategyMeta.__new__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "astropy.utils.metadata.MERGE_STRATEGIES",
    "astropy.utils.metadata.MergeStrategyMeta",
    "classmethod",
    "isinstance",
    "reversed",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.utils.metadata.MergeStrategyMeta.__new__.merge": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "Exception",
    "astropy.utils.metadata.MergeConflictError",
    "orig_merge",
    "wraps"
   ]
  },
  "type": "function"
 },
 "astropy.utils.metadata.MetaData": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.metadata.MetaData.__get__": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.utils.metadata.MetaData.__init__": {
  "data": {
   "lineno": 399
  },
  "type": "function"
 },
 "astropy.utils.metadata.MetaData.__set__": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "TypeError",
    "astropy.utils.metadata.collections",
    "collections.OrderedDict",
    "copy.deepcopy",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.utils.metadata.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.utils.metadata._EnableMergeStrategies": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.metadata._EnableMergeStrategies.__enter__": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "astropy.utils.metadata._EnableMergeStrategies.__exit__": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "astropy.utils.metadata._EnableMergeStrategies.__init__": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "astropy.utils.metadata.MERGE_STRATEGIES",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "astropy.utils.metadata.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "astropy.utils.metadata._both_isinstance": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.utils.metadata._error_str_func": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.utils.metadata._not_equal": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "Exception",
    "bool"
   ]
  },
  "type": "function"
 },
 "astropy.utils.metadata._warn_str_func": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.utils.metadata.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.metadata.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "astropy.utils.metadata.common_dtype": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "astropy.utils.metadata.MergeConflictError",
    "dtype",
    "dtype_bytes_or_chars",
    "enumerate",
    "issubclass",
    "len",
    "numpy.array",
    "numpy.bool_",
    "numpy.character",
    "numpy.empty",
    "numpy.number",
    "numpy.object_",
    "numpy.void",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.utils.metadata.common_dtype.dtype": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "getattr",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "astropy.utils.metadata.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "astropy.utils.metadata.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.metadata.enable_merge_strategies": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "astropy.utils.metadata._EnableMergeStrategies"
   ]
  },
  "type": "function"
 },
 "astropy.utils.metadata.merge": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "ValueError",
    "astropy.utils.metadata.MERGE_STRATEGIES",
    "astropy.utils.metadata.MergeConflictError",
    "astropy.utils.metadata.MergeConflictWarning",
    "astropy.utils.metadata._both_isinstance",
    "astropy.utils.metadata._error_str_func",
    "astropy.utils.metadata._not_equal",
    "astropy.utils.metadata._warn_str_func",
    "astropy.utils.metadata.warnings",
    "copy.deepcopy",
    "dict",
    "error_str_func",
    "isinstance",
    "merge_func",
    "warn_str_func"
   ]
  },
  "type": "function"
 },
 "astropy.utils.metadata.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.utils.metadata.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.metadata.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.metadata.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.utils.misc": {
  "data": {
   "symbols_in_volume": [
    "astropy.utils.misc.sys",
    "astropy.utils.misc.threading"
   ]
  },
  "type": "module"
 },
 "astropy.utils.misc.IncompatibleShapeError": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "astropy.utils.misc.IncompatibleShapeError.__init__": {
  "data": {
   "lineno": 1058,
   "symbols_in_volume": [
    "astropy.utils.misc.IncompatibleShapeError",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.InheritDocstrings": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "astropy.utils.misc.InheritDocstrings.__init__": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "astropy.utils.misc.InheritDocstrings",
    "astropy.utils.misc.inspect",
    "getattr",
    "is_public_member",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.InheritDocstrings.__init__.is_public_member": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.JsonCustomEncoder": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "astropy.utils.misc.json"
   ]
  },
  "type": "class"
 },
 "astropy.utils.misc.JsonCustomEncoder.default": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "astropy.utils.misc.json",
    "bytes",
    "complex",
    "isinstance",
    "list",
    "numpy.complex",
    "numpy.ndarray",
    "numpy.number",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.LOCALE_LOCK": {
  "data": {
   "lineno": 822
  },
  "type": "constant"
 },
 "astropy.utils.misc.NumpyRNGContext": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.misc.NumpyRNGContext.__enter__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "numpy.random.get_state",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.NumpyRNGContext.__exit__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "numpy.random.set_state"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.NumpyRNGContext.__init__": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "astropy.utils.misc.OrderedDescriptor": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "astropy.utils.misc.abc",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.misc.OrderedDescriptor.__init__": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "astropy.utils.misc.OrderedDescriptor",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.OrderedDescriptor.__lt__": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "AttributeError",
    "NotImplemented",
    "RuntimeError",
    "astropy.utils.misc.OrderedDescriptor",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.OrderedDescriptorContainer": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "astropy.utils.misc.OrderedDescriptorContainer.__init__": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "astropy.utils.misc.OrderedDescriptor",
    "astropy.utils.misc.OrderedDescriptorContainer",
    "collections.OrderedDict",
    "collections.defaultdict",
    "getattr",
    "isinstance",
    "list",
    "set",
    "setattr",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.utils.misc.ShapedLikeNDArray": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "astropy.utils.misc.abc",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.misc.ShapedLikeNDArray.T": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.ShapedLikeNDArray.__bool__": {
  "data": {
   "lineno": 935
  },
  "type": "function"
 },
 "astropy.utils.misc.ShapedLikeNDArray.__getitem__": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "IndexError",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.ShapedLikeNDArray.__iter__": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": [
    "TypeError",
    "self_iter"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.ShapedLikeNDArray.__iter__.self_iter": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.ShapedLikeNDArray.__len__": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.ShapedLikeNDArray.__nonzero__": {
  "data": {
   "lineno": 939
  },
  "type": "function"
 },
 "astropy.utils.misc.ShapedLikeNDArray._apply": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "astropy.utils.misc.abc"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.ShapedLikeNDArray.copy": {
  "data": {
   "lineno": 967
  },
  "type": "function"
 },
 "astropy.utils.misc.ShapedLikeNDArray.diagonal": {
  "data": {
   "lineno": 1032
  },
  "type": "function"
 },
 "astropy.utils.misc.ShapedLikeNDArray.flatten": {
  "data": {
   "lineno": 996
  },
  "type": "function"
 },
 "astropy.utils.misc.ShapedLikeNDArray.isscalar": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.ShapedLikeNDArray.ndim": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.ShapedLikeNDArray.ravel": {
  "data": {
   "lineno": 986
  },
  "type": "function"
 },
 "astropy.utils.misc.ShapedLikeNDArray.reshape": {
  "data": {
   "lineno": 974
  },
  "type": "function"
 },
 "astropy.utils.misc.ShapedLikeNDArray.shape": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "astropy.utils.misc.abc"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.ShapedLikeNDArray.size": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.ShapedLikeNDArray.squeeze": {
  "data": {
   "lineno": 1040
  },
  "type": "function"
 },
 "astropy.utils.misc.ShapedLikeNDArray.swapaxes": {
  "data": {
   "lineno": 1023
  },
  "type": "function"
 },
 "astropy.utils.misc.ShapedLikeNDArray.take": {
  "data": {
   "lineno": 1048
  },
  "type": "function"
 },
 "astropy.utils.misc.ShapedLikeNDArray.transpose": {
  "data": {
   "lineno": 1003
  },
  "type": "function"
 },
 "astropy.utils.misc._DummyFile": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.misc._DummyFile.write": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "astropy.utils.misc.__all__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "astropy.utils.misc._has_hidden_attribute": {
  "data": {
   "lineno": 318
  },
  "type": "function"
 },
 "astropy.utils.misc.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "astropy.utils.misc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.misc.check_broadcast": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "astropy.utils.misc.IncompatibleShapeError",
    "enumerate",
    "len",
    "reversed",
    "tuple",
    "zip_longest"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "astropy.utils.misc.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "astropy.utils.misc.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "astropy.utils.misc.decompress": {
  "data": {
   "shadows": "zlib.decompress"
  },
  "type": "import"
 },
 "astropy.utils.misc.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "astropy.utils.misc.did_you_mean": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "astropy.utils.misc.difflib",
    "astropy.utils.misc.strip_accents",
    "fix",
    "isinstance",
    "len",
    "list",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.difflib": {
  "data": {
   "shadows": "difflib"
  },
  "type": "import"
 },
 "astropy.utils.misc.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.misc.dtype_bytes_or_chars": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "astropy.utils.misc.re",
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.find_api_page": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ValueError",
    "astropy.utils.misc.inspect",
    "astropy.utils.misc.webbrowser",
    "hasattr",
    "isinstance",
    "range",
    "zlib.decompress"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.format_exception": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "astropy.utils.misc.sys",
    "astropy.utils.misc.traceback",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.indent": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "astropy.utils.misc.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "astropy.utils.misc.is_path_hidden": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "astropy.utils.misc._has_hidden_attribute",
    "astropy.utils.misc.os",
    "bytes",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.isiterable": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "TypeError",
    "iter"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "astropy.utils.misc.locale": {
  "data": {
   "shadows": "locale"
  },
  "type": "import"
 },
 "astropy.utils.misc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.utils.misc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.utils.misc.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.misc.random": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "astropy.utils.misc.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.utils.misc.set_locale": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "astropy.utils.misc.LOCALE_LOCK",
    "astropy.utils.misc.locale",
    "contextlib.contextmanager",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "astropy.utils.misc.signal_number_to_name": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "astropy.utils.misc.signal",
    "dict"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.silence": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "astropy.utils.misc._DummyFile",
    "astropy.utils.misc.contextlib",
    "astropy.utils.misc.sys"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.strip_accents": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "astropy.utils.misc.unicodedata"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.utils.misc.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "astropy.utils.misc.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "astropy.utils.misc.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.misc.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 },
 "astropy.utils.misc.walk_skip_hidden": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "astropy.utils.misc.is_path_hidden",
    "astropy.utils.misc.os"
   ]
  },
  "type": "function"
 },
 "astropy.utils.misc.webbrowser": {
  "data": {
   "shadows": "webbrowser"
  },
  "type": "import"
 },
 "astropy.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.setup_package": {
  "data": {
   "symbols_in_volume": [
    "os.path.dirname"
   ]
  },
  "type": "module"
 },
 "astropy.utils.setup_package.ASTROPY_UTILS_ROOT": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "astropy.utils.setup_package.Extension": {
  "data": {
   "shadows": "distutils.core.Extension"
  },
  "type": "import"
 },
 "astropy.utils.setup_package.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.setup_package.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "astropy.utils.setup_package.get_extensions": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "astropy.utils.setup_package.ASTROPY_UTILS_ROOT",
    "distutils.core.Extension",
    "os.path.join",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "astropy.utils.setup_package.get_package_data": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "astropy.utils.setup_package.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "astropy.utils.setup_package.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "astropy.utils.setup_package.requires_2to3": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "astropy.utils.state": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.state.ScienceState": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.state.ScienceState.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "astropy.utils.state.ScienceState.get": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.utils.state.ScienceState.set": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "_Context",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.utils.state.ScienceState.set._Context": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.state.ScienceState.set._Context.__enter__": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "astropy.utils.state.ScienceState.set._Context.__exit__": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "astropy.utils.state.ScienceState.set._Context.__init__": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "astropy.utils.state.ScienceState.set._Context.__repr__": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "astropy.utils.state.ScienceState.validate": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.utils.state.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "astropy.utils.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.tests.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.tests.data.test_package": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.tests.data.test_package.get_data_filename": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "astropy.utils.data.get_pkg_data_filename"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.data.test_package.get_pkg_data_filename": {
  "data": {
   "shadows": "astropy.utils.data.get_pkg_data_filename"
  },
  "type": "import"
 },
 "astropy.utils.tests.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.tests.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_codegen": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.tests.test_codegen.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_codegen.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_codegen.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_codegen.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_codegen.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_codegen.test_make_function_with_signature_lineno": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "Exception",
    "ZeroDivisionError",
    "astropy.utils.tests.test_codegen.pytest",
    "astropy.utils.tests.test_codegen.sys",
    "astropy.utils.tests.test_codegen.traceback",
    "make_function_with_signature",
    "wrapped"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_codegen.test_make_function_with_signature_lineno.crashy_function": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "astropy.utils.tests.test_codegen.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_codegen.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_collections": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.tests.test_collections.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_collections.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_collections.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_collections.test_homogeneous_list": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_collections.test_homogeneous_list2": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_collections.test_homogeneous_list3": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_collections.test_homogeneous_list4": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_collections.test_homogeneous_list5": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_collections.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_console": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.tests.test_console.FakeTTY": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "astropy.utils.tests.test_console.io"
   ]
  },
  "type": "class"
 },
 "astropy.utils.tests.test_console.FakeTTY.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "astropy.utils.tests.test_console.FakeTTY",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_console.FakeTTY.__new__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "astropy.utils.tests.test_console.FakeTTY",
    "str",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_console.FakeTTY.isatty": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "astropy.utils.tests.test_console.FakeTTY.write": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "astropy.utils.tests.test_console.FakeTTY",
    "bytes",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_console.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_console.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_console.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_console.locale": {
  "data": {
   "shadows": "locale"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_console.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_console.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_console.test_bad_human_file_size": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "astropy.utils.tests.test_console.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_console.test_color_print": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "astropy.utils.tests.test_console.test_color_print2": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "astropy.utils.tests.test_console.io"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_console.test_color_print3": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "astropy.utils.tests.test_console.FakeTTY",
    "astropy.utils.tests.test_console.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_console.test_color_print_invalid_color": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "astropy.utils.tests.test_console.test_color_print_no_default_encoding": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "astropy.utils.tests.test_console.io",
    "astropy.utils.tests.test_console.locale",
    "astropy.utils.tests.test_console.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_console.test_color_print_unicode": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "astropy.utils.tests.test_console.test_color_text": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "astropy.utils.tests.test_console.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_console.test_fake_tty": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "astropy.utils.tests.test_console.FakeTTY",
    "astropy.utils.tests.test_console.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_console.test_human_file_size": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "astropy.utils.tests.test_console.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_console.test_human_time": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "astropy.utils.tests.test_console.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_console.test_progress_bar": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_console.test_progress_bar2": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_console.test_progress_bar3": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_console.test_progress_bar3.do_nothing": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "astropy.utils.tests.test_console.test_progress_bar_as_generator": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_console.test_spinner_non_unicode_console": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "astropy.utils.tests.test_console.FakeTTY",
    "next"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_console.test_zero_progress_bar": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "astropy.utils.tests.test_console.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_console.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_data": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.utils.tests.test_data.sys"
   ]
  },
  "type": "module"
 },
 "astropy.utils.tests.test_data.HAS_BZ2": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "astropy.utils.tests.test_data.HAS_PATHLIB": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "astropy.utils.tests.test_data.HAS_XZ": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "astropy.utils.tests.test_data.TESTURL": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "astropy.utils.tests.test_data.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_data.bad_compressed": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "astropy.utils.tests.test_data.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_data.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_data.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_data.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_data.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_data.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_data.lzma": {
  "data": {
   "shadows": "backports.lzma"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_data.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_data.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_data.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_data.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_data.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_data.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_data.test_compressed_stream": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "FakeStream",
    "astropy.utils.tests.test_data.base64",
    "bytes",
    "get_readable_fileobj",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_data.test_compressed_stream.FakeStream": {
  "data": {
   "lineno": 388
  },
  "type": "class"
 },
 "astropy.utils.tests.test_data.test_compressed_stream.FakeStream.__init__": {
  "data": {
   "lineno": 393
  },
  "type": "function"
 },
 "astropy.utils.tests.test_data.test_compressed_stream.FakeStream.read": {
  "data": {
   "lineno": 396
  },
  "type": "function"
 },
 "astropy.utils.tests.test_data.test_compute_hash": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "astropy.utils.tests.test_data.hashlib",
    "astropy.utils.tests.test_data.io",
    "compute_hash"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_data.test_data_name_third_party_package": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "astropy.utils.tests.test_data.os",
    "astropy.utils.tests.test_data.sys",
    "astropy.utils.tests.test_data.test_package"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_data.test_data_noastropy_fallback": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "OSError",
    "_get_download_cache_locs",
    "astropy.utils.tests.test_data.TESTURL",
    "astropy.utils.tests.test_data.os",
    "astropy.utils.tests.test_data.pytest",
    "catch_warnings",
    "len",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_data.test_data_noastropy_fallback.osraiser": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "OSError"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_data.test_download_cache": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "_get_download_cache_locs",
    "astropy.utils.tests.test_data.TESTURL",
    "astropy.utils.tests.test_data.os",
    "clear_download_cache",
    "download_file"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_data.test_download_nocache": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "astropy.utils.tests.test_data.TESTURL",
    "astropy.utils.tests.test_data.os",
    "download_file"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_data.test_download_noprogress": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "astropy.utils.tests.test_data.TESTURL",
    "astropy.utils.tests.test_data.os",
    "download_file"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_data.test_find_by_hash": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "astropy.utils.tests.test_data.pytest",
    "get_pkg_data_filename"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_data.test_get_cached_urls": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "astropy.utils.tests.test_data.TESTURL",
    "download_file",
    "get_cached_urls"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_data.test_get_pkg_data_contents": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "get_pkg_data_contents",
    "get_pkg_data_fileobj"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_data.test_get_readable_fileobj_cleans_up_temporary_files": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "astropy.utils.tests.test_data.os",
    "astropy.utils.tests.test_data.tempfile",
    "get_pkg_data_filename",
    "get_readable_fileobj",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_data.test_invalid_location_download": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "astropy.utils.tests.test_data.pytest",
    "download_file"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_data.test_invalid_location_download_noconnect": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "IOError",
    "astropy.utils.tests.test_data.pytest",
    "download_file"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_data.test_is_url_in_cache": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "astropy.utils.tests.test_data.TESTURL",
    "download_file",
    "is_url_in_cache"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_data.test_local_data_name": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "astropy.utils.tests.test_data.os",
    "get_pkg_data_filename"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_data.test_local_data_nonlocalfail": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "RuntimeError",
    "get_pkg_data_filename",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_data.test_local_data_obj": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ValueError",
    "astropy.utils.tests.test_data.HAS_BZ2",
    "astropy.utils.tests.test_data.HAS_XZ",
    "astropy.utils.tests.test_data.os",
    "astropy.utils.tests.test_data.pytest",
    "get_pkg_data_fileobj",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_data.test_local_data_obj_invalid": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "ValueError",
    "astropy.utils.tests.test_data.HAS_BZ2",
    "astropy.utils.tests.test_data.HAS_XZ",
    "astropy.utils.tests.test_data.bad_compressed",
    "astropy.utils.tests.test_data.pytest",
    "get_readable_fileobj",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_data.test_package": {
  "data": {
   "shadows": "test_package"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_data.test_path_objects_get_readable_fileobj": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "astropy.utils.tests.test_data.os",
    "astropy.utils.tests.test_data.pathlib",
    "astropy.utils.tests.test_data.pytest",
    "get_pkg_data_filename",
    "get_readable_fileobj"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_data.test_read_unicode": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "astropy.utils.tests.test_data.HAS_BZ2",
    "astropy.utils.tests.test_data.HAS_XZ",
    "astropy.utils.tests.test_data.os",
    "astropy.utils.tests.test_data.pytest",
    "bytes",
    "get_pkg_data_contents",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_data.test_url_nocache": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "astropy.utils.tests.test_data.TESTURL",
    "get_readable_fileobj"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_data.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_data_info": {
  "data": {
   "symbols_in_volume": [
    "astropy.utils.tests.test_data_info.STRING_TYPE_NAMES",
    "bool",
    "float",
    "numpy.array",
    "numpy.bool",
    "numpy.int32",
    "numpy.void"
   ]
  },
  "type": "module"
 },
 "astropy.utils.tests.test_data_info.DTYPE_TESTS": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.utils.tests.test_data_info.STRING_TYPE_NAMES": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "astropy.utils.tests.test_data_info.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_data_info.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_data_info.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_data_info.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_data_info.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_data_info.test_dtype_info_name": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "astropy.utils.tests.test_data_info.DTYPE_TESTS",
    "astropy.utils.tests.test_data_info.pytest",
    "dtype_info_name",
    "input"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.tests.test_decorators.TA": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "deprecated",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.tests.test_decorators.TA.__init__": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.TB": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "astropy.utils.tests.test_decorators.TMeta",
    "deprecated",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.tests.test_decorators.TMeta": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "astropy.utils.tests.test_decorators.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_decorators.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_decorators.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_decorators.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_decorators.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_decorators.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_decorators.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_decorators.test_classproperty_docstring": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "A.__dict__.__doc__"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_classproperty_docstring.A": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.tests.test_decorators.test_classproperty_docstring.A.foo": {
  "data": {
   "lineno": 556
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_classproperty_docstring.B": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "classproperty",
    "foo",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.tests.test_decorators.test_classproperty_docstring.B._get_foo": {
  "data": {
   "lineno": 566
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_argument": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "Test",
    "TypeError",
    "astropy.utils.tests.test_decorators.pytest",
    "catch_warnings",
    "len",
    "method",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_argument.Test": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_argument.Test.test1": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "classmethod",
    "deprecated_renamed_argument"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_argument.Test.test2": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "deprecated_renamed_argument",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_argument.Test.test3": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "deprecated_renamed_argument"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_argument.test1": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "deprecated_renamed_argument"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_argument_in_kwargs": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "TypeError",
    "astropy.utils.tests.test_decorators.pytest",
    "catch_warnings",
    "len",
    "str",
    "test"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_argument_in_kwargs.test": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "deprecated_renamed_argument"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_argument_multi_deprecation": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "catch_warnings",
    "len",
    "test"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_argument_multi_deprecation.test": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "deprecated_renamed_argument"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_argument_multi_deprecation_2": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "TypeError",
    "astropy.utils.tests.test_decorators.pytest",
    "catch_warnings",
    "len",
    "test"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_argument_multi_deprecation_2.test": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "deprecated_renamed_argument"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_argument_not_allowed_use": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "TypeError",
    "astropy.utils.tests.test_decorators.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_argument_not_allowed_use.test1": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "deprecated_renamed_argument"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_argument_not_allowed_use.test2": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "deprecated_renamed_argument"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_argument_not_allowed_use.test3": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "deprecated_renamed_argument"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_argument_pending": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "catch_warnings",
    "len",
    "test"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_argument_pending.test": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "deprecated_renamed_argument"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_argument_relaxed": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "catch_warnings",
    "len",
    "str",
    "test"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_argument_relaxed.test": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "deprecated_renamed_argument"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_attribute": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "DummyClass",
    "catch_warnings",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_attribute.DummyClass": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "deprecated_attribute",
    "foo"
   ]
  },
  "type": "class"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_attribute.DummyClass.__init__": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_attribute.DummyClass.set_private": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_class": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "astropy.utils.tests.test_decorators.TA",
    "astropy.utils.tests.test_decorators.pickle",
    "catch_warnings",
    "dir",
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_class_with_custom_metaclass": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "astropy.utils.tests.test_decorators.TB",
    "astropy.utils.tests.test_decorators.TMeta",
    "catch_warnings",
    "len",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_class_with_super": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "astropy.utils.tests.test_decorators.TB",
    "catch_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_class_with_super.TB": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "deprecated",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_class_with_super.TB.__init__": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "astropy.utils.tests.test_decorators.TB",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_static_and_classmethod": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "catch_warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_static_and_classmethod.A": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_static_and_classmethod.A.B": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "deprecated",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_deprecated_static_and_classmethod.A.C": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "classmethod",
    "deprecated"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_objectInput_format": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "IndexError",
    "astropy.utils.tests.test_decorators.inspect",
    "astropy.utils.tests.test_decorators.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_objectInput_format.docstring": {
  "data": {
   "lineno": 661
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_objectInput_format.docstring2": {
  "data": {
   "lineno": 679
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_objectInput_format.testfunc2": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "format_doc"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_objectInput_format.testfunc3": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "format_doc"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_objectInput_format.testfunc_fail": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "format_doc"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_objectInput_simple": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "ValueError",
    "astropy.utils.tests.test_decorators.inspect",
    "astropy.utils.tests.test_decorators.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_objectInput_simple.docstring0": {
  "data": {
   "lineno": 640
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_objectInput_simple.docstring_fail": {
  "data": {
   "lineno": 631
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_objectInput_simple.testfunc_1": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "format_doc"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_objectInput_simple.testfunc_2": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "format_doc"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_objectInput_simple.testfunc_fail": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "format_doc"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_onClass": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "TestClass",
    "astropy.utils.tests.test_decorators.inspect"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_onClass.TestClass": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "format_doc",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_onMethod": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "TestClass.test_method",
    "astropy.utils.tests.test_decorators.inspect"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_onMethod.TestClass": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_onMethod.TestClass.test_method": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "format_doc"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_selfInput_format": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "IndexError",
    "astropy.utils.tests.test_decorators.inspect",
    "astropy.utils.tests.test_decorators.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_selfInput_format.testfunc1": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "format_doc"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_selfInput_format.testfunc2": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "format_doc"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_selfInput_format.testfunc_fail": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "format_doc"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_selfInput_simple": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "ValueError",
    "astropy.utils.tests.test_decorators.inspect",
    "astropy.utils.tests.test_decorators.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_selfInput_simple.testfunc_1": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "format_doc"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_selfInput_simple.testfunc_fail": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "format_doc"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_stringInput_format": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "IndexError",
    "astropy.utils.tests.test_decorators.inspect",
    "astropy.utils.tests.test_decorators.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_stringInput_format.testfunc1": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "format_doc"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_stringInput_format.testfunc2": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "format_doc"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_stringInput_format.testfunc3": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "format_doc"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_stringInput_simple": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "ValueError",
    "astropy.utils.tests.test_decorators.inspect",
    "astropy.utils.tests.test_decorators.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_stringInput_simple.testfunc_1": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "format_doc"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_stringInput_simple.testfunc_2": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "format_doc"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_format_doc_stringInput_simple.testfunc_fail": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "format_doc"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_sharedmethod_imfunc": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "Bar",
    "Bar.foo.im_func",
    "astropy.utils.tests.test_decorators.pytest",
    "foo"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_sharedmethod_imfunc.Bar": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "foo",
    "object",
    "sharedmethod"
   ]
  },
  "type": "class"
 },
 "astropy.utils.tests.test_decorators.test_sharedmethod_imfunc.MetaBar": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "foo",
    "type"
   ]
  },
  "type": "class"
 },
 "astropy.utils.tests.test_decorators.test_sharedmethod_imfunc.foo": {
  "data": {
   "lineno": 476
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_sharedmethod_reuse_on_subclasses": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "A",
    "A.foo"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_sharedmethod_reuse_on_subclasses.A": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.tests.test_decorators.test_sharedmethod_reuse_on_subclasses.A.__init__": {
  "data": {
   "lineno": 523
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_sharedmethod_reuse_on_subclasses.A.foo": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "sharedmethod"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_sharedmethod_reuse_on_subclasses.AMeta": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "astropy.utils.tests.test_decorators.test_sharedmethod_reuse_on_subclasses.AMeta.foo": {
  "data": {
   "lineno": 515
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_sharedmethod_reuse_on_subclasses.B": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "A"
   ]
  },
  "type": "class"
 },
 "astropy.utils.tests.test_decorators.test_wraps": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "astropy.utils.tests.test_decorators.inspect",
    "bar",
    "bar.__doc__",
    "bar.__name__",
    "bar.__qualname__",
    "foo",
    "foo.__doc__",
    "foo.__qualname__",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_wraps.bar": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "foo",
    "wraps"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_wraps.foo": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_wraps_exclude_names": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "TestClass",
    "astropy.utils.tests.test_decorators.inspect",
    "func"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_wraps_exclude_names.TestClass": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.tests.test_decorators.test_wraps_exclude_names.TestClass.method": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_wraps_exclude_names.func": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "wraps"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_wraps_keep_orig_name": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "astropy.utils.tests.test_decorators.functools",
    "bar",
    "bar.__name__",
    "foo",
    "list",
    "wraps"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_wraps_keep_orig_name.bar": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.test_wraps_keep_orig_name.foo": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "astropy.utils.tests.test_decorators.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_introspection": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.tests.test_introspection.ModuleType": {
  "data": {
   "shadows": "types.ModuleType"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_introspection._minversion_test": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "minversion",
    "str",
    "types.ModuleType"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_introspection.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_introspection.astropy": {
  "data": {
   "shadows": "astropy"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_introspection.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_introspection.getrecursionlimit": {
  "data": {
   "shadows": "sys.getrecursionlimit"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_introspection.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_introspection.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_introspection.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_introspection.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_introspection.test_find_current_mod": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "astropy.utils.tests.test_introspection.pytest",
    "find_current_module",
    "sys.getrecursionlimit"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_introspection.test_find_mod_objs": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "__name__",
    "astropy.utils.tests.test_introspection.astropy",
    "collections.namedtuple",
    "find_mod_objs"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_introspection.test_isinstancemethod": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "isinstancemethod"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_introspection.test_isinstancemethod.MetaClass": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "astropy.utils.tests.test_introspection.test_isinstancemethod.MetaClass.a_classmethod": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "astropy.utils.tests.test_introspection.test_isinstancemethod.MyClass": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.tests.test_introspection.test_isinstancemethod.MyClass.a_staticmethod": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_introspection.test_isinstancemethod.MyClass.an_instancemethod": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "astropy.utils.tests.test_introspection.test_isinstancemethod.MyClass.another_classmethod": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_introspection.test_minversion": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "astropy.utils.tests.test_introspection._minversion_test",
    "astropy.utils.tests.test_introspection.sys"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_introspection.test_pkg_finder": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "find_current_module"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_introspection.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_metadata": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.tests.test_metadata.ExampleData": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "MetaData",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.tests.test_metadata.ExampleData.__init__": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "astropy.utils.tests.test_metadata.MetaBaseTest": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "astropy.utils.tests.test_metadata.abc",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.tests.test_metadata.MetaBaseTest.test_mapping_init": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "astropy.utils.tests.test_metadata.OrderedDictSubclass",
    "astropy.utils.tests.test_metadata.pytest",
    "collections.OrderedDict",
    "dict",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_metadata.MetaBaseTest.test_mapping_set": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "astropy.utils.tests.test_metadata.OrderedDictSubclass",
    "astropy.utils.tests.test_metadata.pytest",
    "collections.OrderedDict",
    "dict",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_metadata.MetaBaseTest.test_meta_fits_header": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "astropy.utils.tests.test_metadata.MetaBaseTest.test_non_mapping_init": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "TypeError",
    "astropy.utils.tests.test_metadata.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_metadata.MetaBaseTest.test_non_mapping_set": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "TypeError",
    "astropy.utils.tests.test_metadata.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_metadata.MetaBaseTest.test_none": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_metadata.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_metadata.OrderedDictSubclass": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "class"
 },
 "astropy.utils.tests.test_metadata.TestMetaExampleData": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "astropy.utils.tests.test_metadata.ExampleData",
    "astropy.utils.tests.test_metadata.MetaBaseTest"
   ]
  },
  "type": "class"
 },
 "astropy.utils.tests.test_metadata.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_metadata.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_metadata.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_metadata.test_common_dtype_basic": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "astropy.utils.tests.test_metadata.pytest",
    "common_dtype",
    "numpy.array",
    "numpy.float64",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_metadata.test_common_dtype_string": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "common_dtype",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_metadata.test_metadata_merging": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "astropy.utils.tests.test_metadata.pytest",
    "merge",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_metadata.test_metadata_merging_conflict_exception": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "astropy.utils.tests.test_metadata.ExampleData",
    "astropy.utils.tests.test_metadata.pytest",
    "merge"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_metadata.test_metadata_merging_new_strategy": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "astropy.utils.tests.test_metadata.pytest",
    "enable_merge_strategies",
    "list",
    "merge"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_metadata.test_metadata_merging_new_strategy.MergeConcatStrings": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "class"
 },
 "astropy.utils.tests.test_metadata.test_metadata_merging_new_strategy.MergeNumbersAsList": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "float",
    "int"
   ]
  },
  "type": "class"
 },
 "astropy.utils.tests.test_metadata.test_metadata_merging_new_strategy.MergeNumbersAsList.merge": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_misc": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.tests.test_misc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_misc.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_misc.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_misc.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_misc.locale": {
  "data": {
   "shadows": "locale"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_misc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_misc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_misc.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_misc.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_misc.test_JsonCustomEncoder": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "astropy.utils.tests.test_misc.json",
    "numpy.arange",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_misc.test_api_lookup": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "astropy.utils.tests.test_misc.test_check_broadcast": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ValueError",
    "astropy.utils.tests.test_misc.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_misc.test_dtype_bytes_or_chars": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dtype",
    "numpy.float64",
    "numpy.int32",
    "object"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_misc.test_inherit_docstrings": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "astropy.utils.tests.test_misc.test_inherit_docstrings.Base": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.tests.test_misc.test_inherit_docstrings.Base.__call__": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "astropy.utils.tests.test_misc.test_inherit_docstrings.Subclass": {
  "data": {
   "lineno": 74
  },
  "type": "class"
 },
 "astropy.utils.tests.test_misc.test_inherit_docstrings.Subclass.__call__": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "astropy.utils.tests.test_misc.test_isiterable": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_misc.test_set_locale": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "astropy.utils.tests.test_misc.locale",
    "astropy.utils.tests.test_misc.pytest",
    "datetime.datetime",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_misc.test_signal_number_to_name_no_failure": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "astropy.utils.tests.test_misc.test_skip_hidden": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "astropy.utils.tests.test_misc.os"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_misc.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_timer": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.tests.test_timer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_timer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_timer.func_to_time": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "astropy.utils.tests.test_timer.time",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_timer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_timer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_timer.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_timer.test_timer": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "RunTimePredictor",
    "RuntimeError",
    "ValueError",
    "astropy.utils.tests.test_timer.func_to_time",
    "astropy.utils.tests.test_timer.pytest",
    "list",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_timer.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_timer.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_xml": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.tests.test_xml.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_xml.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_xml.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_xml.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_xml.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.utils.tests.test_xml.test_check_anyuri": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "astropy.utils.tests.test_xml.test_check_id": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "astropy.utils.tests.test_xml.test_check_mime_content_type": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "astropy.utils.tests.test_xml.test_check_token": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "astropy.utils.tests.test_xml.test_escape_xml": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "bytes",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_xml.test_escape_xml_with_bleach": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "astropy.utils.tests.test_xml.io",
    "astropy.utils.tests.test_xml.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_xml.test_escape_xml_without_bleach": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError",
    "astropy.utils.tests.test_xml.io",
    "astropy.utils.tests.test_xml.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_xml.test_fix_id": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "astropy.utils.tests.test_xml.test_unescape_all": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "astropy.utils.tests.test_xml.test_writer": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "astropy.utils.tests.test_xml.io"
   ]
  },
  "type": "function"
 },
 "astropy.utils.tests.test_xml.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.tests.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.timer": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.timer.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "astropy.utils.timer.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.utils.timer.RunTimePredictor": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.timer.RunTimePredictor.__init__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "functools.partial"
   ]
  },
  "type": "function"
 },
 "astropy.utils.timer.RunTimePredictor._cache_time": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "Exception",
    "astropy.utils.timer.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.utils.timer.RunTimePredictor._timed_pfunc": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "astropy.utils.timer.timefunc"
   ]
  },
  "type": "function"
 },
 "astropy.utils.timer.RunTimePredictor.do_fit": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "fitter",
    "isinstance",
    "list",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.utils.timer.RunTimePredictor.plot": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "list",
    "matplotlib.pyplot.draw",
    "matplotlib.pyplot.savefig",
    "matplotlib.pyplot.subplots",
    "numpy.array",
    "sorted"
   ]
  },
  "type": "function"
 },
 "astropy.utils.timer.RunTimePredictor.predict_time": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "astropy.utils.timer.RunTimePredictor.results": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.utils.timer.RunTimePredictor.time_func": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "collections.Iterable",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.utils.timer.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "astropy.utils.timer.__doctest_skip__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "astropy.utils.timer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.timer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.timer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.utils.timer.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "astropy.utils.timer.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "astropy.utils.timer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.timer.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "astropy.utils.timer.timefunc": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "astropy.utils.timer.timefunc.real_decorator": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "astropy.utils.timer.timefunc.real_decorator.wrapper": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "astropy.utils.timer.time",
    "function",
    "function.__name__",
    "functools.wraps",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.utils.timer.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.utils.timer.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.timer.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.utils.timer.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "astropy.utils.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.xml": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.xml.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.xml.check": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.xml.check._token_regex": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "astropy.utils.xml.check.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.xml.check.check_anyuri": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "Exception",
    "astropy.utils.xml.check.re"
   ]
  },
  "type": "function"
 },
 "astropy.utils.xml.check.check_id": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "astropy.utils.xml.check.re"
   ]
  },
  "type": "function"
 },
 "astropy.utils.xml.check.check_mime_content_type": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "astropy.utils.xml.check.re",
    "chr",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.utils.xml.check.check_token": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "astropy.utils.xml.check.re"
   ]
  },
  "type": "function"
 },
 "astropy.utils.xml.check.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.xml.check.fix_id": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "astropy.utils.xml.check.re",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.utils.xml.check.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.xml.check.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.utils.xml.check.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.xml.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.xml.iterparser": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.utils.xml.iterparser._fast_iterparse"
   ]
  },
  "type": "module"
 },
 "astropy.utils.xml.iterparser.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "astropy.utils.xml.iterparser._convert_to_fd_or_read_function": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "astropy.utils.xml.iterparser.contextlib",
    "astropy.utils.xml.iterparser.io",
    "astropy.utils.xml.iterparser.sys",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.utils.xml.iterparser._fast_iterparse": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "astropy.utils.xml.iterparser._fast_iterparse.end": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "astropy.utils.xml.iterparser._fast_iterparse.start": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "astropy.utils.xml.iterparser._slow_iterparse": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "astropy.utils.xml.iterparser.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.xml.iterparser.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "astropy.utils.xml.iterparser.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.xml.iterparser.expat": {
  "data": {
   "shadows": "xml.parsers.expat"
  },
  "type": "import"
 },
 "astropy.utils.xml.iterparser.get_xml_encoding": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "IOError",
    "astropy.utils.xml.iterparser.get_xml_iterator"
   ]
  },
  "type": "function"
 },
 "astropy.utils.xml.iterparser.get_xml_iterator": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "astropy.utils.xml.iterparser._convert_to_fd_or_read_function",
    "astropy.utils.xml.iterparser._fast_iterparse",
    "astropy.utils.xml.iterparser._slow_iterparse",
    "astropy.utils.xml.iterparser.contextlib",
    "iter"
   ]
  },
  "type": "function"
 },
 "astropy.utils.xml.iterparser.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "astropy.utils.xml.iterparser.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.xml.iterparser.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.utils.xml.iterparser.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.xml.iterparser.xml_readlines": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "astropy.utils.xml.iterparser.get_xml_encoding",
    "input",
    "input.readlines",
    "input.seek"
   ]
  },
  "type": "function"
 },
 "astropy.utils.xml.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.xml.setup_package": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.xml.setup_package.Extension": {
  "data": {
   "shadows": "distutils.core.Extension"
  },
  "type": "import"
 },
 "astropy.utils.xml.setup_package.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.xml.setup_package.get_extensions": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "astropy.utils.xml.setup_package.sys",
    "astropy_helpers.setup_helpers.DistutilsExtensionArgs",
    "astropy_helpers.setup_helpers.pkg_config",
    "astropy_helpers.setup_helpers.use_system_library",
    "distutils.core.Extension",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "astropy.utils.xml.setup_package.get_external_libraries": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "astropy.utils.xml.setup_package.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "astropy.utils.xml.setup_package.setup_helpers": {
  "data": {
   "shadows": "astropy_helpers.setup_helpers"
  },
  "type": "import"
 },
 "astropy.utils.xml.setup_package.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.utils.xml.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.xml.tests.test_iterparse": {
  "data": {
   "symbols_in_volume": [
    "astropy.utils.xml.tests.test_iterparse.FOOTER",
    "astropy.utils.xml.tests.test_iterparse.HEADER",
    "astropy.utils.xml.tests.test_iterparse.ROW"
   ]
  },
  "type": "module"
 },
 "astropy.utils.xml.tests.test_iterparse.FOOTER": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "astropy.utils.xml.tests.test_iterparse.HEADER": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "astropy.utils.xml.tests.test_iterparse.ROW": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "astropy.utils.xml.tests.test_iterparse.UngzipFileWrapper": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.utils.xml.tests.test_iterparse.UngzipFileWrapper.__getattr__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.utils.xml.tests.test_iterparse.UngzipFileWrapper.__init__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "astropy.utils.xml.tests.test_iterparse.zlib"
   ]
  },
  "type": "function"
 },
 "astropy.utils.xml.tests.test_iterparse.UngzipFileWrapper.read": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "len",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "astropy.utils.xml.tests.test_iterparse.VOTABLE_XML": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "astropy.utils.xml.tests.test_iterparse.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.xml.tests.test_iterparse.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.xml.tests.test_iterparse.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.xml.tests.test_iterparse.test_iterparser_over_read_simple": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "_fast_iterparse",
    "astropy.utils.xml.tests.test_iterparse.UngzipFileWrapper",
    "astropy.utils.xml.tests.test_iterparse.VOTABLE_XML",
    "astropy.utils.xml.tests.test_iterparse.zlib",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.utils.xml.tests.test_iterparse.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.xml.tests.test_iterparse.zlib": {
  "data": {
   "shadows": "zlib"
  },
  "type": "import"
 },
 "astropy.utils.xml.unescaper": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.xml.unescaper.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "astropy.utils.xml.unescaper._bytes_entities": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "astropy.utils.xml.unescaper._bytes_keys": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "astropy.utils.xml.unescaper._str_entities": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "astropy.utils.xml.unescaper._str_keys": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.utils.xml.unescaper._unescape_bytes": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "astropy.utils.xml.unescaper._bytes_entities",
    "astropy.utils.xml.unescaper._bytes_keys"
   ]
  },
  "type": "function"
 },
 "astropy.utils.xml.unescaper._unescape_str": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "astropy.utils.xml.unescaper._str_entities",
    "xml.sax.saxutils.unescape"
   ]
  },
  "type": "function"
 },
 "astropy.utils.xml.unescaper.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.xml.unescaper.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.xml.unescaper.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.xml.unescaper.saxutils": {
  "data": {
   "shadows": "xml.sax.saxutils"
  },
  "type": "import"
 },
 "astropy.utils.xml.unescaper.unescape_all": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "astropy.utils.xml.unescaper._bytes_keys",
    "astropy.utils.xml.unescaper._str_keys",
    "bytes",
    "func2use",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.utils.xml.unescaper.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.xml.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.xml.validate": {
  "data": {},
  "type": "module"
 },
 "astropy.utils.xml.validate.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.xml.validate.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.xml.validate.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.utils.xml.validate.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.xml.validate.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "astropy.utils.xml.validate.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.xml.validate.validate_schema": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "OSError",
    "TypeError",
    "astropy.utils.xml.validate.os",
    "astropy.utils.xml.validate.subprocess",
    "signal_number_to_name"
   ]
  },
  "type": "function"
 },
 "astropy.utils.xml.writer": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.utils.xml.writer.HAS_BLEACH": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "astropy.utils.xml.writer.XMLWriter": {
  "data": {
   "lineno": 47
  },
  "type": "class"
 },
 "astropy.utils.xml.writer.XMLWriter.__init__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "astropy.utils.xml.writer.xml_escape",
    "astropy.utils.xml.writer.xml_escape_cdata",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.utils.xml.writer.XMLWriter._flush": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "astropy.utils.xml.writer.textwrap"
   ]
  },
  "type": "function"
 },
 "astropy.utils.xml.writer.XMLWriter.close": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "id",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.utils.xml.writer.XMLWriter.comment": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "astropy.utils.xml.writer.XMLWriter.data": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "astropy.utils.xml.writer.XMLWriter.element": {
  "data": {
   "lineno": 298
  },
  "type": "function"
 },
 "astropy.utils.xml.writer.XMLWriter.end": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.utils.xml.writer.XMLWriter.flush": {
  "data": {
   "lineno": 309
  },
  "type": "function"
 },
 "astropy.utils.xml.writer.XMLWriter.get_indentation": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.utils.xml.writer.XMLWriter.get_indentation_spaces": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.utils.xml.writer.XMLWriter.object_attrs": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "getattr",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.utils.xml.writer.XMLWriter.start": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.utils.xml.writer.XMLWriter.tag": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "astropy.utils.xml.writer.contextlib"
   ]
  },
  "type": "function"
 },
 "astropy.utils.xml.writer.XMLWriter.xml_cleaning_method": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ValueError",
    "astropy.utils.xml.writer.HAS_BLEACH",
    "astropy.utils.xml.writer.bleach",
    "astropy.utils.xml.writer.contextlib"
   ]
  },
  "type": "function"
 },
 "astropy.utils.xml.writer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.utils.xml.writer.bleach": {
  "data": {
   "shadows": "bleach"
  },
  "type": "import"
 },
 "astropy.utils.xml.writer.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "astropy.utils.xml.writer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.utils.xml.writer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.utils.xml.writer.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "astropy.utils.xml.writer.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.utils.xml.writer.xml_escape": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "astropy.utils.xml.writer.xml_escape_cdata": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "astropy.version": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.version.datetime"
   ]
  },
  "type": "module"
 },
 "astropy.version.bugfix": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "astropy.version.compiler": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "astropy.version.cython_version": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "astropy.version.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "astropy.version.debug": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "astropy.version.githash": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "astropy.version.major": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "astropy.version.minor": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "astropy.version.release": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "astropy.version.timestamp": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "astropy.version.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.version.version": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "astropy.version_info": {
  "data": {
   "shadows": "sys.version_info"
  },
  "type": "import"
 },
 "astropy.visualization": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.hist": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.hist.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "astropy.visualization.hist.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.visualization.hist.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.visualization.hist.hist": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "dict",
    "histogram",
    "list",
    "matplotlib.pyplot.gca",
    "numpy.histogram",
    "signature"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.hist.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.visualization.hist.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "astropy.visualization.hist.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.visualization.interval": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.interval.AsymmetricPercentileInterval": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "astropy.visualization.interval.BaseInterval"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.interval.AsymmetricPercentileInterval.__init__": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "astropy.visualization.interval.AsymmetricPercentileInterval.get_limits": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.isfinite",
    "numpy.percentile",
    "numpy.random.choice"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.interval.BaseInterval": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "astropy.visualization.interval.BaseInterval.__call__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "numpy.clip",
    "numpy.subtract",
    "numpy.true_divide"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.interval.BaseInterval.get_limits": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "astropy.visualization.interval.abc"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.interval.ManualInterval": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "astropy.visualization.interval.BaseInterval"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.interval.ManualInterval.__init__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "astropy.visualization.interval.ManualInterval.get_limits": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.nanmax",
    "numpy.nanmin"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.interval.MinMaxInterval": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "astropy.visualization.interval.BaseInterval"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.interval.MinMaxInterval.get_limits": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.interval.PercentileInterval": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "astropy.visualization.interval.AsymmetricPercentileInterval"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.interval.PercentileInterval.__init__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "astropy.visualization.interval.PercentileInterval",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.interval.ZScaleInterval": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "astropy.visualization.interval.BaseInterval"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.interval.ZScaleInterval.__init__": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "astropy.visualization.interval.ZScaleInterval.get_limits": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "bool",
    "int",
    "len",
    "max",
    "min",
    "numpy.arange",
    "numpy.asarray",
    "numpy.convolve",
    "numpy.isfinite",
    "numpy.median",
    "numpy.ones",
    "numpy.poly1d",
    "numpy.polyfit",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.interval.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "astropy.visualization.interval.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "astropy.visualization.interval.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.visualization.interval.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.visualization.interval.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.visualization.lupton_rgb": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.lupton_rgb.AsinhMapping": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "astropy.visualization.lupton_rgb.Mapping"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.lupton_rgb.AsinhMapping.__init__": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "abs",
    "astropy.visualization.lupton_rgb.Mapping",
    "float",
    "numpy.arcsinh"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.lupton_rgb.AsinhMapping.map_intensity_to_uint8": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "numpy.arcsinh",
    "numpy.errstate",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.lupton_rgb.AsinhZScaleMapping": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "astropy.visualization.lupton_rgb.AsinhMapping"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.lupton_rgb.AsinhZScaleMapping.__init__": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "ZScaleInterval",
    "astropy.visualization.lupton_rgb.AsinhMapping",
    "astropy.visualization.lupton_rgb.LinearMapping",
    "astropy.visualization.lupton_rgb.compute_intensity",
    "enumerate",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.lupton_rgb.LinearMapping": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "astropy.visualization.lupton_rgb.Mapping"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.lupton_rgb.LinearMapping.__init__": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "ValueError",
    "astropy.visualization.lupton_rgb.Mapping",
    "float"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.lupton_rgb.LinearMapping.map_intensity_to_uint8": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "numpy.errstate",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.lupton_rgb.Mapping": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.lupton_rgb.Mapping.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "len",
    "numpy.asarray",
    "numpy.iinfo",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.lupton_rgb.Mapping._convert_images_to_uint8": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "enumerate",
    "numpy.errstate",
    "numpy.uint8",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.lupton_rgb.Mapping.intensity": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "astropy.visualization.lupton_rgb.compute_intensity"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.lupton_rgb.Mapping.make_rgb_image": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.dstack",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.lupton_rgb.Mapping.map_intensity_to_uint8": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.errstate"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.lupton_rgb.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "astropy.visualization.lupton_rgb.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.visualization.lupton_rgb.compute_intensity": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.lupton_rgb.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.visualization.lupton_rgb.make_lupton_rgb": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "astropy.visualization.lupton_rgb.AsinhMapping"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.lupton_rgb.matplotlib.image": {
  "data": {
   "shadows": "matplotlib.image"
  },
  "type": "import"
 },
 "astropy.visualization.lupton_rgb.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.visualization.lupton_rgb.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.visualization.lupton_rgb.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.visualization.mpl_normalize": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "isinstance",
    "matplotlib.colors.Normalize",
    "type"
   ]
  },
  "type": "module"
 },
 "astropy.visualization.mpl_normalize.ImageNormalize": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "matplotlib.colors.Normalize"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.mpl_normalize.ImageNormalize.__call__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "numpy.array",
    "numpy.clip",
    "numpy.isscalar",
    "numpy.ma.MaskedArray",
    "numpy.ma.array",
    "numpy.subtract",
    "numpy.true_divide"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.mpl_normalize.ImageNormalize.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "LinearStretch",
    "TypeError",
    "astropy.visualization.mpl_normalize.ImageNormalize",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.mpl_normalize.ImageNormalize.inverse": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "astropy.visualization.mpl_normalize.Normalize": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.mpl_normalize.Normalize.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.mpl_normalize.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "astropy.visualization.mpl_normalize.__doctest_requires__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "astropy.visualization.mpl_normalize.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.visualization.mpl_normalize.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "astropy.visualization.mpl_normalize.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "astropy.visualization.mpl_normalize.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.visualization.mpl_normalize.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.visualization.mpl_normalize.simple_norm": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "AsinhStretch",
    "AsymmetricPercentileInterval",
    "LinearStretch",
    "LogStretch",
    "ManualInterval",
    "MinMaxInterval",
    "PercentileInterval",
    "PowerStretch",
    "SqrtStretch",
    "ValueError",
    "astropy.visualization.mpl_normalize.ImageNormalize"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.mpl_style": {
  "data": {
   "symbols_in_volume": [
    "astropy.visualization.mpl_style.MATPLOTLIB_GE_1_5",
    "astropy.visualization.mpl_style.astropy_mpl_docs_style",
    "astropy.visualization.mpl_style.astropy_mpl_style_1",
    "astropy.visualization.mpl_style.color_cycle",
    "astropy.visualization.mpl_style.color_cycle_docs",
    "cycler.cycler",
    "minversion"
   ]
  },
  "type": "module"
 },
 "astropy.visualization.mpl_style.MATPLOTLIB_GE_1_5": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "astropy.visualization.mpl_style.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "astropy.visualization.mpl_style.astropy_mpl_docs_style": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "astropy.visualization.mpl_style.astropy_mpl_style": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "astropy.visualization.mpl_style.astropy_mpl_style_1": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "astropy.visualization.mpl_style.color_cycle": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "astropy.visualization.mpl_style.color_cycle_docs": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "astropy.visualization.mpl_style.cycler": {
  "data": {
   "shadows": "cycler.cycler"
  },
  "type": "import"
 },
 "astropy.visualization.scripts": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.scripts.fits2bitmap": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.scripts.fits2bitmap.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.visualization.scripts.fits2bitmap.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "astropy.visualization.scripts.fits2bitmap.cm": {
  "data": {
   "shadows": "matplotlib.cm"
  },
  "type": "import"
 },
 "astropy.visualization.scripts.fits2bitmap.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.visualization.scripts.fits2bitmap.fits2bitmap": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "astropy.visualization.scripts.fits2bitmap.os",
    "getdata",
    "int",
    "matplotlib.cm.datad",
    "matplotlib.image.imsave",
    "norm",
    "simple_norm"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.scripts.fits2bitmap.main": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "astropy.visualization.scripts.fits2bitmap.argparse",
    "astropy.visualization.scripts.fits2bitmap.fits2bitmap",
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.scripts.fits2bitmap.mimg": {
  "data": {
   "shadows": "matplotlib.image"
  },
  "type": "import"
 },
 "astropy.visualization.scripts.fits2bitmap.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.visualization.scripts.fits2bitmap.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.visualization.scripts.fits2bitmap.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.visualization.scripts.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.scripts.tests.test_fits2bitmap": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.visualization.scripts.tests.test_fits2bitmap.HAS_MATPLOTLIB": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "astropy.visualization.scripts.tests.test_fits2bitmap.TestFits2Bitmap": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "astropy.visualization.scripts.tests.test_fits2bitmap.pytest",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.scripts.tests.test_fits2bitmap.TestFits2Bitmap.setup_class": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "astropy.visualization.scripts.tests.test_fits2bitmap.TestFits2Bitmap.test_compressed_fits": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "astropy.visualization.scripts.tests.test_fits2bitmap.pytest",
    "main",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.scripts.tests.test_fits2bitmap.TestFits2Bitmap.test_exten_name": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "main",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.scripts.tests.test_fits2bitmap.TestFits2Bitmap.test_exten_num": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "main",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.scripts.tests.test_fits2bitmap.TestFits2Bitmap.test_function": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "fits2bitmap",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.scripts.tests.test_fits2bitmap.TestFits2Bitmap.test_script": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "main",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.scripts.tests.test_fits2bitmap.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "astropy.visualization.scripts.tests.test_fits2bitmap.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.visualization.scripts.tests.test_fits2bitmap.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.visualization.stretch": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.stretch.AsinhStretch": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "astropy.visualization.stretch.BaseStretch"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.stretch.AsinhStretch.__call__": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "astropy.visualization.stretch._prepare",
    "numpy.arcsinh",
    "numpy.true_divide"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.AsinhStretch.__init__": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "astropy.visualization.stretch.AsinhStretch",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.AsinhStretch.inverse": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "astropy.visualization.stretch.SinhStretch",
    "numpy.arcsinh",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.BaseStretch": {
  "data": {
   "lineno": 49
  },
  "type": "class"
 },
 "astropy.visualization.stretch.BaseStretch.__call__": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "astropy.visualization.stretch.BaseStretch.inverse": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.ContrastBiasStretch": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "astropy.visualization.stretch.BaseStretch"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.stretch.ContrastBiasStretch.__call__": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "astropy.visualization.stretch._prepare",
    "numpy.add",
    "numpy.clip",
    "numpy.multiply",
    "numpy.subtract"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.ContrastBiasStretch.__init__": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "astropy.visualization.stretch.ContrastBiasStretch",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.ContrastBiasStretch.inverse": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "astropy.visualization.stretch.InvertedContrastBiasStretch",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.HistEqStretch": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "astropy.visualization.stretch.BaseStretch"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.stretch.HistEqStretch.__call__": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "astropy.visualization.stretch._prepare",
    "numpy.interp"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.HistEqStretch.__init__": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "len",
    "numpy.linspace",
    "numpy.sort"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.HistEqStretch.inverse": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "astropy.visualization.stretch.InvertedHistEqStretch",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.InvertedContrastBiasStretch": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "astropy.visualization.stretch.BaseStretch"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.stretch.InvertedContrastBiasStretch.__call__": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "astropy.visualization.stretch._prepare",
    "numpy.add",
    "numpy.clip",
    "numpy.subtract",
    "numpy.true_divide"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.InvertedContrastBiasStretch.__init__": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "astropy.visualization.stretch.InvertedContrastBiasStretch",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.InvertedContrastBiasStretch.inverse": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "astropy.visualization.stretch.ContrastBiasStretch",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.InvertedHistEqStretch": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "astropy.visualization.stretch.BaseStretch"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.stretch.InvertedHistEqStretch.__call__": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "astropy.visualization.stretch._prepare",
    "numpy.interp"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.InvertedHistEqStretch.__init__": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "len",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.InvertedHistEqStretch.inverse": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "astropy.visualization.stretch.HistEqStretch",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.InvertedLogStretch": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "astropy.visualization.stretch.BaseStretch"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.stretch.InvertedLogStretch.__call__": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "astropy.visualization.stretch._prepare",
    "numpy.exp",
    "numpy.log",
    "numpy.multiply",
    "numpy.subtract",
    "numpy.true_divide"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.InvertedLogStretch.__init__": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "astropy.visualization.stretch.InvertedLogStretch",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.InvertedLogStretch.inverse": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "astropy.visualization.stretch.LogStretch",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.InvertedPowerDistStretch": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "astropy.visualization.stretch.BaseStretch"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.stretch.InvertedPowerDistStretch.__call__": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "astropy.visualization.stretch._logn",
    "astropy.visualization.stretch._prepare",
    "numpy.add",
    "numpy.multiply"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.InvertedPowerDistStretch.__init__": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "ValueError",
    "astropy.visualization.stretch.InvertedPowerDistStretch",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.InvertedPowerDistStretch.inverse": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "astropy.visualization.stretch.PowerDistStretch",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.LinearStretch": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "astropy.visualization.stretch.BaseStretch"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.stretch.LinearStretch.__call__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "astropy.visualization.stretch._prepare"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.LinearStretch.inverse": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "astropy.visualization.stretch.LinearStretch",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.LogStretch": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "astropy.visualization.stretch.BaseStretch"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.stretch.LogStretch.__call__": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "astropy.visualization.stretch._prepare",
    "numpy.add",
    "numpy.log",
    "numpy.multiply",
    "numpy.true_divide"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.LogStretch.__init__": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "astropy.visualization.stretch.LogStretch",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.LogStretch.inverse": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "astropy.visualization.stretch.InvertedLogStretch",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.PowerDistStretch": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "astropy.visualization.stretch.BaseStretch"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.stretch.PowerDistStretch.__call__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "astropy.visualization.stretch._prepare",
    "numpy.power",
    "numpy.subtract",
    "numpy.true_divide"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.PowerDistStretch.__init__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "ValueError",
    "astropy.visualization.stretch.PowerDistStretch",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.PowerDistStretch.inverse": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "astropy.visualization.stretch.InvertedPowerDistStretch",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.PowerStretch": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "astropy.visualization.stretch.BaseStretch"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.stretch.PowerStretch.__call__": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "astropy.visualization.stretch._prepare",
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.PowerStretch.__init__": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "astropy.visualization.stretch.PowerStretch",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.PowerStretch.inverse": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "astropy.visualization.stretch.PowerStretch",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.SinhStretch": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "astropy.visualization.stretch.BaseStretch"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.stretch.SinhStretch.__call__": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "astropy.visualization.stretch._prepare",
    "numpy.sinh",
    "numpy.true_divide"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.SinhStretch.__init__": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "astropy.visualization.stretch.SinhStretch",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.SinhStretch.inverse": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "astropy.visualization.stretch.AsinhStretch",
    "numpy.sinh",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.SqrtStretch": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "astropy.visualization.stretch.BaseStretch"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.stretch.SqrtStretch.__call__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "astropy.visualization.stretch._prepare",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.SqrtStretch.inverse": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "astropy.visualization.stretch.PowerStretch",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.SquaredStretch": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "astropy.visualization.stretch.PowerStretch"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.stretch.SquaredStretch.__init__": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "astropy.visualization.stretch.SquaredStretch",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.SquaredStretch.inverse": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "astropy.visualization.stretch.SqrtStretch",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "astropy.visualization.stretch._logn": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.true_divide"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch._prepare": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "numpy.clip"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.stretch.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.visualization.stretch.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.visualization.stretch.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.visualization.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.tests.test_histogram": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.visualization.tests.test_histogram.HAS_PLT": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "astropy.visualization.tests.test_histogram.HAS_SCIPY": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "astropy.visualization.tests.test_histogram.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_histogram.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_histogram.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_histogram.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_histogram.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_histogram.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_histogram.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_histogram.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_histogram.test_hist_autobin": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_histogram.HAS_SCIPY",
    "astropy.visualization.tests.test_histogram.pytest",
    "hist",
    "histogram",
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_histogram.test_hist_basic": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_histogram.pytest",
    "hist",
    "matplotlib.pyplot.hist",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_histogram.test_hist_specify_ax": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_histogram.pytest",
    "hist",
    "matplotlib.pyplot.subplots",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_histogram.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_interval": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.tests.test_interval.TestInterval": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.linspace",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.tests.test_interval.TestInterval.test_asymmetric_percentile": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "AsymmetricPercentileInterval",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_interval.TestInterval.test_asymmetric_percentile_nsamples": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "AsymmetricPercentileInterval",
    "NumpyRNGContext",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_interval.TestInterval.test_manual": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ManualInterval",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_interval.TestInterval.test_manual_defaults": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ManualInterval",
    "numpy.max",
    "numpy.min",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_interval.TestInterval.test_manual_defaults_with_nan": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ManualInterval",
    "numpy.copy",
    "numpy.nan",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_interval.TestInterval.test_manual_zero_limit": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ManualInterval",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_interval.TestInterval.test_minmax": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "MinMaxInterval",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_interval.TestInterval.test_percentile": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "PercentileInterval",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_interval.TestInterval2D": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_interval.TestInterval",
    "numpy.linspace"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.tests.test_interval.TestIntervalList": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_interval.TestInterval",
    "numpy.linspace"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.tests.test_interval.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_interval.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_interval.test_constant_data": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "MinMaxInterval",
    "interval",
    "interval.get_limits",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_interval.test_integers": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "MinMaxInterval",
    "TypeError",
    "astropy.visualization.tests.test_interval.pytest",
    "float",
    "int",
    "interval",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_interval.test_zscale": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ZScaleInterval",
    "list",
    "numpy.nan",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_lupton_rgb": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.visualization.tests.test_lupton_rgb.HAS_MATPLOTLIB": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "astropy.visualization.tests.test_lupton_rgb.TestLuptonRgb": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.tests.test_lupton_rgb.TestLuptonRgb.setup_method": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "Gaussian2DKernel",
    "convolve_with_noise",
    "numpy.random.seed",
    "numpy.zeros",
    "pow",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_lupton_rgb.TestLuptonRgb.setup_method.convolve_with_noise": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "convolve",
    "numpy.random.normal"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_lupton_rgb.TestLuptonRgb.test_Asinh": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_lupton_rgb.display",
    "astropy.visualization.tests.test_lupton_rgb.display_rgb",
    "astropy.visualization.tests.test_lupton_rgb.sys"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_lupton_rgb.TestLuptonRgb.test_AsinhZscale": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_lupton_rgb.display",
    "astropy.visualization.tests.test_lupton_rgb.display_rgb",
    "astropy.visualization.tests.test_lupton_rgb.sys",
    "map",
    "map.make_rgb_image"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_lupton_rgb.TestLuptonRgb.test_AsinhZscaleIntensity": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_lupton_rgb.display",
    "astropy.visualization.tests.test_lupton_rgb.display_rgb",
    "astropy.visualization.tests.test_lupton_rgb.sys",
    "map",
    "map.make_rgb_image"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_lupton_rgb.TestLuptonRgb.test_AsinhZscaleIntensityBW": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_lupton_rgb.display",
    "astropy.visualization.tests.test_lupton_rgb.display_rgb",
    "astropy.visualization.tests.test_lupton_rgb.sys",
    "map",
    "map.make_rgb_image"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_lupton_rgb.TestLuptonRgb.test_AsinhZscaleIntensityPedestal": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_lupton_rgb.display",
    "astropy.visualization.tests.test_lupton_rgb.display_rgb",
    "astropy.visualization.tests.test_lupton_rgb.sys",
    "map",
    "map.make_rgb_image"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_lupton_rgb.TestLuptonRgb.test_different_shapes_asserts": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "ValueError",
    "astropy.visualization.tests.test_lupton_rgb.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_lupton_rgb.TestLuptonRgb.test_linear": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_lupton_rgb.display",
    "astropy.visualization.tests.test_lupton_rgb.display_rgb",
    "astropy.visualization.tests.test_lupton_rgb.sys",
    "map",
    "map.make_rgb_image"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_lupton_rgb.TestLuptonRgb.test_linear_min_max": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_lupton_rgb.display",
    "astropy.visualization.tests.test_lupton_rgb.display_rgb",
    "astropy.visualization.tests.test_lupton_rgb.sys",
    "map",
    "map.make_rgb_image"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_lupton_rgb.TestLuptonRgb.test_make_rgb": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_lupton_rgb.os",
    "astropy.visualization.tests.test_lupton_rgb.pytest",
    "astropy.visualization.tests.test_lupton_rgb.saturate",
    "astropy.visualization.tests.test_lupton_rgb.tempfile"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_lupton_rgb.TestLuptonRgb.test_make_rgb_saturated_fix": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_lupton_rgb.pytest",
    "astropy.visualization.tests.test_lupton_rgb.saturate",
    "astropy.visualization.tests.test_lupton_rgb.tempfile"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_lupton_rgb.TestLuptonRgb.test_saturated": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_lupton_rgb.display",
    "astropy.visualization.tests.test_lupton_rgb.display_rgb",
    "astropy.visualization.tests.test_lupton_rgb.pytest",
    "astropy.visualization.tests.test_lupton_rgb.saturate",
    "astropy.visualization.tests.test_lupton_rgb.sys",
    "numpy.isfinite"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_lupton_rgb.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_lupton_rgb.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_lupton_rgb.display": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "astropy.visualization.tests.test_lupton_rgb.display_rgb": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "matplotlib.pyplot",
    "matplotlib.pyplot.imshow",
    "matplotlib.pyplot.show",
    "matplotlib.pyplot.title"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_lupton_rgb.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_lupton_rgb.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_lupton_rgb.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_lupton_rgb.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_lupton_rgb.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_lupton_rgb.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_lupton_rgb.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_lupton_rgb.random_array": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_lupton_rgb.saturate": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_lupton_rgb.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_lupton_rgb.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_lupton_rgb.test_compute_intensity_1_float": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_lupton_rgb.random_array",
    "numpy.float64",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_lupton_rgb.test_compute_intensity_1_uint": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_lupton_rgb.random_array",
    "numpy.testing.assert_equal",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_lupton_rgb.test_compute_intensity_3_float": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_lupton_rgb.random_array",
    "numpy.float64",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_lupton_rgb.test_compute_intensity_3_uint": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_lupton_rgb.random_array",
    "numpy.testing.assert_equal",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_lupton_rgb.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_norm": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.visualization.tests.test_norm.DATA2",
    "numpy.arange",
    "numpy.linspace"
   ]
  },
  "type": "module"
 },
 "astropy.visualization.tests.test_norm.DATA": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.visualization.tests.test_norm.DATA2": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "astropy.visualization.tests.test_norm.DATA2SCL": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.visualization.tests.test_norm.HAS_MATPLOTLIB": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "astropy.visualization.tests.test_norm.TestImageScaling": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_norm.pytest",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.tests.test_norm.TestImageScaling.test_asinh": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_norm.DATA2",
    "astropy.visualization.tests.test_norm.DATA2SCL",
    "norm",
    "numpy.arcsinh",
    "numpy.testing.assert_allclose",
    "simple_norm"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_norm.TestImageScaling.test_invalid_stretch": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "ValueError",
    "astropy.visualization.tests.test_norm.DATA2",
    "astropy.visualization.tests.test_norm.pytest",
    "simple_norm"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_norm.TestImageScaling.test_linear": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_norm.DATA2",
    "astropy.visualization.tests.test_norm.DATA2SCL",
    "norm",
    "numpy.testing.assert_allclose",
    "simple_norm"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_norm.TestImageScaling.test_log": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_norm.DATA2",
    "astropy.visualization.tests.test_norm.DATA2SCL",
    "norm",
    "numpy.log10",
    "numpy.testing.assert_allclose",
    "simple_norm"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_norm.TestImageScaling.test_min": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_norm.DATA2",
    "norm",
    "numpy.testing.assert_allclose",
    "simple_norm"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_norm.TestImageScaling.test_percent": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_norm.DATA2",
    "astropy.visualization.tests.test_norm.DATA2SCL",
    "norm",
    "norm2",
    "numpy.testing.assert_allclose",
    "simple_norm"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_norm.TestImageScaling.test_power": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_norm.DATA2",
    "astropy.visualization.tests.test_norm.DATA2SCL",
    "norm",
    "numpy.testing.assert_allclose",
    "simple_norm"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_norm.TestImageScaling.test_sqrt": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_norm.DATA2",
    "astropy.visualization.tests.test_norm.DATA2SCL",
    "norm",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "simple_norm"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_norm.TestNormalize": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_norm.pytest",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.tests.test_norm.TestNormalize.test_clip": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ImageNormalize",
    "ManualInterval",
    "SqrtStretch",
    "astropy.visualization.tests.test_norm.DATA",
    "norm",
    "norm2",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_norm.TestNormalize.test_implicit_autoscale": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ImageNormalize",
    "ManualInterval",
    "SqrtStretch",
    "astropy.visualization.tests.test_norm.DATA",
    "norm",
    "norm.vmax",
    "norm.vmin",
    "norm2",
    "numpy.max",
    "numpy.min",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_norm.TestNormalize.test_invalid_interval": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ImageNormalize",
    "TypeError",
    "astropy.visualization.tests.test_norm.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_norm.TestNormalize.test_invalid_stretch": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ImageNormalize",
    "TypeError",
    "astropy.visualization.tests.test_norm.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_norm.TestNormalize.test_masked_clip": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ImageNormalize",
    "ManualInterval",
    "SqrtStretch",
    "astropy.visualization.tests.test_norm.DATA",
    "norm",
    "norm2",
    "numpy.ma.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_norm.TestNormalize.test_masked_noclip": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ImageNormalize",
    "ManualInterval",
    "SqrtStretch",
    "astropy.visualization.tests.test_norm.DATA",
    "norm",
    "norm.inverse",
    "norm2",
    "numpy.ma.array",
    "numpy.nan",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_norm.TestNormalize.test_noclip": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ImageNormalize",
    "ManualInterval",
    "SqrtStretch",
    "astropy.visualization.tests.test_norm.DATA",
    "norm",
    "norm.inverse",
    "norm2",
    "numpy.nan",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_norm.TestNormalize.test_scalar": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ImageNormalize",
    "ManualInterval",
    "SqrtStretch",
    "norm",
    "norm2",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_norm.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_norm.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_norm.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_norm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_norm.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_norm.test_normalize_error_message": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ImageNormalize",
    "ImportError",
    "astropy.visualization.tests.test_norm.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_stretch": {
  "data": {
   "symbols_in_volume": [
    "AsinhStretch",
    "ContrastBiasStretch",
    "HistEqStretch",
    "LinearStretch",
    "LogStretch",
    "PowerDistStretch",
    "PowerStretch",
    "SinhStretch",
    "SqrtStretch",
    "SquaredStretch",
    "astropy.visualization.tests.test_stretch.DATA",
    "astropy.visualization.tests.test_stretch.RESULTS",
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "astropy.visualization.tests.test_stretch.DATA": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "astropy.visualization.tests.test_stretch.RESULTS": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "astropy.visualization.tests.test_stretch.TestStretch": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.tests.test_stretch.TestStretch.test_chaining": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "PowerStretch",
    "SqrtStretch",
    "astropy.visualization.tests.test_stretch.DATA",
    "numpy.testing.assert_allclose",
    "stretch_1",
    "stretch_1.inverse",
    "stretch_2",
    "stretch_3"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_stretch.TestStretch.test_clip": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_stretch.DATA",
    "astropy.visualization.tests.test_stretch.RESULTS",
    "astropy.visualization.tests.test_stretch.pytest",
    "numpy.clip",
    "numpy.testing.assert_allclose",
    "stretch"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_stretch.TestStretch.test_clip_ndimensional": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_stretch.DATA",
    "astropy.visualization.tests.test_stretch.RESULTS",
    "astropy.visualization.tests.test_stretch.pytest",
    "numpy.clip",
    "numpy.testing.assert_allclose",
    "stretch"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_stretch.TestStretch.test_double_inverse": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_stretch.DATA",
    "astropy.visualization.tests.test_stretch.RESULTS",
    "astropy.visualization.tests.test_stretch.pytest",
    "numpy.testing.assert_allclose",
    "stretch",
    "stretch.inverse.inverse"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_stretch.TestStretch.test_inplace": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_stretch.DATA",
    "astropy.visualization.tests.test_stretch.RESULTS",
    "astropy.visualization.tests.test_stretch.pytest",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "stretch"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_stretch.TestStretch.test_inplace_roundtrip": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_stretch.DATA",
    "astropy.visualization.tests.test_stretch.RESULTS",
    "astropy.visualization.tests.test_stretch.pytest",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "stretch",
    "stretch.inverse"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_stretch.TestStretch.test_inverted": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "PowerStretch",
    "SqrtStretch",
    "astropy.visualization.tests.test_stretch.DATA",
    "numpy.testing.assert_allclose",
    "stretch_1",
    "stretch_2"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_stretch.TestStretch.test_no_clip": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_stretch.DATA",
    "astropy.visualization.tests.test_stretch.RESULTS",
    "astropy.visualization.tests.test_stretch.pytest",
    "numpy.testing.assert_allclose",
    "stretch"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_stretch.TestStretch.test_round_trip": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_stretch.DATA",
    "astropy.visualization.tests.test_stretch.RESULTS",
    "astropy.visualization.tests.test_stretch.pytest",
    "numpy.testing.assert_allclose",
    "stretch",
    "stretch.inverse"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_stretch.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_stretch.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_stretch.test_clip_invalid": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "SqrtStretch",
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "stretch"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_units": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.visualization.tests.test_units.HAS_PLT": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "astropy.visualization.tests.test_units.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_units.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_units.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_units.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_units.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_units.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_units.test_incompatible_units": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_units.pytest",
    "matplotlib.pyplot.clf",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.plot",
    "quantity_support"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_units.test_units": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "astropy.visualization.tests.test_units.io",
    "astropy.visualization.tests.test_units.pytest",
    "matplotlib.pyplot.clf",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.fill_between",
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.plot",
    "matplotlib.pyplot.savefig",
    "quantity_support"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.tests.test_units.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.visualization.tests.test_units.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.visualization.transform": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.transform.BaseTransform": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.transform.BaseTransform.__add__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "astropy.visualization.transform.CompositeTransform"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.transform.CompositeTransform": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "astropy.visualization.transform.BaseTransform"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.transform.CompositeTransform.__call__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "astropy.visualization.transform.CompositeTransform.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "astropy.visualization.transform.CompositeTransform",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.transform.CompositeTransform.inverse": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "astropy.visualization.transform.CompositeTransform",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.transform.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "astropy.visualization.transform.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.visualization.transform.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.visualization.units": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.units.__doctest_skip__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "astropy.visualization.units.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.visualization.units.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.visualization.units.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.visualization.units.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.visualization.units.quantity_support": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "MplQuantityConverter"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.units.quantity_support.MplQuantityConverter": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "matplotlib.units.ConversionInterface"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.units.quantity_support.MplQuantityConverter.__enter__": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "astropy.visualization.units.quantity_support.MplQuantityConverter.__exit__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "astropy.visualization.units.units",
    "matplotlib.units.registry"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.units.quantity_support.MplQuantityConverter.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "astropy.visualization.units.units",
    "matplotlib.units.registry"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.units.quantity_support.MplQuantityConverter.axisinfo": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "astropy.visualization.units.units",
    "format",
    "matplotlib.ticker.AutoLocator",
    "matplotlib.ticker.FormatStrFormatter",
    "matplotlib.ticker.FuncFormatter",
    "matplotlib.ticker.MultipleLocator",
    "matplotlib.units.AxisInfo",
    "numpy.pi",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.units.quantity_support.MplQuantityConverter.convert": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "astropy.visualization.units.units",
    "isinstance",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.units.quantity_support.MplQuantityConverter.default_units": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "hasattr",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.units.quantity_support.rad_fn": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "int",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.units.ticker": {
  "data": {
   "shadows": "matplotlib.ticker"
  },
  "type": "import"
 },
 "astropy.visualization.units.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.visualization.units.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.visualization.units.units": {
  "data": {
   "shadows": "matplotlib.units"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.visualization.wcsaxes.Conf",
    "astropy.visualization.wcsaxes.pytest"
   ]
  },
  "type": "module"
 },
 "astropy.visualization.wcsaxes.Conf": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes._config": {
  "data": {
   "shadows": "config"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.axislabels": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.wcsaxes.axislabels.AxisLabels": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "matplotlib.text.Text"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes.axislabels.AxisLabels.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.axislabels.AxisLabels",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.axislabels.AxisLabels.draw": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.axislabels.AxisLabels",
    "isinstance",
    "len",
    "matplotlib.transforms.Bbox.union",
    "numpy.cos",
    "numpy.cumsum",
    "numpy.diff",
    "numpy.hstack",
    "numpy.interp",
    "numpy.radians",
    "numpy.searchsorted",
    "numpy.sin",
    "numpy.sqrt",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.axislabels.AxisLabels.get_minpad": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.axislabels.AxisLabels.get_visible_axes": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.axislabels.AxisLabels.set_minpad": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.axislabels.AxisLabels.set_visible_axes": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.axislabels.Text": {
  "data": {
   "shadows": "matplotlib.text.Text"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.axislabels.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.axislabels.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.axislabels.mtransforms": {
  "data": {
   "shadows": "matplotlib.transforms"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.axislabels.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.axislabels.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.conf": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.Affine2D": {
  "data": {
   "shadows": "matplotlib.transforms.Affine2D"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "AxisLabels",
    "TickLabels",
    "Ticks",
    "matplotlib.rcParams",
    "matplotlib.rcParams.get",
    "matplotlib.transforms.Affine2D",
    "matplotlib.transforms.ScaledTranslation"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper._compute_ticks": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.coordinate_helpers.wrap_angle_at",
    "dict",
    "len",
    "numpy.allclose",
    "numpy.append",
    "numpy.errstate",
    "numpy.hstack",
    "numpy.nonzero"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper._draw_axislabels": {
  "data": {
   "lineno": 469
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper._draw_grid": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "matplotlib.patches.PathPatch"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper._draw_ticks": {
  "data": {
   "lineno": 459
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper._get_gridline": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "get_gridline_path",
    "get_lon_lat_path"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper._update_grid_contour": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.coordinate_helpers.wrap_angle_at",
    "hasattr",
    "len",
    "numpy.abs",
    "numpy.diff",
    "numpy.nan",
    "numpy.sort"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper._update_grid_lines": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.linspace",
    "numpy.repeat",
    "numpy.zeros",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper._update_ticks": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.coordinate_helpers.wrap_angle_at",
    "numpy.arctan2",
    "numpy.degrees",
    "numpy.errstate",
    "numpy.hstack",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper.display_minor_ticks": {
  "data": {
   "lineno": 661
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper.format_coord": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "AngleFormatterLocator",
    "astropy.visualization.wcsaxes.coordinate_helpers.wrap_angle_at",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper.formatter": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper.get_axislabel": {
  "data": {
   "lineno": 397
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper.get_minor_frequency": {
  "data": {
   "lineno": 672
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper.grid": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper.locator": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper.set_axislabel": {
  "data": {
   "lineno": 378
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper.set_axislabel_position": {
  "data": {
   "lineno": 408
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper.set_coord_type": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "AngleFormatterLocator",
    "NotImplementedError",
    "ScalarFormatterLocator",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper.set_format_unit": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "TypeError",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper.set_major_formatter": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "isinstance",
    "matplotlib.ticker.Formatter"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper.set_minor_frequency": {
  "data": {
   "lineno": 675
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper.set_separator": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "AngleFormatterLocator",
    "TypeError",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper.set_ticklabel": {
  "data": {
   "lineno": 339
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper.set_ticklabel_position": {
  "data": {
   "lineno": 352
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper.set_ticklabel_visible": {
  "data": {
   "lineno": 366
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper.set_ticks": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "ValueError",
    "sum"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper.set_ticks_position": {
  "data": {
   "lineno": 313
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.CoordinateHelper.set_ticks_visible": {
  "data": {
   "lineno": 327
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.Formatter": {
  "data": {
   "shadows": "matplotlib.ticker.Formatter"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.PathPatch": {
  "data": {
   "shadows": "matplotlib.patches.PathPatch"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.ScaledTranslation": {
  "data": {
   "shadows": "matplotlib.transforms.ScaledTranslation"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.rcParams": {
  "data": {
   "shadows": "matplotlib.rcParams"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.coordinate_helpers.wrap_angle_at": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.errstate",
    "numpy.mod"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_range": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.wcsaxes.coordinate_range.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.coordinate_range.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.coordinate_range.find_coordinate_range": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "RuntimeWarning",
    "astropy.visualization.wcsaxes.coordinate_range.warnings",
    "astropy.visualization.wcsaxes.coordinate_range.wrap_180",
    "enumerate",
    "int",
    "max",
    "min",
    "numpy.abs",
    "numpy.any",
    "numpy.errstate",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.nanmax",
    "numpy.nanmin",
    "numpy.sign",
    "numpy.spacing",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinate_range.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.coordinate_range.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.coordinate_range.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.coordinate_range.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.coordinate_range.wrap_180": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.errstate"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinates_map": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.wcsaxes.coordinates_map.CoordinatesMap": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes.coordinates_map.CoordinatesMap.__getitem__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinates_map.CoordinatesMap.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "CoordinateHelper",
    "IndexError",
    "ValueError",
    "WCSPixel2WorldTransform",
    "coord_type_from_ctype",
    "frame_class",
    "len",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinates_map.CoordinatesMap.__iter__": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinates_map.CoordinatesMap.get_coord_range": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "find_coordinate_range"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinates_map.CoordinatesMap.grid": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinates_map.CoordinatesMap.set_visible": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.coordinates_map.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.coordinates_map.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.coordinates_map.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.core": {
  "data": {
   "symbols_in_volume": [
    "WCS",
    "astropy.visualization.wcsaxes.core.IDENTITY"
   ]
  },
  "type": "module"
 },
 "astropy.visualization.wcsaxes.core.Affine2D": {
  "data": {
   "shadows": "matplotlib.transforms.Affine2D"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.core.Axes": {
  "data": {
   "shadows": "matplotlib.axes.Axes"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.core.Bbox": {
  "data": {
   "shadows": "matplotlib.transforms.Bbox"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.core.FLIP_TOP_BOTTOM": {
  "data": {
   "shadows": "PIL.Image.FLIP_TOP_BOTTOM"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.core.IDENTITY": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "astropy.visualization.wcsaxes.core.Image": {
  "data": {
   "shadows": "PIL.Image.Image"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.core.Transform": {
  "data": {
   "shadows": "matplotlib.transforms.Transform"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.core.VISUAL_PROPERTIES": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.visualization.wcsaxes.core.WCSAxes": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "matplotlib.axes.Axes"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes.core.WCSAxes.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.core.WCSAxes",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.core.WCSAxes._display_world_coords": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.core.WCSAxes._get_transform_no_transdata": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "CoordinateTransform",
    "ValueError",
    "WCS",
    "WCSPixel2WorldTransform",
    "WCSWorld2PixelTransform",
    "isinstance",
    "matplotlib.transforms.Affine2D",
    "matplotlib.transforms.Transform",
    "wcs_to_celestial_frame"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.core.WCSAxes._hide_parent_artists": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.core.WCSAxes._set_cursor_prefs": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.core.WCSAxes.draw": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.core.WCSAxes",
    "locator",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.core.WCSAxes.get_coords_overlay": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "CoordinatesMap",
    "WCS",
    "get_coord_meta",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.core.WCSAxes.get_tightbbox": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "matplotlib.transforms.Bbox.union"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.core.WCSAxes.get_transform": {
  "data": {
   "lineno": 398
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.core.WCSAxes.get_xlabel": {
  "data": {
   "lineno": 366
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.core.WCSAxes.get_ylabel": {
  "data": {
   "lineno": 369
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.core.WCSAxes.grid": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.core.WCSAxes.imshow": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ImportError",
    "PIL.Image.FLIP_TOP_BOTTOM",
    "PIL.Image.Image",
    "ValueError",
    "astropy.visualization.wcsaxes.core.WCSAxes",
    "hasattr",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.core.WCSAxes.plot_coord": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "astropy.visualization.wcsaxes.core.WCSAxes",
    "isinstance",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.core.WCSAxes.reset_wcs": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "CoordinatesMap",
    "astropy.visualization.wcsaxes.core.IDENTITY",
    "hasattr",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.core.WCSAxes.set_xlabel": {
  "data": {
   "lineno": 360
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.core.WCSAxes.set_ylabel": {
  "data": {
   "lineno": 363
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.core.WCSAxesSubplot": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.core.WCSAxes",
    "matplotlib.axes.subplot_class_factory"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes.core.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "astropy.visualization.wcsaxes.core.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.core.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.core.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.core.subplot_class_factory": {
  "data": {
   "shadows": "matplotlib.axes.subplot_class_factory"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.formatter_locator": {
  "data": {
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.formatter_locator.re"
   ]
  },
  "type": "module"
 },
 "astropy.visualization.wcsaxes.formatter_locator.AngleFormatterLocator": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.formatter_locator.BaseFormatterLocator"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes.formatter_locator.AngleFormatterLocator.__init__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.formatter_locator.AngleFormatterLocator",
    "format",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.formatter_locator.AngleFormatterLocator.base_spacing": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.formatter_locator.AngleFormatterLocator.format": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "astropy.visualization.wcsaxes.formatter_locator.DDEC_RE",
    "astropy.visualization.wcsaxes.formatter_locator.DMIN_RE",
    "astropy.visualization.wcsaxes.formatter_locator.DMS_RE",
    "astropy.visualization.wcsaxes.formatter_locator.DSEC_RE",
    "astropy.visualization.wcsaxes.formatter_locator.HMS_RE",
    "astropy.visualization.wcsaxes.formatter_locator.warnings",
    "format.setter",
    "len",
    "max",
    "numpy.round",
    "round"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.formatter_locator.AngleFormatterLocator.formatter": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "Angle",
    "TypeError",
    "int",
    "isinstance",
    "len",
    "matplotlib.rcParams",
    "numpy.floor",
    "numpy.log10"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.formatter_locator.AngleFormatterLocator.locator": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "abs",
    "float",
    "select_step_degree",
    "select_step_hour"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.formatter_locator.AngleFormatterLocator.sep": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.formatter_locator.AngleFormatterLocator.spacing": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "TypeError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.formatter_locator.BaseFormatterLocator": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes.formatter_locator.BaseFormatterLocator.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "format"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.formatter_locator.BaseFormatterLocator._locate_values": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.ceil",
    "numpy.floor",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.formatter_locator.BaseFormatterLocator.minor_locator": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.delete",
    "numpy.s_",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.formatter_locator.BaseFormatterLocator.number": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.formatter_locator.BaseFormatterLocator.spacing": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.formatter_locator.BaseFormatterLocator.values": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "TypeError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.formatter_locator.DDEC_RE": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "astropy.visualization.wcsaxes.formatter_locator.DMIN_RE": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "astropy.visualization.wcsaxes.formatter_locator.DMS_RE": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.visualization.wcsaxes.formatter_locator.DSEC_RE": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "astropy.visualization.wcsaxes.formatter_locator.HMS_RE": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "astropy.visualization.wcsaxes.formatter_locator.SCAL_RE": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "astropy.visualization.wcsaxes.formatter_locator.ScalarFormatterLocator": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.formatter_locator.BaseFormatterLocator"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes.formatter_locator.ScalarFormatterLocator.__init__": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.formatter_locator.ScalarFormatterLocator",
    "format",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.formatter_locator.ScalarFormatterLocator.base_spacing": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.formatter_locator.ScalarFormatterLocator.format": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "astropy.visualization.wcsaxes.formatter_locator.SCAL_RE",
    "astropy.visualization.wcsaxes.formatter_locator.warnings",
    "format.setter",
    "len",
    "max",
    "numpy.round",
    "round"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.formatter_locator.ScalarFormatterLocator.format_unit": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "TypeError",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.formatter_locator.ScalarFormatterLocator.formatter": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.floor",
    "numpy.log10",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.formatter_locator.ScalarFormatterLocator.locator": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "abs",
    "float",
    "select_step_scalar"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.formatter_locator.ScalarFormatterLocator.spacing": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "TypeError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.formatter_locator.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.formatter_locator.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.formatter_locator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.formatter_locator.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.formatter_locator.rcParams": {
  "data": {
   "shadows": "matplotlib.rcParams"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.formatter_locator.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.formatter_locator.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.formatter_locator.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.frame": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.wcsaxes.frame.BaseFrame": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.frame.abc",
    "collections.OrderedDict"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes.frame.BaseFrame.__init__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.frame.BaseFrame",
    "astropy.visualization.wcsaxes.frame.Spine",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.frame.BaseFrame._update_patch_path": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "matplotlib.lines.Path",
    "numpy.hstack",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.frame.BaseFrame.draw": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "matplotlib.lines.Line2D"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.frame.BaseFrame.get_color": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.frame.BaseFrame.get_linewidth": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.frame.BaseFrame.origin": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.frame.BaseFrame.patch": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "matplotlib.patches.PathPatch",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.frame.BaseFrame.sample": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.frame.Spine",
    "collections.OrderedDict",
    "numpy.array",
    "numpy.interp",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.frame.BaseFrame.set_color": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.frame.BaseFrame.set_linewidth": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.frame.BaseFrame.transform": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.frame.BaseFrame.update_spines": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "NotImplementedError",
    "astropy.visualization.wcsaxes.frame.abc"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.frame.EllipticalFrame": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.frame.BaseFrame"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes.frame.EllipticalFrame._update_patch_path": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "matplotlib.lines.Path"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.frame.EllipticalFrame.draw": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "matplotlib.lines.Line2D"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.frame.EllipticalFrame.update_spines": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cos",
    "numpy.linspace",
    "numpy.pi",
    "numpy.repeat",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.frame.Line2D": {
  "data": {
   "shadows": "matplotlib.lines.Line2D"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.frame.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.frame.Path": {
  "data": {
   "shadows": "matplotlib.lines.Path"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.frame.PathPatch": {
  "data": {
   "shadows": "matplotlib.patches.PathPatch"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.frame.RectangularFrame": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.frame.BaseFrame"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes.frame.RectangularFrame.update_spines": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.frame.Spine": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes.frame.Spine.__init__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.frame.Spine._update_normal": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.arctan2",
    "numpy.degrees"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.frame.Spine.data": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.frame.Spine.pixel": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.frame.Spine.world": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.frame.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "astropy.visualization.wcsaxes.frame.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.frame.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.frame.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.frame.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.frame.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.grid_paths": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.wcsaxes.grid_paths.DISCONT_FACTOR": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "astropy.visualization.wcsaxes.grid_paths.Path": {
  "data": {
   "shadows": "matplotlib.lines.Path"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.grid_paths.ROUND_TRIP_TOL": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "astropy.visualization.wcsaxes.grid_paths.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.grid_paths.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.grid_paths.get_gridline_path": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "matplotlib.lines.Path",
    "matplotlib.lines.Path.LINETO",
    "matplotlib.lines.Path.MOVETO",
    "numpy.isnan",
    "numpy.uint8",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.grid_paths.get_lon_lat_path": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "angular_separation",
    "astropy.visualization.wcsaxes.grid_paths.DISCONT_FACTOR",
    "astropy.visualization.wcsaxes.grid_paths.ROUND_TRIP_TOL",
    "matplotlib.lines.Path",
    "matplotlib.lines.Path.LINETO",
    "matplotlib.lines.Path.MOVETO",
    "numpy.abs",
    "numpy.errstate",
    "numpy.isnan",
    "numpy.pi",
    "numpy.radians",
    "numpy.sqrt",
    "numpy.uint8",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.grid_paths.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.grid_paths.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.patches": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.wcsaxes.patches.Polygon": {
  "data": {
   "shadows": "matplotlib.patches.Polygon"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.patches.SphericalCircle": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "matplotlib.patches.Polygon"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes.patches.SphericalCircle.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.patches.SphericalCircle",
    "astropy.visualization.wcsaxes.patches._rotate_polygon",
    "numpy.array",
    "numpy.linspace",
    "numpy.pi",
    "numpy.repeat",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.patches.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "astropy.visualization.wcsaxes.patches._rotate_polygon": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "UnitSphericalRepresentation",
    "UnitSphericalRepresentation.from_cartesian",
    "matrix_product",
    "numpy.pi",
    "rotation_matrix"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.patches.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.patches.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.patches.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.patches.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.patches.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.wcsaxes.tests.datasets": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.wcsaxes.tests.datasets.MAX_RETRIES": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "astropy.visualization.wcsaxes.tests.datasets.TIME_BETWEEN_RETRIES": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.visualization.wcsaxes.tests.datasets.URL": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "astropy.visualization.wcsaxes.tests.datasets.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "astropy.visualization.wcsaxes.tests.datasets.fetch_bolocam_hdu": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.tests.datasets.fetch_hdu"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.datasets.fetch_hdu": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Exception",
    "astropy.visualization.wcsaxes.tests.datasets.MAX_RETRIES",
    "astropy.visualization.wcsaxes.tests.datasets.TIME_BETWEEN_RETRIES",
    "astropy.visualization.wcsaxes.tests.datasets.URL",
    "astropy.visualization.wcsaxes.tests.datasets.time",
    "download_file",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.datasets.fetch_l1448_co_hdu": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.tests.datasets.fetch_hdu"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.datasets.fetch_msx_hdu": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.tests.datasets.fetch_hdu"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.datasets.fetch_rosat_hdu": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.tests.datasets.fetch_hdu"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.datasets.fetch_twoMASS_k_hdu": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.tests.datasets.fetch_hdu"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.datasets.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.setup_package": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.wcsaxes.tests.setup_package.get_package_data": {
  "data": {
   "lineno": 1
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_coordinate_helpers": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.wcsaxes.tests.test_coordinate_helpers.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_coordinate_helpers.test_getaxislabel": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "WCSAxes",
    "matplotlib.pyplot.figure"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_display_world_coordinates": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.wcsaxes.tests.test_display_world_coordinates.KeyEvent": {
  "data": {
   "shadows": "matplotlib.backend_bases.KeyEvent"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_display_world_coordinates.TestDisplayWorldCoordinate": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes.tests.test_display_world_coordinates.TestDisplayWorldCoordinate.test_cube_coords": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "WCS",
    "WCSAxes",
    "matplotlib.backend_bases.KeyEvent",
    "matplotlib.pyplot.figure"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_display_world_coordinates.TestDisplayWorldCoordinate.test_overlay_coords": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "FK5",
    "Time",
    "WCS",
    "WCSAxes",
    "matplotlib.backend_bases.KeyEvent",
    "matplotlib.pyplot.figure"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_display_world_coordinates.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.TestAngleFormatterLocator": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.TestAngleFormatterLocator.test_base_spacing": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "AngleFormatterLocator",
    "astropy.visualization.wcsaxes.tests.test_formatter_locator.pytest",
    "format"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.TestAngleFormatterLocator.test_format": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "AngleFormatterLocator",
    "astropy.visualization.wcsaxes.tests.test_formatter_locator.pytest",
    "format"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.TestAngleFormatterLocator.test_formatter_no_format": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "AngleFormatterLocator",
    "astropy.visualization.wcsaxes.tests.test_formatter_locator.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.TestAngleFormatterLocator.test_incorrect_spacing": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "AngleFormatterLocator",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.TestAngleFormatterLocator.test_invalid_formats": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "AngleFormatterLocator",
    "ValueError",
    "astropy.visualization.wcsaxes.tests.test_formatter_locator.pytest",
    "format"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.TestAngleFormatterLocator.test_latex_format": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "AngleFormatterLocator",
    "matplotlib.rc_context"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.TestAngleFormatterLocator.test_minor_locator": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "AngleFormatterLocator",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.TestAngleFormatterLocator.test_no_options": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "AngleFormatterLocator"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.TestAngleFormatterLocator.test_number": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "AngleFormatterLocator",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.TestAngleFormatterLocator.test_separator": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "AngleFormatterLocator",
    "astropy.visualization.wcsaxes.tests.test_formatter_locator.pytest",
    "format"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.TestAngleFormatterLocator.test_spacing": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "AngleFormatterLocator",
    "TypeError",
    "astropy.visualization.wcsaxes.tests.test_formatter_locator.pytest",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.TestAngleFormatterLocator.test_too_many_options": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "AngleFormatterLocator",
    "ValueError",
    "astropy.visualization.wcsaxes.tests.test_formatter_locator.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.TestAngleFormatterLocator.test_values": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "AngleFormatterLocator",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.TestScalarFormatterLocator": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.TestScalarFormatterLocator.test_base_spacing": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "ScalarFormatterLocator",
    "astropy.visualization.wcsaxes.tests.test_formatter_locator.pytest",
    "format"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.TestScalarFormatterLocator.test_format": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "ScalarFormatterLocator",
    "astropy.visualization.wcsaxes.tests.test_formatter_locator.pytest",
    "format"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.TestScalarFormatterLocator.test_format_unit": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "ScalarFormatterLocator",
    "astropy.visualization.wcsaxes.tests.test_formatter_locator.pytest",
    "format"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.TestScalarFormatterLocator.test_incorrect_spacing": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "ScalarFormatterLocator",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.TestScalarFormatterLocator.test_invalid_formats": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "ScalarFormatterLocator",
    "ValueError",
    "astropy.visualization.wcsaxes.tests.test_formatter_locator.pytest",
    "format"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.TestScalarFormatterLocator.test_minor_locator": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "ScalarFormatterLocator",
    "numpy.testing.assert_almost_equal",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.TestScalarFormatterLocator.test_no_options": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "ScalarFormatterLocator"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.TestScalarFormatterLocator.test_number": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "ScalarFormatterLocator",
    "numpy.linspace",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.TestScalarFormatterLocator.test_spacing": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "ScalarFormatterLocator",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.TestScalarFormatterLocator.test_too_many_options": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "ScalarFormatterLocator",
    "ValueError",
    "astropy.visualization.wcsaxes.tests.test_formatter_locator.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.TestScalarFormatterLocator.test_values": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "ScalarFormatterLocator",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.rc_context": {
  "data": {
   "shadows": "matplotlib.rc_context"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_formatter_locator.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_frame": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.wcsaxes.tests.test_frame.HexagonalFrame": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes.tests.test_frame.HexagonalFrame.update_spines": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_frame.TestFrame": {
  "data": {
   "lineno": 38
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes.tests.test_frame.TestFrame.test_copy_frame_properties_change_wcs": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "WCSAxes",
    "matplotlib.pyplot.figure"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_frame.TestFrame.test_custom_frame": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "WCS",
    "WCSAxes",
    "astropy.visualization.wcsaxes.tests.test_frame.HexagonalFrame",
    "astropy.visualization.wcsaxes.tests.test_frame.pytest",
    "matplotlib.pyplot.cm.gist_heat",
    "matplotlib.pyplot.figure",
    "numpy.ones",
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_frame.TestFrame.test_update_clip_path_change_wcs": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "WCSAxes",
    "astropy.visualization.wcsaxes.tests.test_frame.pytest",
    "matplotlib.pyplot.figure",
    "numpy.zeros",
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_frame.TestFrame.test_update_clip_path_nonrectangular": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "WCSAxes",
    "astropy.visualization.wcsaxes.tests.test_frame.HexagonalFrame",
    "astropy.visualization.wcsaxes.tests.test_frame.pytest",
    "matplotlib.pyplot.figure",
    "numpy.zeros",
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_frame.TestFrame.test_update_clip_path_rectangular": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "WCSAxes",
    "astropy.visualization.wcsaxes.tests.test_frame.pytest",
    "matplotlib.pyplot.figure",
    "numpy.zeros",
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_frame.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_frame.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_frame.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_images": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.wcsaxes.tests.test_images.BaseImageTests": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes.tests.test_images.BaseImageTests.setup_class": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.tests.test_images.os",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_images.Circle": {
  "data": {
   "shadows": "matplotlib.patches.Circle"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_images.Rectangle": {
  "data": {
   "shadows": "matplotlib.patches.Rectangle"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_images.TestBasic": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.tests.test_images.BaseImageTests"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes.tests.test_images.TestBasic.test_axislabels_regression": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "WCS",
    "astropy.visualization.wcsaxes.tests.test_images.pytest",
    "matplotlib.pyplot.figure",
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_images.TestBasic.test_changed_axis_units": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "WCS",
    "astropy.visualization.wcsaxes.tests.test_images.pytest",
    "matplotlib.pyplot.figure",
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_images.TestBasic.test_contour_overlay": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "WCS",
    "astropy.visualization.wcsaxes.tests.test_images.pytest",
    "matplotlib.pyplot.figure",
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_images.TestBasic.test_cube_slice_image": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "WCS",
    "astropy.visualization.wcsaxes.tests.test_images.pytest",
    "matplotlib.pyplot.figure",
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_images.TestBasic.test_cube_slice_image_lonlat": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "WCS",
    "astropy.visualization.wcsaxes.tests.test_images.pytest",
    "matplotlib.pyplot.figure",
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_images.TestBasic.test_curvilinear_grid_patches_image": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "WCS",
    "astropy.visualization.wcsaxes.tests.test_images.pytest",
    "matplotlib.patches.Circle",
    "matplotlib.pyplot.figure",
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_images.TestBasic.test_elliptical_frame": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "WCS",
    "astropy.visualization.wcsaxes.tests.test_images.pytest",
    "matplotlib.pyplot.figure",
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_images.TestBasic.test_image_plot": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "WCS",
    "astropy.visualization.wcsaxes.tests.test_images.pytest",
    "matplotlib.pyplot.figure",
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_images.TestBasic.test_minor_ticks": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "WCS",
    "astropy.visualization.wcsaxes.tests.test_images.pytest",
    "matplotlib.pyplot.figure",
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_images.TestBasic.test_noncelestial_angular": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "WCS",
    "astropy.visualization.wcsaxes.tests.test_images.pytest",
    "matplotlib.pyplot.figure",
    "numpy.zeros",
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_images.TestBasic.test_overlay_features_image": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "WCS",
    "astropy.visualization.wcsaxes.tests.test_images.pytest",
    "matplotlib.pyplot.figure",
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_images.TestBasic.test_patches_distortion": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "SphericalCircle",
    "WCS",
    "astropy.visualization.wcsaxes.tests.test_images.pytest",
    "matplotlib.patches.Circle",
    "matplotlib.patches.Rectangle",
    "matplotlib.pyplot.figure",
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_images.TestBasic.test_plot_coord": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "SkyCoord",
    "WCS",
    "astropy.visualization.wcsaxes.tests.test_images.pytest",
    "matplotlib.pyplot.figure",
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_images.TestBasic.test_plot_line": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "SkyCoord",
    "WCS",
    "astropy.visualization.wcsaxes.tests.test_images.pytest",
    "matplotlib.pyplot.figure",
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_images.TestBasic.test_rcparams": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "WCSAxes",
    "astropy.visualization.wcsaxes.tests.test_images.pytest",
    "matplotlib.pyplot.figure",
    "matplotlib.rc_context",
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_images.TestBasic.test_set_coord_type": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "WCS",
    "astropy.visualization.wcsaxes.tests.test_images.pytest",
    "matplotlib.pyplot.figure",
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_images.TestBasic.test_tick_angles": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "WCS",
    "astropy.visualization.wcsaxes.tests.test_images.pytest",
    "matplotlib.pyplot.figure",
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_images.TestBasic.test_tick_angles_non_square_axes": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "WCS",
    "astropy.visualization.wcsaxes.tests.test_images.pytest",
    "matplotlib.pyplot.figure",
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_images.TestBasic.test_ticks_labels": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "WCSAxes",
    "astropy.visualization.wcsaxes.tests.test_images.pytest",
    "matplotlib.pyplot.figure",
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_images.TestBasic.test_ticks_regression": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "WCS",
    "astropy.visualization.wcsaxes.tests.test_images.pytest",
    "matplotlib.pyplot.figure",
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_images.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_images.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_images.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_images.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_images.rc_context": {
  "data": {
   "shadows": "matplotlib.rc_context"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_images.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_misc": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.wcsaxes.tests.test_misc.GAL_HEADER": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "astropy.visualization.wcsaxes.tests.test_misc.TARGET_HEADER": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "astropy.visualization.wcsaxes.tests.test_misc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_misc.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_misc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_misc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_misc.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_misc.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_misc.test_format_coord_regression": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "WCSAxes",
    "matplotlib.pyplot.figure"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_misc.test_grid_regression": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "WCSAxes",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.rc"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_misc.test_invalid_frame_overlay": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ValueError",
    "WCS",
    "astropy.visualization.wcsaxes.tests.test_misc.TARGET_HEADER",
    "get_coord_meta",
    "matplotlib.pyplot.subplot"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_misc.test_no_numpy_warnings": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "RuntimeWarning",
    "WCS",
    "astropy.visualization.wcsaxes.tests.test_misc.TARGET_HEADER",
    "catch_warnings",
    "len",
    "matplotlib.pyplot.savefig",
    "matplotlib.pyplot.subplot",
    "numpy.zeros",
    "print"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_misc.test_plot_coord_transform": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "SkyCoord",
    "TypeError",
    "WCS",
    "astropy.visualization.wcsaxes.tests.test_misc.os",
    "matplotlib.pyplot.figure"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_misc.test_set_label_properties": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "WCS",
    "astropy.visualization.wcsaxes.tests.test_misc.TARGET_HEADER",
    "matplotlib.pyplot.subplot"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_misc.test_slicing_warnings": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "WCS",
    "astropy.visualization.wcsaxes.tests.test_misc.GAL_HEADER",
    "astropy.visualization.wcsaxes.tests.test_misc.warnings",
    "len",
    "matplotlib.pyplot.savefig",
    "matplotlib.pyplot.subplot",
    "print"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_misc.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_misc.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_transform_coord_meta": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.wcsaxes.tests.test_transform_coord_meta.DistanceToLonLat": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes.tests.test_transform_coord_meta.DistanceToLonLat.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.tests.test_transform_coord_meta.DistanceToLonLat",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_transform_coord_meta.DistanceToLonLat.inverted": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.tests.test_transform_coord_meta.LonLatToDistance"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_transform_coord_meta.DistanceToLonLat.transform": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.arctan2",
    "numpy.array",
    "numpy.degrees",
    "numpy.hypot"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_transform_coord_meta.LonLatToDistance": {
  "data": {
   "lineno": 40
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes.tests.test_transform_coord_meta.LonLatToDistance.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.tests.test_transform_coord_meta.LonLatToDistance",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_transform_coord_meta.LonLatToDistance.inverted": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.tests.test_transform_coord_meta.DistanceToLonLat"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_transform_coord_meta.LonLatToDistance.transform": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cos",
    "numpy.radians",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_transform_coord_meta.TestTransformCoordMeta": {
  "data": {
   "lineno": 59
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes.tests.test_transform_coord_meta.TestTransformCoordMeta.test_coords_overlay": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "WCS",
    "WCSAxes",
    "astropy.visualization.wcsaxes.tests.test_transform_coord_meta.DistanceToLonLat",
    "astropy.visualization.wcsaxes.tests.test_transform_coord_meta.pytest",
    "matplotlib.pyplot.figure",
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_transform_coord_meta.TestTransformCoordMeta.test_coords_overlay_auto_coord_meta": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "WCS",
    "WCSAxes",
    "astropy.visualization.wcsaxes.tests.test_transform_coord_meta.pytest",
    "matplotlib.pyplot.figure",
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_transform_coord_meta.TestTransformCoordMeta.test_direct_init": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "WCSAxes",
    "astropy.visualization.wcsaxes.tests.test_transform_coord_meta.DistanceToLonLat",
    "astropy.visualization.wcsaxes.tests.test_transform_coord_meta.pytest",
    "matplotlib.pyplot.figure",
    "remote_data"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_transform_coord_meta.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_transform_coord_meta.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_transform_coord_meta.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_transform_coord_meta.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_transform_coord_meta.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_transform_coord_meta.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_transform_coord_meta.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_transforms": {
  "data": {
   "symbols_in_volume": [
    "WCS",
    "astropy.visualization.wcsaxes.tests.test_transforms.WCS2D",
    "astropy.visualization.wcsaxes.tests.test_transforms.WCS3D"
   ]
  },
  "type": "module"
 },
 "astropy.visualization.wcsaxes.tests.test_transforms.Affine2D": {
  "data": {
   "shadows": "matplotlib.transforms.Affine2D"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_transforms.WCS2D": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "astropy.visualization.wcsaxes.tests.test_transforms.WCS3D": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "astropy.visualization.wcsaxes.tests.test_transforms.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_transforms.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_transforms.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_transforms.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_transforms.test_2d": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "WCSWorld2PixelTransform",
    "astropy.visualization.wcsaxes.tests.test_transforms.WCS2D",
    "matplotlib.transforms.Affine2D",
    "numpy.ones",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_transforms.test_3d": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "WCSWorld2PixelTransform",
    "astropy.visualization.wcsaxes.tests.test_transforms.WCS3D",
    "matplotlib.transforms.Affine2D",
    "numpy.ones",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.wcsaxes.tests.test_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_utils.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_utils.assert_almost_equal_quantity": {
  "data": {
   "shadows": "assert_quantity_allclose"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.tests.test_utils.test_coord_type_from_ctype": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "coord_type_from_ctype"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_utils.test_select_step_degree": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "select_step_degree"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_utils.test_select_step_hour": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "select_step_hour"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_utils.test_select_step_scalar": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "select_step_scalar"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.tests.test_utils.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.ticklabels": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.wcsaxes.ticklabels.Text": {
  "data": {
   "shadows": "matplotlib.text.Text"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.ticklabels.TickLabels": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "matplotlib.text.Text"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes.ticklabels.TickLabels.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.ticklabels.TickLabels",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.ticklabels.TickLabels.add": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.ticklabels.TickLabels.clear": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.ticklabels.TickLabels.draw": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.ticklabels.TickLabels",
    "isinstance",
    "len",
    "numpy.abs",
    "numpy.cos",
    "numpy.hypot",
    "numpy.radians",
    "numpy.sin",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.ticklabels.TickLabels.get_visible_axes": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.ticklabels.TickLabels.set_exclude_overlapping": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.ticklabels.TickLabels.set_visible_axes": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.ticklabels.TickLabels.simplify_labels": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.ticklabels.TickLabels.sort": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.ticklabels.sort_using"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.ticklabels.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.ticklabels.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.ticklabels.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.ticklabels.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.ticklabels.sort_using": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.ticks": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.wcsaxes.ticks.Affine2D": {
  "data": {
   "shadows": "matplotlib.transforms.Affine2D"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.ticks.Line2D": {
  "data": {
   "shadows": "matplotlib.lines.Line2D"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.ticks.Path": {
  "data": {
   "shadows": "matplotlib.lines.Path"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.ticks.Ticks": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "matplotlib.lines.Line2D",
    "matplotlib.lines.Path"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes.ticks.Ticks.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "matplotlib.lines.Line2D.__init__",
    "matplotlib.rcParams",
    "matplotlib.rcParams.get"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.ticks.Ticks.__len__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.ticks.Ticks._draw_ticks": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "matplotlib.lines.Path",
    "matplotlib.transforms.Affine2D",
    "numpy.array",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.ticks.Ticks.add": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.ticks.Ticks.add_minor": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.ticks.Ticks.clear": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.ticks.Ticks.display_minor_ticks": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.ticks.Ticks.draw": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.ticks.Ticks.get_display_minor_ticks": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.ticks.Ticks.get_minor_world": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.ticks.Ticks.get_tick_out": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.ticks.Ticks.get_ticksize": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.ticks.Ticks.get_visible_axes": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.ticks.Ticks.set_tick_out": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.ticks.Ticks.set_ticksize": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.ticks.Ticks.set_visible_axes": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.ticks.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.ticks.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.ticks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.ticks.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.ticks.rcParams": {
  "data": {
   "shadows": "matplotlib.rcParams"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.transforms": {
  "data": {},
  "type": "module"
 },
 "astropy.visualization.wcsaxes.transforms.CoordinateTransform": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.transforms.CurvedTransform"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes.transforms.CoordinateTransform.__init__": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.visualization.wcsaxes.transforms.CoordinateTransform",
    "isinstance",
    "super",
    "wcs_to_celestial_frame"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.transforms.CoordinateTransform.inverted": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.transforms.CoordinateTransform"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.transforms.CoordinateTransform.same_frames": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.transforms.CoordinateTransform.transform": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "SkyCoord",
    "issubclass",
    "numpy.concatenate",
    "numpy.errstate",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.transforms.CurvedTransform": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.transforms.abc",
    "matplotlib.transforms.Transform"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes.transforms.CurvedTransform.inverted": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "NotImplementedError",
    "astropy.visualization.wcsaxes.transforms.abc"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.transforms.CurvedTransform.transform": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "NotImplementedError",
    "astropy.visualization.wcsaxes.transforms.abc"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.transforms.CurvedTransform.transform_path": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "matplotlib.path.Path"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.transforms.Path": {
  "data": {
   "shadows": "matplotlib.path.Path"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.transforms.Transform": {
  "data": {
   "shadows": "matplotlib.transforms.Transform"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.transforms.WCSPixel2WorldTransform": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.transforms.CurvedTransform"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes.transforms.WCSPixel2WorldTransform.__init__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.transforms.WCSPixel2WorldTransform",
    "slice",
    "slice.index",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.transforms.WCSPixel2WorldTransform.get_coord_slices": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linspace",
    "numpy.meshgrid",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.transforms.WCSPixel2WorldTransform.inverted": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.transforms.WCSWorld2PixelTransform"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.transforms.WCSPixel2WorldTransform.output_dims": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.transforms.WCSPixel2WorldTransform.transform": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.any",
    "numpy.array",
    "numpy.broadcast_arrays",
    "numpy.errstate",
    "numpy.nan",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.transforms.WCSWorld2PixelTransform": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.transforms.CurvedTransform"
   ]
  },
  "type": "class"
 },
 "astropy.visualization.wcsaxes.transforms.WCSWorld2PixelTransform.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ValueError",
    "astropy.visualization.wcsaxes.transforms.WCSWorld2PixelTransform",
    "len",
    "slice",
    "slice.index",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.transforms.WCSWorld2PixelTransform.input_dims": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.transforms.WCSWorld2PixelTransform.inverted": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "astropy.visualization.wcsaxes.transforms.WCSPixel2WorldTransform"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.transforms.WCSWorld2PixelTransform.transform": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.visualization.wcsaxes.transforms.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.transforms.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.transforms.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.transforms.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.transforms.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.visualization.wcsaxes.transforms.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.vo": {
  "data": {
   "symbols_in_volume": [
    "astropy.vo.Conf"
   ]
  },
  "type": "module"
 },
 "astropy.vo.Conf": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "astropy.vo._config": {
  "data": {
   "shadows": "config"
  },
  "type": "import"
 },
 "astropy.vo.client": {
  "data": {},
  "type": "module"
 },
 "astropy.vo.client.async": {
  "data": {},
  "type": "module"
 },
 "astropy.vo.client.async.AsyncBase": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "deprecated",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.vo.client.async.AsyncBase.__getattr__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "AttributeError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.async.AsyncBase.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ThreadPoolExecutor"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.async.AsyncBase.get": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.async.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "astropy.vo.client.async.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.vo.client.async.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.vo.client.async.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.vo.client.async.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.vo.client.exceptions": {
  "data": {},
  "type": "module"
 },
 "astropy.vo.client.exceptions.BaseVOError": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "astropy.vo.client.exceptions.ConeSearchError": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "astropy.vo.client.exceptions.BaseVOError"
   ]
  },
  "type": "class"
 },
 "astropy.vo.client.exceptions.DuplicateCatalogName": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "astropy.vo.client.exceptions.VOSError"
   ]
  },
  "type": "class"
 },
 "astropy.vo.client.exceptions.DuplicateCatalogURL": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "astropy.vo.client.exceptions.VOSError"
   ]
  },
  "type": "class"
 },
 "astropy.vo.client.exceptions.InvalidAccessURL": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "astropy.vo.client.exceptions.VOSError"
   ]
  },
  "type": "class"
 },
 "astropy.vo.client.exceptions.MissingCatalog": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "astropy.vo.client.exceptions.VOSError"
   ]
  },
  "type": "class"
 },
 "astropy.vo.client.exceptions.VOSError": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "astropy.vo.client.exceptions.BaseVOError"
   ]
  },
  "type": "class"
 },
 "astropy.vo.client.exceptions.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "astropy.vo.client.exceptions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.vo.client.exceptions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.vo.client.exceptions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.vo.client.exceptions.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.vo.client.setup_package": {
  "data": {},
  "type": "module"
 },
 "astropy.vo.client.setup_package.get_package_data": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "astropy.vo.client.setup_package.requires_2to3": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "astropy.vo.client.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.vo.client.tests.test_conesearch": {
  "data": {
   "symbols_in_volume": [
    "ICRS",
    "astropy.vo.client.tests.test_conesearch.SCS_DEC",
    "astropy.vo.client.tests.test_conesearch.SCS_RA",
    "astropy.vo.client.tests.test_conesearch.SCS_SR"
   ]
  },
  "type": "module"
 },
 "astropy.vo.client.tests.test_conesearch.SCS_CENTER": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "astropy.vo.client.tests.test_conesearch.SCS_DEC": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "astropy.vo.client.tests.test_conesearch.SCS_RA": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "astropy.vo.client.tests.test_conesearch.SCS_RADIUS": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "astropy.vo.client.tests.test_conesearch.SCS_SR": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "astropy.vo.client.tests.test_conesearch.TestConeSearch": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.vo.client.tests.test_conesearch.TestConeSearch.setup_class": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_conesearch.TestConeSearch.teardown_class": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_conesearch.TestConeSearch.test_async": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "AssertionError",
    "astropy.vo.client.tests.test_conesearch.SCS_CENTER",
    "astropy.vo.client.tests.test_conesearch.SCS_RADIUS",
    "astropy.vo.client.tests.test_conesearch.pytest",
    "astropy.vo.client.tests.test_conesearch.time",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_conesearch.TestConeSearch.test_async_all": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "AssertionError",
    "astropy.vo.client.tests.test_conesearch.SCS_CENTER",
    "astropy.vo.client.tests.test_conesearch.SCS_RADIUS",
    "astropy.vo.client.tests.test_conesearch.pytest",
    "astropy.vo.client.tests.test_conesearch.time",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_conesearch.TestConeSearch.test_cat_listing": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_conesearch.TestConeSearch.test_no_result": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "astropy.vo.client.tests.test_conesearch.SCS_CENTER",
    "astropy.vo.client.tests.test_conesearch.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_conesearch.TestConeSearch.test_one_search": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "astropy.vo.client.tests.test_conesearch.SCS_CENTER",
    "astropy.vo.client.tests.test_conesearch.SCS_DEC",
    "astropy.vo.client.tests.test_conesearch.SCS_RA",
    "astropy.vo.client.tests.test_conesearch.SCS_RADIUS",
    "astropy.vo.client.tests.test_conesearch.SCS_SR",
    "astropy.vo.client.tests.test_conesearch.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_conesearch.TestConeSearch.test_prediction": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "astropy.vo.client.tests.test_conesearch.SCS_CENTER",
    "astropy.vo.client.tests.test_conesearch.SCS_DEC",
    "astropy.vo.client.tests.test_conesearch.SCS_RA",
    "astropy.vo.client.tests.test_conesearch.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_conesearch.TestConeSearch.test_prediction_neg_radius": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "astropy.vo.client.tests.test_conesearch.SCS_CENTER",
    "astropy.vo.client.tests.test_conesearch.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_conesearch.TestConeSearch.test_search_all": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "astropy.vo.client.tests.test_conesearch.SCS_CENTER",
    "astropy.vo.client.tests.test_conesearch.SCS_DEC",
    "astropy.vo.client.tests.test_conesearch.SCS_RA",
    "astropy.vo.client.tests.test_conesearch.SCS_RADIUS",
    "astropy.vo.client.tests.test_conesearch.SCS_SR",
    "astropy.vo.client.tests.test_conesearch.pytest",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_conesearch.TestConeSearch.test_searches": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "astropy.vo.client.tests.test_conesearch.SCS_CENTER",
    "astropy.vo.client.tests.test_conesearch.SCS_RADIUS",
    "astropy.vo.client.tests.test_conesearch.pytest",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_conesearch.TestConeSearch.test_sky_coord": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "SkyCoord",
    "astropy.vo.client.tests.test_conesearch.SCS_CENTER",
    "astropy.vo.client.tests.test_conesearch.SCS_RADIUS"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_conesearch.TestConeSearch.test_timeout": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "astropy.vo.client.tests.test_conesearch.SCS_CENTER",
    "astropy.vo.client.tests.test_conesearch.SCS_RADIUS",
    "astropy.vo.client.tests.test_conesearch.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_conesearch.TestErrorResponse": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.vo.client.tests.test_conesearch.TestErrorResponse.conesearch_compare": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "astropy.vo.client.tests.test_conesearch.os",
    "astropy.vo.client.tests.test_conesearch.pytest",
    "get_pkg_data_filename",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_conesearch.TestErrorResponse.setup_class": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_conesearch.TestErrorResponse.test_conesearch_response": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "astropy.vo.client.tests.test_conesearch.pytest",
    "id"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_conesearch.__doctest_skip__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "astropy.vo.client.tests.test_conesearch.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.vo.client.tests.test_conesearch.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.vo.client.tests.test_conesearch.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.vo.client.tests.test_conesearch.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.vo.client.tests.test_conesearch.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.vo.client.tests.test_conesearch.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.vo.client.tests.test_conesearch.setup_module": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "astropy.vo.client.tests.test_conesearch.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_conesearch.teardown_module": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "astropy.vo.client.tests.test_conesearch.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_conesearch.test_validate_coord": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "ICRS",
    "SkyCoord",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_conesearch.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "astropy.vo.client.tests.test_conesearch.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.vo.client.tests.test_conesearch.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.vo.client.tests.test_conesearch.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.vo.client.tests.test_vos_catalog": {
  "data": {
   "symbols_in_volume": [
    "astropy.vo.client.tests.test_vos_catalog.os",
    "get_pkg_data_filename"
   ]
  },
  "type": "module"
 },
 "astropy.vo.client.tests.test_vos_catalog.DB_FILE": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "astropy.vo.client.tests.test_vos_catalog.TestCatalog": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.vo.client.tests.test_vos_catalog.TestCatalog.setup_class": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_vos_catalog.TestCatalog.test_illegal_deletion": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "astropy.vo.client.tests.test_vos_catalog.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_vos_catalog.TestCatalog.test_legal_deletion": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_vos_catalog.TestCatalog.test_set_attr": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_vos_catalog.TestDatabase": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.vo.client.tests.test_vos_catalog.TestDatabase.setup_class": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "astropy.vo.client.tests.test_vos_catalog.DB_FILE"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_vos_catalog.TestDatabase.test_changes": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "astropy.vo.client.tests.test_vos_catalog.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_vos_catalog.TestDatabase.test_get_catalog": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "astropy.vo.client.tests.test_vos_catalog.pytest",
    "getattr",
    "method1",
    "method2"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_vos_catalog.TestDatabase.test_illegal_addition": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "astropy.vo.client.tests.test_vos_catalog.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_vos_catalog.TestDatabase.test_illegal_deletion": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "astropy.vo.client.tests.test_vos_catalog.pytest",
    "getattr",
    "method"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_vos_catalog.TestDatabase.test_illegal_merge": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "astropy.vo.client.tests.test_vos_catalog.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_vos_catalog.TestDatabase.test_set_attr": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_vos_catalog.TestWriteJson": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.vo.client.tests.test_vos_catalog.TestWriteJson.setup_class": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "astropy.vo.client.tests.test_vos_catalog.tempfile"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_vos_catalog.TestWriteJson.teardown_class": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "astropy.vo.client.tests.test_vos_catalog.shutil"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_vos_catalog.TestWriteJson.test_write": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "OSError",
    "astropy.vo.client.tests.test_vos_catalog.DB_FILE",
    "astropy.vo.client.tests.test_vos_catalog.os",
    "astropy.vo.client.tests.test_vos_catalog.pytest",
    "catch_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_vos_catalog.__doctest_skip__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "astropy.vo.client.tests.test_vos_catalog.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.vo.client.tests.test_vos_catalog.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.vo.client.tests.test_vos_catalog.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.vo.client.tests.test_vos_catalog.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.vo.client.tests.test_vos_catalog.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.vo.client.tests.test_vos_catalog.setup_module": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "astropy.vo.client.tests.test_vos_catalog.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_vos_catalog.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "astropy.vo.client.tests.test_vos_catalog.teardown_module": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "astropy.vo.client.tests.test_vos_catalog.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_vos_catalog.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "astropy.vo.client.tests.test_vos_catalog.test_db_from_registry": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_vos_catalog.test_db_illegal_catalog": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "astropy.vo.client.tests.test_vos_catalog.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_vos_catalog.test_db_missing_catalog_key": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "astropy.vo.client.tests.test_vos_catalog.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.tests.test_vos_catalog.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.vo.client.tests.test_vos_catalog.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.vo.client.vos_catalog": {
  "data": {},
  "type": "module"
 },
 "astropy.vo.client.vos_catalog.VOSBase": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "deprecated",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.vo.client.vos_catalog.VOSBase.__getattr__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.VOSBase.__getitem__": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.VOSBase.__init__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.VOSBase.__iter__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.VOSBase.__setitem__": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.VOSBase.dumps": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "astropy.vo.client.vos_catalog.json"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.VOSCatalog": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "astropy.vo.client.vos_catalog.VOSBase",
    "deprecated"
   ]
  },
  "type": "class"
 },
 "astropy.vo.client.vos_catalog.VOSCatalog.__init__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "VOSError",
    "astropy.vo.client.vos_catalog.VOSCatalog",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.VOSCatalog.__str__": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.VOSCatalog.create": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.VOSCatalog.delete_attribute": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "VOSError"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.VOSDatabase": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "astropy.vo.client.vos_catalog.VOSBase",
    "deprecated"
   ]
  },
  "type": "class"
 },
 "astropy.vo.client.vos_catalog.VOSDatabase.__init__": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "VOSError",
    "astropy.vo.client.vos_catalog.VOSDatabase",
    "astropy.vo.client.vos_catalog.__dbversion__",
    "collections.defaultdict",
    "list",
    "super",
    "vo_warn"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.VOSDatabase.__len__": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.VOSDatabase.__str__": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.VOSDatabase._match_pattern": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "astropy.vo.client.vos_catalog.fnmatch",
    "astropy.vo.client.vos_catalog.re",
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.VOSDatabase.add_catalog": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "DuplicateCatalogName",
    "DuplicateCatalogURL",
    "VOSError",
    "astropy.vo.client.vos_catalog.VOSCatalog",
    "copy.deepcopy",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.VOSDatabase.add_catalog_by_url": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "astropy.vo.client.vos_catalog.VOSCatalog"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.VOSDatabase.create_empty": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "astropy.vo.client.vos_catalog.__dbversion__",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.VOSDatabase.delete_catalog": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "MissingCatalog"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.VOSDatabase.delete_catalog_by_url": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "MissingCatalog",
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.VOSDatabase.from_json": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "astropy.vo.client.vos_catalog.json",
    "classmethod",
    "cls",
    "get_readable_fileobj"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.VOSDatabase.from_registry": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "VOSError",
    "astropy.vo.client.vos_catalog.VOSCatalog",
    "astropy.vo.client.vos_catalog.warnings",
    "bytes",
    "classmethod",
    "cls.create_empty",
    "collections.defaultdict",
    "get_readable_fileobj",
    "int",
    "isinstance",
    "len",
    "parse_single_table",
    "unescape_all"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.VOSDatabase.get_catalog": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "MissingCatalog",
    "astropy.vo.client.vos_catalog.VOSCatalog"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.VOSDatabase.get_catalog_by_url": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "MissingCatalog",
    "astropy.vo.client.vos_catalog.VOSCatalog",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.VOSDatabase.get_catalogs": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "astropy.vo.client.vos_catalog.VOSCatalog"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.VOSDatabase.get_catalogs_by_url": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "astropy.vo.client.vos_catalog.VOSCatalog"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.VOSDatabase.list_catalogs": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.VOSDatabase.list_catalogs_by_url": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.VOSDatabase.merge": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "VOSError",
    "astropy.vo.client.vos_catalog.VOSDatabase",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.VOSDatabase.to_json": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "OSError",
    "astropy.vo.client.vos_catalog.os",
    "deprecated_renamed_argument",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.VOSDatabase.version": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "astropy.vo.client.vos_catalog.__dbversion__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "astropy.vo.client.vos_catalog._get_catalogs": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "VOSError",
    "astropy.vo.client.vos_catalog.VOSCatalog",
    "astropy.vo.client.vos_catalog.VOSDatabase",
    "astropy.vo.client.vos_catalog.get_remote_catalog_db",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog._vo_service_request": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "InvalidAccessURL",
    "astropy.vo.client.vos_catalog.vo_tab_parse",
    "get_readable_fileobj",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.vo.client.vos_catalog.call_vo_service": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "Exception",
    "VOSError",
    "astropy.vo.client.vos_catalog._get_catalogs",
    "astropy.vo.client.vos_catalog._vo_service_request",
    "astropy.vo.client.vos_catalog.get_remote_catalog_db",
    "astropy.vo.client.vos_catalog.socket",
    "color_print",
    "deprecated",
    "hasattr",
    "isinstance",
    "str",
    "vo_warn"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.data_conf": {
  "data": {
   "shadows": "conf"
  },
  "type": "import"
 },
 "astropy.vo.client.vos_catalog.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "astropy.vo.client.vos_catalog.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "astropy.vo.client.vos_catalog.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.vo.client.vos_catalog.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "astropy.vo.client.vos_catalog.get_remote_catalog_db": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "astropy.vo.client.vos_catalog.VOSDatabase",
    "deprecated"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "astropy.vo.client.vos_catalog.list_catalogs": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "astropy.vo.client.vos_catalog.get_remote_catalog_db",
    "deprecated"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.vo.client.vos_catalog.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.vo.client.vos_catalog.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.vo.client.vos_catalog.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "astropy.vo.client.vos_catalog.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.vo.client.vos_catalog.vo_conf": {
  "data": {
   "shadows": "conf"
  },
  "type": "import"
 },
 "astropy.vo.client.vos_catalog.vo_tab_parse": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "VOSError",
    "deprecated",
    "isinstance",
    "len",
    "vo_raise"
   ]
  },
  "type": "function"
 },
 "astropy.vo.client.vos_catalog.votable_conf": {
  "data": {
   "shadows": "conf"
  },
  "type": "import"
 },
 "astropy.vo.client.vos_catalog.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.vo.conf": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "astropy.vo.samp": {
  "data": {
   "symbols_in_volume": [
    "astropy.vo.samp.warnings"
   ]
  },
  "type": "module"
 },
 "astropy.vo.samp.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.vo.validator": {
  "data": {
   "symbols_in_volume": [
    "astropy.vo.validator.Conf"
   ]
  },
  "type": "module"
 },
 "astropy.vo.validator.Conf": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "astropy.vo.validator.os",
    "get_pkg_data_contents"
   ]
  },
  "type": "class"
 },
 "astropy.vo.validator._config": {
  "data": {
   "shadows": "config"
  },
  "type": "import"
 },
 "astropy.vo.validator.conf": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "astropy.vo.validator.exceptions": {
  "data": {},
  "type": "module"
 },
 "astropy.vo.validator.exceptions.BaseVOValidationError": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "astropy.vo.validator.exceptions.InvalidValidationAttribute": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "astropy.vo.validator.exceptions.BaseVOValidationError"
   ]
  },
  "type": "class"
 },
 "astropy.vo.validator.exceptions.ValidationMultiprocessingError": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "astropy.vo.validator.exceptions.BaseVOValidationError"
   ]
  },
  "type": "class"
 },
 "astropy.vo.validator.exceptions.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "astropy.vo.validator.exceptions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.vo.validator.exceptions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.vo.validator.exceptions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.vo.validator.exceptions.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.vo.validator.inspect": {
  "data": {},
  "type": "module"
 },
 "astropy.vo.validator.inspect.ConeSearchResults": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "deprecated",
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.vo.validator.inspect.ConeSearchResults.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "get_remote_catalog_db"
   ]
  },
  "type": "function"
 },
 "astropy.vo.validator.inspect.ConeSearchResults.list_cats": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "astropy.vo.validator.inspect._exclude_noncrit",
    "astropy.vo.validator.inspect.sys",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.vo.validator.inspect.ConeSearchResults.print_cat": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "astropy.vo.validator.inspect.sys",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.vo.validator.inspect.ConeSearchResults.tally": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "astropy.vo.validator.inspect.sys",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.vo.validator.inspect.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "astropy.vo.validator.inspect._exclude_noncrit": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "astropy.vo.validator.inspect.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.vo.validator.inspect.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.vo.validator.inspect.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.vo.validator.inspect.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.vo.validator.inspect.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.vo.validator.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.vo.validator.setup_package": {
  "data": {},
  "type": "module"
 },
 "astropy.vo.validator.setup_package.get_package_data": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "astropy.vo.validator.setup_package.requires_2to3": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "astropy.vo.validator.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.vo.validator.tests.test_inpect": {
  "data": {},
  "type": "module"
 },
 "astropy.vo.validator.tests.test_inpect.TestConeSearchResults": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.vo.validator.tests.test_inpect.TestConeSearchResults.gen_cmp": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "astropy.vo.validator.tests.test_inpect.os",
    "func",
    "get_pkg_data_filename",
    "len",
    "open",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.vo.validator.tests.test_inpect.TestConeSearchResults.setup_class": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "_find_pkg_data_path",
    "astropy.vo.validator.tests.test_inpect.os",
    "astropy.vo.validator.tests.test_inpect.tempfile"
   ]
  },
  "type": "function"
 },
 "astropy.vo.validator.tests.test_inpect.TestConeSearchResults.teardown_class": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "astropy.vo.validator.tests.test_inpect.shutil"
   ]
  },
  "type": "function"
 },
 "astropy.vo.validator.tests.test_inpect.TestConeSearchResults.test_catkeys": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "astropy.vo.validator.tests.test_inpect.TestConeSearchResults.test_listcats": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "astropy.vo.validator.tests.test_inpect.TestConeSearchResults.test_printcat": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "astropy.vo.validator.tests.test_inpect.TestConeSearchResults.test_tally": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "astropy.vo.validator.tests.test_inpect.__doctest_skip__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "astropy.vo.validator.tests.test_inpect.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.vo.validator.tests.test_inpect.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.vo.validator.tests.test_inpect.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.vo.validator.tests.test_inpect.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.vo.validator.tests.test_inpect.setup_module": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "astropy.vo.validator.tests.test_inpect.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.vo.validator.tests.test_inpect.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "astropy.vo.validator.tests.test_inpect.teardown_module": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "astropy.vo.validator.tests.test_inpect.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.vo.validator.tests.test_inpect.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "astropy.vo.validator.tests.test_inpect.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.vo.validator.tests.test_inpect.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.vo.validator.tests.test_validate": {
  "data": {},
  "type": "module"
 },
 "astropy.vo.validator.tests.test_validate.TestConeSearchValidation": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.vo.validator.tests.test_validate.TestConeSearchValidation._compare_catnames": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "astropy.vo.validator.tests.test_validate.TestConeSearchValidation.setup_class": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "astropy.vo.validator.tests.test_validate.os",
    "astropy.vo.validator.tests.test_validate.tempfile",
    "get_pkg_data_filename"
   ]
  },
  "type": "function"
 },
 "astropy.vo.validator.tests.test_validate.TestConeSearchValidation.teardown_class": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "astropy.vo.validator.tests.test_validate.shutil"
   ]
  },
  "type": "function"
 },
 "astropy.vo.validator.tests.test_validate.TestConeSearchValidation.test_url_list": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "astropy.vo.validator.tests.test_validate.os",
    "astropy.vo.validator.tests.test_validate.pytest",
    "get_pkg_data_filename"
   ]
  },
  "type": "function"
 },
 "astropy.vo.validator.tests.test_validate.TestConeSearchValidation.test_validation": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "astropy.vo.validator.tests.test_validate.os",
    "astropy.vo.validator.tests.test_validate.pytest",
    "astropy.vo.validator.tests.test_validate.shutil",
    "get_pkg_data_filename"
   ]
  },
  "type": "function"
 },
 "astropy.vo.validator.tests.test_validate.__doctest_skip__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "astropy.vo.validator.tests.test_validate.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.vo.validator.tests.test_validate.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.vo.validator.tests.test_validate.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.vo.validator.tests.test_validate.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.vo.validator.tests.test_validate.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.vo.validator.tests.test_validate.setup_module": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "astropy.vo.validator.tests.test_validate.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.vo.validator.tests.test_validate.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "astropy.vo.validator.tests.test_validate.teardown_module": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "astropy.vo.validator.tests.test_validate.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.vo.validator.tests.test_validate.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "astropy.vo.validator.tests.test_validate.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.vo.validator.tests.test_validate.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.vo.validator.tstquery": {
  "data": {},
  "type": "module"
 },
 "astropy.vo.validator.tstquery.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.vo.validator.tstquery.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.vo.validator.tstquery.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.vo.validator.tstquery.minidom": {
  "data": {
   "shadows": "xml.dom.minidom"
  },
  "type": "import"
 },
 "astropy.vo.validator.tstquery.parse_cs": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "Exception",
    "astropy.vo.validator.tstquery.warnings",
    "bytes",
    "collections.OrderedDict",
    "deprecated",
    "get_readable_fileobj",
    "id",
    "id.decode",
    "isinstance",
    "str",
    "xml.dom.minidom.parse"
   ]
  },
  "type": "function"
 },
 "astropy.vo.validator.tstquery.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.vo.validator.tstquery.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.vo.validator.tstquery.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.vo.validator.validate": {
  "data": {},
  "type": "module"
 },
 "astropy.vo.validator.validate.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "astropy.vo.validator.validate.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "astropy.vo.validator.validate._categorize_result": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "InvalidValidationAttribute"
   ]
  },
  "type": "function"
 },
 "astropy.vo.validator.validate._copy_r_to_cat": {
  "data": {
   "lineno": 334
  },
  "type": "function"
 },
 "astropy.vo.validator.validate._do_validation": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "IndexError",
    "astropy.vo.validator.validate._categorize_result",
    "astropy.vo.validator.validate.warnings",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.vo.validator.validate._html_subindex": {
  "data": {
   "lineno": 328
  },
  "type": "function"
 },
 "astropy.vo.validator.validate.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.vo.validator.validate.check_conesearch_sites": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "Exception",
    "IOError",
    "ValidationMultiprocessingError",
    "astropy.vo.validator.validate._copy_r_to_cat",
    "astropy.vo.validator.validate._html_subindex",
    "astropy.vo.validator.validate.multiprocessing",
    "astropy.vo.validator.validate.os",
    "astropy.vo.validator.validate.warnings",
    "collections.OrderedDict",
    "deprecated",
    "isinstance",
    "len",
    "list",
    "map",
    "parse_cs",
    "set",
    "str",
    "timefunc"
   ]
  },
  "type": "function"
 },
 "astropy.vo.validator.validate.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.vo.validator.validate.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "astropy.vo.validator.validate.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.vo.validator.validate.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.vo.validator.validate.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.vo.validator.validate.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "astropy.wcs": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "astropy.wcs._docutil": {
  "data": {},
  "type": "module"
 },
 "astropy.wcs._docutil.ORIGIN": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "astropy.wcs._docutil._fix"
   ]
  },
  "type": "function"
 },
 "astropy.wcs._docutil.RA_DEC_ORDER": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "astropy.wcs._docutil._fix"
   ]
  },
  "type": "function"
 },
 "astropy.wcs._docutil.RETURNS": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "astropy.wcs._docutil._fix"
   ]
  },
  "type": "function"
 },
 "astropy.wcs._docutil.TWO_OR_MORE_ARGS": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "astropy.wcs._docutil._fix"
   ]
  },
  "type": "function"
 },
 "astropy.wcs._docutil.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "astropy.wcs._docutil._fix": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "astropy.wcs._docutil.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.wcs._docutil.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.wcs._docutil.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.wcs._docutil.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.wcs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.wcs.docstrings": {
  "data": {},
  "type": "module"
 },
 "astropy.wcs.docstrings.DistortionLookupTable": {
  "data": {
   "lineno": 585
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.InconsistentAxisTypes": {
  "data": {
   "lineno": 2231
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.InvalidCoordinate": {
  "data": {
   "lineno": 2244
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.InvalidSubimageSpecification": {
  "data": {
   "lineno": 2256
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.InvalidTabularParameters": {
  "data": {
   "lineno": 2274
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.InvalidTransform": {
  "data": {
   "lineno": 2237
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.K": {
  "data": {
   "lineno": 934
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.M": {
  "data": {
   "lineno": 987
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.NoSolution": {
  "data": {
   "lineno": 2250
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.NoWcsKeywordsFound": {
  "data": {
   "lineno": 2268
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.NonseparableSubimageCoordinateSystem": {
  "data": {
   "lineno": 2262
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.SingularMatrix": {
  "data": {
   "lineno": 2225
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.Sip": {
  "data": {
   "lineno": 1652
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.Tabprm": {
  "data": {
   "lineno": 1939
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.Wcs": {
  "data": {
   "lineno": 2109
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.WcsError": {
  "data": {
   "lineno": 2221
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.Wcsprm": {
  "data": {
   "lineno": 2131
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.Wtbarr": {
  "data": {
   "lineno": 2207
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.__": {
  "data": {
   "shadows": "_docutil"
  },
  "type": "import"
 },
 "astropy.wcs.docstrings.a": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.a_order": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.wcs.docstrings.all_pix2world": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.alt": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.ap": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.ap_order": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.axis_types": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.b": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.b_order": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.bounds_check": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.bp": {
  "data": {
   "lineno": 185
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.bp_order": {
  "data": {
   "lineno": 194
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.cd": {
  "data": {
   "lineno": 198
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.cdelt": {
  "data": {
   "lineno": 222
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.cdfix": {
  "data": {
   "lineno": 235
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.cel_offset": {
  "data": {
   "lineno": 252
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.celfix": {
  "data": {
   "lineno": 259
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.cname": {
  "data": {
   "lineno": 269
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.colax": {
  "data": {
   "lineno": 274
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.colnum": {
  "data": {
   "lineno": 279
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.compare": {
  "data": {
   "lineno": 289
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.convert": {
  "data": {
   "lineno": 332
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.coord": {
  "data": {
   "lineno": 339
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.copy": {
  "data": {
   "lineno": 351
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.cpdis1": {
  "data": {
   "lineno": 355
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.cpdis2": {
  "data": {
   "lineno": 361
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.crder": {
  "data": {
   "lineno": 367
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.crota": {
  "data": {
   "lineno": 374
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.crpix": {
  "data": {
   "lineno": 398
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.crval": {
  "data": {
   "lineno": 403
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.crval_tabprm": {
  "data": {
   "lineno": 408
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.csyer": {
  "data": {
   "lineno": 413
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.ctype": {
  "data": {
   "lineno": 420
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.cubeface": {
  "data": {
   "lineno": 428
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.cunit": {
  "data": {
   "lineno": 464
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.cylfix": {
  "data": {
   "lineno": 495
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.data": {
  "data": {
   "lineno": 506
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.data_wtbarr": {
  "data": {
   "lineno": 511
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.dateavg": {
  "data": {
   "lineno": 517
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.dateobs": {
  "data": {
   "lineno": 527
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.datfix": {
  "data": {
   "lineno": 537
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.delta": {
  "data": {
   "lineno": 555
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.det2im": {
  "data": {
   "lineno": 564
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.det2im1": {
  "data": {
   "lineno": 568
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.det2im2": {
  "data": {
   "lineno": 573
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.dims": {
  "data": {
   "lineno": 578
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.wcs.docstrings.equinox": {
  "data": {
   "lineno": 606
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.extlev": {
  "data": {
   "lineno": 616
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.extnam": {
  "data": {
   "lineno": 622
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.extrema": {
  "data": {
   "lineno": 628
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.extver": {
  "data": {
   "lineno": 643
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.find_all_wcs": {
  "data": {
   "lineno": 649
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.fix": {
  "data": {
   "lineno": 689
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.get_cdelt": {
  "data": {
   "lineno": 758
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.get_offset": {
  "data": {
   "lineno": 747
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.get_pc": {
  "data": {
   "lineno": 771
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.get_ps": {
  "data": {
   "lineno": 782
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.get_pv": {
  "data": {
   "lineno": 804
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.has_cd": {
  "data": {
   "lineno": 834
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.has_cdi_ja": {
  "data": {
   "lineno": 859
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.has_crota": {
  "data": {
   "lineno": 866
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.has_crotaia": {
  "data": {
   "lineno": 888
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.has_pc": {
  "data": {
   "lineno": 895
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.has_pci_ja": {
  "data": {
   "lineno": 906
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.i": {
  "data": {
   "lineno": 913
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.imgpix_matrix": {
  "data": {
   "lineno": 919
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.is_unity": {
  "data": {
   "lineno": 927
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.kind": {
  "data": {
   "lineno": 942
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.lat": {
  "data": {
   "lineno": 951
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.latpole": {
  "data": {
   "lineno": 956
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.lattyp": {
  "data": {
   "lineno": 960
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.lng": {
  "data": {
   "lineno": 968
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.lngtyp": {
  "data": {
   "lineno": 973
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.lonpole": {
  "data": {
   "lineno": 981
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.m": {
  "data": {
   "lineno": 991
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.map": {
  "data": {
   "lineno": 997
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.mix": {
  "data": {
   "lineno": 1020
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.mjdavg": {
  "data": {
   "lineno": 1156
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.mjdobs": {
  "data": {
   "lineno": 1168
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.name": {
  "data": {
   "lineno": 1180
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.naxis": {
  "data": {
   "lineno": 1185
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.nc": {
  "data": {
   "lineno": 1211
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.ndim": {
  "data": {
   "lineno": 1218
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.obsgeo": {
  "data": {
   "lineno": 1224
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.p0": {
  "data": {
   "lineno": 1233
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.p2s": {
  "data": {
   "lineno": 1241
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.p4_pix2foc": {
  "data": {
   "lineno": 1317
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.pc": {
  "data": {
   "lineno": 1344
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.phi0": {
  "data": {
   "lineno": 1373
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.pix2foc": {
  "data": {
   "lineno": 1385
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.piximg_matrix": {
  "data": {
   "lineno": 1412
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.print_contents": {
  "data": {
   "lineno": 1417
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.print_contents_tabprm": {
  "data": {
   "lineno": 1427
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.wcs.docstrings.radesys": {
  "data": {
   "lineno": 1437
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.restfrq": {
  "data": {
   "lineno": 1442
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.restwav": {
  "data": {
   "lineno": 1448
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.row": {
  "data": {
   "lineno": 1454
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.s2p": {
  "data": {
   "lineno": 1460
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.sense": {
  "data": {
   "lineno": 1530
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.set": {
  "data": {
   "lineno": 1538
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.set_ps": {
  "data": {
   "lineno": 1601
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.set_pv": {
  "data": {
   "lineno": 1624
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.set_tabprm": {
  "data": {
   "lineno": 1582
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.sip": {
  "data": {
   "lineno": 1647
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.sip_foc2pix": {
  "data": {
   "lineno": 1686
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.sip_pix2foc": {
  "data": {
   "lineno": 1713
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.spcfix": {
  "data": {
   "lineno": 1740
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.spec": {
  "data": {
   "lineno": 1753
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.specsys": {
  "data": {
   "lineno": 1757
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.sptr": {
  "data": {
   "lineno": 1765
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.ssysobs": {
  "data": {
   "lineno": 1814
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.ssyssrc": {
  "data": {
   "lineno": 1826
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.sub": {
  "data": {
   "lineno": 1833
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.tab": {
  "data": {
   "lineno": 1933
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.theta0": {
  "data": {
   "lineno": 1947
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.to_header": {
  "data": {
   "lineno": 1959
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.ttype": {
  "data": {
   "lineno": 2031
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.wcs.docstrings.unitfix": {
  "data": {
   "lineno": 2038
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.velangl": {
  "data": {
   "lineno": 2075
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.velosys": {
  "data": {
   "lineno": 2084
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.velref": {
  "data": {
   "lineno": 2098
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.wcs": {
  "data": {
   "lineno": 2104
  },
  "type": "constant"
 },
 "astropy.wcs.docstrings.zsource": {
  "data": {
   "lineno": 2215
  },
  "type": "constant"
 },
 "astropy.wcs.get_include": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "astropy.wcs.os"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.wcs.setup_package": {
  "data": {
   "symbols_in_volume": [
    "astropy.extern.six.PY2"
   ]
  },
  "type": "module"
 },
 "astropy.wcs.setup_package.CONTACT": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "astropy.wcs.setup_package.EMAIL": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "astropy.wcs.setup_package.Extension": {
  "data": {
   "shadows": "distutils.core.Extension"
  },
  "type": "import"
 },
 "astropy.wcs.setup_package.WCSROOT": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "astropy.wcs.setup_package.WCSVERSION": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "astropy.wcs.setup_package.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.wcs.setup_package.b": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "astropy.wcs.setup_package.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "astropy.wcs.setup_package.debug": {
  "data": {
   "shadows": "astropy.version.debug"
  },
  "type": "import"
 },
 "astropy.wcs.setup_package.determine_64_bit_int": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "astropy.wcs.setup_package.ctypes"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.setup_package.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.wcs.setup_package.docstrings": {
  "data": {
   "shadows": "astropy.wcs.docstrings"
  },
  "type": "import"
 },
 "astropy.wcs.setup_package.generate_c_docstrings": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "astropy.extern.six.PY2",
    "astropy.extern.six.string_types",
    "astropy.wcs.docstrings",
    "astropy.wcs.docstrings.__dict__",
    "astropy.wcs.docstrings.encode",
    "astropy.wcs.docstrings.items",
    "astropy.wcs.setup_package.WCSROOT",
    "astropy.wcs.setup_package.io",
    "astropy_helpers.setup_helpers.write_if_different",
    "isinstance",
    "len",
    "ord",
    "os.path.join",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.setup_package.get_distutils_build_option": {
  "data": {
   "shadows": "astropy_helpers.distutils_helpers.get_distutils_build_option"
  },
  "type": "import"
 },
 "astropy.wcs.setup_package.get_extensions": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "astropy.extern.six.iteritems",
    "astropy.wcs.setup_package.WCSROOT",
    "astropy.wcs.setup_package.generate_c_docstrings",
    "astropy.wcs.setup_package.get_wcslib_cfg",
    "astropy_helpers.setup_helpers.DistutilsExtensionArgs",
    "dict",
    "distutils.core.Extension",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.setup_package.get_external_libraries": {
  "data": {
   "lineno": 358
  },
  "type": "function"
 },
 "astropy.wcs.setup_package.get_package_data": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "astropy.wcs.setup_package.shutil",
    "astropy_helpers.setup_helpers.use_system_library",
    "distutils.dep_util.newer_group",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.setup_package.get_wcslib_cfg": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "astropy.version.debug",
    "astropy.wcs.setup_package.WCSROOT",
    "astropy.wcs.setup_package.sys",
    "astropy.wcs.setup_package.write_wcsconfig_h",
    "astropy_helpers.distutils_helpers.get_distutils_build_option",
    "astropy_helpers.setup_helpers.get_compiler_option",
    "astropy_helpers.setup_helpers.pkg_config",
    "astropy_helpers.setup_helpers.use_system_library",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.setup_package.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "astropy.wcs.setup_package.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "astropy.wcs.setup_package.newer_group": {
  "data": {
   "shadows": "distutils.dep_util.newer_group"
  },
  "type": "import"
 },
 "astropy.wcs.setup_package.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "astropy.wcs.setup_package.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.wcs.setup_package.requires_2to3": {
  "data": {
   "lineno": 362
  },
  "type": "function"
 },
 "astropy.wcs.setup_package.setup_helpers": {
  "data": {
   "shadows": "astropy_helpers.setup_helpers"
  },
  "type": "import"
 },
 "astropy.wcs.setup_package.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "astropy.wcs.setup_package.six": {
  "data": {
   "shadows": "astropy.extern.six"
  },
  "type": "import"
 },
 "astropy.wcs.setup_package.string_escape": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "astropy.wcs.setup_package.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.wcs.setup_package.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.wcs.setup_package.write_wcsconfig_h": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "astropy.wcs.setup_package.WCSVERSION",
    "astropy.wcs.setup_package.determine_64_bit_int",
    "astropy.wcs.setup_package.io",
    "astropy_helpers.setup_helpers.write_if_different"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests": {
  "data": {},
  "type": "module"
 },
 "astropy.wcs.tests.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.wcs.tests.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.wcs.tests.extension": {
  "data": {},
  "type": "module"
 },
 "astropy.wcs.tests.extension.setup": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "__name__",
    "astropy.wcs.get_include",
    "astropy.wcs.tests.extension.setup.astropy_path",
    "astropy.wcs.tests.extension.setup.define_macros",
    "astropy.wcs.tests.extension.setup.numpy_include",
    "astropy.wcs.tests.extension.setup.os",
    "astropy.wcs.tests.extension.setup.sys",
    "astropy.wcs.tests.extension.setup.wcsapi_test_module",
    "distutils.core.Extension",
    "distutils.core.setup",
    "numpy.get_include",
    "numpy.get_numpy_include",
    "str"
   ]
  },
  "type": "module"
 },
 "astropy.wcs.tests.extension.setup.Extension": {
  "data": {
   "shadows": "distutils.core.Extension"
  },
  "type": "import"
 },
 "astropy.wcs.tests.extension.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.wcs.tests.extension.setup.astropy_path": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "astropy.wcs.tests.extension.setup.define_macros": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "astropy.wcs.tests.extension.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.wcs.tests.extension.setup.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.wcs.tests.extension.setup.numpy_include": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "astropy.wcs.tests.extension.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.wcs.tests.extension.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.wcs.tests.extension.setup.setup": {
  "data": {
   "shadows": "distutils.core.setup"
  },
  "type": "import"
 },
 "astropy.wcs.tests.extension.setup.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.wcs.tests.extension.setup.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.wcs.tests.extension.setup.wcs": {
  "data": {
   "shadows": "astropy.wcs"
  },
  "type": "import"
 },
 "astropy.wcs.tests.extension.setup.wcsapi_test_module": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "astropy.wcs.tests.extension.test_extension": {
  "data": {},
  "type": "module"
 },
 "astropy.wcs.tests.extension.test_extension.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.wcs.tests.extension.test_extension.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.wcs.tests.extension.test_extension.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.wcs.tests.extension.test_extension.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.wcs.tests.extension.test_extension.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.wcs.tests.extension.test_extension.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "astropy.wcs.tests.extension.test_extension.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "astropy.wcs.tests.extension.test_extension.test_wcsapi_extension": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "astropy.wcs.tests.extension.test_extension.os",
    "astropy.wcs.tests.extension.test_extension.pytest",
    "astropy.wcs.tests.extension.test_extension.subprocess",
    "astropy.wcs.tests.extension.test_extension.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.extension.test_extension.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.wcs.tests.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_pickle": {
  "data": {},
  "type": "module"
 },
 "astropy.wcs.tests.test_pickle.Sub": {
  "data": {
   "lineno": 90
  },
  "type": "class"
 },
 "astropy.wcs.tests.test_pickle.Sub.__init__": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_pickle.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_pickle.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_pickle.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_pickle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_pickle.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_pickle.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_pickle.test_basic": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_pickle.test_dist": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "astropy.wcs.tests.test_pickle.os",
    "get_pkg_data_fileobj",
    "numpy.random.rand",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_pickle.test_sip": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "astropy.wcs.tests.test_pickle.os",
    "get_pkg_data_fileobj",
    "numpy.random.rand",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_pickle.test_sip2": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "astropy.wcs.tests.test_pickle.os",
    "get_pkg_data_fileobj",
    "numpy.random.rand",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_pickle.test_subclass": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "astropy.wcs.tests.test_pickle.Sub",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_pickle.test_wcs": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "astropy.wcs.tests.test_pickle.os",
    "get_pkg_data_contents",
    "numpy.random.rand",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_pickle.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_profiling": {
  "data": {
   "symbols_in_volume": [
    "astropy.wcs.tests.test_profiling.os",
    "get_pkg_data_filenames"
   ]
  },
  "type": "module"
 },
 "astropy.wcs.tests.test_profiling.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_profiling.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_profiling.hdr_map_file_list": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "astropy.wcs.tests.test_profiling.hdr_spec_file_list": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "astropy.wcs.tests.test_profiling.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_profiling.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_profiling.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_profiling.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_profiling.test_map": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "astropy.wcs.tests.test_profiling.hdr_map_file_list",
    "astropy.wcs.tests.test_profiling.os",
    "astropy.wcs.tests.test_profiling.pytest",
    "get_pkg_data_contents",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_profiling.test_read_map_files": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "astropy.wcs.tests.test_profiling.hdr_map_file_list",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_profiling.test_read_spec_files": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "astropy.wcs.tests.test_profiling.hdr_spec_file_list",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_profiling.test_spectrum": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "astropy.wcs.tests.test_profiling.hdr_spec_file_list",
    "astropy.wcs.tests.test_profiling.os",
    "astropy.wcs.tests.test_profiling.pytest",
    "get_pkg_data_contents",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_profiling.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "astropy.wcs.tests.test_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_utils.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_utils.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_utils.test_add_stokes": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "WCS",
    "astropy.wcs.tests.test_utils.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_utils.test_axis_names": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "WCS"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_utils.test_celestial": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "WCS",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_utils.test_has_celestial": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "WCS",
    "astropy.wcs.tests.test_utils.pytest",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_utils.test_invalid_slice": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "ValueError",
    "WCS",
    "astropy.wcs.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_utils.test_is_celestial": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "WCS",
    "astropy.wcs.tests.test_utils.pytest",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_utils.test_is_proj_plane_distorted": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "WCS",
    "get_pkg_data_filename",
    "is_proj_plane_distorted"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_utils.test_noncelestial_scale": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "WCS",
    "astropy.wcs.tests.test_utils.pytest",
    "non_celestial_pixel_scales",
    "numpy.array",
    "numpy.diag",
    "numpy.eye",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_utils.test_pixel_scale_matrix": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "WCS",
    "astropy.wcs.tests.test_utils.pytest",
    "len",
    "numpy.diag",
    "numpy.eye",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_utils.test_pixscale_cd": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "WCS",
    "numpy.testing.assert_almost_equal",
    "proj_plane_pixel_scales"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_utils.test_pixscale_cd_rotated": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "WCS",
    "astropy.wcs.tests.test_utils.pytest",
    "numpy.cos",
    "numpy.pi",
    "numpy.sin",
    "numpy.testing.assert_almost_equal",
    "proj_plane_pixel_scales"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_utils.test_pixscale_nodrop": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "WCS",
    "numpy.testing.assert_almost_equal",
    "proj_plane_pixel_scales"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_utils.test_pixscale_pc_rotated": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "WCS",
    "astropy.wcs.tests.test_utils.pytest",
    "numpy.cos",
    "numpy.pi",
    "numpy.sin",
    "numpy.testing.assert_almost_equal",
    "proj_plane_pixel_scales"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_utils.test_pixscale_withdrop": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "WCS",
    "numpy.testing.assert_almost_equal",
    "proj_plane_pixel_scales"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_utils.test_skycoord_to_pixel": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "SkyCoord",
    "WCS",
    "astropy.wcs.tests.test_utils.pytest",
    "get_pkg_data_contents",
    "numpy.testing.assert_allclose",
    "pixel_to_skycoord",
    "skycoord_to_pixel"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_utils.test_skycoord_to_pixel.SkyCoord2": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "SkyCoord"
   ]
  },
  "type": "class"
 },
 "astropy.wcs.tests.test_utils.test_skycoord_to_pixel_distortions": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "SkyCoord",
    "WCS",
    "astropy.wcs.tests.test_utils.pytest",
    "get_pkg_data_filename",
    "numpy.testing.assert_allclose",
    "pixel_to_skycoord",
    "skycoord_to_pixel"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_utils.test_slice": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "WCS",
    "numpy.all",
    "numpy.array",
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_utils.test_slice_fitsorder": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "WCS",
    "numpy.all",
    "numpy.array",
    "slice"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_utils.test_slice_getitem": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "WCS",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_utils.test_wcs_dropping": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "WCS",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.fill_diagonal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_utils.test_wcs_swapping": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "WCS",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.fill_diagonal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_utils.test_wcs_to_celestial_frame": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "Time",
    "ValueError",
    "WCS",
    "astropy.wcs.tests.test_utils.pytest",
    "isinstance",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_utils.test_wcs_to_celestial_frame_extend": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "OffsetFrame",
    "ValueError",
    "WCS",
    "astropy.wcs.tests.test_utils.pytest",
    "custom_frame_mappings",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_utils.test_wcs_to_celestial_frame_extend.OffsetFrame": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.wcs.tests.test_utils.test_wcs_to_celestial_frame_extend.identify_offset": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "OffsetFrame"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_utils.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_utils.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_wcs": {
  "data": {},
  "type": "module"
 },
 "astropy.wcs.tests.test_wcs.TestMaps": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.wcs.tests.test_wcs.TestMaps.setup": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "get_pkg_data_filenames",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.TestMaps.test_consistency": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.TestMaps.test_maps": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "astropy.wcs.tests.test_wcs.os",
    "get_pkg_data_contents",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.TestSpectra": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.wcs.tests.test_wcs.TestSpectra.setup": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "get_pkg_data_filenames",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.TestSpectra.test_consistency": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.TestSpectra.test_spectra": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "astropy.wcs.tests.test_wcs.os",
    "get_pkg_data_contents",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_wcs.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_wcs.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_wcs.assert_array_almost_equal_nulp": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal_nulp"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_wcs.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_wcs.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_wcs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_wcs.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_wcs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_wcs.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_wcs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_wcs.test_3d_shapes": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "len",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_all_world2pix": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "IOError",
    "NumpyRNGContext",
    "astropy.wcs.tests.test_wcs.os",
    "datetime.datetime.now",
    "get_pkg_data_filename",
    "list",
    "map",
    "numpy.amax",
    "numpy.append",
    "numpy.dstack",
    "numpy.int",
    "numpy.linalg.norm",
    "numpy.mean",
    "numpy.meshgrid",
    "numpy.power",
    "numpy.random.rand",
    "numpy.sqrt",
    "numpy.sum",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_bounds_check": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_broadcasting": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_calc_footprint_1": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "get_pkg_data_filename",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_calc_footprint_2": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "get_pkg_data_filename",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_calc_footprint_3": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_dict_init": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_error_message": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "get_pkg_data_contents"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_extra_kwarg": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "NumpyRNGContext",
    "TypeError",
    "numpy.random.rand",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_find_all_wcs_crash": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "get_pkg_data_filename",
    "open",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_fixes": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "catch_warnings",
    "len",
    "run",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_fixes.run": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "get_pkg_data_contents"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_fixes2": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "get_pkg_data_contents"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_footprint_to_file": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_hst_wcs": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "get_pkg_data_filename",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_inconsistent_sip": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "all",
    "get_pkg_data_contents"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_invalid_shape": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_invalid_spherical": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "astropy.wcs.tests.test_wcs.io",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_keyedsip": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": [
    "get_pkg_data_filename",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_list_naxis": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "get_pkg_data_filename",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_load_fits_path": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "get_pkg_data_filename"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_naxis": {
  "data": {
   "lineno": 1004
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_no_comments_in_header": {
  "data": {
   "lineno": 366
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_no_iteration": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "NewWCS",
    "TypeError",
    "iter"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_no_iteration.NewWCS": {
  "data": {
   "lineno": 744
  },
  "type": "class"
 },
 "astropy.wcs.tests.test_wcs.test_no_truncate_crval": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_no_truncate_crval_p17": {
  "data": {
   "lineno": 899
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_no_truncate_crval_try2": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_no_truncate_using_compare": {
  "data": {
   "lineno": 917
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_out_of_bounds": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "get_pkg_data_contents",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_outside_sky": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "get_pkg_data_contents",
    "numpy.all",
    "numpy.any",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_passing_ImageHDU": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "get_pkg_data_filename"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_pix2world": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "catch_warnings",
    "get_pkg_data_filename",
    "len",
    "numpy.abs",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_preserve_shape": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_printwcs": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "get_pkg_data_contents"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_scamp_sip_distortion_parameters": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "get_pkg_data_contents"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_shape_mismatch": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_sip": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "get_pkg_data_contents",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_sip_broken": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "get_pkg_data_contents"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_sip_tpv_agreement": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "astropy.wcs.tests.test_wcs.os",
    "get_pkg_data_contents",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_sip_with_altkey": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "get_pkg_data_filename",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_to_fits": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_to_fits_1": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "get_pkg_data_filename",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_to_header_string": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_to_header_warning": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "catch_warnings",
    "get_pkg_data_filename",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_tpv_copy": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "astropy.wcs.tests.test_wcs.os",
    "get_pkg_data_contents"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_unit_normalization": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "get_pkg_data_contents"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_validate": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "catch_warnings",
    "get_pkg_data_filename",
    "open",
    "repr",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_validate_faulty_wcs": {
  "data": {
   "lineno": 590
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_validate_with_2_wcses": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "get_pkg_data_filename"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_warning_about_defunct_keywords": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "catch_warnings",
    "len",
    "run",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_warning_about_defunct_keywords.run": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "get_pkg_data_contents"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_warning_about_defunct_keywords_exception": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "astropy.wcs.tests.test_wcs.warnings",
    "catch_warnings",
    "raises",
    "run"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.test_warning_about_defunct_keywords_exception.run": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "get_pkg_data_contents"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcs.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_wcs.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_wcsprm": {
  "data": {},
  "type": "module"
 },
 "astropy.wcs.tests.test_wcsprm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_wcsprm.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_wcsprm.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_wcsprm.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_wcsprm.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_wcsprm.locale": {
  "data": {
   "shadows": "locale"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_wcsprm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_wcsprm.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_wcsprm.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_wcsprm.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_wcsprm.test_alt": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_alt_invalid1": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_alt_invalid2": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_axis_types": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_bounds_check": {
  "data": {
   "lineno": 861
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_cd": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.float",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_cd_3d": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "get_pkg_data_contents"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_cd_invalid": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_cd_missing": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "AttributeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_cd_missing2": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "AttributeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_cdelt": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_cdelt_delete": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_cdfix": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_cel_offset": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_celfix": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_cname": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_cname_invalid": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_colax": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ValueError",
    "astropy.wcs.tests.test_wcsprm.pytest",
    "numpy.intc",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_colnum": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "OverflowError",
    "TypeError",
    "astropy.wcs.tests.test_wcsprm.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_colnum_invalid": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_compare": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "get_pkg_data_contents",
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_crder": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.float",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_crota": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "numpy.float",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_crota_missing": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "AttributeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_crota_missing2": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "AttributeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_crpix": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "ValueError",
    "astropy.wcs.tests.test_wcsprm.pytest",
    "numpy.float",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_crval": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "numpy.float",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_csyer": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.float",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_ctype": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "list",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_ctype_index_error": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "IndexError",
    "astropy.wcs.tests.test_wcsprm.pytest",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_ctype_invalid_error": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.wcs.tests.test_wcsprm.pytest",
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_ctype_repr": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "list",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_cubeface": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "OverflowError",
    "astropy.wcs.tests.test_wcsprm.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_cunit": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_cunit_invalid": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "catch_warnings",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_cunit_invalid2": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "catch_warnings",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_cylfix": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "ValueError",
    "astropy.wcs.tests.test_wcsprm.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_dateavg": {
  "data": {
   "lineno": 361
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_dateobs": {
  "data": {
   "lineno": 367
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_datfix": {
  "data": {
   "lineno": 373
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_detailed_err": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_equinox": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "TypeError",
    "astropy.wcs.tests.test_wcsprm.pytest",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_fix": {
  "data": {
   "lineno": 393
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_fix2": {
  "data": {
   "lineno": 404
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_fix3": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_fix4": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "ValueError",
    "astropy.wcs.tests.test_wcsprm.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_fix5": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "ValueError",
    "astropy.wcs.tests.test_wcsprm.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_get_pc": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "AssertionError",
    "RuntimeError",
    "ValueError",
    "get_pkg_data_contents"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_get_ps": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_get_pv": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_header_parse": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "get_pkg_data_fileobj"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_imgpix_matrix": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "AssertionError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_imgpix_matrix2": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "AttributeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_invalid_args": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "astropy.wcs.tests.test_wcsprm.pytest",
    "get_pkg_data_contents"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_isunity": {
  "data": {
   "lineno": 468
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_iteration": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_lat": {
  "data": {
   "lineno": 473
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_lat_set": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "AttributeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_latpole": {
  "data": {
   "lineno": 484
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_lattyp": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "print",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_lattyp_set": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "AttributeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_lng": {
  "data": {
   "lineno": 505
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_lng_set": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "AttributeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_lngtyp": {
  "data": {
   "lineno": 516
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_lngtyp_set": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "AttributeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_locale": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "astropy.wcs.tests.test_wcsprm.locale",
    "astropy.wcs.tests.test_wcsprm.pytest",
    "astropy.wcs.tests.test_wcsprm.re",
    "get_pkg_data_contents",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_lonpole": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_mix": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "astropy.wcs.tests.test_wcsprm.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_mjdavg": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_mjdobs": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_name": {
  "data": {
   "lineno": 561
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_naxis": {
  "data": {
   "lineno": 568
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_naxis_set": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "AttributeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_obsgeo": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.isnan",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_pc": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_pc_missing": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "AttributeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_phi0": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_piximg_matrix": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "AssertionError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_piximg_matrix2": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "AttributeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_print_contents": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_radesys": {
  "data": {
   "lineno": 636
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_radesys_defaults": {
  "data": {
   "lineno": 906
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_radesys_defaults_full": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_restfrq": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_restwav": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_set_ps": {
  "data": {
   "lineno": 659
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_set_ps_realloc": {
  "data": {
   "lineno": 666
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_set_pv": {
  "data": {
   "lineno": 671
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_set_pv_realloc": {
  "data": {
   "lineno": 678
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_spcfix": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "get_pkg_data_contents"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_spec": {
  "data": {
   "lineno": 692
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_spec_set": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "AttributeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_specsys": {
  "data": {
   "lineno": 703
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_sptr": {
  "data": {
   "lineno": 710
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_ssysobs": {
  "data": {
   "lineno": 715
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_ssyssrc": {
  "data": {
   "lineno": 722
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_sub_segfault": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "astropy.wcs.tests.test_wcsprm.gc",
    "get_pkg_data_filename"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_tab": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_theta0": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_toheader": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_unicode": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_unit": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_unit2": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_unit3": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "astropy.wcs.tests.test_wcsprm.pytest"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_unitfix": {
  "data": {
   "lineno": 344
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_velangl": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_velosys": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_velref": {
  "data": {
   "lineno": 767
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_wcs_sub": {
  "data": {
   "lineno": 874
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_wcs_sub_error_message": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "TypeError",
    "astropy.wcs.tests.test_wcsprm.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.test_zsource": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.tests.test_wcsprm.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.wcs.tests.test_wcsprm.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.wcs.tests.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.wcs.utils": {
  "data": {
   "symbols_in_volume": [
    "astropy.wcs.utils._wcs_to_celestial_frame_builtin"
   ]
  },
  "type": "module"
 },
 "astropy.wcs.utils.WCS_FRAME_MAPPINGS": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "astropy.wcs.utils.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "astropy.wcs.utils.__doctest_skip__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "astropy.wcs.utils._has_distortion": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "any",
    "getattr"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.utils._is_cd_orthogonal": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.abs",
    "numpy.amax",
    "numpy.dot",
    "numpy.eye",
    "numpy.linalg.det"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.utils._wcs_to_celestial_frame_builtin": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "FK4",
    "FK4NoETerms",
    "FK5",
    "Galactic",
    "ICRS",
    "Time",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.wcs.utils.add_stokes_axis_to_wcs": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.utils.custom_frame_mappings": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "astropy.wcs.utils.custom_frame_mappings.__enter__": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "astropy.wcs.utils.custom_frame_mappings.__exit__": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "astropy.wcs.utils.WCS_FRAME_MAPPINGS"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.utils.custom_frame_mappings.__init__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "astropy.wcs.utils.WCS_FRAME_MAPPINGS",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.wcs.utils.is_proj_plane_distorted": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "astropy.wcs.utils._has_distortion",
    "astropy.wcs.utils._is_cd_orthogonal"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.utils.non_celestial_pixel_scales": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "numpy.allclose",
    "numpy.diagonal",
    "numpy.extract",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.wcs.utils.pixel_to_skycoord": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "UnitSphericalRepresentation",
    "ValueError",
    "astropy.wcs.utils._has_distortion",
    "astropy.wcs.utils.wcs_to_celestial_frame",
    "cls"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.wcs.utils.proj_plane_pixel_area": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "numpy.linalg.det"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.utils.proj_plane_pixel_scales": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "numpy.float",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.utils.skycoord_to_pixel": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "astropy.wcs.utils._has_distortion",
    "astropy.wcs.utils.wcs_to_celestial_frame"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.utils.u": {
  "data": {
   "shadows": "units"
  },
  "type": "import"
 },
 "astropy.wcs.utils.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.wcs.utils.wcs_to_celestial_frame": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ValueError",
    "astropy.wcs.utils.WCS_FRAME_MAPPINGS",
    "func"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "RuntimeError",
    "astropy.wcs.wcs.__all__",
    "astropy.wcs.wcs._parsed_version",
    "astropy.wcs.wcs._wcs",
    "astropy.wcs.wcs.platform",
    "astropy.wcs.wcs.re",
    "int",
    "locals",
    "object"
   ]
  },
  "type": "module"
 },
 "astropy.wcs.wcs.DistortionLookupTable": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "astropy.wcs.wcs.FITSFixedWarning": {
  "data": {
   "lineno": 204
  },
  "type": "class"
 },
 "astropy.wcs.wcs.InconsistentAxisTypesError": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "astropy.wcs.wcs.InvalidCoordinateError": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "astropy.wcs.wcs.InvalidSubimageSpecificationError": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "astropy.wcs.wcs.InvalidTabularParametersError": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "astropy.wcs.wcs.InvalidTransformError": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "astropy.wcs.wcs.NoConvergence": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "astropy.wcs.wcs.NoConvergence.__init__": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "astropy.wcs.wcs.NoConvergence",
    "super"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.NoSolutionError": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "astropy.wcs.wcs.NoWcsKeywordsFoundError": {
  "data": {
   "lineno": 125
  },
  "type": "constant"
 },
 "astropy.wcs.wcs.NonseparableSubimageCoordinateSystemError": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "astropy.wcs.wcs.SIP_KW": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "astropy.wcs.wcs.SingularMatrixError": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "astropy.wcs.wcs.Sip": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "astropy.wcs.wcs.Tabprm": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "astropy.wcs.wcs.WCS": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "astropy.wcs.wcs.WCSBase",
    "astropy.wcs.wcs._wcs"
   ]
  },
  "type": "class"
 },
 "astropy.wcs.wcs.WCS.__copy__": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "astropy.wcs.wcs.WCSBase"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.__deepcopy__": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "astropy.wcs.wcs.WCSBase",
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.__getitem__": {
  "data": {
   "lineno": 2986
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.__init__": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "IOError",
    "TypeError",
    "ValueError",
    "astropy.wcs.wcs.FITSFixedWarning",
    "astropy.wcs.wcs.WCSBase",
    "astropy.wcs.wcs._parse_keysel",
    "astropy.wcs.wcs._wcs",
    "astropy.wcs.wcs.os",
    "astropy.wcs.wcs.warnings",
    "isinstance",
    "possible_filename"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.__iter__": {
  "data": {
   "lineno": 2993,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.__reduce__": {
  "data": {
   "lineno": 2838,
   "symbols_in_volume": [
    "astropy.wcs.wcs.io"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.__repr__": {
  "data": {
   "lineno": 2707,
   "symbols_in_volume": [
    "hasattr",
    "map",
    "range",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS._all_world2pix": {
  "data": {
   "lineno": 1419,
   "symbols_in_volume": [
    "astropy.wcs.wcs.NoConvergence",
    "numpy.abs",
    "numpy.all",
    "numpy.any",
    "numpy.geterr",
    "numpy.isfinite",
    "numpy.nanmax",
    "numpy.seterr",
    "numpy.square",
    "numpy.sum",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS._array_converter": {
  "data": {
   "lineno": 1205,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "_return_list_of_arrays",
    "_return_single_array",
    "int",
    "len",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS._array_converter._return_list_of_arrays": {
  "data": {
   "lineno": 1215,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "numpy.broadcast_arrays",
    "numpy.hstack",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS._array_converter._return_single_array": {
  "data": {
   "lineno": 1234,
   "symbols_in_volume": [
    "ValueError",
    "func"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS._as_mpl_axes": {
  "data": {
   "lineno": 3056
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS._denormalize_sky": {
  "data": {
   "lineno": 1146,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS._fix_ctype": {
  "data": {
   "lineno": 2571,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS._fix_scamp": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "astropy.wcs.wcs.FITSFixedWarning",
    "astropy.wcs.wcs.warnings",
    "max",
    "numpy.asarray",
    "set"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS._get_naxis": {
  "data": {
   "lineno": 2689,
   "symbols_in_volume": [
    "KeyError",
    "astropy.wcs.wcs.itertools",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS._naxis1": {
  "data": {
   "lineno": 2677
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS._naxis2": {
  "data": {
   "lineno": 2685
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS._normalize_sky": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "ValueError",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS._read_d2im_old_format": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "astropy.wcs.wcs.DistortionLookupTable",
    "astropy.wcs.wcs.warnings",
    "numpy.array",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS._read_det2im_kw": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "KeyError",
    "astropy.wcs.wcs.DistortionLookupTable",
    "astropy.wcs.wcs.warnings",
    "isinstance",
    "list",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS._read_distortion_kw": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "ValueError",
    "astropy.wcs.wcs.DistortionLookupTable",
    "astropy.wcs.wcs.warnings",
    "isinstance",
    "list",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS._read_sip_kw": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "astropy.wcs.wcs.Sip",
    "int",
    "isinstance",
    "numpy.double",
    "numpy.zeros",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS._remove_sip_kw": {
  "data": {
   "lineno": 989,
   "symbols_in_volume": [
    "astropy.wcs.wcs.SIP_KW",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS._write_det2im": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "write_d2i"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS._write_det2im.write_d2i": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "int",
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS._write_distortion_kw": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "str",
    "write_dist"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS._write_distortion_kw.write_dist": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "int",
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS._write_sip_kw": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": [
    "str",
    "write_array"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS._write_sip_kw.write_array": {
  "data": {
   "lineno": 1128,
   "symbols_in_volume": [
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.all_pix2world": {
  "data": {
   "lineno": 1279
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.all_world2pix": {
  "data": {
   "lineno": 1817,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.axis_type_names": {
  "data": {
   "lineno": 2999,
   "symbols_in_volume": [
    "len",
    "list",
    "property",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.calc_footprint": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "astropy.wcs.wcs.warnings",
    "numpy.array",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.celestial": {
  "data": {
   "lineno": 3016,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.copy": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "astropy.wcs.wcs.copy"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.deepcopy": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "astropy.wcs.wcs.copy"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.det2im": {
  "data": {
   "lineno": 2284
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.dropaxis": {
  "data": {
   "lineno": 2852,
   "symbols_in_volume": [
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.fix": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "astropy.wcs.wcs.FITSFixedWarning",
    "astropy.wcs.wcs.warnings"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.footprint_to_file": {
  "data": {
   "lineno": 2629,
   "symbols_in_volume": [
    "ValueError",
    "open"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.get_axis_types": {
  "data": {
   "lineno": 2741,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.has_celestial": {
  "data": {
   "lineno": 3027,
   "symbols_in_volume": [
    "astropy.wcs.wcs.InconsistentAxisTypesError",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.is_celestial": {
  "data": {
   "lineno": 3023,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.p4_pix2foc": {
  "data": {
   "lineno": 2255
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.pix2foc": {
  "data": {
   "lineno": 2225
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.pixel_scale_matrix": {
  "data": {
   "lineno": 3034,
   "symbols_in_volume": [
    "AttributeError",
    "astropy.wcs.wcs.InconsistentAxisTypesError",
    "numpy.array",
    "numpy.diag",
    "numpy.matrix",
    "property"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.printwcs": {
  "data": {
   "lineno": 2704,
   "symbols_in_volume": [
    "print",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.reorient_celestial_first": {
  "data": {
   "lineno": 2899
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.sip_foc2pix": {
  "data": {
   "lineno": 2354,
   "symbols_in_volume": [
    "TypeError",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.sip_pix2foc": {
  "data": {
   "lineno": 2313,
   "symbols_in_volume": [
    "TypeError",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.slice": {
  "data": {
   "lineno": 2907,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "all",
    "astropy.wcs.wcs.warnings",
    "enumerate",
    "hasattr",
    "isinstance",
    "len",
    "slice",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.sub": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "astropy.wcs.wcs.copy"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.swapaxes": {
  "data": {
   "lineno": 2876,
   "symbols_in_volume": [
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.to_fits": {
  "data": {
   "lineno": 2391
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.to_header": {
  "data": {
   "lineno": 2434,
   "symbols_in_volume": [
    "any",
    "astropy.wcs.wcs.WCSHDO_SIP",
    "astropy.wcs.wcs.warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.to_header_string": {
  "data": {
   "lineno": 2622,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.wcs_pix2world": {
  "data": {
   "lineno": 1350,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCS.wcs_world2pix": {
  "data": {
   "lineno": 2162,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.WCSBase": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "astropy.wcs.wcs.WCSHDO_SIP": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "astropy.wcs.wcs.WcsError": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "astropy.wcs.wcs.Wcsprm": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "astropy.wcs.wcs.__": {
  "data": {
   "shadows": "_docutil"
  },
  "type": "import"
 },
 "astropy.wcs.wcs.__WCS_unpickle__": {
  "data": {
   "lineno": 3078,
   "symbols_in_volume": [
    "astropy.wcs.wcs.WCS",
    "astropy.wcs.wcs.io"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.__all__": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "astropy.wcs.wcs.__doctest_skip__": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "astropy.wcs.wcs._parse_keysel": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ValueError",
    "astropy.wcs.wcs._wcs"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs._parsed_version": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "astropy.wcs.wcs._wcs": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "astropy.wcs.wcs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.wcs.wcs.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "astropy.wcs.wcs.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "astropy.wcs.wcs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.wcs.wcs.find_all_wcs": {
  "data": {
   "lineno": 3094,
   "symbols_in_volume": [
    "TypeError",
    "astropy.wcs.wcs.WCS",
    "astropy.wcs.wcs._parse_keysel",
    "astropy.wcs.wcs._wcs",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "astropy.wcs.wcs.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "astropy.wcs.wcs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "astropy.wcs.wcs.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "astropy.wcs.wcs.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "astropy.wcs.wcs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.wcs.wcs.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "astropy.wcs.wcs.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "astropy.wcs.wcs.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.wcs.wcs.validate": {
  "data": {
   "lineno": 3185,
   "symbols_in_volume": [
    "NameError",
    "_WcsValidateHduResult",
    "_WcsValidateResults",
    "_WcsValidateWcsResult",
    "astropy.wcs.wcs.FITSFixedWarning",
    "astropy.wcs.wcs.WCS",
    "astropy.wcs.wcs.WcsError",
    "astropy.wcs.wcs._wcs",
    "astropy.wcs.wcs.find_all_wcs",
    "astropy.wcs.wcs.warnings",
    "enumerate",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.validate._WcsValidateHduResult": {
  "data": {
   "lineno": 3225,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "class"
 },
 "astropy.wcs.wcs.validate._WcsValidateHduResult.__init__": {
  "data": {
   "lineno": 3226,
   "symbols_in_volume": [
    "list.__init__"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.validate._WcsValidateHduResult.__repr__": {
  "data": {
   "lineno": 3231,
   "symbols_in_volume": [
    "len",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.validate._WcsValidateResults": {
  "data": {
   "lineno": 3243,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "class"
 },
 "astropy.wcs.wcs.validate._WcsValidateResults.__repr__": {
  "data": {
   "lineno": 3244,
   "symbols_in_volume": [
    "len",
    "repr"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.validate._WcsValidateWcsResult": {
  "data": {
   "lineno": 3203,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "class"
 },
 "astropy.wcs.wcs.validate._WcsValidateWcsResult.__init__": {
  "data": {
   "lineno": 3204
  },
  "type": "function"
 },
 "astropy.wcs.wcs.validate._WcsValidateWcsResult.__repr__": {
  "data": {
   "lineno": 3207,
   "symbols_in_volume": [
    "astropy.wcs.wcs.textwrap",
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcs.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "astropy.wcs.wcslint": {
  "data": {},
  "type": "module"
 },
 "astropy.wcs.wcslint.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "astropy.wcs.wcslint.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "astropy.wcs.wcslint.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "astropy.wcs.wcslint.main": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "astropy.wcs.wcslint.argparse",
    "print"
   ]
  },
  "type": "function"
 },
 "astropy.wcs.wcslint.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "astropy.wcs.wcslint.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "astropy.webbrowser": {
  "data": {
   "shadows": "webbrowser"
  },
  "type": "import"
 }
}