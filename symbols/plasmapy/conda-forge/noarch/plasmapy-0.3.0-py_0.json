{
 "plasmapy": {
  "lineno": null,
  "symbols_in_volume": [
   "sys",
   "sys.version_info"
  ],
  "type": "module"
 },
 "plasmapy.atomic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.atomic.atomic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.atomic.atomic._is_electron": {
  "lineno": 1141,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "plasmapy.atomic.atomic.atomic_number": {
  "lineno": 53,
  "symbols_in_volume": [
   "numbers.Integral",
   "plasmapy.atomic.particle_class.Particle",
   "plasmapy.atomic.particle_input.particle_input"
  ],
  "type": "function"
 },
 "plasmapy.atomic.atomic.common_isotopes": {
  "lineno": 627,
  "symbols_in_volume": [
   "numbers.Integral",
   "plasmapy.atomic.exceptions.InvalidElementError",
   "plasmapy.atomic.exceptions.InvalidParticleError",
   "plasmapy.atomic.symbols.atomic_symbol",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "plasmapy.atomic.atomic.common_isotopes.common_isotopes_for_element": {
  "lineno": 702,
  "symbols_in_volume": [
   "plasmapy.atomic.isotopes._Isotopes",
   "plasmapy.atomic.isotopes._Isotopes.keys",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "plasmapy.atomic.atomic.electric_charge": {
  "lineno": 373,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "plasmapy.atomic.particle_class.Particle",
   "plasmapy.atomic.particle_input.particle_input"
  ],
  "type": "function"
 },
 "plasmapy.atomic.atomic.half_life": {
  "lineno": 482,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "numbers.Integral",
   "plasmapy.atomic.particle_class.Particle",
   "plasmapy.atomic.particle_input.particle_input",
   "typing.Optional"
  ],
  "type": "function"
 },
 "plasmapy.atomic.atomic.integer_charge": {
  "lineno": 318,
  "symbols_in_volume": [
   "numbers.Integral",
   "plasmapy.atomic.particle_class.Particle",
   "plasmapy.atomic.particle_input.particle_input"
  ],
  "type": "function"
 },
 "plasmapy.atomic.atomic.is_stable": {
  "lineno": 428,
  "symbols_in_volume": [
   "numbers.Integral",
   "plasmapy.atomic.exceptions.InvalidIsotopeError",
   "plasmapy.atomic.particle_class.Particle",
   "plasmapy.atomic.particle_input.particle_input",
   "typing.Optional"
  ],
  "type": "function"
 },
 "plasmapy.atomic.atomic.isotopic_abundance": {
  "lineno": 266,
  "symbols_in_volume": [
   "numbers.Integral",
   "numbers.Real",
   "plasmapy.atomic.particle_class.Particle",
   "plasmapy.atomic.particle_input.particle_input",
   "typing.Optional"
  ],
  "type": "function"
 },
 "plasmapy.atomic.atomic.known_isotopes": {
  "lineno": 538,
  "symbols_in_volume": [
   "numbers.Integral",
   "plasmapy.atomic.elements._Elements.keys",
   "plasmapy.atomic.exceptions.InvalidElementError",
   "plasmapy.atomic.exceptions.InvalidParticleError",
   "plasmapy.atomic.symbols.atomic_symbol",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "plasmapy.atomic.atomic.known_isotopes.known_isotopes_for_element": {
  "lineno": 596,
  "symbols_in_volume": [
   "plasmapy.atomic.isotopes._Isotopes.keys",
   "plasmapy.atomic.symbols.atomic_symbol"
  ],
  "type": "function"
 },
 "plasmapy.atomic.atomic.mass_number": {
  "lineno": 100,
  "symbols_in_volume": [
   "numbers.Integral",
   "plasmapy.atomic.particle_class.Particle",
   "plasmapy.atomic.particle_input.particle_input"
  ],
  "type": "function"
 },
 "plasmapy.atomic.atomic.particle_mass": {
  "lineno": 209,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "numbers.Integral",
   "plasmapy.atomic.particle_class.Particle",
   "plasmapy.atomic.particle_input.particle_input"
  ],
  "type": "function"
 },
 "plasmapy.atomic.atomic.periodic_table_block": {
  "lineno": 1029,
  "symbols_in_volume": [
   "numbers.Integral",
   "plasmapy.atomic.elements._Elements",
   "plasmapy.atomic.symbols.atomic_symbol",
   "typing.Union"
  ],
  "type": "function"
 },
 "plasmapy.atomic.atomic.periodic_table_category": {
  "lineno": 1086,
  "symbols_in_volume": [
   "numbers.Integral",
   "plasmapy.atomic.elements._Elements",
   "plasmapy.atomic.symbols.atomic_symbol",
   "typing.Union"
  ],
  "type": "function"
 },
 "plasmapy.atomic.atomic.periodic_table_group": {
  "lineno": 972,
  "symbols_in_volume": [
   "numbers.Integral",
   "plasmapy.atomic.elements._Elements",
   "plasmapy.atomic.symbols.atomic_symbol",
   "typing.Union"
  ],
  "type": "function"
 },
 "plasmapy.atomic.atomic.periodic_table_period": {
  "lineno": 921,
  "symbols_in_volume": [
   "numbers.Integral",
   "plasmapy.atomic.elements._Elements",
   "plasmapy.atomic.symbols.atomic_symbol",
   "typing.Union"
  ],
  "type": "function"
 },
 "plasmapy.atomic.atomic.reduced_mass": {
  "lineno": 845,
  "symbols_in_volume": [
   "astropy.units.Quantity"
  ],
  "type": "function"
 },
 "plasmapy.atomic.atomic.reduced_mass.get_particle_mass": {
  "lineno": 894,
  "symbols_in_volume": [
   "astropy.constants.Constant",
   "astropy.units.Quantity",
   "astropy.units.UnitConversionError",
   "astropy.units.kg",
   "plasmapy.atomic.exceptions.MissingAtomicDataError",
   "plasmapy.atomic.particle_class.Particle"
  ],
  "type": "function"
 },
 "plasmapy.atomic.atomic.stable_isotopes": {
  "lineno": 747,
  "symbols_in_volume": [
   "numbers.Integral",
   "plasmapy.atomic.exceptions.InvalidElementError",
   "plasmapy.atomic.exceptions.InvalidParticleError",
   "plasmapy.atomic.symbols.atomic_symbol",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "plasmapy.atomic.atomic.stable_isotopes.stable_isotopes_for_element": {
  "lineno": 820,
  "symbols_in_volume": [
   "plasmapy.atomic.isotopes._Isotopes",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "plasmapy.atomic.atomic.standard_atomic_weight": {
  "lineno": 148,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "plasmapy.atomic.particle_class.Particle",
   "plasmapy.atomic.particle_input.particle_input"
  ],
  "type": "function"
 },
 "plasmapy.atomic.elements": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "json.loads",
   "pkgutil.get_data"
  ],
  "type": "module"
 },
 "plasmapy.atomic.elements._element_obj_hook": {
  "lineno": 17,
  "symbols_in_volume": [
   "astropy.units.Unit"
  ],
  "type": "function"
 },
 "plasmapy.atomic.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.atomic.exceptions.AtomicError": {
  "lineno": 4,
  "symbols_in_volume": [
   "plasmapy.utils.PlasmaPyError"
  ],
  "type": "class"
 },
 "plasmapy.atomic.exceptions.AtomicWarning": {
  "lineno": 53,
  "symbols_in_volume": [
   "plasmapy.utils.PlasmaPyWarning"
  ],
  "type": "class"
 },
 "plasmapy.atomic.exceptions.ChargeError": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.atomic.exceptions.InvalidElementError": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.atomic.exceptions.InvalidIonError": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.atomic.exceptions.InvalidIsotopeError": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.atomic.exceptions.InvalidParticleError": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.atomic.exceptions.MissingAtomicDataError": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.atomic.exceptions.MissingAtomicDataWarning": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.atomic.exceptions.UnexpectedParticleError": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.atomic.ionization_state": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "plasmapy.atomic.ionization_state.IonizationState": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.atomic.ionization_state.IonizationState.T_e": {
  "lineno": 430,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.UnitConversionError",
   "astropy.units.UnitsError",
   "astropy.units.quantity_input",
   "astropy.units.temperature_energy",
   "plasmapy.atomic.exceptions.AtomicError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState.Z_mean": {
  "lineno": 514,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "numpy.nan",
   "numpy.sum",
   "plasmapy.atomic.exceptions.ChargeError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState.Z_most_abundant": {
  "lineno": 528,
  "symbols_in_volume": [
   "numbers.Integral",
   "numpy.any",
   "numpy.flatnonzero",
   "numpy.isnan",
   "plasmapy.atomic.exceptions.AtomicError",
   "typing.List"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState.Z_rms": {
  "lineno": 523,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "numpy.sqrt",
   "numpy.sum"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState.__eq__": {
  "lineno": 220,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.allclose",
   "astropy.units.m",
   "numpy.all",
   "numpy.allclose",
   "numpy.any",
   "numpy.isnan",
   "numpy.min",
   "plasmapy.atomic.exceptions.AtomicError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState.__getitem__": {
  "lineno": 150,
  "symbols_in_volume": [
   "numbers.Integral",
   "plasmapy.atomic.Particle",
   "plasmapy.atomic.exceptions.AtomicError",
   "plasmapy.atomic.exceptions.ChargeError",
   "plasmapy.atomic.exceptions.InvalidParticleError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState.__init__": {
  "lineno": 105,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.Quantity",
   "astropy.units.m",
   "astropy.units.temperature_energy",
   "numbers.Real",
   "numpy.inf",
   "numpy.isnan",
   "numpy.nan",
   "plasmapy.atomic.Particle",
   "plasmapy.atomic.exceptions.AtomicError",
   "plasmapy.atomic.particle_input",
   "plasmapy.utils.decorators.validate_quantities",
   "typing.Union",
   "warnings.warn"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState.__iter__": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState.__next__": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState.__repr__": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState.__setitem__": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState.__str__": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState._get_states_info": {
  "lineno": 569,
  "symbols_in_volume": [
   "numpy.isfinite",
   "typing.List"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState._is_normalized": {
  "lineno": 334,
  "symbols_in_volume": [
   "numbers.Real",
   "numpy.isclose",
   "numpy.sum",
   "typing.Optional"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState._particle_instances": {
  "lineno": 493,
  "symbols_in_volume": [
   "plasmapy.atomic.Particle",
   "typing.List"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState.atomic_number": {
  "lineno": 488,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState.base_particle": {
  "lineno": 483,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState.element": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState.equil_ionic_fractions": {
  "lineno": 354,
  "symbols_in_volume": [
   "astropy.units.K"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState.equilibrate": {
  "lineno": 363,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.quantity_input",
   "astropy.units.temperature_energy",
   "numpy.nan"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState.info": {
  "lineno": 595,
  "symbols_in_volume": [
   "numbers.Real",
   "numpy.all",
   "numpy.isfinite",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState.integer_charges": {
  "lineno": 509,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState.ionic_fractions": {
  "lineno": 293,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.m",
   "numpy.all",
   "numpy.any",
   "numpy.array",
   "numpy.float64",
   "numpy.full",
   "numpy.isclose",
   "numpy.isnan",
   "numpy.min",
   "numpy.nan",
   "numpy.sum",
   "plasmapy.atomic.exceptions.AtomicError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState.ionic_symbols": {
  "lineno": 504,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState.isotope": {
  "lineno": 475,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState.kappa": {
  "lineno": 457,
  "symbols_in_volume": [
   "numbers.Real",
   "numpy.real"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState.n_e": {
  "lineno": 372,
  "symbols_in_volume": [
   "astropy.units.m",
   "astropy.units.quantity_input",
   "numpy.sum"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState.n_elem": {
  "lineno": 387,
  "symbols_in_volume": [
   "astropy.units.m",
   "astropy.units.quantity_input",
   "numpy.inf",
   "numpy.isnan",
   "numpy.nan",
   "plasmapy.atomic.exceptions.AtomicError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState.normalize": {
  "lineno": 347,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState.number_densities": {
  "lineno": 407,
  "symbols_in_volume": [
   "astropy.units.m",
   "astropy.units.quantity_input",
   "numpy.any",
   "plasmapy.atomic.exceptions.AtomicError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_state.IonizationState.tol": {
  "lineno": 558,
  "symbols_in_volume": [
   "numbers.Real"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_states": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.atomic.ionization_states.IonizationStates": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.atomic.ionization_states.IonizationStates.T_e": {
  "lineno": 779,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.UnitsError",
   "astropy.units.quantity_input",
   "astropy.units.temperature_energy",
   "plasmapy.atomic.exceptions.AtomicError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_states.IonizationStates.__ITER__": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.ionization_states.IonizationStates.__eq__": {
  "lineno": 341,
  "symbols_in_volume": [
   "astropy.units.quantity.allclose",
   "numpy.all",
   "numpy.any",
   "numpy.isinf",
   "numpy.isnan",
   "numpy.min",
   "plasmapy.atomic.exceptions.AtomicError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_states.IonizationStates.__getitem__": {
  "lineno": 171,
  "symbols_in_volume": [
   "numbers.Integral",
   "numpy.sum",
   "plasmapy.atomic.IonizationState",
   "plasmapy.atomic.State",
   "plasmapy.atomic.atomic_number",
   "plasmapy.atomic.exceptions.ChargeError",
   "plasmapy.atomic.particle_symbol"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_states.IonizationStates.__init__": {
  "lineno": 121,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.Quantity",
   "astropy.units.m",
   "astropy.units.temperature_energy",
   "collections.defaultdict",
   "numbers.Real",
   "numpy.all",
   "numpy.inf",
   "numpy.nan",
   "numpy.ndarray",
   "plasmapy.atomic.exceptions.AtomicError",
   "plasmapy.utils.decorators.validate_quantities",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_states.IonizationStates.__iter__": {
  "lineno": 307,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.ionization_states.IonizationStates.__next__": {
  "lineno": 325,
  "symbols_in_volume": [
   "numpy.sum",
   "plasmapy.atomic.IonizationState"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_states.IonizationStates.__repr__": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.ionization_states.IonizationStates.__setitem__": {
  "lineno": 208,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.UnitConversionError",
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.quantity.allclose",
   "numpy.all",
   "numpy.array",
   "numpy.float64",
   "numpy.isclose",
   "numpy.isnan",
   "numpy.sum",
   "plasmapy.atomic.atomic_number",
   "plasmapy.atomic.exceptions.AtomicError",
   "plasmapy.atomic.particle_symbol"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_states.IonizationStates.__str__": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.ionization_states.IonizationStates.abundances": {
  "lineno": 696,
  "symbols_in_volume": [
   "numpy.nan",
   "plasmapy.atomic.exceptions.AtomicError",
   "plasmapy.atomic.particle_symbol",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_states.IonizationStates.base_particles": {
  "lineno": 819,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_states.IonizationStates.equilibrate": {
  "lineno": 614,
  "symbols_in_volume": [
   "astropy.units.K",
   "numbers.Real",
   "numpy.inf",
   "numpy.nan"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_states.IonizationStates.info": {
  "lineno": 844,
  "symbols_in_volume": [
   "numbers.Real",
   "numpy.isfinite"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_states.IonizationStates.ionic_fractions": {
  "lineno": 412,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.UnitConversionError",
   "astropy.units.m",
   "numpy.all",
   "numpy.array",
   "numpy.float",
   "numpy.float64",
   "numpy.full",
   "numpy.isclose",
   "numpy.isnan",
   "numpy.max",
   "numpy.min",
   "numpy.nan",
   "numpy.ndarray",
   "numpy.sum",
   "plasmapy.atomic.Particle",
   "plasmapy.atomic.exceptions.AtomicError",
   "plasmapy.atomic.exceptions.InvalidParticleError",
   "plasmapy.atomic.particle_symbol",
   "typing.Dict",
   "typing.List",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_states.IonizationStates.kappa": {
  "lineno": 806,
  "symbols_in_volume": [
   "numbers.Real",
   "numpy.real"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_states.IonizationStates.log_abundances": {
  "lineno": 759,
  "symbols_in_volume": [
   "numbers.Real",
   "plasmapy.atomic.exceptions.AtomicError",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_states.IonizationStates.n": {
  "lineno": 666,
  "symbols_in_volume": [
   "astropy.units.UnitConversionError",
   "astropy.units.m",
   "astropy.units.quantity_input",
   "plasmapy.atomic.exceptions.AtomicError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_states.IonizationStates.n_e": {
  "lineno": 644,
  "symbols_in_volume": [
   "astropy.units.m",
   "astropy.units.quantity_input",
   "numpy.linspace",
   "numpy.sum",
   "plasmapy.atomic.atomic_number"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_states.IonizationStates.normalize": {
  "lineno": 605,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_states.IonizationStates.number_densities": {
  "lineno": 680,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "typing.Dict"
  ],
  "type": "function"
 },
 "plasmapy.atomic.ionization_states.IonizationStates.tol": {
  "lineno": 832,
  "symbols_in_volume": [
   "numbers.Real",
   "numpy.real"
  ],
  "type": "function"
 },
 "plasmapy.atomic.isotopes": {
  "lineno": null,
  "symbols_in_volume": [
   "json.loads",
   "pkgutil.get_data"
  ],
  "type": "module"
 },
 "plasmapy.atomic.isotopes._isotope_obj_hook": {
  "lineno": 24,
  "symbols_in_volume": [
   "astropy.units.Unit"
  ],
  "type": "function"
 },
 "plasmapy.atomic.nuclear": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.atomic.nuclear.mass_energy": {
  "lineno": 78,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "plasmapy.atomic.particle_class.Particle",
   "plasmapy.atomic.particle_input.particle_input",
   "typing.Optional"
  ],
  "type": "function"
 },
 "plasmapy.atomic.nuclear.nuclear_binding_energy": {
  "lineno": 19,
  "symbols_in_volume": [
   "astropy.units.J",
   "astropy.units.Quantity",
   "plasmapy.atomic.particle_class.Particle",
   "plasmapy.atomic.particle_input.particle_input",
   "typing.Optional"
  ],
  "type": "function"
 },
 "plasmapy.atomic.nuclear.nuclear_reaction_energy": {
  "lineno": 118,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.AtomicError",
   "re.split"
  ],
  "type": "function"
 },
 "plasmapy.atomic.nuclear.nuclear_reaction_energy.add_mass_energy": {
  "lineno": 271,
  "symbols_in_volume": [
   "astropy.units.J",
   "astropy.units.Quantity",
   "plasmapy.atomic.particle_class.Particle",
   "typing.List"
  ],
  "type": "function"
 },
 "plasmapy.atomic.nuclear.nuclear_reaction_energy.process_particles_list": {
  "lineno": 200,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.AtomicError",
   "plasmapy.atomic.exceptions.InvalidParticleError",
   "plasmapy.atomic.particle_class.Particle",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "plasmapy.atomic.nuclear.nuclear_reaction_energy.total_baryon_number": {
  "lineno": 248,
  "symbols_in_volume": [
   "plasmapy.atomic.particle_class.Particle",
   "typing.List"
  ],
  "type": "function"
 },
 "plasmapy.atomic.nuclear.nuclear_reaction_energy.total_charge": {
  "lineno": 258,
  "symbols_in_volume": [
   "plasmapy.atomic.particle_class.Particle",
   "typing.List"
  ],
  "type": "function"
 },
 "plasmapy.atomic.parsing": {
  "lineno": null,
  "symbols_in_volume": [
   "plasmapy.atomic.special_particles._Particles"
  ],
  "type": "module"
 },
 "plasmapy.atomic.parsing._create_alias_dicts": {
  "lineno": 22,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "plasmapy.atomic.parsing._dealias_particle_aliases": {
  "lineno": 87,
  "symbols_in_volume": [
   "numbers.Integral",
   "typing.Union"
  ],
  "type": "function"
 },
 "plasmapy.atomic.parsing._invalid_particle_errmsg": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.parsing._parse_and_check_atomic_input": {
  "lineno": 127,
  "symbols_in_volume": [
   "numbers.Integral",
   "plasmapy.atomic.elements._Elements",
   "plasmapy.atomic.exceptions.AtomicWarning",
   "plasmapy.atomic.exceptions.InvalidElementError",
   "plasmapy.atomic.exceptions.InvalidParticleError",
   "plasmapy.atomic.special_particles.ParticleZoo.everything",
   "typing.Union",
   "warnings.warn"
  ],
  "type": "function"
 },
 "plasmapy.atomic.parsing._parse_and_check_atomic_input._atomic_number_to_symbol": {
  "lineno": 176,
  "symbols_in_volume": [
   "numbers.Integral",
   "plasmapy.atomic.elements._atomic_numbers_to_symbols",
   "plasmapy.atomic.elements._atomic_numbers_to_symbols.keys",
   "plasmapy.atomic.exceptions.InvalidParticleError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.parsing._parse_and_check_atomic_input._extract_charge": {
  "lineno": 189,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.InvalidParticleError",
   "plasmapy.utils.roman.from_roman",
   "plasmapy.utils.roman.is_roman_numeral",
   "re.match"
  ],
  "type": "function"
 },
 "plasmapy.atomic.parsing._parse_and_check_atomic_input._extract_mass_number": {
  "lineno": 247,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.InvalidParticleError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.parsing._parse_and_check_atomic_input._get_element": {
  "lineno": 279,
  "symbols_in_volume": [
   "plasmapy.atomic.elements._atomic_numbers_to_symbols.values",
   "plasmapy.atomic.elements._element_names_to_symbols",
   "plasmapy.atomic.elements._element_names_to_symbols.keys",
   "plasmapy.atomic.exceptions.InvalidParticleError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.parsing._parse_and_check_atomic_input._reconstruct_ion_symbol": {
  "lineno": 323,
  "symbols_in_volume": [
   "numbers.Integral",
   "numpy.abs"
  ],
  "type": "function"
 },
 "plasmapy.atomic.parsing._parse_and_check_atomic_input._reconstruct_isotope_symbol": {
  "lineno": 296,
  "symbols_in_volume": [
   "numbers.Integral",
   "plasmapy.atomic.exceptions.InvalidParticleError",
   "plasmapy.atomic.isotopes._Isotopes.keys"
  ],
  "type": "function"
 },
 "plasmapy.atomic.parsing._particle_call_string": {
  "lineno": 435,
  "symbols_in_volume": [
   "numbers.Integral",
   "plasmapy.utils.pytest_helpers.call_string",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.atomic.particle_class.Particle": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.atomic.particle_class.Particle.__bool__": {
  "lineno": 547,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.AtomicError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.__eq__": {
  "lineno": 449,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.AtomicError",
   "plasmapy.atomic.exceptions.InvalidParticleError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.__hash__": {
  "lineno": 540,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.__init__": {
  "lineno": 276,
  "symbols_in_volume": [
   "astropy.constants.e.si",
   "astropy.units.s",
   "collections.defaultdict",
   "numbers.Integral",
   "numpy.inf",
   "numpy.integer",
   "plasmapy.atomic.elements._Elements",
   "plasmapy.atomic.elements._PeriodicTable",
   "plasmapy.atomic.exceptions.AtomicWarning",
   "plasmapy.atomic.exceptions.InvalidParticleError",
   "plasmapy.atomic.isotopes._Isotopes",
   "plasmapy.atomic.parsing._dealias_particle_aliases",
   "plasmapy.atomic.parsing._invalid_particle_errmsg",
   "plasmapy.atomic.parsing._parse_and_check_atomic_input",
   "plasmapy.atomic.special_particles.ParticleZoo._taxonomy_dict",
   "plasmapy.atomic.special_particles._Particles",
   "plasmapy.atomic.special_particles._Particles.keys",
   "plasmapy.atomic.special_particles._special_ion_masses",
   "plasmapy.atomic.special_particles._special_ion_masses.keys",
   "typing.Union",
   "warnings.warn"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.__invert__": {
  "lineno": 554,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.__ne__": {
  "lineno": 521,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.__repr__": {
  "lineno": 432,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.__str__": {
  "lineno": 445,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.antiparticle": {
  "lineno": 576,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.AtomicError",
   "plasmapy.atomic.special_particles._antiparticles",
   "plasmapy.atomic.special_particles._antiparticles.keys"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.atomic_number": {
  "lineno": 1036,
  "symbols_in_volume": [
   "numbers.Integral",
   "plasmapy.atomic.exceptions.InvalidElementError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.baryon_number": {
  "lineno": 1165,
  "symbols_in_volume": [
   "numbers.Integral",
   "plasmapy.atomic.exceptions.MissingAtomicDataError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.binding_energy": {
  "lineno": 988,
  "symbols_in_volume": [
   "astropy.constants.c",
   "astropy.constants.m_n",
   "astropy.constants.m_p",
   "astropy.units.J",
   "astropy.units.Quantity",
   "plasmapy.atomic.exceptions.InvalidIsotopeError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.categories": {
  "lineno": 1293,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.charge": {
  "lineno": 757,
  "symbols_in_volume": [
   "astropy.constants.e.si",
   "astropy.units.Quantity",
   "plasmapy.atomic.exceptions.ChargeError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.electron_number": {
  "lineno": 1107,
  "symbols_in_volume": [
   "numbers.Integral",
   "plasmapy.atomic.exceptions.InvalidIonError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.element": {
  "lineno": 604,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.element_name": {
  "lineno": 684,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.InvalidElementError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.half_life": {
  "lineno": 1216,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "plasmapy.atomic.exceptions.InvalidIsotopeError",
   "plasmapy.atomic.exceptions.MissingAtomicDataError",
   "plasmapy.atomic.exceptions.MissingAtomicDataWarning",
   "typing.Union",
   "warnings.warn"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.integer_charge": {
  "lineno": 738,
  "symbols_in_volume": [
   "numbers.Integral",
   "plasmapy.atomic.exceptions.ChargeError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.ionic_symbol": {
  "lineno": 634,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.ionize": {
  "lineno": 1430,
  "symbols_in_volume": [
   "numbers.Integral",
   "plasmapy.atomic.exceptions.ChargeError",
   "plasmapy.atomic.exceptions.InvalidElementError",
   "plasmapy.atomic.exceptions.InvalidIonError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.is_category": {
  "lineno": 1309,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.AtomicError",
   "typing.List",
   "typing.Set",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.is_category.become_set": {
  "lineno": 1348,
  "symbols_in_volume": [
   "typing.List",
   "typing.Set",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.is_electron": {
  "lineno": 1397,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.is_ion": {
  "lineno": 1413,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.isotope": {
  "lineno": 619,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.isotope_name": {
  "lineno": 702,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.InvalidElementError",
   "plasmapy.atomic.exceptions.InvalidIsotopeError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.isotopic_abundance": {
  "lineno": 1133,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "plasmapy.atomic.exceptions.AtomicWarning",
   "plasmapy.atomic.exceptions.InvalidIsotopeError",
   "warnings.warn"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.lepton_number": {
  "lineno": 1189,
  "symbols_in_volume": [
   "numbers.Integral",
   "plasmapy.atomic.exceptions.MissingAtomicDataError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.mass": {
  "lineno": 845,
  "symbols_in_volume": [
   "astropy.constants.m_e",
   "astropy.units.Quantity",
   "astropy.units.kg",
   "plasmapy.atomic.exceptions.MissingAtomicDataError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.mass_energy": {
  "lineno": 953,
  "symbols_in_volume": [
   "astropy.constants.c",
   "astropy.units.J",
   "astropy.units.Quantity",
   "plasmapy.atomic.exceptions.MissingAtomicDataError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.mass_number": {
  "lineno": 1058,
  "symbols_in_volume": [
   "numbers.Integral",
   "plasmapy.atomic.exceptions.InvalidIsotopeError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.neutron_number": {
  "lineno": 1080,
  "symbols_in_volume": [
   "numbers.Integral",
   "plasmapy.atomic.exceptions.InvalidIsotopeError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.nuclide_mass": {
  "lineno": 913,
  "symbols_in_volume": [
   "astropy.constants.m_e",
   "astropy.constants.m_n",
   "astropy.constants.m_p",
   "astropy.units.Quantity",
   "astropy.units.kg",
   "plasmapy.atomic.exceptions.InvalidIsotopeError",
   "plasmapy.atomic.exceptions.MissingAtomicDataError",
   "plasmapy.atomic.special_particles._special_ion_masses"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.particle": {
  "lineno": 562,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.periodic_table": {
  "lineno": 1266,
  "symbols_in_volume": [
   "collections.namedtuple",
   "plasmapy.atomic.exceptions.InvalidElementError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.recombine": {
  "lineno": 1512,
  "symbols_in_volume": [
   "numbers.Integral",
   "plasmapy.atomic.exceptions.ChargeError",
   "plasmapy.atomic.exceptions.InvalidElementError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.roman_symbol": {
  "lineno": 652,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.ChargeError",
   "plasmapy.utils.roman.OutOfRangeError",
   "plasmapy.utils.roman.to_roman",
   "typing.Optional"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.spin": {
  "lineno": 1246,
  "symbols_in_volume": [
   "numbers.Real",
   "plasmapy.atomic.exceptions.MissingAtomicDataError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class.Particle.standard_atomic_weight": {
  "lineno": 779,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.kg",
   "plasmapy.atomic.exceptions.InvalidElementError",
   "plasmapy.atomic.exceptions.MissingAtomicDataError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_class._category_errmsg": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.particle_input": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.atomic.particle_input._category_errmsg": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.particle_input._particle_errmsg": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.particle_input.particle_input": {
  "lineno": 73,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Callable",
   "typing.List",
   "typing.Set",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_input.particle_input.decorator": {
  "lineno": 233,
  "symbols_in_volume": [
   "functools.WRAPPER_ASSIGNMENTS",
   "inspect.signature",
   "typing.Callable"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_input.particle_input.decorator.wrapper": {
  "lineno": 240,
  "symbols_in_volume": [
   "functools.wraps",
   "plasmapy.atomic.exceptions.AtomicError",
   "typing.Optional"
  ],
  "type": "function"
 },
 "plasmapy.atomic.particle_input.particle_input.get_particle": {
  "lineno": 399,
  "symbols_in_volume": [
   "numbers.Integral",
   "plasmapy.atomic.exceptions.AtomicError",
   "plasmapy.atomic.exceptions.ChargeError",
   "plasmapy.atomic.exceptions.InvalidElementError",
   "plasmapy.atomic.exceptions.InvalidIonError",
   "plasmapy.atomic.exceptions.InvalidIsotopeError",
   "plasmapy.atomic.exceptions.InvalidParticleError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.special_particles": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.constants.m_p",
   "astropy.units.kg",
   "pprint.pprint"
  ],
  "type": "module"
 },
 "plasmapy.atomic.special_particles._ParticleZooClass": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.atomic.special_particles._ParticleZooClass.__init__": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.special_particles._ParticleZooClass.antibaryons": {
  "lineno": 82,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "plasmapy.atomic.special_particles._ParticleZooClass.antileptons": {
  "lineno": 72,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "plasmapy.atomic.special_particles._ParticleZooClass.antineutrinos": {
  "lineno": 102,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "plasmapy.atomic.special_particles._ParticleZooClass.antiparticles": {
  "lineno": 112,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "plasmapy.atomic.special_particles._ParticleZooClass.baryons": {
  "lineno": 77,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "plasmapy.atomic.special_particles._ParticleZooClass.bosons": {
  "lineno": 92,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "plasmapy.atomic.special_particles._ParticleZooClass.everything": {
  "lineno": 117,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "plasmapy.atomic.special_particles._ParticleZooClass.fermions": {
  "lineno": 87,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "plasmapy.atomic.special_particles._ParticleZooClass.leptons": {
  "lineno": 67,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "plasmapy.atomic.special_particles._ParticleZooClass.neutrinos": {
  "lineno": 97,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "plasmapy.atomic.special_particles._ParticleZooClass.particles": {
  "lineno": 107,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "plasmapy.atomic.special_particles._create_Particles_dict": {
  "lineno": 126,
  "symbols_in_volume": [
   "astropy.constants.m_e",
   "astropy.constants.m_n",
   "astropy.constants.m_p",
   "astropy.units.kg",
   "astropy.units.s",
   "numpy.inf",
   "plasmapy.atomic.elements._PeriodicTable",
   "typing.Dict"
  ],
  "type": "function"
 },
 "plasmapy.atomic.symbols": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.atomic.symbols.atomic_symbol": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.symbols.element_name": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.symbols.ionic_symbol": {
  "lineno": 159,
  "symbols_in_volume": [
   "numbers.Integral"
  ],
  "type": "function"
 },
 "plasmapy.atomic.symbols.isotope_symbol": {
  "lineno": 100,
  "symbols_in_volume": [
   "numbers.Integral",
   "typing.Optional"
  ],
  "type": "function"
 },
 "plasmapy.atomic.symbols.particle_symbol": {
  "lineno": 227,
  "symbols_in_volume": [
   "numbers.Integral"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.atomic.tests.test_atomic": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.constants.m_e",
   "astropy.constants.m_p",
   "astropy.units.C",
   "astropy.units.kg",
   "astropy.units.s",
   "astropy.units.u.to",
   "numpy.inf",
   "plasmapy.atomic.exceptions.AtomicError",
   "plasmapy.atomic.exceptions.AtomicWarning",
   "plasmapy.atomic.exceptions.ChargeError",
   "plasmapy.atomic.exceptions.InvalidElementError",
   "plasmapy.atomic.exceptions.InvalidIsotopeError",
   "plasmapy.atomic.exceptions.InvalidParticleError",
   "plasmapy.atomic.exceptions.MissingAtomicDataError"
  ],
  "type": "module"
 },
 "plasmapy.atomic.tests.test_atomic.TestInvalidPeriodicElement": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.atomic.tests.test_atomic.TestInvalidPeriodicElement.test_periodic_table_block": {
  "lineno": 405,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_atomic.TestInvalidPeriodicElement.test_periodic_table_category": {
  "lineno": 409,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_atomic.TestInvalidPeriodicElement.test_periodic_table_group": {
  "lineno": 413,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_atomic.TestInvalidPeriodicElement.test_periodic_table_period": {
  "lineno": 401,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_atomic.TestReducedMassInput": {
  "lineno": 741,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.atomic.tests.test_atomic.TestReducedMassInput.test_incorrect_units": {
  "lineno": 742,
  "symbols_in_volume": [
   "astropy.units.UnitConversionError",
   "astropy.units.l",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_atomic.TestReducedMassInput.test_missing_atomic_data": {
  "lineno": 746,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.MissingAtomicDataError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_atomic.test_atomic_functions": {
  "lineno": 514,
  "symbols_in_volume": [
   "plasmapy.utils.pytest_helpers.run_test",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_atomic.test_half_life": {
  "lineno": 611,
  "symbols_in_volume": [
   "astropy.units.s",
   "astropy.units.yr.to",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_atomic.test_half_life_u_220": {
  "lineno": 629,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.MissingAtomicDataError",
   "pytest.fail",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_atomic.test_half_life_unstable_isotopes": {
  "lineno": 619,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.MissingAtomicDataError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_atomic.test_is_electron": {
  "lineno": 766,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_atomic.test_isotopic_abundance": {
  "lineno": 701,
  "symbols_in_volume": [
   "numpy.isclose",
   "plasmapy.atomic.exceptions.AtomicWarning",
   "plasmapy.atomic.exceptions.InvalidIsotopeError",
   "plasmapy.atomic.exceptions.InvalidParticleError",
   "pytest.fail",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_atomic.test_isotopic_abundances_sum": {
  "lineno": 732,
  "symbols_in_volume": [
   "numpy.isclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_atomic.test_known_common_stable_isotopes": {
  "lineno": 590,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_atomic.test_known_common_stable_isotopes_cases": {
  "lineno": 645,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_atomic.test_known_common_stable_isotopes_error": {
  "lineno": 690,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.InvalidElementError",
   "pytest.fail",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_atomic.test_known_common_stable_isotopes_len": {
  "lineno": 662,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_atomic.test_particle_mass_berkelium_249": {
  "lineno": 530,
  "symbols_in_volume": [
   "astropy.units.u",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_atomic.test_particle_mass_equivalent_args": {
  "lineno": 569,
  "symbols_in_volume": [
   "astropy.units.isclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_atomic.test_particle_mass_for_hydrogen_with_no_mass_number": {
  "lineno": 536,
  "symbols_in_volume": [
   "astropy.constants.m_p"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_atomic.test_particle_mass_helium": {
  "lineno": 545,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_atomic.test_standard_atomic_weight_value_between": {
  "lineno": 523,
  "symbols_in_volume": [
   "astropy.units.u"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.UnitTypeError",
   "astropy.units.cm",
   "astropy.units.kK",
   "astropy.units.m",
   "collections.namedtuple",
   "numpy.array",
   "numpy.int64",
   "plasmapy.atomic.exceptions.AtomicError",
   "plasmapy.atomic.ionization_state.IonizationState"
  ],
  "type": "module"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationState": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationState.setup_class": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationState.test_State_attrs": {
  "lineno": 345,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationState.test_State_equality_and_getitem": {
  "lineno": 356,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationState.test_electron_density_from_n_elem_ionic_fractions": {
  "lineno": 286,
  "symbols_in_volume": [
   "astropy.units.m",
   "numpy.arange",
   "numpy.isclose",
   "numpy.sum",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationState.test_equal_to_itself": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationState.test_equal_to_within_tolerance": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationState.test_equality_exception": {
  "lineno": 136,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.AtomicError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationState.test_getitem": {
  "lineno": 301,
  "symbols_in_volume": [
   "numpy.arange",
   "plasmapy.atomic.particle_symbol",
   "pytest.fail",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationState.test_identifications": {
  "lineno": 227,
  "symbols_in_volume": [
   "collections.namedtuple",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationState.test_indexing_error": {
  "lineno": 208,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.AtomicError",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationState.test_inequality": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationState.test_instantiation": {
  "lineno": 73,
  "symbols_in_volume": [
   "plasmapy.atomic.ionization_state.IonizationState",
   "pytest.fail",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationState.test_integer_charges": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.arange",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationState.test_invalid_tolerances": {
  "lineno": 263,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationState.test_ionic_fractions": {
  "lineno": 93,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.m",
   "numpy.allclose",
   "pytest.fail",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationState.test_iteration": {
  "lineno": 144,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "numpy.all",
   "numpy.allclose",
   "numpy.arange",
   "numpy.array",
   "plasmapy.atomic.Particle",
   "plasmapy.atomic.atomic_number",
   "plasmapy.atomic.atomic_symbol",
   "plasmapy.atomic.exceptions.InvalidIsotopeError",
   "plasmapy.atomic.isotope_symbol",
   "pytest.fail",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationState.test_normalization": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationState.test_particle_instances": {
  "lineno": 271,
  "symbols_in_volume": [
   "plasmapy.atomic.Particle",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationState.test_slicing_error": {
  "lineno": 201,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationStateNumberDensitiesSetter": {
  "lineno": 486,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationStateNumberDensitiesSetter.setup_class": {
  "lineno": 489,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.m",
   "numpy.sum",
   "plasmapy.atomic.ionization_state.IonizationState",
   "pytest.fail"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationStateNumberDensitiesSetter.test_T_e_isnan_when_not_set": {
  "lineno": 550,
  "symbols_in_volume": [
   "numpy.isnan"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationStateNumberDensitiesSetter.test_incorrect_number_of_charge_states_error": {
  "lineno": 539,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.m",
   "plasmapy.atomic.exceptions.AtomicError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationStateNumberDensitiesSetter.test_incorrect_units_error": {
  "lineno": 543,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.UnitsError",
   "astropy.units.kg",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationStateNumberDensitiesSetter.test_ionic_fractions": {
  "lineno": 514,
  "symbols_in_volume": [
   "numpy.allclose"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationStateNumberDensitiesSetter.test_kappa_isinf_when_not_set": {
  "lineno": 553,
  "symbols_in_volume": [
   "numpy.isinf"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationStateNumberDensitiesSetter.test_n_e": {
  "lineno": 528,
  "symbols_in_volume": [
   "astropy.units.quantity.allclose"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationStateNumberDensitiesSetter.test_n_elem": {
  "lineno": 521,
  "symbols_in_volume": [
   "astropy.units.quantity.allclose"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationStateNumberDensitiesSetter.test_setting_number_densities": {
  "lineno": 499,
  "symbols_in_volume": [
   "astropy.units.quantity.allclose",
   "pytest.fail"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.Test_IonizationStateNumberDensitiesSetter.test_that_negative_density_raises_error": {
  "lineno": 535,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.m",
   "plasmapy.atomic.exceptions.AtomicError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.test_IonizationState_attributes": {
  "lineno": 444,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "numpy.allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.test_IonizationState_exceptions": {
  "lineno": 401,
  "symbols_in_volume": [
   "plasmapy.atomic.ionization_state.IonizationState",
   "plasmapy.utils.pytest_helpers.run_test",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.test_nans": {
  "lineno": 464,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.isnan",
   "plasmapy.atomic.atomic_number",
   "plasmapy.atomic.ionization_state.IonizationState"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_state.test_setting_ionic_fractions": {
  "lineno": 479,
  "symbols_in_volume": [
   "numpy.allclose",
   "plasmapy.atomic.ionization_state.IonizationState"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.cm",
   "astropy.units.m",
   "astropy.units.mm",
   "collections.namedtuple",
   "numpy.array",
   "numpy.inf",
   "plasmapy.atomic.exceptions.AtomicError"
  ],
  "type": "module"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStates": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStates.setup_class": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStates.test_getitem_element": {
  "lineno": 246,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.isnan",
   "pytest",
   "pytest.fail",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStates.test_getitem_element_intcharge": {
  "lineno": 282,
  "symbols_in_volume": [
   "numpy.isclose",
   "numpy.isnan",
   "plasmapy.atomic.atomic_number",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStates.test_instantiation": {
  "lineno": 125,
  "symbols_in_volume": [
   "plasmapy.atomic.IonizationStates",
   "pytest.fail",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStates.test_no_exceptions_from_info": {
  "lineno": 140,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStates.test_no_exceptions_from_repr": {
  "lineno": 136,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStates.test_no_exceptions_from_str": {
  "lineno": 132,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStates.test_normalization": {
  "lineno": 296,
  "symbols_in_volume": [
   "numpy.isclose",
   "numpy.sum",
   "pytest.fail",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStates.test_simple_equality": {
  "lineno": 144,
  "symbols_in_volume": [
   "plasmapy.atomic.IonizationStates",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStates.test_that_abundances_kwarg_sets_abundances": {
  "lineno": 167,
  "symbols_in_volume": [
   "pytest.fail",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStates.test_that_elements_and_isotopes_are_sorted": {
  "lineno": 184,
  "symbols_in_volume": [
   "plasmapy.atomic.atomic_number",
   "plasmapy.atomic.exceptions.InvalidIsotopeError",
   "plasmapy.atomic.mass_number",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStates.test_that_ionic_fractions_are_set_correctly": {
  "lineno": 203,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "numpy.allclose",
   "numpy.array",
   "numpy.isnan",
   "numpy.ndarray",
   "numpy.sum",
   "plasmapy.atomic.Particle",
   "plasmapy.atomic.atomic_number",
   "plasmapy.atomic.exceptions.AtomicError",
   "plasmapy.atomic.mass_number",
   "plasmapy.atomic.particle_symbol",
   "pytest.fail",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStates.test_that_particles_were_set_correctly": {
  "lineno": 152,
  "symbols_in_volume": [
   "plasmapy.atomic.Particle",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesAttributes": {
  "lineno": 423,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesAttributes.setup_class": {
  "lineno": 425,
  "symbols_in_volume": [
   "astropy.units.cm",
   "plasmapy.atomic.IonizationStates"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesAttributes.test_abundances_default_to_nans": {
  "lineno": 457,
  "symbols_in_volume": [
   "numbers.Real",
   "numpy.isnan",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesAttributes.test_attribute_defaults_to_dict_of_nans": {
  "lineno": 443,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.isnan",
   "plasmapy.atomic.atomic_number",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesAttributes.test_attribute_defaults_to_nan": {
  "lineno": 431,
  "symbols_in_volume": [
   "numpy.isnan",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesAttributes.test_attribute_exceptions": {
  "lineno": 465,
  "symbols_in_volume": [
   "astropy.units.UnitsError",
   "plasmapy.atomic.exceptions.AtomicError",
   "pytest.fail",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesAttributes.test_base_particles": {
  "lineno": 662,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesAttributes.test_base_particles_equal_ionic_fraction_particles": {
  "lineno": 670,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesAttributes.test_elemental_abundances_not_quantities": {
  "lineno": 646,
  "symbols_in_volume": [
   "astropy.units.Quantity"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesAttributes.test_getitem_one_index": {
  "lineno": 564,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.isnan",
   "plasmapy.atomic.IonizationState",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesAttributes.test_getitem_two_indices": {
  "lineno": 579,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.isclose",
   "numpy.isnan",
   "plasmapy.atomic.State",
   "plasmapy.atomic.particle_symbol",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesAttributes.test_invalid_indices": {
  "lineno": 549,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesAttributes.test_ionic_fractions_not_quantities": {
  "lineno": 650,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "pytest.fail",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesAttributes.test_kappa_defaults_to_inf": {
  "lineno": 439,
  "symbols_in_volume": [
   "numpy.isinf"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesAttributes.test_resetting_invalid_densities": {
  "lineno": 635,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sum",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesAttributes.test_resetting_valid_densities": {
  "lineno": 609,
  "symbols_in_volume": [
   "astropy.units.quantity.allclose",
   "numpy.sum",
   "pytest.fail"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesAttributes.test_setting_abundances": {
  "lineno": 527,
  "symbols_in_volume": [
   "numpy.log10",
   "pytest",
   "pytest.fail"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesAttributes.test_setting_incomplete_abundances": {
  "lineno": 522,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.AtomicError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesAttributes.test_setting_invalid_ionfracs": {
  "lineno": 503,
  "symbols_in_volume": [
   "astropy.units.m",
   "pytest.fail",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesAttributes.test_setting_ionic_fractions_for_single_element": {
  "lineno": 485,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.allclose",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesAttributes.test_setting_n": {
  "lineno": 599,
  "symbols_in_volume": [
   "astropy.units.m",
   "astropy.units.quantity.allclose",
   "pytest.fail"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesAttributes.test_that_iron_ionic_fractions_are_still_undefined": {
  "lineno": 656,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.isnan",
   "plasmapy.atomic.atomic_number"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesDensities": {
  "lineno": 390,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesDensities.setup_class": {
  "lineno": 392,
  "symbols_in_volume": [
   "astropy.units.m",
   "numpy.array",
   "plasmapy.atomic.IonizationStates"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesDensities.test_electron_density": {
  "lineno": 407,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesDensities.test_number_densities": {
  "lineno": 413,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesDensityEqualities": {
  "lineno": 757,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesDensityEqualities.setup_class": {
  "lineno": 764,
  "symbols_in_volume": [
   "astropy.units.m",
   "plasmapy.atomic.IonizationStates"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesDensityEqualities.test_equality": {
  "lineno": 811,
  "symbols_in_volume": [
   "itertools.product",
   "pytest.fail",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesDensityEqualities.test_number_densities_defined": {
  "lineno": 795,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.isnan",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesDensityEqualities.test_number_densities_undefined": {
  "lineno": 803,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.isnan",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesItemAssignment": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesItemAssignment.setup_class": {
  "lineno": 352,
  "symbols_in_volume": [
   "plasmapy.atomic.IonizationStates"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesItemAssignment.test_setitem": {
  "lineno": 356,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.allclose",
   "numpy.any",
   "numpy.isnan",
   "numpy.nan",
   "pytest.fail",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.TestIonizationStatesItemAssignment.test_setitem_errors": {
  "lineno": 377,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.check_abundances_consistency": {
  "lineno": 23,
  "symbols_in_volume": [
   "numbers.Real",
   "numpy.isclose",
   "typing.Dict"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.has_attribute": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.test_abundances_consistency": {
  "lineno": 322,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.log10",
   "plasmapy.atomic.IonizationStates"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.test_exceptions_upon_instantiation": {
  "lineno": 744,
  "symbols_in_volume": [
   "plasmapy.atomic.IonizationStates",
   "plasmapy.utils.pytest_helpers.run_test",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_ionization_states.test_number_density_assignment": {
  "lineno": 838,
  "symbols_in_volume": [
   "astropy.units.m",
   "plasmapy.atomic.IonizationStates"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_nuclear": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.constants.c.to",
   "astropy.constants.m_e.to",
   "astropy.constants.m_n.to",
   "astropy.constants.m_p.to",
   "astropy.units.J",
   "plasmapy.atomic.exceptions.AtomicError",
   "plasmapy.atomic.exceptions.InvalidParticleError"
  ],
  "type": "module"
 },
 "plasmapy.atomic.tests.test_nuclear.test_nuclear": {
  "lineno": 40,
  "symbols_in_volume": [
   "plasmapy.utils.pytest_helpers.run_test",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_nuclear.test_nuclear_binding_energy_D_T": {
  "lineno": 55,
  "symbols_in_volume": [
   "astropy.units.MeV",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_nuclear.test_nuclear_equivalent_calls": {
  "lineno": 50,
  "symbols_in_volume": [
   "plasmapy.utils.pytest_helpers.run_test_equivalent_calls",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_nuclear.test_nuclear_reaction_energy": {
  "lineno": 62,
  "symbols_in_volume": [
   "astropy.units.MeV",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_nuclear.test_nuclear_reaction_energy_alpha_decay": {
  "lineno": 87,
  "symbols_in_volume": [
   "astropy.units.MeV",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_nuclear.test_nuclear_reaction_energy_beta": {
  "lineno": 100,
  "symbols_in_volume": [
   "astropy.units.MeV",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_nuclear.test_nuclear_reaction_energy_kwargs": {
  "lineno": 122,
  "symbols_in_volume": [
   "astropy.units.MeV.si",
   "numpy.isclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_nuclear.test_nuclear_reaction_energy_triple_alpha": {
  "lineno": 74,
  "symbols_in_volume": [
   "astropy.units.MeV",
   "astropy.units.keV",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_nuclear.test_nuclear_reaction_energy_triple_alpha_r": {
  "lineno": 93,
  "symbols_in_volume": [
   "astropy.units.keV",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_parsing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.atomic.tests.test_parsing.test_alias_dict_properties": {
  "lineno": 59,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_parsing.test_dealias_particle_aliases": {
  "lineno": 43,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_parsing.test_parse_AtomicWarnings": {
  "lineno": 282,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.AtomicWarning",
   "pytest.fail",
   "pytest.mark.parametrize",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_parsing.test_parse_InvalidElementErrors": {
  "lineno": 260,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.InvalidElementError",
   "pytest.fail",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_parsing.test_parse_InvalidParticleErrors": {
  "lineno": 248,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.InvalidParticleError",
   "pytest.fail",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_parsing.test_parse_and_check_atomic_input": {
  "lineno": 200,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_class": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.constants.c.to",
   "astropy.constants.e.si.value",
   "astropy.constants.m_e",
   "astropy.constants.m_e.to",
   "astropy.constants.m_n",
   "astropy.constants.m_p",
   "astropy.units.C",
   "astropy.units.J",
   "astropy.units.kg",
   "astropy.units.s",
   "astropy.units.u.to",
   "numpy.inf",
   "plasmapy.atomic.exceptions.AtomicError",
   "plasmapy.atomic.exceptions.AtomicWarning",
   "plasmapy.atomic.exceptions.ChargeError",
   "plasmapy.atomic.exceptions.InvalidElementError",
   "plasmapy.atomic.exceptions.InvalidIonError",
   "plasmapy.atomic.exceptions.InvalidIsotopeError",
   "plasmapy.atomic.exceptions.InvalidParticleError",
   "plasmapy.atomic.exceptions.MissingAtomicDataError",
   "plasmapy.atomic.particle_class.Particle",
   "plasmapy.utils.roman.OutOfRangeError"
  ],
  "type": "module"
 },
 "plasmapy.atomic.tests.test_particle_class.Test_antiparticle_properties_inversion": {
  "lineno": 714,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.atomic.tests.test_particle_class.Test_antiparticle_properties_inversion.test_antiparticle_attribute_and_operator": {
  "lineno": 745,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_class.Test_antiparticle_properties_inversion.test_equal_mass": {
  "lineno": 737,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_class.Test_antiparticle_properties_inversion.test_inverted_inversion": {
  "lineno": 719,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_class.Test_antiparticle_properties_inversion.test_opposite_charge": {
  "lineno": 728,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_class.opposite": {
  "lineno": 703,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.InvalidParticleError",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_class.particle": {
  "lineno": 698,
  "symbols_in_volume": [
   "plasmapy.atomic.particle_class.Particle",
   "plasmapy.atomic.special_particles.ParticleZoo.everything",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_class.test_Particle_class": {
  "lineno": 411,
  "symbols_in_volume": [
   "astropy.units.isclose",
   "inspect.isclass",
   "plasmapy.atomic.exceptions.AtomicError",
   "plasmapy.atomic.particle_class.Particle",
   "plasmapy.utils.pytest_helpers.call_string",
   "pytest.fail.Exception",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_class.test_Particle_cmp": {
  "lineno": 565,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.AtomicError",
   "plasmapy.atomic.particle_class.Particle",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_class.test_Particle_equivalent_cases": {
  "lineno": 481,
  "symbols_in_volume": [
   "plasmapy.atomic.particle_class.Particle",
   "plasmapy.utils.pytest_helpers.run_test_equivalent_calls",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_class.test_Particle_errors": {
  "lineno": 526,
  "symbols_in_volume": [
   "plasmapy.atomic.particle_class.Particle",
   "plasmapy.utils.pytest_helpers.call_string",
   "pytest.fail",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_class.test_Particle_warnings": {
  "lineno": 549,
  "symbols_in_volume": [
   "plasmapy.atomic.particle_class.Particle",
   "plasmapy.utils.pytest_helpers.call_string",
   "pytest.fail",
   "pytest.mark.parametrize",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_class.test_antiparticle_inversion": {
  "lineno": 685,
  "symbols_in_volume": [
   "plasmapy.atomic.particle_class.Particle",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_class.test_particle_bool_error": {
  "lineno": 660,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.AtomicError",
   "plasmapy.atomic.particle_class.Particle",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_class.test_particle_class_mass_nuclide_mass": {
  "lineno": 593,
  "symbols_in_volume": [
   "plasmapy.atomic.particle_class.Particle",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_class.test_particle_half_life_string": {
  "lineno": 638,
  "symbols_in_volume": [
   "plasmapy.atomic.atomic.known_isotopes",
   "plasmapy.atomic.exceptions.MissingAtomicDataWarning",
   "plasmapy.atomic.isotopes._Isotopes.get",
   "plasmapy.atomic.particle_class.Particle",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_class.test_particle_inversion": {
  "lineno": 677,
  "symbols_in_volume": [
   "plasmapy.atomic.particle_class.Particle",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_class.test_particle_is_electron": {
  "lineno": 655,
  "symbols_in_volume": [
   "plasmapy.atomic.particle_class.Particle",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_class.test_particleing_a_particle": {
  "lineno": 757,
  "symbols_in_volume": [
   "plasmapy.atomic.particle_class.Particle",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_class.test_that_object_can_be_dict_key": {
  "lineno": 779,
  "symbols_in_volume": [
   "collections.Hashable",
   "plasmapy.atomic.particle_class.Particle",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_class.test_unary_operator_for_elements": {
  "lineno": 693,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.AtomicError",
   "plasmapy.atomic.particle_class.Particle",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input": {
  "lineno": null,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.AtomicError",
   "plasmapy.atomic.exceptions.ChargeError",
   "plasmapy.atomic.exceptions.InvalidParticleError"
  ],
  "type": "module"
 },
 "plasmapy.atomic.tests.test_particle_input.TestOptionalArgs": {
  "lineno": 272,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.atomic.tests.test_particle_input.TestOptionalArgs.particle_iter": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.TestOptionalArgs.test_optional_list": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.TestOptionalArgs.test_optional_list.optional_list": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.TestOptionalArgs.test_optional_particle": {
  "lineno": 276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.TestOptionalArgs.test_optional_particle.optional_particle": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.TestOptionalArgs.test_optional_tuple": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.TestOptionalArgs.test_optional_tuple.optional_tuple": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.Test_particle_input": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.atomic.tests.test_particle_input.Test_particle_input.method_noparens": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.Test_particle_input.method_parens": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.ambiguous_keywords": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.func_simple_noparens": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.func_simple_parens": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.function_to_test_annotations": {
  "lineno": 176,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.AtomicError",
   "typing.List",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.function_with_element_argument": {
  "lineno": 535,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.function_with_ion_argument": {
  "lineno": 555,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.function_with_isotope_argument": {
  "lineno": 545,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.function_with_list_annotation": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.function_with_no_annotations": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.function_with_tuple_annotation": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_decorator_categories": {
  "lineno": 371,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_decorator_categories.decorated_function": {
  "lineno": 381,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_function_with_ambiguity": {
  "lineno": 163,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.AtomicError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_invalid_list_type": {
  "lineno": 315,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_invalid_list_type.invalid_list_type": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_invalid_number_of_tuple_elements": {
  "lineno": 309,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_is_element": {
  "lineno": 567,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_is_ion": {
  "lineno": 620,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_is_isotope": {
  "lineno": 594,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_list_annotation": {
  "lineno": 258,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.AtomicError",
   "pytest.mark.parametrize",
   "typing.List",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_no_annotations_exception": {
  "lineno": 149,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.AtomicError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_none_shall_not_pass": {
  "lineno": 423,
  "symbols_in_volume": [
   "pytest.fail",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_none_shall_not_pass.func_none_shall_not_pass": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_none_shall_not_pass.func_none_shall_not_pass_with_list": {
  "lineno": 438,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_none_shall_not_pass.func_none_shall_not_pass_with_tuple": {
  "lineno": 433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_none_shall_pass": {
  "lineno": 392,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_none_shall_pass.func_none_shall_pass": {
  "lineno": 397,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_none_shall_pass.func_none_shall_pass_with_list": {
  "lineno": 406,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_none_shall_pass.func_none_shall_pass_with_tuple": {
  "lineno": 401,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_not_element": {
  "lineno": 578,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.InvalidElementError",
   "pytest.fail",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_not_ion": {
  "lineno": 630,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.InvalidIonError",
   "pytest.fail",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_not_isotope": {
  "lineno": 604,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.InvalidIsotopeError",
   "pytest.fail",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_not_optional_particle_annotation_argname": {
  "lineno": 492,
  "symbols_in_volume": [
   "pytest.fail",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_not_optional_particle_annotation_argname.func_not_optional_particle_with_list": {
  "lineno": 502,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_not_optional_particle_annotation_argname.func_not_optional_particle_with_tuple": {
  "lineno": 497,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_optional_particle_annotation_argname": {
  "lineno": 461,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_optional_particle_annotation_argname.func_optional_particle": {
  "lineno": 466,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_optional_particle_annotation_argname.func_optional_particle_with_list": {
  "lineno": 475,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_optional_particle_annotation_argname.func_optional_particle_with_tuple": {
  "lineno": 470,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_particle_input_classes": {
  "lineno": 123,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.AtomicError"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_particle_input_errors": {
  "lineno": 96,
  "symbols_in_volume": [
   "pytest.fail",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_particle_input_simple": {
  "lineno": 59,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.AtomicError",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_tuple_annotation": {
  "lineno": 231,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.AtomicError",
   "pytest.mark.parametrize",
   "typing.List",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_unexpected_tuple_and_list_argument_types": {
  "lineno": 326,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_particle_input.test_unexpected_tuple_and_list_argument_types.take_particle": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_special_particles": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.atomic.tests.test_special_particles.test__Particles_required_keys": {
  "lineno": 66,
  "symbols_in_volume": [
   "plasmapy.atomic.special_particles.ParticleZoo.everything",
   "plasmapy.atomic.special_particles._Particles",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.atomic.tests.test_special_particles.test_particle_antiparticle_pairs": {
  "lineno": 17,
  "symbols_in_volume": [
   "plasmapy.atomic.special_particles._Particles",
   "plasmapy.atomic.special_particles._Particles.replace",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.classes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.classes.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.classes.exceptions.DataStandardError": {
  "lineno": 4,
  "symbols_in_volume": [
   "plasmapy.utils.PlasmaPyError"
  ],
  "type": "class"
 },
 "plasmapy.classes.plasma_base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.classes.plasma_base.BasePlasma": {
  "lineno": 8,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "plasmapy.classes.plasma_base.BasePlasma.__init_subclass__": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.plasma_base.BasePlasma.average_ionization": {
  "lineno": 51,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "plasmapy.classes.plasma_base.BasePlasma.electron_density": {
  "lineno": 43,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "plasmapy.classes.plasma_base.BasePlasma.electron_temperature": {
  "lineno": 35,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "plasmapy.classes.plasma_base.BasePlasma.ion_density": {
  "lineno": 47,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "plasmapy.classes.plasma_base.BasePlasma.ion_temperature": {
  "lineno": 39,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "plasmapy.classes.plasma_base.GenericPlasma": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.classes.plasma_base.GenericPlasma.__init__": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.plasma_base.GenericPlasma.average_ionization": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.plasma_base.GenericPlasma.electron_density": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.plasma_base.GenericPlasma.electron_temperature": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.plasma_base.GenericPlasma.ion_density": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.plasma_base.GenericPlasma.ion_temperature": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.plasma_factory": {
  "lineno": null,
  "symbols_in_volume": [
   "plasmapy.classes.plasma_base.GenericPlasma",
   "plasmapy.classes.plasma_base.GenericPlasma._registry"
  ],
  "type": "module"
 },
 "plasmapy.classes.plasma_factory.PlasmaFactory": {
  "lineno": 13,
  "symbols_in_volume": [
   "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory"
  ],
  "type": "class"
 },
 "plasmapy.classes.sources": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.classes.sources.openpmd_hdf5": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.units.Kelvin",
   "astropy.units.ampere",
   "astropy.units.candela",
   "astropy.units.kilogram",
   "astropy.units.meter",
   "astropy.units.mol",
   "astropy.units.second",
   "plasmapy.optional_deps.h5py_import_error"
  ],
  "type": "module"
 },
 "plasmapy.classes.sources.openpmd_hdf5.HDF5Reader": {
  "lineno": 55,
  "symbols_in_volume": [
   "plasmapy.classes.GenericPlasma"
  ],
  "type": "class"
 },
 "plasmapy.classes.sources.openpmd_hdf5.HDF5Reader.__enter__": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.sources.openpmd_hdf5.HDF5Reader.__exit__": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.sources.openpmd_hdf5.HDF5Reader.__init__": {
  "lineno": 56,
  "symbols_in_volume": [
   "h5py.File",
   "os.path.isfile"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.openpmd_hdf5.HDF5Reader._check_valid_openpmd_version": {
  "lineno": 97,
  "symbols_in_volume": [
   "plasmapy.classes.exceptions.DataStandardError"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.openpmd_hdf5.HDF5Reader.charge_density": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.openpmd_hdf5.HDF5Reader.close": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.sources.openpmd_hdf5.HDF5Reader.electric_current": {
  "lineno": 147,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.openpmd_hdf5.HDF5Reader.electric_field": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.openpmd_hdf5.HDF5Reader.is_datasource_for": {
  "lineno": 159,
  "symbols_in_volume": [
   "h5py.File",
   "os.path.isfile"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.openpmd_hdf5.HDF5Reader.magnetic_field": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.openpmd_hdf5._fetch_units": {
  "lineno": 31,
  "symbols_in_volume": [
   "astropy.units.dimensionless_unscaled"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.openpmd_hdf5._valid_version": {
  "lineno": 43,
  "symbols_in_volume": [
   "distutils.version.StrictVersion"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.plasma3d": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.classes.sources.plasma3d.Plasma3D": {
  "lineno": 20,
  "symbols_in_volume": [
   "plasmapy.classes.GenericPlasma"
  ],
  "type": "class"
 },
 "plasmapy.classes.sources.plasma3d.Plasma3D.__init__": {
  "lineno": 65,
  "symbols_in_volume": [
   "astropy.units.Pa",
   "astropy.units.T",
   "astropy.units.V",
   "astropy.units.kg",
   "astropy.units.m",
   "astropy.units.quantity_input",
   "astropy.units.s",
   "numpy.array",
   "numpy.meshgrid",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.plasma3d.Plasma3D.add_magnetostatic": {
  "lineno": 111,
  "symbols_in_volume": [
   "itertools.product",
   "plasmapy.formulary.magnetostatics.MagnetoStatics"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.plasma3d.Plasma3D.alfven_speed": {
  "lineno": 97,
  "symbols_in_volume": [
   "astropy.constants.mu0",
   "numpy.sqrt",
   "numpy.sum"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.plasma3d.Plasma3D.electric_field_strength": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy.sqrt",
   "numpy.sum"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.plasma3d.Plasma3D.is_datasource_for": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.sources.plasma3d.Plasma3D.magnetic_field_strength": {
  "lineno": 87,
  "symbols_in_volume": [
   "numpy.sqrt",
   "numpy.sum"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.plasma3d.Plasma3D.velocity": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.sources.plasmablob": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.classes.sources.plasmablob.PlasmaBlob": {
  "lineno": 23,
  "symbols_in_volume": [
   "plasmapy.classes.GenericPlasma"
  ],
  "type": "class"
 },
 "plasmapy.classes.sources.plasmablob.PlasmaBlob.__init__": {
  "lineno": 28,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.m",
   "astropy.units.quantity_input",
   "plasmapy.atomic.particle_mass",
   "plasmapy.formulary.parameters._grab_charge"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.plasmablob.PlasmaBlob.__repr__": {
  "lineno": 56,
  "symbols_in_volume": [
   "plasmapy.utils.pytest_helpers.call_string"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.plasmablob.PlasmaBlob.__str__": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.sources.plasmablob.PlasmaBlob.composition": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.sources.plasmablob.PlasmaBlob.coupling": {
  "lineno": 132,
  "symbols_in_volume": [
   "plasmapy.formulary.collisions.coupling_parameter",
   "plasmapy.utils.CouplingWarning",
   "warnings.warn"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.plasmablob.PlasmaBlob.electron_density": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.sources.plasmablob.PlasmaBlob.electron_temperature": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.sources.plasmablob.PlasmaBlob.ionization": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.sources.plasmablob.PlasmaBlob.is_datasource_for": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.sources.plasmablob.PlasmaBlob.quantum_theta": {
  "lineno": 147,
  "symbols_in_volume": [
   "plasmapy.formulary.dimensionless.quantum_theta"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.plasmablob.PlasmaBlob.regimes": {
  "lineno": 92,
  "symbols_in_volume": [
   "plasmapy.formulary.dimensionless.quantum_theta"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.units.amp",
   "astropy.units.cd",
   "astropy.units.coulomb",
   "astropy.units.kg",
   "astropy.units.m",
   "astropy.units.ohm",
   "astropy.units.s"
  ],
  "type": "module"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.TestOpenPMD2D": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.TestOpenPMD2D.test_correct_shape_charge_density": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.TestOpenPMD2D.test_correct_shape_electric_field": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.TestOpenPMD2D.test_has_charge_density_with_units": {
  "lineno": 41,
  "symbols_in_volume": [
   "astropy.units.C",
   "astropy.units.m"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.TestOpenPMD2D.test_has_electric_current": {
  "lineno": 52,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.TestOpenPMD2D.test_has_electric_field_with_units": {
  "lineno": 35,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.V",
   "astropy.units.m"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.TestOpenPMD2D.test_has_magnetic_field": {
  "lineno": 48,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.TestOpenPMD3D": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.TestOpenPMD3D.test_correct_shape_charge_density": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.TestOpenPMD3D.test_correct_shape_electric_field": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.TestOpenPMD3D.test_has_charge_density_with_units": {
  "lineno": 69,
  "symbols_in_volume": [
   "astropy.units.C",
   "astropy.units.Quantity",
   "astropy.units.m"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.TestOpenPMD3D.test_has_electric_current": {
  "lineno": 79,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.TestOpenPMD3D.test_has_electric_field_with_units": {
  "lineno": 63,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.V",
   "astropy.units.m"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.TestOpenPMD3D.test_has_magnetic_field": {
  "lineno": 75,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.TestOpenPMDThetaMode": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.TestOpenPMDThetaMode.test_correct_shape_charge_density": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.TestOpenPMDThetaMode.test_correct_shape_electric_current": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.TestOpenPMDThetaMode.test_correct_shape_electric_field": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.TestOpenPMDThetaMode.test_correct_shape_magnetic_field": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.TestOpenPMDThetaMode.test_has_charge_density_with_units": {
  "lineno": 96,
  "symbols_in_volume": [
   "astropy.units.C",
   "astropy.units.Quantity",
   "astropy.units.m"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.TestOpenPMDThetaMode.test_has_electric_current_with_units": {
  "lineno": 108,
  "symbols_in_volume": [
   "astropy.units.A",
   "astropy.units.Quantity",
   "astropy.units.kg",
   "astropy.units.m"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.TestOpenPMDThetaMode.test_has_electric_field_with_units": {
  "lineno": 90,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.V",
   "astropy.units.m"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.TestOpenPMDThetaMode.test_has_magnetic_field_with_units": {
  "lineno": 102,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.T"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.h5_2d": {
  "lineno": 11,
  "symbols_in_volume": [
   "os.path.join",
   "plasmapy.classes.sources.openpmd_hdf5.HDF5Reader",
   "plasmapy.data.test.rootdir",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.h5_3d": {
  "lineno": 17,
  "symbols_in_volume": [
   "os.path.join",
   "plasmapy.classes.sources.openpmd_hdf5.HDF5Reader",
   "plasmapy.data.test.rootdir",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.h5_theta": {
  "lineno": 23,
  "symbols_in_volume": [
   "os.path.join",
   "plasmapy.classes.sources.openpmd_hdf5.HDF5Reader",
   "plasmapy.data.test.rootdir",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.test_HDF5Reader": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.test_fetch_units": {
  "lineno": 127,
  "symbols_in_volume": [
   "astropy.units",
   "plasmapy.classes.sources.openpmd_hdf5._fetch_units",
   "pytest.mark.parametrize",
   "typing.List",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.test_non_openpmd_hdf5": {
  "lineno": 138,
  "symbols_in_volume": [
   "os.path.join",
   "plasmapy.classes.exceptions.DataStandardError",
   "plasmapy.classes.sources.openpmd_hdf5.HDF5Reader",
   "plasmapy.data.test.rootdir",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_openpmd_hdf5.test_unavailable_hdf5": {
  "lineno": 133,
  "symbols_in_volume": [
   "plasmapy.classes.sources.openpmd_hdf5.HDF5Reader",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_plasma3d": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.classes.sources.tests.test_plasma3d.test_Plasma3D_derived_vars": {
  "lineno": 65,
  "symbols_in_volume": [
   "astropy.units.Pa",
   "astropy.units.T",
   "astropy.units.V",
   "astropy.units.kg",
   "astropy.units.m",
   "astropy.units.m.all",
   "astropy.units.s",
   "astropy.units.s.all",
   "numpy.allclose",
   "numpy.linspace",
   "plasmapy.classes.sources.plasma3d.Plasma3D"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_plasma3d.test_Plasma3D_setup": {
  "lineno": 9,
  "symbols_in_volume": [
   "astropy.units.Pa",
   "astropy.units.T",
   "astropy.units.V",
   "astropy.units.kg",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.linspace",
   "plasmapy.classes.sources.plasma3d.Plasma3D",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_plasmablob": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.classes.sources.tests.test_plasmablob.Test_PlasmaBlob": {
  "lineno": 293,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.classes.sources.tests.test_plasmablob.Test_PlasmaBlob.setup_class": {
  "lineno": 294,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.cm",
   "plasmapy.classes.sources.plasmablob.PlasmaBlob"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_plasmablob.Test_PlasmaBlob.test_composition": {
  "lineno": 342,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_plasmablob.Test_PlasmaBlob.test_coupling": {
  "lineno": 350,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_plasmablob.Test_PlasmaBlob.test_electron_density": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_plasmablob.Test_PlasmaBlob.test_electron_temperature": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_plasmablob.Test_PlasmaBlob.test_invalid_particle": {
  "lineno": 308,
  "symbols_in_volume": [
   "plasmapy.atomic.exceptions.InvalidParticleError",
   "plasmapy.classes.sources.plasmablob.PlasmaBlob",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_plasmablob.Test_PlasmaBlob.test_ionization": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_plasmablob.Test_PlasmaBlob.test_quantum_theta": {
  "lineno": 363,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_plasmablob.Test_PlasmaBlobRegimes": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.classes.sources.tests.test_plasmablob.Test_PlasmaBlobRegimes.test_both_fermi_and_thermal_energy_important": {
  "lineno": 263,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.cm",
   "plasmapy.classes.sources.plasmablob.PlasmaBlob"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_plasmablob.Test_PlasmaBlobRegimes.test_fermi_quantum_energy_dominant": {
  "lineno": 234,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.cm",
   "plasmapy.classes.sources.plasmablob.PlasmaBlob"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_plasmablob.Test_PlasmaBlobRegimes.test_intermediate_coupling": {
  "lineno": 118,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.cm",
   "plasmapy.classes.sources.plasmablob.PlasmaBlob"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_plasmablob.Test_PlasmaBlobRegimes.test_strongly_coupled": {
  "lineno": 146,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.cm",
   "plasmapy.classes.sources.plasmablob.PlasmaBlob"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_plasmablob.Test_PlasmaBlobRegimes.test_thermal_kinetic_energy_dominant": {
  "lineno": 205,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.cm",
   "plasmapy.classes.sources.plasmablob.PlasmaBlob"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_plasmablob.Test_PlasmaBlobRegimes.test_weakly_coupled": {
  "lineno": 175,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.cm",
   "plasmapy.classes.sources.plasmablob.PlasmaBlob",
   "plasmapy.utils.exceptions.CouplingWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_plasmablob.test_Plasma3D_add_magnetostatics": {
  "lineno": 103,
  "symbols_in_volume": [
   "astropy.units.A",
   "astropy.units.m",
   "numpy.array",
   "numpy.linspace",
   "plasmapy.classes.sources.plasma3d.Plasma3D",
   "plasmapy.formulary.magnetostatics.CircularWire",
   "plasmapy.formulary.magnetostatics.InfiniteStraightWire",
   "plasmapy.formulary.magnetostatics.MagneticDipole",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_plasmablob.test_Plasma3D_derived_vars": {
  "lineno": 67,
  "symbols_in_volume": [
   "astropy.units.Pa",
   "astropy.units.T",
   "astropy.units.V",
   "astropy.units.kg",
   "astropy.units.m",
   "astropy.units.m.all",
   "astropy.units.s",
   "astropy.units.s.all",
   "numpy.allclose",
   "numpy.linspace",
   "plasmapy.classes.sources.plasma3d.Plasma3D"
  ],
  "type": "function"
 },
 "plasmapy.classes.sources.tests.test_plasmablob.test_Plasma3D_setup": {
  "lineno": 11,
  "symbols_in_volume": [
   "astropy.units.Pa",
   "astropy.units.T",
   "astropy.units.V",
   "astropy.units.kg",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.linspace",
   "plasmapy.classes.sources.plasma3d.Plasma3D",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.classes.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.classes.tests.test_plasma_base": {
  "lineno": null,
  "symbols_in_volume": [
   "plasmapy.classes.BasePlasma._registry"
  ],
  "type": "module"
 },
 "plasmapy.classes.tests.test_plasma_base.IsDataSource": {
  "lineno": 10,
  "symbols_in_volume": [
   "plasmapy.classes.BasePlasma"
  ],
  "type": "class"
 },
 "plasmapy.classes.tests.test_plasma_base.IsDataSource.is_datasource_for": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.tests.test_plasma_base.IsNotDataSource": {
  "lineno": 16,
  "symbols_in_volume": [
   "plasmapy.classes.BasePlasma"
  ],
  "type": "class"
 },
 "plasmapy.classes.tests.test_plasma_base.IsNotDataSource.is_datasource_for": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.tests.test_plasma_base.NoDataSource": {
  "lineno": 6,
  "symbols_in_volume": [
   "plasmapy.classes.BasePlasma"
  ],
  "type": "class"
 },
 "plasmapy.classes.tests.test_plasma_base.TestRegistrar": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.classes.tests.test_plasma_base.TestRegistrar.test_is_data_source": {
  "lineno": 30,
  "symbols_in_volume": [
   "plasmapy.classes.BasePlasma._registry",
   "plasmapy.classes.BasePlasma._registry.get"
  ],
  "type": "function"
 },
 "plasmapy.classes.tests.test_plasma_base.TestRegistrar.test_is_not_data_source": {
  "lineno": 41,
  "symbols_in_volume": [
   "plasmapy.classes.BasePlasma._registry",
   "plasmapy.classes.BasePlasma._registry.get"
  ],
  "type": "function"
 },
 "plasmapy.classes.tests.test_plasma_base.TestRegistrar.test_no_data_source": {
  "lineno": 23,
  "symbols_in_volume": [
   "plasmapy.classes.BasePlasma._registry.get"
  ],
  "type": "function"
 },
 "plasmapy.classes.tests.test_plasma_base.test_subclasses": {
  "lineno": 51,
  "symbols_in_volume": [
   "plasmapy.classes.BasePlasma",
   "plasmapy.classes.GenericPlasma"
  ],
  "type": "function"
 },
 "plasmapy.classes.tests.test_plasma_factory": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.classes.tests.test_plasma_factory.TestPlasma": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.classes.tests.test_plasma_factory.TestPlasma.test_Plasma3D": {
  "lineno": 21,
  "symbols_in_volume": [
   "astropy.units.m",
   "numpy.linspace"
  ],
  "type": "function"
 },
 "plasmapy.classes.tests.test_plasma_factory.TestPlasma.test_PlasmaBlob": {
  "lineno": 29,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.cm"
  ],
  "type": "function"
 },
 "plasmapy.classes.tests.test_plasma_factory.TestPlasma.test_patters": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.classes.tests.test_plasma_factory.h5": {
  "lineno": 9,
  "symbols_in_volume": [
   "os.path.join",
   "plasmapy.data.test.rootdir",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "plasmapy.conftest": {
  "lineno": null,
  "symbols_in_volume": [
   "matplotlib.use"
  ],
  "type": "module"
 },
 "plasmapy.conftest.pytest_configure": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.data": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.data.test": {
  "lineno": null,
  "symbols_in_volume": [
   "glob.glob",
   "os.path.dirname",
   "os.path.join",
   "plasmapy.__file__"
  ],
  "type": "module"
 },
 "plasmapy.diagnostics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.diagnostics.langmuir": {
  "lineno": null,
  "symbols_in_volume": [
   "plasmapy.optional_deps.mpl_import_error"
  ],
  "type": "module"
 },
 "plasmapy.diagnostics.langmuir.Characteristic": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.diagnostics.langmuir.Characteristic.__add__": {
  "lineno": 101,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.Characteristic.__getitem__": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.Characteristic.__init__": {
  "lineno": 77,
  "symbols_in_volume": [
   "astropy.units.A",
   "astropy.units.V",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.Characteristic.__sub__": {
  "lineno": 94,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.Characteristic._check_validity": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.unique"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.Characteristic.get_padded_limit": {
  "lineno": 153,
  "symbols_in_volume": [
   "astropy.units.A",
   "numpy.abs",
   "numpy.log10",
   "numpy.max",
   "numpy.min"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.Characteristic.get_unique_bias": {
  "lineno": 115,
  "symbols_in_volume": [
   "astropy.units.A",
   "numpy.append",
   "numpy.mean",
   "numpy.unique"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.Characteristic.plot": {
  "lineno": 180,
  "symbols_in_volume": [
   "astropy.units.V",
   "astropy.units.mA",
   "astropy.visualization.quantity_support",
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.scatter",
   "matplotlib.pyplot.title"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.Characteristic.sort": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir._fit_func_double_lin_inverse": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.piecewise"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir._fit_func_lin": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir._fit_func_lin_inverse": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.extract_exponential_section": {
  "lineno": 657,
  "symbols_in_volume": [
   "astropy.constants.si.e",
   "numpy.array",
   "numpy.min"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.extract_ion_section": {
  "lineno": 720,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.extrapolate_electron_current": {
  "lineno": 912,
  "symbols_in_volume": [
   "astropy.units.A",
   "astropy.units.V",
   "astropy.units.mA",
   "astropy.visualization.quantity_support",
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.legend",
   "matplotlib.pyplot.plot",
   "matplotlib.pyplot.scatter",
   "numpy.NaN",
   "numpy.exp",
   "numpy.max"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.extrapolate_ion_current_OML": {
  "lineno": 1110,
  "symbols_in_volume": [
   "astropy.units.V",
   "astropy.units.mA",
   "astropy.visualization.quantity_support",
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.plot",
   "matplotlib.pyplot.scatter",
   "numpy.clip",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.get_EEDF": {
  "lineno": 1165,
  "symbols_in_volume": [
   "astropy.constants.si.e",
   "astropy.units.A",
   "astropy.units.V",
   "astropy.units.eV",
   "astropy.visualization.quantity_support",
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.grid",
   "matplotlib.pyplot.semilogy",
   "matplotlib.pyplot.title",
   "matplotlib.pyplot.xlabel",
   "matplotlib.pyplot.ylabel",
   "numpy.abs",
   "numpy.gradient",
   "numpy.sqrt",
   "numpy.trapz"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.get_electron_density_LM": {
  "lineno": 601,
  "symbols_in_volume": [
   "astropy.constants.si.e",
   "astropy.constants.si.m_e",
   "astropy.units.A",
   "astropy.units.eV",
   "astropy.units.m",
   "astropy.units.temperature_energy",
   "numpy.pi",
   "numpy.sqrt",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.get_electron_saturation_current": {
  "lineno": 479,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.get_electron_temperature": {
  "lineno": 754,
  "symbols_in_volume": [
   "astropy.units.A",
   "astropy.units.V",
   "astropy.units.eV",
   "astropy.visualization.quantity_support",
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.legend",
   "matplotlib.pyplot.plot",
   "matplotlib.pyplot.scatter",
   "matplotlib.pyplot.tight_layout",
   "matplotlib.pyplot.title",
   "matplotlib.pyplot.ylabel",
   "numpy.array",
   "numpy.exp",
   "numpy.inf",
   "numpy.log",
   "numpy.max",
   "numpy.min",
   "scipy.optimize.curve_fit"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.get_floating_potential": {
  "lineno": 440,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.argmin"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.get_ion_density_LM": {
  "lineno": 542,
  "symbols_in_volume": [
   "astropy.constants.si.e",
   "astropy.units.A",
   "astropy.units.eV",
   "astropy.units.m",
   "astropy.units.temperature_energy",
   "numpy.abs",
   "numpy.sqrt",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.get_ion_density_OML": {
  "lineno": 1023,
  "symbols_in_volume": [
   "astropy.constants.si.e",
   "astropy.units.V",
   "astropy.units.m",
   "astropy.units.mA",
   "astropy.visualization.quantity_support",
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.plot",
   "matplotlib.pyplot.scatter",
   "matplotlib.pyplot.tight_layout",
   "matplotlib.pyplot.title",
   "numpy.pi",
   "numpy.poly1d",
   "numpy.polyfit",
   "numpy.sqrt",
   "plasmapy.atomic.Particle",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.get_ion_saturation_current": {
  "lineno": 511,
  "symbols_in_volume": [
   "numpy.min"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.get_plasma_potential": {
  "lineno": 393,
  "symbols_in_volume": [
   "astropy.units.A",
   "astropy.units.V",
   "numpy.argmax",
   "numpy.gradient"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.reduce_bimaxwellian_temperature": {
  "lineno": 980,
  "symbols_in_volume": [
   "astropy.units.eV",
   "astropy.units.temperature_energy",
   "numpy.array",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.swept_probe_analysis": {
  "lineno": 190,
  "symbols_in_volume": [
   "astropy.units.m",
   "astropy.visualization.quantity_support",
   "matplotlib.pyplot.subplots",
   "numpy.abs",
   "plasmapy.atomic.Particle",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.diagnostics.tests.test_langmuir": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.units.A",
   "astropy.units.V",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "module"
 },
 "plasmapy.diagnostics.tests.test_langmuir.DryCharacteristic": {
  "lineno": 178,
  "symbols_in_volume": [
   "plasmapy.diagnostics.langmuir.Characteristic"
  ],
  "type": "class"
 },
 "plasmapy.diagnostics.tests.test_langmuir.DryCharacteristic.__init__": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__Characteristic_inherited_methods": {
  "lineno": 190,
  "symbols_in_volume": [
   "astropy.units.A",
   "astropy.units.V",
   "numpy.array",
   "numpy.random.rand"
  ],
  "type": "class"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__Characteristic_inherited_methods.test_bias_and_current_length_mismatch": {
  "lineno": 213,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__Characteristic_inherited_methods.test_duplicate_bias_values": {
  "lineno": 219,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__Characteristic_inherited_methods.test_getpadded_limit": {
  "lineno": 234,
  "symbols_in_volume": [
   "astropy.units.A",
   "numpy.allclose",
   "numpy.array"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__Characteristic_inherited_methods.test_inplace_unique_bias": {
  "lineno": 225,
  "symbols_in_volume": [
   "plasmapy.diagnostics.langmuir.Characteristic"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__Characteristic_inherited_methods.test_invalid_bias_dimensions": {
  "lineno": 203,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__Characteristic_inherited_methods.test_invalid_current_dimensions": {
  "lineno": 208,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__characteristic_errors": {
  "lineno": 64,
  "symbols_in_volume": [
   "astropy.units.A",
   "astropy.units.V",
   "numpy.append",
   "numpy.array",
   "numpy.inf",
   "numpy.random.rand"
  ],
  "type": "class"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__characteristic_errors.test_addition": {
  "lineno": 108,
  "symbols_in_volume": [
   "plasmapy.diagnostics.langmuir.Characteristic"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__characteristic_errors.test_infinite_I": {
  "lineno": 87,
  "symbols_in_volume": [
   "plasmapy.diagnostics.langmuir.Characteristic",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__characteristic_errors.test_infinite_U": {
  "lineno": 93,
  "symbols_in_volume": [
   "plasmapy.diagnostics.langmuir.Characteristic",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__characteristic_errors.test_invalid_dimensions": {
  "lineno": 80,
  "symbols_in_volume": [
   "plasmapy.diagnostics.langmuir.Characteristic"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__characteristic_errors.test_subtraction": {
  "lineno": 120,
  "symbols_in_volume": [
   "plasmapy.diagnostics.langmuir.Characteristic"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__characteristic_errors.test_unequal_arrays": {
  "lineno": 99,
  "symbols_in_volume": [
   "plasmapy.diagnostics.langmuir.Characteristic",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__fitting_functions": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__fitting_functions.test_fit_func_double_lin_inverse": {
  "lineno": 49,
  "symbols_in_volume": [
   "plasmapy.diagnostics.langmuir._fit_func_double_lin_inverse"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__fitting_functions.test_fit_func_lin": {
  "lineno": 28,
  "symbols_in_volume": [
   "plasmapy.diagnostics.langmuir._fit_func_lin"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__fitting_functions.test_fit_func_lin_inverse": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.allclose",
   "plasmapy.diagnostics.langmuir._fit_func_lin_inverse"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__swept_probe_analysis": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__swept_probe_analysis.test_nan_area": {
  "lineno": 250,
  "symbols_in_volume": [
   "astropy.units.cm",
   "numpy.nan",
   "plasmapy.diagnostics.langmuir.swept_probe_analysis",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__swept_probe_analysis.test_negative_area": {
  "lineno": 264,
  "symbols_in_volume": [
   "astropy.units.cm",
   "plasmapy.diagnostics.langmuir.swept_probe_analysis",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__swept_probe_analysis.test_ordering_invariance": {
  "lineno": 271,
  "symbols_in_volume": [
   "astropy.units.cm",
   "plasmapy.diagnostics.langmuir.swept_probe_analysis",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__swept_probe_analysis.test_unit_conversion_error": {
  "lineno": 257,
  "symbols_in_volume": [
   "astropy.units.UnitTypeError",
   "astropy.units.cm",
   "plasmapy.diagnostics.langmuir.swept_probe_analysis",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.characteristic": {
  "lineno": 133,
  "symbols_in_volume": [
   "plasmapy.diagnostics.langmuir.Characteristic",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.characteristic_simulated": {
  "lineno": 140,
  "symbols_in_volume": [
   "astropy.constants.si.e",
   "astropy.constants.si.m_e",
   "astropy.units.A",
   "astropy.units.V",
   "astropy.units.cm",
   "astropy.units.eV",
   "astropy.units.m",
   "numpy.arange",
   "numpy.exp",
   "numpy.pi",
   "numpy.sqrt",
   "plasmapy.diagnostics.langmuir.Characteristic",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.shuffle_characteristic": {
  "lineno": 168,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.random",
   "plasmapy.diagnostics.langmuir.Characteristic"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.test_get_EEDF": {
  "lineno": 309,
  "symbols_in_volume": [
   "astropy.units.eV",
   "numpy.allclose",
   "numpy.array",
   "plasmapy.diagnostics.langmuir.Characteristic",
   "plasmapy.diagnostics.langmuir.get_EEDF"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.test_get_floating_potential_with_return_arg": {
  "lineno": 294,
  "symbols_in_volume": [
   "astropy.units.V",
   "numpy.allclose",
   "plasmapy.diagnostics.langmuir.get_floating_potential"
  ],
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.test_get_ion_density_OML_without_return_fit": {
  "lineno": 301,
  "symbols_in_volume": [
   "astropy.units.m",
   "numpy.isclose",
   "plasmapy.diagnostics.langmuir.get_ion_density_OML"
  ],
  "type": "function"
 },
 "plasmapy.examples.plot_braginskii": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.units.T",
   "astropy.units.keV",
   "astropy.units.m",
   "plasmapy.formulary.ClassicalTransport"
  ],
  "type": "module"
 },
 "plasmapy.examples.plot_cold_plasma_tensor_elements": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.units.T",
   "astropy.units.m",
   "astropy.units.rad",
   "astropy.units.s",
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.grid",
   "matplotlib.pyplot.legend",
   "matplotlib.pyplot.semilogx",
   "matplotlib.pyplot.tick_params",
   "matplotlib.pyplot.xlabel",
   "matplotlib.pyplot.xlim",
   "matplotlib.pyplot.ylabel",
   "matplotlib.pyplot.ylim",
   "matplotlib.pyplot.yscale",
   "numpy.NaN",
   "numpy.logspace",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "plasmapy.formulary.cold_plasma_permittivity_LRP",
   "plasmapy.formulary.cold_plasma_permittivity_SDP"
  ],
  "type": "module"
 },
 "plasmapy.examples.plot_dispersion_function": {
  "lineno": null,
  "symbols_in_volume": [
   "matplotlib.pyplot.axis",
   "matplotlib.pyplot.legend",
   "matplotlib.pyplot.plot",
   "matplotlib.pyplot.show",
   "numpy.imag",
   "numpy.linspace",
   "numpy.meshgrid",
   "numpy.real"
  ],
  "type": "module"
 },
 "plasmapy.examples.plot_dispersion_function.plot_complex": {
  "lineno": 30,
  "symbols_in_volume": [
   "matplotlib.pyplot.subplots"
  ],
  "type": "function"
 },
 "plasmapy.examples.plot_distribution": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.constants.k_B.to",
   "astropy.constants.m_e.to",
   "astropy.units.K",
   "astropy.units.m",
   "astropy.units.s",
   "astropy.visualization.quantity_support",
   "matplotlib.pyplot.legend",
   "matplotlib.pyplot.plot",
   "numpy.arange",
   "numpy.sqrt",
   "plasmapy.formulary.Maxwellian_1D"
  ],
  "type": "module"
 },
 "plasmapy.examples.plot_langmuir_analysis": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.units.A",
   "astropy.units.Quantity",
   "astropy.units.V",
   "astropy.units.cm",
   "astropy.units.mm",
   "numpy.load",
   "numpy.pi",
   "os.path.join",
   "plasmapy.diagnostics.langmuir.Characteristic",
   "plasmapy.diagnostics.langmuir.swept_probe_analysis",
   "pprint.pprint"
  ],
  "type": "module"
 },
 "plasmapy.examples.plot_magnetic_statics": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.units.A",
   "astropy.units.m",
   "matplotlib.pyplot.axis",
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.streamplot",
   "matplotlib.pyplot.title",
   "matplotlib.pyplot.xlim",
   "matplotlib.pyplot.ylim",
   "numpy.array",
   "numpy.linspace",
   "plasmapy.classes.sources.Plasma3D",
   "plasmapy.formulary.magnetostatics.CircularWire",
   "plasmapy.formulary.magnetostatics.InfiniteStraightWire",
   "plasmapy.formulary.magnetostatics.MagneticDipole"
  ],
  "type": "module"
 },
 "plasmapy.examples.plot_particle_stepper": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.units.Hz",
   "astropy.units.T",
   "astropy.units.V",
   "astropy.units.dimensionless_angles",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.linspace",
   "numpy.ones",
   "numpy.pi",
   "plasmapy.classes.Plasma",
   "plasmapy.formulary.gyrofrequency",
   "plasmapy.simulation.ParticleTracker"
  ],
  "type": "module"
 },
 "plasmapy.examples.plot_physics": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.T",
   "astropy.units.eV",
   "astropy.units.keV",
   "astropy.units.m",
   "astropy.units.temperature_energy",
   "matplotlib.pyplot.grid",
   "matplotlib.pyplot.legend",
   "matplotlib.pyplot.plot",
   "matplotlib.pyplot.scatter",
   "matplotlib.pyplot.show",
   "matplotlib.pyplot.title",
   "matplotlib.pyplot.xlabel",
   "matplotlib.pyplot.xscale",
   "matplotlib.pyplot.ylabel",
   "matplotlib.pyplot.yscale",
   "numpy.logspace",
   "plasmapy.formulary.Debye_length",
   "plasmapy.formulary.gyrofrequency",
   "plasmapy.formulary.gyroradius",
   "plasmapy.formulary.inertial_length",
   "plasmapy.formulary.plasma_frequency",
   "plasmapy.formulary.thermal_speed"
  ],
  "type": "module"
 },
 "plasmapy.formulary": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.formulary.braginskii": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.formulary.braginskii.ClassicalTransport": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.braginskii.ClassicalTransport.__init__": {
  "lineno": 298,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.T",
   "astropy.units.kg",
   "astropy.units.m",
   "astropy.units.temperature_energy",
   "plasmapy.atomic.particle_mass",
   "plasmapy.formulary.collisions.Coulomb_logarithm",
   "plasmapy.formulary.parameters.Hall_parameter",
   "plasmapy.formulary.parameters._grab_charge",
   "plasmapy.utils.CouplingWarning",
   "plasmapy.utils.PhysicsError",
   "plasmapy.utils.decorators.validate_quantities",
   "warnings.warn"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii.ClassicalTransport.all_variables": {
  "lineno": 699,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii.ClassicalTransport.electron_thermal_conductivity": {
  "lineno": 544,
  "symbols_in_volume": [
   "astropy.constants.si.k_B",
   "astropy.constants.si.m_e",
   "astropy.units.K",
   "astropy.units.W",
   "astropy.units.m",
   "plasmapy.formulary.collisions.fundamental_electron_collision_freq",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii.ClassicalTransport.electron_viscosity": {
  "lineno": 642,
  "symbols_in_volume": [
   "astropy.constants.si.k_B",
   "astropy.units.Pa",
   "astropy.units.s",
   "numpy.array",
   "numpy.isclose",
   "plasmapy.formulary.collisions.fundamental_electron_collision_freq",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii.ClassicalTransport.ion_thermal_conductivity": {
  "lineno": 503,
  "symbols_in_volume": [
   "astropy.constants.si.k_B",
   "astropy.units.K",
   "astropy.units.W",
   "astropy.units.m",
   "plasmapy.formulary.collisions.fundamental_ion_collision_freq",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii.ClassicalTransport.ion_viscosity": {
  "lineno": 597,
  "symbols_in_volume": [
   "astropy.constants.si.k_B",
   "astropy.units.Pa",
   "astropy.units.s",
   "numpy.array",
   "numpy.isclose",
   "plasmapy.formulary.collisions.fundamental_ion_collision_freq",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii.ClassicalTransport.resistivity": {
  "lineno": 442,
  "symbols_in_volume": [
   "astropy.constants.si.e",
   "astropy.constants.si.m_e",
   "astropy.units.Ohm",
   "astropy.units.m",
   "plasmapy.formulary.collisions.fundamental_electron_collision_freq",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii.ClassicalTransport.thermoelectric_conductivity": {
  "lineno": 482,
  "symbols_in_volume": [
   "astropy.units.Quantity"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._check_Z": {
  "lineno": 1123,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "plasmapy.utils.PhysicsError"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._get_spitzer_harm_coeffs": {
  "lineno": 1150,
  "symbols_in_volume": [
   "numpy.inf"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resist_braginskii": {
  "lineno": 1372,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resist_ji_held": {
  "lineno": 1591,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resist_ji_held.f_a_0": {
  "lineno": 1618,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resist_ji_held.f_a_1": {
  "lineno": 1621,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resist_ji_held.f_a_2": {
  "lineno": 1624,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resist_ji_held.f_a_3": {
  "lineno": 1627,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resist_ji_held.f_a_4": {
  "lineno": 1630,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resist_ji_held.f_a_5": {
  "lineno": 1633,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resist_ji_held.f_alpha_0": {
  "lineno": 1609,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resist_ji_held.f_alpha_1": {
  "lineno": 1612,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resist_ji_held.f_alpha_2": {
  "lineno": 1615,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resist_ji_held.f_alpha_cross": {
  "lineno": 1663,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resist_ji_held.f_alpha_par_e": {
  "lineno": 1604,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resist_ji_held.f_alpha_perp": {
  "lineno": 1651,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resist_spitzer": {
  "lineno": 1174,
  "symbols_in_volume": [
   "numpy.pi"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resistivity": {
  "lineno": 1087,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_braginskii": {
  "lineno": 1207,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held": {
  "lineno": 1469,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held.f_k_0": {
  "lineno": 1512,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held.f_k_1": {
  "lineno": 1517,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held.f_k_2": {
  "lineno": 1522,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held.f_k_3": {
  "lineno": 1527,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held.f_k_4": {
  "lineno": 1532,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held.f_k_5": {
  "lineno": 1537,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held.f_kappa_0": {
  "lineno": 1487,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held.f_kappa_1": {
  "lineno": 1492,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held.f_kappa_2": {
  "lineno": 1497,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held.f_kappa_3": {
  "lineno": 1502,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held.f_kappa_4": {
  "lineno": 1507,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held.f_kappa_cross": {
  "lineno": 1573,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held.f_kappa_par_e": {
  "lineno": 1482,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held.f_kappa_perp": {
  "lineno": 1559,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_spitzer": {
  "lineno": 1164,
  "symbols_in_volume": [
   "numpy.pi"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_i_braginskii": {
  "lineno": 1255,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_i_ji_held": {
  "lineno": 1880,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_te_conductivity": {
  "lineno": 1105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_braginskii": {
  "lineno": 1419,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held": {
  "lineno": 1681,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held.f_b_0": {
  "lineno": 1714,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held.f_b_1": {
  "lineno": 1719,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held.f_b_2": {
  "lineno": 1722,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held.f_b_3": {
  "lineno": 1726,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held.f_b_4": {
  "lineno": 1729,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held.f_b_5": {
  "lineno": 1732,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held.f_beta_0": {
  "lineno": 1699,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held.f_beta_1": {
  "lineno": 1702,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held.f_beta_2": {
  "lineno": 1705,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held.f_beta_3": {
  "lineno": 1708,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held.f_beta_4": {
  "lineno": 1711,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held.f_beta_cross": {
  "lineno": 1766,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held.f_beta_par_e": {
  "lineno": 1694,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held.f_beta_perp": {
  "lineno": 1752,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_spitzer": {
  "lineno": 1196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_thermal_conductivity": {
  "lineno": 1014,
  "symbols_in_volume": [
   "plasmapy.atomic.atomic._is_electron"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_braginskii": {
  "lineno": 1300,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_braginskii.eta_2": {
  "lineno": 1320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_braginskii.f_eta_4": {
  "lineno": 1327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held": {
  "lineno": 1784,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held.f_eta_0_e": {
  "lineno": 1797,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held.f_eta_2": {
  "lineno": 1848,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held.f_eta_4": {
  "lineno": 1863,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held.f_h_0": {
  "lineno": 1815,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held.f_h_1": {
  "lineno": 1818,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held.f_h_2": {
  "lineno": 1821,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held.f_h_3": {
  "lineno": 1824,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held.f_h_4": {
  "lineno": 1827,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held.f_h_5": {
  "lineno": 1830,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held.f_hprime_0": {
  "lineno": 1800,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held.f_hprime_1": {
  "lineno": 1803,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held.f_hprime_2": {
  "lineno": 1806,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held.f_hprime_3": {
  "lineno": 1809,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held.f_hprime_4": {
  "lineno": 1812,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_i_braginskii": {
  "lineno": 1336,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_i_braginskii.f_eta_2": {
  "lineno": 1355,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_i_braginskii.f_eta_4": {
  "lineno": 1362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_i_ji_held": {
  "lineno": 1945,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_i_ji_held.Delta_perp_i2": {
  "lineno": 2000,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_i_ji_held.f_eta_2": {
  "lineno": 2009,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_i_ji_held.f_eta_4": {
  "lineno": 2018,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_viscosity": {
  "lineno": 1051,
  "symbols_in_volume": [
   "plasmapy.atomic.atomic._is_electron"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii.electron_thermal_conductivity": {
  "lineno": 849,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.T",
   "astropy.units.W",
   "astropy.units.m",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii.electron_viscosity": {
  "lineno": 964,
  "symbols_in_volume": [
   "astropy.units.Pa",
   "astropy.units.T",
   "astropy.units.s",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii.ion_thermal_conductivity": {
  "lineno": 796,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.T",
   "astropy.units.W",
   "astropy.units.m",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii.ion_viscosity": {
  "lineno": 914,
  "symbols_in_volume": [
   "astropy.units.Pa",
   "astropy.units.T",
   "astropy.units.s",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii.resistivity": {
  "lineno": 720,
  "symbols_in_volume": [
   "astropy.units.Ohm",
   "astropy.units.T",
   "astropy.units.m",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.braginskii.thermoelectric_conductivity": {
  "lineno": 765,
  "symbols_in_volume": [
   "astropy.units.T",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.collisions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.formulary.collisions.Coulomb_cross_section": {
  "lineno": 814,
  "symbols_in_volume": [
   "astropy.units.m",
   "numpy.pi",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.collisions.Coulomb_logarithm": {
  "lineno": 74,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "astropy.units.temperature_energy",
   "numpy.any",
   "numpy.errstate",
   "numpy.isscalar",
   "numpy.log",
   "numpy.nan",
   "plasmapy.atomic.Particle",
   "plasmapy.atomic.particle_input",
   "plasmapy.utils.CouplingWarning",
   "plasmapy.utils.decorators.validate_quantities",
   "warnings.warn"
  ],
  "type": "function"
 },
 "plasmapy.formulary.collisions.Knudsen_number": {
  "lineno": 1495,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "astropy.units.temperature_energy",
   "numpy.nan",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.collisions.Spitzer_resistivity": {
  "lineno": 1238,
  "symbols_in_volume": [
   "astropy.constants.si.e",
   "astropy.units.K",
   "astropy.units.Ohm",
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "astropy.units.temperature_energy",
   "numpy.isnan",
   "numpy.nan",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.collisions._boilerPlate": {
  "lineno": 293,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.temperature_energy",
   "numpy.abs",
   "plasmapy.atomic.Particle",
   "plasmapy.atomic.particle_input",
   "plasmapy.atomic.reduced_mass",
   "plasmapy.utils.decorators.checks._check_relativistic",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.collisions._replaceNanVwithThermalV": {
  "lineno": 315,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.isnan",
   "numpy.isscalar",
   "plasmapy.formulary.parameters.thermal_speed",
   "plasmapy.utils.PhysicsError"
  ],
  "type": "function"
 },
 "plasmapy.formulary.collisions.collision_frequency": {
  "lineno": 638,
  "symbols_in_volume": [
   "astropy.constants.si.m_e",
   "astropy.units.Hz",
   "astropy.units.K",
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "astropy.units.temperature_energy",
   "numpy.nan",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.collisions.coupling_parameter": {
  "lineno": 1615,
  "symbols_in_volume": [
   "astropy.constants.si.e",
   "astropy.constants.si.eps0",
   "astropy.constants.si.k_B",
   "astropy.units.K",
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "astropy.units.temperature_energy",
   "numpy.abs",
   "numpy.all",
   "numpy.imag",
   "numpy.isnan",
   "numpy.nan",
   "numpy.pi",
   "numpy.real",
   "plasmapy.atomic.integer_charge",
   "plasmapy.formulary.mathematics.Fermi_integral",
   "plasmapy.formulary.quantum.Wigner_Seitz_radius",
   "plasmapy.formulary.quantum.chemical_potential",
   "plasmapy.formulary.quantum.thermal_deBroglie_wavelength",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.collisions.fundamental_electron_collision_freq": {
  "lineno": 856,
  "symbols_in_volume": [
   "astropy.constants.si.m_e",
   "astropy.units.K",
   "astropy.units.m",
   "astropy.units.s",
   "astropy.units.temperature_energy",
   "numpy.any",
   "numpy.pi",
   "numpy.sqrt",
   "plasmapy.atomic.integer_charge",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.collisions.fundamental_ion_collision_freq": {
  "lineno": 982,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.m",
   "astropy.units.s",
   "astropy.units.temperature_energy",
   "numpy.any",
   "numpy.pi",
   "numpy.sqrt",
   "plasmapy.atomic.integer_charge",
   "plasmapy.atomic.particle_mass",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.collisions.impact_parameter": {
  "lineno": 429,
  "symbols_in_volume": [
   "astropy.constants.si.hbar",
   "astropy.units.K",
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "astropy.units.temperature_energy",
   "numpy.isnan",
   "numpy.isscalar",
   "numpy.nan",
   "numpy.repeat",
   "plasmapy.formulary.parameters.Debye_length",
   "plasmapy.formulary.quantum.Wigner_Seitz_radius",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.collisions.impact_parameter_perp": {
  "lineno": 339,
  "symbols_in_volume": [
   "astropy.constants.si.eps0",
   "astropy.units.K",
   "astropy.units.m",
   "astropy.units.s",
   "astropy.units.temperature_energy",
   "numpy.nan",
   "numpy.pi",
   "plasmapy.atomic.Particle",
   "plasmapy.atomic.particle_input",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.collisions.mean_free_path": {
  "lineno": 1119,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "astropy.units.temperature_energy",
   "numpy.nan",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.collisions.mobility": {
  "lineno": 1367,
  "symbols_in_volume": [
   "astropy.constants.si.e",
   "astropy.units.K",
   "astropy.units.V",
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "astropy.units.temperature_energy",
   "numpy.isnan",
   "numpy.nan",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.dielectric": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "plasmapy.formulary.dielectric.cold_plasma_permittivity_LRP": {
  "lineno": 119,
  "symbols_in_volume": [
   "astropy.units.T",
   "astropy.units.rad",
   "astropy.units.s",
   "plasmapy.formulary.parameters.gyrofrequency",
   "plasmapy.formulary.parameters.plasma_frequency",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.dielectric.cold_plasma_permittivity_SDP": {
  "lineno": 22,
  "symbols_in_volume": [
   "astropy.units.T",
   "astropy.units.rad",
   "astropy.units.s",
   "plasmapy.formulary.parameters.gyrofrequency",
   "plasmapy.formulary.parameters.plasma_frequency",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.dielectric.permittivity_1D_Maxwellian": {
  "lineno": 212,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.rad",
   "astropy.units.s",
   "numpy.sqrt",
   "plasmapy.formulary.dispersionfunction.plasma_dispersion_func_deriv",
   "plasmapy.formulary.parameters.plasma_frequency",
   "plasmapy.formulary.parameters.thermal_speed",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.dimensionless": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.formulary.dimensionless.beta": {
  "lineno": 57,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.T",
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.temperature_energy",
   "plasmapy.formulary.parameters.magnetic_pressure",
   "plasmapy.formulary.parameters.thermal_pressure",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.dimensionless.quantum_theta": {
  "lineno": 19,
  "symbols_in_volume": [
   "astropy.constants.k_B",
   "astropy.units.K",
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.temperature_energy",
   "plasmapy.formulary.quantum.Fermi_energy",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.dispersionfunction": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.formulary.dispersionfunction.plasma_dispersion_func": {
  "lineno": 9,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.UnitsError",
   "astropy.units.dimensionless_unscaled",
   "numbers.Complex",
   "numbers.Integral",
   "numbers.Real",
   "numpy.all",
   "numpy.isfinite",
   "numpy.ndarray",
   "numpy.pi",
   "numpy.sqrt",
   "scipy.special.wofz",
   "typing.Union"
  ],
  "type": "function"
 },
 "plasmapy.formulary.dispersionfunction.plasma_dispersion_func_deriv": {
  "lineno": 94,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.UnitsError",
   "astropy.units.dimensionless_unscaled",
   "numbers.Complex",
   "numbers.Integral",
   "numbers.Real",
   "numpy.all",
   "numpy.isfinite",
   "numpy.ndarray",
   "typing.Union"
  ],
  "type": "function"
 },
 "plasmapy.formulary.distribution": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.formulary.distribution.Maxwellian_1D": {
  "lineno": 31,
  "symbols_in_volume": [
   "astropy.units",
   "astropy.units.K",
   "astropy.units.m",
   "astropy.units.s",
   "astropy.units.temperature_energy",
   "numpy.exp",
   "numpy.isnan",
   "numpy.nan",
   "numpy.pi",
   "plasmapy.formulary.parameters.thermal_speed"
  ],
  "type": "function"
 },
 "plasmapy.formulary.distribution.Maxwellian_speed_1D": {
  "lineno": 435,
  "symbols_in_volume": [
   "astropy.units",
   "astropy.units.K",
   "astropy.units.m",
   "astropy.units.s",
   "astropy.units.temperature_energy",
   "numpy.exp",
   "numpy.isnan",
   "numpy.nan",
   "numpy.pi",
   "plasmapy.formulary.parameters.thermal_speed"
  ],
  "type": "function"
 },
 "plasmapy.formulary.distribution.Maxwellian_speed_2D": {
  "lineno": 551,
  "symbols_in_volume": [
   "astropy.units",
   "astropy.units.K",
   "astropy.units.m",
   "astropy.units.s",
   "astropy.units.temperature_energy",
   "numpy.exp",
   "numpy.isnan",
   "numpy.nan",
   "numpy.pi",
   "plasmapy.formulary.parameters.thermal_speed"
  ],
  "type": "function"
 },
 "plasmapy.formulary.distribution.Maxwellian_speed_3D": {
  "lineno": 675,
  "symbols_in_volume": [
   "astropy.units",
   "astropy.units.K",
   "astropy.units.m",
   "astropy.units.s",
   "astropy.units.temperature_energy",
   "numpy.exp",
   "numpy.isnan",
   "numpy.nan",
   "numpy.pi",
   "plasmapy.formulary.parameters.thermal_speed"
  ],
  "type": "function"
 },
 "plasmapy.formulary.distribution.Maxwellian_velocity_2D": {
  "lineno": 147,
  "symbols_in_volume": [
   "astropy.units",
   "astropy.units.K",
   "astropy.units.m",
   "astropy.units.s",
   "astropy.units.temperature_energy",
   "numpy.exp",
   "numpy.isnan",
   "numpy.nan",
   "numpy.pi",
   "plasmapy.formulary.parameters.thermal_speed"
  ],
  "type": "function"
 },
 "plasmapy.formulary.distribution.Maxwellian_velocity_3D": {
  "lineno": 285,
  "symbols_in_volume": [
   "astropy.units",
   "astropy.units.K",
   "astropy.units.m",
   "astropy.units.s",
   "astropy.units.temperature_energy",
   "numpy.exp",
   "numpy.isnan",
   "numpy.nan",
   "numpy.pi",
   "plasmapy.formulary.parameters.thermal_speed"
  ],
  "type": "function"
 },
 "plasmapy.formulary.distribution._v_drift_units": {
  "lineno": 22,
  "symbols_in_volume": [
   "astropy.units.m",
   "astropy.units.quantity.Quantity",
   "astropy.units.s"
  ],
  "type": "function"
 },
 "plasmapy.formulary.distribution.kappa_velocity_1D": {
  "lineno": 799,
  "symbols_in_volume": [
   "astropy.units",
   "astropy.units.K",
   "astropy.units.m",
   "astropy.units.quantity.Quantity",
   "astropy.units.s",
   "astropy.units.temperature_energy",
   "numpy.isnan",
   "numpy.nan",
   "numpy.pi",
   "numpy.sqrt",
   "plasmapy.formulary.parameters.kappa_thermal_speed",
   "scipy.special.gamma"
  ],
  "type": "function"
 },
 "plasmapy.formulary.distribution.kappa_velocity_3D": {
  "lineno": 941,
  "symbols_in_volume": [
   "astropy.units",
   "astropy.units.K",
   "astropy.units.m",
   "astropy.units.s",
   "astropy.units.temperature_energy",
   "numpy.isnan",
   "numpy.nan",
   "numpy.pi",
   "plasmapy.formulary.parameters.kappa_thermal_speed",
   "scipy.special.gamma"
  ],
  "type": "function"
 },
 "plasmapy.formulary.drifts": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.formulary.drifts.ExB_drift": {
  "lineno": 12,
  "symbols_in_volume": [
   "astropy.units.T",
   "astropy.units.V",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.cross",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.drifts.force_drift": {
  "lineno": 64,
  "symbols_in_volume": [
   "astropy.units.C",
   "astropy.units.N",
   "astropy.units.T",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.cross",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.formulary.magnetostatics.CircularWire": {
  "lineno": 307,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.magnetostatics.CircularWire.__init__": {
  "lineno": 323,
  "symbols_in_volume": [
   "astropy.units.A",
   "astropy.units.m",
   "numpy.array",
   "numpy.cross",
   "numpy.linalg.norm",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.CircularWire.__init__.curve": {
  "lineno": 350,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.expand_dims",
   "numpy.matmul",
   "numpy.ndarray",
   "numpy.sin"
  ],
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.CircularWire.__repr__": {
  "lineno": 365,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.CircularWire.magnetic_field": {
  "lineno": 375,
  "symbols_in_volume": [
   "astropy.constants.mu0.value",
   "astropy.units.T",
   "numpy.cos",
   "numpy.cross",
   "numpy.expand_dims",
   "numpy.linalg.norm",
   "numpy.matmul",
   "numpy.pi",
   "numpy.sin"
  ],
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.CircularWire.to_GeneralWire": {
  "lineno": 416,
  "symbols_in_volume": [
   "astropy.units.A",
   "numpy.pi"
  ],
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.FiniteStraightWire": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.magnetostatics.FiniteStraightWire.__init__": {
  "lineno": 184,
  "symbols_in_volume": [
   "astropy.units.A",
   "astropy.units.m",
   "numpy.all",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.FiniteStraightWire.__repr__": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.FiniteStraightWire.magnetic_field": {
  "lineno": 200,
  "symbols_in_volume": [
   "astropy.constants.mu0.value",
   "astropy.units.T",
   "numpy.cross",
   "numpy.dot",
   "numpy.linalg.norm",
   "numpy.pi"
  ],
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.FiniteStraightWire.to_GeneralWire": {
  "lineno": 244,
  "symbols_in_volume": [
   "astropy.units.A"
  ],
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.GeneralWire": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.magnetostatics.GeneralWire.__init__": {
  "lineno": 104,
  "symbols_in_volume": [
   "astropy.units.A",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.GeneralWire.magnetic_field": {
  "lineno": 120,
  "symbols_in_volume": [
   "astropy.constants.mu0.value",
   "astropy.units.T",
   "astropy.units.m",
   "numbers.Integral",
   "numpy.cross",
   "numpy.linalg.norm",
   "numpy.pi"
  ],
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.InfiniteStraightWire": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.magnetostatics.InfiniteStraightWire.__init__": {
  "lineno": 264,
  "symbols_in_volume": [
   "astropy.units.A",
   "astropy.units.m",
   "numpy.linalg.norm",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.InfiniteStraightWire.__repr__": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.InfiniteStraightWire.magnetic_field": {
  "lineno": 278,
  "symbols_in_volume": [
   "astropy.constants.mu0.value",
   "astropy.units.T",
   "numpy.cross",
   "numpy.linalg.norm",
   "numpy.pi"
  ],
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.MagneticDipole": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.magnetostatics.MagneticDipole.__init__": {
  "lineno": 49,
  "symbols_in_volume": [
   "astropy.units.A",
   "astropy.units.m",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.MagneticDipole.__repr__": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.MagneticDipole.magnetic_field": {
  "lineno": 61,
  "symbols_in_volume": [
   "astropy.constants.mu0.value",
   "astropy.units.T",
   "astropy.units.m",
   "numpy.dot",
   "numpy.linalg.norm",
   "numpy.pi"
  ],
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.MagnetoStatics": {
  "lineno": 16,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "plasmapy.formulary.magnetostatics.MagnetoStatics.magnetic_field": {
  "lineno": 19,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "astropy.units.T",
   "astropy.units.m"
  ],
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.Wire": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.mathematics": {
  "lineno": null,
  "symbols_in_volume": [
   "plasmapy.optional_deps.mpmath_import_error"
  ],
  "type": "module"
 },
 "plasmapy.formulary.mathematics.Fermi_integral": {
  "lineno": 20,
  "symbols_in_volume": [
   "mpmath.polylog",
   "numbers.Complex",
   "numbers.Integral",
   "numbers.Real",
   "numpy.exp",
   "numpy.ndarray",
   "numpy.zeros_like",
   "typing.Union"
  ],
  "type": "function"
 },
 "plasmapy.formulary.parameters": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.formulary.parameters.Alfven_speed": {
  "lineno": 124,
  "symbols_in_volume": [
   "astropy.constants.si.mu0",
   "astropy.units.T",
   "astropy.units.kg",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.abs",
   "numpy.sqrt",
   "plasmapy.utils.decorators.check_relativistic",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.parameters.Debye_length": {
  "lineno": 1077,
  "symbols_in_volume": [
   "astropy.constants.si.e",
   "astropy.constants.si.eps0",
   "astropy.constants.si.k_B",
   "astropy.units.K",
   "astropy.units.m",
   "astropy.units.temperature_energy",
   "numpy.sqrt",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.parameters.Debye_number": {
  "lineno": 1144,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.temperature_energy",
   "numpy.pi",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.parameters.Hall_parameter": {
  "lineno": 655,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.T",
   "astropy.units.m",
   "astropy.units.radian",
   "astropy.units.temperature_energy",
   "plasmapy.atomic.Particle",
   "plasmapy.formulary.collisions.fundamental_electron_collision_freq",
   "plasmapy.formulary.collisions.fundamental_ion_collision_freq",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.parameters._grab_charge": {
  "lineno": 38,
  "symbols_in_volume": [
   "plasmapy.atomic.integer_charge"
  ],
  "type": "function"
 },
 "plasmapy.formulary.parameters.gyrofrequency": {
  "lineno": 725,
  "symbols_in_volume": [
   "astropy.constants.si.e.to",
   "astropy.units.Hz",
   "astropy.units.T",
   "astropy.units.cy",
   "astropy.units.rad",
   "astropy.units.s",
   "numpy.abs",
   "plasmapy.atomic.particle_mass",
   "plasmapy.utils.decorators.angular_freq_to_hz",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.parameters.gyroradius": {
  "lineno": 829,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.T",
   "astropy.units.dimensionless_angles",
   "astropy.units.m",
   "astropy.units.s",
   "astropy.units.temperature_energy",
   "numpy.abs",
   "numpy.any",
   "numpy.isfinite",
   "numpy.isscalar",
   "numpy.logical_not",
   "numpy.logical_xor",
   "numpy.nan",
   "numpy.repeat",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.parameters.inertial_length": {
  "lineno": 1210,
  "symbols_in_volume": [
   "astropy.constants.si.c",
   "astropy.units.dimensionless_angles",
   "astropy.units.m",
   "plasmapy.atomic.Particle",
   "plasmapy.atomic.particle_input",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.parameters.ion_sound_speed": {
  "lineno": 222,
  "symbols_in_volume": [
   "astropy.constants.si.k_B",
   "astropy.units.K",
   "astropy.units.m",
   "astropy.units.s",
   "astropy.units.temperature_energy",
   "numbers.Integral",
   "numbers.Real",
   "numpy.sqrt",
   "plasmapy.atomic.particle_mass",
   "plasmapy.utils.PhysicsError",
   "plasmapy.utils.decorators.check_relativistic",
   "plasmapy.utils.decorators.validate_quantities",
   "plasmapy.utils.exceptions.PhysicsWarning",
   "warnings.warn"
  ],
  "type": "function"
 },
 "plasmapy.formulary.parameters.kappa_thermal_speed": {
  "lineno": 551,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.m",
   "astropy.units.s",
   "astropy.units.temperature_energy",
   "numpy.sqrt",
   "plasmapy.utils.decorators.check_relativistic",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.parameters.lower_hybrid_frequency": {
  "lineno": 1456,
  "symbols_in_volume": [
   "astropy.units.Hz",
   "astropy.units.T",
   "astropy.units.cy",
   "astropy.units.m",
   "astropy.units.rad",
   "astropy.units.s",
   "plasmapy.atomic.integer_charge",
   "plasmapy.utils.decorators.angular_freq_to_hz",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.parameters.magnetic_energy_density": {
  "lineno": 1333,
  "symbols_in_volume": [
   "astropy.units.J",
   "astropy.units.T",
   "astropy.units.m",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.parameters.magnetic_pressure": {
  "lineno": 1274,
  "symbols_in_volume": [
   "astropy.constants.si.mu0",
   "astropy.units.Pa",
   "astropy.units.T",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.parameters.mass_density": {
  "lineno": 67,
  "symbols_in_volume": [
   "astropy.constants.si.m_e",
   "astropy.units.kg",
   "astropy.units.m",
   "numbers.Real",
   "plasmapy.atomic.particle_mass",
   "plasmapy.utils.decorators.validate_quantities",
   "typing.Optional"
  ],
  "type": "function"
 },
 "plasmapy.formulary.parameters.plasma_frequency": {
  "lineno": 976,
  "symbols_in_volume": [
   "astropy.constants.si.e",
   "astropy.constants.si.eps0",
   "astropy.units.Hz",
   "astropy.units.cy",
   "astropy.units.m",
   "astropy.units.rad",
   "astropy.units.s",
   "numpy.abs",
   "numpy.sqrt",
   "plasmapy.atomic.integer_charge",
   "plasmapy.atomic.particle_mass",
   "plasmapy.utils.decorators.angular_freq_to_hz",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.parameters.thermal_pressure": {
  "lineno": 503,
  "symbols_in_volume": [
   "astropy.constants.si.k_B",
   "astropy.units.K",
   "astropy.units.Pa",
   "astropy.units.m",
   "astropy.units.temperature_energy",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.parameters.thermal_speed": {
  "lineno": 397,
  "symbols_in_volume": [
   "astropy.constants.si.k_B",
   "astropy.units.K",
   "astropy.units.kg",
   "astropy.units.m",
   "astropy.units.s",
   "astropy.units.temperature_energy",
   "numpy.isfinite",
   "numpy.nan",
   "numpy.pi",
   "numpy.sqrt",
   "plasmapy.atomic.Particle",
   "plasmapy.atomic.particle_input",
   "plasmapy.atomic.particle_mass",
   "plasmapy.utils.decorators.check_relativistic",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.parameters.upper_hybrid_frequency": {
  "lineno": 1392,
  "symbols_in_volume": [
   "astropy.units.Hz",
   "astropy.units.T",
   "astropy.units.cy",
   "astropy.units.m",
   "astropy.units.rad",
   "astropy.units.s",
   "numpy.sqrt",
   "plasmapy.utils.decorators.angular_freq_to_hz",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.quantum": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.constants.si.e",
   "plasmapy.optional_deps.lmfit_import_error"
  ],
  "type": "module"
 },
 "plasmapy.formulary.quantum.Fermi_energy": {
  "lineno": 185,
  "symbols_in_volume": [
   "astropy.constants.si.hbar",
   "astropy.constants.si.m_e",
   "astropy.units.J",
   "astropy.units.m",
   "numpy.pi",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.quantum.Thomas_Fermi_length": {
  "lineno": 245,
  "symbols_in_volume": [
   "astropy.constants.si.e",
   "astropy.constants.si.eps0",
   "astropy.units.m",
   "numpy.sqrt",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.quantum.Wigner_Seitz_radius": {
  "lineno": 315,
  "symbols_in_volume": [
   "astropy.units.m",
   "numpy.pi",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.quantum._chemical_potential_interp": {
  "lineno": 492,
  "symbols_in_volume": [
   "astropy.constants.si.k_B",
   "astropy.units.dimensionless_unscaled",
   "numpy.log",
   "numpy.pi",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "plasmapy.formulary.quantum.chemical_potential": {
  "lineno": 380,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.temperature_energy",
   "lmfit.Parameters",
   "lmfit.minimize",
   "numpy.array",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.quantum.chemical_potential.residual": {
  "lineno": 468,
  "symbols_in_volume": [
   "numpy.float",
   "plasmapy.formulary.mathematics.Fermi_integral"
  ],
  "type": "function"
 },
 "plasmapy.formulary.quantum.deBroglie_wavelength": {
  "lineno": 33,
  "symbols_in_volume": [
   "astropy.constants.si.c",
   "astropy.constants.si.h",
   "astropy.units.Quantity",
   "astropy.units.UnitConversionError",
   "astropy.units.kg",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.abs",
   "numpy.any",
   "numpy.inf",
   "numpy.ones",
   "plasmapy.atomic.particle_mass",
   "plasmapy.formulary.relativity.Lorentz_factor",
   "plasmapy.utils.RelativityError",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.quantum.thermal_deBroglie_wavelength": {
  "lineno": 133,
  "symbols_in_volume": [
   "astropy.constants.si.h",
   "astropy.constants.si.k_B",
   "astropy.constants.si.m_e",
   "astropy.units.K",
   "astropy.units.m",
   "astropy.units.temperature_energy",
   "numpy.pi",
   "numpy.sqrt",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.relativity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.formulary.relativity.Lorentz_factor": {
  "lineno": 17,
  "symbols_in_volume": [
   "astropy.constants.c",
   "astropy.constants.c.value",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.abs",
   "numpy.all",
   "numpy.inf",
   "numpy.zeros_like",
   "plasmapy.utils.RelativityError",
   "plasmapy.utils.decorators.validate_quantities"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.formulary.tests.test_Fermi_integral": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.formulary.tests.test_Fermi_integral.Test_Fermi_integral": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_Fermi_integral.Test_Fermi_integral.setup_class": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_Fermi_integral.Test_Fermi_integral.test_array": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.allclose",
   "plasmapy.formulary.mathematics.Fermi_integral"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_Fermi_integral.Test_Fermi_integral.test_fail1": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.isclose",
   "plasmapy.formulary.mathematics.Fermi_integral"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_Fermi_integral.Test_Fermi_integral.test_invalid_type": {
  "lineno": 61,
  "symbols_in_volume": [
   "plasmapy.formulary.mathematics.Fermi_integral",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_Fermi_integral.Test_Fermi_integral.test_known1": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.isclose",
   "plasmapy.formulary.mathematics.Fermi_integral"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm": {
  "lineno": 25,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.cm",
   "numpy.array"
  ],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.setup_class": {
  "lineno": 26,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.cm",
   "astropy.units.eV",
   "numpy.array"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_Chen_Q_machine": {
  "lineno": 128,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.eV",
   "astropy.units.m",
   "astropy.units.temperature_energy",
   "numpy.isclose",
   "numpy.log",
   "plasmapy.formulary.braginskii.Coulomb_logarithm"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_Chen_fusion": {
  "lineno": 194,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.eV",
   "astropy.units.m",
   "astropy.units.temperature_energy",
   "numpy.isclose",
   "numpy.log",
   "plasmapy.formulary.braginskii.Coulomb_logarithm",
   "plasmapy.utils.exceptions.RelativityWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_Chen_lab": {
  "lineno": 150,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.eV",
   "astropy.units.m",
   "astropy.units.temperature_energy",
   "numpy.isclose",
   "numpy.log",
   "plasmapy.formulary.braginskii.Coulomb_logarithm"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_Chen_laser": {
  "lineno": 217,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.eV",
   "astropy.units.m",
   "astropy.units.temperature_energy",
   "numpy.isclose",
   "numpy.log",
   "plasmapy.formulary.braginskii.Coulomb_logarithm",
   "plasmapy.utils.exceptions.RelativityWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_Chen_torus": {
  "lineno": 172,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.eV",
   "astropy.units.m",
   "astropy.units.temperature_energy",
   "numpy.isclose",
   "numpy.log",
   "plasmapy.formulary.braginskii.Coulomb_logarithm"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS1": {
  "lineno": 240,
  "symbols_in_volume": [
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.braginskii.Coulomb_logarithm",
   "plasmapy.utils.exceptions.PhysicsWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS1_negative": {
  "lineno": 260,
  "symbols_in_volume": [
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.nan",
   "plasmapy.formulary.braginskii.Coulomb_logarithm",
   "plasmapy.utils.exceptions.CouplingWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS2": {
  "lineno": 274,
  "symbols_in_volume": [
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.braginskii.Coulomb_logarithm",
   "plasmapy.utils.exceptions.PhysicsWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS2_negative": {
  "lineno": 294,
  "symbols_in_volume": [
   "astropy.units.m",
   "astropy.units.s",
   "numpy.nan",
   "plasmapy.formulary.braginskii.Coulomb_logarithm",
   "plasmapy.utils.exceptions.CouplingWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS2_zmean_error": {
  "lineno": 498,
  "symbols_in_volume": [
   "plasmapy.formulary.braginskii.Coulomb_logarithm",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS3": {
  "lineno": 308,
  "symbols_in_volume": [
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.braginskii.Coulomb_logarithm",
   "plasmapy.utils.exceptions.PhysicsWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS3_negative": {
  "lineno": 328,
  "symbols_in_volume": [
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.braginskii.Coulomb_logarithm",
   "plasmapy.utils.exceptions.PhysicsWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS3_non_scalar_density": {
  "lineno": 350,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.cm",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.braginskii.Coulomb_logarithm",
   "plasmapy.utils.exceptions.PhysicsWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS4": {
  "lineno": 372,
  "symbols_in_volume": [
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.braginskii.Coulomb_logarithm",
   "plasmapy.utils.exceptions.PhysicsWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS4_negative": {
  "lineno": 392,
  "symbols_in_volume": [
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.braginskii.Coulomb_logarithm",
   "plasmapy.utils.exceptions.PhysicsWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS5": {
  "lineno": 414,
  "symbols_in_volume": [
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.braginskii.Coulomb_logarithm",
   "plasmapy.utils.exceptions.PhysicsWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS5_negative": {
  "lineno": 434,
  "symbols_in_volume": [
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.braginskii.Coulomb_logarithm",
   "plasmapy.utils.exceptions.PhysicsWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS5_zmean_error": {
  "lineno": 509,
  "symbols_in_volume": [
   "plasmapy.formulary.braginskii.Coulomb_logarithm",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS6": {
  "lineno": 456,
  "symbols_in_volume": [
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.braginskii.Coulomb_logarithm",
   "plasmapy.utils.exceptions.PhysicsWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS6_negative": {
  "lineno": 476,
  "symbols_in_volume": [
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.braginskii.Coulomb_logarithm",
   "plasmapy.utils.exceptions.PhysicsWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS6_zmean_error": {
  "lineno": 520,
  "symbols_in_volume": [
   "plasmapy.formulary.braginskii.Coulomb_logarithm",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_handle_V_arraysizes": {
  "lineno": 101,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.array",
   "numpy.nan",
   "plasmapy.formulary.braginskii.Coulomb_logarithm",
   "plasmapy.utils.exceptions.CouplingWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_handle_invalid_V": {
  "lineno": 72,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.nan",
   "plasmapy.formulary.braginskii.Coulomb_logarithm",
   "plasmapy.utils.exceptions.CouplingWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_handle_nparrays": {
  "lineno": 51,
  "symbols_in_volume": [
   "plasmapy.formulary.braginskii.Coulomb_logarithm",
   "plasmapy.utils.pytest_helpers.assert_can_handle_nparray",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_handle_zero_V": {
  "lineno": 92,
  "symbols_in_volume": [
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "plasmapy.formulary.braginskii.Coulomb_logarithm",
   "plasmapy.utils.exceptions.PhysicsError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_invalid_particle_error": {
  "lineno": 557,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.m",
   "plasmapy.formulary.braginskii.Coulomb_logarithm",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_relativity_error": {
  "lineno": 536,
  "symbols_in_volume": [
   "astropy.constants.c",
   "astropy.units.K",
   "astropy.units.m",
   "plasmapy.formulary.braginskii.Coulomb_logarithm",
   "plasmapy.utils.exceptions.RelativityError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_relativity_warn": {
  "lineno": 531,
  "symbols_in_volume": [
   "astropy.constants.c",
   "astropy.units.K",
   "astropy.units.m",
   "plasmapy.formulary.braginskii.Coulomb_logarithm",
   "plasmapy.utils.exceptions.RelativityWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_single_particle_error": {
  "lineno": 550,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.m",
   "plasmapy.formulary.braginskii.Coulomb_logarithm",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_symmetry": {
  "lineno": 122,
  "symbols_in_volume": [
   "plasmapy.formulary.braginskii.Coulomb_logarithm",
   "plasmapy.utils.exceptions.CouplingWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_unit_conversion_error": {
  "lineno": 541,
  "symbols_in_volume": [
   "astropy.units.UnitTypeError",
   "astropy.units.g",
   "astropy.units.m",
   "astropy.units.s",
   "plasmapy.formulary.braginskii.Coulomb_logarithm",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_unknown_method": {
  "lineno": 64,
  "symbols_in_volume": [
   "plasmapy.formulary.braginskii.Coulomb_logarithm",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Knudsen_number": {
  "lineno": 1117,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Knudsen_number.setup_class": {
  "lineno": 1118,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.cm",
   "astropy.units.km",
   "astropy.units.nm",
   "astropy.units.s"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Knudsen_number.test_fail1": {
  "lineno": 1155,
  "symbols_in_volume": [
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.collisions.Knudsen_number",
   "plasmapy.utils.exceptions.PhysicsWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Knudsen_number.test_handle_nparrays": {
  "lineno": 1177,
  "symbols_in_volume": [
   "plasmapy.formulary.collisions.Knudsen_number",
   "plasmapy.utils.pytest_helpers.assert_can_handle_nparray",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Knudsen_number.test_known1": {
  "lineno": 1135,
  "symbols_in_volume": [
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.collisions.Knudsen_number",
   "plasmapy.utils.exceptions.PhysicsWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Knudsen_number.test_symmetry": {
  "lineno": 1129,
  "symbols_in_volume": [
   "plasmapy.formulary.collisions.Knudsen_number",
   "plasmapy.utils.exceptions.CouplingWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Spitzer_resistivity": {
  "lineno": 955,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Spitzer_resistivity.setup_class": {
  "lineno": 956,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.cm",
   "astropy.units.km",
   "astropy.units.s"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Spitzer_resistivity.test_fail1": {
  "lineno": 990,
  "symbols_in_volume": [
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.collisions.Spitzer_resistivity"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Spitzer_resistivity.test_handle_nparrays": {
  "lineno": 1027,
  "symbols_in_volume": [
   "plasmapy.formulary.collisions.Spitzer_resistivity",
   "plasmapy.utils.pytest_helpers.assert_can_handle_nparray",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Spitzer_resistivity.test_known1": {
  "lineno": 972,
  "symbols_in_volume": [
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.collisions.Spitzer_resistivity"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Spitzer_resistivity.test_symmetry": {
  "lineno": 967,
  "symbols_in_volume": [
   "plasmapy.formulary.collisions.Spitzer_resistivity"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Spitzer_resistivity.test_zmean": {
  "lineno": 1010,
  "symbols_in_volume": [
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.collisions.Spitzer_resistivity"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_collision_frequency": {
  "lineno": 726,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_collisions.Test_collision_frequency.setup_class": {
  "lineno": 727,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.cm",
   "astropy.units.km",
   "astropy.units.s"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_collision_frequency.test_electrons": {
  "lineno": 797,
  "symbols_in_volume": [
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.collisions.collision_frequency",
   "plasmapy.utils.exceptions.PhysicsWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_collision_frequency.test_fail1": {
  "lineno": 767,
  "symbols_in_volume": [
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.collisions.collision_frequency",
   "plasmapy.utils.exceptions.PhysicsWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_collision_frequency.test_handle_nparrays": {
  "lineno": 788,
  "symbols_in_volume": [
   "plasmapy.formulary.collisions.collision_frequency",
   "plasmapy.utils.pytest_helpers.assert_can_handle_nparray",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_collision_frequency.test_known1": {
  "lineno": 748,
  "symbols_in_volume": [
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.collisions.collision_frequency",
   "plasmapy.utils.exceptions.PhysicsWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_collision_frequency.test_protons": {
  "lineno": 816,
  "symbols_in_volume": [
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.collisions.collision_frequency",
   "plasmapy.utils.exceptions.PhysicsWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_collision_frequency.test_symmetry": {
  "lineno": 742,
  "symbols_in_volume": [
   "plasmapy.formulary.collisions.collision_frequency",
   "plasmapy.utils.exceptions.CouplingWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_collision_frequency.test_zmean": {
  "lineno": 835,
  "symbols_in_volume": [
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.collisions.collision_frequency",
   "plasmapy.utils.exceptions.PhysicsWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_coupling_parameter": {
  "lineno": 1184,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_collisions.Test_coupling_parameter.setup_class": {
  "lineno": 1185,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.cm",
   "astropy.units.km",
   "astropy.units.s"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_coupling_parameter.test_fail1": {
  "lineno": 1220,
  "symbols_in_volume": [
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.collisions.coupling_parameter"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_coupling_parameter.test_handle_nparrays": {
  "lineno": 1259,
  "symbols_in_volume": [
   "plasmapy.formulary.collisions.coupling_parameter",
   "plasmapy.utils.pytest_helpers.assert_can_handle_nparray",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_coupling_parameter.test_known1": {
  "lineno": 1202,
  "symbols_in_volume": [
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.collisions.coupling_parameter"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_coupling_parameter.test_kwarg_method_error": {
  "lineno": 1286,
  "symbols_in_volume": [
   "plasmapy.formulary.collisions.coupling_parameter",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_coupling_parameter.test_quantum": {
  "lineno": 1269,
  "symbols_in_volume": [
   "numpy.isclose",
   "plasmapy.formulary.collisions.coupling_parameter",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_coupling_parameter.test_symmetry": {
  "lineno": 1197,
  "symbols_in_volume": [
   "plasmapy.formulary.collisions.coupling_parameter"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_coupling_parameter.test_zmean": {
  "lineno": 1240,
  "symbols_in_volume": [
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.collisions.coupling_parameter"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_fundamental_electron_collision_freq": {
  "lineno": 855,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_collisions.Test_fundamental_electron_collision_freq.setup_class": {
  "lineno": 856,
  "symbols_in_volume": [
   "astropy.units.cm",
   "astropy.units.eV",
   "numpy.array"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_fundamental_electron_collision_freq.test_handle_nparrays": {
  "lineno": 865,
  "symbols_in_volume": [
   "plasmapy.formulary.collisions.fundamental_electron_collision_freq",
   "plasmapy.utils.pytest_helpers.assert_can_handle_nparray",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_fundamental_ion_collision_freq": {
  "lineno": 873,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_collisions.Test_fundamental_ion_collision_freq.setup_class": {
  "lineno": 874,
  "symbols_in_volume": [
   "astropy.units.cm",
   "astropy.units.eV",
   "numpy.array"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_fundamental_ion_collision_freq.test_handle_nparrays": {
  "lineno": 883,
  "symbols_in_volume": [
   "plasmapy.formulary.collisions.fundamental_ion_collision_freq",
   "plasmapy.utils.pytest_helpers.assert_can_handle_nparray",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_impact_parameter": {
  "lineno": 632,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_collisions.Test_impact_parameter.setup_class": {
  "lineno": 633,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.cm",
   "astropy.units.eV",
   "astropy.units.km",
   "astropy.units.s",
   "numpy.array"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_impact_parameter.test_bad_method": {
  "lineno": 692,
  "symbols_in_volume": [
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.nan",
   "plasmapy.formulary.collisions.impact_parameter",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_impact_parameter.test_extend_scalar_bmin": {
  "lineno": 715,
  "symbols_in_volume": [
   "astropy.units.eV",
   "plasmapy.formulary.collisions.impact_parameter"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_impact_parameter.test_fail1": {
  "lineno": 670,
  "symbols_in_volume": [
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.allclose",
   "numpy.nan",
   "plasmapy.formulary.collisions.impact_parameter"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_impact_parameter.test_handle_nparrays": {
  "lineno": 702,
  "symbols_in_volume": [
   "plasmapy.formulary.collisions.impact_parameter",
   "plasmapy.utils.pytest_helpers.assert_can_handle_nparray",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_impact_parameter.test_known1": {
  "lineno": 650,
  "symbols_in_volume": [
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.allclose",
   "numpy.nan",
   "plasmapy.formulary.collisions.impact_parameter"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_impact_parameter.test_symmetry": {
  "lineno": 645,
  "symbols_in_volume": [
   "plasmapy.formulary.collisions.impact_parameter"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_impact_parameter_perp": {
  "lineno": 571,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.eV",
   "astropy.units.m",
   "numpy.isclose",
   "plasmapy.formulary.braginskii.Coulomb_logarithm"
  ],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_collisions.Test_impact_parameter_perp.setup_class": {
  "lineno": 572,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.km",
   "astropy.units.s"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_impact_parameter_perp.test_fail1": {
  "lineno": 601,
  "symbols_in_volume": [
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.collisions.impact_parameter_perp"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_impact_parameter_perp.test_handle_nparrays": {
  "lineno": 618,
  "symbols_in_volume": [
   "plasmapy.formulary.collisions.impact_parameter_perp",
   "plasmapy.utils.pytest_helpers.assert_can_handle_nparray",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_impact_parameter_perp.test_known1": {
  "lineno": 585,
  "symbols_in_volume": [
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.collisions.impact_parameter_perp"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_impact_parameter_perp.test_symmetry": {
  "lineno": 580,
  "symbols_in_volume": [
   "plasmapy.formulary.collisions.impact_parameter_perp"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_mean_free_path": {
  "lineno": 891,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_collisions.Test_mean_free_path.setup_class": {
  "lineno": 892,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.cm",
   "astropy.units.km",
   "astropy.units.s"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_mean_free_path.test_fail1": {
  "lineno": 927,
  "symbols_in_volume": [
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.collisions.mean_free_path",
   "plasmapy.utils.exceptions.PhysicsWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_mean_free_path.test_handle_nparrays": {
  "lineno": 948,
  "symbols_in_volume": [
   "plasmapy.formulary.collisions.mean_free_path",
   "plasmapy.utils.pytest_helpers.assert_can_handle_nparray",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_mean_free_path.test_known1": {
  "lineno": 908,
  "symbols_in_volume": [
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.collisions.mean_free_path",
   "plasmapy.utils.exceptions.PhysicsWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_mean_free_path.test_symmetry": {
  "lineno": 902,
  "symbols_in_volume": [
   "plasmapy.formulary.collisions.mean_free_path",
   "plasmapy.utils.exceptions.CouplingWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_mobility": {
  "lineno": 1034,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_collisions.Test_mobility.setup_class": {
  "lineno": 1035,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.cm",
   "astropy.units.km",
   "astropy.units.s"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_mobility.test_fail1": {
  "lineno": 1071,
  "symbols_in_volume": [
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.collisions.mobility",
   "plasmapy.utils.exceptions.PhysicsWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_mobility.test_handle_nparrays": {
  "lineno": 1110,
  "symbols_in_volume": [
   "plasmapy.formulary.collisions.mobility",
   "plasmapy.utils.pytest_helpers.assert_can_handle_nparray",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_mobility.test_known1": {
  "lineno": 1052,
  "symbols_in_volume": [
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.collisions.mobility",
   "plasmapy.utils.exceptions.PhysicsWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_mobility.test_symmetry": {
  "lineno": 1046,
  "symbols_in_volume": [
   "plasmapy.formulary.collisions.mobility",
   "plasmapy.utils.exceptions.CouplingWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_mobility.test_zmean": {
  "lineno": 1092,
  "symbols_in_volume": [
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.collisions.mobility",
   "plasmapy.utils.exceptions.PhysicsWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dielectric": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.units.T",
   "astropy.units.m",
   "astropy.units.rad",
   "astropy.units.s"
  ],
  "type": "module"
 },
 "plasmapy.formulary.tests.test_dielectric.Test_ColdPlasmaPermittivity": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_dielectric.Test_ColdPlasmaPermittivity.test_SD_to_LR_relationships": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dielectric.Test_ColdPlasmaPermittivity.test_numpy_array_workflow": {
  "lineno": 95,
  "symbols_in_volume": [
   "astropy.units.T",
   "astropy.units.m",
   "astropy.units.rad",
   "astropy.units.s",
   "numpy.logspace",
   "numpy.pi"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dielectric.Test_ColdPlasmaPermittivity.test_proton_electron_plasma": {
  "lineno": 27,
  "symbols_in_volume": [
   "astropy.units.T",
   "astropy.units.m",
   "astropy.units.rad",
   "astropy.units.s",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dielectric.Test_ColdPlasmaPermittivity.test_three_species": {
  "lineno": 68,
  "symbols_in_volume": [
   "astropy.units.m",
   "numpy.array",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dielectric.Test_permittivity_1D_Maxwellian": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_dielectric.Test_permittivity_1D_Maxwellian.setup_class": {
  "lineno": 110,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.cm",
   "astropy.units.dimensionless_unscaled",
   "astropy.units.rad",
   "astropy.units.s",
   "numpy.pi"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dielectric.Test_permittivity_1D_Maxwellian.test_fail1": {
  "lineno": 143,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dielectric.Test_permittivity_1D_Maxwellian.test_known1": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dimensionless": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.T",
   "astropy.units.m"
  ],
  "type": "module"
 },
 "plasmapy.formulary.tests.test_dimensionless.test_beta_dimensionless": {
  "lineno": 11,
  "symbols_in_volume": [
   "plasmapy.formulary.dimensionless.beta"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dimensionless.test_beta_nan": {
  "lineno": 21,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.T",
   "astropy.units.cm",
   "astropy.units.dimensionless_unscaled",
   "numpy.array",
   "numpy.isnan",
   "numpy.nan",
   "plasmapy.formulary.dimensionless.beta"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dimensionless.test_quantum_theta_dimensionless": {
  "lineno": 16,
  "symbols_in_volume": [
   "plasmapy.formulary.dimensionless.quantum_theta"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dispersion": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.units.UnitsError",
   "astropy.units.dimensionless_unscaled",
   "astropy.units.m",
   "numpy.inf",
   "numpy.nan",
   "numpy.pi",
   "numpy.sqrt",
   "plasmapy.formulary.dispersionfunction.plasma_dispersion_func",
   "plasmapy.formulary.dispersionfunction.plasma_dispersion_func_deriv"
  ],
  "type": "module"
 },
 "plasmapy.formulary.tests.test_dispersion.test_plasma_dispersion_deriv_errors": {
  "lineno": 194,
  "symbols_in_volume": [
   "plasmapy.formulary.dispersionfunction.plasma_dispersion_func_deriv",
   "pytest.fail",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dispersion.test_plasma_dispersion_func": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.isclose",
   "numpy.pi",
   "numpy.sqrt",
   "plasmapy.formulary.dispersionfunction.plasma_dispersion_func",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dispersion.test_plasma_dispersion_func_deriv": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.isclose",
   "plasmapy.formulary.dispersionfunction.plasma_dispersion_func",
   "plasmapy.formulary.dispersionfunction.plasma_dispersion_func_deriv",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dispersion.test_plasma_dispersion_func_errors": {
  "lineno": 183,
  "symbols_in_volume": [
   "plasmapy.formulary.dispersionfunction.plasma_dispersion_func",
   "pytest.fail",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dispersion.test_plasma_dispersion_func_power_series_expansion": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "numpy.complex128",
   "numpy.pi",
   "numpy.sqrt",
   "numpy.zeros_like",
   "plasmapy.formulary.dispersionfunction.plasma_dispersion_func",
   "scipy.special.gamma"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dispersion.test_plasma_dispersion_func_roots": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.complex128",
   "numpy.isclose",
   "plasmapy.formulary.dispersionfunction.plasma_dispersion_func"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_1D": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_1D.setup_class": {
  "lineno": 24,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.arange"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_1D.test_max_drift": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_1D.test_max_noDrift": {
  "lineno": 44,
  "symbols_in_volume": [
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_1D.test_norm": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.isclose",
   "scipy.integrate.quad"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_1D.test_std": {
  "lineno": 98,
  "symbols_in_volume": [
   "astropy.constants.k_B.to",
   "astropy.constants.m_e.to",
   "astropy.units.K",
   "numpy.isclose",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_1D.test_unitless_no_vTh": {
  "lineno": 140,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.temperature_energy",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_1D.test_unitless_vTh": {
  "lineno": 158,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.temperature_energy",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_1D.test_units_no_vTh": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_1D.test_units_vTh": {
  "lineno": 124,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_1D.test_value_drift_units": {
  "lineno": 194,
  "symbols_in_volume": [
   "numpy.isclose",
   "numpy.pi.si.value"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_1D.test_zero_drift_units": {
  "lineno": 177,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_1D": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_1D.setup_class": {
  "lineno": 214,
  "symbols_in_volume": [
   "astropy.units.eV",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.pi"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_1D.test_norm": {
  "lineno": 229,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.isclose",
   "scipy.integrate.trapz"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_1D.test_unitless_no_vTh": {
  "lineno": 274,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.temperature_energy",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_1D.test_unitless_vTh": {
  "lineno": 292,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.temperature_energy",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_1D.test_units_no_vTh": {
  "lineno": 243,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_1D.test_units_vTh": {
  "lineno": 258,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_1D.test_value_drift_units": {
  "lineno": 328,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_1D.test_zero_drift_units": {
  "lineno": 311,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_2D": {
  "lineno": 509,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_2D.setup_class": {
  "lineno": 510,
  "symbols_in_volume": [
   "astropy.units.eV",
   "astropy.units.m",
   "astropy.units.s"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_2D.test_norm": {
  "lineno": 524,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.isclose",
   "scipy.integrate.trapz"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_2D.test_unitless_no_vTh": {
  "lineno": 569,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.temperature_energy",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_2D.test_unitless_vTh": {
  "lineno": 587,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.temperature_energy",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_2D.test_units_no_vTh": {
  "lineno": 538,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_2D.test_units_vTh": {
  "lineno": 553,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_2D.test_value_drift_units": {
  "lineno": 623,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_2D.test_zero_drift_units": {
  "lineno": 606,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_3D": {
  "lineno": 819,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_3D.setup_class": {
  "lineno": 820,
  "symbols_in_volume": [
   "astropy.units.eV",
   "astropy.units.m",
   "astropy.units.s"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_3D.test_norm": {
  "lineno": 834,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.isclose",
   "scipy.integrate.trapz"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_3D.test_unitless_no_vTh": {
  "lineno": 879,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.temperature_energy",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_3D.test_unitless_vTh": {
  "lineno": 897,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.temperature_energy",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_3D.test_units_no_vTh": {
  "lineno": 848,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_3D.test_units_vTh": {
  "lineno": 863,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_3D.test_value_drift_units": {
  "lineno": 933,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_3D.test_zero_drift_units": {
  "lineno": 916,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_2D": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_2D.setup_class": {
  "lineno": 347,
  "symbols_in_volume": [
   "astropy.units.eV",
   "astropy.units.m",
   "astropy.units.s"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_2D.test_norm": {
  "lineno": 364,
  "symbols_in_volume": [
   "numpy.isclose",
   "scipy.integrate.dblquad"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_2D.test_unitless_no_vTh": {
  "lineno": 430,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.temperature_energy",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_2D.test_unitless_vTh": {
  "lineno": 449,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.temperature_energy",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_2D.test_units_no_vTh": {
  "lineno": 397,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_2D.test_units_vTh": {
  "lineno": 413,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_2D.test_value_drift_units": {
  "lineno": 488,
  "symbols_in_volume": [
   "numpy.isclose",
   "numpy.pi.si.value"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_2D.test_zero_drift_units": {
  "lineno": 469,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_3D": {
  "lineno": 642,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_3D.setup_class": {
  "lineno": 643,
  "symbols_in_volume": [
   "astropy.units.eV",
   "astropy.units.m",
   "astropy.units.s"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_3D.test_norm": {
  "lineno": 663,
  "symbols_in_volume": [
   "numpy.isclose",
   "scipy.integrate.tplquad"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_3D.test_unitless_no_vTh": {
  "lineno": 734,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.temperature_energy",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_3D.test_unitless_vTh": {
  "lineno": 754,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.temperature_energy",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_3D.test_units_no_vTh": {
  "lineno": 699,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_3D.test_units_vTh": {
  "lineno": 716,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_3D.test_value_drift_units": {
  "lineno": 796,
  "symbols_in_volume": [
   "numpy.isclose",
   "numpy.pi.si.value"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_3D.test_zero_drift_units": {
  "lineno": 775,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_1D": {
  "lineno": 954,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_1D.setup_class": {
  "lineno": 955,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.arange"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_1D.test_invalid_kappa": {
  "lineno": 977,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_1D.test_max_drift": {
  "lineno": 1001,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_1D.test_max_noDrift": {
  "lineno": 989,
  "symbols_in_volume": [
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_1D.test_maxwellian_limit": {
  "lineno": 1013,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_1D.test_norm": {
  "lineno": 1020,
  "symbols_in_volume": [
   "numpy.isclose",
   "scipy.integrate.quad"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_1D.test_std": {
  "lineno": 1051,
  "symbols_in_volume": [
   "astropy.constants.k_B.to",
   "astropy.constants.m_e.to",
   "astropy.units.K",
   "numpy.isclose",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_1D.test_unitless_no_vTh": {
  "lineno": 1095,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.temperature_energy",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_1D.test_unitless_vTh": {
  "lineno": 1114,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.temperature_energy",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_1D.test_units_no_vTh": {
  "lineno": 1062,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_1D.test_units_vTh": {
  "lineno": 1078,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_1D.test_value_drift_units": {
  "lineno": 1152,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_1D.test_zero_drift_units": {
  "lineno": 1134,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_3D": {
  "lineno": 1172,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_3D.setup_class": {
  "lineno": 1173,
  "symbols_in_volume": [
   "astropy.units.eV",
   "astropy.units.m",
   "astropy.units.s"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_3D.test_invalid_kappa": {
  "lineno": 1195,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_3D.test_norm": {
  "lineno": 1244,
  "symbols_in_volume": [
   "numpy.isclose",
   "scipy.integrate.tplquad"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_3D.test_unitless_no_vTh": {
  "lineno": 1318,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.temperature_energy",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_3D.test_unitless_vTh": {
  "lineno": 1339,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.temperature_energy",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_3D.test_units_no_vTh": {
  "lineno": 1281,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_3D.test_units_vTh": {
  "lineno": 1299,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_3D.test_value_drift_units": {
  "lineno": 1383,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_3D.test_zero_drift_units": {
  "lineno": 1361,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_drifts": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.formulary.tests.test_drifts.Test_ExB_drift": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_drifts.Test_ExB_drift.test_E_x_B_1d_arrays": {
  "lineno": 9,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.Quantity",
   "astropy.units.T",
   "astropy.units.V",
   "astropy.units.m",
   "astropy.units.s",
   "plasmapy.formulary.drifts.ExB_drift"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_drifts.Test_ExB_drift.test_ExB_2d_array": {
  "lineno": 15,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.Quantity",
   "astropy.units.T",
   "astropy.units.V",
   "astropy.units.m",
   "astropy.units.s",
   "plasmapy.formulary.drifts.ExB_drift"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_drifts.Test_ExB_drift.test_ExB_3d_array": {
  "lineno": 40,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.Quantity",
   "astropy.units.T",
   "astropy.units.V",
   "astropy.units.m",
   "astropy.units.s",
   "plasmapy.formulary.drifts.ExB_drift"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_drifts.Test_ExB_drift.test_nonsensical_units": {
  "lineno": 29,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.UnitTypeError",
   "astropy.units.kg",
   "astropy.units.mm",
   "plasmapy.formulary.drifts.ExB_drift",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_drifts.Test_force_drift": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_drifts.Test_force_drift.test_force_B_2d_array": {
  "lineno": 57,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.C",
   "astropy.units.N",
   "astropy.units.Quantity",
   "astropy.units.T",
   "astropy.units.m",
   "astropy.units.s",
   "plasmapy.formulary.drifts.force_drift"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_drifts.Test_force_drift.test_force_B_3d_array": {
  "lineno": 72,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.C",
   "astropy.units.N",
   "astropy.units.Quantity",
   "astropy.units.T",
   "astropy.units.m",
   "astropy.units.s",
   "plasmapy.formulary.drifts.force_drift"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_drifts.Test_force_drift.test_force_x_B_1d_arrays": {
  "lineno": 50,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.C",
   "astropy.units.N",
   "astropy.units.Quantity",
   "astropy.units.T",
   "astropy.units.m",
   "astropy.units.s",
   "plasmapy.formulary.drifts.force_drift"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_drifts.Test_force_drift.test_nonsensical_units": {
  "lineno": 81,
  "symbols_in_volume": [
   "astropy.units.C",
   "astropy.units.Quantity",
   "astropy.units.UnitTypeError",
   "astropy.units.kg",
   "astropy.units.mm",
   "plasmapy.formulary.drifts.force_drift",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.constants.mu0",
   "numpy.pi"
  ],
  "type": "module"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_CircularWire": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_CircularWire.setup_method": {
  "lineno": 121,
  "symbols_in_volume": [
   "astropy.units.A",
   "astropy.units.m",
   "numpy.array"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_CircularWire.test_negative_radius": {
  "lineno": 128,
  "symbols_in_volume": [
   "astropy.units.m",
   "plasmapy.formulary.magnetostatics.CircularWire",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_CircularWire.test_repr": {
  "lineno": 149,
  "symbols_in_volume": [
   "plasmapy.formulary.magnetostatics.CircularWire"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_CircularWire.test_value1": {
  "lineno": 133,
  "symbols_in_volume": [
   "astropy.units.T",
   "numpy.all",
   "numpy.array",
   "numpy.isclose",
   "numpy.pi",
   "plasmapy.formulary.magnetostatics.CircularWire"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_CircularWire.test_value2": {
  "lineno": 141,
  "symbols_in_volume": [
   "astropy.units.T",
   "numpy.all",
   "numpy.array",
   "numpy.isclose",
   "numpy.pi",
   "plasmapy.formulary.magnetostatics.CircularWire"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_FiniteStraightWire": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_FiniteStraightWire.setup_method": {
  "lineno": 75,
  "symbols_in_volume": [
   "astropy.units.A",
   "astropy.units.m",
   "numpy.array"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_FiniteStraightWire.test_repr": {
  "lineno": 93,
  "symbols_in_volume": [
   "plasmapy.formulary.magnetostatics.FiniteStraightWire"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_FiniteStraightWire.test_same_point": {
  "lineno": 80,
  "symbols_in_volume": [
   "plasmapy.formulary.magnetostatics.FiniteStraightWire",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_FiniteStraightWire.test_value1": {
  "lineno": 85,
  "symbols_in_volume": [
   "astropy.units.T",
   "numpy.all",
   "numpy.array",
   "numpy.isclose",
   "numpy.sqrt",
   "plasmapy.formulary.magnetostatics.FiniteStraightWire"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_GeneralWire": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_GeneralWire.setup_method": {
  "lineno": 37,
  "symbols_in_volume": [
   "astropy.units.A",
   "astropy.units.m",
   "numpy.array",
   "plasmapy.formulary.magnetostatics.CircularWire",
   "plasmapy.formulary.magnetostatics.FiniteStraightWire"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_GeneralWire.test_close_cw": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_GeneralWire.test_close_fw": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_GeneralWire.test_not_callable": {
  "lineno": 43,
  "symbols_in_volume": [
   "astropy.units.A",
   "plasmapy.formulary.magnetostatics.GeneralWire",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_GeneralWire.test_value_error": {
  "lineno": 68,
  "symbols_in_volume": [
   "astropy.units.A",
   "plasmapy.formulary.magnetostatics.GeneralWire",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_InfiniteStraightWire": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_InfiniteStraightWire.setup_method": {
  "lineno": 100,
  "symbols_in_volume": [
   "astropy.units.A",
   "astropy.units.m",
   "numpy.array"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_InfiniteStraightWire.test_repr": {
  "lineno": 113,
  "symbols_in_volume": [
   "plasmapy.formulary.magnetostatics.InfiniteStraightWire"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_InfiniteStraightWire.test_value1": {
  "lineno": 105,
  "symbols_in_volume": [
   "astropy.units.T",
   "numpy.all",
   "numpy.array",
   "numpy.isclose",
   "plasmapy.formulary.magnetostatics.InfiniteStraightWire"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_MagneticDipole": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_MagneticDipole.setup_method": {
  "lineno": 15,
  "symbols_in_volume": [
   "astropy.units.A",
   "astropy.units.m",
   "numpy.array"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_MagneticDipole.test_value1": {
  "lineno": 19,
  "symbols_in_volume": [
   "astropy.units.T",
   "numpy.all",
   "numpy.array",
   "numpy.isclose",
   "plasmapy.formulary.magnetostatics.MagneticDipole"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_MagneticDipole.test_value2": {
  "lineno": 27,
  "symbols_in_volume": [
   "astropy.units.T",
   "numpy.all",
   "numpy.array",
   "numpy.isclose",
   "plasmapy.formulary.magnetostatics.MagneticDipole"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.constants.m_e",
   "astropy.constants.m_p",
   "astropy.constants.m_p.to",
   "astropy.units.K",
   "astropy.units.T",
   "astropy.units.kg",
   "astropy.units.m",
   "astropy.units.s",
   "astropy.units.u",
   "numpy.array",
   "numpy.inf",
   "numpy.nan"
  ],
  "type": "module"
 },
 "plasmapy.formulary.tests.test_parameters.Test_gyroradius": {
  "lineno": 653,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_parameters.Test_gyroradius.test_all_valid_and_one_valid": {
  "lineno": 675,
  "symbols_in_volume": [
   "plasmapy.formulary.parameters.gyroradius",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_gyroradius.test_handle_mixed_Qarrays": {
  "lineno": 661,
  "symbols_in_volume": [
   "plasmapy.formulary.parameters.gyroradius"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_gyroradius.test_handle_numpy_array": {
  "lineno": 656,
  "symbols_in_volume": [
   "plasmapy.formulary.parameters.gyroradius"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_gyroradius.test_keeps_arguments_unchanged": {
  "lineno": 688,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.K",
   "astropy.units.Quantity",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.nan",
   "plasmapy.formulary.parameters.gyroradius"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_gyroradius.test_raise_two_valid_inputs": {
  "lineno": 668,
  "symbols_in_volume": [
   "plasmapy.formulary.parameters.gyroradius",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_gyroradius.test_scalar_and_nan_qarray": {
  "lineno": 682,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.isfinite",
   "plasmapy.formulary.parameters.gyroradius"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_kappa_thermal_speed": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_parameters.Test_kappa_thermal_speed.setup_class": {
  "lineno": 384,
  "symbols_in_volume": [
   "astropy.units.eV"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_kappa_thermal_speed.test_handle_nparrays": {
  "lineno": 466,
  "symbols_in_volume": [
   "plasmapy.formulary.parameters.kappa_thermal_speed",
   "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_kappa_thermal_speed.test_invalid_kappa": {
  "lineno": 395,
  "symbols_in_volume": [
   "plasmapy.formulary.parameters.kappa_thermal_speed",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_kappa_thermal_speed.test_invalid_method": {
  "lineno": 406,
  "symbols_in_volume": [
   "plasmapy.formulary.parameters.kappa_thermal_speed",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_kappa_thermal_speed.test_mean1": {
  "lineno": 450,
  "symbols_in_volume": [
   "numpy.isclose",
   "plasmapy.formulary.parameters.kappa_thermal_speed"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_kappa_thermal_speed.test_probable1": {
  "lineno": 418,
  "symbols_in_volume": [
   "numpy.isclose",
   "plasmapy.formulary.parameters.kappa_thermal_speed"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_kappa_thermal_speed.test_rms1": {
  "lineno": 434,
  "symbols_in_volume": [
   "numpy.isclose",
   "plasmapy.formulary.parameters.kappa_thermal_speed"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_mass_density": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_parameters.Test_mass_density.test_handle_nparrays": {
  "lineno": 76,
  "symbols_in_volume": [
   "plasmapy.formulary.parameters.mass_density",
   "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_mass_density.test_particleless": {
  "lineno": 68,
  "symbols_in_volume": [
   "astropy.units.m",
   "plasmapy.formulary.parameters.mass_density",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_mass_density.test_wrong_units": {
  "lineno": 72,
  "symbols_in_volume": [
   "astropy.units.J",
   "astropy.units.UnitTypeError",
   "plasmapy.formulary.parameters.mass_density",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.test_Alfven_speed": {
  "lineno": 85,
  "symbols_in_volume": [
   "astropy.constants.m_e",
   "astropy.constants.m_p",
   "astropy.constants.mu0",
   "astropy.units.A",
   "astropy.units.T",
   "astropy.units.UnitTypeError",
   "astropy.units.UnitsError",
   "astropy.units.UnitsWarning",
   "astropy.units.kg",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.array",
   "numpy.inf",
   "numpy.isclose",
   "numpy.isnan",
   "numpy.nan",
   "numpy.sqrt",
   "plasmapy.atomic.exceptions.InvalidParticleError",
   "plasmapy.formulary.parameters.Alfven_speed",
   "plasmapy.utils.exceptions.RelativityError",
   "plasmapy.utils.exceptions.RelativityWarning",
   "plasmapy.utils.pytest_helpers.assert_can_handle_nparray",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.test_Debye_length": {
  "lineno": 752,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.UnitTypeError",
   "astropy.units.UnitsWarning",
   "astropy.units.cm",
   "astropy.units.eV",
   "astropy.units.kg",
   "astropy.units.m",
   "numpy.array",
   "numpy.isclose",
   "plasmapy.formulary.parameters.Debye_length",
   "plasmapy.utils.pytest_helpers.assert_can_handle_nparray",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.test_Debye_number": {
  "lineno": 786,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.UnitTypeError",
   "astropy.units.UnitsWarning",
   "astropy.units.cm",
   "astropy.units.dimensionless_unscaled",
   "astropy.units.eV",
   "astropy.units.m",
   "astropy.units.temperature_energy",
   "numpy.array",
   "numpy.isclose",
   "plasmapy.formulary.parameters.Debye_number",
   "plasmapy.utils.pytest_helpers.assert_can_handle_nparray",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.test_gyrofrequency": {
  "lineno": 471,
  "symbols_in_volume": [
   "astropy.units.G",
   "astropy.units.Hz",
   "astropy.units.T",
   "astropy.units.UnitTypeError",
   "astropy.units.UnitsWarning",
   "astropy.units.cy",
   "astropy.units.m",
   "astropy.units.rad",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.isnan",
   "numpy.pi",
   "plasmapy.atomic.exceptions.InvalidParticleError",
   "plasmapy.formulary.parameters.gyrofrequency",
   "plasmapy.utils.pytest_helpers.assert_can_handle_nparray",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.test_gyroradius": {
  "lineno": 556,
  "symbols_in_volume": [
   "astropy.units.A",
   "astropy.units.G",
   "astropy.units.K",
   "astropy.units.MK",
   "astropy.units.T",
   "astropy.units.UnitTypeError",
   "astropy.units.UnitsWarning",
   "astropy.units.dimensionless_angles",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.array",
   "numpy.isclose",
   "numpy.isnan",
   "numpy.nan",
   "plasmapy.formulary.parameters.gyrofrequency",
   "plasmapy.formulary.parameters.gyroradius",
   "plasmapy.formulary.parameters.thermal_speed",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.test_inertial_length": {
  "lineno": 826,
  "symbols_in_volume": [
   "astropy.units.UnitTypeError",
   "astropy.units.UnitsWarning",
   "astropy.units.cm",
   "astropy.units.m",
   "numpy.isclose",
   "plasmapy.atomic.exceptions.InvalidParticleError",
   "plasmapy.formulary.parameters.inertial_length",
   "plasmapy.utils.pytest_helpers.assert_can_handle_nparray",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.test_ion_sound_speed": {
  "lineno": 189,
  "symbols_in_volume": [
   "astropy.units.A",
   "astropy.units.K",
   "astropy.units.MK",
   "astropy.units.T",
   "astropy.units.UnitTypeError",
   "astropy.units.UnitsWarning",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.abs",
   "numpy.array",
   "numpy.inf",
   "numpy.isclose",
   "numpy.isnan",
   "plasmapy.atomic.exceptions.InvalidParticleError",
   "plasmapy.formulary.parameters.ion_sound_speed",
   "plasmapy.utils.exceptions.PhysicsError",
   "plasmapy.utils.exceptions.PhysicsWarning",
   "plasmapy.utils.exceptions.RelativityError",
   "plasmapy.utils.exceptions.RelativityWarning",
   "plasmapy.utils.pytest_helpers.assert_can_handle_nparray",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.test_lower_hybrid_frequency": {
  "lineno": 975,
  "symbols_in_volume": [
   "astropy.units.T",
   "astropy.units.UnitsWarning",
   "astropy.units.m",
   "astropy.units.rad",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.nan",
   "plasmapy.formulary.parameters.gyrofrequency",
   "plasmapy.formulary.parameters.lower_hybrid_frequency",
   "plasmapy.formulary.parameters.plasma_frequency",
   "plasmapy.utils.pytest_helpers.assert_can_handle_nparray",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.test_magnetic_energy_density": {
  "lineno": 908,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.G",
   "astropy.units.J",
   "astropy.units.Quantity",
   "astropy.units.T",
   "astropy.units.UnitTypeError",
   "astropy.units.UnitsWarning",
   "astropy.units.m",
   "numpy.isnan",
   "numpy.nan",
   "plasmapy.formulary.parameters.magnetic_energy_density",
   "plasmapy.formulary.parameters.magnetic_pressure",
   "plasmapy.utils.pytest_helpers.assert_can_handle_nparray",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.test_magnetic_pressure": {
  "lineno": 874,
  "symbols_in_volume": [
   "astropy.units.G",
   "astropy.units.Pa",
   "astropy.units.T",
   "astropy.units.UnitTypeError",
   "astropy.units.UnitsWarning",
   "astropy.units.m",
   "numpy.isclose",
   "numpy.isnan",
   "numpy.nan",
   "plasmapy.formulary.parameters.magnetic_energy_density",
   "plasmapy.formulary.parameters.magnetic_pressure",
   "plasmapy.utils.pytest_helpers.assert_can_handle_nparray",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.test_plasma_frequency": {
  "lineno": 697,
  "symbols_in_volume": [
   "astropy.units.Hz",
   "astropy.units.UnitTypeError",
   "astropy.units.UnitsWarning",
   "astropy.units.cm",
   "astropy.units.m",
   "astropy.units.rad",
   "astropy.units.s",
   "numpy.isclose",
   "numpy.isnan",
   "numpy.nan",
   "plasmapy.formulary.parameters.plasma_frequency",
   "plasmapy.utils.pytest_helpers.assert_can_handle_nparray",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.test_thermal_pressure": {
  "lineno": 373,
  "symbols_in_volume": [
   "astropy.units.Pa",
   "plasmapy.formulary.parameters.thermal_pressure",
   "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.test_thermal_speed": {
  "lineno": 304,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.MK",
   "astropy.units.UnitTypeError",
   "astropy.units.UnitsWarning",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.isclose",
   "plasmapy.atomic.exceptions.InvalidParticleError",
   "plasmapy.formulary.parameters.thermal_speed",
   "plasmapy.utils.exceptions.RelativityError",
   "plasmapy.utils.exceptions.RelativityWarning",
   "plasmapy.utils.pytest_helpers.assert_can_handle_nparray",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.test_upper_hybrid_frequency": {
  "lineno": 944,
  "symbols_in_volume": [
   "astropy.units.Hz",
   "astropy.units.T",
   "astropy.units.UnitsWarning",
   "astropy.units.m",
   "astropy.units.rad",
   "astropy.units.s",
   "numpy.isclose",
   "plasmapy.formulary.parameters.gyrofrequency",
   "plasmapy.formulary.parameters.plasma_frequency",
   "plasmapy.formulary.parameters.upper_hybrid_frequency",
   "plasmapy.utils.pytest_helpers.assert_can_handle_nparray",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_quantum": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.units.cm",
   "astropy.units.eV"
  ],
  "type": "module"
 },
 "plasmapy.formulary.tests.test_quantum.Test__chemical_potential_interp": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_quantum.Test__chemical_potential_interp.setup_class": {
  "lineno": 170,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.cm"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_quantum.Test__chemical_potential_interp.test_fail1": {
  "lineno": 188,
  "symbols_in_volume": [
   "astropy.units.isclose",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_quantum.Test__chemical_potential_interp.test_known1": {
  "lineno": 177,
  "symbols_in_volume": [
   "astropy.units.isclose",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_quantum.Test_chemical_potential": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_quantum.Test_chemical_potential.setup_class": {
  "lineno": 136,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.cm"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_quantum.Test_chemical_potential.test_fail1": {
  "lineno": 155,
  "symbols_in_volume": [
   "astropy.units.isclose",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_quantum.Test_chemical_potential.test_known1": {
  "lineno": 144,
  "symbols_in_volume": [
   "astropy.units.isclose",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_quantum.test_Fermi_energy": {
  "lineno": 86,
  "symbols_in_volume": [
   "astropy.units.J",
   "astropy.units.m",
   "numpy.isclose",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_quantum.test_Thomas_Fermi_length": {
  "lineno": 104,
  "symbols_in_volume": [
   "astropy.units.m",
   "numpy.isclose",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_quantum.test_Wigner_Seitz_radius": {
  "lineno": 122,
  "symbols_in_volume": [
   "astropy.units.cm",
   "astropy.units.isclose",
   "astropy.units.m"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_quantum.test_deBroglie_wavelength": {
  "lineno": 15,
  "symbols_in_volume": [
   "astropy.constants.c",
   "astropy.units.UnitConversionError",
   "astropy.units.UnitsWarning",
   "astropy.units.cm",
   "astropy.units.g",
   "astropy.units.kg",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.array",
   "numpy.inf",
   "numpy.isclose",
   "plasmapy.utils.exceptions.RelativityError",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_quantum.test_thermal_deBroglie_wavelength": {
  "lineno": 68,
  "symbols_in_volume": [
   "astropy.units.eV",
   "astropy.units.m",
   "numpy.isclose",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_relativity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.formulary.tests.test_relativity.test_Lorentz_factor": {
  "lineno": 11,
  "symbols_in_volume": [
   "astropy.constants.c",
   "astropy.units.UnitTypeError",
   "astropy.units.UnitsWarning",
   "astropy.units.dimensionless_unscaled",
   "astropy.units.dimensionless_unscaled.unit",
   "astropy.units.kg",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.array",
   "numpy.inf",
   "numpy.isclose",
   "numpy.sqrt",
   "plasmapy.formulary.relativity.Lorentz_factor",
   "plasmapy.utils.exceptions.RelativityError",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_resist_braginskii": {
  "lineno": 787,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_resist_braginskii.setup_class": {
  "lineno": 788,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_resist_braginskii.test_cross_vs_ji_held": {
  "lineno": 816,
  "symbols_in_volume": [
   "numpy.isclose",
   "plasmapy.formulary.braginskii._nondim_resist_braginskii",
   "plasmapy.formulary.braginskii._nondim_resist_ji_held",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_resist_braginskii.test_known_values_par": {
  "lineno": 795,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.isclose",
   "plasmapy.formulary.braginskii._nondim_resist_braginskii",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_resist_braginskii.test_unmagnetized": {
  "lineno": 809,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.isclose",
   "plasmapy.formulary.braginskii._nondim_resist_braginskii",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tc_e_braginskii": {
  "lineno": 648,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tc_e_braginskii.setup_class": {
  "lineno": 649,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tc_e_braginskii.test_cross_vs_ji_held": {
  "lineno": 693,
  "symbols_in_volume": [
   "numpy.isclose",
   "plasmapy.formulary.braginskii._nondim_tc_e_braginskii",
   "plasmapy.formulary.braginskii._nondim_tc_e_ji_held",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tc_e_braginskii.test_known_values_par": {
  "lineno": 656,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.isclose",
   "plasmapy.formulary.braginskii._nondim_tc_e_braginskii",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tc_e_braginskii.test_known_values_perp": {
  "lineno": 671,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.isclose",
   "plasmapy.formulary.braginskii._nondim_tc_e_braginskii",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tc_e_braginskii.test_unmagnetized": {
  "lineno": 686,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.isclose",
   "plasmapy.formulary.braginskii._nondim_tc_e_braginskii",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tc_i_braginskii": {
  "lineno": 711,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tc_i_braginskii.setup_class": {
  "lineno": 712,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tc_i_braginskii.test_cross_vs_ji_held_K2": {
  "lineno": 740,
  "symbols_in_volume": [
   "numpy.isclose",
   "plasmapy.formulary.braginskii._nondim_tc_i_braginskii",
   "plasmapy.formulary.braginskii._nondim_tc_i_ji_held"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tc_i_braginskii.test_known_values_par": {
  "lineno": 718,
  "symbols_in_volume": [
   "numpy.isclose",
   "plasmapy.formulary.braginskii._nondim_tc_i_braginskii"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tc_i_braginskii.test_known_values_perp": {
  "lineno": 725,
  "symbols_in_volume": [
   "numpy.isclose",
   "plasmapy.formulary.braginskii._nondim_tc_i_braginskii"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tc_i_braginskii.test_unmagnetized": {
  "lineno": 734,
  "symbols_in_volume": [
   "numpy.isclose",
   "plasmapy.formulary.braginskii._nondim_tc_i_braginskii"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tec_braginskii": {
  "lineno": 749,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tec_braginskii.setup_class": {
  "lineno": 750,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tec_braginskii.test_cross_vs_ji_held": {
  "lineno": 778,
  "symbols_in_volume": [
   "numpy.isclose",
   "plasmapy.formulary.braginskii._nondim_tec_braginskii",
   "plasmapy.formulary.braginskii._nondim_tec_ji_held",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tec_braginskii.test_known_values_par": {
  "lineno": 757,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.isclose",
   "plasmapy.formulary.braginskii._nondim_tec_braginskii",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tec_braginskii.test_unmagnetized": {
  "lineno": 771,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.isclose",
   "plasmapy.formulary.braginskii._nondim_tec_braginskii",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_visc_e_braginskii": {
  "lineno": 852,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_visc_e_braginskii.setup_class": {
  "lineno": 853,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_visc_e_braginskii.test_known_values": {
  "lineno": 860,
  "symbols_in_volume": [
   "numpy.isclose",
   "plasmapy.formulary.braginskii._nondim_visc_e_braginskii",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_visc_i_braginskii": {
  "lineno": 825,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_visc_i_braginskii.setup_class": {
  "lineno": 826,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_visc_i_braginskii.test_known_values": {
  "lineno": 833,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "plasmapy.formulary.braginskii._nondim_visc_i_braginskii",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_visc_i_braginskii.test_vs_ji_held_K2": {
  "lineno": 842,
  "symbols_in_volume": [
   "numpy.isclose",
   "plasmapy.formulary.braginskii._nondim_visc_i_braginskii",
   "plasmapy.formulary.braginskii._nondim_visc_i_ji_held"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.setup_class": {
  "lineno": 55,
  "symbols_in_volume": [
   "astropy.constants.m_e",
   "astropy.units.T",
   "astropy.units.cm",
   "astropy.units.eV",
   "plasmapy.atomic.atomic.integer_charge",
   "plasmapy.atomic.atomic.particle_mass",
   "plasmapy.formulary.braginskii.ClassicalTransport",
   "plasmapy.utils.exceptions.RelativityWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_Z_checks": {
  "lineno": 205,
  "symbols_in_volume": [
   "plasmapy.formulary.braginskii.ClassicalTransport",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_coulomb_log_calc": {
  "lineno": 251,
  "symbols_in_volume": [
   "plasmapy.formulary.braginskii.ClassicalTransport",
   "plasmapy.formulary.collisions.Coulomb_logarithm",
   "plasmapy.utils.exceptions.RelativityWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_coulomb_log_errors": {
  "lineno": 233,
  "symbols_in_volume": [
   "plasmapy.formulary.braginskii.ClassicalTransport",
   "plasmapy.utils.exceptions.CouplingWarning",
   "plasmapy.utils.exceptions.PhysicsError",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_coulomb_log_warnings": {
  "lineno": 215,
  "symbols_in_volume": [
   "plasmapy.formulary.braginskii.ClassicalTransport",
   "plasmapy.utils.exceptions.CouplingWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_dictionary": {
  "lineno": 488,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_electron_thermal_conductivity_by_model": {
  "lineno": 447,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.W",
   "astropy.units.m",
   "numpy.allclose",
   "plasmapy.formulary.braginskii.ClassicalTransport",
   "plasmapy.utils.exceptions.RelativityWarning",
   "pytest.mark.parametrize",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_electron_thermal_conductivity_units": {
  "lineno": 160,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.W",
   "astropy.units.m",
   "plasmapy.utils.exceptions.RelativityWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_electron_thermal_conductivity_wrapper": {
  "lineno": 573,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "plasmapy.formulary.braginskii.electron_thermal_conductivity",
   "plasmapy.utils.exceptions.RelativityWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_electron_viscosity_by_model": {
  "lineno": 405,
  "symbols_in_volume": [
   "astropy.units.Pa",
   "astropy.units.s",
   "numpy.allclose",
   "numpy.array",
   "plasmapy.formulary.braginskii.ClassicalTransport",
   "plasmapy.utils.exceptions.RelativityWarning",
   "pytest.mark.parametrize",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_electron_viscosity_units": {
  "lineno": 177,
  "symbols_in_volume": [
   "astropy.units.Pa",
   "astropy.units.s",
   "plasmapy.utils.exceptions.RelativityWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_electron_viscosity_wrapper": {
  "lineno": 605,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "plasmapy.formulary.braginskii.electron_viscosity",
   "plasmapy.utils.exceptions.RelativityWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_hall_calc": {
  "lineno": 276,
  "symbols_in_volume": [
   "plasmapy.formulary.braginskii.ClassicalTransport",
   "plasmapy.formulary.parameters.Hall_parameter",
   "plasmapy.utils.exceptions.RelativityWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_invalid_field": {
  "lineno": 316,
  "symbols_in_volume": [
   "plasmapy.formulary.braginskii.ClassicalTransport",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_invalid_model": {
  "lineno": 307,
  "symbols_in_volume": [
   "plasmapy.formulary.braginskii.ClassicalTransport",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_ion_thermal_conductivity_by_model": {
  "lineno": 468,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.W",
   "astropy.units.m",
   "numpy.allclose",
   "plasmapy.formulary.braginskii.ClassicalTransport",
   "plasmapy.utils.exceptions.RelativityWarning",
   "pytest.mark.parametrize",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_ion_thermal_conductivity_units": {
  "lineno": 152,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.W",
   "astropy.units.m"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_ion_thermal_conductivity_wrapper": {
  "lineno": 557,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "plasmapy.formulary.braginskii.ion_thermal_conductivity",
   "plasmapy.utils.exceptions.RelativityWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_ion_viscosity_by_model": {
  "lineno": 426,
  "symbols_in_volume": [
   "astropy.units.Pa",
   "astropy.units.s",
   "numpy.allclose",
   "numpy.array",
   "plasmapy.formulary.braginskii.ClassicalTransport",
   "plasmapy.utils.exceptions.RelativityWarning",
   "pytest.mark.parametrize",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_ion_viscosity_units": {
  "lineno": 170,
  "symbols_in_volume": [
   "astropy.units.Pa",
   "astropy.units.s"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_ion_viscosity_wrapper": {
  "lineno": 589,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "plasmapy.formulary.braginskii.ion_viscosity",
   "plasmapy.utils.exceptions.RelativityWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_number_of_returns": {
  "lineno": 341,
  "symbols_in_volume": [
   "numpy.size",
   "plasmapy.formulary.braginskii.ClassicalTransport",
   "plasmapy.utils.exceptions.RelativityWarning",
   "pytest.mark.parametrize",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_particle_charge_state": {
  "lineno": 195,
  "symbols_in_volume": [
   "astropy.constants.m_p",
   "plasmapy.atomic.exceptions.InvalidParticleError",
   "plasmapy.formulary.braginskii.ClassicalTransport",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_particle_mass": {
  "lineno": 185,
  "symbols_in_volume": [
   "plasmapy.formulary.braginskii.ClassicalTransport",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_precalculated_parameters": {
  "lineno": 325,
  "symbols_in_volume": [
   "astropy.units.Ohm",
   "astropy.units.m",
   "numpy.isclose",
   "plasmapy.formulary.braginskii.ClassicalTransport",
   "plasmapy.utils.exceptions.RelativityWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_resistivity_by_model": {
  "lineno": 364,
  "symbols_in_volume": [
   "astropy.units.Ohm",
   "astropy.units.m",
   "numpy.isclose",
   "plasmapy.formulary.braginskii.ClassicalTransport",
   "plasmapy.utils.exceptions.RelativityWarning",
   "pytest.mark.parametrize",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_resistivity_units": {
  "lineno": 137,
  "symbols_in_volume": [
   "astropy.units.Ohm",
   "astropy.units.m",
   "plasmapy.utils.exceptions.RelativityWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_resistivity_wrapper": {
  "lineno": 524,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "plasmapy.formulary.braginskii.resistivity",
   "plasmapy.utils.exceptions.RelativityWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_spitzer_vs_formulary": {
  "lineno": 111,
  "symbols_in_volume": [
   "astropy.units.Ohm",
   "astropy.units.eV",
   "astropy.units.m",
   "astropy.units.temperature_energy",
   "numpy.isclose",
   "plasmapy.formulary.braginskii.ClassicalTransport",
   "plasmapy.utils.exceptions.RelativityWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_thermoelectric_conductivity_by_model": {
  "lineno": 384,
  "symbols_in_volume": [
   "astropy.units.s",
   "numpy.isclose",
   "plasmapy.formulary.braginskii.ClassicalTransport",
   "plasmapy.utils.exceptions.RelativityWarning",
   "pytest.mark.parametrize",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_thermoelectric_conductivity_units": {
  "lineno": 145,
  "symbols_in_volume": [
   "astropy.units.m"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_thermoelectric_conductivity_wrapper": {
  "lineno": 540,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "plasmapy.formulary.braginskii.thermoelectric_conductivity",
   "plasmapy.utils.exceptions.RelativityWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.count_decimal_places": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.test__nondim_resist_ji_held": {
  "lineno": 1037,
  "symbols_in_volume": [
   "numpy.isclose",
   "plasmapy.formulary.braginskii._nondim_resist_ji_held",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.test__nondim_resist_spitzer": {
  "lineno": 904,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.isclose",
   "plasmapy.formulary.braginskii._nondim_resist_braginskii",
   "plasmapy.formulary.braginskii._nondim_resist_ji_held",
   "plasmapy.formulary.braginskii._nondim_resist_spitzer",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.test__nondim_tc_e_ji_held": {
  "lineno": 937,
  "symbols_in_volume": [
   "numpy.isclose",
   "plasmapy.formulary.braginskii._nondim_tc_e_ji_held",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.test__nondim_tc_e_spitzer": {
  "lineno": 885,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.isclose",
   "plasmapy.formulary.braginskii._nondim_tc_e_braginskii",
   "plasmapy.formulary.braginskii._nondim_tc_e_ji_held",
   "plasmapy.formulary.braginskii._nondim_tc_e_spitzer",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.test__nondim_tc_i_ji_held": {
  "lineno": 1115,
  "symbols_in_volume": [
   "numpy.isclose",
   "plasmapy.formulary.braginskii._nondim_tc_i_ji_held",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.test__nondim_tec_ji_held": {
  "lineno": 986,
  "symbols_in_volume": [
   "numpy.isclose",
   "plasmapy.formulary.braginskii._nondim_tec_ji_held",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.test__nondim_tec_spitzer": {
  "lineno": 920,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.isclose",
   "plasmapy.formulary.braginskii._nondim_tec_braginskii",
   "plasmapy.formulary.braginskii._nondim_tec_ji_held",
   "plasmapy.formulary.braginskii._nondim_tec_spitzer",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.test__nondim_visc_e_ji_held": {
  "lineno": 1085,
  "symbols_in_volume": [
   "numpy.isclose",
   "plasmapy.formulary.braginskii._nondim_visc_e_ji_held",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.test__nondim_visc_i_ji_held": {
  "lineno": 1144,
  "symbols_in_volume": [
   "numpy.isclose",
   "plasmapy.formulary.braginskii._nondim_visc_i_ji_held",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.test_fail__check_Z_nan": {
  "lineno": 880,
  "symbols_in_volume": [
   "plasmapy.formulary.braginskii._check_Z",
   "plasmapy.utils.exceptions.PhysicsError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.test_nondim_resistivity_unrecognized_model": {
  "lineno": 630,
  "symbols_in_volume": [
   "plasmapy.formulary.braginskii._nondim_resistivity",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.test_nondim_te_conductivity_unrecognized_model": {
  "lineno": 635,
  "symbols_in_volume": [
   "plasmapy.formulary.braginskii._nondim_te_conductivity",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.test_nondim_thermal_conductivity_unrecognized_model": {
  "lineno": 622,
  "symbols_in_volume": [
   "plasmapy.formulary.braginskii._nondim_thermal_conductivity",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.test_nondim_viscosity_unrecognized_model": {
  "lineno": 641,
  "symbols_in_volume": [
   "plasmapy.formulary.braginskii._nondim_viscosity",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.online_help": {
  "lineno": 61,
  "symbols_in_volume": [
   "urllib.parse.urlencode",
   "webbrowser.open"
  ],
  "type": "function"
 },
 "plasmapy.optional_deps": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.optional_deps._optional_import_error_template": {
  "lineno": 5,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "plasmapy.simulation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.simulation.particletracker": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.simulation.particletracker.ParticleTracker": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.simulation.particletracker.ParticleTracker.__init__": {
  "lineno": 62,
  "symbols_in_volume": [
   "astropy.constants.e.si",
   "astropy.units.m",
   "astropy.units.quantity_input",
   "astropy.units.s",
   "numpy.arange",
   "numpy.inf",
   "numpy.isinf",
   "numpy.moveaxis",
   "numpy.zeros",
   "plasmapy.atomic.atomic.integer_charge",
   "plasmapy.atomic.atomic.particle_mass",
   "scipy.interpolate.RegularGridInterpolator"
  ],
  "type": "function"
 },
 "plasmapy.simulation.particletracker.ParticleTracker.__repr__": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.simulation.particletracker.ParticleTracker.__str__": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.simulation.particletracker.ParticleTracker._interpolate_fields": {
  "lineno": 111,
  "symbols_in_volume": [
   "astropy.units.T",
   "astropy.units.V",
   "astropy.units.m"
  ],
  "type": "function"
 },
 "plasmapy.simulation.particletracker.ParticleTracker.boris_push": {
  "lineno": 128,
  "symbols_in_volume": [
   "astropy.units.m",
   "astropy.units.s",
   "numpy.cross"
  ],
  "type": "function"
 },
 "plasmapy.simulation.particletracker.ParticleTracker.kinetic_energy_history": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.simulation.particletracker.ParticleTracker.plot_time_trajectories": {
  "lineno": 219,
  "symbols_in_volume": [
   "astropy.visualization.quantity_support",
   "matplotlib.pyplot.show",
   "matplotlib.pyplot.subplots"
  ],
  "type": "function"
 },
 "plasmapy.simulation.particletracker.ParticleTracker.plot_trajectories": {
  "lineno": 200,
  "symbols_in_volume": [
   "astropy.visualization.quantity_support",
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.show"
  ],
  "type": "function"
 },
 "plasmapy.simulation.particletracker.ParticleTracker.run": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.simulation.particletracker.ParticleTracker.test_kinetic_energy": {
  "lineno": 249,
  "symbols_in_volume": [
   "numpy.allclose"
  ],
  "type": "function"
 },
 "plasmapy.simulation.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.simulation.tests.test_particletracker": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.simulation.tests.test_particletracker.fit_sine_curve": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.sqrt",
   "scipy.optimize.curve_fit"
  ],
  "type": "function"
 },
 "plasmapy.simulation.tests.test_particletracker.fit_sine_curve.sine": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.sin"
  ],
  "type": "function"
 },
 "plasmapy.simulation.tests.test_particletracker.test_particle_exb_drift": {
  "lineno": 100,
  "symbols_in_volume": [
   "astropy.modeling.fitting.LinearLSQFitter",
   "astropy.modeling.models.Polynomial1D",
   "astropy.units.V",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.allclose",
   "numpy.isclose",
   "numpy.random.normal",
   "plasmapy.simulation.particletracker.ParticleTracker",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "plasmapy.simulation.tests.test_particletracker.uniform_magnetic_field": {
  "lineno": 11,
  "symbols_in_volume": [
   "astropy.units.T",
   "astropy.units.m",
   "numpy.linspace",
   "plasmapy.classes.sources.Plasma3D",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "plasmapy.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.utils.datatype_factory_base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory.__call__": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory.__init__": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory._check_registered_widget": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory.register": {
  "lineno": 127,
  "symbols_in_volume": [
   "inspect.ismethod"
  ],
  "type": "function"
 },
 "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory.unregister": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.utils.datatype_factory_base.MultipleMatchError": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.datatype_factory_base.NoMatchError": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.datatype_factory_base.ValidationFunctionError": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.decorators": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.utils.decorators.checks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.utils.decorators.checks.CheckBase": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.decorators.checks.CheckBase.__init__": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckBase.checks": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckUnits": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.decorators.checks.CheckUnits.__call__": {
  "lineno": 459,
  "symbols_in_volume": [
   "inspect.signature"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckUnits.__call__.wrapper": {
  "lineno": 474,
  "symbols_in_volume": [
   "functools.wraps",
   "plasmapy.utils.decorators.preserve_signature"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckUnits.__init__": {
  "lineno": 450,
  "symbols_in_volume": [
   "astropy.units.Unit",
   "typing.Any",
   "typing.Dict",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckUnits._check_unit": {
  "lineno": 730,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckUnits._check_unit_core": {
  "lineno": 761,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.Unit",
   "astropy.units.UnitTypeError",
   "numpy.array",
   "numpy.count_nonzero",
   "numpy.equal",
   "numpy.logical_and",
   "typing.Any",
   "typing.Dict",
   "typing.List",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckUnits._condition_target_units": {
  "lineno": 875,
  "symbols_in_volume": [
   "astropy.units.Unit",
   "typing.List"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckUnits._flatten_equivalencies_list": {
  "lineno": 983,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckUnits._get_unit_checks": {
  "lineno": 506,
  "symbols_in_volume": [
   "astropy.units.equivalencies.Equivalency",
   "collections.abc.Iterable",
   "functools.reduce",
   "inspect.BoundArguments",
   "inspect.Parameter",
   "inspect.Parameter.POSITIONAL_ONLY",
   "inspect.Parameter.VAR_KEYWORD",
   "inspect.Parameter.VAR_POSITIONAL",
   "inspect.Parameter.empty",
   "plasmapy.utils.exceptions.PlasmaPyWarning",
   "typing.Any",
   "typing.Dict",
   "warnings.warn"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckUnits._normalize_equivalencies": {
  "lineno": 926,
  "symbols_in_volume": [
   "astropy.units.Unit"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckValues": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.decorators.checks.CheckValues.__call__": {
  "lineno": 134,
  "symbols_in_volume": [
   "inspect.signature"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckValues.__call__.wrapper": {
  "lineno": 149,
  "symbols_in_volume": [
   "functools.wraps",
   "plasmapy.utils.decorators.preserve_signature"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckValues.__init__": {
  "lineno": 127,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckValues._check_value": {
  "lineno": 259,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.errstate",
   "numpy.iscomplexobj",
   "numpy.isinf",
   "numpy.isnan",
   "typing.Dict"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckValues._get_value_checks": {
  "lineno": 181,
  "symbols_in_volume": [
   "inspect.BoundArguments",
   "inspect.Parameter",
   "inspect.Parameter.POSITIONAL_ONLY",
   "inspect.Parameter.VAR_KEYWORD",
   "inspect.Parameter.VAR_POSITIONAL",
   "plasmapy.utils.exceptions.PlasmaPyWarning",
   "typing.Dict",
   "warnings.warn"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.Equivalency": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.decorators.checks._check_relativistic": {
  "lineno": 1289,
  "symbols_in_volume": [
   "astropy.constants.c.to_value",
   "astropy.units.Quantity",
   "astropy.units.UnitConversionError",
   "astropy.units.dimensionless_unscaled",
   "numpy.abs",
   "numpy.inf",
   "numpy.max",
   "plasmapy.utils.exceptions.RelativityError",
   "plasmapy.utils.exceptions.RelativityWarning",
   "warnings.warn"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.check_relativistic": {
  "lineno": 1221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.check_relativistic.decorator": {
  "lineno": 1274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.check_relativistic.decorator.wrapper": {
  "lineno": 1276,
  "symbols_in_volume": [
   "functools.wraps",
   "plasmapy.utils.decorators.preserve_signature"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.check_units": {
  "lineno": 1009,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.check_values": {
  "lineno": 1146,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.converter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.utils.decorators.converter.angular_freq_to_hz": {
  "lineno": 13,
  "symbols_in_volume": [
   "inspect.Parameter",
   "inspect.Parameter.POSITIONAL_OR_KEYWORD",
   "inspect.Signature",
   "inspect.signature"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.converter.angular_freq_to_hz.wrapper": {
  "lineno": 103,
  "symbols_in_volume": [
   "astropy.units.Hz",
   "astropy.units.cy",
   "astropy.units.s",
   "functools.wraps",
   "plasmapy.utils.decorators.preserve_signature"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.helpers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.utils.decorators.helpers.preserve_signature": {
  "lineno": 10,
  "symbols_in_volume": [
   "functools.WRAPPER_ASSIGNMENTS",
   "inspect.signature"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.helpers.preserve_signature.wrapper": {
  "lineno": 42,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.utils.decorators.tests.test_checks": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.constants.c",
   "astropy.units.AA",
   "astropy.units.Gyr",
   "astropy.units.UnitConversionError",
   "astropy.units.cm",
   "astropy.units.m",
   "astropy.units.s",
   "numpy.inf",
   "plasmapy.utils.exceptions.RelativityError"
  ],
  "type": "module"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckBase": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckBase.test_checks": {
  "lineno": 38,
  "symbols_in_volume": [
   "plasmapy.utils.decorators.checks.CheckBase"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckBase.test_for_members": {
  "lineno": 35,
  "symbols_in_volume": [
   "plasmapy.utils.decorators.checks.CheckUnits"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits": {
  "lineno": 53,
  "symbols_in_volume": [
   "plasmapy.utils.decorators.checks.CheckUnits._CheckUnits__check_defaults"
  ],
  "type": "class"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.foo_no_anno": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.foo_partial_anno": {
  "lineno": 65,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.cm"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.foo_return_anno": {
  "lineno": 69,
  "symbols_in_volume": [
   "astropy.units.um"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.foo_stars": {
  "lineno": 73,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.cm"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.foo_with_none": {
  "lineno": 77,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.cm"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.test_cu_called_as_decorator": {
  "lineno": 514,
  "symbols_in_volume": [
   "astropy.units.UnitTypeError",
   "astropy.units.cm",
   "astropy.units.g",
   "astropy.units.km",
   "plasmapy.utils.decorators.checks.CheckUnits",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.test_cu_called_as_decorator.Foo": {
  "lineno": 570,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.test_cu_called_as_decorator.Foo.__init__": {
  "lineno": 571,
  "symbols_in_volume": [
   "astropy.units.cm",
   "plasmapy.utils.decorators.checks.CheckUnits"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.test_cu_called_as_decorator.Foo.bar": {
  "lineno": 575,
  "symbols_in_volume": [
   "astropy.units.cm",
   "plasmapy.utils.decorators.checks.CheckUnits"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.test_cu_default_check_values": {
  "lineno": 84,
  "symbols_in_volume": [
   "plasmapy.utils.decorators.checks.CheckUnits"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.test_cu_method__check_unit": {
  "lineno": 408,
  "symbols_in_volume": [
   "astropy.units.UnitTypeError",
   "astropy.units.cm",
   "astropy.units.kg",
   "astropy.units.km",
   "astropy.units.m",
   "plasmapy.utils.decorators.checks.CheckUnits",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.test_cu_method__check_unit.MyQuantity": {
  "lineno": 426,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.test_cu_method__condition_target_units": {
  "lineno": 107,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.cm",
   "astropy.units.km",
   "plasmapy.utils.decorators.checks.CheckUnits",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.test_cu_method__flatten_equivalencies_list": {
  "lineno": 96,
  "symbols_in_volume": [
   "plasmapy.utils.decorators.checks.CheckUnits"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.test_cu_method__get_unit_checks": {
  "lineno": 177,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.cm",
   "astropy.units.km",
   "astropy.units.temperature",
   "astropy.units.temperature_energy",
   "astropy.units.um",
   "inspect.signature",
   "plasmapy.utils.decorators.checks.CheckUnits",
   "plasmapy.utils.exceptions.PlasmaPyWarning",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.test_cu_method__normalize_equivalencies": {
  "lineno": 124,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.cm",
   "astropy.units.deg_C",
   "plasmapy.utils.decorators.checks.CheckUnits",
   "pytest.raises",
   "types.LambdaType"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.test_cu_preserves_signature": {
  "lineno": 582,
  "symbols_in_volume": [
   "inspect.signature",
   "plasmapy.utils.decorators.checks.CheckUnits"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.test_decorator_func_def": {
  "lineno": 590,
  "symbols_in_volume": [
   "astropy.units.cm",
   "inspect.signature",
   "plasmapy.utils.decorators.checks.CheckUnits",
   "plasmapy.utils.decorators.checks.CheckUnits.__module__",
   "plasmapy.utils.decorators.checks.CheckUnits.__qualname__",
   "plasmapy.utils.decorators.checks.check_units",
   "unittest.mock.Mock",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.test_inheritance": {
  "lineno": 81,
  "symbols_in_volume": [
   "plasmapy.utils.decorators.checks.CheckBase",
   "plasmapy.utils.decorators.checks.CheckUnits"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckValues": {
  "lineno": 668,
  "symbols_in_volume": [
   "plasmapy.utils.decorators.checks.CheckValues._CheckValues__check_defaults"
  ],
  "type": "class"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckValues.foo": {
  "lineno": 676,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckValues.foo_stars": {
  "lineno": 680,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckValues.test_cv_called_as_decorator": {
  "lineno": 920,
  "symbols_in_volume": [
   "plasmapy.utils.decorators.checks.CheckValues",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckValues.test_cv_called_as_decorator.Foo": {
  "lineno": 976,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckValues.test_cv_called_as_decorator.Foo.__init__": {
  "lineno": 977,
  "symbols_in_volume": [
   "plasmapy.utils.decorators.checks.CheckValues"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckValues.test_cv_called_as_decorator.Foo.bar": {
  "lineno": 981,
  "symbols_in_volume": [
   "plasmapy.utils.decorators.checks.CheckValues"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckValues.test_cv_default_check_values": {
  "lineno": 687,
  "symbols_in_volume": [
   "plasmapy.utils.decorators.checks.CheckValues"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckValues.test_cv_method__check_value": {
  "lineno": 797,
  "symbols_in_volume": [
   "astropy.units.cm",
   "astropy.units.kg",
   "numpy.array",
   "numpy.complex",
   "numpy.inf",
   "numpy.nan",
   "plasmapy.utils.decorators.checks.CheckValues",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckValues.test_cv_method__get_value_checks": {
  "lineno": 700,
  "symbols_in_volume": [
   "astropy.units.cm",
   "inspect.signature",
   "plasmapy.utils.decorators.checks.CheckValues",
   "plasmapy.utils.exceptions.PlasmaPyWarning",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckValues.test_cv_preserves_signature": {
  "lineno": 991,
  "symbols_in_volume": [
   "inspect.signature",
   "plasmapy.utils.decorators.checks.CheckValues"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckValues.test_decorator_func_def": {
  "lineno": 999,
  "symbols_in_volume": [
   "inspect.signature",
   "plasmapy.utils.decorators.checks.CheckValues",
   "plasmapy.utils.decorators.checks.CheckValues.__module__",
   "plasmapy.utils.decorators.checks.CheckValues.__qualname__",
   "plasmapy.utils.decorators.checks.check_values",
   "unittest.mock.Mock",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckValues.test_inheritance": {
  "lineno": 684,
  "symbols_in_volume": [
   "plasmapy.utils.decorators.checks.CheckBase",
   "plasmapy.utils.decorators.checks.CheckValues"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.test__check_relativisitc_valid": {
  "lineno": 1107,
  "symbols_in_volume": [
   "plasmapy.utils.decorators.checks._check_relativistic",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.test__check_relativistic_errors": {
  "lineno": 1112,
  "symbols_in_volume": [
   "plasmapy.utils.decorators.checks._check_relativistic",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.test__check_relativistic_warnings": {
  "lineno": 1118,
  "symbols_in_volume": [
   "plasmapy.utils.decorators.checks._check_relativistic",
   "plasmapy.utils.exceptions.RelativityWarning",
   "pytest.mark.parametrize",
   "pytest.warns"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.test_check_relativistic_decorator": {
  "lineno": 1126,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.test_check_relativistic_decorator.speed_func": {
  "lineno": 1129,
  "symbols_in_volume": [
   "plasmapy.utils.decorators.checks.check_relativistic"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.test_check_relativistic_decorator_errors": {
  "lineno": 1160,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.test_check_relativistic_decorator_errors.speed_func": {
  "lineno": 1163,
  "symbols_in_volume": [
   "plasmapy.utils.decorators.checks.check_relativistic"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.test_check_relativistic_decorator_no_args": {
  "lineno": 1136,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.test_check_relativistic_decorator_no_args.speed_func": {
  "lineno": 1141,
  "symbols_in_volume": [
   "plasmapy.utils.decorators.checks.check_relativistic"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.test_check_relativistic_decorator_no_args_parentheses": {
  "lineno": 1148,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.test_check_relativistic_decorator_no_args_parentheses.speed_func": {
  "lineno": 1153,
  "symbols_in_volume": [
   "plasmapy.utils.decorators.checks.check_relativistic"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_converters": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.utils.decorators.tests.test_converters.test_conversion": {
  "lineno": 6,
  "symbols_in_volume": [
   "astropy.units.Hz",
   "astropy.units.rad",
   "astropy.units.s",
   "numpy.pi"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_converters.test_conversion.test_function": {
  "lineno": 7,
  "symbols_in_volume": [
   "astropy.units.rad",
   "astropy.units.s",
   "numpy.pi",
   "plasmapy.utils.decorators.converter.angular_freq_to_hz"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_helpers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.utils.decorators.tests.test_helpers.test_preserve_signature": {
  "lineno": 12,
  "symbols_in_volume": [
   "inspect.signature",
   "unittest.mock.Mock"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_helpers.test_preserve_signature.foo": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_validators": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.utils.decorators.tests.test_validators.TestValidateQuantities": {
  "lineno": 21,
  "symbols_in_volume": [
   "plasmapy.utils.decorators.checks.CheckUnits._CheckUnits__check_defaults",
   "plasmapy.utils.decorators.checks.CheckValues._CheckValues__check_defaults"
  ],
  "type": "class"
 },
 "plasmapy.utils.decorators.tests.test_validators.TestValidateQuantities.foo": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_validators.TestValidateQuantities.foo_anno": {
  "lineno": 36,
  "symbols_in_volume": [
   "astropy.units.cm"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_validators.TestValidateQuantities.test_decorator_func_def": {
  "lineno": 418,
  "symbols_in_volume": [
   "astropy.units.cm",
   "inspect.signature",
   "plasmapy.utils.decorators.validators.ValidateQuantities",
   "plasmapy.utils.decorators.validators.ValidateQuantities.__module__",
   "plasmapy.utils.decorators.validators.ValidateQuantities.__qualname__",
   "plasmapy.utils.decorators.validators.validate_quantities",
   "unittest.mock.Mock",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_validators.TestValidateQuantities.test_inheritance": {
  "lineno": 40,
  "symbols_in_volume": [
   "plasmapy.utils.decorators.checks.CheckUnits",
   "plasmapy.utils.decorators.checks.CheckValues",
   "plasmapy.utils.decorators.validators.ValidateQuantities"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_validators.TestValidateQuantities.test_vq_called_as_decorator": {
  "lineno": 302,
  "symbols_in_volume": [
   "astropy.units.N",
   "astropy.units.N.to_string",
   "astropy.units.UnitTypeError",
   "astropy.units.cm",
   "astropy.units.cm.to",
   "astropy.units.g",
   "astropy.units.kg",
   "astropy.units.kg.to",
   "astropy.units.m",
   "astropy.units.m.to",
   "astropy.units.s",
   "astropy.units.s.to",
   "astropy.units.um",
   "plasmapy.utils.decorators.validators.ValidateQuantities",
   "pytest.raises",
   "unittest.mock.patch.object"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_validators.TestValidateQuantities.test_vq_called_as_decorator.Foo": {
  "lineno": 404,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.decorators.tests.test_validators.TestValidateQuantities.test_vq_called_as_decorator.Foo.__init__": {
  "lineno": 405,
  "symbols_in_volume": [
   "astropy.units.cm",
   "plasmapy.utils.decorators.validators.ValidateQuantities"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_validators.TestValidateQuantities.test_vq_called_as_decorator.Foo.bar": {
  "lineno": 409,
  "symbols_in_volume": [
   "astropy.units.cm",
   "astropy.units.m",
   "plasmapy.utils.decorators.validators.ValidateQuantities"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_validators.TestValidateQuantities.test_vq_method__get_validations": {
  "lineno": 44,
  "symbols_in_volume": [
   "astropy.units.cm",
   "inspect.signature",
   "plasmapy.utils.decorators.checks.CheckUnits",
   "plasmapy.utils.decorators.checks.CheckValues",
   "plasmapy.utils.decorators.validators.ValidateQuantities",
   "pytest.raises",
   "pytest.warns",
   "unittest.mock.patch.object"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_validators.TestValidateQuantities.test_vq_method__validate_quantity": {
  "lineno": 180,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.K.to",
   "astropy.units.UnitsWarning",
   "astropy.units.cm",
   "astropy.units.cm.to",
   "astropy.units.eV",
   "astropy.units.km",
   "astropy.units.temperature_energy",
   "plasmapy.utils.decorators.checks.CheckUnits",
   "plasmapy.utils.decorators.checks.CheckValues",
   "plasmapy.utils.decorators.validators.ValidateQuantities",
   "plasmapy.utils.exceptions.ImplicitUnitConversionWarning",
   "pytest.raises",
   "pytest.warns",
   "unittest.mock.patch.object",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_validators.TestValidateQuantities.test_vq_preserves_signature": {
  "lineno": 294,
  "symbols_in_volume": [
   "inspect.signature",
   "plasmapy.utils.decorators.validators.ValidateQuantities"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.validators": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.utils.decorators.validators.ValidateQuantities": {
  "lineno": 17,
  "symbols_in_volume": [
   "plasmapy.utils.decorators.checks.CheckUnits",
   "plasmapy.utils.decorators.checks.CheckValues"
  ],
  "type": "class"
 },
 "plasmapy.utils.decorators.validators.ValidateQuantities.__call__": {
  "lineno": 163,
  "symbols_in_volume": [
   "inspect.signature"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.validators.ValidateQuantities.__call__.wrapper": {
  "lineno": 178,
  "symbols_in_volume": [
   "functools.wraps",
   "plasmapy.utils.decorators.helpers.preserve_signature"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.validators.ValidateQuantities.__init__": {
  "lineno": 147,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.validators.ValidateQuantities._get_validations": {
  "lineno": 211,
  "symbols_in_volume": [
   "inspect.BoundArguments",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.validators.ValidateQuantities._validate_quantity": {
  "lineno": 280,
  "symbols_in_volume": [
   "astropy.units.UnitsWarning",
   "plasmapy.utils.exceptions.ImplicitUnitConversionWarning",
   "typing.Any",
   "typing.Dict",
   "warnings.warn"
  ],
  "type": "function"
 },
 "plasmapy.utils.decorators.validators.ValidateQuantities.validations": {
  "lineno": 369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.utils.decorators.validators.validate_quantities": {
  "lineno": 378,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.utils.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.utils.exceptions.CouplingWarning": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.exceptions.ImplicitUnitConversionWarning": {
  "lineno": 76,
  "symbols_in_volume": [
   "astropy.units.UnitsWarning"
  ],
  "type": "class"
 },
 "plasmapy.utils.exceptions.PhysicsError": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.exceptions.PhysicsWarning": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.exceptions.PlasmaPyError": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.exceptions.PlasmaPyWarning": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.exceptions.RelativityError": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.exceptions.RelativityWarning": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.pytest_helpers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.utils.pytest_helpers.error_messages": {
  "lineno": null,
  "symbols_in_volume": [
   "colorama.Fore.BLUE",
   "colorama.Fore.CYAN",
   "colorama.Fore.MAGENTA",
   "colorama.Fore.RED",
   "colorama.Style.BRIGHT"
  ],
  "type": "module"
 },
 "plasmapy.utils.pytest_helpers.error_messages._exc_str": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.error_messages._format_arg": {
  "lineno": 34,
  "symbols_in_volume": [
   "astropy.units.quantity.Quantity"
  ],
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.error_messages._format_kw": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.error_messages._format_quantity": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.error_messages._represent_result": {
  "lineno": 68,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.error_messages.call_string": {
  "lineno": 81,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Callable",
   "typing.Dict"
  ],
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.utils.pytest_helpers.exceptions.InconsistentTypeError": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.pytest_helpers.exceptions.IncorrectResultError": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.pytest_helpers.exceptions.InvalidTestError": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.pytest_helpers.exceptions.MissingExceptionError": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.pytest_helpers.exceptions.MissingWarningError": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.pytest_helpers.exceptions.RunTestError": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.pytest_helpers.exceptions.UnexpectedExceptionError": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.pytest_helpers.exceptions.UnexpectedResultError": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers": {
  "lineno": null,
  "symbols_in_volume": [
   "colorama.Fore.BLUE",
   "colorama.Fore.CYAN",
   "colorama.Fore.MAGENTA",
   "colorama.Fore.RED",
   "colorama.Style.BRIGHT"
  ],
  "type": "module"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers._process_input": {
  "lineno": 52,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers._process_input.decorator": {
  "lineno": 60,
  "symbols_in_volume": [
   "inspect.signature",
   "typing.Callable"
  ],
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers._process_input.decorator.wrapper": {
  "lineno": 63,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.assert_can_handle_nparray": {
  "lineno": 610,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "inspect.signature",
   "numpy.isscalar",
   "plasmapy.utils.exceptions.PlasmaPyWarning",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.assert_can_handle_nparray._prepare_input": {
  "lineno": 652,
  "symbols_in_volume": [
   "astropy.units.G",
   "astropy.units.eV",
   "astropy.units.m",
   "astropy.units.s",
   "inspect._empty",
   "numpy.arange",
   "numpy.nan",
   "numpy.ones",
   "numpy.reshape"
  ],
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.run_test": {
  "lineno": 82,
  "symbols_in_volume": [
   "astropy.constants.Constant",
   "astropy.constants.EMConstant",
   "astropy.units.Quantity",
   "astropy.units.UnitBase",
   "astropy.units.UnitsError",
   "collections.defaultdict",
   "inspect.isclass",
   "numpy.allclose",
   "plasmapy.utils.pytest_helpers.error_messages._exc_str",
   "plasmapy.utils.pytest_helpers.error_messages._represent_result",
   "plasmapy.utils.pytest_helpers.error_messages.call_string",
   "plasmapy.utils.pytest_helpers.exceptions.InconsistentTypeError",
   "plasmapy.utils.pytest_helpers.exceptions.InvalidTestError",
   "plasmapy.utils.pytest_helpers.exceptions.MissingExceptionError",
   "plasmapy.utils.pytest_helpers.exceptions.MissingWarningError",
   "plasmapy.utils.pytest_helpers.exceptions.UnexpectedExceptionError",
   "plasmapy.utils.pytest_helpers.exceptions.UnexpectedResultError",
   "pytest.raises.Exception",
   "pytest.warns",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.run_test_equivalent_calls": {
  "lineno": 413,
  "symbols_in_volume": [
   "plasmapy.utils.pytest_helpers.error_messages.call_string",
   "plasmapy.utils.pytest_helpers.exceptions.InvalidTestError",
   "plasmapy.utils.pytest_helpers.exceptions.UnexpectedExceptionError",
   "plasmapy.utils.pytest_helpers.exceptions.UnexpectedResultError"
  ],
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.units.C",
   "astropy.units.K",
   "astropy.units.Mpc",
   "astropy.units.N",
   "astropy.units.UnitsError",
   "astropy.units.barn",
   "astropy.units.g",
   "astropy.units.kg",
   "astropy.units.m",
   "astropy.units.pc",
   "astropy.units.s",
   "plasmapy.atomic.Particle",
   "plasmapy.utils.exceptions.PlasmaPyError",
   "plasmapy.utils.exceptions.PlasmaPyWarning",
   "plasmapy.utils.pytest_helpers.InconsistentTypeError",
   "plasmapy.utils.pytest_helpers.MissingExceptionError",
   "plasmapy.utils.pytest_helpers.MissingWarningError",
   "plasmapy.utils.pytest_helpers.UnexpectedExceptionError",
   "plasmapy.utils.pytest_helpers.UnexpectedResultError",
   "plasmapy.utils.pytest_helpers.run_test"
  ],
  "type": "module"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.adams_number": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.func": {
  "lineno": 206,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.generic_function": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.issue_warning": {
  "lineno": 33,
  "symbols_in_volume": [
   "plasmapy.utils.exceptions.PlasmaPyWarning",
   "warnings.warn"
  ],
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.raise_exception": {
  "lineno": 26,
  "symbols_in_volume": [
   "plasmapy.utils.exceptions.PlasmaPyError"
  ],
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.return_arg": {
  "lineno": 48,
  "symbols_in_volume": [
   "typing.Any",
   "warnings.warn"
  ],
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.return_quantity": {
  "lineno": 42,
  "symbols_in_volume": [
   "astropy.units.m",
   "astropy.units.s",
   "warnings.warn"
  ],
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.test_call_string": {
  "lineno": 68,
  "symbols_in_volume": [
   "plasmapy.utils.pytest_helpers.call_string",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.test_func": {
  "lineno": 223,
  "symbols_in_volume": [
   "plasmapy.utils.pytest_helpers.run_test",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.test_run_test": {
  "lineno": 126,
  "symbols_in_volume": [
   "plasmapy.utils.pytest_helpers.call_string",
   "plasmapy.utils.pytest_helpers.run_test",
   "pytest.fail",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.test_run_test_atol": {
  "lineno": 196,
  "symbols_in_volume": [
   "plasmapy.utils.pytest_helpers.run_test"
  ],
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.test_run_test_atol_failure": {
  "lineno": 200,
  "symbols_in_volume": [
   "plasmapy.utils.pytest_helpers.UnexpectedResultError",
   "plasmapy.utils.pytest_helpers.run_test",
   "pytest.fail",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.test_run_test_equivalent_calls": {
  "lineno": 349,
  "symbols_in_volume": [
   "plasmapy.utils.pytest_helpers.run_test_equivalent_calls",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.test_run_test_equivalent_calls_types": {
  "lineno": 364,
  "symbols_in_volume": [
   "plasmapy.utils.pytest_helpers.UnexpectedResultError",
   "plasmapy.utils.pytest_helpers.run_test_equivalent_calls",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.test_run_test_rtol": {
  "lineno": 186,
  "symbols_in_volume": [
   "plasmapy.utils.pytest_helpers.run_test"
  ],
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.test_run_test_rtol_failure": {
  "lineno": 190,
  "symbols_in_volume": [
   "plasmapy.utils.pytest_helpers.UnexpectedResultError",
   "plasmapy.utils.pytest_helpers.run_test",
   "pytest.fail",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.utils.roman": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.utils.roman.roman": {
  "lineno": null,
  "symbols_in_volume": [
   "re.VERBOSE",
   "re.compile"
  ],
  "type": "module"
 },
 "plasmapy.utils.roman.roman.InvalidRomanNumeralError": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.roman.roman.OutOfRangeError": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.roman.roman.RomanError": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.roman.roman.from_roman": {
  "lineno": 129,
  "symbols_in_volume": [
   "numbers.Integral"
  ],
  "type": "function"
 },
 "plasmapy.utils.roman.roman.is_roman_numeral": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.utils.roman.roman.to_roman": {
  "lineno": 81,
  "symbols_in_volume": [
   "numbers.Integral",
   "numpy.integer",
   "typing.Union"
  ],
  "type": "function"
 },
 "plasmapy.utils.roman.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.utils.roman.tests.test_roman": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.int",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "plasmapy.utils.roman.InvalidRomanNumeralError",
   "plasmapy.utils.roman.OutOfRangeError"
  ],
  "type": "module"
 },
 "plasmapy.utils.roman.tests.test_roman.test_from_roman": {
  "lineno": 164,
  "symbols_in_volume": [
   "plasmapy.utils.pytest_helpers.run_test",
   "plasmapy.utils.roman.from_roman",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.utils.roman.tests.test_roman.test_from_roman_exceptions": {
  "lineno": 182,
  "symbols_in_volume": [
   "plasmapy.utils.pytest_helpers.run_test",
   "plasmapy.utils.roman.from_roman",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.utils.roman.tests.test_roman.test_is_roman_numeral": {
  "lineno": 203,
  "symbols_in_volume": [
   "plasmapy.utils.pytest_helpers.run_test",
   "plasmapy.utils.roman.is_roman_numeral",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.utils.roman.tests.test_roman.test_to_roman": {
  "lineno": 155,
  "symbols_in_volume": [
   "plasmapy.utils.pytest_helpers.run_test",
   "plasmapy.utils.roman.to_roman",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.utils.roman.tests.test_roman.test_to_roman_exceptions": {
  "lineno": 173,
  "symbols_in_volume": [
   "plasmapy.utils.pytest_helpers.run_test",
   "plasmapy.utils.roman.to_roman",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "plasmapy.utils.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.utils.tests.test_datatype_factory_base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.BaseWidget": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.BaseWidget.__init__": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.DefaultWidget": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.DifferentValidationWidget": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.DifferentValidationWidget.different_validation_function": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.DuplicateStandardWidget": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.DuplicateStandardWidget._factory_validation_function": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.ExternallyValidatedWidget": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.FancyWidget": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.FancyWidget._factory_validation_function": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.MissingClassMethodDifferentValidationWidget": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.MissingClassMethodDifferentValidationWidget.different_validation_function": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.MissingClassMethodWidget": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.MissingClassMethodWidget._factory_validation_function": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.StandardWidget": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.StandardWidget._factory_validation_function": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.TestBasicRegistrationFactory": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.TestBasicRegistrationFactory.test_default_factory": {
  "lineno": 98,
  "symbols_in_volume": [
   "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory",
   "plasmapy.utils.datatype_factory_base.ValidationFunctionError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.TestBasicRegistrationFactory.test_extra_validation_factory": {
  "lineno": 173,
  "symbols_in_volume": [
   "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory",
   "plasmapy.utils.datatype_factory_base.ValidationFunctionError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.TestBasicRegistrationFactory.test_multiple_match_factory": {
  "lineno": 163,
  "symbols_in_volume": [
   "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory",
   "plasmapy.utils.datatype_factory_base.MultipleMatchError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.TestBasicRegistrationFactory.test_no_default_factory": {
  "lineno": 131,
  "symbols_in_volume": [
   "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory",
   "plasmapy.utils.datatype_factory_base.NoMatchError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.TestBasicRegistrationFactory.test_validation_fun_not_callable": {
  "lineno": 125,
  "symbols_in_volume": [
   "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory",
   "pytest.raises"
  ],
  "type": "function"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.TestBasicRegistrationFactory.test_with_external_registry": {
  "lineno": 149,
  "symbols_in_volume": [
   "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory"
  ],
  "type": "function"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.UnvalidatedWidget": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "class"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.external_validation_function": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "plasmapy.version": {
  "lineno": null,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "module"
 },
 "plasmapy.version._decode_stdio": {
  "lineno": 14,
  "symbols_in_volume": [
   "locale.getdefaultlocale"
  ],
  "type": "function"
 },
 "plasmapy.version._get_repo_path": {
  "lineno": 158,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.dirname",
   "os.path.exists",
   "os.path.isdir",
   "os.path.isfile",
   "os.path.join"
  ],
  "type": "function"
 },
 "plasmapy.version.get_git_devstr": {
  "lineno": 56,
  "symbols_in_volume": [
   "os.getcwd",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.isdir"
  ],
  "type": "function"
 },
 "plasmapy.version.get_git_devstr.run_git": {
  "lineno": 98,
  "symbols_in_volume": [
   "subprocess.PIPE",
   "subprocess.Popen",
   "warnings.warn"
  ],
  "type": "function"
 },
 "plasmapy.version.update_git_devstr": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 }
}