{
 "plasmapy": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "ModuleNotFoundError",
    "RuntimeWarning",
    "int",
    "plasmapy.__version__",
    "plasmapy.fallback_version",
    "plasmapy.pkg_resources",
    "plasmapy.sys",
    "plasmapy.warn_add",
    "setuptools_scm.get_version",
    "tuple",
    "warnings.warn"
   ]
  },
  "type": "module"
 },
 "plasmapy.__citation__": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "plasmapy.__version__": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "plasmapy.conftest": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "plasmapy.conftest.matplotlib",
    "plasmapy.conftest.os"
   ]
  },
  "type": "module"
 },
 "plasmapy.conftest.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "plasmapy.conftest.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "plasmapy.conftest.pytest_configure": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "plasmapy.diagnostics": {
  "data": {},
  "type": "module"
 },
 "plasmapy.diagnostics.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "plasmapy.diagnostics.langmuir": {
  "data": {
   "shadows": "plasmapy.diagnostics.langmuir"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.langmuir.Characteristic": {
  "data": {
   "lineno": 59
  },
  "type": "class"
 },
 "plasmapy.diagnostics.langmuir.Characteristic.__add__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "plasmapy.diagnostics.langmuir.copy"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.Characteristic.__getitem__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "plasmapy.diagnostics.langmuir.Characteristic"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.Characteristic.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "astropy.units.A",
    "astropy.units.V",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.Characteristic.__sub__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "plasmapy.diagnostics.langmuir.copy"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.Characteristic._check_validity": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.Characteristic.get_padded_limit": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "astropy.units.A",
    "numpy.abs",
    "numpy.log10",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.Characteristic.get_unique_bias": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.A",
    "len",
    "numpy.append",
    "numpy.mean",
    "numpy.unique",
    "plasmapy.diagnostics.langmuir.Characteristic"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.Characteristic.plot": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "ImportError",
    "ModuleNotFoundError",
    "astropy.units.V",
    "astropy.units.mA",
    "astropy.visualization.quantity_support",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.scatter",
    "matplotlib.pyplot.title",
    "plasmapy.optional_deps.mpl_import_error"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.Characteristic.sort": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.Particle": {
  "data": {
   "shadows": "plasmapy.particles.Particle"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.langmuir.__all__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "plasmapy.diagnostics.langmuir._fit_func_double_lin_inverse": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.piecewise"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir._fit_func_lin": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir._fit_func_lin_inverse": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.const": {
  "data": {
   "shadows": "astropy.constants.si"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.langmuir.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.langmuir.curve_fit": {
  "data": {
   "shadows": "scipy.optimize.curve_fit"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.langmuir.extract_exponential_section": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "TypeError",
    "astropy.constants.si.e",
    "isinstance",
    "numpy.array",
    "numpy.min",
    "plasmapy.diagnostics.langmuir.Characteristic",
    "plasmapy.diagnostics.langmuir.get_floating_potential",
    "plasmapy.diagnostics.langmuir.get_plasma_potential",
    "type"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.extract_ion_section": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "plasmapy.diagnostics.langmuir.Characteristic",
    "plasmapy.diagnostics.langmuir.get_floating_potential",
    "type"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.extrapolate_electron_current": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": [
    "ImportError",
    "ModuleNotFoundError",
    "TypeError",
    "astropy.units.A",
    "astropy.units.V",
    "astropy.units.mA",
    "astropy.visualization.quantity_support",
    "fit_func",
    "isinstance",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.legend",
    "matplotlib.pyplot.plot",
    "matplotlib.pyplot.scatter",
    "numpy.NaN",
    "numpy.exp",
    "numpy.max",
    "plasmapy.diagnostics.langmuir.Characteristic",
    "plasmapy.diagnostics.langmuir._fit_func_double_lin_inverse",
    "plasmapy.diagnostics.langmuir._fit_func_lin_inverse",
    "plasmapy.optional_deps.mpl_import_error",
    "type"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.extrapolate_ion_current_OML": {
  "data": {
   "lineno": 1247,
   "symbols_in_volume": [
    "ImportError",
    "ModuleNotFoundError",
    "TypeError",
    "astropy.units.V",
    "astropy.units.mA",
    "astropy.visualization.quantity_support",
    "isinstance",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.plot",
    "matplotlib.pyplot.scatter",
    "numpy.clip",
    "numpy.sqrt",
    "plasmapy.diagnostics.langmuir.Characteristic",
    "plasmapy.optional_deps.mpl_import_error",
    "type"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.get_EEDF": {
  "data": {
   "lineno": 1315,
   "symbols_in_volume": [
    "ImportError",
    "ModuleNotFoundError",
    "TypeError",
    "astropy.constants.si.e",
    "astropy.units.A",
    "astropy.units.V",
    "astropy.units.eV",
    "astropy.visualization.quantity_support",
    "isinstance",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.grid",
    "matplotlib.pyplot.semilogy",
    "matplotlib.pyplot.title",
    "matplotlib.pyplot.xlabel",
    "matplotlib.pyplot.ylabel",
    "numpy.abs",
    "numpy.gradient",
    "numpy.sqrt",
    "numpy.trapz",
    "plasmapy.diagnostics.langmuir.Characteristic",
    "plasmapy.diagnostics.langmuir.get_floating_potential",
    "plasmapy.diagnostics.langmuir.get_plasma_potential",
    "plasmapy.optional_deps.mpl_import_error",
    "type"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.get_electron_density_LM": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "astropy.constants.si.e",
    "astropy.constants.si.m_e",
    "astropy.units.A",
    "astropy.units.eV",
    "astropy.units.m",
    "astropy.units.temperature_energy",
    "numpy.pi",
    "numpy.sqrt",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.get_electron_saturation_current": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "plasmapy.diagnostics.langmuir.Characteristic",
    "plasmapy.diagnostics.langmuir.get_plasma_potential",
    "type"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.get_electron_temperature": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "ImportError",
    "ModuleNotFoundError",
    "TypeError",
    "astropy.units.A",
    "astropy.units.V",
    "astropy.units.eV",
    "astropy.visualization.quantity_support",
    "fit_func",
    "isinstance",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.legend",
    "matplotlib.pyplot.plot",
    "matplotlib.pyplot.scatter",
    "matplotlib.pyplot.tight_layout",
    "matplotlib.pyplot.title",
    "matplotlib.pyplot.ylabel",
    "numpy.array",
    "numpy.exp",
    "numpy.inf",
    "numpy.log",
    "numpy.max",
    "numpy.min",
    "plasmapy.diagnostics.langmuir.Characteristic",
    "plasmapy.diagnostics.langmuir._fit_func_double_lin_inverse",
    "plasmapy.diagnostics.langmuir._fit_func_lin_inverse",
    "plasmapy.optional_deps.mpl_import_error",
    "scipy.optimize.curve_fit",
    "type"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.get_floating_potential": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numpy.abs",
    "numpy.argmin",
    "plasmapy.diagnostics.langmuir.Characteristic",
    "type"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.get_ion_density_LM": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "astropy.constants.si.e",
    "astropy.units.A",
    "astropy.units.eV",
    "astropy.units.m",
    "astropy.units.temperature_energy",
    "numpy.abs",
    "numpy.sqrt",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.get_ion_density_OML": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": [
    "ImportError",
    "ModuleNotFoundError",
    "TypeError",
    "astropy.constants.si.e",
    "astropy.units.V",
    "astropy.units.m",
    "astropy.units.mA",
    "astropy.visualization.quantity_support",
    "isinstance",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.plot",
    "matplotlib.pyplot.scatter",
    "matplotlib.pyplot.tight_layout",
    "matplotlib.pyplot.title",
    "numpy.pi",
    "numpy.poly1d",
    "numpy.polyfit",
    "numpy.sqrt",
    "plasmapy.diagnostics.langmuir.Characteristic",
    "plasmapy.diagnostics.langmuir.extract_ion_section",
    "plasmapy.optional_deps.mpl_import_error",
    "plasmapy.particles.Particle",
    "plasmapy.utils.decorators.validate_quantities",
    "poly",
    "type"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.get_ion_saturation_current": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numpy.min",
    "plasmapy.diagnostics.langmuir.Characteristic",
    "type"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.get_plasma_potential": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.A",
    "astropy.units.V",
    "isinstance",
    "numpy.argmax",
    "numpy.gradient",
    "plasmapy.diagnostics.langmuir.Characteristic",
    "type"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.mpl_import_error": {
  "data": {
   "shadows": "plasmapy.optional_deps.mpl_import_error"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.langmuir.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.langmuir.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.langmuir.quantity_support": {
  "data": {
   "shadows": "astropy.visualization.quantity_support"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.langmuir.reduce_bimaxwellian_temperature": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "astropy.units.eV",
    "astropy.units.temperature_energy",
    "float",
    "numpy.array",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.swept_probe_analysis": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "ImportError",
    "ModuleNotFoundError",
    "TypeError",
    "astropy.units.m",
    "astropy.visualization.quantity_support",
    "extract_exponential_section",
    "extrapolate_electron_current",
    "extrapolate_ion_current_OML",
    "get_EEDF",
    "get_electron_density_LM",
    "get_electron_saturation_current",
    "get_electron_temperature",
    "get_floating_potential",
    "get_ion_density_LM",
    "get_ion_density_OML",
    "get_ion_saturation_current",
    "get_plasma_potential",
    "isinstance",
    "matplotlib.pyplot.subplots",
    "numpy.abs",
    "plasmapy.diagnostics.langmuir.Characteristic",
    "plasmapy.optional_deps.mpl_import_error",
    "plasmapy.particles.Particle",
    "plasmapy.utils.decorators.validate_quantities",
    "reduce_bimaxwellian_temperature",
    "type"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.langmuir.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.langmuir.validate_quantities": {
  "data": {
   "shadows": "plasmapy.utils.decorators.validate_quantities"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.tests": {
  "data": {},
  "type": "module"
 },
 "plasmapy.diagnostics.tests.test_langmuir": {
  "data": {
   "symbols_in_volume": [
    "astropy.units.A",
    "astropy.units.V",
    "numpy.random.rand",
    "numpy.random.seed",
    "plasmapy.diagnostics.tests.test_langmuir.N"
   ]
  },
  "type": "module"
 },
 "plasmapy.diagnostics.tests.test_langmuir.DryCharacteristic": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "plasmapy.diagnostics.langmuir.Characteristic"
   ]
  },
  "type": "class"
 },
 "plasmapy.diagnostics.tests.test_langmuir.DryCharacteristic.__init__": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.N": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__Characteristic_inherited_methods": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "astropy.units.A",
    "astropy.units.V",
    "int",
    "numpy.array",
    "numpy.random.rand",
    "plasmapy.diagnostics.tests.test_langmuir.N"
   ]
  },
  "type": "class"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__Characteristic_inherited_methods.test_bias_and_current_length_mismatch": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "ValueError",
    "plasmapy.diagnostics.tests.test_langmuir.DryCharacteristic",
    "plasmapy.diagnostics.tests.test_langmuir.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__Characteristic_inherited_methods.test_duplicate_bias_values": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "ValueError",
    "plasmapy.diagnostics.tests.test_langmuir.DryCharacteristic",
    "plasmapy.diagnostics.tests.test_langmuir.current_arr",
    "plasmapy.diagnostics.tests.test_langmuir.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__Characteristic_inherited_methods.test_getpadded_limit": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "astropy.units.A",
    "numpy.allclose",
    "numpy.array",
    "plasmapy.diagnostics.tests.test_langmuir.characteristic",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__Characteristic_inherited_methods.test_inplace_unique_bias": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "isinstance",
    "plasmapy.diagnostics.langmuir.Characteristic",
    "plasmapy.diagnostics.tests.test_langmuir.DryCharacteristic",
    "plasmapy.diagnostics.tests.test_langmuir.bias_arr",
    "plasmapy.diagnostics.tests.test_langmuir.current_arr",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__Characteristic_inherited_methods.test_invalid_bias_dimensions": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "ValueError",
    "plasmapy.diagnostics.tests.test_langmuir.DryCharacteristic",
    "plasmapy.diagnostics.tests.test_langmuir.current_arr",
    "plasmapy.diagnostics.tests.test_langmuir.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__Characteristic_inherited_methods.test_invalid_current_dimensions": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "ValueError",
    "plasmapy.diagnostics.tests.test_langmuir.DryCharacteristic",
    "plasmapy.diagnostics.tests.test_langmuir.bias_arr",
    "plasmapy.diagnostics.tests.test_langmuir.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__characteristic_errors": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "astropy.units.A",
    "astropy.units.V",
    "numpy.append",
    "numpy.array",
    "numpy.inf",
    "numpy.random.rand",
    "plasmapy.diagnostics.tests.test_langmuir.N"
   ]
  },
  "type": "class"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__characteristic_errors.test_addition": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "plasmapy.diagnostics.langmuir.Characteristic",
    "plasmapy.diagnostics.tests.test_langmuir.bias_arr",
    "plasmapy.diagnostics.tests.test_langmuir.current_arr"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__characteristic_errors.test_infinite_I": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError",
    "plasmapy.diagnostics.langmuir.Characteristic",
    "plasmapy.diagnostics.tests.test_langmuir.bias_arr",
    "plasmapy.diagnostics.tests.test_langmuir.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__characteristic_errors.test_infinite_U": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ValueError",
    "plasmapy.diagnostics.langmuir.Characteristic",
    "plasmapy.diagnostics.tests.test_langmuir.current_arr",
    "plasmapy.diagnostics.tests.test_langmuir.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__characteristic_errors.test_invalid_dimensions": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "plasmapy.diagnostics.langmuir.Characteristic"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__characteristic_errors.test_subtraction": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "plasmapy.diagnostics.langmuir.Characteristic",
    "plasmapy.diagnostics.tests.test_langmuir.bias_arr",
    "plasmapy.diagnostics.tests.test_langmuir.current_arr"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__characteristic_errors.test_unequal_arrays": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ValueError",
    "plasmapy.diagnostics.langmuir.Characteristic",
    "plasmapy.diagnostics.tests.test_langmuir.bias_arr",
    "plasmapy.diagnostics.tests.test_langmuir.current_arr",
    "plasmapy.diagnostics.tests.test_langmuir.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__fitting_functions": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__fitting_functions.test_fit_func_double_lin_inverse": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "plasmapy.diagnostics.langmuir._fit_func_double_lin_inverse"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__fitting_functions.test_fit_func_lin": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "plasmapy.diagnostics.langmuir._fit_func_lin"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__fitting_functions.test_fit_func_lin_inverse": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.allclose",
    "plasmapy.diagnostics.langmuir._fit_func_lin_inverse"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__swept_probe_analysis": {
  "data": {
   "lineno": 253
  },
  "type": "class"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__swept_probe_analysis.test_nan_area": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.cm",
    "numpy.nan",
    "plasmapy.diagnostics.langmuir.swept_probe_analysis",
    "plasmapy.diagnostics.tests.test_langmuir.characteristic",
    "plasmapy.diagnostics.tests.test_langmuir.pytest",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__swept_probe_analysis.test_negative_area": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.cm",
    "plasmapy.diagnostics.langmuir.swept_probe_analysis",
    "plasmapy.diagnostics.tests.test_langmuir.characteristic",
    "plasmapy.diagnostics.tests.test_langmuir.pytest",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__swept_probe_analysis.test_ordering_invariance": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "astropy.units.cm",
    "plasmapy.diagnostics.langmuir.swept_probe_analysis",
    "plasmapy.diagnostics.tests.test_langmuir.characteristic_simulated",
    "plasmapy.diagnostics.tests.test_langmuir.pytest",
    "plasmapy.diagnostics.tests.test_langmuir.shuffle_characteristic",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.Test__swept_probe_analysis.test_unit_conversion_error": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "astropy.units.UnitTypeError",
    "astropy.units.cm",
    "plasmapy.diagnostics.langmuir.swept_probe_analysis",
    "plasmapy.diagnostics.tests.test_langmuir.characteristic",
    "plasmapy.diagnostics.tests.test_langmuir.pytest",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.bias_arr": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "plasmapy.diagnostics.tests.test_langmuir.characteristic": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "plasmapy.diagnostics.langmuir.Characteristic",
    "plasmapy.diagnostics.tests.test_langmuir.bias_arr",
    "plasmapy.diagnostics.tests.test_langmuir.current_arr",
    "plasmapy.diagnostics.tests.test_langmuir.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.characteristic_simulated": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "astropy.constants.si.e",
    "astropy.constants.si.m_e",
    "astropy.units.A",
    "astropy.units.V",
    "astropy.units.cm",
    "astropy.units.eV",
    "astropy.units.m",
    "numpy.arange",
    "numpy.exp",
    "numpy.pi",
    "numpy.sqrt",
    "plasmapy.diagnostics.langmuir.Characteristic",
    "plasmapy.diagnostics.tests.test_langmuir.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.const": {
  "data": {
   "shadows": "astropy.constants.si"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.tests.test_langmuir.current_arr": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "plasmapy.diagnostics.tests.test_langmuir.langmuir": {
  "data": {
   "shadows": "plasmapy.diagnostics.langmuir"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.tests.test_langmuir.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.tests.test_langmuir.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.tests.test_langmuir.shuffle_characteristic": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.random.random",
    "plasmapy.diagnostics.langmuir.Characteristic",
    "plasmapy.diagnostics.tests.test_langmuir.characteristic",
    "sorted"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.test_get_EEDF": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "astropy.units.eV",
    "numpy.allclose",
    "numpy.array",
    "plasmapy.diagnostics.langmuir.Characteristic",
    "plasmapy.diagnostics.langmuir.get_EEDF",
    "plasmapy.diagnostics.tests.test_langmuir.bias_arr",
    "plasmapy.diagnostics.tests.test_langmuir.current_arr"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.test_get_floating_potential_with_return_arg": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "astropy.units.V",
    "numpy.allclose",
    "plasmapy.diagnostics.langmuir.get_floating_potential",
    "plasmapy.diagnostics.tests.test_langmuir.characteristic"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.test_get_ion_density_OML_without_return_fit": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "astropy.units.m",
    "numpy.isclose",
    "plasmapy.diagnostics.langmuir.get_ion_density_OML",
    "plasmapy.diagnostics.tests.test_langmuir.characteristic"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_langmuir.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.tests.test_thomson": {
  "data": {},
  "type": "module"
 },
 "plasmapy.diagnostics.tests.test_thomson.Particle": {
  "data": {
   "shadows": "plasmapy.particles.Particle"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.tests.test_thomson.gen_collective_spectrum": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "astropy.units.cm",
    "astropy.units.eV",
    "astropy.units.nm",
    "numpy.arange",
    "numpy.array",
    "plasmapy.diagnostics.thomson.spectral_density"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_thomson.gen_multiple_ion_species_spectrum": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "astropy.units.cm",
    "astropy.units.eV",
    "astropy.units.km",
    "astropy.units.nm",
    "astropy.units.s",
    "numpy.arange",
    "numpy.array",
    "plasmapy.diagnostics.thomson.spectral_density",
    "plasmapy.particles.Particle"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_thomson.gen_non_collective_spectrum": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "astropy.units.cm",
    "astropy.units.eV",
    "astropy.units.nm",
    "numpy.arange",
    "numpy.array",
    "plasmapy.diagnostics.thomson.spectral_density"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_thomson.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.tests.test_thomson.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.tests.test_thomson.test_collective_spectrum": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "numpy.isclose",
    "plasmapy.diagnostics.tests.test_thomson.gen_collective_spectrum",
    "plasmapy.diagnostics.tests.test_thomson.width_at_value"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_thomson.test_different_input_types": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.cm",
    "astropy.units.eV",
    "astropy.units.nm",
    "numpy.arange",
    "numpy.array",
    "plasmapy.diagnostics.tests.test_thomson.pytest",
    "plasmapy.diagnostics.thomson.spectral_density"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_thomson.test_multiple_ion_species_spectrum": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.isclose",
    "numpy.max",
    "plasmapy.diagnostics.tests.test_thomson.gen_multiple_ion_species_spectrum",
    "plasmapy.diagnostics.tests.test_thomson.width_at_value"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_thomson.test_non_collective_spectrum": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "numpy.isclose",
    "plasmapy.diagnostics.tests.test_thomson.gen_non_collective_spectrum",
    "plasmapy.diagnostics.tests.test_thomson.width_at_value"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.tests.test_thomson.thomson": {
  "data": {
   "shadows": "plasmapy.diagnostics.thomson"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.tests.test_thomson.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.tests.test_thomson.width_at_value": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.nan",
    "numpy.nanmax",
    "numpy.nanmin",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.thomson": {
  "data": {
   "shadows": "plasmapy.diagnostics.thomson"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.thomson.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.thomson.Particle": {
  "data": {
   "shadows": "plasmapy.particles.Particle"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.thomson.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.thomson.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.thomson.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "plasmapy.diagnostics.thomson.const": {
  "data": {
   "shadows": "astropy.constants"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.thomson.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.thomson.permittivity_1D_Maxwellian": {
  "data": {
   "shadows": "plasmapy.formulary.dielectric.permittivity_1D_Maxwellian"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.thomson.plasma_frequency": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.plasma_frequency"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.thomson.spectral_density": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "astropy.constants.c.si",
    "astropy.units.K",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.nm",
    "astropy.units.rad",
    "astropy.units.rad.to",
    "astropy.units.s",
    "astropy.units.temperature_energy",
    "enumerate",
    "isinstance",
    "len",
    "numpy.abs",
    "numpy.arccos",
    "numpy.array",
    "numpy.asarray",
    "numpy.complex128",
    "numpy.cos",
    "numpy.dot",
    "numpy.exp",
    "numpy.float64",
    "numpy.floating",
    "numpy.linalg.norm",
    "numpy.matmul",
    "numpy.mean",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.outer",
    "numpy.pi",
    "numpy.pi.to",
    "numpy.power",
    "numpy.real",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros",
    "plasmapy.formulary.dielectric.permittivity_1D_Maxwellian",
    "plasmapy.formulary.parameters.plasma_frequency",
    "plasmapy.formulary.parameters.thermal_speed",
    "plasmapy.particles.Particle",
    "plasmapy.utils.decorators.validate_quantities",
    "range",
    "str",
    "typing.List",
    "typing.Tuple",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "plasmapy.diagnostics.thomson.thermal_speed": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.thermal_speed"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.thomson.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.diagnostics.thomson.validate_quantities": {
  "data": {
   "shadows": "plasmapy.utils.decorators.validate_quantities"
  },
  "type": "import"
 },
 "plasmapy.fallback_version": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "plasmapy.formulary": {
  "data": {},
  "type": "module"
 },
 "plasmapy.formulary.braginskii": {
  "data": {},
  "type": "module"
 },
 "plasmapy.formulary.braginskii.ClassicalTransport": {
  "data": {
   "lineno": 152
  },
  "type": "class"
 },
 "plasmapy.formulary.braginskii.ClassicalTransport.__init__": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "astropy.units.K",
    "astropy.units.T",
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.temperature_energy",
    "plasmapy.formulary.braginskii.warnings",
    "plasmapy.formulary.collisions.Coulomb_logarithm",
    "plasmapy.formulary.parameters.Hall_parameter",
    "plasmapy.formulary.parameters._grab_charge",
    "plasmapy.particles.particle_mass",
    "plasmapy.utils.CouplingWarning",
    "plasmapy.utils.PhysicsError",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii.ClassicalTransport.all_variables": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "dict",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii.ClassicalTransport.electron_thermal_conductivity": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "_nondim_thermal_conductivity",
    "astropy.constants.si.k_B",
    "astropy.constants.si.m_e",
    "astropy.units.K",
    "astropy.units.W",
    "astropy.units.m",
    "plasmapy.formulary.collisions.fundamental_electron_collision_freq",
    "plasmapy.utils.decorators.validate_quantities",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii.ClassicalTransport.electron_viscosity": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "_nondim_viscosity",
    "astropy.constants.si.k_B",
    "astropy.units.Pa",
    "astropy.units.s",
    "numpy.array",
    "numpy.isclose",
    "plasmapy.formulary.collisions.fundamental_electron_collision_freq",
    "plasmapy.utils.decorators.validate_quantities",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii.ClassicalTransport.ion_thermal_conductivity": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "_nondim_thermal_conductivity",
    "astropy.constants.si.k_B",
    "astropy.units.K",
    "astropy.units.W",
    "astropy.units.m",
    "plasmapy.formulary.collisions.fundamental_ion_collision_freq",
    "plasmapy.utils.decorators.validate_quantities",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii.ClassicalTransport.ion_viscosity": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "_nondim_viscosity",
    "astropy.constants.si.k_B",
    "astropy.units.Pa",
    "astropy.units.s",
    "numpy.array",
    "numpy.isclose",
    "plasmapy.formulary.collisions.fundamental_ion_collision_freq",
    "plasmapy.utils.decorators.validate_quantities",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii.ClassicalTransport.resistivity": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "_nondim_resistivity",
    "astropy.constants.si.e",
    "astropy.constants.si.m_e",
    "astropy.units.Ohm",
    "astropy.units.m",
    "plasmapy.formulary.collisions.fundamental_electron_collision_freq",
    "plasmapy.utils.decorators.validate_quantities",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii.ClassicalTransport.thermoelectric_conductivity": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "_nondim_te_conductivity",
    "astropy.units.Quantity",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii.Coulomb_logarithm": {
  "data": {
   "shadows": "plasmapy.formulary.collisions.Coulomb_logarithm"
  },
  "type": "import"
 },
 "plasmapy.formulary.braginskii.Hall_parameter": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.Hall_parameter"
  },
  "type": "import"
 },
 "plasmapy.formulary.braginskii.PhysicsError": {
  "data": {
   "shadows": "plasmapy.utils.PhysicsError"
  },
  "type": "import"
 },
 "plasmapy.formulary.braginskii.__all__": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "plasmapy.formulary.braginskii._check_Z": {
  "data": {
   "lineno": 1158,
   "symbols_in_volume": [
    "enumerate",
    "numpy.isnan",
    "numpy.nan",
    "plasmapy.utils.PhysicsError"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._get_spitzer_harm_coeffs": {
  "data": {
   "lineno": 1185,
   "symbols_in_volume": [
    "numpy.inf",
    "plasmapy.formulary.braginskii._check_Z"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._grab_charge": {
  "data": {
   "shadows": "plasmapy.formulary.parameters._grab_charge"
  },
  "type": "import"
 },
 "plasmapy.formulary.braginskii._is_electron": {
  "data": {
   "shadows": "plasmapy.particles.atomic._is_electron"
  },
  "type": "import"
 },
 "plasmapy.formulary.braginskii._nondim_resist_braginskii": {
  "data": {
   "lineno": 1410,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.inf",
    "plasmapy.formulary.braginskii._check_Z"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resist_ji_held": {
  "data": {
   "lineno": 1642,
   "symbols_in_volume": [
    "f_a_0",
    "f_a_1",
    "f_a_2",
    "f_a_3",
    "f_a_4",
    "f_a_5",
    "f_alpha_0",
    "f_alpha_1",
    "f_alpha_2",
    "f_alpha_cross",
    "f_alpha_par_e",
    "f_alpha_perp",
    "float",
    "numpy.abs",
    "numpy.array",
    "plasmapy.formulary.braginskii._check_Z"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resist_ji_held.f_a_0": {
  "data": {
   "lineno": 1669
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resist_ji_held.f_a_1": {
  "data": {
   "lineno": 1672
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resist_ji_held.f_a_2": {
  "data": {
   "lineno": 1675
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resist_ji_held.f_a_3": {
  "data": {
   "lineno": 1678
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resist_ji_held.f_a_4": {
  "data": {
   "lineno": 1681
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resist_ji_held.f_a_5": {
  "data": {
   "lineno": 1684
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resist_ji_held.f_alpha_0": {
  "data": {
   "lineno": 1660
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resist_ji_held.f_alpha_1": {
  "data": {
   "lineno": 1663
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resist_ji_held.f_alpha_2": {
  "data": {
   "lineno": 1666
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resist_ji_held.f_alpha_cross": {
  "data": {
   "lineno": 1716
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resist_ji_held.f_alpha_par_e": {
  "data": {
   "lineno": 1655
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resist_ji_held.f_alpha_perp": {
  "data": {
   "lineno": 1702
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resist_spitzer": {
  "data": {
   "lineno": 1209,
   "symbols_in_volume": [
    "numpy.pi",
    "plasmapy.formulary.braginskii._get_spitzer_harm_coeffs"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_resistivity": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "ValueError",
    "_nondim_resist_braginskii",
    "_nondim_resist_ji_held",
    "_nondim_resist_spitzer"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_braginskii": {
  "data": {
   "lineno": 1242,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.inf",
    "plasmapy.formulary.braginskii._check_Z"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held": {
  "data": {
   "lineno": 1516,
   "symbols_in_volume": [
    "f_k_0",
    "f_k_1",
    "f_k_2",
    "f_k_3",
    "f_k_4",
    "f_k_5",
    "f_kappa_0",
    "f_kappa_1",
    "f_kappa_2",
    "f_kappa_3",
    "f_kappa_4",
    "f_kappa_cross",
    "f_kappa_par_e",
    "f_kappa_perp",
    "float",
    "numpy.abs",
    "numpy.array",
    "plasmapy.formulary.braginskii._check_Z"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held.f_k_0": {
  "data": {
   "lineno": 1559
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held.f_k_1": {
  "data": {
   "lineno": 1564
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held.f_k_2": {
  "data": {
   "lineno": 1569
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held.f_k_3": {
  "data": {
   "lineno": 1574
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held.f_k_4": {
  "data": {
   "lineno": 1579
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held.f_k_5": {
  "data": {
   "lineno": 1584
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held.f_kappa_0": {
  "data": {
   "lineno": 1534
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held.f_kappa_1": {
  "data": {
   "lineno": 1539
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held.f_kappa_2": {
  "data": {
   "lineno": 1544
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held.f_kappa_3": {
  "data": {
   "lineno": 1549
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held.f_kappa_4": {
  "data": {
   "lineno": 1554
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held.f_kappa_cross": {
  "data": {
   "lineno": 1622
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held.f_kappa_par_e": {
  "data": {
   "lineno": 1529
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_ji_held.f_kappa_perp": {
  "data": {
   "lineno": 1606,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_e_spitzer": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "numpy.pi",
    "plasmapy.formulary.braginskii._get_spitzer_harm_coeffs"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_i_braginskii": {
  "data": {
   "lineno": 1290,
   "symbols_in_volume": [
    "float",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tc_i_ji_held": {
  "data": {
   "lineno": 1943,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_te_conductivity": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "ValueError",
    "_nondim_tec_braginskii",
    "_nondim_tec_ji_held",
    "_nondim_tec_spitzer"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_braginskii": {
  "data": {
   "lineno": 1463,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.inf",
    "plasmapy.formulary.braginskii._check_Z"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held": {
  "data": {
   "lineno": 1736,
   "symbols_in_volume": [
    "f_b_0",
    "f_b_1",
    "f_b_2",
    "f_b_3",
    "f_b_4",
    "f_b_5",
    "f_beta_0",
    "f_beta_1",
    "f_beta_2",
    "f_beta_3",
    "f_beta_4",
    "f_beta_cross",
    "f_beta_par_e",
    "f_beta_perp",
    "float",
    "numpy.abs",
    "numpy.array",
    "plasmapy.formulary.braginskii._check_Z"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held.f_b_0": {
  "data": {
   "lineno": 1769
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held.f_b_1": {
  "data": {
   "lineno": 1774
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held.f_b_2": {
  "data": {
   "lineno": 1777
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held.f_b_3": {
  "data": {
   "lineno": 1780
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held.f_b_4": {
  "data": {
   "lineno": 1783
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held.f_b_5": {
  "data": {
   "lineno": 1786
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held.f_beta_0": {
  "data": {
   "lineno": 1754
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held.f_beta_1": {
  "data": {
   "lineno": 1757
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held.f_beta_2": {
  "data": {
   "lineno": 1760
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held.f_beta_3": {
  "data": {
   "lineno": 1763
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held.f_beta_4": {
  "data": {
   "lineno": 1766
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held.f_beta_cross": {
  "data": {
   "lineno": 1822
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held.f_beta_par_e": {
  "data": {
   "lineno": 1749
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_ji_held.f_beta_perp": {
  "data": {
   "lineno": 1806
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_tec_spitzer": {
  "data": {
   "lineno": 1231,
   "symbols_in_volume": [
    "plasmapy.formulary.braginskii._get_spitzer_harm_coeffs"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_thermal_conductivity": {
  "data": {
   "lineno": 1058,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "_nondim_tc_e_braginskii",
    "_nondim_tc_e_ji_held",
    "_nondim_tc_e_spitzer",
    "_nondim_tc_i_braginskii",
    "_nondim_tc_i_ji_held",
    "plasmapy.particles.atomic._is_electron"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_braginskii": {
  "data": {
   "lineno": 1339,
   "symbols_in_volume": [
    "eta_2",
    "f_eta_4",
    "float",
    "numpy.array",
    "plasmapy.formulary.braginskii._check_Z"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_braginskii.eta_2": {
  "data": {
   "lineno": 1359
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_braginskii.f_eta_4": {
  "data": {
   "lineno": 1366
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held": {
  "data": {
   "lineno": 1842,
   "symbols_in_volume": [
    "eta_2",
    "f_eta_0_e",
    "f_eta_2",
    "f_eta_4",
    "f_h_0",
    "f_h_1",
    "f_h_2",
    "f_h_3",
    "f_h_4",
    "f_h_5",
    "f_hprime_0",
    "f_hprime_1",
    "f_hprime_2",
    "f_hprime_3",
    "f_hprime_4",
    "float",
    "numpy.abs",
    "numpy.array",
    "plasmapy.formulary.braginskii._check_Z"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held.f_eta_0_e": {
  "data": {
   "lineno": 1855
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held.f_eta_2": {
  "data": {
   "lineno": 1906,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held.f_eta_4": {
  "data": {
   "lineno": 1924
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held.f_h_0": {
  "data": {
   "lineno": 1873
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held.f_h_1": {
  "data": {
   "lineno": 1876
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held.f_h_2": {
  "data": {
   "lineno": 1879
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held.f_h_3": {
  "data": {
   "lineno": 1882
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held.f_h_4": {
  "data": {
   "lineno": 1885
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held.f_h_5": {
  "data": {
   "lineno": 1888
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held.f_hprime_0": {
  "data": {
   "lineno": 1858
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held.f_hprime_1": {
  "data": {
   "lineno": 1861
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held.f_hprime_2": {
  "data": {
   "lineno": 1864
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held.f_hprime_3": {
  "data": {
   "lineno": 1867
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_e_ji_held.f_hprime_4": {
  "data": {
   "lineno": 1870
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_i_braginskii": {
  "data": {
   "lineno": 1375,
   "symbols_in_volume": [
    "f_eta_2",
    "f_eta_4",
    "float",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_i_braginskii.f_eta_2": {
  "data": {
   "lineno": 1394
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_i_braginskii.f_eta_4": {
  "data": {
   "lineno": 1401
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_i_ji_held": {
  "data": {
   "lineno": 2032,
   "symbols_in_volume": [
    "Delta_perp_i2",
    "f_eta_2",
    "f_eta_4",
    "numpy.abs",
    "numpy.array",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_i_ji_held.Delta_perp_i2": {
  "data": {
   "lineno": 2103,
   "symbols_in_volume": [
    "Delta_perp_i2"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_i_ji_held.f_eta_2": {
  "data": {
   "lineno": 2114,
   "symbols_in_volume": [
    "Delta_perp_i2",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_visc_i_ji_held.f_eta_4": {
  "data": {
   "lineno": 2124,
   "symbols_in_volume": [
    "Delta_perp_i2"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii._nondim_viscosity": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "_nondim_visc_e_braginskii",
    "_nondim_visc_e_ji_held",
    "_nondim_visc_i_braginskii",
    "_nondim_visc_i_ji_held",
    "plasmapy.particles.atomic._is_electron"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii.e": {
  "data": {
   "shadows": "astropy.constants.si.e"
  },
  "type": "import"
 },
 "plasmapy.formulary.braginskii.electron_thermal_conductivity": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.T",
    "astropy.units.W",
    "astropy.units.m",
    "plasmapy.formulary.braginskii.ClassicalTransport",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii.electron_viscosity": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "astropy.units.Pa",
    "astropy.units.T",
    "astropy.units.s",
    "plasmapy.formulary.braginskii.ClassicalTransport",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii.fundamental_electron_collision_freq": {
  "data": {
   "shadows": "plasmapy.formulary.collisions.fundamental_electron_collision_freq"
  },
  "type": "import"
 },
 "plasmapy.formulary.braginskii.fundamental_ion_collision_freq": {
  "data": {
   "shadows": "plasmapy.formulary.collisions.fundamental_ion_collision_freq"
  },
  "type": "import"
 },
 "plasmapy.formulary.braginskii.ion_thermal_conductivity": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.T",
    "astropy.units.W",
    "astropy.units.m",
    "plasmapy.formulary.braginskii.ClassicalTransport",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii.ion_viscosity": {
  "data": {
   "lineno": 950,
   "symbols_in_volume": [
    "astropy.units.Pa",
    "astropy.units.T",
    "astropy.units.s",
    "plasmapy.formulary.braginskii.ClassicalTransport",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii.k_B": {
  "data": {
   "shadows": "astropy.constants.si.k_B"
  },
  "type": "import"
 },
 "plasmapy.formulary.braginskii.m_e": {
  "data": {
   "shadows": "astropy.constants.si.m_e"
  },
  "type": "import"
 },
 "plasmapy.formulary.braginskii.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.formulary.braginskii.particles": {
  "data": {
   "shadows": "plasmapy.particles"
  },
  "type": "import"
 },
 "plasmapy.formulary.braginskii.resistivity": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "astropy.units.Ohm",
    "astropy.units.T",
    "astropy.units.m",
    "plasmapy.formulary.braginskii.ClassicalTransport",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii.thermoelectric_conductivity": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "astropy.units.T",
    "plasmapy.formulary.braginskii.ClassicalTransport",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.braginskii.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.formulary.braginskii.utils": {
  "data": {
   "shadows": "plasmapy.utils"
  },
  "type": "import"
 },
 "plasmapy.formulary.braginskii.validate_quantities": {
  "data": {
   "shadows": "plasmapy.utils.decorators.validate_quantities"
  },
  "type": "import"
 },
 "plasmapy.formulary.braginskii.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "plasmapy.formulary.collisions": {
  "data": {},
  "type": "module"
 },
 "plasmapy.formulary.collisions.Coulomb_cross_section": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "astropy.units.m",
    "numpy.pi",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.collisions.Coulomb_logarithm": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.K",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "astropy.units.temperature_energy",
    "impact_parameter",
    "numpy.any",
    "numpy.errstate",
    "numpy.isscalar",
    "numpy.log",
    "numpy.nan",
    "plasmapy.formulary.collisions.warnings",
    "plasmapy.particles.Particle",
    "plasmapy.particles.particle_input",
    "plasmapy.utils.CouplingWarning",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.collisions.Fermi_integral": {
  "data": {
   "shadows": "plasmapy.formulary.mathematics.Fermi_integral"
  },
  "type": "import"
 },
 "plasmapy.formulary.collisions.Knudsen_number": {
  "data": {
   "lineno": 1472,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "astropy.units.temperature_energy",
    "numpy.nan",
    "plasmapy.formulary.collisions.mean_free_path",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.collisions.Spitzer_resistivity": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": [
    "astropy.constants.si.e",
    "astropy.units.K",
    "astropy.units.Ohm",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "astropy.units.temperature_energy",
    "numpy.isnan",
    "numpy.nan",
    "plasmapy.formulary.collisions._boilerPlate",
    "plasmapy.formulary.collisions.collision_frequency",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.collisions.Wigner_Seitz_radius": {
  "data": {
   "shadows": "plasmapy.formulary.quantum.Wigner_Seitz_radius"
  },
  "type": "import"
 },
 "plasmapy.formulary.collisions.__all__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "plasmapy.formulary.collisions._boilerPlate": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "_replaceNanVwithThermalV",
    "astropy.units.K",
    "astropy.units.temperature_energy",
    "numpy.abs",
    "plasmapy.particles.Particle",
    "plasmapy.particles.particle_input",
    "plasmapy.particles.reduced_mass",
    "plasmapy.utils.decorators.checks._check_relativistic",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.collisions._check_relativistic": {
  "data": {
   "shadows": "plasmapy.utils.decorators.checks._check_relativistic"
  },
  "type": "import"
 },
 "plasmapy.formulary.collisions._replaceNanVwithThermalV": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.isnan",
    "numpy.isscalar",
    "plasmapy.formulary.parameters.thermal_speed",
    "plasmapy.utils.PhysicsError"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.collisions.c": {
  "data": {
   "shadows": "astropy.constants.si.c"
  },
  "type": "import"
 },
 "plasmapy.formulary.collisions.chemical_potential": {
  "data": {
   "shadows": "plasmapy.formulary.quantum.chemical_potential"
  },
  "type": "import"
 },
 "plasmapy.formulary.collisions.collision_frequency": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "Coulomb_cross_section",
    "astropy.constants.si.m_e",
    "astropy.units.Hz",
    "astropy.units.K",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "astropy.units.temperature_energy",
    "numpy.nan",
    "plasmapy.formulary.collisions.Coulomb_logarithm",
    "plasmapy.formulary.collisions._boilerPlate",
    "plasmapy.formulary.collisions._replaceNanVwithThermalV",
    "plasmapy.formulary.collisions.impact_parameter_perp",
    "plasmapy.utils.decorators.validate_quantities",
    "print"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.collisions.coupling_parameter": {
  "data": {
   "lineno": 1592,
   "symbols_in_volume": [
    "ValueError",
    "astropy.constants.si.e",
    "astropy.constants.si.eps0",
    "astropy.constants.si.k_B",
    "astropy.units.K",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "astropy.units.temperature_energy",
    "numpy.abs",
    "numpy.all",
    "numpy.imag",
    "numpy.isnan",
    "numpy.nan",
    "numpy.pi",
    "numpy.real",
    "plasmapy.formulary.collisions._boilerPlate",
    "plasmapy.formulary.mathematics.Fermi_integral",
    "plasmapy.formulary.quantum.Wigner_Seitz_radius",
    "plasmapy.formulary.quantum.chemical_potential",
    "plasmapy.formulary.quantum.thermal_deBroglie_wavelength",
    "plasmapy.particles.integer_charge",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.collisions.e": {
  "data": {
   "shadows": "astropy.constants.si.e"
  },
  "type": "import"
 },
 "plasmapy.formulary.collisions.eps0": {
  "data": {
   "shadows": "astropy.constants.si.eps0"
  },
  "type": "import"
 },
 "plasmapy.formulary.collisions.fundamental_electron_collision_freq": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "astropy.constants.si.m_e",
    "astropy.units.K",
    "astropy.units.m",
    "astropy.units.s",
    "astropy.units.temperature_energy",
    "numpy.any",
    "numpy.pi",
    "numpy.sqrt",
    "plasmapy.formulary.collisions.Coulomb_logarithm",
    "plasmapy.formulary.collisions._replaceNanVwithThermalV",
    "plasmapy.formulary.collisions.collision_frequency",
    "plasmapy.particles.integer_charge",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.collisions.fundamental_ion_collision_freq": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.m",
    "astropy.units.s",
    "astropy.units.temperature_energy",
    "numpy.any",
    "numpy.pi",
    "numpy.sqrt",
    "plasmapy.formulary.collisions.Coulomb_logarithm",
    "plasmapy.formulary.collisions._replaceNanVwithThermalV",
    "plasmapy.formulary.collisions.collision_frequency",
    "plasmapy.particles.integer_charge",
    "plasmapy.particles.particle_mass",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.collisions.hbar": {
  "data": {
   "shadows": "astropy.constants.si.hbar"
  },
  "type": "import"
 },
 "plasmapy.formulary.collisions.impact_parameter": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "ValueError",
    "astropy.constants.si.hbar",
    "astropy.units.K",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "astropy.units.temperature_energy",
    "len",
    "numpy.isnan",
    "numpy.isscalar",
    "numpy.nan",
    "numpy.repeat",
    "plasmapy.formulary.collisions._boilerPlate",
    "plasmapy.formulary.collisions.impact_parameter_perp",
    "plasmapy.formulary.parameters.Debye_length",
    "plasmapy.formulary.quantum.Wigner_Seitz_radius",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.collisions.impact_parameter_perp": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "astropy.constants.si.eps0",
    "astropy.units.K",
    "astropy.units.m",
    "astropy.units.s",
    "astropy.units.temperature_energy",
    "numpy.nan",
    "numpy.pi",
    "plasmapy.formulary.collisions._boilerPlate",
    "plasmapy.particles.Particle",
    "plasmapy.particles.particle_input",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.collisions.k_B": {
  "data": {
   "shadows": "astropy.constants.si.k_B"
  },
  "type": "import"
 },
 "plasmapy.formulary.collisions.m_e": {
  "data": {
   "shadows": "astropy.constants.si.m_e"
  },
  "type": "import"
 },
 "plasmapy.formulary.collisions.mean_free_path": {
  "data": {
   "lineno": 1103,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "astropy.units.temperature_energy",
    "numpy.nan",
    "plasmapy.formulary.collisions._boilerPlate",
    "plasmapy.formulary.collisions.collision_frequency",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.collisions.mobility": {
  "data": {
   "lineno": 1346,
   "symbols_in_volume": [
    "astropy.constants.si.e",
    "astropy.units.K",
    "astropy.units.V",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "astropy.units.temperature_energy",
    "numpy.isnan",
    "numpy.nan",
    "plasmapy.formulary.collisions._boilerPlate",
    "plasmapy.formulary.collisions.collision_frequency",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.collisions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.formulary.collisions.parameters": {
  "data": {
   "shadows": "plasmapy.formulary.parameters"
  },
  "type": "import"
 },
 "plasmapy.formulary.collisions.particles": {
  "data": {
   "shadows": "plasmapy.particles"
  },
  "type": "import"
 },
 "plasmapy.formulary.collisions.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "plasmapy.formulary.collisions.thermal_deBroglie_wavelength": {
  "data": {
   "shadows": "plasmapy.formulary.quantum.thermal_deBroglie_wavelength"
  },
  "type": "import"
 },
 "plasmapy.formulary.collisions.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.formulary.collisions.utils": {
  "data": {
   "shadows": "plasmapy.utils"
  },
  "type": "import"
 },
 "plasmapy.formulary.collisions.validate_quantities": {
  "data": {
   "shadows": "plasmapy.utils.decorators.validate_quantities"
  },
  "type": "import"
 },
 "plasmapy.formulary.collisions.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "plasmapy.formulary.dielectric": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "plasmapy.formulary.dielectric.RotatingTensorElements": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "plasmapy.formulary.dielectric.StixTensorElements": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "plasmapy.formulary.dielectric.__all__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "plasmapy.formulary.dielectric.cold_plasma_permittivity_LRP": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "astropy.units.T",
    "astropy.units.rad",
    "astropy.units.s",
    "plasmapy.formulary.dielectric.RotatingTensorElements",
    "plasmapy.formulary.parameters.gyrofrequency",
    "plasmapy.formulary.parameters.plasma_frequency",
    "plasmapy.utils.decorators.validate_quantities",
    "zip"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.dielectric.cold_plasma_permittivity_SDP": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "astropy.units.T",
    "astropy.units.rad",
    "astropy.units.s",
    "plasmapy.formulary.dielectric.StixTensorElements",
    "plasmapy.formulary.parameters.gyrofrequency",
    "plasmapy.formulary.parameters.plasma_frequency",
    "plasmapy.utils.decorators.validate_quantities",
    "zip"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.dielectric.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "plasmapy.formulary.dielectric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.formulary.dielectric.parameters": {
  "data": {
   "shadows": "plasmapy.formulary.parameters"
  },
  "type": "import"
 },
 "plasmapy.formulary.dielectric.permittivity_1D_Maxwellian": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s",
    "numpy.sqrt",
    "plasmapy.formulary.dispersionfunction.plasma_dispersion_func_deriv",
    "plasmapy.formulary.parameters.plasma_frequency",
    "plasmapy.formulary.parameters.thermal_speed",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.dielectric.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "plasmapy.formulary.dielectric.plasma_dispersion_func_deriv": {
  "data": {
   "shadows": "plasmapy.formulary.dispersionfunction.plasma_dispersion_func_deriv"
  },
  "type": "import"
 },
 "plasmapy.formulary.dielectric.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.formulary.dielectric.validate_quantities": {
  "data": {
   "shadows": "plasmapy.utils.decorators.validate_quantities"
  },
  "type": "import"
 },
 "plasmapy.formulary.dimensionless": {
  "data": {
   "symbols_in_volume": [
    "plasmapy.formulary.dimensionless.Mag_Reynolds",
    "plasmapy.formulary.dimensionless.Reynolds_number"
   ]
  },
  "type": "module"
 },
 "plasmapy.formulary.dimensionless.Mag_Reynolds": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "abs",
    "astropy.constants.codata2010.mu0",
    "astropy.units.S",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.dimensionless.Re_": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "plasmapy.formulary.dimensionless.Reynolds_number": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "abs",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.s",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.dimensionless.Rm_": {
  "data": {
   "lineno": 245
  },
  "type": "constant"
 },
 "plasmapy.formulary.dimensionless.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "plasmapy.formulary.dimensionless.beta": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.T",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.temperature_energy",
    "plasmapy.formulary.parameters.magnetic_pressure",
    "plasmapy.formulary.parameters.thermal_pressure",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.dimensionless.c": {
  "data": {
   "shadows": "astropy.constants.c"
  },
  "type": "import"
 },
 "plasmapy.formulary.dimensionless.constants": {
  "data": {
   "shadows": "astropy.constants"
  },
  "type": "import"
 },
 "plasmapy.formulary.dimensionless.electron_viscosity": {
  "data": {
   "shadows": "plasmapy.formulary.electron_viscosity"
  },
  "type": "import"
 },
 "plasmapy.formulary.dimensionless.mu0": {
  "data": {
   "shadows": "astropy.constants.codata2010.mu0"
  },
  "type": "import"
 },
 "plasmapy.formulary.dimensionless.parameters": {
  "data": {
   "shadows": "plasmapy.formulary.parameters"
  },
  "type": "import"
 },
 "plasmapy.formulary.dimensionless.quantum": {
  "data": {
   "shadows": "plasmapy.formulary.quantum"
  },
  "type": "import"
 },
 "plasmapy.formulary.dimensionless.quantum_theta": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "astropy.constants.k_B",
    "astropy.units.K",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.temperature_energy",
    "plasmapy.formulary.quantum.Fermi_energy",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.dimensionless.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.formulary.dimensionless.validate_quantities": {
  "data": {
   "shadows": "plasmapy.utils.decorators.validate_quantities"
  },
  "type": "import"
 },
 "plasmapy.formulary.dispersionfunction": {
  "data": {},
  "type": "module"
 },
 "plasmapy.formulary.dispersionfunction.Faddeeva_function": {
  "data": {
   "shadows": "scipy.special.wofz"
  },
  "type": "import"
 },
 "plasmapy.formulary.dispersionfunction.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "plasmapy.formulary.dispersionfunction.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.formulary.dispersionfunction.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "plasmapy.formulary.dispersionfunction.plasma_dispersion_func": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.units.Quantity",
    "astropy.units.UnitsError",
    "astropy.units.dimensionless_unscaled",
    "complex",
    "float",
    "int",
    "isinstance",
    "numpy.all",
    "numpy.isfinite",
    "numpy.ndarray",
    "numpy.pi",
    "numpy.sqrt",
    "plasmapy.formulary.dispersionfunction.numbers",
    "scipy.special.wofz",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.dispersionfunction.plasma_dispersion_func_deriv": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.units.Quantity",
    "astropy.units.UnitsError",
    "astropy.units.dimensionless_unscaled",
    "complex",
    "float",
    "int",
    "isinstance",
    "numpy.all",
    "numpy.isfinite",
    "numpy.ndarray",
    "plasmapy.formulary.dispersionfunction.numbers",
    "plasmapy.formulary.dispersionfunction.plasma_dispersion_func",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.dispersionfunction.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.formulary.distribution": {
  "data": {},
  "type": "module"
 },
 "plasmapy.formulary.distribution.Maxwellian_1D": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "astropy.units",
    "astropy.units.K",
    "astropy.units.m",
    "astropy.units.s",
    "astropy.units.temperature_energy",
    "numpy.exp",
    "numpy.isnan",
    "numpy.nan",
    "numpy.pi",
    "plasmapy.formulary.distribution._v_drift_units",
    "plasmapy.formulary.parameters.thermal_speed"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.distribution.Maxwellian_speed_1D": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "astropy.units",
    "astropy.units.K",
    "astropy.units.m",
    "astropy.units.s",
    "astropy.units.temperature_energy",
    "numpy.exp",
    "numpy.isnan",
    "numpy.nan",
    "numpy.pi",
    "plasmapy.formulary.distribution._v_drift_units",
    "plasmapy.formulary.parameters.thermal_speed"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.distribution.Maxwellian_speed_2D": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "NotImplementedError",
    "astropy.units",
    "astropy.units.K",
    "astropy.units.m",
    "astropy.units.s",
    "astropy.units.temperature_energy",
    "numpy.exp",
    "numpy.isnan",
    "numpy.nan",
    "numpy.pi",
    "plasmapy.formulary.distribution._v_drift_units",
    "plasmapy.formulary.parameters.thermal_speed"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.distribution.Maxwellian_speed_3D": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "NotImplementedError",
    "astropy.units",
    "astropy.units.K",
    "astropy.units.m",
    "astropy.units.s",
    "astropy.units.temperature_energy",
    "numpy.exp",
    "numpy.isnan",
    "numpy.nan",
    "numpy.pi",
    "plasmapy.formulary.distribution._v_drift_units",
    "plasmapy.formulary.parameters.thermal_speed"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.distribution.Maxwellian_velocity_2D": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "astropy.units",
    "astropy.units.K",
    "astropy.units.m",
    "astropy.units.s",
    "astropy.units.temperature_energy",
    "numpy.exp",
    "numpy.isnan",
    "numpy.nan",
    "numpy.pi",
    "plasmapy.formulary.distribution._v_drift_units",
    "plasmapy.formulary.parameters.thermal_speed"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.distribution.Maxwellian_velocity_3D": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "astropy.units",
    "astropy.units.K",
    "astropy.units.m",
    "astropy.units.s",
    "astropy.units.temperature_energy",
    "numpy.exp",
    "numpy.isnan",
    "numpy.nan",
    "numpy.pi",
    "plasmapy.formulary.distribution._v_drift_units",
    "plasmapy.formulary.parameters.thermal_speed"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.distribution.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "plasmapy.formulary.distribution._v_drift_units": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.s",
    "isinstance",
    "plasmapy.formulary.distribution.astropy"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.distribution.astropy": {
  "data": {
   "shadows": "astropy"
  },
  "type": "import"
 },
 "plasmapy.formulary.distribution.gamma": {
  "data": {
   "shadows": "scipy.special.gamma"
  },
  "type": "import"
 },
 "plasmapy.formulary.distribution.kappa_velocity_1D": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units",
    "astropy.units.K",
    "astropy.units.m",
    "astropy.units.s",
    "astropy.units.temperature_energy",
    "isinstance",
    "numpy.isnan",
    "numpy.nan",
    "numpy.pi",
    "numpy.sqrt",
    "plasmapy.formulary.distribution.astropy",
    "plasmapy.formulary.parameters.kappa_thermal_speed",
    "scipy.special.gamma"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.distribution.kappa_velocity_3D": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units",
    "astropy.units.K",
    "astropy.units.m",
    "astropy.units.s",
    "astropy.units.temperature_energy",
    "numpy.isnan",
    "numpy.nan",
    "numpy.pi",
    "plasmapy.formulary.distribution._v_drift_units",
    "plasmapy.formulary.parameters.kappa_thermal_speed",
    "scipy.special.gamma"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.distribution.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.formulary.distribution.parameters": {
  "data": {
   "shadows": "plasmapy.formulary.parameters"
  },
  "type": "import"
 },
 "plasmapy.formulary.distribution.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.formulary.drifts": {
  "data": {
   "symbols_in_volume": [
    "plasmapy.formulary.drifts.ExB_drift",
    "plasmapy.formulary.drifts.force_drift"
   ]
  },
  "type": "module"
 },
 "plasmapy.formulary.drifts.ExB_drift": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "astropy.units.T",
    "astropy.units.V",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.cross",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.drifts.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "plasmapy.formulary.drifts.force_drift": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "astropy.units.C",
    "astropy.units.N",
    "astropy.units.T",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.cross",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.drifts.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.formulary.drifts.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.formulary.drifts.validate_quantities": {
  "data": {
   "shadows": "plasmapy.utils.decorators.validate_quantities"
  },
  "type": "import"
 },
 "plasmapy.formulary.drifts.veb_": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "plasmapy.formulary.drifts.vfd_": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "plasmapy.formulary.ionization": {
  "data": {
   "symbols_in_volume": [
    "plasmapy.formulary.ionization.ionization_balance"
   ]
  },
  "type": "module"
 },
 "plasmapy.formulary.ionization.Saha": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "astropy.constants.a0",
    "astropy.constants.k_B",
    "astropy.units.J",
    "astropy.units.K",
    "astropy.units.Ry",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.temperature_energy",
    "numpy.exp",
    "numpy.pi",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.ionization.Z_bal_": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "plasmapy.formulary.ionization.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "plasmapy.formulary.ionization.a0": {
  "data": {
   "shadows": "astropy.constants.a0"
  },
  "type": "import"
 },
 "plasmapy.formulary.ionization.check_relativistic": {
  "data": {
   "shadows": "plasmapy.utils.decorators.check_relativistic"
  },
  "type": "import"
 },
 "plasmapy.formulary.ionization.exp": {
  "data": {
   "shadows": "numpy.exp"
  },
  "type": "import"
 },
 "plasmapy.formulary.ionization.ionization_balance": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "astropy.constants.a0",
    "astropy.constants.k_B",
    "astropy.units.K",
    "astropy.units.Ry",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.temperature_energy",
    "numpy.log",
    "numpy.pi",
    "numpy.sqrt",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.ionization.k_B": {
  "data": {
   "shadows": "astropy.constants.k_B"
  },
  "type": "import"
 },
 "plasmapy.formulary.ionization.log": {
  "data": {
   "shadows": "numpy.log"
  },
  "type": "import"
 },
 "plasmapy.formulary.ionization.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "plasmapy.formulary.ionization.sqrt": {
  "data": {
   "shadows": "numpy.sqrt"
  },
  "type": "import"
 },
 "plasmapy.formulary.ionization.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.formulary.ionization.validate_quantities": {
  "data": {
   "shadows": "plasmapy.utils.decorators.validate_quantities"
  },
  "type": "import"
 },
 "plasmapy.formulary.magnetostatics": {
  "data": {},
  "type": "module"
 },
 "plasmapy.formulary.magnetostatics.CircularWire": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "plasmapy.formulary.magnetostatics.Wire"
   ]
  },
  "type": "class"
 },
 "plasmapy.formulary.magnetostatics.CircularWire.__init__": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.A",
    "astropy.units.m",
    "numpy.array",
    "numpy.cross",
    "numpy.linalg.norm",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.CircularWire.__init__.curve": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "isinstance",
    "numpy.cos",
    "numpy.expand_dims",
    "numpy.matmul",
    "numpy.ndarray",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.CircularWire.__repr__": {
  "data": {
   "lineno": 372
  },
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.CircularWire.magnetic_field": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "astropy.constants.mu0.value",
    "astropy.units.T",
    "numpy.cos",
    "numpy.cross",
    "numpy.expand_dims",
    "numpy.linalg.norm",
    "numpy.matmul",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.CircularWire.to_GeneralWire": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "astropy.units.A",
    "numpy.pi",
    "plasmapy.formulary.magnetostatics.GeneralWire"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.FiniteStraightWire": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "plasmapy.formulary.magnetostatics.Wire"
   ]
  },
  "type": "class"
 },
 "plasmapy.formulary.magnetostatics.FiniteStraightWire.__init__": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.A",
    "astropy.units.m",
    "numpy.all",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.FiniteStraightWire.__repr__": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.FiniteStraightWire.magnetic_field": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "astropy.constants.mu0.value",
    "astropy.units.T",
    "numpy.cross",
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.FiniteStraightWire.to_GeneralWire": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "astropy.units.A",
    "plasmapy.formulary.magnetostatics.GeneralWire"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.GeneralWire": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "plasmapy.formulary.magnetostatics.Wire"
   ]
  },
  "type": "class"
 },
 "plasmapy.formulary.magnetostatics.GeneralWire.__init__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.A",
    "callable",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.GeneralWire.__repr__": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.GeneralWire.magnetic_field": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "astropy.constants.mu0.value",
    "astropy.units.T",
    "astropy.units.m",
    "numpy.cross",
    "numpy.linalg.norm",
    "numpy.pi",
    "plasmapy.formulary.magnetostatics.numbers",
    "range"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.InfiniteStraightWire": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "plasmapy.formulary.magnetostatics.Wire"
   ]
  },
  "type": "class"
 },
 "plasmapy.formulary.magnetostatics.InfiniteStraightWire.__init__": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "astropy.units.A",
    "astropy.units.m",
    "numpy.linalg.norm",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.InfiniteStraightWire.__repr__": {
  "data": {
   "lineno": 316
  },
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.InfiniteStraightWire.magnetic_field": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "astropy.constants.mu0.value",
    "astropy.units.T",
    "numpy.cross",
    "numpy.linalg.norm",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.MagneticDipole": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "plasmapy.formulary.magnetostatics.MagnetoStatics"
   ]
  },
  "type": "class"
 },
 "plasmapy.formulary.magnetostatics.MagneticDipole.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "astropy.units.A",
    "astropy.units.m",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.MagneticDipole.__repr__": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.MagneticDipole.magnetic_field": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "astropy.constants.mu0.value",
    "astropy.units.T",
    "astropy.units.m",
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.MagnetoStatics": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "plasmapy.formulary.magnetostatics.abc"
   ]
  },
  "type": "class"
 },
 "plasmapy.formulary.magnetostatics.MagnetoStatics.magnetic_field": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "astropy.units.T",
    "astropy.units.m",
    "plasmapy.formulary.magnetostatics.abc"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.magnetostatics.Wire": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "plasmapy.formulary.magnetostatics.MagnetoStatics"
   ]
  },
  "type": "class"
 },
 "plasmapy.formulary.magnetostatics.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "plasmapy.formulary.magnetostatics.constants": {
  "data": {
   "shadows": "astropy.constants"
  },
  "type": "import"
 },
 "plasmapy.formulary.magnetostatics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.formulary.magnetostatics.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "plasmapy.formulary.magnetostatics.scipy.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "plasmapy.formulary.magnetostatics.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.formulary.magnetostatics.validate_quantities": {
  "data": {
   "shadows": "plasmapy.utils.decorators.validate_quantities"
  },
  "type": "import"
 },
 "plasmapy.formulary.mathematics": {
  "data": {},
  "type": "module"
 },
 "plasmapy.formulary.mathematics.Fermi_integral": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ImportError",
    "ModuleNotFoundError",
    "TypeError",
    "complex",
    "enumerate",
    "float",
    "int",
    "isinstance",
    "mpmath.polylog",
    "numpy.exp",
    "numpy.ndarray",
    "numpy.zeros_like",
    "plasmapy.formulary.mathematics.numbers",
    "plasmapy.optional_deps.mpmath_import_error",
    "type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.mathematics.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "plasmapy.formulary.mathematics.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "plasmapy.formulary.mathematics.mpmath_import_error": {
  "data": {
   "shadows": "plasmapy.optional_deps.mpmath_import_error"
  },
  "type": "import"
 },
 "plasmapy.formulary.mathematics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.formulary.mathematics.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "plasmapy.formulary.mathematics.polylog": {
  "data": {
   "shadows": "mpmath.polylog"
  },
  "type": "import"
 },
 "plasmapy.formulary.parameters": {
  "data": {
   "symbols_in_volume": [
    "numpy.pi",
    "plasmapy.formulary.parameters.Alfven_speed",
    "plasmapy.formulary.parameters.Bohm_diffusion",
    "plasmapy.formulary.parameters.Debye_length",
    "plasmapy.formulary.parameters.Debye_number",
    "plasmapy.formulary.parameters.Hall_parameter",
    "plasmapy.formulary.parameters.gyrofrequency",
    "plasmapy.formulary.parameters.gyroradius",
    "plasmapy.formulary.parameters.inertial_length",
    "plasmapy.formulary.parameters.ion_sound_speed",
    "plasmapy.formulary.parameters.kappa_thermal_speed",
    "plasmapy.formulary.parameters.lower_hybrid_frequency",
    "plasmapy.formulary.parameters.magnetic_energy_density",
    "plasmapy.formulary.parameters.magnetic_pressure",
    "plasmapy.formulary.parameters.mass_density",
    "plasmapy.formulary.parameters.plasma_frequency",
    "plasmapy.formulary.parameters.thermal_pressure",
    "plasmapy.formulary.parameters.thermal_speed",
    "plasmapy.formulary.parameters.upper_hybrid_frequency"
   ]
  },
  "type": "module"
 },
 "plasmapy.formulary.parameters.Alfven_speed": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "astropy.constants.si.mu0",
    "astropy.units.T",
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.abs",
    "numpy.sqrt",
    "plasmapy.formulary.parameters.mass_density",
    "plasmapy.utils.decorators.check_relativistic",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.parameters.Bohm_diffusion": {
  "data": {
   "lineno": 1766,
   "symbols_in_volume": [
    "astropy.constants.si.e",
    "astropy.constants.si.k_B",
    "astropy.units.K",
    "astropy.units.T",
    "astropy.units.m",
    "astropy.units.s",
    "astropy.units.temperature_energy",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.parameters.DB_": {
  "data": {
   "lineno": 1831
  },
  "type": "constant"
 },
 "plasmapy.formulary.parameters.Debye_length": {
  "data": {
   "lineno": 1244,
   "symbols_in_volume": [
    "astropy.constants.si.e",
    "astropy.constants.si.eps0",
    "astropy.constants.si.k_B",
    "astropy.units.K",
    "astropy.units.m",
    "astropy.units.temperature_energy",
    "numpy.sqrt",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.parameters.Debye_number": {
  "data": {
   "lineno": 1318,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.temperature_energy",
    "numpy.pi",
    "plasmapy.formulary.parameters.Debye_length",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.parameters.Hall_parameter": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.T",
    "astropy.units.m",
    "astropy.units.radian",
    "astropy.units.temperature_energy",
    "gyrofrequency",
    "plasmapy.formulary.collisions.fundamental_electron_collision_freq",
    "plasmapy.formulary.collisions.fundamental_ion_collision_freq",
    "plasmapy.particles.Particle",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.parameters.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "plasmapy.formulary.parameters.PhysicsError": {
  "data": {
   "shadows": "plasmapy.utils.PhysicsError"
  },
  "type": "import"
 },
 "plasmapy.formulary.parameters.PhysicsWarning": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.PhysicsWarning"
  },
  "type": "import"
 },
 "plasmapy.formulary.parameters.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "plasmapy.formulary.parameters._coefficients": {
  "data": {
   "lineno": 456
  },
  "type": "constant"
 },
 "plasmapy.formulary.parameters._grab_charge": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "plasmapy.particles.integer_charge"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.parameters.angular_freq_to_hz": {
  "data": {
   "shadows": "plasmapy.utils.decorators.angular_freq_to_hz"
  },
  "type": "import"
 },
 "plasmapy.formulary.parameters.betaH_": {
  "data": {
   "lineno": 850
  },
  "type": "constant"
 },
 "plasmapy.formulary.parameters.c": {
  "data": {
   "shadows": "astropy.constants.si.c"
  },
  "type": "import"
 },
 "plasmapy.formulary.parameters.check_relativistic": {
  "data": {
   "shadows": "plasmapy.utils.decorators.check_relativistic"
  },
  "type": "import"
 },
 "plasmapy.formulary.parameters.cs_": {
  "data": {
   "lineno": 449
  },
  "type": "constant"
 },
 "plasmapy.formulary.parameters.cwp_": {
  "data": {
   "lineno": 1459
  },
  "type": "constant"
 },
 "plasmapy.formulary.parameters.e": {
  "data": {
   "shadows": "astropy.constants.si.e"
  },
  "type": "import"
 },
 "plasmapy.formulary.parameters.eps0": {
  "data": {
   "shadows": "astropy.constants.si.eps0"
  },
  "type": "import"
 },
 "plasmapy.formulary.parameters.fundamental_electron_collision_freq": {
  "data": {
   "shadows": "plasmapy.formulary.collisions.fundamental_electron_collision_freq"
  },
  "type": "import"
 },
 "plasmapy.formulary.parameters.fundamental_ion_collision_freq": {
  "data": {
   "shadows": "plasmapy.formulary.collisions.fundamental_ion_collision_freq"
  },
  "type": "import"
 },
 "plasmapy.formulary.parameters.gyrofrequency": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "abs",
    "astropy.constants.si.e.to",
    "astropy.units.Hz",
    "astropy.units.T",
    "astropy.units.cy",
    "astropy.units.rad",
    "astropy.units.s",
    "numpy.abs",
    "plasmapy.formulary.parameters._grab_charge",
    "plasmapy.particles.particle_mass",
    "plasmapy.utils.decorators.angular_freq_to_hz",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.parameters.gyroradius": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.K",
    "astropy.units.T",
    "astropy.units.dimensionless_angles",
    "astropy.units.m",
    "astropy.units.s",
    "astropy.units.temperature_energy",
    "len",
    "numpy.abs",
    "numpy.any",
    "numpy.isfinite",
    "numpy.isscalar",
    "numpy.logical_not",
    "numpy.logical_xor",
    "numpy.nan",
    "numpy.repeat",
    "plasmapy.formulary.parameters.gyrofrequency",
    "plasmapy.formulary.parameters.thermal_speed",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.parameters.inertial_length": {
  "data": {
   "lineno": 1391,
   "symbols_in_volume": [
    "astropy.constants.si.c",
    "astropy.units.dimensionless_angles",
    "astropy.units.m",
    "plasmapy.formulary.parameters.plasma_frequency",
    "plasmapy.particles.Particle",
    "plasmapy.particles.particle_input",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.parameters.ion_sound_speed": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "Debye_length",
    "Exception",
    "TypeError",
    "ValueError",
    "astropy.constants.si.k_B",
    "astropy.units.K",
    "astropy.units.m",
    "astropy.units.s",
    "astropy.units.temperature_energy",
    "isinstance",
    "numpy.sqrt",
    "plasmapy.formulary.parameters._grab_charge",
    "plasmapy.formulary.parameters.numbers",
    "plasmapy.formulary.parameters.warnings",
    "plasmapy.particles.particle_mass",
    "plasmapy.utils.PhysicsError",
    "plasmapy.utils.decorators.check_relativistic",
    "plasmapy.utils.decorators.validate_quantities",
    "plasmapy.utils.exceptions.PhysicsWarning",
    "zip"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.parameters.k_B": {
  "data": {
   "shadows": "astropy.constants.si.k_B"
  },
  "type": "import"
 },
 "plasmapy.formulary.parameters.kappa_thermal_speed": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.K",
    "astropy.units.m",
    "astropy.units.s",
    "astropy.units.temperature_energy",
    "numpy.sqrt",
    "plasmapy.formulary.parameters.thermal_speed",
    "plasmapy.utils.decorators.check_relativistic",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.parameters.lambdaD_": {
  "data": {
   "lineno": 1314
  },
  "type": "constant"
 },
 "plasmapy.formulary.parameters.lower_hybrid_frequency": {
  "data": {
   "lineno": 1671,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "astropy.units.Hz",
    "astropy.units.T",
    "astropy.units.cy",
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s",
    "plasmapy.formulary.parameters.gyrofrequency",
    "plasmapy.formulary.parameters.plasma_frequency",
    "plasmapy.particles.integer_charge",
    "plasmapy.utils.decorators.angular_freq_to_hz",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.parameters.m_e": {
  "data": {
   "shadows": "astropy.constants.si.m_e"
  },
  "type": "import"
 },
 "plasmapy.formulary.parameters.m_p": {
  "data": {
   "shadows": "astropy.constants.si.m_p"
  },
  "type": "import"
 },
 "plasmapy.formulary.parameters.magnetic_energy_density": {
  "data": {
   "lineno": 1532,
   "symbols_in_volume": [
    "astropy.units.J",
    "astropy.units.T",
    "astropy.units.m",
    "plasmapy.formulary.parameters.magnetic_pressure",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.parameters.magnetic_pressure": {
  "data": {
   "lineno": 1467,
   "symbols_in_volume": [
    "astropy.constants.si.mu0",
    "astropy.units.Pa",
    "astropy.units.T",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.parameters.mass_density": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "astropy.constants.si.m_e",
    "astropy.units.kg",
    "astropy.units.m",
    "plasmapy.formulary.parameters._grab_charge",
    "plasmapy.formulary.parameters.numbers",
    "plasmapy.particles.particle_mass",
    "plasmapy.utils.decorators.validate_quantities",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.parameters.mu0": {
  "data": {
   "shadows": "astropy.constants.si.mu0"
  },
  "type": "import"
 },
 "plasmapy.formulary.parameters.nD_": {
  "data": {
   "lineno": 1387
  },
  "type": "constant"
 },
 "plasmapy.formulary.parameters.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.formulary.parameters.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "plasmapy.formulary.parameters.oc_": {
  "data": {
   "lineno": 964
  },
  "type": "constant"
 },
 "plasmapy.formulary.parameters.particles": {
  "data": {
   "shadows": "plasmapy.particles"
  },
  "type": "import"
 },
 "plasmapy.formulary.parameters.plasma_frequency": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "astropy.constants.si.e",
    "astropy.constants.si.eps0",
    "astropy.units.Hz",
    "astropy.units.cy",
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s",
    "numpy.abs",
    "numpy.sqrt",
    "plasmapy.particles.integer_charge",
    "plasmapy.particles.particle_mass",
    "plasmapy.utils.decorators.angular_freq_to_hz",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.parameters.pmag_": {
  "data": {
   "lineno": 1528
  },
  "type": "constant"
 },
 "plasmapy.formulary.parameters.pth_": {
  "data": {
   "lineno": 658
  },
  "type": "constant"
 },
 "plasmapy.formulary.parameters.rc_": {
  "data": {
   "lineno": 1127
  },
  "type": "constant"
 },
 "plasmapy.formulary.parameters.rho_": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "plasmapy.formulary.parameters.rhoc_": {
  "data": {
   "lineno": 1130
  },
  "type": "constant"
 },
 "plasmapy.formulary.parameters.thermal_pressure": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "astropy.constants.si.k_B",
    "astropy.units.K",
    "astropy.units.Pa",
    "astropy.units.m",
    "astropy.units.temperature_energy",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.parameters.thermal_speed": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "astropy.constants.si.k_B",
    "astropy.units.K",
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.s",
    "astropy.units.temperature_energy",
    "numpy.isfinite",
    "numpy.nan",
    "numpy.sqrt",
    "plasmapy.formulary.parameters._coefficients",
    "plasmapy.particles.Particle",
    "plasmapy.particles.particle_input",
    "plasmapy.particles.particle_mass",
    "plasmapy.utils.decorators.check_relativistic",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.parameters.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.formulary.parameters.ub_": {
  "data": {
   "lineno": 1593
  },
  "type": "constant"
 },
 "plasmapy.formulary.parameters.upper_hybrid_frequency": {
  "data": {
   "lineno": 1597,
   "symbols_in_volume": [
    "astropy.units.Hz",
    "astropy.units.T",
    "astropy.units.cy",
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s",
    "numpy.sqrt",
    "plasmapy.formulary.parameters.gyrofrequency",
    "plasmapy.formulary.parameters.plasma_frequency",
    "plasmapy.utils.decorators.angular_freq_to_hz",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.parameters.va_": {
  "data": {
   "lineno": 260
  },
  "type": "constant"
 },
 "plasmapy.formulary.parameters.validate_quantities": {
  "data": {
   "shadows": "plasmapy.utils.decorators.validate_quantities"
  },
  "type": "import"
 },
 "plasmapy.formulary.parameters.vth_": {
  "data": {
   "lineno": 603
  },
  "type": "constant"
 },
 "plasmapy.formulary.parameters.vth_kappa_": {
  "data": {
   "lineno": 771
  },
  "type": "constant"
 },
 "plasmapy.formulary.parameters.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "plasmapy.formulary.parameters.wc_": {
  "data": {
   "lineno": 967
  },
  "type": "constant"
 },
 "plasmapy.formulary.parameters.wlh_": {
  "data": {
   "lineno": 1762
  },
  "type": "constant"
 },
 "plasmapy.formulary.parameters.wp_": {
  "data": {
   "lineno": 1240
  },
  "type": "constant"
 },
 "plasmapy.formulary.parameters.wuh_": {
  "data": {
   "lineno": 1667
  },
  "type": "constant"
 },
 "plasmapy.formulary.quantum": {
  "data": {
   "symbols_in_volume": [
    "plasmapy.formulary.quantum.Fermi_energy",
    "plasmapy.formulary.quantum.deBroglie_wavelength",
    "plasmapy.formulary.quantum.thermal_deBroglie_wavelength"
   ]
  },
  "type": "module"
 },
 "plasmapy.formulary.quantum.Ef_": {
  "data": {
   "lineno": 262
  },
  "type": "constant"
 },
 "plasmapy.formulary.quantum.Fermi_energy": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "astropy.constants.si.hbar",
    "astropy.constants.si.m_e",
    "astropy.units.J",
    "astropy.units.m",
    "numpy.pi",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.quantum.Lorentz_factor": {
  "data": {
   "shadows": "plasmapy.formulary.relativity.Lorentz_factor"
  },
  "type": "import"
 },
 "plasmapy.formulary.quantum.Parameters": {
  "data": {
   "shadows": "lmfit.Parameters"
  },
  "type": "import"
 },
 "plasmapy.formulary.quantum.RelativityError": {
  "data": {
   "shadows": "plasmapy.utils.RelativityError"
  },
  "type": "import"
 },
 "plasmapy.formulary.quantum.Thomas_Fermi_length": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "astropy.constants.si.e",
    "astropy.constants.si.eps0",
    "astropy.units.m",
    "numpy.sqrt",
    "plasmapy.formulary.quantum.Fermi_energy",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.quantum.Wigner_Seitz_radius": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "astropy.units.m",
    "numpy.pi",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.quantum.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "plasmapy.formulary.quantum._chemical_potential_interp": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "NotImplementedError",
    "astropy.constants.si.k_B",
    "astropy.units.dimensionless_unscaled",
    "numpy.log",
    "numpy.pi",
    "numpy.sqrt",
    "plasmapy.formulary.quantum.Fermi_energy"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.quantum.c": {
  "data": {
   "shadows": "astropy.constants.si.c"
  },
  "type": "import"
 },
 "plasmapy.formulary.quantum.chemical_potential": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "ImportError",
    "ModuleNotFoundError",
    "NotImplementedError",
    "astropy.constants.si.e",
    "astropy.units.K",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.temperature_energy",
    "lmfit.Parameters",
    "lmfit.minimize",
    "numpy.array",
    "plasmapy.formulary.quantum.thermal_deBroglie_wavelength",
    "plasmapy.optional_deps.lmfit_import_error",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.quantum.chemical_potential.residual": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "numpy.float",
    "plasmapy.formulary.mathematics.Fermi_integral"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.quantum.deBroglie_wavelength": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "astropy.constants.si.c",
    "astropy.constants.si.h",
    "astropy.units.Quantity",
    "astropy.units.UnitConversionError",
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.s",
    "isinstance",
    "numpy.abs",
    "numpy.any",
    "numpy.inf",
    "numpy.ones",
    "plasmapy.formulary.relativity.Lorentz_factor",
    "plasmapy.particles.particle_mass",
    "plasmapy.utils.RelativityError",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.quantum.e": {
  "data": {
   "shadows": "astropy.constants.si.e"
  },
  "type": "import"
 },
 "plasmapy.formulary.quantum.eps0": {
  "data": {
   "shadows": "astropy.constants.si.eps0"
  },
  "type": "import"
 },
 "plasmapy.formulary.quantum.h": {
  "data": {
   "shadows": "astropy.constants.si.h"
  },
  "type": "import"
 },
 "plasmapy.formulary.quantum.hbar": {
  "data": {
   "shadows": "astropy.constants.si.hbar"
  },
  "type": "import"
 },
 "plasmapy.formulary.quantum.k_B": {
  "data": {
   "shadows": "astropy.constants.si.k_B"
  },
  "type": "import"
 },
 "plasmapy.formulary.quantum.lambdaDB_": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "plasmapy.formulary.quantum.lambdaDB_th_": {
  "data": {
   "lineno": 195
  },
  "type": "constant"
 },
 "plasmapy.formulary.quantum.lmfit_import_error": {
  "data": {
   "shadows": "plasmapy.optional_deps.lmfit_import_error"
  },
  "type": "import"
 },
 "plasmapy.formulary.quantum.m_e": {
  "data": {
   "shadows": "astropy.constants.si.m_e"
  },
  "type": "import"
 },
 "plasmapy.formulary.quantum.mathematics": {
  "data": {
   "shadows": "plasmapy.formulary.mathematics"
  },
  "type": "import"
 },
 "plasmapy.formulary.quantum.minimize": {
  "data": {
   "shadows": "lmfit.minimize"
  },
  "type": "import"
 },
 "plasmapy.formulary.quantum.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.formulary.quantum.particles": {
  "data": {
   "shadows": "plasmapy.particles"
  },
  "type": "import"
 },
 "plasmapy.formulary.quantum.thermal_deBroglie_wavelength": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "astropy.constants.si.h",
    "astropy.constants.si.k_B",
    "astropy.constants.si.m_e",
    "astropy.units.K",
    "astropy.units.m",
    "astropy.units.temperature_energy",
    "numpy.pi",
    "numpy.sqrt",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.quantum.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.formulary.quantum.validate_quantities": {
  "data": {
   "shadows": "plasmapy.utils.decorators.validate_quantities"
  },
  "type": "import"
 },
 "plasmapy.formulary.relativity": {
  "data": {},
  "type": "module"
 },
 "plasmapy.formulary.relativity.Lorentz_factor": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "astropy.constants.c",
    "astropy.constants.c.value",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.abs",
    "numpy.all",
    "numpy.inf",
    "numpy.zeros_like",
    "plasmapy.utils.RelativityError",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.relativity.__all__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "plasmapy.formulary.relativity.c": {
  "data": {
   "shadows": "astropy.constants.c"
  },
  "type": "import"
 },
 "plasmapy.formulary.relativity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.formulary.relativity.relativistic_energy": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "astropy.constants.c",
    "astropy.units.Joule",
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.s",
    "plasmapy.formulary.relativity.Lorentz_factor",
    "plasmapy.utils.decorators.validate_quantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.relativity.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.formulary.relativity.utils": {
  "data": {
   "shadows": "plasmapy.utils"
  },
  "type": "import"
 },
 "plasmapy.formulary.relativity.validate_quantities": {
  "data": {
   "shadows": "plasmapy.utils.decorators.validate_quantities"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests": {
  "data": {},
  "type": "module"
 },
 "plasmapy.formulary.tests.test_Fermi_integral": {
  "data": {},
  "type": "module"
 },
 "plasmapy.formulary.tests.test_Fermi_integral.Fermi_integral": {
  "data": {
   "shadows": "plasmapy.formulary.mathematics.Fermi_integral"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_Fermi_integral.Test_Fermi_integral": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_Fermi_integral.Test_Fermi_integral.setup_class": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "classmethod",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_Fermi_integral.Test_Fermi_integral.test_array": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.allclose",
    "plasmapy.formulary.mathematics.Fermi_integral"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_Fermi_integral.Test_Fermi_integral.test_fail1": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.isclose",
    "plasmapy.formulary.mathematics.Fermi_integral"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_Fermi_integral.Test_Fermi_integral.test_invalid_type": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "TypeError",
    "plasmapy.formulary.mathematics.Fermi_integral",
    "plasmapy.formulary.tests.test_Fermi_integral.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_Fermi_integral.Test_Fermi_integral.test_known1": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.isclose",
    "plasmapy.formulary.mathematics.Fermi_integral"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_Fermi_integral.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_Fermi_integral.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_collisions": {
  "data": {},
  "type": "module"
 },
 "plasmapy.formulary.tests.test_collisions.Coulomb_logarithm": {
  "data": {
   "shadows": "plasmapy.formulary.braginskii.Coulomb_logarithm"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_collisions.CouplingWarning": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.CouplingWarning"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_collisions.Knudsen_number": {
  "data": {
   "shadows": "plasmapy.formulary.collisions.Knudsen_number"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_collisions.Spitzer_resistivity": {
  "data": {
   "shadows": "plasmapy.formulary.collisions.Spitzer_resistivity"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.cm",
    "numpy.array"
   ]
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.setup_class": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.cm",
    "astropy.units.eV",
    "classmethod",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_Chen_Q_machine": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.eV",
    "astropy.units.m",
    "astropy.units.temperature_energy",
    "numpy.isclose",
    "numpy.log",
    "plasmapy.formulary.braginskii.Coulomb_logarithm"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_Chen_fusion": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.eV",
    "astropy.units.m",
    "astropy.units.temperature_energy",
    "numpy.isclose",
    "numpy.log",
    "plasmapy.formulary.braginskii.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.RelativityWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_Chen_lab": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.eV",
    "astropy.units.m",
    "astropy.units.temperature_energy",
    "numpy.isclose",
    "numpy.log",
    "plasmapy.formulary.braginskii.Coulomb_logarithm"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_Chen_laser": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.eV",
    "astropy.units.m",
    "astropy.units.temperature_energy",
    "numpy.isclose",
    "numpy.log",
    "plasmapy.formulary.braginskii.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.RelativityWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_Chen_torus": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.eV",
    "astropy.units.m",
    "astropy.units.temperature_energy",
    "numpy.isclose",
    "numpy.log",
    "plasmapy.formulary.braginskii.Coulomb_logarithm"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS1": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.braginskii.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.PhysicsWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS1_negative": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.nan",
    "plasmapy.formulary.braginskii.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.CouplingWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS2": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.braginskii.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.PhysicsWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS2_negative": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.s",
    "numpy.nan",
    "plasmapy.formulary.braginskii.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.CouplingWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS2_zmean_error": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "ValueError",
    "plasmapy.formulary.braginskii.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_collisions.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS3": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.braginskii.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.PhysicsWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS3_negative": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.braginskii.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.PhysicsWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS3_non_scalar_density": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.cm",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.braginskii.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.PhysicsWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS4": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.braginskii.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.PhysicsWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS4_negative": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.braginskii.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.PhysicsWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS5": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.braginskii.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.PhysicsWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS5_negative": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.braginskii.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.PhysicsWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS5_zmean_error": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "ValueError",
    "plasmapy.formulary.braginskii.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_collisions.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS6": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.braginskii.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.PhysicsWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS6_negative": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.braginskii.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.PhysicsWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_GMS6_zmean_error": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "ValueError",
    "plasmapy.formulary.braginskii.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_collisions.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_handle_V_arraysizes": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "astropy.tests.helper.assert_quantity_allclose",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.array",
    "numpy.nan",
    "plasmapy.formulary.braginskii.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.CouplingWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_handle_invalid_V": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "astropy.tests.helper.assert_quantity_allclose",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.nan",
    "plasmapy.formulary.braginskii.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.CouplingWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_handle_nparrays": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "plasmapy.formulary.braginskii.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_handle_zero_V": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "plasmapy.formulary.braginskii.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.PhysicsError"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_invalid_particle_error": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.m",
    "plasmapy.formulary.braginskii.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_collisions.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_relativity_error": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "astropy.constants.c",
    "astropy.units.K",
    "astropy.units.m",
    "plasmapy.formulary.braginskii.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.RelativityError"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_relativity_warn": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "astropy.constants.c",
    "astropy.units.K",
    "astropy.units.m",
    "plasmapy.formulary.braginskii.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.RelativityWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_single_particle_error": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.K",
    "astropy.units.m",
    "plasmapy.formulary.braginskii.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_collisions.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_symmetry": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "plasmapy.formulary.braginskii.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.CouplingWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_unit_conversion_error": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "astropy.units.UnitTypeError",
    "astropy.units.g",
    "astropy.units.m",
    "astropy.units.s",
    "plasmapy.formulary.braginskii.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_collisions.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Coulomb_logarithm.test_unknown_method": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ValueError",
    "plasmapy.formulary.braginskii.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_collisions.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Knudsen_number": {
  "data": {
   "lineno": 1164
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Knudsen_number.setup_class": {
  "data": {
   "lineno": 1165,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.cm",
    "astropy.units.km",
    "astropy.units.nm",
    "astropy.units.s",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Knudsen_number.test_fail1": {
  "data": {
   "lineno": 1202,
   "symbols_in_volume": [
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.collisions.Knudsen_number",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.PhysicsWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Knudsen_number.test_handle_nparrays": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": [
    "plasmapy.formulary.collisions.Knudsen_number",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Knudsen_number.test_known1": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.collisions.Knudsen_number",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.PhysicsWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Knudsen_number.test_symmetry": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "plasmapy.formulary.collisions.Knudsen_number",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.CouplingWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Spitzer_resistivity": {
  "data": {
   "lineno": 1004
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Spitzer_resistivity.setup_class": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.cm",
    "astropy.units.km",
    "astropy.units.s",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Spitzer_resistivity.test_fail1": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.collisions.Spitzer_resistivity"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Spitzer_resistivity.test_handle_nparrays": {
  "data": {
   "lineno": 1075,
   "symbols_in_volume": [
    "plasmapy.formulary.collisions.Spitzer_resistivity",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Spitzer_resistivity.test_known1": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.collisions.Spitzer_resistivity"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Spitzer_resistivity.test_symmetry": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "plasmapy.formulary.collisions.Spitzer_resistivity"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_Spitzer_resistivity.test_zmean": {
  "data": {
   "lineno": 1058,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.collisions.Spitzer_resistivity"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_collision_frequency": {
  "data": {
   "lineno": 762
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_collisions.Test_collision_frequency.setup_class": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.cm",
    "astropy.units.km",
    "astropy.units.s",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_collision_frequency.test_electrons": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.collisions.collision_frequency",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.PhysicsWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_collision_frequency.test_fail1": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.collisions.collision_frequency",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.PhysicsWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_collision_frequency.test_handle_nparrays": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "plasmapy.formulary.collisions.collision_frequency",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_collision_frequency.test_known1": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.collisions.collision_frequency",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.PhysicsWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_collision_frequency.test_protons": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.collisions.collision_frequency",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.PhysicsWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_collision_frequency.test_symmetry": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "plasmapy.formulary.collisions.collision_frequency",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.CouplingWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_collision_frequency.test_zmean": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.collisions.collision_frequency",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.PhysicsWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_coupling_parameter": {
  "data": {
   "lineno": 1232
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_collisions.Test_coupling_parameter.setup_class": {
  "data": {
   "lineno": 1233,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.cm",
    "astropy.units.km",
    "astropy.units.s",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_coupling_parameter.test_fail1": {
  "data": {
   "lineno": 1266,
   "symbols_in_volume": [
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.collisions.coupling_parameter"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_coupling_parameter.test_handle_nparrays": {
  "data": {
   "lineno": 1306,
   "symbols_in_volume": [
    "plasmapy.formulary.collisions.coupling_parameter",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_coupling_parameter.test_known1": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": [
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.collisions.coupling_parameter"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_coupling_parameter.test_kwarg_method_error": {
  "data": {
   "lineno": 1332,
   "symbols_in_volume": [
    "ValueError",
    "plasmapy.formulary.collisions.coupling_parameter",
    "plasmapy.formulary.tests.test_collisions.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_coupling_parameter.test_quantum": {
  "data": {
   "lineno": 1316,
   "symbols_in_volume": [
    "numpy.isclose",
    "plasmapy.formulary.collisions.coupling_parameter",
    "plasmapy.formulary.tests.test_collisions.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_coupling_parameter.test_symmetry": {
  "data": {
   "lineno": 1245,
   "symbols_in_volume": [
    "plasmapy.formulary.collisions.coupling_parameter"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_coupling_parameter.test_zmean": {
  "data": {
   "lineno": 1287,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.collisions.coupling_parameter"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_fundamental_electron_collision_freq": {
  "data": {
   "lineno": 903
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_collisions.Test_fundamental_electron_collision_freq.setup_class": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "astropy.units.cm",
    "astropy.units.eV",
    "classmethod",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_fundamental_electron_collision_freq.test_handle_nparrays": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "plasmapy.formulary.collisions.fundamental_electron_collision_freq",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_fundamental_ion_collision_freq": {
  "data": {
   "lineno": 922
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_collisions.Test_fundamental_ion_collision_freq.setup_class": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "astropy.units.cm",
    "astropy.units.eV",
    "classmethod",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_fundamental_ion_collision_freq.test_handle_nparrays": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "plasmapy.formulary.collisions.fundamental_ion_collision_freq",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_impact_parameter": {
  "data": {
   "lineno": 662
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_collisions.Test_impact_parameter.setup_class": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.cm",
    "astropy.units.eV",
    "astropy.units.km",
    "astropy.units.s",
    "classmethod",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_impact_parameter.test_bad_method": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.nan",
    "plasmapy.formulary.collisions.impact_parameter",
    "plasmapy.formulary.tests.test_collisions.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_impact_parameter.test_extend_scalar_bmin": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "astropy.units.eV",
    "len",
    "plasmapy.formulary.collisions.impact_parameter"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_impact_parameter.test_fail1": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.allclose",
    "numpy.nan",
    "plasmapy.formulary.collisions.impact_parameter"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_impact_parameter.test_handle_nparrays": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "plasmapy.formulary.collisions.impact_parameter",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_impact_parameter.test_known1": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.allclose",
    "numpy.nan",
    "plasmapy.formulary.collisions.impact_parameter"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_impact_parameter.test_symmetry": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "plasmapy.formulary.collisions.impact_parameter"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_impact_parameter_perp": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.eV",
    "astropy.units.m",
    "numpy.isclose",
    "plasmapy.formulary.braginskii.Coulomb_logarithm"
   ]
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_collisions.Test_impact_parameter_perp.setup_class": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.km",
    "astropy.units.s",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_impact_parameter_perp.test_fail1": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.collisions.impact_parameter_perp"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_impact_parameter_perp.test_handle_nparrays": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "plasmapy.formulary.collisions.impact_parameter_perp",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_impact_parameter_perp.test_known1": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.collisions.impact_parameter_perp"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_impact_parameter_perp.test_symmetry": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "plasmapy.formulary.collisions.impact_parameter_perp"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_mean_free_path": {
  "data": {
   "lineno": 941
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_collisions.Test_mean_free_path.setup_class": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.cm",
    "astropy.units.km",
    "astropy.units.s",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_mean_free_path.test_fail1": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.collisions.mean_free_path",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.PhysicsWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_mean_free_path.test_handle_nparrays": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "plasmapy.formulary.collisions.mean_free_path",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_mean_free_path.test_known1": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.collisions.mean_free_path",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.PhysicsWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_mean_free_path.test_symmetry": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "plasmapy.formulary.collisions.mean_free_path",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.CouplingWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_mobility": {
  "data": {
   "lineno": 1084
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_collisions.Test_mobility.setup_class": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.cm",
    "astropy.units.km",
    "astropy.units.s",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_mobility.test_fail1": {
  "data": {
   "lineno": 1119,
   "symbols_in_volume": [
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.collisions.mobility",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.PhysicsWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_mobility.test_handle_nparrays": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": [
    "plasmapy.formulary.collisions.mobility",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_mobility.test_known1": {
  "data": {
   "lineno": 1102,
   "symbols_in_volume": [
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.collisions.mobility",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.PhysicsWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_mobility.test_symmetry": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": [
    "plasmapy.formulary.collisions.mobility",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.CouplingWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.Test_mobility.test_zmean": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.collisions.mobility",
    "plasmapy.formulary.tests.test_collisions.pytest",
    "plasmapy.utils.exceptions.PhysicsWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_collisions.assert_can_handle_nparray": {
  "data": {
   "shadows": "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_collisions.assert_quantity_allclose": {
  "data": {
   "shadows": "astropy.tests.helper.assert_quantity_allclose"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_collisions.c": {
  "data": {
   "shadows": "astropy.constants.c"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_collisions.collision_frequency": {
  "data": {
   "shadows": "plasmapy.formulary.collisions.collision_frequency"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_collisions.coupling_parameter": {
  "data": {
   "shadows": "plasmapy.formulary.collisions.coupling_parameter"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_collisions.exceptions": {
  "data": {
   "shadows": "plasmapy.utils.exceptions"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_collisions.fundamental_electron_collision_freq": {
  "data": {
   "shadows": "plasmapy.formulary.collisions.fundamental_electron_collision_freq"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_collisions.fundamental_ion_collision_freq": {
  "data": {
   "shadows": "plasmapy.formulary.collisions.fundamental_ion_collision_freq"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_collisions.impact_parameter": {
  "data": {
   "shadows": "plasmapy.formulary.collisions.impact_parameter"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_collisions.impact_parameter_perp": {
  "data": {
   "shadows": "plasmapy.formulary.collisions.impact_parameter_perp"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_collisions.mean_free_path": {
  "data": {
   "shadows": "plasmapy.formulary.collisions.mean_free_path"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_collisions.mobility": {
  "data": {
   "shadows": "plasmapy.formulary.collisions.mobility"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_collisions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_collisions.plasmapy.particles.exceptions": {
  "data": {
   "shadows": "plasmapy.particles.exceptions"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_collisions.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_collisions.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_dielectric": {
  "data": {
   "symbols_in_volume": [
    "astropy.units.T",
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s"
   ]
  },
  "type": "module"
 },
 "plasmapy.formulary.tests.test_dielectric.B": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_dielectric.Test_ColdPlasmaPermittivity": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_dielectric.Test_ColdPlasmaPermittivity.test_SD_to_LR_relationships": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "cold_plasma_permittivity_LRP",
    "cold_plasma_permittivity_SDP",
    "numpy.isclose",
    "plasmapy.formulary.tests.test_dielectric.B",
    "plasmapy.formulary.tests.test_dielectric.n",
    "plasmapy.formulary.tests.test_dielectric.omega",
    "plasmapy.formulary.tests.test_dielectric.single_species"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dielectric.Test_ColdPlasmaPermittivity.test_numpy_array_workflow": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "astropy.units.T",
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s",
    "cold_plasma_permittivity_SDP",
    "numpy.logspace",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dielectric.Test_ColdPlasmaPermittivity.test_proton_electron_plasma": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "abs",
    "astropy.units.T",
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s",
    "cold_plasma_permittivity_LRP",
    "cold_plasma_permittivity_SDP",
    "gyrofrequency",
    "isinstance",
    "numpy.isclose",
    "plasma_frequency",
    "plasmapy.formulary.tests.test_dielectric.B",
    "plasmapy.formulary.tests.test_dielectric.n",
    "plasmapy.formulary.tests.test_dielectric.omega"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dielectric.Test_ColdPlasmaPermittivity.test_three_species": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "astropy.units.m",
    "cold_plasma_permittivity_SDP",
    "numpy.array",
    "numpy.isclose",
    "plasmapy.formulary.tests.test_dielectric.B",
    "plasmapy.formulary.tests.test_dielectric.omega",
    "plasmapy.formulary.tests.test_dielectric.three_species"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dielectric.Test_permittivity_1D_Maxwellian": {
  "data": {
   "lineno": 113
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_dielectric.Test_permittivity_1D_Maxwellian.setup_class": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.cm",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.rad",
    "astropy.units.s",
    "classmethod",
    "numpy.pi",
    "thermal_speed"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dielectric.Test_permittivity_1D_Maxwellian.test_fail1": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "numpy.isclose",
    "permittivity_1D_Maxwellian"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dielectric.Test_permittivity_1D_Maxwellian.test_known1": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "numpy.isclose",
    "permittivity_1D_Maxwellian"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dielectric.n": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_dielectric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_dielectric.omega": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_dielectric.single_species": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_dielectric.three_species": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_dielectric.two_species": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_dielectric.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_dimensionless": {
  "data": {
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.T",
    "astropy.units.m"
   ]
  },
  "type": "module"
 },
 "plasmapy.formulary.tests.test_dimensionless.B": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_dimensionless.Mag_Reynolds": {
  "data": {
   "shadows": "plasmapy.formulary.dimensionless.Mag_Reynolds"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_dimensionless.Re_": {
  "data": {
   "shadows": "plasmapy.formulary.dimensionless.Re_"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_dimensionless.RelativityError": {
  "data": {
   "shadows": "plasmapy.utils.RelativityError"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_dimensionless.Reynolds_number": {
  "data": {
   "shadows": "plasmapy.formulary.dimensionless.Reynolds_number"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_dimensionless.Rm_": {
  "data": {
   "shadows": "plasmapy.formulary.dimensionless.Rm_"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_dimensionless.T": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_dimensionless.beta": {
  "data": {
   "shadows": "plasmapy.formulary.dimensionless.beta"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_dimensionless.c": {
  "data": {
   "shadows": "astropy.constants.c"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_dimensionless.n": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_dimensionless.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_dimensionless.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_dimensionless.quantum_theta": {
  "data": {
   "shadows": "plasmapy.formulary.dimensionless.quantum_theta"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_dimensionless.test_Mag_Reynolds": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "astropy.units.S",
    "astropy.units.UnitTypeError",
    "astropy.units.UnitsWarning",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.dimensionless_unscaled.unit",
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.s",
    "plasmapy.formulary.dimensionless.Mag_Reynolds",
    "plasmapy.formulary.tests.test_dimensionless.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dimensionless.test_Reynolds_number": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "astropy.units.UnitTypeError",
    "astropy.units.UnitsWarning",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.dimensionless_unscaled.unit",
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.s",
    "plasmapy.formulary.dimensionless.Reynolds_number",
    "plasmapy.formulary.tests.test_dimensionless.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dimensionless.test_beta_dimensionless": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "float",
    "plasmapy.formulary.dimensionless.beta",
    "plasmapy.formulary.tests.test_dimensionless.B",
    "plasmapy.formulary.tests.test_dimensionless.T",
    "plasmapy.formulary.tests.test_dimensionless.n"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dimensionless.test_beta_nan": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.T",
    "astropy.units.cm",
    "astropy.units.dimensionless_unscaled",
    "numpy.array",
    "numpy.isnan",
    "numpy.nan",
    "plasmapy.formulary.dimensionless.beta",
    "plasmapy.formulary.tests.test_dimensionless.B",
    "plasmapy.formulary.tests.test_dimensionless.T",
    "plasmapy.formulary.tests.test_dimensionless.n"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dimensionless.test_dimensionless_aliases": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "plasmapy.formulary.dimensionless.Mag_Reynolds",
    "plasmapy.formulary.dimensionless.Re_",
    "plasmapy.formulary.dimensionless.Reynolds_number",
    "plasmapy.formulary.dimensionless.Rm_"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dimensionless.test_quantum_theta_dimensionless": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "float",
    "plasmapy.formulary.dimensionless.quantum_theta",
    "plasmapy.formulary.tests.test_dimensionless.T",
    "plasmapy.formulary.tests.test_dimensionless.n"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dimensionless.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_dispersion": {
  "data": {
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.units.UnitsError",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "numpy.inf",
    "numpy.nan",
    "numpy.pi",
    "numpy.sqrt",
    "plasmapy.formulary.dispersionfunction.plasma_dispersion_func",
    "plasmapy.formulary.dispersionfunction.plasma_dispersion_func_deriv"
   ]
  },
  "type": "module"
 },
 "plasmapy.formulary.tests.test_dispersion.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_dispersion.plasma_disp_deriv_table": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_dispersion.plasma_disp_func_errors_table": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_dispersion.plasma_dispersion_func": {
  "data": {
   "shadows": "plasmapy.formulary.dispersionfunction.plasma_dispersion_func"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_dispersion.plasma_dispersion_func_deriv": {
  "data": {
   "shadows": "plasmapy.formulary.dispersionfunction.plasma_dispersion_func_deriv"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_dispersion.plasma_dispersion_func_table": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_dispersion.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_dispersion.test_plasma_dispersion_deriv_errors": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "plasmapy.formulary.dispersionfunction.plasma_dispersion_func_deriv",
    "plasmapy.formulary.tests.test_dispersion.plasma_disp_func_errors_table",
    "plasmapy.formulary.tests.test_dispersion.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dispersion.test_plasma_dispersion_func": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.isclose",
    "numpy.pi",
    "numpy.sqrt",
    "plasmapy.formulary.dispersionfunction.plasma_dispersion_func",
    "plasmapy.formulary.tests.test_dispersion.plasma_dispersion_func_table",
    "plasmapy.formulary.tests.test_dispersion.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dispersion.test_plasma_dispersion_func_deriv": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.isclose",
    "plasmapy.formulary.dispersionfunction.plasma_dispersion_func",
    "plasmapy.formulary.dispersionfunction.plasma_dispersion_func_deriv",
    "plasmapy.formulary.tests.test_dispersion.plasma_disp_deriv_table",
    "plasmapy.formulary.tests.test_dispersion.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dispersion.test_plasma_dispersion_func_errors": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "plasmapy.formulary.dispersionfunction.plasma_dispersion_func",
    "plasmapy.formulary.tests.test_dispersion.plasma_disp_func_errors_table",
    "plasmapy.formulary.tests.test_dispersion.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dispersion.test_plasma_dispersion_func_power_series_expansion": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "numpy.allclose",
    "numpy.array",
    "numpy.complex128",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.zeros_like",
    "plasmapy.formulary.dispersionfunction.plasma_dispersion_func",
    "range",
    "scipy.special.gamma"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dispersion.test_plasma_dispersion_func_roots": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.complex128",
    "numpy.isclose",
    "plasmapy.formulary.dispersionfunction.plasma_dispersion_func"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_dispersion.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_dispersion.\u0393": {
  "data": {
   "shadows": "scipy.special.gamma"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_dispersion.\u03c0": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_distribution": {
  "data": {},
  "type": "module"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_1D": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_1D.setup_class": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.m",
    "astropy.units.s",
    "classmethod",
    "numpy.arange",
    "thermal_speed"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_1D.test_max_drift": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "Maxwellian_1D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_1D.test_max_noDrift": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "Maxwellian_1D",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_1D.test_norm": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "Maxwellian_1D",
    "numpy.isclose",
    "scipy.integrate.quad"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_1D.test_std": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "Maxwellian_1D",
    "astropy.constants.k_B.to",
    "astropy.constants.m_e.to",
    "astropy.units.K",
    "numpy.isclose",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_1D.test_unitless_no_vTh": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "Maxwellian_1D",
    "astropy.units.K",
    "astropy.units.temperature_energy",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_1D.test_unitless_vTh": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "Maxwellian_1D",
    "astropy.units.K",
    "astropy.units.temperature_energy",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_1D.test_units_no_vTh": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "Maxwellian_1D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_1D.test_units_vTh": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "Maxwellian_1D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_1D.test_value_drift_units": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "Maxwellian_1D",
    "numpy.isclose",
    "numpy.pi.si.value"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_1D.test_zero_drift_units": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "Maxwellian_1D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_1D": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_1D.setup_class": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "astropy.units.eV",
    "astropy.units.m",
    "astropy.units.s",
    "classmethod",
    "numpy.pi",
    "thermal_speed"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_1D.test_norm": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "Maxwellian_speed_1D",
    "numpy.arange",
    "numpy.isclose",
    "scipy.integrate.trapz"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_1D.test_unitless_no_vTh": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "Maxwellian_speed_1D",
    "astropy.units.K",
    "astropy.units.temperature_energy",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_1D.test_unitless_vTh": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "Maxwellian_speed_1D",
    "astropy.units.K",
    "astropy.units.temperature_energy",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_1D.test_units_no_vTh": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "Maxwellian_speed_1D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_1D.test_units_vTh": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "Maxwellian_speed_1D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_1D.test_value_drift_units": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "Maxwellian_speed_1D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_1D.test_zero_drift_units": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "Maxwellian_speed_1D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_2D": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_2D.setup_class": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "astropy.units.eV",
    "astropy.units.m",
    "astropy.units.s",
    "classmethod",
    "thermal_speed"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_2D.test_norm": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "Maxwellian_speed_2D",
    "numpy.arange",
    "numpy.isclose",
    "scipy.integrate.trapz"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_2D.test_unitless_no_vTh": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "Maxwellian_speed_2D",
    "astropy.units.K",
    "astropy.units.temperature_energy",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_2D.test_unitless_vTh": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "Maxwellian_speed_2D",
    "astropy.units.K",
    "astropy.units.temperature_energy",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_2D.test_units_no_vTh": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "Maxwellian_speed_2D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_2D.test_units_vTh": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "Maxwellian_speed_2D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_2D.test_value_drift_units": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "Maxwellian_speed_2D",
    "NotImplementedError",
    "plasmapy.formulary.tests.test_distribution.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_2D.test_zero_drift_units": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "Maxwellian_speed_2D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_3D": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_3D.setup_class": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "astropy.units.eV",
    "astropy.units.m",
    "astropy.units.s",
    "classmethod",
    "thermal_speed"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_3D.test_norm": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "Maxwellian_speed_3D",
    "numpy.arange",
    "numpy.isclose",
    "scipy.integrate.trapz"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_3D.test_unitless_no_vTh": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "Maxwellian_speed_3D",
    "astropy.units.K",
    "astropy.units.temperature_energy",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_3D.test_unitless_vTh": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "Maxwellian_speed_3D",
    "astropy.units.K",
    "astropy.units.temperature_energy",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_3D.test_units_no_vTh": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "Maxwellian_speed_3D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_3D.test_units_vTh": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "Maxwellian_speed_3D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_3D.test_value_drift_units": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": [
    "Maxwellian_speed_3D",
    "NotImplementedError",
    "plasmapy.formulary.tests.test_distribution.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_speed_3D.test_zero_drift_units": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "Maxwellian_speed_3D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_2D": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_2D.setup_class": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "astropy.units.eV",
    "astropy.units.m",
    "astropy.units.s",
    "classmethod",
    "thermal_speed"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_2D.test_norm": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "numpy.isclose",
    "scipy.integrate.dblquad"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_2D.test_unitless_no_vTh": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "Maxwellian_velocity_2D",
    "astropy.units.K",
    "astropy.units.temperature_energy",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_2D.test_unitless_vTh": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "Maxwellian_velocity_2D",
    "astropy.units.K",
    "astropy.units.temperature_energy",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_2D.test_units_no_vTh": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "Maxwellian_velocity_2D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_2D.test_units_vTh": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "Maxwellian_velocity_2D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_2D.test_value_drift_units": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "Maxwellian_velocity_2D",
    "numpy.isclose",
    "numpy.pi.si.value"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_2D.test_zero_drift_units": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "Maxwellian_velocity_2D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_3D": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_3D.setup_class": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "astropy.units.eV",
    "astropy.units.m",
    "astropy.units.s",
    "classmethod",
    "thermal_speed"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_3D.test_norm": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "numpy.isclose",
    "scipy.integrate.tplquad"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_3D.test_unitless_no_vTh": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "Maxwellian_velocity_3D",
    "astropy.units.K",
    "astropy.units.temperature_energy",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_3D.test_unitless_vTh": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "Maxwellian_velocity_3D",
    "astropy.units.K",
    "astropy.units.temperature_energy",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_3D.test_units_no_vTh": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "Maxwellian_velocity_3D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_3D.test_units_vTh": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "Maxwellian_velocity_3D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_3D.test_value_drift_units": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "Maxwellian_velocity_3D",
    "numpy.isclose",
    "numpy.pi.si.value"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_Maxwellian_velocity_3D.test_zero_drift_units": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "Maxwellian_velocity_3D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_1D": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_1D.setup_class": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.m",
    "astropy.units.s",
    "classmethod",
    "kappa_thermal_speed",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_1D.test_invalid_kappa": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "ValueError",
    "kappa_velocity_1D",
    "plasmapy.formulary.tests.test_distribution.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_1D.test_max_drift": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "kappa_velocity_1D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_1D.test_max_noDrift": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.s",
    "kappa_velocity_1D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_1D.test_maxwellian_limit": {
  "data": {
   "lineno": 1004
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_1D.test_norm": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "kappa_velocity_1D",
    "numpy.isclose",
    "scipy.integrate.quad"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_1D.test_std": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": [
    "astropy.constants.k_B.to",
    "astropy.constants.m_e.to",
    "astropy.units.K",
    "kappa_velocity_1D",
    "numpy.isclose",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_1D.test_unitless_no_vTh": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.temperature_energy",
    "kappa_velocity_1D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_1D.test_unitless_vTh": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.temperature_energy",
    "kappa_velocity_1D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_1D.test_units_no_vTh": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "kappa_velocity_1D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_1D.test_units_vTh": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": [
    "kappa_velocity_1D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_1D.test_value_drift_units": {
  "data": {
   "lineno": 1152,
   "symbols_in_volume": [
    "kappa_velocity_1D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_1D.test_zero_drift_units": {
  "data": {
   "lineno": 1131,
   "symbols_in_volume": [
    "kappa_velocity_1D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_3D": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_3D.setup_class": {
  "data": {
   "lineno": 1171,
   "symbols_in_volume": [
    "astropy.units.eV",
    "astropy.units.m",
    "astropy.units.s",
    "classmethod",
    "kappa_thermal_speed"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_3D.test_invalid_kappa": {
  "data": {
   "lineno": 1191,
   "symbols_in_volume": [
    "ValueError",
    "kappa_velocity_3D",
    "plasmapy.formulary.tests.test_distribution.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_3D.test_norm": {
  "data": {
   "lineno": 1242,
   "symbols_in_volume": [
    "kappa_velocity_3D",
    "numpy.isclose",
    "scipy.integrate.tplquad"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_3D.test_unitless_no_vTh": {
  "data": {
   "lineno": 1314,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.temperature_energy",
    "kappa_velocity_3D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_3D.test_unitless_vTh": {
  "data": {
   "lineno": 1336,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.temperature_energy",
    "kappa_velocity_3D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_3D.test_units_no_vTh": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "kappa_velocity_3D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_3D.test_units_vTh": {
  "data": {
   "lineno": 1292,
   "symbols_in_volume": [
    "kappa_velocity_3D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_3D.test_value_drift_units": {
  "data": {
   "lineno": 1384,
   "symbols_in_volume": [
    "kappa_velocity_3D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.Test_kappa_velocity_3D.test_zero_drift_units": {
  "data": {
   "lineno": 1359,
   "symbols_in_volume": [
    "kappa_velocity_3D",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_distribution.c": {
  "data": {
   "shadows": "astropy.constants.c"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_distribution.e": {
  "data": {
   "shadows": "astropy.constants.e"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_distribution.eps0": {
  "data": {
   "shadows": "astropy.constants.eps0"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_distribution.k_B": {
  "data": {
   "shadows": "astropy.constants.k_B"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_distribution.m_e": {
  "data": {
   "shadows": "astropy.constants.m_e"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_distribution.m_p": {
  "data": {
   "shadows": "astropy.constants.m_p"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_distribution.mu0": {
  "data": {
   "shadows": "astropy.constants.mu0"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_distribution.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_distribution.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_distribution.spint": {
  "data": {
   "shadows": "scipy.integrate"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_distribution.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_drifts": {
  "data": {},
  "type": "module"
 },
 "plasmapy.formulary.tests.test_drifts.Test_ExB_drift": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_drifts.Test_ExB_drift.test_E_x_B_1d_arrays": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "astropy.tests.helper.assert_quantity_allclose",
    "astropy.units.Quantity",
    "astropy.units.T",
    "astropy.units.V",
    "astropy.units.m",
    "astropy.units.s",
    "plasmapy.formulary.drifts.ExB_drift"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_drifts.Test_ExB_drift.test_ExB_2d_array": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "astropy.tests.helper.assert_quantity_allclose",
    "astropy.units.Quantity",
    "astropy.units.T",
    "astropy.units.V",
    "astropy.units.m",
    "astropy.units.s",
    "plasmapy.formulary.drifts.ExB_drift"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_drifts.Test_ExB_drift.test_ExB_3d_array": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "astropy.tests.helper.assert_quantity_allclose",
    "astropy.units.Quantity",
    "astropy.units.T",
    "astropy.units.V",
    "astropy.units.m",
    "astropy.units.s",
    "plasmapy.formulary.drifts.ExB_drift"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_drifts.Test_ExB_drift.test_alias": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "plasmapy.formulary.drifts.ExB_drift",
    "plasmapy.formulary.drifts.veb_"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_drifts.Test_ExB_drift.test_nonsensical_units": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "astropy.units.UnitTypeError",
    "astropy.units.kg",
    "astropy.units.mm",
    "plasmapy.formulary.drifts.ExB_drift",
    "plasmapy.formulary.tests.test_drifts.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_drifts.Test_force_drift": {
  "data": {
   "lineno": 45
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_drifts.Test_force_drift.test_alias": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "plasmapy.formulary.drifts.force_drift",
    "plasmapy.formulary.drifts.vfd_"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_drifts.Test_force_drift.test_force_B_2d_array": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "astropy.tests.helper.assert_quantity_allclose",
    "astropy.units.C",
    "astropy.units.N",
    "astropy.units.Quantity",
    "astropy.units.T",
    "astropy.units.m",
    "astropy.units.s",
    "plasmapy.formulary.drifts.force_drift"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_drifts.Test_force_drift.test_force_B_3d_array": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "astropy.tests.helper.assert_quantity_allclose",
    "astropy.units.C",
    "astropy.units.N",
    "astropy.units.Quantity",
    "astropy.units.T",
    "astropy.units.m",
    "astropy.units.s",
    "plasmapy.formulary.drifts.force_drift"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_drifts.Test_force_drift.test_force_x_B_1d_arrays": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "astropy.tests.helper.assert_quantity_allclose",
    "astropy.units.C",
    "astropy.units.N",
    "astropy.units.Quantity",
    "astropy.units.T",
    "astropy.units.m",
    "astropy.units.s",
    "plasmapy.formulary.drifts.force_drift"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_drifts.Test_force_drift.test_nonsensical_units": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "astropy.units.C",
    "astropy.units.Quantity",
    "astropy.units.UnitTypeError",
    "astropy.units.kg",
    "astropy.units.mm",
    "plasmapy.formulary.drifts.force_drift",
    "plasmapy.formulary.tests.test_drifts.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_drifts.assert_quantity_allclose": {
  "data": {
   "shadows": "astropy.tests.helper.assert_quantity_allclose"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_drifts.drifts": {
  "data": {
   "shadows": "plasmapy.formulary.drifts"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_drifts.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_drifts.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_ionization": {
  "data": {},
  "type": "module"
 },
 "plasmapy.formulary.tests.test_ionization.Saha": {
  "data": {
   "shadows": "plasmapy.formulary.ionization.Saha"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_ionization.Z_bal_": {
  "data": {
   "shadows": "plasmapy.formulary.ionization.Z_bal_"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_ionization.ionization_balance": {
  "data": {
   "shadows": "plasmapy.formulary.ionization.ionization_balance"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_ionization.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_ionization.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_ionization.test_Saha": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.Ry",
    "astropy.units.UnitTypeError",
    "astropy.units.UnitsWarning",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.kg",
    "astropy.units.m",
    "numpy.isclose",
    "plasmapy.formulary.ionization.Saha",
    "plasmapy.formulary.tests.test_ionization.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_ionization.test_ionization_balance": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.UnitTypeError",
    "astropy.units.UnitsWarning",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.kg",
    "astropy.units.m",
    "numpy.isclose",
    "plasmapy.formulary.ionization.Z_bal_",
    "plasmapy.formulary.ionization.ionization_balance",
    "plasmapy.formulary.tests.test_ionization.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_ionization.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_magnetostatics": {
  "data": {
   "symbols_in_volume": [
    "astropy.constants.mu0",
    "numpy.pi"
   ]
  },
  "type": "module"
 },
 "plasmapy.formulary.tests.test_magnetostatics.CircularWire": {
  "data": {
   "shadows": "plasmapy.formulary.magnetostatics.CircularWire"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_magnetostatics.FiniteStraightWire": {
  "data": {
   "shadows": "plasmapy.formulary.magnetostatics.FiniteStraightWire"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_magnetostatics.GeneralWire": {
  "data": {
   "shadows": "plasmapy.formulary.magnetostatics.GeneralWire"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_magnetostatics.InfiniteStraightWire": {
  "data": {
   "shadows": "plasmapy.formulary.magnetostatics.InfiniteStraightWire"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_magnetostatics.MagneticDipole": {
  "data": {
   "shadows": "plasmapy.formulary.magnetostatics.MagneticDipole"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_CircularWire": {
  "data": {
   "lineno": 146
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_CircularWire.setup_method": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "astropy.units.A",
    "astropy.units.m",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_CircularWire.test_negative_radius": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.m",
    "plasmapy.formulary.magnetostatics.CircularWire",
    "plasmapy.formulary.tests.test_magnetostatics.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_CircularWire.test_repr": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "plasmapy.formulary.magnetostatics.CircularWire",
    "repr"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_CircularWire.test_value1": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "astropy.units.T",
    "numpy.all",
    "numpy.array",
    "numpy.isclose",
    "numpy.pi",
    "plasmapy.formulary.magnetostatics.CircularWire"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_CircularWire.test_value2": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "astropy.units.T",
    "numpy.all",
    "numpy.array",
    "numpy.isclose",
    "numpy.pi",
    "plasmapy.formulary.magnetostatics.CircularWire"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_FiniteStraightWire": {
  "data": {
   "lineno": 95
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_FiniteStraightWire.setup_method": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "astropy.units.A",
    "astropy.units.m",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_FiniteStraightWire.test_repr": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "plasmapy.formulary.magnetostatics.FiniteStraightWire",
    "repr"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_FiniteStraightWire.test_same_point": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "plasmapy.formulary.magnetostatics.FiniteStraightWire",
    "plasmapy.formulary.tests.test_magnetostatics.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_FiniteStraightWire.test_value1": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "astropy.units.T",
    "numpy.all",
    "numpy.array",
    "numpy.isclose",
    "numpy.sqrt",
    "plasmapy.formulary.magnetostatics.FiniteStraightWire"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_GeneralWire": {
  "data": {
   "lineno": 44
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_GeneralWire.setup_method": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "astropy.units.A",
    "astropy.units.m",
    "numpy.array",
    "plasmapy.formulary.magnetostatics.CircularWire",
    "plasmapy.formulary.magnetostatics.FiniteStraightWire"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_GeneralWire.test_close_cw": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_GeneralWire.test_close_fw": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_GeneralWire.test_not_callable": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.A",
    "plasmapy.formulary.magnetostatics.GeneralWire",
    "plasmapy.formulary.tests.test_magnetostatics.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_GeneralWire.test_repr": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_GeneralWire.test_value_error": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.A",
    "plasmapy.formulary.magnetostatics.GeneralWire",
    "plasmapy.formulary.tests.test_magnetostatics.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_InfiniteStraightWire": {
  "data": {
   "lineno": 123
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_InfiniteStraightWire.setup_method": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "astropy.units.A",
    "astropy.units.m",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_InfiniteStraightWire.test_repr": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "plasmapy.formulary.magnetostatics.InfiniteStraightWire",
    "repr"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_InfiniteStraightWire.test_value1": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "astropy.units.T",
    "numpy.all",
    "numpy.array",
    "numpy.isclose",
    "plasmapy.formulary.magnetostatics.InfiniteStraightWire"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_MagneticDipole": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_MagneticDipole.setup_method": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "astropy.units.A",
    "astropy.units.m",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_MagneticDipole.test_repr": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "plasmapy.formulary.magnetostatics.MagneticDipole",
    "repr"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_MagneticDipole.test_value1": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "astropy.units.T",
    "numpy.all",
    "numpy.array",
    "numpy.isclose",
    "plasmapy.formulary.magnetostatics.MagneticDipole"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.Test_MagneticDipole.test_value2": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "astropy.units.T",
    "numpy.all",
    "numpy.array",
    "numpy.isclose",
    "plasmapy.formulary.magnetostatics.MagneticDipole"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_magnetostatics.constants": {
  "data": {
   "shadows": "astropy.constants"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_magnetostatics.mu0_4pi": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_magnetostatics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_magnetostatics.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_magnetostatics.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters": {
  "data": {
   "symbols_in_volume": [
    "astropy.constants.m_e",
    "astropy.constants.m_p",
    "astropy.constants.m_p.to",
    "astropy.units.K",
    "astropy.units.T",
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.s",
    "astropy.units.u",
    "numpy.array",
    "numpy.inf",
    "numpy.nan",
    "plasmapy.formulary.tests.test_parameters.Z",
    "plasmapy.formulary.tests.test_parameters.m_i",
    "plasmapy.formulary.tests.test_parameters.n_e",
    "plasmapy.formulary.tests.test_parameters.n_i"
   ]
  },
  "type": "module"
 },
 "plasmapy.formulary.tests.test_parameters.Alfven_speed": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.Alfven_speed"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.B": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_parameters.B_allnanarr": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_parameters.B_arr": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_parameters.B_nanarr": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_parameters.Bohm_diffusion": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.Bohm_diffusion"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.DB_": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.DB_"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.Debye_length": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.Debye_length"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.Debye_number": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.Debye_number"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.Hall_parameter": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.Hall_parameter"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.InvalidParticleError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidParticleError"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.PhysicsError": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.PhysicsError"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.PhysicsWarning": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.PhysicsWarning"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.RelativityError": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.RelativityError"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.RelativityWarning": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.RelativityWarning"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.T_allnanarr": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_parameters.T_arr": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_parameters.T_e": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_parameters.T_i": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_parameters.T_nanarr": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_parameters.T_nanarr2": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_parameters.T_negarr": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_parameters.Test_gyroradius": {
  "data": {
   "lineno": 743
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_parameters.Test_gyroradius.test_all_valid_and_one_valid": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "ValueError",
    "plasmapy.formulary.parameters.gyroradius",
    "plasmapy.formulary.tests.test_parameters.B_arr",
    "plasmapy.formulary.tests.test_parameters.T_i",
    "plasmapy.formulary.tests.test_parameters.T_nanarr",
    "plasmapy.formulary.tests.test_parameters.V",
    "plasmapy.formulary.tests.test_parameters.V_nanarr",
    "plasmapy.formulary.tests.test_parameters.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_gyroradius.test_handle_mixed_Qarrays": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "plasmapy.formulary.parameters.gyroradius",
    "plasmapy.formulary.tests.test_parameters.B_arr",
    "plasmapy.formulary.tests.test_parameters.T_nanarr2",
    "plasmapy.formulary.tests.test_parameters.V_nanarr"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_gyroradius.test_handle_numpy_array": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "plasmapy.formulary.parameters.gyroradius",
    "plasmapy.formulary.tests.test_parameters.B_arr",
    "plasmapy.formulary.tests.test_parameters.T_arr",
    "plasmapy.formulary.tests.test_parameters.V_arr"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_gyroradius.test_keeps_arguments_unchanged": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "astropy.tests.helper.assert_quantity_allclose",
    "astropy.units.K",
    "astropy.units.Quantity",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.nan",
    "plasmapy.formulary.parameters.gyroradius",
    "plasmapy.formulary.tests.test_parameters.B_arr",
    "plasmapy.formulary.tests.test_parameters.T_i"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_gyroradius.test_raise_two_valid_inputs": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "ValueError",
    "plasmapy.formulary.parameters.gyroradius",
    "plasmapy.formulary.tests.test_parameters.B_arr",
    "plasmapy.formulary.tests.test_parameters.T_arr",
    "plasmapy.formulary.tests.test_parameters.T_i",
    "plasmapy.formulary.tests.test_parameters.V",
    "plasmapy.formulary.tests.test_parameters.V_arr",
    "plasmapy.formulary.tests.test_parameters.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_gyroradius.test_scalar_and_nan_qarray": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.isfinite",
    "plasmapy.formulary.parameters.gyroradius",
    "plasmapy.formulary.tests.test_parameters.B_arr",
    "plasmapy.formulary.tests.test_parameters.T_allnanarr",
    "plasmapy.formulary.tests.test_parameters.T_i",
    "plasmapy.formulary.tests.test_parameters.V",
    "plasmapy.formulary.tests.test_parameters.V_allnanarr"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_kappa_thermal_speed": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_parameters.Test_kappa_thermal_speed.setup_class": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "astropy.units.eV",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_kappa_thermal_speed.test_handle_nparrays": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "plasmapy.formulary.parameters.kappa_thermal_speed",
    "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_kappa_thermal_speed.test_invalid_kappa": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "ValueError",
    "plasmapy.formulary.parameters.kappa_thermal_speed",
    "plasmapy.formulary.tests.test_parameters.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_kappa_thermal_speed.test_invalid_method": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "ValueError",
    "plasmapy.formulary.parameters.kappa_thermal_speed",
    "plasmapy.formulary.tests.test_parameters.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_kappa_thermal_speed.test_mean1": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "numpy.isclose",
    "plasmapy.formulary.parameters.kappa_thermal_speed"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_kappa_thermal_speed.test_probable1": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "numpy.isclose",
    "plasmapy.formulary.parameters.kappa_thermal_speed"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_kappa_thermal_speed.test_rms1": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "numpy.isclose",
    "plasmapy.formulary.parameters.kappa_thermal_speed"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_mass_density": {
  "data": {
   "lineno": 92
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_parameters.Test_mass_density.test_handle_nparrays": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "plasmapy.formulary.parameters.mass_density",
    "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_mass_density.test_particleless": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.m",
    "plasmapy.formulary.parameters.mass_density",
    "plasmapy.formulary.tests.test_parameters.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.Test_mass_density.test_wrong_units": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "astropy.units.J",
    "astropy.units.UnitTypeError",
    "plasmapy.formulary.parameters.mass_density",
    "plasmapy.formulary.tests.test_parameters.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.V": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_parameters.V_allnanarr": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_parameters.V_arr": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_parameters.V_nanarr": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_parameters.Z": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_parameters.assert_can_handle_nparray": {
  "data": {
   "shadows": "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.assert_quantity_allclose": {
  "data": {
   "shadows": "astropy.tests.helper.assert_quantity_allclose"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.betaH_": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.betaH_"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.c": {
  "data": {
   "shadows": "astropy.constants.c"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.cs_": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.cs_"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.cwp_": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.cwp_"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.e": {
  "data": {
   "shadows": "astropy.constants.e"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.gyrofrequency": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.gyrofrequency"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.gyroradius": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.gyroradius"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.inertial_length": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.inertial_length"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.ion": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_parameters.ion_sound_speed": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.ion_sound_speed"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.k_1": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_parameters.k_2": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_parameters.kappa_thermal_speed": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.kappa_thermal_speed"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.lambdaD_": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.lambdaD_"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.lower_hybrid_frequency": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.lower_hybrid_frequency"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.m_e": {
  "data": {
   "shadows": "astropy.constants.m_e"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.m_i": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_parameters.m_p": {
  "data": {
   "shadows": "astropy.constants.m_p"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.magnetic_energy_density": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.magnetic_energy_density"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.magnetic_pressure": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.magnetic_pressure"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.mass_density": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.mass_density"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.mu": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_parameters.mu0": {
  "data": {
   "shadows": "astropy.constants.mu0"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.nD_": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.nD_"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.n_e": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_parameters.n_i": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_parameters.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.oc_": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.oc_"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.plasma_frequency": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.plasma_frequency"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.pmag_": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.pmag_"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.pth_": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.pth_"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.rc_": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.rc_"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.rho": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_parameters.rho_": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.rho_"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.rho_arr": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_parameters.rho_infarr": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_parameters.rho_negarr": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_parameters.rhoc_": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.rhoc_"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.test_Alfven_speed": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.constants.m_e",
    "astropy.constants.m_p",
    "astropy.constants.mu0",
    "astropy.units.A",
    "astropy.units.T",
    "astropy.units.UnitTypeError",
    "astropy.units.UnitsError",
    "astropy.units.UnitsWarning",
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.array",
    "numpy.inf",
    "numpy.isclose",
    "numpy.isnan",
    "numpy.nan",
    "numpy.sqrt",
    "plasmapy.formulary.parameters.Alfven_speed",
    "plasmapy.formulary.tests.test_parameters.B",
    "plasmapy.formulary.tests.test_parameters.B_arr",
    "plasmapy.formulary.tests.test_parameters.B_nanarr",
    "plasmapy.formulary.tests.test_parameters.n_i",
    "plasmapy.formulary.tests.test_parameters.pytest",
    "plasmapy.formulary.tests.test_parameters.rho",
    "plasmapy.formulary.tests.test_parameters.rho_arr",
    "plasmapy.formulary.tests.test_parameters.rho_negarr",
    "plasmapy.particles.exceptions.InvalidParticleError",
    "plasmapy.utils.exceptions.RelativityError",
    "plasmapy.utils.exceptions.RelativityWarning",
    "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.test_Bohm_diffusion": {
  "data": {
   "lineno": 1113,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.T",
    "astropy.units.UnitTypeError",
    "astropy.units.UnitsWarning",
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.s",
    "plasmapy.formulary.parameters.Bohm_diffusion",
    "plasmapy.formulary.tests.test_parameters.B",
    "plasmapy.formulary.tests.test_parameters.T_e",
    "plasmapy.formulary.tests.test_parameters.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.test_Debye_length": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.K",
    "astropy.units.UnitTypeError",
    "astropy.units.UnitsWarning",
    "astropy.units.cm",
    "astropy.units.eV",
    "astropy.units.kg",
    "astropy.units.m",
    "numpy.array",
    "numpy.isclose",
    "plasmapy.formulary.parameters.Debye_length",
    "plasmapy.formulary.tests.test_parameters.T_e",
    "plasmapy.formulary.tests.test_parameters.n_e",
    "plasmapy.formulary.tests.test_parameters.pytest",
    "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.test_Debye_number": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.K",
    "astropy.units.UnitTypeError",
    "astropy.units.UnitsWarning",
    "astropy.units.cm",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.eV",
    "astropy.units.m",
    "astropy.units.temperature_energy",
    "numpy.array",
    "numpy.isclose",
    "plasmapy.formulary.parameters.Debye_number",
    "plasmapy.formulary.tests.test_parameters.T_e",
    "plasmapy.formulary.tests.test_parameters.n_e",
    "plasmapy.formulary.tests.test_parameters.pytest",
    "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.test_gyrofrequency": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.G",
    "astropy.units.Hz",
    "astropy.units.T",
    "astropy.units.UnitTypeError",
    "astropy.units.UnitsWarning",
    "astropy.units.cy",
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.isnan",
    "numpy.pi",
    "plasmapy.formulary.parameters.gyrofrequency",
    "plasmapy.formulary.tests.test_parameters.B",
    "plasmapy.formulary.tests.test_parameters.B_nanarr",
    "plasmapy.formulary.tests.test_parameters.ion",
    "plasmapy.formulary.tests.test_parameters.pytest",
    "plasmapy.particles.exceptions.InvalidParticleError",
    "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.test_gyroradius": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.units.A",
    "astropy.units.G",
    "astropy.units.K",
    "astropy.units.MK",
    "astropy.units.T",
    "astropy.units.UnitTypeError",
    "astropy.units.UnitsWarning",
    "astropy.units.dimensionless_angles",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.array",
    "numpy.isclose",
    "numpy.isnan",
    "numpy.nan",
    "plasmapy.formulary.parameters.gyrofrequency",
    "plasmapy.formulary.parameters.gyroradius",
    "plasmapy.formulary.parameters.thermal_speed",
    "plasmapy.formulary.tests.test_parameters.B",
    "plasmapy.formulary.tests.test_parameters.T_e",
    "plasmapy.formulary.tests.test_parameters.T_i",
    "plasmapy.formulary.tests.test_parameters.V",
    "plasmapy.formulary.tests.test_parameters.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.test_inertial_length": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.UnitTypeError",
    "astropy.units.UnitsWarning",
    "astropy.units.cm",
    "astropy.units.m",
    "numpy.isclose",
    "plasmapy.formulary.parameters.inertial_length",
    "plasmapy.formulary.tests.test_parameters.mu",
    "plasmapy.formulary.tests.test_parameters.n_e",
    "plasmapy.formulary.tests.test_parameters.n_i",
    "plasmapy.formulary.tests.test_parameters.pytest",
    "plasmapy.particles.exceptions.InvalidParticleError",
    "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.test_ion_sound_speed": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.units.A",
    "astropy.units.K",
    "astropy.units.MK",
    "astropy.units.T",
    "astropy.units.UnitTypeError",
    "astropy.units.UnitsWarning",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.abs",
    "numpy.array",
    "numpy.inf",
    "numpy.isclose",
    "numpy.isnan",
    "plasmapy.formulary.parameters.ion_sound_speed",
    "plasmapy.formulary.tests.test_parameters.T_e",
    "plasmapy.formulary.tests.test_parameters.T_i",
    "plasmapy.formulary.tests.test_parameters.T_nanarr",
    "plasmapy.formulary.tests.test_parameters.T_negarr",
    "plasmapy.formulary.tests.test_parameters.k_1",
    "plasmapy.formulary.tests.test_parameters.k_2",
    "plasmapy.formulary.tests.test_parameters.n_e",
    "plasmapy.formulary.tests.test_parameters.pytest",
    "plasmapy.particles.exceptions.InvalidParticleError",
    "plasmapy.utils.exceptions.PhysicsError",
    "plasmapy.utils.exceptions.PhysicsWarning",
    "plasmapy.utils.exceptions.RelativityError",
    "plasmapy.utils.exceptions.RelativityWarning",
    "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.test_lower_hybrid_frequency": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.T",
    "astropy.units.UnitsWarning",
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.nan",
    "plasmapy.formulary.parameters.gyrofrequency",
    "plasmapy.formulary.parameters.lower_hybrid_frequency",
    "plasmapy.formulary.parameters.plasma_frequency",
    "plasmapy.formulary.tests.test_parameters.B",
    "plasmapy.formulary.tests.test_parameters.ion",
    "plasmapy.formulary.tests.test_parameters.n_i",
    "plasmapy.formulary.tests.test_parameters.pytest",
    "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.test_magnetic_energy_density": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.assert_quantity_allclose",
    "astropy.units.G",
    "astropy.units.J",
    "astropy.units.Quantity",
    "astropy.units.T",
    "astropy.units.UnitTypeError",
    "astropy.units.UnitsWarning",
    "astropy.units.m",
    "isinstance",
    "numpy.isnan",
    "numpy.nan",
    "plasmapy.formulary.parameters.magnetic_energy_density",
    "plasmapy.formulary.parameters.magnetic_pressure",
    "plasmapy.formulary.tests.test_parameters.B",
    "plasmapy.formulary.tests.test_parameters.B_arr",
    "plasmapy.formulary.tests.test_parameters.B_nanarr",
    "plasmapy.formulary.tests.test_parameters.pytest",
    "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.test_magnetic_pressure": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.G",
    "astropy.units.Pa",
    "astropy.units.T",
    "astropy.units.UnitTypeError",
    "astropy.units.UnitsWarning",
    "astropy.units.m",
    "numpy.isclose",
    "numpy.isnan",
    "numpy.nan",
    "plasmapy.formulary.parameters.magnetic_energy_density",
    "plasmapy.formulary.parameters.magnetic_pressure",
    "plasmapy.formulary.tests.test_parameters.B",
    "plasmapy.formulary.tests.test_parameters.B_arr",
    "plasmapy.formulary.tests.test_parameters.B_nanarr",
    "plasmapy.formulary.tests.test_parameters.pytest",
    "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.test_parameters_aliases": {
  "data": {
   "lineno": 1128,
   "symbols_in_volume": [
    "plasmapy.formulary.parameters.Alfven_speed",
    "plasmapy.formulary.parameters.Bohm_diffusion",
    "plasmapy.formulary.parameters.DB_",
    "plasmapy.formulary.parameters.Debye_length",
    "plasmapy.formulary.parameters.Debye_number",
    "plasmapy.formulary.parameters.Hall_parameter",
    "plasmapy.formulary.parameters.betaH_",
    "plasmapy.formulary.parameters.cs_",
    "plasmapy.formulary.parameters.cwp_",
    "plasmapy.formulary.parameters.gyrofrequency",
    "plasmapy.formulary.parameters.gyroradius",
    "plasmapy.formulary.parameters.inertial_length",
    "plasmapy.formulary.parameters.ion_sound_speed",
    "plasmapy.formulary.parameters.kappa_thermal_speed",
    "plasmapy.formulary.parameters.lambdaD_",
    "plasmapy.formulary.parameters.lower_hybrid_frequency",
    "plasmapy.formulary.parameters.magnetic_energy_density",
    "plasmapy.formulary.parameters.magnetic_pressure",
    "plasmapy.formulary.parameters.mass_density",
    "plasmapy.formulary.parameters.nD_",
    "plasmapy.formulary.parameters.oc_",
    "plasmapy.formulary.parameters.plasma_frequency",
    "plasmapy.formulary.parameters.pmag_",
    "plasmapy.formulary.parameters.pth_",
    "plasmapy.formulary.parameters.rc_",
    "plasmapy.formulary.parameters.rho_",
    "plasmapy.formulary.parameters.rhoc_",
    "plasmapy.formulary.parameters.thermal_pressure",
    "plasmapy.formulary.parameters.thermal_speed",
    "plasmapy.formulary.parameters.ub_",
    "plasmapy.formulary.parameters.upper_hybrid_frequency",
    "plasmapy.formulary.parameters.va_",
    "plasmapy.formulary.parameters.vth_",
    "plasmapy.formulary.parameters.vth_kappa_",
    "plasmapy.formulary.parameters.wc_",
    "plasmapy.formulary.parameters.wlh_",
    "plasmapy.formulary.parameters.wp_",
    "plasmapy.formulary.parameters.wuh_"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.test_plasma_frequency": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.units.Hz",
    "astropy.units.UnitTypeError",
    "astropy.units.UnitsWarning",
    "astropy.units.cm",
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s",
    "numpy.isclose",
    "numpy.isnan",
    "numpy.nan",
    "plasmapy.formulary.parameters.plasma_frequency",
    "plasmapy.formulary.tests.test_parameters.mu",
    "plasmapy.formulary.tests.test_parameters.n_e",
    "plasmapy.formulary.tests.test_parameters.n_i",
    "plasmapy.formulary.tests.test_parameters.pytest",
    "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.test_thermal_pressure": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "astropy.units.Pa",
    "plasmapy.formulary.parameters.thermal_pressure",
    "plasmapy.formulary.tests.test_parameters.T_e",
    "plasmapy.formulary.tests.test_parameters.n_i",
    "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.test_thermal_speed": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.K",
    "astropy.units.MK",
    "astropy.units.UnitTypeError",
    "astropy.units.UnitsWarning",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.isclose",
    "plasmapy.formulary.parameters.thermal_speed",
    "plasmapy.formulary.tests.test_parameters.T_e",
    "plasmapy.formulary.tests.test_parameters.T_i",
    "plasmapy.formulary.tests.test_parameters.pytest",
    "plasmapy.particles.exceptions.InvalidParticleError",
    "plasmapy.utils.exceptions.RelativityError",
    "plasmapy.utils.exceptions.RelativityWarning",
    "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.test_upper_hybrid_frequency": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.Hz",
    "astropy.units.T",
    "astropy.units.UnitsWarning",
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s",
    "numpy.isclose",
    "plasmapy.formulary.parameters.gyrofrequency",
    "plasmapy.formulary.parameters.plasma_frequency",
    "plasmapy.formulary.parameters.upper_hybrid_frequency",
    "plasmapy.formulary.tests.test_parameters.B",
    "plasmapy.formulary.tests.test_parameters.n_e",
    "plasmapy.formulary.tests.test_parameters.pytest",
    "plasmapy.utils.pytest_helpers.assert_can_handle_nparray"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_parameters.thermal_pressure": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.thermal_pressure"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.thermal_speed": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.thermal_speed"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.ub_": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.ub_"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.upper_hybrid_frequency": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.upper_hybrid_frequency"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.va_": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.va_"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.vth_": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.vth_"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.vth_kappa_": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.vth_kappa_"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.wc_": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.wc_"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.wlh_": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.wlh_"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.wp_": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.wp_"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_parameters.wuh_": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.wuh_"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_quantum": {
  "data": {
   "symbols_in_volume": [
    "astropy.units.cm",
    "astropy.units.eV"
   ]
  },
  "type": "module"
 },
 "plasmapy.formulary.tests.test_quantum.RelativityError": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.RelativityError"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_quantum.T_e": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_quantum.Test__chemical_potential_interp": {
  "data": {
   "lineno": 194
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_quantum.Test__chemical_potential_interp.setup_class": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.cm",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_quantum.Test__chemical_potential_interp.test_fail1": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "_chemical_potential_interp",
    "astropy.units.isclose",
    "plasmapy.formulary.tests.test_quantum.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_quantum.Test__chemical_potential_interp.test_known1": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "_chemical_potential_interp",
    "astropy.units.isclose",
    "plasmapy.formulary.tests.test_quantum.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_quantum.Test_chemical_potential": {
  "data": {
   "lineno": 153
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_quantum.Test_chemical_potential.setup_class": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.cm",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_quantum.Test_chemical_potential.test_fail1": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "astropy.units.isclose",
    "chemical_potential",
    "plasmapy.formulary.tests.test_quantum.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_quantum.Test_chemical_potential.test_known1": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "astropy.units.isclose",
    "chemical_potential",
    "plasmapy.formulary.tests.test_quantum.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_quantum.c": {
  "data": {
   "shadows": "astropy.constants.c"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_quantum.h": {
  "data": {
   "shadows": "astropy.constants.h"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_quantum.n_e": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "plasmapy.formulary.tests.test_quantum.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_quantum.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_quantum.test_Fermi_energy": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "Fermi_energy",
    "TypeError",
    "ValueError",
    "astropy.units.J",
    "astropy.units.m",
    "numpy.isclose",
    "plasmapy.formulary.tests.test_quantum.n_e",
    "plasmapy.formulary.tests.test_quantum.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_quantum.test_Thomas_Fermi_length": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "Thomas_Fermi_length",
    "TypeError",
    "ValueError",
    "astropy.units.m",
    "numpy.isclose",
    "plasmapy.formulary.tests.test_quantum.n_e",
    "plasmapy.formulary.tests.test_quantum.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_quantum.test_Wigner_Seitz_radius": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "Wigner_Seitz_radius",
    "astropy.units.cm",
    "astropy.units.isclose",
    "astropy.units.m",
    "plasmapy.formulary.tests.test_quantum.n_e"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_quantum.test_deBroglie_wavelength": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ValueError",
    "astropy.constants.c",
    "astropy.units.UnitConversionError",
    "astropy.units.UnitsWarning",
    "astropy.units.cm",
    "astropy.units.g",
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.s",
    "deBroglie_wavelength",
    "numpy.array",
    "numpy.inf",
    "numpy.isclose",
    "plasmapy.formulary.tests.test_quantum.pytest",
    "plasmapy.utils.exceptions.RelativityError"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_quantum.test_quantum_aliases": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "Fermi_energy",
    "deBroglie_wavelength",
    "thermal_deBroglie_wavelength"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_quantum.test_thermal_deBroglie_wavelength": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.units.eV",
    "astropy.units.m",
    "numpy.isclose",
    "plasmapy.formulary.tests.test_quantum.T_e",
    "plasmapy.formulary.tests.test_quantum.pytest",
    "thermal_deBroglie_wavelength"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_quantum.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_relativity": {
  "data": {},
  "type": "module"
 },
 "plasmapy.formulary.tests.test_relativity.Lorentz_factor": {
  "data": {
   "shadows": "plasmapy.formulary.relativity.Lorentz_factor"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_relativity.RelativityError": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.RelativityError"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_relativity.c": {
  "data": {
   "shadows": "astropy.constants.c"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_relativity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_relativity.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_relativity.relativistic_energy": {
  "data": {
   "shadows": "plasmapy.formulary.relativity.relativistic_energy"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_relativity.test_Lorentz_factor": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ValueError",
    "astropy.constants.c",
    "astropy.units.UnitTypeError",
    "astropy.units.UnitsWarning",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.dimensionless_unscaled.unit",
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.array",
    "numpy.inf",
    "numpy.isclose",
    "numpy.sqrt",
    "plasmapy.formulary.relativity.Lorentz_factor",
    "plasmapy.formulary.tests.test_relativity.pytest",
    "plasmapy.utils.exceptions.RelativityError"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_relativity.test_relativistic_energy": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "astropy.constants.c",
    "astropy.constants.c.value",
    "astropy.units.J",
    "astropy.units.UnitTypeError",
    "astropy.units.UnitsWarning",
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.array",
    "numpy.inf",
    "numpy.isclose",
    "numpy.sqrt",
    "plasmapy.formulary.relativity.relativistic_energy",
    "plasmapy.formulary.tests.test_relativity.pytest",
    "plasmapy.utils.exceptions.RelativityError"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_relativity.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport": {
  "data": {},
  "type": "module"
 },
 "plasmapy.formulary.tests.test_transport.ClassicalTransport": {
  "data": {
   "shadows": "plasmapy.formulary.braginskii.ClassicalTransport"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport.Coulomb_logarithm": {
  "data": {
   "shadows": "plasmapy.formulary.collisions.Coulomb_logarithm"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport.CouplingWarning": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.CouplingWarning"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport.Hall_parameter": {
  "data": {
   "shadows": "plasmapy.formulary.parameters.Hall_parameter"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport.InvalidParticleError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidParticleError"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport.PhysicsError": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.PhysicsError"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport.RelativityWarning": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.RelativityWarning"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_resist_braginskii": {
  "data": {
   "lineno": 879
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_resist_braginskii.setup_class": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_resist_braginskii.test_cross_vs_ji_held": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "numpy.isclose",
    "plasmapy.formulary.braginskii._nondim_resist_braginskii",
    "plasmapy.formulary.braginskii._nondim_resist_ji_held",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_resist_braginskii.test_known_values_par": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isclose",
    "plasmapy.formulary.braginskii._nondim_resist_braginskii",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_resist_braginskii.test_unmagnetized": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isclose",
    "plasmapy.formulary.braginskii._nondim_resist_braginskii",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tc_e_braginskii": {
  "data": {
   "lineno": 747
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tc_e_braginskii.setup_class": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tc_e_braginskii.test_cross_vs_ji_held": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "numpy.isclose",
    "plasmapy.formulary.braginskii._nondim_tc_e_braginskii",
    "plasmapy.formulary.braginskii._nondim_tc_e_ji_held",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tc_e_braginskii.test_known_values_par": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isclose",
    "plasmapy.formulary.braginskii._nondim_tc_e_braginskii",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tc_e_braginskii.test_known_values_perp": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isclose",
    "plasmapy.formulary.braginskii._nondim_tc_e_braginskii",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tc_e_braginskii.test_unmagnetized": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isclose",
    "plasmapy.formulary.braginskii._nondim_tc_e_braginskii",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tc_i_braginskii": {
  "data": {
   "lineno": 807
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tc_i_braginskii.setup_class": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tc_i_braginskii.test_cross_vs_ji_held_K2": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "numpy.isclose",
    "plasmapy.formulary.braginskii._nondim_tc_i_braginskii",
    "plasmapy.formulary.braginskii._nondim_tc_i_ji_held"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tc_i_braginskii.test_known_values_par": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "numpy.isclose",
    "plasmapy.formulary.braginskii._nondim_tc_i_braginskii"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tc_i_braginskii.test_known_values_perp": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "numpy.isclose",
    "plasmapy.formulary.braginskii._nondim_tc_i_braginskii"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tc_i_braginskii.test_unmagnetized": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "numpy.isclose",
    "plasmapy.formulary.braginskii._nondim_tc_i_braginskii"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tec_braginskii": {
  "data": {
   "lineno": 840
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tec_braginskii.setup_class": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tec_braginskii.test_cross_vs_ji_held": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "numpy.isclose",
    "plasmapy.formulary.braginskii._nondim_tec_braginskii",
    "plasmapy.formulary.braginskii._nondim_tec_ji_held",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tec_braginskii.test_known_values_par": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isclose",
    "plasmapy.formulary.braginskii._nondim_tec_braginskii",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_tec_braginskii.test_unmagnetized": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isclose",
    "plasmapy.formulary.braginskii._nondim_tec_braginskii",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_visc_e_braginskii": {
  "data": {
   "lineno": 945
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_visc_e_braginskii.setup_class": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_visc_e_braginskii.test_known_values": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": [
    "numpy.isclose",
    "plasmapy.formulary.braginskii._nondim_visc_e_braginskii",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_visc_i_braginskii": {
  "data": {
   "lineno": 918
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_visc_i_braginskii.setup_class": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_visc_i_braginskii.test_known_values": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "plasmapy.formulary.braginskii._nondim_visc_i_braginskii",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test__nondim_visc_i_braginskii.test_vs_ji_held_K2": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "numpy.isclose",
    "plasmapy.formulary.braginskii._nondim_visc_i_braginskii",
    "plasmapy.formulary.braginskii._nondim_visc_i_ji_held"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport": {
  "data": {
   "lineno": 52
  },
  "type": "class"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.setup_class": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "astropy.constants.m_e",
    "astropy.units.T",
    "astropy.units.cm",
    "astropy.units.eV",
    "classmethod",
    "plasmapy.formulary.braginskii.ClassicalTransport",
    "plasmapy.formulary.tests.test_transport.pytest",
    "plasmapy.particles.atomic.integer_charge",
    "plasmapy.particles.atomic.particle_mass",
    "plasmapy.utils.exceptions.RelativityWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_Z_checks": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "ValueError",
    "plasmapy.formulary.braginskii.ClassicalTransport",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_coulomb_log_calc": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "plasmapy.formulary.braginskii.ClassicalTransport",
    "plasmapy.formulary.collisions.Coulomb_logarithm",
    "plasmapy.formulary.tests.test_transport.pytest",
    "plasmapy.utils.exceptions.RelativityWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_coulomb_log_errors": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "plasmapy.formulary.braginskii.ClassicalTransport",
    "plasmapy.formulary.tests.test_transport.pytest",
    "plasmapy.utils.exceptions.CouplingWarning",
    "plasmapy.utils.exceptions.PhysicsError"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_coulomb_log_warnings": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "plasmapy.formulary.braginskii.ClassicalTransport",
    "plasmapy.formulary.tests.test_transport.pytest",
    "plasmapy.utils.exceptions.CouplingWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_dictionary": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "numpy.allclose",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_electron_thermal_conductivity_by_model": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.W",
    "astropy.units.m",
    "numpy.allclose",
    "plasmapy.formulary.braginskii.ClassicalTransport",
    "plasmapy.formulary.tests.test_transport.pytest",
    "plasmapy.utils.exceptions.RelativityWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_electron_thermal_conductivity_units": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.W",
    "astropy.units.m",
    "plasmapy.formulary.tests.test_transport.pytest",
    "plasmapy.utils.exceptions.RelativityWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_electron_thermal_conductivity_wrapper": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "astropy.tests.helper.assert_quantity_allclose",
    "plasmapy.formulary.braginskii.electron_thermal_conductivity",
    "plasmapy.formulary.tests.test_transport.pytest",
    "plasmapy.utils.exceptions.RelativityWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_electron_viscosity_by_model": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "astropy.units.Pa",
    "astropy.units.s",
    "numpy.allclose",
    "numpy.array",
    "plasmapy.formulary.braginskii.ClassicalTransport",
    "plasmapy.formulary.tests.test_transport.pytest",
    "plasmapy.utils.exceptions.RelativityWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_electron_viscosity_units": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "astropy.units.Pa",
    "astropy.units.s",
    "plasmapy.formulary.tests.test_transport.pytest",
    "plasmapy.utils.exceptions.RelativityWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_electron_viscosity_wrapper": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "astropy.tests.helper.assert_quantity_allclose",
    "plasmapy.formulary.braginskii.electron_viscosity",
    "plasmapy.formulary.tests.test_transport.pytest",
    "plasmapy.utils.exceptions.RelativityWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_hall_calc": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "plasmapy.formulary.braginskii.ClassicalTransport",
    "plasmapy.formulary.parameters.Hall_parameter",
    "plasmapy.formulary.tests.test_transport.pytest",
    "plasmapy.utils.exceptions.RelativityWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_invalid_field": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "ValueError",
    "plasmapy.formulary.braginskii.ClassicalTransport",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_invalid_model": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "ValueError",
    "plasmapy.formulary.braginskii.ClassicalTransport",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_ion_thermal_conductivity_by_model": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.W",
    "astropy.units.m",
    "numpy.allclose",
    "plasmapy.formulary.braginskii.ClassicalTransport",
    "plasmapy.formulary.tests.test_transport.pytest",
    "plasmapy.utils.exceptions.RelativityWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_ion_thermal_conductivity_units": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.W",
    "astropy.units.m"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_ion_thermal_conductivity_wrapper": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "astropy.tests.helper.assert_quantity_allclose",
    "plasmapy.formulary.braginskii.ion_thermal_conductivity",
    "plasmapy.formulary.tests.test_transport.pytest",
    "plasmapy.utils.exceptions.RelativityWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_ion_viscosity_by_model": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "astropy.units.Pa",
    "astropy.units.s",
    "numpy.allclose",
    "numpy.array",
    "plasmapy.formulary.braginskii.ClassicalTransport",
    "plasmapy.formulary.tests.test_transport.pytest",
    "plasmapy.utils.exceptions.RelativityWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_ion_viscosity_units": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "astropy.units.Pa",
    "astropy.units.s"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_ion_viscosity_wrapper": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "astropy.tests.helper.assert_quantity_allclose",
    "plasmapy.formulary.braginskii.ion_viscosity",
    "plasmapy.formulary.tests.test_transport.pytest",
    "plasmapy.utils.exceptions.RelativityWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_number_of_returns": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "getattr",
    "numpy.size",
    "plasmapy.formulary.braginskii.ClassicalTransport",
    "plasmapy.formulary.tests.test_transport.pytest",
    "plasmapy.utils.exceptions.RelativityWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_particle_charge_state": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "astropy.constants.m_p",
    "plasmapy.formulary.braginskii.ClassicalTransport",
    "plasmapy.formulary.tests.test_transport.pytest",
    "plasmapy.particles.exceptions.InvalidParticleError"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_particle_mass": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "ValueError",
    "plasmapy.formulary.braginskii.ClassicalTransport",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_precalculated_parameters": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "astropy.units.Ohm",
    "astropy.units.m",
    "numpy.isclose",
    "plasmapy.formulary.braginskii.ClassicalTransport",
    "plasmapy.formulary.tests.test_transport.pytest",
    "plasmapy.utils.exceptions.RelativityWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_resistivity_by_model": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "astropy.units.Ohm",
    "astropy.units.m",
    "numpy.isclose",
    "plasmapy.formulary.braginskii.ClassicalTransport",
    "plasmapy.formulary.tests.test_transport.pytest",
    "plasmapy.utils.exceptions.RelativityWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_resistivity_units": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "astropy.units.Ohm",
    "astropy.units.m",
    "plasmapy.formulary.tests.test_transport.pytest",
    "plasmapy.utils.exceptions.RelativityWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_resistivity_wrapper": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "astropy.tests.helper.assert_quantity_allclose",
    "plasmapy.formulary.braginskii.resistivity",
    "plasmapy.formulary.tests.test_transport.pytest",
    "plasmapy.utils.exceptions.RelativityWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_spitzer_vs_formulary": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "astropy.units.Ohm",
    "astropy.units.eV",
    "astropy.units.m",
    "astropy.units.temperature_energy",
    "numpy.isclose",
    "plasmapy.formulary.braginskii.ClassicalTransport",
    "plasmapy.formulary.tests.test_transport.pytest",
    "plasmapy.utils.exceptions.RelativityWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_thermoelectric_conductivity_by_model": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "astropy.units.s",
    "numpy.isclose",
    "plasmapy.formulary.braginskii.ClassicalTransport",
    "plasmapy.formulary.tests.test_transport.pytest",
    "plasmapy.utils.exceptions.RelativityWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_thermoelectric_conductivity_units": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "astropy.units.m"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.Test_classical_transport.test_thermoelectric_conductivity_wrapper": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "astropy.tests.helper.assert_quantity_allclose",
    "plasmapy.formulary.braginskii.thermoelectric_conductivity",
    "plasmapy.formulary.tests.test_transport.pytest",
    "plasmapy.utils.exceptions.RelativityWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport._check_Z": {
  "data": {
   "shadows": "plasmapy.formulary.braginskii._check_Z"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport._nondim_resist_braginskii": {
  "data": {
   "shadows": "plasmapy.formulary.braginskii._nondim_resist_braginskii"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport._nondim_resist_ji_held": {
  "data": {
   "shadows": "plasmapy.formulary.braginskii._nondim_resist_ji_held"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport._nondim_resist_spitzer": {
  "data": {
   "shadows": "plasmapy.formulary.braginskii._nondim_resist_spitzer"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport._nondim_resistivity": {
  "data": {
   "shadows": "plasmapy.formulary.braginskii._nondim_resistivity"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport._nondim_tc_e_braginskii": {
  "data": {
   "shadows": "plasmapy.formulary.braginskii._nondim_tc_e_braginskii"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport._nondim_tc_e_ji_held": {
  "data": {
   "shadows": "plasmapy.formulary.braginskii._nondim_tc_e_ji_held"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport._nondim_tc_e_spitzer": {
  "data": {
   "shadows": "plasmapy.formulary.braginskii._nondim_tc_e_spitzer"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport._nondim_tc_i_braginskii": {
  "data": {
   "shadows": "plasmapy.formulary.braginskii._nondim_tc_i_braginskii"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport._nondim_tc_i_ji_held": {
  "data": {
   "shadows": "plasmapy.formulary.braginskii._nondim_tc_i_ji_held"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport._nondim_te_conductivity": {
  "data": {
   "shadows": "plasmapy.formulary.braginskii._nondim_te_conductivity"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport._nondim_tec_braginskii": {
  "data": {
   "shadows": "plasmapy.formulary.braginskii._nondim_tec_braginskii"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport._nondim_tec_ji_held": {
  "data": {
   "shadows": "plasmapy.formulary.braginskii._nondim_tec_ji_held"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport._nondim_tec_spitzer": {
  "data": {
   "shadows": "plasmapy.formulary.braginskii._nondim_tec_spitzer"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport._nondim_thermal_conductivity": {
  "data": {
   "shadows": "plasmapy.formulary.braginskii._nondim_thermal_conductivity"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport._nondim_visc_e_braginskii": {
  "data": {
   "shadows": "plasmapy.formulary.braginskii._nondim_visc_e_braginskii"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport._nondim_visc_e_ji_held": {
  "data": {
   "shadows": "plasmapy.formulary.braginskii._nondim_visc_e_ji_held"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport._nondim_visc_i_braginskii": {
  "data": {
   "shadows": "plasmapy.formulary.braginskii._nondim_visc_i_braginskii"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport._nondim_visc_i_ji_held": {
  "data": {
   "shadows": "plasmapy.formulary.braginskii._nondim_visc_i_ji_held"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport._nondim_viscosity": {
  "data": {
   "shadows": "plasmapy.formulary.braginskii._nondim_viscosity"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport.assert_quantity_allclose": {
  "data": {
   "shadows": "astropy.tests.helper.assert_quantity_allclose"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport.count_decimal_places": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.electron_thermal_conductivity": {
  "data": {
   "shadows": "plasmapy.formulary.braginskii.electron_thermal_conductivity"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport.electron_viscosity": {
  "data": {
   "shadows": "plasmapy.formulary.braginskii.electron_viscosity"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport.integer_charge": {
  "data": {
   "shadows": "plasmapy.particles.atomic.integer_charge"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport.ion_thermal_conductivity": {
  "data": {
   "shadows": "plasmapy.formulary.braginskii.ion_thermal_conductivity"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport.ion_viscosity": {
  "data": {
   "shadows": "plasmapy.formulary.braginskii.ion_viscosity"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport.m_e": {
  "data": {
   "shadows": "astropy.constants.m_e"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport.m_p": {
  "data": {
   "shadows": "astropy.constants.m_p"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport.particle_mass": {
  "data": {
   "shadows": "plasmapy.particles.atomic.particle_mass"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport.resistivity": {
  "data": {
   "shadows": "plasmapy.formulary.braginskii.resistivity"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport.test__nondim_resist_ji_held": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "numpy.isclose",
    "plasmapy.formulary.braginskii._nondim_resist_ji_held",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.test__nondim_resist_spitzer": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isclose",
    "plasmapy.formulary.braginskii._nondim_resist_braginskii",
    "plasmapy.formulary.braginskii._nondim_resist_ji_held",
    "plasmapy.formulary.braginskii._nondim_resist_spitzer",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.test__nondim_tc_e_ji_held": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "numpy.isclose",
    "plasmapy.formulary.braginskii._nondim_tc_e_ji_held",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.test__nondim_tc_e_spitzer": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isclose",
    "plasmapy.formulary.braginskii._nondim_tc_e_braginskii",
    "plasmapy.formulary.braginskii._nondim_tc_e_ji_held",
    "plasmapy.formulary.braginskii._nondim_tc_e_spitzer",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.test__nondim_tc_i_ji_held": {
  "data": {
   "lineno": 1220,
   "symbols_in_volume": [
    "numpy.isclose",
    "plasmapy.formulary.braginskii._nondim_tc_i_ji_held",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.test__nondim_tec_ji_held": {
  "data": {
   "lineno": 1082,
   "symbols_in_volume": [
    "numpy.isclose",
    "plasmapy.formulary.braginskii._nondim_tec_ji_held",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.test__nondim_tec_spitzer": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isclose",
    "plasmapy.formulary.braginskii._nondim_tec_braginskii",
    "plasmapy.formulary.braginskii._nondim_tec_ji_held",
    "plasmapy.formulary.braginskii._nondim_tec_spitzer",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.test__nondim_visc_e_ji_held": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": [
    "numpy.isclose",
    "plasmapy.formulary.braginskii._nondim_visc_e_ji_held",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.test__nondim_visc_i_ji_held": {
  "data": {
   "lineno": 1252,
   "symbols_in_volume": [
    "numpy.isclose",
    "plasmapy.formulary.braginskii._nondim_visc_i_ji_held",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.test_fail__check_Z_nan": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "plasmapy.formulary.braginskii._check_Z",
    "plasmapy.formulary.tests.test_transport.pytest",
    "plasmapy.utils.exceptions.PhysicsError"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.test_nondim_resistivity_unrecognized_model": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "ValueError",
    "plasmapy.formulary.braginskii._nondim_resistivity",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.test_nondim_te_conductivity_unrecognized_model": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "ValueError",
    "plasmapy.formulary.braginskii._nondim_te_conductivity",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.test_nondim_thermal_conductivity_unrecognized_model": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "ValueError",
    "plasmapy.formulary.braginskii._nondim_thermal_conductivity",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.test_nondim_viscosity_unrecognized_model": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "ValueError",
    "plasmapy.formulary.braginskii._nondim_viscosity",
    "plasmapy.formulary.tests.test_transport.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.formulary.tests.test_transport.thermoelectric_conductivity": {
  "data": {
   "shadows": "plasmapy.formulary.braginskii.thermoelectric_conductivity"
  },
  "type": "import"
 },
 "plasmapy.formulary.tests.test_transport.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.get_version": {
  "data": {
   "shadows": "setuptools_scm.get_version"
  },
  "type": "import"
 },
 "plasmapy.online_help": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "plasmapy.webbrowser",
    "urllib.parse.urlencode"
   ]
  },
  "type": "function"
 },
 "plasmapy.optional_deps": {
  "data": {
   "symbols_in_volume": [
    "plasmapy.optional_deps._optional_import_error_template"
   ]
  },
  "type": "module"
 },
 "plasmapy.optional_deps.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "plasmapy.optional_deps._optional_import_error_template": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "ImportError",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "plasmapy.optional_deps.h5py_import_error": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "plasmapy.optional_deps.lmfit_import_error": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "plasmapy.optional_deps.mpl_import_error": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "plasmapy.optional_deps.mpmath_import_error": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "plasmapy.particles": {
  "data": {
   "symbols_in_volume": [
    "plasmapy.particles.particle_class.Particle"
   ]
  },
  "type": "module"
 },
 "plasmapy.particles.AbstractParticle": {
  "data": {
   "shadows": "plasmapy.particles.particle_class.AbstractParticle"
  },
  "type": "import"
 },
 "plasmapy.particles.CustomParticle": {
  "data": {
   "shadows": "plasmapy.particles.particle_class.CustomParticle"
  },
  "type": "import"
 },
 "plasmapy.particles.DimensionlessParticle": {
  "data": {
   "shadows": "plasmapy.particles.particle_class.DimensionlessParticle"
  },
  "type": "import"
 },
 "plasmapy.particles.IonizationState": {
  "data": {
   "shadows": "plasmapy.particles.ionization_state.IonizationState"
  },
  "type": "import"
 },
 "plasmapy.particles.IonizationStates": {
  "data": {
   "shadows": "plasmapy.particles.ionization_states.IonizationStates"
  },
  "type": "import"
 },
 "plasmapy.particles.Particle": {
  "data": {
   "shadows": "plasmapy.particles.particle_class.Particle"
  },
  "type": "import"
 },
 "plasmapy.particles.ParticleJSONDecoder": {
  "data": {
   "shadows": "plasmapy.particles.serialization.ParticleJSONDecoder"
  },
  "type": "import"
 },
 "plasmapy.particles.ParticleZoo": {
  "data": {
   "shadows": "plasmapy.particles.special_particles.ParticleZoo"
  },
  "type": "import"
 },
 "plasmapy.particles.State": {
  "data": {
   "shadows": "plasmapy.particles.ionization_state.State"
  },
  "type": "import"
 },
 "plasmapy.particles.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "plasmapy.particles.alpha": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "plasmapy.particles.atomic": {
  "data": {},
  "type": "module"
 },
 "plasmapy.particles.atomic.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "plasmapy.particles.atomic.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "plasmapy.particles.atomic.InvalidElementError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidElementError"
  },
  "type": "import"
 },
 "plasmapy.particles.atomic.InvalidIsotopeError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidIsotopeError"
  },
  "type": "import"
 },
 "plasmapy.particles.atomic.InvalidParticleError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidParticleError"
  },
  "type": "import"
 },
 "plasmapy.particles.atomic.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "plasmapy.particles.atomic.MissingAtomicDataError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.MissingAtomicDataError"
  },
  "type": "import"
 },
 "plasmapy.particles.atomic.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "plasmapy.particles.atomic.Particle": {
  "data": {
   "shadows": "plasmapy.particles.particle_class.Particle"
  },
  "type": "import"
 },
 "plasmapy.particles.atomic.Real": {
  "data": {
   "shadows": "numbers.Real"
  },
  "type": "import"
 },
 "plasmapy.particles.atomic.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "plasmapy.particles.atomic._Elements": {
  "data": {
   "shadows": "plasmapy.particles.elements._Elements"
  },
  "type": "import"
 },
 "plasmapy.particles.atomic._Isotopes": {
  "data": {
   "shadows": "plasmapy.particles.isotopes._Isotopes"
  },
  "type": "import"
 },
 "plasmapy.particles.atomic.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "plasmapy.particles.atomic._is_electron": {
  "data": {
   "lineno": 1146,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.atomic.atomic_number": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numbers.Integral",
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.particle_input.particle_input"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.atomic.atomic_symbol": {
  "data": {
   "shadows": "plasmapy.particles.symbols.atomic_symbol"
  },
  "type": "import"
 },
 "plasmapy.particles.atomic.common_isotopes": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "bool",
    "common_isotopes_for_element",
    "numbers.Integral",
    "plasmapy.particles.exceptions.InvalidElementError",
    "plasmapy.particles.exceptions.InvalidParticleError",
    "plasmapy.particles.symbols.atomic_symbol",
    "range",
    "str",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.atomic.common_isotopes.common_isotopes_for_element": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "bool",
    "int",
    "len",
    "plasmapy.particles.atomic.known_isotopes",
    "plasmapy.particles.isotopes._Isotopes",
    "plasmapy.particles.isotopes._Isotopes.keys",
    "sorted",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.atomic.const": {
  "data": {
   "shadows": "astropy.constants"
  },
  "type": "import"
 },
 "plasmapy.particles.atomic.electric_charge": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.particle_input.particle_input"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.atomic.half_life": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "numbers.Integral",
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.particle_input.particle_input",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.atomic.integer_charge": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "numbers.Integral",
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.particle_input.particle_input"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.atomic.is_stable": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "bool",
    "numbers.Integral",
    "plasmapy.particles.exceptions.InvalidIsotopeError",
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.particle_input.particle_input",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.atomic.isotopic_abundance": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "numbers.Integral",
    "numbers.Real",
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.particle_input.particle_input",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.atomic.known_isotopes": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "known_isotopes_for_element",
    "len",
    "numbers.Integral",
    "plasmapy.particles.elements._Elements.keys",
    "plasmapy.particles.exceptions.InvalidElementError",
    "plasmapy.particles.exceptions.InvalidParticleError",
    "plasmapy.particles.symbols.atomic_symbol",
    "range",
    "str",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.atomic.known_isotopes.known_isotopes_for_element": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "len",
    "plasmapy.particles.atomic.mass_number",
    "plasmapy.particles.isotopes._Isotopes.keys",
    "plasmapy.particles.symbols.atomic_symbol",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.atomic.mass_number": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numbers.Integral",
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.particle_input.particle_input"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.atomic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.particles.atomic.particle_input": {
  "data": {
   "shadows": "plasmapy.particles.particle_input.particle_input"
  },
  "type": "import"
 },
 "plasmapy.particles.atomic.particle_mass": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "numbers.Integral",
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.particle_input.particle_input"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.atomic.periodic_table_block": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numbers.Integral",
    "plasmapy.particles.elements._Elements",
    "plasmapy.particles.symbols.atomic_symbol",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.atomic.periodic_table_category": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numbers.Integral",
    "plasmapy.particles.elements._Elements",
    "plasmapy.particles.symbols.atomic_symbol",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.atomic.periodic_table_group": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numbers.Integral",
    "plasmapy.particles.elements._Elements",
    "plasmapy.particles.symbols.atomic_symbol",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.atomic.periodic_table_period": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numbers.Integral",
    "plasmapy.particles.elements._Elements",
    "plasmapy.particles.symbols.atomic_symbol",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.atomic.reduced_mass": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "get_particle_mass"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.atomic.reduced_mass.get_particle_mass": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "astropy.constants.Constant",
    "astropy.units.Quantity",
    "astropy.units.UnitConversionError",
    "astropy.units.kg",
    "isinstance",
    "plasmapy.particles.exceptions.MissingAtomicDataError",
    "plasmapy.particles.particle_class.Particle"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.atomic.stable_isotopes": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "bool",
    "numbers.Integral",
    "plasmapy.particles.exceptions.InvalidElementError",
    "plasmapy.particles.exceptions.InvalidParticleError",
    "plasmapy.particles.symbols.atomic_symbol",
    "range",
    "stable_isotopes_for_element",
    "str",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.atomic.stable_isotopes.stable_isotopes_for_element": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "bool",
    "int",
    "plasmapy.particles.atomic.known_isotopes",
    "plasmapy.particles.isotopes._Isotopes",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.atomic.standard_atomic_weight": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.particle_input.particle_input"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.atomic.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.particles.atomic_number": {
  "data": {
   "shadows": "plasmapy.particles.atomic.atomic_number"
  },
  "type": "import"
 },
 "plasmapy.particles.atomic_symbol": {
  "data": {
   "shadows": "plasmapy.particles.symbols.atomic_symbol"
  },
  "type": "import"
 },
 "plasmapy.particles.common_isotopes": {
  "data": {
   "shadows": "plasmapy.particles.atomic.common_isotopes"
  },
  "type": "import"
 },
 "plasmapy.particles.data": {
  "data": {},
  "type": "module"
 },
 "plasmapy.particles.data.test": {
  "data": {
   "symbols_in_volume": [
    "plasmapy.particles.data.test.data_dir",
    "plasmapy.particles.data.test.glob",
    "plasmapy.particles.data.test.os"
   ]
  },
  "type": "module"
 },
 "plasmapy.particles.data.test.data_dir": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "plasmapy.particles.data.test.data_files": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "plasmapy.particles.data.test.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "plasmapy.particles.data.test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "plasmapy.particles.deuteron": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "plasmapy.particles.electric_charge": {
  "data": {
   "shadows": "plasmapy.particles.atomic.electric_charge"
  },
  "type": "import"
 },
 "plasmapy.particles.electron": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "plasmapy.particles.element_name": {
  "data": {
   "shadows": "plasmapy.particles.symbols.element_name"
  },
  "type": "import"
 },
 "plasmapy.particles.elements": {
  "data": {
   "symbols_in_volume": [
    "plasmapy.particles.elements._Elements",
    "plasmapy.particles.elements._element_obj_hook",
    "plasmapy.particles.elements.collections",
    "plasmapy.particles.elements.json",
    "plasmapy.particles.elements.pkgutil"
   ]
  },
  "type": "module"
 },
 "plasmapy.particles.elements._Elements": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "plasmapy.particles.elements._PeriodicTable": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "plasmapy.particles.elements._atomic_numbers_to_symbols": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "plasmapy.particles.elements._element_names_to_symbols": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "plasmapy.particles.elements._element_obj_hook": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "astropy.units.Unit"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.elements.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "plasmapy.particles.elements.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "plasmapy.particles.elements.pkgutil": {
  "data": {
   "shadows": "pkgutil"
  },
  "type": "import"
 },
 "plasmapy.particles.elements.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.particles.exceptions": {
  "data": {},
  "type": "module"
 },
 "plasmapy.particles.exceptions.AtomicError": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "plasmapy.utils.PlasmaPyError"
   ]
  },
  "type": "class"
 },
 "plasmapy.particles.exceptions.AtomicWarning": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "plasmapy.utils.PlasmaPyWarning"
   ]
  },
  "type": "class"
 },
 "plasmapy.particles.exceptions.ChargeError": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "plasmapy.particles.exceptions.AtomicError"
   ]
  },
  "type": "class"
 },
 "plasmapy.particles.exceptions.InvalidElementError": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "plasmapy.particles.exceptions.UnexpectedParticleError"
   ]
  },
  "type": "class"
 },
 "plasmapy.particles.exceptions.InvalidIonError": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "plasmapy.particles.exceptions.UnexpectedParticleError"
   ]
  },
  "type": "class"
 },
 "plasmapy.particles.exceptions.InvalidIsotopeError": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "plasmapy.particles.exceptions.UnexpectedParticleError"
   ]
  },
  "type": "class"
 },
 "plasmapy.particles.exceptions.InvalidParticleError": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "plasmapy.particles.exceptions.AtomicError"
   ]
  },
  "type": "class"
 },
 "plasmapy.particles.exceptions.MissingAtomicDataError": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "plasmapy.particles.exceptions.AtomicError"
   ]
  },
  "type": "class"
 },
 "plasmapy.particles.exceptions.MissingAtomicDataWarning": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "plasmapy.particles.exceptions.AtomicWarning"
   ]
  },
  "type": "class"
 },
 "plasmapy.particles.exceptions.PlasmaPyError": {
  "data": {
   "shadows": "plasmapy.utils.PlasmaPyError"
  },
  "type": "import"
 },
 "plasmapy.particles.exceptions.PlasmaPyWarning": {
  "data": {
   "shadows": "plasmapy.utils.PlasmaPyWarning"
  },
  "type": "import"
 },
 "plasmapy.particles.exceptions.UnexpectedParticleError": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "plasmapy.particles.exceptions.AtomicError"
   ]
  },
  "type": "class"
 },
 "plasmapy.particles.half_life": {
  "data": {
   "shadows": "plasmapy.particles.atomic.half_life"
  },
  "type": "import"
 },
 "plasmapy.particles.integer_charge": {
  "data": {
   "shadows": "plasmapy.particles.atomic.integer_charge"
  },
  "type": "import"
 },
 "plasmapy.particles.ionic_symbol": {
  "data": {
   "shadows": "plasmapy.particles.symbols.ionic_symbol"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_state": {
  "data": {
   "symbols_in_volume": [
    "plasmapy.particles.ionization_state.collections"
   ]
  },
  "type": "module"
 },
 "plasmapy.particles.ionization_state.AtomicError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.AtomicError"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_state.ChargeError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.ChargeError"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_state.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_state.InvalidParticleError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidParticleError"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_state.IonizationState": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "plasmapy.particles.ionization_state.IonizationState.T_e": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "AttributeError",
    "astropy.units.K",
    "astropy.units.UnitConversionError",
    "astropy.units.UnitsError",
    "astropy.units.quantity_input",
    "astropy.units.temperature_energy",
    "plasmapy.particles.exceptions.AtomicError"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState.Z_mean": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "numpy.nan",
    "numpy.sum",
    "plasmapy.particles.exceptions.ChargeError",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState.Z_most_abundant": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "numbers.Integral",
    "numpy.any",
    "numpy.flatnonzero",
    "numpy.isnan",
    "plasmapy.particles.exceptions.AtomicError",
    "property",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState.Z_rms": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "numpy.sqrt",
    "numpy.sum",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState.__eq__": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.K",
    "astropy.units.allclose",
    "astropy.units.m",
    "isinstance",
    "numpy.all",
    "numpy.allclose",
    "numpy.any",
    "numpy.isnan",
    "numpy.min",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.ionization_state.IonizationState"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState.__getitem__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numbers.Integral",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.exceptions.ChargeError",
    "plasmapy.particles.exceptions.InvalidParticleError",
    "plasmapy.particles.ionization_state.State",
    "plasmapy.particles.particle_class.Particle",
    "slice"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState.__init__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "Exception",
    "astropy.units.K",
    "astropy.units.Quantity",
    "astropy.units.m",
    "astropy.units.temperature_energy",
    "float",
    "int",
    "isinstance",
    "numbers.Real",
    "numpy.inf",
    "numpy.isnan",
    "numpy.nan",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.ionization_state.warnings",
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.particle_input.particle_input",
    "plasmapy.utils.decorators.validate_quantities",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState.__iter__": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState.__next__": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "StopIteration",
    "plasmapy.particles.ionization_state.State"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState.__repr__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState.__setitem__": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState.__str__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState._get_states_info": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "numpy.isfinite",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState._is_normalized": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bool",
    "isinstance",
    "numbers.Real",
    "numpy.isclose",
    "numpy.sum",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState._particle_instances": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "plasmapy.particles.particle_class.Particle",
    "property",
    "range",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState.atomic_number": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState.base_particle": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState.element": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState.equil_ionic_fractions": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "NotImplementedError",
    "astropy.units.K",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState.equilibrate": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "NotImplementedError",
    "astropy.units.K",
    "astropy.units.quantity_input",
    "astropy.units.temperature_energy",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState.info": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "numbers.Real",
    "numpy.all",
    "numpy.isfinite",
    "numpy.isnan",
    "print"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState.integer_charges": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int",
    "numpy.ndarray",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState.ionic_fractions": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "Exception",
    "astropy.units.Quantity",
    "astropy.units.m",
    "isinstance",
    "len",
    "numpy.all",
    "numpy.any",
    "numpy.array",
    "numpy.float64",
    "numpy.full",
    "numpy.isclose",
    "numpy.isnan",
    "numpy.min",
    "numpy.nan",
    "numpy.sum",
    "plasmapy.particles.exceptions.AtomicError"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState.ionic_symbols": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState.isotope": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState.kappa": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "numbers.Real",
    "numpy.real"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState.n_e": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.quantity_input",
    "numpy.sum",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState.n_elem": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.quantity_input",
    "numpy.inf",
    "numpy.isnan",
    "numpy.nan",
    "plasmapy.particles.exceptions.AtomicError"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState.normalize": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState.number_densities": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.quantity_input",
    "len",
    "numpy.any",
    "plasmapy.particles.exceptions.AtomicError"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.IonizationState.tol": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "numbers.Real"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_state.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_state.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_state.Particle": {
  "data": {
   "shadows": "plasmapy.particles.particle_class.Particle"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_state.Real": {
  "data": {
   "shadows": "numbers.Real"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_state.State": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "plasmapy.particles.ionization_state.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_state.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "plasmapy.particles.ionization_state._number_density_errmsg": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "plasmapy.particles.ionization_state.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_state.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_state.particle_input": {
  "data": {
   "shadows": "plasmapy.particles.particle_input.particle_input"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_state.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_state.validate_quantities": {
  "data": {
   "shadows": "plasmapy.utils.decorators.validate_quantities"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_state.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_states": {
  "data": {},
  "type": "module"
 },
 "plasmapy.particles.ionization_states.AtomicError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.AtomicError"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_states.ChargeError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.ChargeError"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_states.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_states.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_states.InvalidParticleError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidParticleError"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_states.IonizationState": {
  "data": {
   "shadows": "plasmapy.particles.ionization_state.IonizationState"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_states.IonizationStates": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "plasmapy.particles.ionization_states.IonizationStates.T_e": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "AttributeError",
    "astropy.units.K",
    "astropy.units.UnitsError",
    "astropy.units.quantity_input",
    "astropy.units.temperature_energy",
    "plasmapy.particles.exceptions.AtomicError"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_states.IonizationStates.__ITER__": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_states.IonizationStates.__eq__": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.quantity.allclose",
    "eval",
    "isinstance",
    "numpy.all",
    "numpy.any",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.min",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.ionization_states.IonizationStates"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_states.IonizationStates.__getitem__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "Exception",
    "IndexError",
    "TypeError",
    "isinstance",
    "len",
    "numbers.Integral",
    "numpy.sum",
    "plasmapy.particles.atomic.atomic_number",
    "plasmapy.particles.exceptions.ChargeError",
    "plasmapy.particles.ionization_state.IonizationState",
    "plasmapy.particles.ionization_state.State",
    "plasmapy.particles.symbols.particle_symbol",
    "tuple"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_states.IonizationStates.__init__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "Exception",
    "astropy.units.K",
    "astropy.units.Quantity",
    "astropy.units.m",
    "astropy.units.temperature_energy",
    "bool",
    "dict",
    "isinstance",
    "numbers.Real",
    "numpy.all",
    "numpy.inf",
    "numpy.nan",
    "numpy.ndarray",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.ionization_states.collections",
    "plasmapy.utils.decorators.validate_quantities",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_states.IonizationStates.__iter__": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_states.IonizationStates.__next__": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "StopIteration",
    "len",
    "numpy.sum",
    "plasmapy.particles.ionization_state.IonizationState"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_states.IonizationStates.__repr__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_states.IonizationStates.__setitem__": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "TypeError",
    "ValueError",
    "astropy.units.Quantity",
    "astropy.units.UnitConversionError",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.m",
    "astropy.units.quantity.allclose",
    "isinstance",
    "len",
    "list",
    "numpy.all",
    "numpy.array",
    "numpy.float64",
    "numpy.isclose",
    "numpy.isnan",
    "numpy.sum",
    "plasmapy.particles.atomic.atomic_number",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.symbols.particle_symbol",
    "repr"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_states.IonizationStates.__str__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_states.IonizationStates.abundances": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "dict",
    "float",
    "isinstance",
    "numpy.nan",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.symbols.particle_symbol",
    "repr",
    "set",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_states.IonizationStates.base_particles": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_states.IonizationStates.equilibrate": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "NotImplementedError",
    "astropy.units.K",
    "numbers.Real",
    "numpy.inf",
    "numpy.nan",
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_states.IonizationStates.info": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "len",
    "numbers.Real",
    "numpy.isfinite",
    "print"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_states.IonizationStates.ionic_fractions": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.units.Quantity",
    "astropy.units.UnitConversionError",
    "astropy.units.m",
    "dict",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "numpy.all",
    "numpy.array",
    "numpy.float",
    "numpy.float64",
    "numpy.full",
    "numpy.isclose",
    "numpy.isnan",
    "numpy.max",
    "numpy.min",
    "numpy.nan",
    "numpy.ndarray",
    "numpy.sum",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.exceptions.InvalidParticleError",
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.symbols.particle_symbol",
    "range",
    "set",
    "sorted",
    "tuple",
    "type",
    "typing.Dict",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_states.IonizationStates.kappa": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "numbers.Real",
    "numpy.real"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_states.IonizationStates.log_abundances": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "Exception",
    "numbers.Real",
    "plasmapy.particles.exceptions.AtomicError",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_states.IonizationStates.n": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "Exception",
    "astropy.units.UnitConversionError",
    "astropy.units.m",
    "astropy.units.quantity_input",
    "plasmapy.particles.exceptions.AtomicError"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_states.IonizationStates.n_e": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.quantity_input",
    "numpy.linspace",
    "numpy.sum",
    "plasmapy.particles.atomic.atomic_number",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_states.IonizationStates.normalize": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_states.IonizationStates.number_densities": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "property",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_states.IonizationStates.tol": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "numbers.Real",
    "numpy.real"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.ionization_states.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_states.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_states.Particle": {
  "data": {
   "shadows": "plasmapy.particles.particle_class.Particle"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_states.Real": {
  "data": {
   "shadows": "numbers.Real"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_states.State": {
  "data": {
   "shadows": "plasmapy.particles.ionization_state.State"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_states.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_states.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_states.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "plasmapy.particles.ionization_states.atomic_number": {
  "data": {
   "shadows": "plasmapy.particles.atomic.atomic_number"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_states.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_states.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_states.particle_symbol": {
  "data": {
   "shadows": "plasmapy.particles.symbols.particle_symbol"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_states.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.particles.ionization_states.validate_quantities": {
  "data": {
   "shadows": "plasmapy.utils.decorators.validate_quantities"
  },
  "type": "import"
 },
 "plasmapy.particles.is_stable": {
  "data": {
   "shadows": "plasmapy.particles.atomic.is_stable"
  },
  "type": "import"
 },
 "plasmapy.particles.isotope_symbol": {
  "data": {
   "shadows": "plasmapy.particles.symbols.isotope_symbol"
  },
  "type": "import"
 },
 "plasmapy.particles.isotopes": {
  "data": {
   "symbols_in_volume": [
    "plasmapy.particles.isotopes._isotope_obj_hook",
    "plasmapy.particles.isotopes.json",
    "plasmapy.particles.isotopes.pkgutil"
   ]
  },
  "type": "module"
 },
 "plasmapy.particles.isotopes._Isotopes": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "plasmapy.particles.isotopes._isotope_obj_hook": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "astropy.units.Unit"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.isotopes.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "plasmapy.particles.isotopes.pkgutil": {
  "data": {
   "shadows": "pkgutil"
  },
  "type": "import"
 },
 "plasmapy.particles.isotopes.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.particles.isotopic_abundance": {
  "data": {
   "shadows": "plasmapy.particles.atomic.isotopic_abundance"
  },
  "type": "import"
 },
 "plasmapy.particles.json_load_particle": {
  "data": {
   "shadows": "plasmapy.particles.serialization.json_load_particle"
  },
  "type": "import"
 },
 "plasmapy.particles.json_loads_particle": {
  "data": {
   "shadows": "plasmapy.particles.serialization.json_loads_particle"
  },
  "type": "import"
 },
 "plasmapy.particles.known_isotopes": {
  "data": {
   "shadows": "plasmapy.particles.atomic.known_isotopes"
  },
  "type": "import"
 },
 "plasmapy.particles.mass_number": {
  "data": {
   "shadows": "plasmapy.particles.atomic.mass_number"
  },
  "type": "import"
 },
 "plasmapy.particles.neutron": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "plasmapy.particles.nuclear": {
  "data": {},
  "type": "module"
 },
 "plasmapy.particles.nuclear.AtomicError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.AtomicError"
  },
  "type": "import"
 },
 "plasmapy.particles.nuclear.InvalidParticleError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidParticleError"
  },
  "type": "import"
 },
 "plasmapy.particles.nuclear.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "plasmapy.particles.nuclear.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "plasmapy.particles.nuclear.Particle": {
  "data": {
   "shadows": "plasmapy.particles.particle_class.Particle"
  },
  "type": "import"
 },
 "plasmapy.particles.nuclear.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "plasmapy.particles.nuclear.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "plasmapy.particles.nuclear.mass_energy": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "int",
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.particle_input.particle_input",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.nuclear.nuclear_binding_energy": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "astropy.units.J",
    "astropy.units.Quantity",
    "int",
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.particle_input.particle_input",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.nuclear.nuclear_reaction_energy": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "add_mass_energy",
    "isinstance",
    "len",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.nuclear.re",
    "process_particles_list",
    "str",
    "total_baryon_number",
    "total_charge"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.nuclear.nuclear_reaction_energy.add_mass_energy": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "astropy.units.J",
    "astropy.units.Quantity",
    "plasmapy.particles.particle_class.Particle",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.nuclear.nuclear_reaction_energy.process_particles_list": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "int",
    "isinstance",
    "list",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.exceptions.InvalidParticleError",
    "plasmapy.particles.particle_class.Particle",
    "range",
    "str",
    "tuple",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.nuclear.nuclear_reaction_energy.total_baryon_number": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "int",
    "plasmapy.particles.particle_class.Particle",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.nuclear.nuclear_reaction_energy.total_charge": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "int",
    "plasmapy.particles.particle_class.Particle",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.nuclear.particle_input": {
  "data": {
   "shadows": "plasmapy.particles.particle_input.particle_input"
  },
  "type": "import"
 },
 "plasmapy.particles.nuclear.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "plasmapy.particles.nuclear.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.particles.nuclear_binding_energy": {
  "data": {
   "shadows": "plasmapy.particles.nuclear.nuclear_binding_energy"
  },
  "type": "import"
 },
 "plasmapy.particles.nuclear_reaction_energy": {
  "data": {
   "shadows": "plasmapy.particles.nuclear.nuclear_reaction_energy"
  },
  "type": "import"
 },
 "plasmapy.particles.parsing": {
  "data": {
   "symbols_in_volume": [
    "plasmapy.particles.parsing._create_alias_dicts",
    "plasmapy.particles.special_particles._Particles"
   ]
  },
  "type": "module"
 },
 "plasmapy.particles.parsing.AtomicWarning": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.AtomicWarning"
  },
  "type": "import"
 },
 "plasmapy.particles.parsing.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "plasmapy.particles.parsing.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "plasmapy.particles.parsing.InvalidElementError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidElementError"
  },
  "type": "import"
 },
 "plasmapy.particles.parsing.InvalidParticleError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidParticleError"
  },
  "type": "import"
 },
 "plasmapy.particles.parsing.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "plasmapy.particles.parsing.ParticleZoo": {
  "data": {
   "shadows": "plasmapy.particles.special_particles.ParticleZoo"
  },
  "type": "import"
 },
 "plasmapy.particles.parsing.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "plasmapy.particles.parsing._Elements": {
  "data": {
   "shadows": "plasmapy.particles.elements._Elements"
  },
  "type": "import"
 },
 "plasmapy.particles.parsing._Isotopes": {
  "data": {
   "shadows": "plasmapy.particles.isotopes._Isotopes"
  },
  "type": "import"
 },
 "plasmapy.particles.parsing._Particles": {
  "data": {
   "shadows": "plasmapy.particles.special_particles._Particles"
  },
  "type": "import"
 },
 "plasmapy.particles.parsing._atomic_numbers_to_symbols": {
  "data": {
   "shadows": "plasmapy.particles.elements._atomic_numbers_to_symbols"
  },
  "type": "import"
 },
 "plasmapy.particles.parsing._create_alias_dicts": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "aliases",
    "dict",
    "list",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.parsing._dealias_particle_aliases": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "isinstance",
    "numbers.Integral",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.parsing._element_names_to_symbols": {
  "data": {
   "shadows": "plasmapy.particles.elements._element_names_to_symbols"
  },
  "type": "import"
 },
 "plasmapy.particles.parsing._invalid_particle_errmsg": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.parsing._parse_and_check_atomic_input": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "TypeError",
    "_atomic_number_to_symbol",
    "_extract_charge",
    "_extract_mass_number",
    "_get_element",
    "_reconstruct_ion_symbol",
    "_reconstruct_isotope_symbol",
    "int",
    "isinstance",
    "numbers.Integral",
    "plasmapy.particles.elements._Elements",
    "plasmapy.particles.exceptions.AtomicWarning",
    "plasmapy.particles.exceptions.InvalidElementError",
    "plasmapy.particles.exceptions.InvalidParticleError",
    "plasmapy.particles.parsing._dealias_particle_aliases",
    "plasmapy.particles.parsing.warnings",
    "plasmapy.particles.special_particles.ParticleZoo.everything",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.parsing._parse_and_check_atomic_input._atomic_number_to_symbol": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "numbers.Integral",
    "plasmapy.particles.elements._atomic_numbers_to_symbols",
    "plasmapy.particles.elements._atomic_numbers_to_symbols.keys",
    "plasmapy.particles.exceptions.InvalidParticleError"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.parsing._parse_and_check_atomic_input._extract_charge": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "plasmapy.particles.exceptions.InvalidParticleError",
    "plasmapy.particles.parsing.re",
    "plasmapy.utils.roman.from_roman",
    "plasmapy.utils.roman.is_roman_numeral",
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.parsing._parse_and_check_atomic_input._extract_mass_number": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "plasmapy.particles.exceptions.InvalidParticleError",
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.parsing._parse_and_check_atomic_input._get_element": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "plasmapy.particles.elements._atomic_numbers_to_symbols.values",
    "plasmapy.particles.elements._element_names_to_symbols",
    "plasmapy.particles.elements._element_names_to_symbols.keys",
    "plasmapy.particles.exceptions.InvalidParticleError",
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.parsing._parse_and_check_atomic_input._reconstruct_ion_symbol": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "numbers.Integral",
    "numpy.abs",
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.parsing._parse_and_check_atomic_input._reconstruct_isotope_symbol": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "numbers.Integral",
    "plasmapy.particles.exceptions.InvalidParticleError",
    "plasmapy.particles.isotopes._Isotopes.keys",
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.parsing.call_string": {
  "data": {
   "shadows": "plasmapy.utils.call_string"
  },
  "type": "import"
 },
 "plasmapy.particles.parsing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.particles.parsing.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "plasmapy.particles.parsing.roman": {
  "data": {
   "shadows": "plasmapy.utils.roman"
  },
  "type": "import"
 },
 "plasmapy.particles.parsing.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class": {
  "data": {
   "symbols_in_volume": [
    "plasmapy.particles.particle_class._atomic_property_categories",
    "plasmapy.particles.particle_class._classification_categories",
    "plasmapy.particles.particle_class._periodic_table_categories",
    "plasmapy.particles.particle_class._specific_particle_categories"
   ]
  },
  "type": "module"
 },
 "plasmapy.particles.particle_class.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class.AbstractParticle": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "plasmapy.particles.particle_class.AbstractParticle.__bool__": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "plasmapy.particles.exceptions.AtomicError"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.AbstractParticle.charge": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "astropy.units.Quantity",
    "numbers.Real",
    "property",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.AbstractParticle.json_dict": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "datetime.datetime.utcnow",
    "dict",
    "property",
    "type"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.AbstractParticle.json_dump": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "plasmapy.particles.particle_class.json"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.AbstractParticle.json_dumps": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "plasmapy.particles.particle_class.json",
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.AbstractParticle.mass": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "astropy.units.Quantity",
    "numbers.Real",
    "property",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.AtomicError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.AtomicError"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class.AtomicWarning": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.AtomicWarning"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class.ChargeError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.ChargeError"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class.Complex": {
  "data": {
   "shadows": "numbers.Complex"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class.CustomParticle": {
  "data": {
   "lineno": 1892,
   "symbols_in_volume": [
    "plasmapy.particles.particle_class.AbstractParticle"
   ]
  },
  "type": "class"
 },
 "plasmapy.particles.particle_class.CustomParticle.__init__": {
  "data": {
   "lineno": 1937,
   "symbols_in_volume": [
    "Exception",
    "astropy.units.C",
    "astropy.units.kg",
    "numbers.Real",
    "plasmapy.particles.exceptions.InvalidParticleError"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.CustomParticle.__repr__": {
  "data": {
   "lineno": 1947
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.CustomParticle.charge": {
  "data": {
   "lineno": 2026,
   "symbols_in_volume": [
    "TypeError",
    "astropy.constants.e.si",
    "astropy.units.C",
    "astropy.units.Quantity",
    "astropy.units.UnitsError",
    "isinstance",
    "numbers.Real",
    "numpy.isnan",
    "numpy.nan",
    "plasmapy.particles.exceptions.InvalidParticleError",
    "plasmapy.particles.exceptions.MissingAtomicDataWarning",
    "plasmapy.particles.particle_class.warnings",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.CustomParticle.json_dict": {
  "data": {
   "lineno": 1959,
   "symbols_in_volume": [
    "dict",
    "property",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.CustomParticle.mass": {
  "data": {
   "lineno": 1997,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.units.Quantity",
    "astropy.units.UnitsError",
    "astropy.units.kg",
    "isinstance",
    "numbers.Real",
    "numpy.isnan",
    "numpy.nan",
    "plasmapy.particles.exceptions.MissingAtomicDataWarning",
    "plasmapy.particles.particle_class.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.DimensionlessParticle": {
  "data": {
   "lineno": 1744,
   "symbols_in_volume": [
    "plasmapy.particles.particle_class.AbstractParticle"
   ]
  },
  "type": "class"
 },
 "plasmapy.particles.particle_class.DimensionlessParticle.__init__": {
  "data": {
   "lineno": 1774,
   "symbols_in_volume": [
    "Exception",
    "numbers.Real",
    "plasmapy.particles.exceptions.InvalidParticleError"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.DimensionlessParticle.__repr__": {
  "data": {
   "lineno": 1784
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.DimensionlessParticle._validate_parameter": {
  "data": {
   "lineno": 1796,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "ValueError",
    "astropy.units.Quantity",
    "bool",
    "hasattr",
    "isinstance",
    "numbers.Real",
    "numpy.float64",
    "numpy.isinf",
    "numpy.nan",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.DimensionlessParticle.charge": {
  "data": {
   "lineno": 1877,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.units.Quantity",
    "numbers.Real",
    "numpy.nan",
    "plasmapy.particles.exceptions.InvalidParticleError",
    "plasmapy.particles.exceptions.MissingAtomicDataWarning",
    "plasmapy.particles.particle_class.warnings",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.DimensionlessParticle.json_dict": {
  "data": {
   "lineno": 1824,
   "symbols_in_volume": [
    "dict",
    "property",
    "super"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.DimensionlessParticle.mass": {
  "data": {
   "lineno": 1863,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.units.Quantity",
    "numbers.Real",
    "numpy.nan",
    "plasmapy.particles.exceptions.InvalidParticleError",
    "plasmapy.particles.exceptions.MissingAtomicDataWarning",
    "plasmapy.particles.particle_class.warnings",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class.InvalidElementError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidElementError"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class.InvalidIonError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidIonError"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class.InvalidIsotopeError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidIsotopeError"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class.InvalidParticleError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidParticleError"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class.MissingAtomicDataError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.MissingAtomicDataError"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class.MissingAtomicDataWarning": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.MissingAtomicDataWarning"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class.Particle": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "plasmapy.particles.particle_class.AbstractParticle"
   ]
  },
  "type": "class"
 },
 "plasmapy.particles.particle_class.Particle.__eq__": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "dir",
    "isinstance",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.exceptions.InvalidParticleError",
    "plasmapy.particles.particle_class.Particle",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.__hash__": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "hash",
    "int"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.__init__": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "astropy.constants.e.si",
    "astropy.units.s",
    "collections.defaultdict",
    "isinstance",
    "numbers.Integral",
    "numpy.inf",
    "numpy.integer",
    "plasmapy.particles.elements._Elements",
    "plasmapy.particles.elements._PeriodicTable",
    "plasmapy.particles.exceptions.AtomicWarning",
    "plasmapy.particles.exceptions.InvalidParticleError",
    "plasmapy.particles.isotopes._Isotopes",
    "plasmapy.particles.parsing._dealias_particle_aliases",
    "plasmapy.particles.parsing._invalid_particle_errmsg",
    "plasmapy.particles.parsing._parse_and_check_atomic_input",
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.particle_class._specific_particle_categories",
    "plasmapy.particles.particle_class.warnings",
    "plasmapy.particles.special_particles.ParticleZoo._taxonomy_dict",
    "plasmapy.particles.special_particles._Particles",
    "plasmapy.particles.special_particles._Particles.keys",
    "plasmapy.particles.special_particles._special_ion_masses",
    "plasmapy.particles.special_particles._special_ion_masses.keys",
    "repr",
    "set",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.__invert__": {
  "data": {
   "lineno": 653
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.__ne__": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.__repr__": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.__str__": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.antiparticle": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.special_particles._antiparticles",
    "plasmapy.particles.special_particles._antiparticles.keys",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.atomic_number": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": [
    "numbers.Integral",
    "plasmapy.particles.exceptions.InvalidElementError",
    "plasmapy.particles.particle_class._category_errmsg",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.baryon_number": {
  "data": {
   "lineno": 1303,
   "symbols_in_volume": [
    "numbers.Integral",
    "plasmapy.particles.exceptions.MissingAtomicDataError",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.binding_energy": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "astropy.constants.c",
    "astropy.constants.m_n",
    "astropy.constants.m_p",
    "astropy.units.J",
    "astropy.units.Quantity",
    "plasmapy.particles.exceptions.InvalidIsotopeError",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.categories": {
  "data": {
   "lineno": 1439,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.charge": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "astropy.constants.e.si",
    "astropy.units.Quantity",
    "plasmapy.particles.exceptions.ChargeError",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.electron_number": {
  "data": {
   "lineno": 1244,
   "symbols_in_volume": [
    "numbers.Integral",
    "plasmapy.particles.exceptions.InvalidIonError",
    "plasmapy.particles.particle_class._category_errmsg",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.element": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.element_name": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "plasmapy.particles.exceptions.InvalidElementError",
    "plasmapy.particles.particle_class._category_errmsg",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.half_life": {
  "data": {
   "lineno": 1356,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "isinstance",
    "plasmapy.particles.exceptions.InvalidIsotopeError",
    "plasmapy.particles.exceptions.MissingAtomicDataError",
    "plasmapy.particles.exceptions.MissingAtomicDataWarning",
    "plasmapy.particles.particle_class._category_errmsg",
    "plasmapy.particles.particle_class.warnings",
    "property",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.integer_charge": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "numbers.Integral",
    "plasmapy.particles.exceptions.ChargeError",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.ionic_symbol": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.ionize": {
  "data": {
   "lineno": 1579,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bool",
    "isinstance",
    "numbers.Integral",
    "plasmapy.particles.exceptions.ChargeError",
    "plasmapy.particles.exceptions.InvalidElementError",
    "plasmapy.particles.exceptions.InvalidIonError",
    "plasmapy.particles.particle_class.Particle"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.is_category": {
  "data": {
   "lineno": 1455,
   "symbols_in_volume": [
    "become_set",
    "bool",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.particle_class._valid_categories",
    "str",
    "typing.List",
    "typing.Set",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.is_category.become_set": {
  "data": {
   "lineno": 1495,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "set",
    "str",
    "tuple",
    "typing.List",
    "typing.Set",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.is_electron": {
  "data": {
   "lineno": 1546,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.is_ion": {
  "data": {
   "lineno": 1562,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.isotope": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.isotope_name": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "plasmapy.particles.exceptions.InvalidElementError",
    "plasmapy.particles.exceptions.InvalidIsotopeError",
    "plasmapy.particles.particle_class._category_errmsg",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.isotopic_abundance": {
  "data": {
   "lineno": 1270,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "common_isotopes",
    "plasmapy.particles.exceptions.AtomicWarning",
    "plasmapy.particles.exceptions.InvalidIsotopeError",
    "plasmapy.particles.particle_class._category_errmsg",
    "plasmapy.particles.particle_class.warnings",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.json_dict": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "dict",
    "property",
    "super"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.lepton_number": {
  "data": {
   "lineno": 1328,
   "symbols_in_volume": [
    "numbers.Integral",
    "plasmapy.particles.exceptions.MissingAtomicDataError",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.mass": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "astropy.constants.m_e",
    "astropy.units.Quantity",
    "astropy.units.kg",
    "plasmapy.particles.exceptions.MissingAtomicDataError",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.mass_energy": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": [
    "astropy.constants.c",
    "astropy.units.J",
    "astropy.units.Quantity",
    "plasmapy.particles.exceptions.MissingAtomicDataError",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.mass_number": {
  "data": {
   "lineno": 1195,
   "symbols_in_volume": [
    "numbers.Integral",
    "plasmapy.particles.exceptions.InvalidIsotopeError",
    "plasmapy.particles.particle_class._category_errmsg",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.neutron_number": {
  "data": {
   "lineno": 1217,
   "symbols_in_volume": [
    "numbers.Integral",
    "plasmapy.particles.exceptions.InvalidIsotopeError",
    "plasmapy.particles.particle_class._category_errmsg",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.nuclide_mass": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "astropy.constants.m_e",
    "astropy.constants.m_n",
    "astropy.constants.m_p",
    "astropy.units.Quantity",
    "astropy.units.kg",
    "plasmapy.particles.exceptions.InvalidIsotopeError",
    "plasmapy.particles.exceptions.MissingAtomicDataError",
    "plasmapy.particles.particle_class._category_errmsg",
    "plasmapy.particles.special_particles._special_ion_masses",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.particle": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.periodic_table": {
  "data": {
   "lineno": 1412,
   "symbols_in_volume": [
    "collections.namedtuple",
    "plasmapy.particles.exceptions.InvalidElementError",
    "plasmapy.particles.particle_class._category_errmsg",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.recombine": {
  "data": {
   "lineno": 1664,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "numbers.Integral",
    "plasmapy.particles.exceptions.ChargeError",
    "plasmapy.particles.exceptions.InvalidElementError",
    "plasmapy.particles.particle_class.Particle"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.roman_symbol": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "plasmapy.particles.exceptions.ChargeError",
    "plasmapy.utils.roman.OutOfRangeError",
    "plasmapy.utils.roman.to_roman",
    "property",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.spin": {
  "data": {
   "lineno": 1390,
   "symbols_in_volume": [
    "numbers.Real",
    "plasmapy.particles.exceptions.MissingAtomicDataError",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.Particle.standard_atomic_weight": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "astropy.units.kg",
    "plasmapy.particles.exceptions.InvalidElementError",
    "plasmapy.particles.exceptions.MissingAtomicDataError",
    "plasmapy.particles.particle_class._category_errmsg",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class.ParticleZoo": {
  "data": {
   "shadows": "plasmapy.particles.special_particles.ParticleZoo"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class.Real": {
  "data": {
   "shadows": "numbers.Real"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class._Elements": {
  "data": {
   "shadows": "plasmapy.particles.elements._Elements"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class._Isotopes": {
  "data": {
   "shadows": "plasmapy.particles.isotopes._Isotopes"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class._Particles": {
  "data": {
   "shadows": "plasmapy.particles.special_particles._Particles"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class._PeriodicTable": {
  "data": {
   "shadows": "plasmapy.particles.elements._PeriodicTable"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "plasmapy.particles.particle_class._antiparticles": {
  "data": {
   "shadows": "plasmapy.particles.special_particles._antiparticles"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class._atomic_property_categories": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "plasmapy.particles.particle_class._category_errmsg": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_class._classification_categories": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "plasmapy.particles.particle_class._dealias_particle_aliases": {
  "data": {
   "shadows": "plasmapy.particles.parsing._dealias_particle_aliases"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class._invalid_particle_errmsg": {
  "data": {
   "shadows": "plasmapy.particles.parsing._invalid_particle_errmsg"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class._parse_and_check_atomic_input": {
  "data": {
   "shadows": "plasmapy.particles.parsing._parse_and_check_atomic_input"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class._periodic_table_categories": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "plasmapy.particles.particle_class._special_ion_masses": {
  "data": {
   "shadows": "plasmapy.particles.special_particles._special_ion_masses"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class._specific_particle_categories": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "plasmapy.particles.particle_class._valid_categories": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "plasmapy.particles.particle_class.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class.const": {
  "data": {
   "shadows": "astropy.constants"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class.roman": {
  "data": {
   "shadows": "plasmapy.utils.roman"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_class.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_input": {
  "data": {
   "shadows": "plasmapy.particles.particle_input.particle_input"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_input.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_input.AtomicError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.AtomicError"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_input.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_input.ChargeError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.ChargeError"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_input.InvalidElementError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidElementError"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_input.InvalidIonError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidIonError"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_input.InvalidIsotopeError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidIsotopeError"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_input.InvalidParticleError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidParticleError"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_input.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_input.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_input.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_input.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_input.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_input.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "plasmapy.particles.particle_input._category_errmsg": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_input._particle_errmsg": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "int",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_input.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_input.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_input.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_input.particle_input": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "bool",
    "decorator",
    "set",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.List",
    "typing.Set",
    "typing.Tuple",
    "typing.Union",
    "wrapped_function"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_input.particle_input.decorator": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "hasattr",
    "list",
    "plasmapy.particles.particle_input.functools",
    "plasmapy.particles.particle_input.inspect",
    "typing.Callable",
    "wrapped_function"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_input.particle_input.decorator.wrapper": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "enumerate",
    "get_particle",
    "isinstance",
    "len",
    "list",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.particle_input.functools",
    "tuple",
    "typing.Optional",
    "wrapped_function"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_input.particle_input.get_particle": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "CategoryError",
    "Particle",
    "TypeError",
    "isinstance",
    "list",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.exceptions.ChargeError",
    "plasmapy.particles.exceptions.InvalidElementError",
    "plasmapy.particles.exceptions.InvalidIonError",
    "plasmapy.particles.exceptions.InvalidIsotopeError",
    "plasmapy.particles.exceptions.InvalidParticleError",
    "plasmapy.particles.particle_input._category_errmsg",
    "plasmapy.particles.particle_input._particle_errmsg",
    "plasmapy.particles.particle_input.numbers",
    "repr",
    "set",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.particle_mass": {
  "data": {
   "shadows": "plasmapy.particles.atomic.particle_mass"
  },
  "type": "import"
 },
 "plasmapy.particles.particle_symbol": {
  "data": {
   "shadows": "plasmapy.particles.symbols.particle_symbol"
  },
  "type": "import"
 },
 "plasmapy.particles.positron": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "plasmapy.particles.proton": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "plasmapy.particles.reduced_mass": {
  "data": {
   "shadows": "plasmapy.particles.atomic.reduced_mass"
  },
  "type": "import"
 },
 "plasmapy.particles.serialization": {
  "data": {},
  "type": "module"
 },
 "plasmapy.particles.serialization.AbstractParticle": {
  "data": {
   "shadows": "plasmapy.particles.particle_class.AbstractParticle"
  },
  "type": "import"
 },
 "plasmapy.particles.serialization.CustomParticle": {
  "data": {
   "shadows": "plasmapy.particles.particle_class.CustomParticle"
  },
  "type": "import"
 },
 "plasmapy.particles.serialization.DimensionlessParticle": {
  "data": {
   "shadows": "plasmapy.particles.particle_class.DimensionlessParticle"
  },
  "type": "import"
 },
 "plasmapy.particles.serialization.InvalidElementError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidElementError"
  },
  "type": "import"
 },
 "plasmapy.particles.serialization.Particle": {
  "data": {
   "shadows": "plasmapy.particles.particle_class.Particle"
  },
  "type": "import"
 },
 "plasmapy.particles.serialization.ParticleJSONDecoder": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "plasmapy.particles.serialization.json"
   ]
  },
  "type": "class"
 },
 "plasmapy.particles.serialization.ParticleJSONDecoder.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "plasmapy.particles.serialization.json"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.serialization.ParticleJSONDecoder.particle_hook": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "KeyError",
    "plasmapy.particles.exceptions.InvalidElementError",
    "plasmapy.particles.particle_class.AbstractParticle",
    "plasmapy.particles.particle_class.CustomParticle",
    "plasmapy.particles.particle_class.DimensionlessParticle",
    "plasmapy.particles.particle_class.Particle",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.serialization.__all__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "plasmapy.particles.serialization.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "plasmapy.particles.serialization.json_load_particle": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "plasmapy.particles.serialization.ParticleJSONDecoder",
    "plasmapy.particles.serialization.json"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.serialization.json_loads_particle": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "plasmapy.particles.serialization.ParticleJSONDecoder",
    "plasmapy.particles.serialization.json"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.special_particles": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "astropy.constants.m_p",
    "astropy.units.kg",
    "plasmapy.particles.special_particles._ParticleZooClass",
    "plasmapy.particles.special_particles._Particles",
    "plasmapy.particles.special_particles._create_Particles_dict",
    "pprint.pprint",
    "print"
   ]
  },
  "type": "module"
 },
 "plasmapy.particles.special_particles.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "plasmapy.particles.special_particles.ParticleZoo": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "plasmapy.particles.special_particles.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "plasmapy.particles.special_particles._ParticleZooClass": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "plasmapy.particles.special_particles._ParticleZooClass.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.special_particles._ParticleZooClass.antibaryons": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.special_particles._ParticleZooClass.antileptons": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.special_particles._ParticleZooClass.antineutrinos": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.special_particles._ParticleZooClass.antiparticles": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.special_particles._ParticleZooClass.baryons": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.special_particles._ParticleZooClass.bosons": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.special_particles._ParticleZooClass.everything": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.special_particles._ParticleZooClass.fermions": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.special_particles._ParticleZooClass.leptons": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.special_particles._ParticleZooClass.neutrinos": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.special_particles._ParticleZooClass.particles": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.special_particles._Particles": {
  "data": {
   "lineno": 268
  },
  "type": "constant"
 },
 "plasmapy.particles.special_particles._PeriodicTable": {
  "data": {
   "shadows": "plasmapy.particles.elements._PeriodicTable"
  },
  "type": "import"
 },
 "plasmapy.particles.special_particles._antiparticles": {
  "data": {
   "lineno": 276
  },
  "type": "constant"
 },
 "plasmapy.particles.special_particles._create_Particles_dict": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "astropy.constants.m_e",
    "astropy.constants.m_n",
    "astropy.constants.m_p",
    "astropy.units.kg",
    "astropy.units.s",
    "dict",
    "numpy.inf",
    "plasmapy.particles.elements._PeriodicTable",
    "plasmapy.particles.special_particles.ParticleZoo",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.special_particles._special_ion_masses": {
  "data": {
   "lineno": 270
  },
  "type": "constant"
 },
 "plasmapy.particles.special_particles.const": {
  "data": {
   "shadows": "astropy.constants"
  },
  "type": "import"
 },
 "plasmapy.particles.special_particles.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.particles.special_particles.pprint": {
  "data": {
   "shadows": "pprint.pprint"
  },
  "type": "import"
 },
 "plasmapy.particles.special_particles.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.particles.stable_isotopes": {
  "data": {
   "shadows": "plasmapy.particles.atomic.stable_isotopes"
  },
  "type": "import"
 },
 "plasmapy.particles.standard_atomic_weight": {
  "data": {
   "shadows": "plasmapy.particles.atomic.standard_atomic_weight"
  },
  "type": "import"
 },
 "plasmapy.particles.symbols": {
  "data": {},
  "type": "module"
 },
 "plasmapy.particles.symbols.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "plasmapy.particles.symbols.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "plasmapy.particles.symbols.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "plasmapy.particles.symbols.atomic_symbol": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.symbols.element_name": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "particle_input",
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.symbols.ionic_symbol": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "numbers.Integral",
    "particle_input",
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.symbols.isotope_symbol": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numbers.Integral",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.symbols.particle_symbol": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "numbers.Integral",
    "particle_input",
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests": {
  "data": {},
  "type": "module"
 },
 "plasmapy.particles.tests.test_atomic": {
  "data": {
   "symbols_in_volume": [
    "TypeError",
    "astropy.constants.m_e",
    "astropy.constants.m_p",
    "astropy.units.C",
    "astropy.units.kg",
    "astropy.units.s",
    "astropy.units.u.to",
    "atomic_number",
    "common_isotopes",
    "len",
    "numpy.inf",
    "particle_mass",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.exceptions.AtomicWarning",
    "plasmapy.particles.exceptions.ChargeError",
    "plasmapy.particles.exceptions.InvalidElementError",
    "plasmapy.particles.exceptions.InvalidIsotopeError",
    "plasmapy.particles.exceptions.InvalidParticleError",
    "plasmapy.particles.exceptions.MissingAtomicDataError",
    "plasmapy.particles.tests.test_atomic.all_tests",
    "plasmapy.particles.tests.test_atomic.atomic_ParticleError_badargs",
    "plasmapy.particles.tests.test_atomic.atomic_ParticleErrors_funcs_table",
    "plasmapy.particles.tests.test_atomic.atomic_TypeError_badargs",
    "plasmapy.particles.tests.test_atomic.atomic_TypeError_funcs_table",
    "plasmapy.particles.tests.test_atomic.atomic_number_table",
    "plasmapy.particles.tests.test_atomic.atomic_symbol_table",
    "plasmapy.particles.tests.test_atomic.electric_charge_table",
    "plasmapy.particles.tests.test_atomic.element_name_table",
    "plasmapy.particles.tests.test_atomic.half_life_table",
    "plasmapy.particles.tests.test_atomic.integer_charge_table",
    "plasmapy.particles.tests.test_atomic.is_stable_table",
    "plasmapy.particles.tests.test_atomic.isotope_symbol_table",
    "plasmapy.particles.tests.test_atomic.isotopic_abundance_elements",
    "plasmapy.particles.tests.test_atomic.isotopic_abundance_isotopes",
    "plasmapy.particles.tests.test_atomic.mass_number_table",
    "plasmapy.particles.tests.test_atomic.metatable",
    "plasmapy.particles.tests.test_atomic.particle_mass_table",
    "plasmapy.particles.tests.test_atomic.standard_atomic_weight_table",
    "plasmapy.particles.tests.test_atomic.tables_and_functions",
    "range",
    "standard_atomic_weight",
    "zip"
   ]
  },
  "type": "module"
 },
 "plasmapy.particles.tests.test_atomic.AtomicError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.AtomicError"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_atomic.AtomicWarning": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.AtomicWarning"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_atomic.ChargeError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.ChargeError"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_atomic.InvalidElementError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidElementError"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_atomic.InvalidIsotopeError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidIsotopeError"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_atomic.InvalidParticleError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidParticleError"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_atomic.MissingAtomicDataError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.MissingAtomicDataError"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_atomic.TestInvalidPeriodicElement": {
  "data": {
   "lineno": 386
  },
  "type": "class"
 },
 "plasmapy.particles.tests.test_atomic.TestInvalidPeriodicElement.test_periodic_table_block": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "TypeError",
    "periodic_table_block",
    "plasmapy.particles.tests.test_atomic.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_atomic.TestInvalidPeriodicElement.test_periodic_table_category": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "TypeError",
    "periodic_table_category",
    "plasmapy.particles.tests.test_atomic.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_atomic.TestInvalidPeriodicElement.test_periodic_table_group": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "TypeError",
    "periodic_table_group",
    "plasmapy.particles.tests.test_atomic.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_atomic.TestInvalidPeriodicElement.test_periodic_table_period": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "TypeError",
    "periodic_table_period",
    "plasmapy.particles.tests.test_atomic.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_atomic.TestReducedMassInput": {
  "data": {
   "lineno": 754
  },
  "type": "class"
 },
 "plasmapy.particles.tests.test_atomic.TestReducedMassInput.test_incorrect_units": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "astropy.units.UnitConversionError",
    "astropy.units.l",
    "plasmapy.particles.tests.test_atomic.pytest",
    "reduced_mass"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_atomic.TestReducedMassInput.test_missing_atomic_data": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "plasmapy.particles.exceptions.MissingAtomicDataError",
    "plasmapy.particles.tests.test_atomic.pytest",
    "reduced_mass"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_atomic.all_tests": {
  "data": {
   "lineno": 424
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_atomic.atomic_ParticleError_badargs": {
  "data": {
   "lineno": 469
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_atomic.atomic_ParticleErrors_funcs_table": {
  "data": {
   "lineno": 451
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_atomic.atomic_TypeError_badargs": {
  "data": {
   "lineno": 449
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_atomic.atomic_TypeError_funcs_table": {
  "data": {
   "lineno": 436
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_atomic.atomic_number_table": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_atomic.atomic_symbol_table": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_atomic.const": {
  "data": {
   "shadows": "astropy.constants"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_atomic.electric_charge_table": {
  "data": {
   "lineno": 370
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_atomic.element_name_table": {
  "data": {
   "lineno": 221
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_atomic.equivalent_particle_mass_args": {
  "data": {
   "lineno": 543
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_atomic.half_life_table": {
  "data": {
   "lineno": 383
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_atomic.integer_charge_table": {
  "data": {
   "lineno": 337
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_atomic.is_stable_table": {
  "data": {
   "lineno": 302
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_atomic.isotope_symbol_table": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_atomic.isotopic_abundance_elements": {
  "data": {
   "lineno": 727
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_atomic.isotopic_abundance_isotopes": {
  "data": {
   "lineno": 731
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_atomic.isotopic_abundance_sum_table": {
  "data": {
   "lineno": 735
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_atomic.mass_number_table": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_atomic.metatable": {
  "data": {
   "lineno": 489
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_atomic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_atomic.particle_mass_table": {
  "data": {
   "lineno": 280
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_atomic.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_atomic.run_test": {
  "data": {
   "shadows": "plasmapy.utils.pytest_helpers.run_test"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_atomic.standard_atomic_weight_table": {
  "data": {
   "lineno": 260
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_atomic.str_electron_table": {
  "data": {
   "lineno": 764
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_atomic.tables_and_functions": {
  "data": {
   "lineno": 410
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_atomic.test_atomic_functions": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "plasmapy.particles.tests.test_atomic.all_tests",
    "plasmapy.particles.tests.test_atomic.pytest",
    "plasmapy.utils.pytest_helpers.run_test",
    "print"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_atomic.test_half_life": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "astropy.units.s",
    "astropy.units.yr.to",
    "half_life",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_atomic.test_half_life_u_220": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "half_life",
    "plasmapy.particles.exceptions.MissingAtomicDataError",
    "plasmapy.particles.tests.test_atomic.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_atomic.test_half_life_unstable_isotopes": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "half_life",
    "plasmapy.particles.exceptions.MissingAtomicDataError",
    "plasmapy.particles.tests.test_atomic.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_atomic.test_is_electron": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "_is_electron",
    "plasmapy.particles.tests.test_atomic.pytest",
    "plasmapy.particles.tests.test_atomic.str_electron_table"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_atomic.test_isotopic_abundance": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "isotopic_abundance",
    "numpy.isclose",
    "plasmapy.particles.exceptions.AtomicWarning",
    "plasmapy.particles.exceptions.InvalidIsotopeError",
    "plasmapy.particles.exceptions.InvalidParticleError",
    "plasmapy.particles.tests.test_atomic.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_atomic.test_isotopic_abundances_sum": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "isotopic_abundance",
    "numpy.isclose",
    "plasmapy.particles.tests.test_atomic.isotopic_abundance_sum_table",
    "plasmapy.particles.tests.test_atomic.pytest",
    "sum"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_atomic.test_known_common_stable_isotopes": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "common_isotopes",
    "known_isotopes",
    "stable_isotopes"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_atomic.test_known_common_stable_isotopes_cases": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "common_isotopes",
    "known_isotopes",
    "stable_isotopes"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_atomic.test_known_common_stable_isotopes_error": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "common_isotopes",
    "func",
    "known_isotopes",
    "plasmapy.particles.exceptions.InvalidElementError",
    "plasmapy.particles.tests.test_atomic.pytest",
    "stable_isotopes"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_atomic.test_known_common_stable_isotopes_len": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "common_isotopes",
    "known_isotopes",
    "len",
    "stable_isotopes"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_atomic.test_particle_mass_berkelium_249": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "astropy.units.u",
    "numpy.isclose",
    "particle_mass"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_atomic.test_particle_mass_equivalent_args": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "astropy.units.isclose",
    "particle_mass",
    "plasmapy.particles.tests.test_atomic.equivalent_particle_mass_args",
    "plasmapy.particles.tests.test_atomic.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_atomic.test_particle_mass_for_hydrogen_with_no_mass_number": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "astropy.constants.m_p",
    "particle_mass"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_atomic.test_particle_mass_helium": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "particle_mass"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_atomic.test_standard_atomic_weight_value_between": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "astropy.units.u",
    "standard_atomic_weight"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_atomic.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_state": {
  "data": {
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.UnitTypeError",
    "astropy.units.cm",
    "astropy.units.kK",
    "astropy.units.m",
    "numpy.array",
    "numpy.int64",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.ionization_state.IonizationState",
    "plasmapy.particles.tests.test_ionization_state.IE",
    "plasmapy.particles.tests.test_ionization_state.collections",
    "plasmapy.particles.tests.test_ionization_state.kwargs",
    "plasmapy.particles.tests.test_ionization_state.test_cases"
   ]
  },
  "type": "module"
 },
 "plasmapy.particles.tests.test_ionization_state.AtomicError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.AtomicError"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_state.IE": {
  "data": {
   "lineno": 375
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_ionization_state.InvalidIsotopeError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidIsotopeError"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_state.IonizationState": {
  "data": {
   "shadows": "plasmapy.particles.ionization_state.IonizationState"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_state.Particle": {
  "data": {
   "shadows": "plasmapy.particles.Particle"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationState": {
  "data": {
   "lineno": 55
  },
  "type": "class"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationState.setup_class": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationState.test_State_attrs": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "hasattr",
    "plasmapy.particles.tests.test_ionization_state.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationState.test_State_equality_and_getitem": {
  "data": {
   "lineno": 365
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationState.test_electron_density_from_n_elem_ionic_fractions": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "astropy.units.m",
    "numpy.arange",
    "numpy.isclose",
    "numpy.sum",
    "plasmapy.particles.tests.test_ionization_state.pytest",
    "plasmapy.particles.tests.test_ionization_state.test_cases",
    "plasmapy.particles.tests.test_ionization_state.test_names"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationState.test_equal_to_itself": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationState.test_equal_to_within_tolerance": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationState.test_equality_exception": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.tests.test_ionization_state.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationState.test_getitem": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "plasmapy.particles.particle_symbol",
    "plasmapy.particles.tests.test_ionization_state.pytest",
    "plasmapy.particles.tests.test_ionization_state.test_names",
    "str",
    "str.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationState.test_identifications": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "Identifications",
    "plasmapy.particles.tests.test_ionization_state.collections",
    "plasmapy.particles.tests.test_ionization_state.pytest",
    "plasmapy.particles.tests.test_ionization_state.test_names"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationState.test_indexing_error": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.tests.test_ionization_state.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationState.test_inequality": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationState.test_instantiation": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "Exception",
    "plasmapy.particles.ionization_state.IonizationState",
    "plasmapy.particles.tests.test_ionization_state.pytest",
    "plasmapy.particles.tests.test_ionization_state.test_cases",
    "plasmapy.particles.tests.test_ionization_state.test_names"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationState.test_integer_charges": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.arange",
    "plasmapy.particles.tests.test_ionization_state.pytest",
    "plasmapy.particles.tests.test_ionization_state.test_names"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationState.test_invalid_tolerances": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "ValueError",
    "plasmapy.particles.tests.test_ionization_state.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationState.test_ionic_fractions": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "astropy.units.m",
    "isinstance",
    "numpy.allclose",
    "plasmapy.particles.tests.test_ionization_state.pytest",
    "plasmapy.particles.tests.test_ionization_state.test_cases",
    "plasmapy.particles.tests.test_ionization_state.test_names"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationState.test_iteration": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "Exception",
    "astropy.units.Quantity",
    "isinstance",
    "numpy.all",
    "numpy.allclose",
    "numpy.arange",
    "numpy.array",
    "plasmapy.particles.Particle",
    "plasmapy.particles.atomic_number",
    "plasmapy.particles.atomic_symbol",
    "plasmapy.particles.exceptions.InvalidIsotopeError",
    "plasmapy.particles.isotope_symbol",
    "plasmapy.particles.tests.test_ionization_state.pytest",
    "plasmapy.particles.tests.test_ionization_state.test_cases",
    "plasmapy.particles.tests.test_ionization_state.test_names",
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationState.test_normalization": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationState.test_particle_instances": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "plasmapy.particles.Particle",
    "plasmapy.particles.tests.test_ionization_state.pytest",
    "plasmapy.particles.tests.test_ionization_state.test_cases",
    "range"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationState.test_slicing_error": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "TypeError",
    "plasmapy.particles.tests.test_ionization_state.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationStateNumberDensitiesSetter": {
  "data": {
   "lineno": 509
  },
  "type": "class"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationStateNumberDensitiesSetter.setup_class": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "Exception",
    "astropy.units.Quantity",
    "astropy.units.m",
    "numpy.sum",
    "plasmapy.particles.ionization_state.IonizationState",
    "plasmapy.particles.tests.test_ionization_state.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationStateNumberDensitiesSetter.test_T_e_isnan_when_not_set": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationStateNumberDensitiesSetter.test_incorrect_number_of_charge_states_error": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "astropy.units.m",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.tests.test_ionization_state.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationStateNumberDensitiesSetter.test_incorrect_units_error": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "astropy.units.UnitsError",
    "astropy.units.kg",
    "plasmapy.particles.tests.test_ionization_state.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationStateNumberDensitiesSetter.test_ionic_fractions": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationStateNumberDensitiesSetter.test_kappa_isinf_when_not_set": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "numpy.isinf"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationStateNumberDensitiesSetter.test_n_e": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "astropy.units.quantity.allclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationStateNumberDensitiesSetter.test_n_elem": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "astropy.units.quantity.allclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationStateNumberDensitiesSetter.test_setting_number_densities": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "Exception",
    "astropy.units.quantity.allclose",
    "plasmapy.particles.tests.test_ionization_state.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.Test_IonizationStateNumberDensitiesSetter.test_that_negative_density_raises_error": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "astropy.units.m",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.tests.test_ionization_state.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.atomic_number": {
  "data": {
   "shadows": "plasmapy.particles.atomic_number"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_state.atomic_symbol": {
  "data": {
   "shadows": "plasmapy.particles.atomic_symbol"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_state.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_state.expected_properties": {
  "data": {
   "lineno": 442
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_ionization_state.instance": {
  "data": {
   "lineno": 461
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_ionization_state.isotope_symbol": {
  "data": {
   "shadows": "plasmapy.particles.isotope_symbol"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_state.kwargs": {
  "data": {
   "lineno": 434
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_ionization_state.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_state.particle_symbol": {
  "data": {
   "shadows": "plasmapy.particles.particle_symbol"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_state.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_state.run_test": {
  "data": {
   "shadows": "plasmapy.utils.pytest_helpers.run_test"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_state.test_IonizationState_attributes": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.Quantity",
    "eval",
    "isinstance",
    "numpy.allclose",
    "plasmapy.particles.tests.test_ionization_state.expected_properties",
    "plasmapy.particles.tests.test_ionization_state.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.test_IonizationState_exceptions": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "plasmapy.particles.ionization_state.IonizationState",
    "plasmapy.particles.tests.test_ionization_state.pytest",
    "plasmapy.particles.tests.test_ionization_state.tests_for_exceptions",
    "plasmapy.utils.pytest_helpers.run_test"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.test_cases": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_ionization_state.test_names": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_ionization_state.test_nans": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "numpy.isnan",
    "plasmapy.particles.atomic_number",
    "plasmapy.particles.ionization_state.IonizationState",
    "plasmapy.particles.tests.test_ionization_state.instance"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.test_setting_ionic_fractions": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "numpy.allclose",
    "plasmapy.particles.ionization_state.IonizationState",
    "plasmapy.particles.tests.test_ionization_state.instance"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_state.tests_for_exceptions": {
  "data": {
   "lineno": 377
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_ionization_state.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_states": {
  "data": {
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.cm",
    "astropy.units.m",
    "astropy.units.mm",
    "numpy.array",
    "numpy.inf",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.tests.test_ionization_states.IE",
    "plasmapy.particles.tests.test_ionization_states.collections",
    "plasmapy.particles.tests.test_ionization_states.tests"
   ]
  },
  "type": "module"
 },
 "plasmapy.particles.tests.test_ionization_states.AtomicError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.AtomicError"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_states.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_states.IE": {
  "data": {
   "lineno": 730
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_ionization_states.InvalidIsotopeError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidIsotopeError"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_states.IonizationState": {
  "data": {
   "shadows": "plasmapy.particles.IonizationState"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_states.IonizationStates": {
  "data": {
   "shadows": "plasmapy.particles.IonizationStates"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_states.Particle": {
  "data": {
   "shadows": "plasmapy.particles.Particle"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_states.Real": {
  "data": {
   "shadows": "numbers.Real"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_states.State": {
  "data": {
   "shadows": "plasmapy.particles.State"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStates": {
  "data": {
   "lineno": 113
  },
  "type": "class"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStates.setup_class": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStates.test_getitem_element": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "all",
    "numpy.allclose",
    "numpy.isnan",
    "plasmapy.particles.tests.test_ionization_states.pytest",
    "plasmapy.particles.tests.test_ionization_states.test_names"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStates.test_getitem_element_intcharge": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "numpy.isclose",
    "numpy.isnan",
    "plasmapy.particles.atomic_number",
    "plasmapy.particles.tests.test_ionization_states.pytest",
    "plasmapy.particles.tests.test_ionization_states.test_names",
    "range"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStates.test_instantiation": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "Exception",
    "plasmapy.particles.IonizationStates",
    "plasmapy.particles.tests.test_ionization_states.pytest",
    "plasmapy.particles.tests.test_ionization_states.test_names",
    "plasmapy.particles.tests.test_ionization_states.tests"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStates.test_no_exceptions_from_info": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "plasmapy.particles.tests.test_ionization_states.pytest",
    "plasmapy.particles.tests.test_ionization_states.test_names"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStates.test_no_exceptions_from_repr": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "plasmapy.particles.tests.test_ionization_states.pytest",
    "plasmapy.particles.tests.test_ionization_states.test_names"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStates.test_no_exceptions_from_str": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "plasmapy.particles.tests.test_ionization_states.pytest",
    "plasmapy.particles.tests.test_ionization_states.test_names"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStates.test_normalization": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "numpy.isclose",
    "numpy.sum",
    "plasmapy.particles.tests.test_ionization_states.pytest",
    "plasmapy.particles.tests.test_ionization_states.test_names",
    "plasmapy.particles.tests.test_ionization_states.tests"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStates.test_simple_equality": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "plasmapy.particles.IonizationStates",
    "plasmapy.particles.tests.test_ionization_states.pytest",
    "plasmapy.particles.tests.test_ionization_states.test_names",
    "plasmapy.particles.tests.test_ionization_states.tests"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStates.test_that_abundances_kwarg_sets_abundances": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "Exception",
    "plasmapy.particles.tests.test_ionization_states.has_attribute",
    "plasmapy.particles.tests.test_ionization_states.pytest",
    "plasmapy.particles.tests.test_ionization_states.tests",
    "set"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStates.test_that_elements_and_isotopes_are_sorted": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "plasmapy.particles.atomic_number",
    "plasmapy.particles.exceptions.InvalidIsotopeError",
    "plasmapy.particles.mass_number",
    "plasmapy.particles.tests.test_ionization_states.pytest",
    "plasmapy.particles.tests.test_ionization_states.test_names",
    "sorted"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStates.test_that_ionic_fractions_are_set_correctly": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "all",
    "astropy.units.Quantity",
    "dict",
    "isinstance",
    "list",
    "numpy.allclose",
    "numpy.array",
    "numpy.isnan",
    "numpy.ndarray",
    "numpy.sum",
    "plasmapy.particles.Particle",
    "plasmapy.particles.atomic_number",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.mass_number",
    "plasmapy.particles.particle_symbol",
    "plasmapy.particles.tests.test_ionization_states.pytest",
    "plasmapy.particles.tests.test_ionization_states.test_names",
    "plasmapy.particles.tests.test_ionization_states.tests",
    "set",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStates.test_that_particles_were_set_correctly": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "plasmapy.particles.Particle",
    "plasmapy.particles.tests.test_ionization_states.pytest",
    "plasmapy.particles.tests.test_ionization_states.test_names",
    "plasmapy.particles.tests.test_ionization_states.tests"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesAttributes": {
  "data": {
   "lineno": 453
  },
  "type": "class"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesAttributes.setup_class": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "astropy.units.cm",
    "classmethod",
    "plasmapy.particles.IonizationStates"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesAttributes.test_abundances_default_to_nans": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "eval",
    "isinstance",
    "numbers.Real",
    "numpy.isnan",
    "plasmapy.particles.tests.test_ionization_states.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesAttributes.test_attribute_defaults_to_dict_of_nans": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "eval",
    "len",
    "list",
    "numpy.all",
    "numpy.isnan",
    "plasmapy.particles.atomic_number",
    "plasmapy.particles.tests.test_ionization_states.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesAttributes.test_attribute_defaults_to_nan": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "eval",
    "numpy.isnan",
    "plasmapy.particles.tests.test_ionization_states.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesAttributes.test_attribute_exceptions": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "astropy.units.UnitsError",
    "exec",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.tests.test_ionization_states.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesAttributes.test_base_particles": {
  "data": {
   "lineno": 716
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesAttributes.test_base_particles_equal_ionic_fraction_particles": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesAttributes.test_elemental_abundances_not_quantities": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesAttributes.test_getitem_one_index": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "numpy.isnan",
    "plasmapy.particles.IonizationState",
    "plasmapy.particles.tests.test_ionization_states.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesAttributes.test_getitem_two_indices": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "isinstance",
    "numpy.any",
    "numpy.isclose",
    "numpy.isnan",
    "plasmapy.particles.State",
    "plasmapy.particles.particle_symbol",
    "plasmapy.particles.tests.test_ionization_states.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesAttributes.test_invalid_indices": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "IndexError",
    "plasmapy.particles.tests.test_ionization_states.pytest",
    "slice"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesAttributes.test_ionic_fractions_not_quantities": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "isinstance",
    "plasmapy.particles.tests.test_ionization_states.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesAttributes.test_kappa_defaults_to_inf": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "numpy.isinf"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesAttributes.test_resetting_invalid_densities": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.sum",
    "plasmapy.particles.tests.test_ionization_states.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesAttributes.test_resetting_valid_densities": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "Exception",
    "astropy.units.quantity.allclose",
    "numpy.sum",
    "plasmapy.particles.tests.test_ionization_states.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesAttributes.test_setting_abundances": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "Exception",
    "numpy.log10",
    "plasmapy.particles.tests.test_ionization_states.check_abundances_consistency",
    "plasmapy.particles.tests.test_ionization_states.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesAttributes.test_setting_incomplete_abundances": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.tests.test_ionization_states.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesAttributes.test_setting_invalid_ionfracs": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.m",
    "plasmapy.particles.tests.test_ionization_states.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesAttributes.test_setting_ionic_fractions_for_single_element": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.allclose",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesAttributes.test_setting_n": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "Exception",
    "astropy.units.m",
    "astropy.units.quantity.allclose",
    "plasmapy.particles.tests.test_ionization_states.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesAttributes.test_that_iron_ionic_fractions_are_still_undefined": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "numpy.isnan",
    "plasmapy.particles.atomic_number"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesDensities": {
  "data": {
   "lineno": 411
  },
  "type": "class"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesDensities.setup_class": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "astropy.units.m",
    "classmethod",
    "numpy.array",
    "plasmapy.particles.IonizationStates"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesDensities.test_electron_density": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesDensities.test_number_densities": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "numpy.allclose",
    "plasmapy.particles.tests.test_ionization_states.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesDensityEqualities": {
  "data": {
   "lineno": 797
  },
  "type": "class"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesDensityEqualities.setup_class": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "astropy.units.m",
    "classmethod",
    "plasmapy.particles.IonizationStates"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesDensityEqualities.test_equality": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "plasmapy.particles.tests.test_ionization_states.itertools",
    "plasmapy.particles.tests.test_ionization_states.pytest",
    "print"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesDensityEqualities.test_number_densities_defined": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.isnan",
    "plasmapy.particles.tests.test_ionization_states.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesDensityEqualities.test_number_densities_undefined": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.isnan",
    "plasmapy.particles.tests.test_ionization_states.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesItemAssignment": {
  "data": {
   "lineno": 360
  },
  "type": "class"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesItemAssignment.setup_class": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "classmethod",
    "plasmapy.particles.IonizationStates"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesItemAssignment.test_setitem": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "Exception",
    "numpy.all",
    "numpy.allclose",
    "numpy.any",
    "numpy.isnan",
    "numpy.nan",
    "plasmapy.particles.tests.test_ionization_states.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.TestIonizationStatesItemAssignment.test_setitem_errors": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "plasmapy.particles.tests.test_ionization_states.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.atomic_number": {
  "data": {
   "shadows": "plasmapy.particles.atomic_number"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_states.check_abundances_consistency": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numbers.Real",
    "numpy.isclose",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_states.has_attribute": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_states.mass_number": {
  "data": {
   "shadows": "plasmapy.particles.mass_number"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_states.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_states.particle_symbol": {
  "data": {
   "shadows": "plasmapy.particles.particle_symbol"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_states.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_states.run_test": {
  "data": {
   "shadows": "plasmapy.utils.pytest_helpers.run_test"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_ionization_states.test_abundances_consistency": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.log10",
    "plasmapy.particles.IonizationStates"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.test_exceptions_upon_instantiation": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "plasmapy.particles.IonizationStates",
    "plasmapy.particles.tests.test_ionization_states.pytest",
    "plasmapy.particles.tests.test_ionization_states.tests_for_exceptions",
    "plasmapy.utils.pytest_helpers.run_test"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.test_names": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_ionization_states.test_number_density_assignment": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "astropy.units.m",
    "plasmapy.particles.IonizationStates"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_ionization_states.tests": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_ionization_states.tests_for_exceptions": {
  "data": {
   "lineno": 732
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_ionization_states.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_nuclear": {
  "data": {
   "symbols_in_volume": [
    "TypeError",
    "astropy.constants.c.to",
    "astropy.constants.m_e.to",
    "astropy.constants.m_n.to",
    "astropy.constants.m_p.to",
    "astropy.units.J",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.exceptions.InvalidParticleError"
   ]
  },
  "type": "module"
 },
 "plasmapy.particles.tests.test_nuclear.AtomicError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.AtomicError"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_nuclear.InvalidParticleError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidParticleError"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_nuclear.const": {
  "data": {
   "shadows": "astropy.constants"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_nuclear.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_nuclear.nuclear_reaction_energy_kwargs_table": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_nuclear.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_nuclear.run_test": {
  "data": {
   "shadows": "plasmapy.utils.pytest_helpers.run_test"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_nuclear.run_test_equivalent_calls": {
  "data": {
   "shadows": "plasmapy.utils.pytest_helpers.run_test_equivalent_calls"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_nuclear.test_nuclear": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "plasmapy.particles.tests.test_nuclear.pytest",
    "plasmapy.particles.tests.test_nuclear.test_nuclear_table",
    "plasmapy.utils.pytest_helpers.run_test"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_nuclear.test_nuclear_binding_energy_D_T": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "astropy.units.MeV",
    "nuclear_binding_energy",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_nuclear.test_nuclear_equivalent_calls": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "plasmapy.particles.tests.test_nuclear.pytest",
    "plasmapy.particles.tests.test_nuclear.test_nuclear_equivalent_calls_table",
    "plasmapy.utils.pytest_helpers.run_test_equivalent_calls"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_nuclear.test_nuclear_equivalent_calls_table": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_nuclear.test_nuclear_reaction_energy": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "astropy.units.MeV",
    "nuclear_reaction_energy",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_nuclear.test_nuclear_reaction_energy_alpha_decay": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "astropy.units.MeV",
    "nuclear_reaction_energy",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_nuclear.test_nuclear_reaction_energy_beta": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "astropy.units.MeV",
    "nuclear_reaction_energy",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_nuclear.test_nuclear_reaction_energy_kwargs": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "astropy.units.MeV.si",
    "nuclear_reaction_energy",
    "numpy.isclose",
    "plasmapy.particles.tests.test_nuclear.nuclear_reaction_energy_kwargs_table",
    "plasmapy.particles.tests.test_nuclear.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_nuclear.test_nuclear_reaction_energy_triple_alpha": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "astropy.units.MeV",
    "astropy.units.keV",
    "nuclear_reaction_energy",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_nuclear.test_nuclear_reaction_energy_triple_alpha_r": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "astropy.units.keV",
    "nuclear_reaction_energy",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_nuclear.test_nuclear_table": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_nuclear.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_parsing": {
  "data": {},
  "type": "module"
 },
 "plasmapy.particles.tests.test_parsing.AtomicWarning": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.AtomicWarning"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_parsing.InvalidElementError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidElementError"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_parsing.InvalidParticleError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidParticleError"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_parsing.Particle": {
  "data": {
   "shadows": "plasmapy.particles.Particle"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_parsing._particle_call_string": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "call_string",
    "plasmapy.particles.Particle",
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_parsing.alias_dictionaries": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_parsing.aliases_and_symbols": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_parsing.atomic_warnings_table": {
  "data": {
   "lineno": 354
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_parsing.invalid_particles_table": {
  "data": {
   "lineno": 291
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_parsing.parse_check_table": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_parsing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_parsing.test_alias_dict_properties": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "isinstance",
    "plasmapy.particles.tests.test_parsing.alias_dictionaries",
    "plasmapy.particles.tests.test_parsing.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_parsing.test_dealias_particle_aliases": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "_dealias_particle_aliases",
    "plasmapy.particles.tests.test_parsing.aliases_and_symbols",
    "plasmapy.particles.tests.test_parsing.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_parsing.test_parse_AtomicWarnings": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "_parse_and_check_atomic_input",
    "len",
    "plasmapy.particles.exceptions.AtomicWarning",
    "plasmapy.particles.tests.test_parsing._particle_call_string",
    "plasmapy.particles.tests.test_parsing.atomic_warnings_table",
    "plasmapy.particles.tests.test_parsing.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_parsing.test_parse_InvalidElementErrors": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "_parse_and_check_atomic_input",
    "plasmapy.particles.exceptions.InvalidElementError",
    "plasmapy.particles.tests.test_parsing._particle_call_string",
    "plasmapy.particles.tests.test_parsing.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_parsing.test_parse_InvalidParticleErrors": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "_parse_and_check_atomic_input",
    "plasmapy.particles.exceptions.InvalidParticleError",
    "plasmapy.particles.tests.test_parsing._particle_call_string",
    "plasmapy.particles.tests.test_parsing.invalid_particles_table",
    "plasmapy.particles.tests.test_parsing.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_parsing.test_parse_and_check_atomic_input": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "_parse_and_check_atomic_input",
    "plasmapy.particles.tests.test_parsing.parse_check_table",
    "plasmapy.particles.tests.test_parsing.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class": {
  "data": {
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.constants.c.to",
    "astropy.constants.e.si",
    "astropy.constants.e.si.value",
    "astropy.constants.m_e",
    "astropy.constants.m_e.to",
    "astropy.constants.m_n",
    "astropy.constants.m_p",
    "astropy.units.C",
    "astropy.units.J",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.g",
    "astropy.units.kC",
    "astropy.units.kg",
    "astropy.units.s",
    "astropy.units.u.to",
    "numpy.array",
    "numpy.complex128",
    "numpy.inf",
    "numpy.nan",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.exceptions.AtomicWarning",
    "plasmapy.particles.exceptions.ChargeError",
    "plasmapy.particles.exceptions.InvalidElementError",
    "plasmapy.particles.exceptions.InvalidIonError",
    "plasmapy.particles.exceptions.InvalidIsotopeError",
    "plasmapy.particles.exceptions.InvalidParticleError",
    "plasmapy.particles.exceptions.MissingAtomicDataError",
    "plasmapy.particles.particle_class.CustomParticle",
    "plasmapy.particles.particle_class.DimensionlessParticle",
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.utils.roman.OutOfRangeError"
   ]
  },
  "type": "module"
 },
 "plasmapy.particles.tests.test_particle_class.AtomicError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.AtomicError"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.AtomicWarning": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.AtomicWarning"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.ChargeError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.ChargeError"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.CustomParticle": {
  "data": {
   "shadows": "plasmapy.particles.particle_class.CustomParticle"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.DimensionlessParticle": {
  "data": {
   "shadows": "plasmapy.particles.particle_class.DimensionlessParticle"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.InvalidElementError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidElementError"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.InvalidIonError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidIonError"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.InvalidIsotopeError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidIsotopeError"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.InvalidParticleError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidParticleError"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.MissingAtomicDataError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.MissingAtomicDataError"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.MissingAtomicDataWarning": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.MissingAtomicDataWarning"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.Particle": {
  "data": {
   "shadows": "plasmapy.particles.particle_class.Particle"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.ParticleZoo": {
  "data": {
   "shadows": "plasmapy.particles.special_particles.ParticleZoo"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.Test_antiparticle_properties_inversion": {
  "data": {
   "lineno": 783
  },
  "type": "class"
 },
 "plasmapy.particles.tests.test_particle_class.Test_antiparticle_properties_inversion.test_antiparticle_attribute_and_operator": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "plasmapy.particles.tests.test_particle_class.particle",
    "repr"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class.Test_antiparticle_properties_inversion.test_equal_mass": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "plasmapy.particles.tests.test_particle_class.opposite",
    "plasmapy.particles.tests.test_particle_class.particle"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class.Test_antiparticle_properties_inversion.test_inverted_inversion": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "plasmapy.particles.tests.test_particle_class.particle",
    "repr"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class.Test_antiparticle_properties_inversion.test_opposite_charge": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "plasmapy.particles.tests.test_particle_class.opposite",
    "plasmapy.particles.tests.test_particle_class.particle"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class._Isotopes": {
  "data": {
   "shadows": "plasmapy.particles.isotopes._Isotopes"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.c": {
  "data": {
   "shadows": "astropy.constants.c"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.call_string": {
  "data": {
   "shadows": "plasmapy.utils.call_string"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.const": {
  "data": {
   "shadows": "astropy.constants"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.custom_particles_from_json_tests": {
  "data": {
   "lineno": 1010
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_particle_class.customized_particle_errors": {
  "data": {
   "lineno": 931
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_particle_class.customized_particle_repr_table": {
  "data": {
   "lineno": 980
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_particle_class.customized_particle_tests": {
  "data": {
   "lineno": 897
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_particle_class.e": {
  "data": {
   "shadows": "astropy.constants.e"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.equivalent_particles_table": {
  "data": {
   "lineno": 524
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_particle_class.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.json_load_particle": {
  "data": {
   "shadows": "plasmapy.particles.json_load_particle"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.json_loads_particle": {
  "data": {
   "shadows": "plasmapy.particles.json_loads_particle"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.known_isotopes": {
  "data": {
   "shadows": "plasmapy.particles.atomic.known_isotopes"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.m_e": {
  "data": {
   "shadows": "astropy.constants.m_e"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.m_n": {
  "data": {
   "shadows": "astropy.constants.m_n"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.m_p": {
  "data": {
   "shadows": "astropy.constants.m_p"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.nuclide_mass_and_mass_equiv_table": {
  "data": {
   "lineno": 641
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_particle_class.opposite": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "Exception",
    "plasmapy.particles.exceptions.InvalidParticleError",
    "plasmapy.particles.tests.test_particle_class.particle",
    "plasmapy.particles.tests.test_particle_class.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class.particle": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.special_particles.ParticleZoo.everything",
    "plasmapy.particles.tests.test_particle_class.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class.particle_antiparticle_pairs": {
  "data": {
   "lineno": 731
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_particle_class.particle_json_repr_table": {
  "data": {
   "lineno": 1241
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_particle_class.particles_from_json_tests": {
  "data": {
   "lineno": 1158
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_particle_class.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.roman": {
  "data": {
   "shadows": "plasmapy.utils.roman"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.run_test_equivalent_calls": {
  "data": {
   "shadows": "plasmapy.utils.pytest_helpers.run_test_equivalent_calls"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_class.test_Particle_class": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "astropy.units.isclose",
    "eval",
    "exec",
    "issubclass",
    "len",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.tests.test_particle_class.inspect",
    "plasmapy.particles.tests.test_particle_class.pytest",
    "plasmapy.particles.tests.test_particle_class.test_Particle_table",
    "plasmapy.utils.call_string"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class.test_Particle_cmp": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "TypeError",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.tests.test_particle_class.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class.test_Particle_equivalent_cases": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.tests.test_particle_class.equivalent_particles_table",
    "plasmapy.particles.tests.test_particle_class.pytest",
    "plasmapy.utils.pytest_helpers.run_test_equivalent_calls"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class.test_Particle_error_table": {
  "data": {
   "lineno": 548
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_particle_class.test_Particle_errors": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "exec",
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.tests.test_particle_class.pytest",
    "plasmapy.particles.tests.test_particle_class.test_Particle_error_table",
    "plasmapy.utils.call_string"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class.test_Particle_table": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_particle_class.test_Particle_warning_table": {
  "data": {
   "lineno": 602
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_particle_class.test_Particle_warnings": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "exec",
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.tests.test_particle_class.pytest",
    "plasmapy.particles.tests.test_particle_class.test_Particle_warning_table",
    "plasmapy.utils.call_string"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class.test_antiparticle_inversion": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.tests.test_particle_class.particle_antiparticle_pairs",
    "plasmapy.particles.tests.test_particle_class.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class.test_custom_particles_from_json_file": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "astropy.units.isclose",
    "cls",
    "cls.__name__",
    "plasmapy.particles.json_load_particle",
    "plasmapy.particles.tests.test_particle_class.custom_particles_from_json_tests",
    "plasmapy.particles.tests.test_particle_class.io",
    "plasmapy.particles.tests.test_particle_class.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class.test_custom_particles_from_json_string": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "astropy.units.isclose",
    "cls",
    "cls.__name__",
    "plasmapy.particles.json_loads_particle",
    "plasmapy.particles.tests.test_particle_class.custom_particles_from_json_tests",
    "plasmapy.particles.tests.test_particle_class.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class.test_customized_particle_repr": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "cls",
    "cls.__name__",
    "plasmapy.particles.tests.test_particle_class.customized_particle_repr_table",
    "plasmapy.particles.tests.test_particle_class.pytest",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class.test_customized_particles": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "astropy.units.isclose",
    "cls",
    "getattr",
    "plasmapy.particles.tests.test_particle_class.customized_particle_tests",
    "plasmapy.particles.tests.test_particle_class.pytest",
    "plasmapy.utils.call_string"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class.test_customized_particles_errors": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "cls",
    "cls.__name__",
    "plasmapy.particles.tests.test_particle_class.customized_particle_errors",
    "plasmapy.particles.tests.test_particle_class.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class.test_particle_bool_error": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "bool",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.tests.test_particle_class.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class.test_particle_class_mass_nuclide_mass": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.tests.test_particle_class.nuclide_mass_and_mass_equiv_table",
    "plasmapy.particles.tests.test_particle_class.pytest",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class.test_particle_half_life_string": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "isinstance",
    "plasmapy.particles.atomic.known_isotopes",
    "plasmapy.particles.exceptions.MissingAtomicDataWarning",
    "plasmapy.particles.isotopes._Isotopes.get",
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.tests.test_particle_class.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class.test_particle_inversion": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.tests.test_particle_class.particle_antiparticle_pairs",
    "plasmapy.particles.tests.test_particle_class.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class.test_particle_is_electron": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.tests.test_particle_class.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class.test_particle_to_json_file": {
  "data": {
   "lineno": 1299,
   "symbols_in_volume": [
    "cls",
    "cls.__name__",
    "plasmapy.particles.tests.test_particle_class.io",
    "plasmapy.particles.tests.test_particle_class.json",
    "plasmapy.particles.tests.test_particle_class.particle_json_repr_table",
    "plasmapy.particles.tests.test_particle_class.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class.test_particle_to_json_string": {
  "data": {
   "lineno": 1278,
   "symbols_in_volume": [
    "cls",
    "cls.__name__",
    "plasmapy.particles.tests.test_particle_class.json",
    "plasmapy.particles.tests.test_particle_class.particle_json_repr_table",
    "plasmapy.particles.tests.test_particle_class.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class.test_particleing_a_particle": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.tests.test_particle_class.particle",
    "plasmapy.particles.tests.test_particle_class.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class.test_particles_from_json_file": {
  "data": {
   "lineno": 1216,
   "symbols_in_volume": [
    "cls",
    "cls.__name__",
    "plasmapy.particles.json_load_particle",
    "plasmapy.particles.tests.test_particle_class.io",
    "plasmapy.particles.tests.test_particle_class.particles_from_json_tests",
    "plasmapy.particles.tests.test_particle_class.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class.test_particles_from_json_string": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": [
    "cls",
    "cls.__name__",
    "plasmapy.particles.json_loads_particle",
    "plasmapy.particles.tests.test_particle_class.particles_from_json_tests",
    "plasmapy.particles.tests.test_particle_class.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class.test_that_object_can_be_dict_key": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "isinstance",
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.tests.test_particle_class.collections",
    "plasmapy.particles.tests.test_particle_class.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class.test_unary_operator_for_elements": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.particle_class.Particle",
    "plasmapy.particles.tests.test_particle_class.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_class.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_input": {
  "data": {
   "symbols_in_volume": [
    "Particle",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.exceptions.ChargeError",
    "plasmapy.particles.exceptions.InvalidParticleError",
    "plasmapy.particles.tests.test_particle_input.func_simple_noparens",
    "plasmapy.particles.tests.test_particle_input.func_simple_parens"
   ]
  },
  "type": "module"
 },
 "plasmapy.particles.tests.test_particle_input.AtomicError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.AtomicError"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_input.ChargeError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.ChargeError"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_input.InvalidElementError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidElementError"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_input.InvalidIonError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidIonError"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_input.InvalidIsotopeError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidIsotopeError"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_input.InvalidParticleError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidParticleError"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_input.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_input.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_input.TestOptionalArgs": {
  "data": {
   "lineno": 283
  },
  "type": "class"
 },
 "plasmapy.particles.tests.test_particle_input.TestOptionalArgs.particle_iter": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "Particle"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.TestOptionalArgs.test_optional_list": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "optional_list",
    "plasmapy.particles.tests.test_particle_input.function_to_test_annotations"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.TestOptionalArgs.test_optional_list.optional_list": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "Particle",
    "particle_input"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.TestOptionalArgs.test_optional_particle": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "Particle",
    "optional_particle"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.TestOptionalArgs.test_optional_particle.optional_particle": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "Particle",
    "particle_input"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.TestOptionalArgs.test_optional_tuple": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "optional_tuple",
    "plasmapy.particles.tests.test_particle_input.function_to_test_annotations"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.TestOptionalArgs.test_optional_tuple.optional_tuple": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "Particle",
    "particle_input"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.Test_particle_input": {
  "data": {
   "lineno": 109
  },
  "type": "class"
 },
 "plasmapy.particles.tests.test_particle_input.Test_particle_input.method_noparens": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "Particle",
    "particle_input"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.Test_particle_input.method_parens": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "Particle",
    "particle_input"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_input.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_input.ambiguous_keywords": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "Particle",
    "particle_input"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.decorator_categories_table": {
  "data": {
   "lineno": 359
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_particle_input.func_simple_noparens": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.func_simple_parens": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "isinstance",
    "particle_input"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.function_to_test_annotations": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "Particle",
    "all",
    "isinstance",
    "len",
    "plasmapy.particles.exceptions.AtomicError",
    "range",
    "repr",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.function_with_element_argument": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "Particle",
    "particle_input"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.function_with_ion_argument": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "Particle",
    "particle_input"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.function_with_isotope_argument": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "Particle",
    "particle_input"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.function_with_list_annotation": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "Particle",
    "particle_input"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.function_with_no_annotations": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "particle_input"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.function_with_tuple_annotation": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "Particle",
    "particle_input"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.is_element": {
  "data": {
   "lineno": 569
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_particle_input.is_ion": {
  "data": {
   "lineno": 575
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_particle_input.is_isotope": {
  "data": {
   "lineno": 572
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_particle_input.list_annotation_test_table": {
  "data": {
   "lineno": 259
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_particle_input.not_element": {
  "data": {
   "lineno": 570
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_particle_input.not_ion": {
  "data": {
   "lineno": 576
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_particle_input.not_isotope": {
  "data": {
   "lineno": 573
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_particle_input.particle_input_error_table": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_particle_input.particle_input_simple_table": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_particle_input.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_particle_input.test_decorator_categories": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "decorated_function",
    "plasmapy.particles.tests.test_particle_input.decorator_categories_table",
    "plasmapy.particles.tests.test_particle_input.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_decorator_categories.decorated_function": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "Particle",
    "particle_input"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_function_with_ambiguity": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.tests.test_particle_input.ambiguous_keywords",
    "plasmapy.particles.tests.test_particle_input.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_invalid_list_type": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "Particle",
    "TypeError",
    "invalid_list_type",
    "plasmapy.particles.tests.test_particle_input.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_invalid_list_type.invalid_list_type": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "Particle",
    "particle_input"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_invalid_number_of_tuple_elements": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "ValueError",
    "plasmapy.particles.tests.test_particle_input.function_with_tuple_annotation",
    "plasmapy.particles.tests.test_particle_input.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_is_element": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "plasmapy.particles.tests.test_particle_input.function_with_element_argument",
    "plasmapy.particles.tests.test_particle_input.is_element",
    "plasmapy.particles.tests.test_particle_input.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_is_ion": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "plasmapy.particles.tests.test_particle_input.function_with_ion_argument",
    "plasmapy.particles.tests.test_particle_input.is_ion",
    "plasmapy.particles.tests.test_particle_input.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_is_isotope": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "plasmapy.particles.tests.test_particle_input.function_with_isotope_argument",
    "plasmapy.particles.tests.test_particle_input.is_isotope",
    "plasmapy.particles.tests.test_particle_input.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_list_annotation": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "Exception",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.tests.test_particle_input.function_to_test_annotations",
    "plasmapy.particles.tests.test_particle_input.function_with_list_annotation",
    "plasmapy.particles.tests.test_particle_input.list_annotation_test_table",
    "plasmapy.particles.tests.test_particle_input.pytest",
    "repr",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_no_annotations_exception": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.tests.test_particle_input.function_with_no_annotations",
    "plasmapy.particles.tests.test_particle_input.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_none_shall_not_pass": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "TypeError",
    "func_none_shall_not_pass",
    "func_none_shall_not_pass_with_tuple",
    "plasmapy.particles.tests.test_particle_input.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_none_shall_not_pass.func_none_shall_not_pass": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "Particle",
    "particle_input"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_none_shall_not_pass.func_none_shall_not_pass_with_list": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "Particle",
    "particle_input"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_none_shall_not_pass.func_none_shall_not_pass_with_tuple": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "Particle",
    "particle_input"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_none_shall_pass": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "func_none_shall_pass",
    "func_none_shall_pass_with_list",
    "func_none_shall_pass_with_tuple"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_none_shall_pass.func_none_shall_pass": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "Particle",
    "particle_input",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_none_shall_pass.func_none_shall_pass_with_list": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "Particle",
    "particle_input",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_none_shall_pass.func_none_shall_pass_with_tuple": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "Particle",
    "particle_input",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_not_element": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "plasmapy.particles.exceptions.InvalidElementError",
    "plasmapy.particles.tests.test_particle_input.function_with_element_argument",
    "plasmapy.particles.tests.test_particle_input.not_element",
    "plasmapy.particles.tests.test_particle_input.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_not_ion": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "plasmapy.particles.exceptions.InvalidIonError",
    "plasmapy.particles.tests.test_particle_input.function_with_ion_argument",
    "plasmapy.particles.tests.test_particle_input.not_ion",
    "plasmapy.particles.tests.test_particle_input.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_not_isotope": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "plasmapy.particles.exceptions.InvalidIsotopeError",
    "plasmapy.particles.tests.test_particle_input.function_with_isotope_argument",
    "plasmapy.particles.tests.test_particle_input.not_isotope",
    "plasmapy.particles.tests.test_particle_input.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_not_optional_particle_annotation_argname": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "TypeError",
    "func_not_optional_particle_with_list",
    "func_not_optional_particle_with_tuple",
    "plasmapy.particles.tests.test_particle_input.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_not_optional_particle_annotation_argname.func_not_optional_particle_with_list": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "Particle",
    "particle_input"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_not_optional_particle_annotation_argname.func_not_optional_particle_with_tuple": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "Particle",
    "particle_input",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_optional_particle_annotation_argname": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "Particle",
    "func_optional_particle",
    "func_optional_particle_with_list",
    "func_optional_particle_with_tuple"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_optional_particle_annotation_argname.func_optional_particle": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "Particle",
    "particle_input",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_optional_particle_annotation_argname.func_optional_particle_with_list": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "Particle",
    "particle_input",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_optional_particle_annotation_argname.func_optional_particle_with_tuple": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "Particle",
    "particle_input",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_particle_input_classes": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "Exception",
    "Particle",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.tests.test_particle_input.Test_particle_input"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_particle_input_errors": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "func",
    "plasmapy.particles.tests.test_particle_input.particle_input_error_table",
    "plasmapy.particles.tests.test_particle_input.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_particle_input_simple": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "Exception",
    "Particle",
    "func",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.tests.test_particle_input.particle_input_simple_table",
    "plasmapy.particles.tests.test_particle_input.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_tuple_annotation": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "Exception",
    "plasmapy.particles.exceptions.AtomicError",
    "plasmapy.particles.tests.test_particle_input.function_to_test_annotations",
    "plasmapy.particles.tests.test_particle_input.function_with_tuple_annotation",
    "plasmapy.particles.tests.test_particle_input.pytest",
    "plasmapy.particles.tests.test_particle_input.tuple_annotation_test_table",
    "repr",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_unexpected_tuple_and_list_argument_types": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "TypeError",
    "plasmapy.particles.tests.test_particle_input.pytest",
    "take_particle"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.test_unexpected_tuple_and_list_argument_types.take_particle": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "Particle",
    "particle_input"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_particle_input.tuple_annotation_test_table": {
  "data": {
   "lineno": 230
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_special_particles": {
  "data": {},
  "type": "module"
 },
 "plasmapy.particles.tests.test_special_particles.ParticleZoo": {
  "data": {
   "shadows": "plasmapy.particles.special_particles.ParticleZoo"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_special_particles._Particles": {
  "data": {
   "shadows": "plasmapy.particles.special_particles._Particles"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_special_particles.particle_antiparticle_pairs": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_special_particles.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.particles.tests.test_special_particles.required_keys": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "plasmapy.particles.tests.test_special_particles.test__Particles_required_keys": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "KeyError",
    "plasmapy.particles.special_particles.ParticleZoo.everything",
    "plasmapy.particles.special_particles._Particles",
    "plasmapy.particles.tests.test_special_particles.pytest",
    "plasmapy.particles.tests.test_special_particles.required_keys",
    "repr"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.tests.test_special_particles.test_particle_antiparticle_pairs": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "plasmapy.particles.special_particles._Particles",
    "plasmapy.particles.special_particles._Particles.replace",
    "plasmapy.particles.tests.test_special_particles.particle_antiparticle_pairs",
    "plasmapy.particles.tests.test_special_particles.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.particles.triton": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "plasmapy.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "plasmapy.plasma": {
  "data": {},
  "type": "module"
 },
 "plasmapy.plasma.exceptions": {
  "data": {},
  "type": "module"
 },
 "plasmapy.plasma.exceptions.DataStandardError": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "plasmapy.utils.PlasmaPyError"
   ]
  },
  "type": "class"
 },
 "plasmapy.plasma.exceptions.PlasmaPyError": {
  "data": {
   "shadows": "plasmapy.utils.PlasmaPyError"
  },
  "type": "import"
 },
 "plasmapy.plasma.plasma_base": {
  "data": {},
  "type": "module"
 },
 "plasmapy.plasma.plasma_base.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "plasmapy.plasma.plasma_base.BasePlasma": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "abc.ABC",
    "dict"
   ]
  },
  "type": "class"
 },
 "plasmapy.plasma.plasma_base.BasePlasma.__init_subclass__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.plasma_base.BasePlasma.average_ionization": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.plasma_base.BasePlasma.electron_density": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.plasma_base.BasePlasma.electron_temperature": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.plasma_base.BasePlasma.ion_density": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.plasma_base.BasePlasma.ion_temperature": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.plasma_base.GenericPlasma": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "plasmapy.plasma.plasma_base.BasePlasma"
   ]
  },
  "type": "class"
 },
 "plasmapy.plasma.plasma_base.GenericPlasma.__init__": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "plasmapy.plasma.plasma_base.GenericPlasma.average_ionization": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.plasma_base.GenericPlasma.electron_density": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.plasma_base.GenericPlasma.electron_temperature": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.plasma_base.GenericPlasma.ion_density": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.plasma_base.GenericPlasma.ion_temperature": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.plasma_base.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "plasmapy.plasma.plasma_base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "plasmapy.plasma.plasma_base.abstractproperty": {
  "data": {
   "shadows": "abc.abstractproperty"
  },
  "type": "import"
 },
 "plasmapy.plasma.plasma_factory": {
  "data": {
   "symbols_in_volume": [
    "plasmapy.plasma.plasma_base.GenericPlasma",
    "plasmapy.plasma.plasma_base.GenericPlasma._registry",
    "plasmapy.plasma.plasma_factory.PlasmaFactory"
   ]
  },
  "type": "module"
 },
 "plasmapy.plasma.plasma_factory.BasicRegistrationFactory": {
  "data": {
   "shadows": "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory"
  },
  "type": "import"
 },
 "plasmapy.plasma.plasma_factory.GenericPlasma": {
  "data": {
   "shadows": "plasmapy.plasma.plasma_base.GenericPlasma"
  },
  "type": "import"
 },
 "plasmapy.plasma.plasma_factory.MultipleMatchError": {
  "data": {
   "shadows": "plasmapy.utils.datatype_factory_base.MultipleMatchError"
  },
  "type": "import"
 },
 "plasmapy.plasma.plasma_factory.NoMatchError": {
  "data": {
   "shadows": "plasmapy.utils.datatype_factory_base.NoMatchError"
  },
  "type": "import"
 },
 "plasmapy.plasma.plasma_factory.Plasma": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "plasmapy.plasma.plasma_factory.PlasmaFactory": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory"
   ]
  },
  "type": "class"
 },
 "plasmapy.plasma.plasma_factory.ValidationFunctionError": {
  "data": {
   "shadows": "plasmapy.utils.datatype_factory_base.ValidationFunctionError"
  },
  "type": "import"
 },
 "plasmapy.plasma.plasma_factory.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "plasmapy.plasma.sources": {
  "data": {},
  "type": "module"
 },
 "plasmapy.plasma.sources.openpmd_hdf5": {
  "data": {
   "symbols_in_volume": [
    "astropy.units.Kelvin",
    "astropy.units.ampere",
    "astropy.units.candela",
    "astropy.units.kilogram",
    "astropy.units.meter",
    "astropy.units.mol",
    "astropy.units.second"
   ]
  },
  "type": "module"
 },
 "plasmapy.plasma.sources.openpmd_hdf5.DataStandardError": {
  "data": {
   "shadows": "plasmapy.plasma.exceptions.DataStandardError"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.openpmd_hdf5.GenericPlasma": {
  "data": {
   "shadows": "plasmapy.plasma.plasma_base.GenericPlasma"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.openpmd_hdf5.HDF5Reader": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "plasmapy.plasma.plasma_base.GenericPlasma"
   ]
  },
  "type": "class"
 },
 "plasmapy.plasma.sources.openpmd_hdf5.HDF5Reader.__enter__": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.openpmd_hdf5.HDF5Reader.__exit__": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.openpmd_hdf5.HDF5Reader.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "FileNotFoundError",
    "ImportError",
    "ModuleNotFoundError",
    "plasmapy.optional_deps.h5py_import_error",
    "plasmapy.plasma.sources.openpmd_hdf5.h5py",
    "plasmapy.plasma.sources.openpmd_hdf5.os",
    "tuple"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.openpmd_hdf5.HDF5Reader._check_valid_openpmd_version": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "KeyError",
    "plasmapy.plasma.exceptions.DataStandardError",
    "plasmapy.plasma.sources.openpmd_hdf5._NEWER_VERSION",
    "plasmapy.plasma.sources.openpmd_hdf5._OUTDATED_VERSION",
    "plasmapy.plasma.sources.openpmd_hdf5._valid_version"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.openpmd_hdf5.HDF5Reader.charge_density": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.array",
    "plasmapy.plasma.sources.openpmd_hdf5._fetch_units",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.openpmd_hdf5.HDF5Reader.close": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.openpmd_hdf5.HDF5Reader.electric_current": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.array",
    "plasmapy.plasma.sources.openpmd_hdf5._fetch_units",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.openpmd_hdf5.HDF5Reader.electric_field": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.array",
    "plasmapy.plasma.sources.openpmd_hdf5._fetch_units",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.openpmd_hdf5.HDF5Reader.is_datasource_for": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "FileNotFoundError",
    "ImportError",
    "KeyError",
    "ModuleNotFoundError",
    "classmethod",
    "plasmapy.optional_deps.h5py_import_error",
    "plasmapy.plasma.sources.openpmd_hdf5.h5py",
    "plasmapy.plasma.sources.openpmd_hdf5.os"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.openpmd_hdf5.HDF5Reader.magnetic_field": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.array",
    "plasmapy.plasma.sources.openpmd_hdf5._fetch_units",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.openpmd_hdf5.StrictVersion": {
  "data": {
   "shadows": "distutils.version.StrictVersion"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.openpmd_hdf5._NEWER_VERSION": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "plasmapy.plasma.sources.openpmd_hdf5._OUTDATED_VERSION": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "plasmapy.plasma.sources.openpmd_hdf5._UNITS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "plasmapy.plasma.sources.openpmd_hdf5._fetch_units": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "astropy.units.dimensionless_unscaled",
    "plasmapy.plasma.sources.openpmd_hdf5._UNITS",
    "zip"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.openpmd_hdf5._valid_version": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "distutils.version.StrictVersion",
    "plasmapy.plasma.sources.openpmd_hdf5._NEWER_VERSION",
    "plasmapy.plasma.sources.openpmd_hdf5._OUTDATED_VERSION"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.openpmd_hdf5.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.openpmd_hdf5.h5py_import_error": {
  "data": {
   "shadows": "plasmapy.optional_deps.h5py_import_error"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.openpmd_hdf5.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.openpmd_hdf5.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.openpmd_hdf5.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.plasma3d": {
  "data": {},
  "type": "module"
 },
 "plasmapy.plasma.sources.plasma3d.GenericPlasma": {
  "data": {
   "shadows": "plasmapy.plasma.plasma_base.GenericPlasma"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.plasma3d.MagnetoStatics": {
  "data": {
   "shadows": "plasmapy.formulary.magnetostatics.MagnetoStatics"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.plasma3d.Plasma3D": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "plasmapy.plasma.plasma_base.GenericPlasma"
   ]
  },
  "type": "class"
 },
 "plasmapy.plasma.sources.plasma3d.Plasma3D.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "astropy.units.Pa",
    "astropy.units.T",
    "astropy.units.V",
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.quantity_input",
    "astropy.units.s",
    "len",
    "numpy.array",
    "numpy.meshgrid",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.plasma3d.Plasma3D.add_magnetostatic": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "list",
    "plasmapy.formulary.magnetostatics.MagnetoStatics",
    "plasmapy.plasma.sources.plasma3d.itertools",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.plasma3d.Plasma3D.alfven_speed": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "astropy.constants.mu0",
    "numpy.sqrt",
    "numpy.sum",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.plasma3d.Plasma3D.electric_field_strength": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.sum",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.plasma3d.Plasma3D.is_datasource_for": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "all",
    "classmethod",
    "len"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.plasma3d.Plasma3D.magnetic_field_strength": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.sum",
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.plasma3d.Plasma3D.velocity": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.plasma3d.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "plasmapy.plasma.sources.plasma3d.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.plasma3d.mu0": {
  "data": {
   "shadows": "astropy.constants.mu0"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.plasma3d.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.plasma3d.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.plasmablob": {
  "data": {},
  "type": "module"
 },
 "plasmapy.plasma.sources.plasmablob.CouplingWarning": {
  "data": {
   "shadows": "plasmapy.utils.CouplingWarning"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.plasmablob.GenericPlasma": {
  "data": {
   "shadows": "plasmapy.plasma.plasma_base.GenericPlasma"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.plasmablob.PlasmaBlob": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "plasmapy.plasma.plasma_base.GenericPlasma"
   ]
  },
  "type": "class"
 },
 "plasmapy.plasma.sources.plasmablob.PlasmaBlob.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.m",
    "astropy.units.quantity_input",
    "plasmapy.formulary.parameters._grab_charge",
    "plasmapy.particles.particle_mass"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.plasmablob.PlasmaBlob.__repr__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "plasmapy.plasma.sources.plasmablob.PlasmaBlob",
    "plasmapy.utils.call_string"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.plasmablob.PlasmaBlob.__str__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.plasmablob.PlasmaBlob.composition": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.plasmablob.PlasmaBlob.coupling": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "plasmapy.formulary.collisions.coupling_parameter",
    "plasmapy.plasma.sources.plasmablob.warnings",
    "plasmapy.utils.CouplingWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.plasmablob.PlasmaBlob.electron_density": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.plasmablob.PlasmaBlob.electron_temperature": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.plasmablob.PlasmaBlob.ionization": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.plasmablob.PlasmaBlob.is_datasource_for": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.plasmablob.PlasmaBlob.quantum_theta": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "plasmapy.formulary.dimensionless.quantum_theta"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.plasmablob.PlasmaBlob.regimes": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "plasmapy.formulary.dimensionless.quantum_theta"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.plasmablob.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "plasmapy.plasma.sources.plasmablob._grab_charge": {
  "data": {
   "shadows": "plasmapy.formulary.parameters._grab_charge"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.plasmablob.call_string": {
  "data": {
   "shadows": "plasmapy.utils.call_string"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.plasmablob.coupling_parameter": {
  "data": {
   "shadows": "plasmapy.formulary.collisions.coupling_parameter"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.plasmablob.particle_mass": {
  "data": {
   "shadows": "plasmapy.particles.particle_mass"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.plasmablob.quantum_theta": {
  "data": {
   "shadows": "plasmapy.formulary.dimensionless.quantum_theta"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.plasmablob.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.plasmablob.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.tests": {
  "data": {},
  "type": "module"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5": {
  "data": {
   "symbols_in_volume": [
    "astropy.units.amp",
    "astropy.units.cd",
    "astropy.units.coulomb",
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.ohm",
    "astropy.units.s"
   ]
  },
  "type": "module"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.DataStandardError": {
  "data": {
   "shadows": "plasmapy.plasma.exceptions.DataStandardError"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.TestOpenPMD2D": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.TestOpenPMD2D.test_correct_shape_charge_density": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.h5_2d"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.TestOpenPMD2D.test_correct_shape_electric_field": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.h5_2d"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.TestOpenPMD2D.test_has_charge_density_with_units": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "astropy.units.C",
    "astropy.units.m",
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.h5_2d"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.TestOpenPMD2D.test_has_electric_current": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "AttributeError",
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.h5_2d",
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.TestOpenPMD2D.test_has_electric_field_with_units": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "astropy.units.V",
    "astropy.units.m",
    "isinstance",
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.h5_2d"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.TestOpenPMD2D.test_has_magnetic_field": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "AttributeError",
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.h5_2d",
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.TestOpenPMD3D": {
  "data": {
   "lineno": 63
  },
  "type": "class"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.TestOpenPMD3D.test_correct_shape_charge_density": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.h5_3d"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.TestOpenPMD3D.test_correct_shape_electric_field": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.h5_3d"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.TestOpenPMD3D.test_has_charge_density_with_units": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "astropy.units.C",
    "astropy.units.Quantity",
    "astropy.units.m",
    "isinstance",
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.h5_3d"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.TestOpenPMD3D.test_has_electric_current": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "AttributeError",
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.h5_3d",
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.TestOpenPMD3D.test_has_electric_field_with_units": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "astropy.units.V",
    "astropy.units.m",
    "isinstance",
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.h5_3d"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.TestOpenPMD3D.test_has_magnetic_field": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "AttributeError",
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.h5_3d",
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.TestOpenPMDThetaMode": {
  "data": {
   "lineno": 91
  },
  "type": "class"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.TestOpenPMDThetaMode.test_correct_shape_charge_density": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.h5_theta"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.TestOpenPMDThetaMode.test_correct_shape_electric_current": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.h5_theta"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.TestOpenPMDThetaMode.test_correct_shape_electric_field": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.h5_theta"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.TestOpenPMDThetaMode.test_correct_shape_magnetic_field": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.h5_theta"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.TestOpenPMDThetaMode.test_has_charge_density_with_units": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "astropy.units.C",
    "astropy.units.Quantity",
    "astropy.units.m",
    "isinstance",
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.h5_theta"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.TestOpenPMDThetaMode.test_has_electric_current_with_units": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "astropy.units.A",
    "astropy.units.Quantity",
    "astropy.units.kg",
    "astropy.units.m",
    "isinstance",
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.h5_theta"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.TestOpenPMDThetaMode.test_has_electric_field_with_units": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "astropy.units.V",
    "astropy.units.m",
    "isinstance",
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.h5_theta"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.TestOpenPMDThetaMode.test_has_magnetic_field_with_units": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "astropy.units.T",
    "isinstance",
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.h5_theta"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.data_dir": {
  "data": {
   "shadows": "plasmapy.particles.data.test.data_dir"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.h5_2d": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "plasmapy.particles.data.test.data_dir",
    "plasmapy.plasma.sources.openpmd_hdf5.HDF5Reader",
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.os",
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.h5_3d": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "plasmapy.particles.data.test.data_dir",
    "plasmapy.plasma.sources.openpmd_hdf5.HDF5Reader",
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.os",
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.h5_theta": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "plasmapy.particles.data.test.data_dir",
    "plasmapy.plasma.sources.openpmd_hdf5.HDF5Reader",
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.os",
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.openpmd_hdf5": {
  "data": {
   "shadows": "plasmapy.plasma.sources.openpmd_hdf5"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.plasmapy.plasma": {
  "data": {
   "shadows": "plasmapy.plasma"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.test_HDF5Reader": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "isinstance",
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.h5_2d"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.test_fetch_units": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "astropy.units",
    "plasmapy.plasma.sources.openpmd_hdf5._fetch_units",
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.pytest",
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.units_test_table",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.test_non_openpmd_hdf5": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "plasmapy.particles.data.test.data_dir",
    "plasmapy.plasma.exceptions.DataStandardError",
    "plasmapy.plasma.sources.openpmd_hdf5.HDF5Reader",
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.os",
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.test_unavailable_hdf5": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "FileNotFoundError",
    "plasmapy.plasma.sources.openpmd_hdf5.HDF5Reader",
    "plasmapy.plasma.sources.tests.test_openpmd_hdf5.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.tests.test_openpmd_hdf5.units_test_table": {
  "data": {
   "lineno": 125
  },
  "type": "constant"
 },
 "plasmapy.plasma.sources.tests.test_plasma3d": {
  "data": {},
  "type": "module"
 },
 "plasmapy.plasma.sources.tests.test_plasma3d.InvalidParticleError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidParticleError"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.tests.test_plasma3d.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.tests.test_plasma3d.plasma3d": {
  "data": {
   "shadows": "plasmapy.plasma.sources.plasma3d"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.tests.test_plasma3d.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.tests.test_plasma3d.test_Plasma3D_derived_vars": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "astropy.units.Pa",
    "astropy.units.T",
    "astropy.units.V",
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.m.all",
    "astropy.units.s",
    "astropy.units.s.all",
    "numpy.allclose",
    "numpy.linspace",
    "plasmapy.plasma.sources.plasma3d.Plasma3D"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_plasma3d.test_Plasma3D_setup": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "astropy.units.Pa",
    "astropy.units.T",
    "astropy.units.V",
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.linspace",
    "plasmapy.plasma.sources.plasma3d.Plasma3D",
    "plasmapy.plasma.sources.tests.test_plasma3d.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_plasma3d.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.tests.test_plasmablob": {
  "data": {},
  "type": "module"
 },
 "plasmapy.plasma.sources.tests.test_plasmablob.CouplingWarning": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.CouplingWarning"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.tests.test_plasmablob.InvalidParticleError": {
  "data": {
   "shadows": "plasmapy.particles.exceptions.InvalidParticleError"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.tests.test_plasmablob.Test_PlasmaBlob": {
  "data": {
   "lineno": 299
  },
  "type": "class"
 },
 "plasmapy.plasma.sources.tests.test_plasmablob.Test_PlasmaBlob.setup_class": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.cm",
    "classmethod",
    "plasmapy.plasma.sources.plasmablob.PlasmaBlob"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_plasmablob.Test_PlasmaBlob.test_composition": {
  "data": {
   "lineno": 352
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_plasmablob.Test_PlasmaBlob.test_coupling": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_plasmablob.Test_PlasmaBlob.test_electron_density": {
  "data": {
   "lineno": 332
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_plasmablob.Test_PlasmaBlob.test_electron_temperature": {
  "data": {
   "lineno": 322
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_plasmablob.Test_PlasmaBlob.test_invalid_particle": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "plasmapy.particles.exceptions.InvalidParticleError",
    "plasmapy.plasma.sources.plasmablob.PlasmaBlob",
    "plasmapy.plasma.sources.tests.test_plasmablob.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_plasmablob.Test_PlasmaBlob.test_ionization": {
  "data": {
   "lineno": 342
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_plasmablob.Test_PlasmaBlob.test_quantum_theta": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_plasmablob.Test_PlasmaBlobRegimes": {
  "data": {
   "lineno": 137
  },
  "type": "class"
 },
 "plasmapy.plasma.sources.tests.test_plasmablob.Test_PlasmaBlobRegimes.test_both_fermi_and_thermal_energy_important": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.cm",
    "plasmapy.plasma.sources.plasmablob.PlasmaBlob"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_plasmablob.Test_PlasmaBlobRegimes.test_fermi_quantum_energy_dominant": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.cm",
    "plasmapy.plasma.sources.plasmablob.PlasmaBlob"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_plasmablob.Test_PlasmaBlobRegimes.test_intermediate_coupling": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.cm",
    "plasmapy.plasma.sources.plasmablob.PlasmaBlob"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_plasmablob.Test_PlasmaBlobRegimes.test_strongly_coupled": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.cm",
    "plasmapy.plasma.sources.plasmablob.PlasmaBlob"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_plasmablob.Test_PlasmaBlobRegimes.test_thermal_kinetic_energy_dominant": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.cm",
    "plasmapy.plasma.sources.plasmablob.PlasmaBlob"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_plasmablob.Test_PlasmaBlobRegimes.test_weakly_coupled": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.cm",
    "plasmapy.plasma.sources.plasmablob.PlasmaBlob",
    "plasmapy.plasma.sources.tests.test_plasmablob.pytest",
    "plasmapy.utils.exceptions.CouplingWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_plasmablob.magnetostatics": {
  "data": {
   "shadows": "plasmapy.formulary.magnetostatics"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.tests.test_plasmablob.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.tests.test_plasmablob.plasma3d": {
  "data": {
   "shadows": "plasmapy.plasma.sources.plasma3d"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.tests.test_plasmablob.plasmablob": {
  "data": {
   "shadows": "plasmapy.plasma.sources.plasmablob"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.tests.test_plasmablob.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.plasma.sources.tests.test_plasmablob.test_Plasma3D_add_magnetostatics": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "astropy.units.A",
    "astropy.units.m",
    "numpy.array",
    "numpy.linspace",
    "plasmapy.formulary.magnetostatics.CircularWire",
    "plasmapy.formulary.magnetostatics.InfiniteStraightWire",
    "plasmapy.formulary.magnetostatics.MagneticDipole",
    "plasmapy.plasma.sources.plasma3d.Plasma3D",
    "plasmapy.plasma.sources.tests.test_plasmablob.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_plasmablob.test_Plasma3D_derived_vars": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "astropy.units.Pa",
    "astropy.units.T",
    "astropy.units.V",
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.m.all",
    "astropy.units.s",
    "astropy.units.s.all",
    "numpy.allclose",
    "numpy.linspace",
    "plasmapy.plasma.sources.plasma3d.Plasma3D"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_plasmablob.test_Plasma3D_setup": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "astropy.units.Pa",
    "astropy.units.T",
    "astropy.units.V",
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.linspace",
    "plasmapy.plasma.sources.plasma3d.Plasma3D",
    "plasmapy.plasma.sources.tests.test_plasmablob.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.sources.tests.test_plasmablob.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.plasma.tests": {
  "data": {},
  "type": "module"
 },
 "plasmapy.plasma.tests.test_plasma_base": {
  "data": {
   "symbols_in_volume": [
    "plasmapy.plasma.BasePlasma._registry"
   ]
  },
  "type": "module"
 },
 "plasmapy.plasma.tests.test_plasma_base.BasePlasma": {
  "data": {
   "shadows": "plasmapy.plasma.BasePlasma"
  },
  "type": "import"
 },
 "plasmapy.plasma.tests.test_plasma_base.GenericPlasma": {
  "data": {
   "shadows": "plasmapy.plasma.GenericPlasma"
  },
  "type": "import"
 },
 "plasmapy.plasma.tests.test_plasma_base.IsDataSource": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "plasmapy.plasma.BasePlasma"
   ]
  },
  "type": "class"
 },
 "plasmapy.plasma.tests.test_plasma_base.IsDataSource.is_datasource_for": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.tests.test_plasma_base.IsNotDataSource": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "plasmapy.plasma.BasePlasma"
   ]
  },
  "type": "class"
 },
 "plasmapy.plasma.tests.test_plasma_base.IsNotDataSource.is_datasource_for": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.tests.test_plasma_base.NoDataSource": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "plasmapy.plasma.BasePlasma"
   ]
  },
  "type": "class"
 },
 "plasmapy.plasma.tests.test_plasma_base.TestRegistrar": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "plasmapy.plasma.tests.test_plasma_base.TestRegistrar.test_is_data_source": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "plasmapy.plasma.BasePlasma._registry",
    "plasmapy.plasma.BasePlasma._registry.get",
    "plasmapy.plasma.tests.test_plasma_base.IsDataSource"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.tests.test_plasma_base.TestRegistrar.test_is_not_data_source": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "plasmapy.plasma.BasePlasma._registry",
    "plasmapy.plasma.BasePlasma._registry.get",
    "plasmapy.plasma.tests.test_plasma_base.IsNotDataSource"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.tests.test_plasma_base.TestRegistrar.test_no_data_source": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "plasmapy.plasma.BasePlasma._registry.get",
    "plasmapy.plasma.tests.test_plasma_base.NoDataSource"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.tests.test_plasma_base.test_subclasses": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "issubclass",
    "plasmapy.plasma.BasePlasma",
    "plasmapy.plasma.GenericPlasma"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.tests.test_plasma_factory": {
  "data": {},
  "type": "module"
 },
 "plasmapy.plasma.tests.test_plasma_factory.TestPlasma": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "plasmapy.plasma.tests.test_plasma_factory.TestPlasma.test_Plasma3D": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "astropy.units.m",
    "isinstance",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.tests.test_plasma_factory.TestPlasma.test_PlasmaBlob": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.cm",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.tests.test_plasma_factory.TestPlasma.test_patters": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.tests.test_plasma_factory.data_dir": {
  "data": {
   "shadows": "plasmapy.particles.data.test.data_dir"
  },
  "type": "import"
 },
 "plasmapy.plasma.tests.test_plasma_factory.h5": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "plasmapy.particles.data.test.data_dir",
    "plasmapy.plasma.tests.test_plasma_factory.os",
    "plasmapy.plasma.tests.test_plasma_factory.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.plasma.tests.test_plasma_factory.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.plasma.tests.test_plasma_factory.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "plasmapy.plasma.tests.test_plasma_factory.plasmapy.plasma": {
  "data": {
   "shadows": "plasmapy.plasma"
  },
  "type": "import"
 },
 "plasmapy.plasma.tests.test_plasma_factory.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.plasma.tests.test_plasma_factory.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.simulation": {
  "data": {},
  "type": "module"
 },
 "plasmapy.simulation.AbstractSimulation": {
  "data": {
   "shadows": "plasmapy.simulation.abstractions.AbstractSimulation"
  },
  "type": "import"
 },
 "plasmapy.simulation.AbstractTimeDependentSimulation": {
  "data": {
   "shadows": "plasmapy.simulation.abstractions.AbstractTimeDependentSimulation"
  },
  "type": "import"
 },
 "plasmapy.simulation.ParticleTracker": {
  "data": {
   "shadows": "plasmapy.simulation.particletracker.ParticleTracker"
  },
  "type": "import"
 },
 "plasmapy.simulation.abstractions": {
  "data": {},
  "type": "module"
 },
 "plasmapy.simulation.abstractions.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "plasmapy.simulation.abstractions.AbstractSimulation": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "plasmapy.simulation.abstractions.AbstractSimulation.finalize": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "typing.NoReturn"
   ]
  },
  "type": "function"
 },
 "plasmapy.simulation.abstractions.AbstractSimulation.initialize": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "typing.NoReturn"
   ]
  },
  "type": "function"
 },
 "plasmapy.simulation.abstractions.AbstractSimulation.simulate": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.simulation.abstractions.AbstractSimulation.summarize": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.simulation.abstractions.AbstractTimeDependentSimulation": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "plasmapy.simulation.abstractions.AbstractSimulation"
   ]
  },
  "type": "class"
 },
 "plasmapy.simulation.abstractions.NoReturn": {
  "data": {
   "shadows": "typing.NoReturn"
  },
  "type": "import"
 },
 "plasmapy.simulation.abstractions.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "plasmapy.simulation.abstractions.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "plasmapy.simulation.particletracker": {
  "data": {},
  "type": "module"
 },
 "plasmapy.simulation.particletracker.Axes3D": {
  "data": {
   "shadows": "mpl_toolkits.mplot3d.Axes3D"
  },
  "type": "import"
 },
 "plasmapy.simulation.particletracker.ParticleTracker": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "plasmapy.simulation.particletracker.ParticleTracker.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "astropy.constants.e.si",
    "astropy.units.m",
    "astropy.units.quantity_input",
    "astropy.units.s",
    "float",
    "int",
    "numpy.arange",
    "numpy.inf",
    "numpy.isinf",
    "numpy.moveaxis",
    "numpy.zeros",
    "plasmapy.particles.atomic.integer_charge",
    "plasmapy.particles.atomic.particle_mass",
    "scipy.interpolate.RegularGridInterpolator"
   ]
  },
  "type": "function"
 },
 "plasmapy.simulation.particletracker.ParticleTracker.__repr__": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "plasmapy.simulation.particletracker.ParticleTracker.__str__": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "plasmapy.simulation.particletracker.ParticleTracker._interpolate_fields": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "astropy.units.T",
    "astropy.units.V",
    "astropy.units.m"
   ]
  },
  "type": "function"
 },
 "plasmapy.simulation.particletracker.ParticleTracker.boris_push": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.s",
    "numpy.cross"
   ]
  },
  "type": "function"
 },
 "plasmapy.simulation.particletracker.ParticleTracker.kinetic_energy_history": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.simulation.particletracker.ParticleTracker.plot_time_trajectories": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "astropy.visualization.quantity_support",
    "matplotlib.pyplot.show",
    "matplotlib.pyplot.subplots",
    "range"
   ]
  },
  "type": "function"
 },
 "plasmapy.simulation.particletracker.ParticleTracker.plot_trajectories": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "astropy.visualization.quantity_support",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.show",
    "range"
   ]
  },
  "type": "function"
 },
 "plasmapy.simulation.particletracker.ParticleTracker.run": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "plasmapy.simulation.particletracker.ParticleTracker.test_kinetic_energy": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "plasmapy.simulation.particletracker.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "plasmapy.simulation.particletracker.atomic": {
  "data": {
   "shadows": "plasmapy.particles.atomic"
  },
  "type": "import"
 },
 "plasmapy.simulation.particletracker.constants": {
  "data": {
   "shadows": "astropy.constants"
  },
  "type": "import"
 },
 "plasmapy.simulation.particletracker.interp": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "plasmapy.simulation.particletracker.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.simulation.particletracker.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "plasmapy.simulation.particletracker.quantity_support": {
  "data": {
   "shadows": "astropy.visualization.quantity_support"
  },
  "type": "import"
 },
 "plasmapy.simulation.particletracker.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.simulation.tests": {
  "data": {},
  "type": "module"
 },
 "plasmapy.simulation.tests.test_particletracker": {
  "data": {},
  "type": "module"
 },
 "plasmapy.simulation.tests.test_particletracker.ParticleTracker": {
  "data": {
   "shadows": "plasmapy.simulation.particletracker.ParticleTracker"
  },
  "type": "import"
 },
 "plasmapy.simulation.tests.test_particletracker.Plasma3D": {
  "data": {
   "shadows": "plasmapy.plasma.sources.Plasma3D"
  },
  "type": "import"
 },
 "plasmapy.simulation.tests.test_particletracker.curve_fit": {
  "data": {
   "shadows": "scipy.optimize.curve_fit"
  },
  "type": "import"
 },
 "plasmapy.simulation.tests.test_particletracker.fit_sine_curve": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.sqrt",
    "scipy.optimize.curve_fit"
   ]
  },
  "type": "function"
 },
 "plasmapy.simulation.tests.test_particletracker.fit_sine_curve.sine": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "plasmapy.simulation.tests.test_particletracker.fitting": {
  "data": {
   "shadows": "astropy.modeling.fitting"
  },
  "type": "import"
 },
 "plasmapy.simulation.tests.test_particletracker.models": {
  "data": {
   "shadows": "astropy.modeling.models"
  },
  "type": "import"
 },
 "plasmapy.simulation.tests.test_particletracker.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.simulation.tests.test_particletracker.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.simulation.tests.test_particletracker.test_particle_exb_drift": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "astropy.modeling.fitting.LinearLSQFitter",
    "astropy.modeling.models.Polynomial1D",
    "astropy.units.V",
    "astropy.units.m",
    "astropy.units.s",
    "fit_p",
    "int",
    "numpy.allclose",
    "numpy.isclose",
    "numpy.random.normal",
    "p",
    "plasmapy.simulation.particletracker.ParticleTracker",
    "plasmapy.simulation.tests.test_particletracker.pytest",
    "plasmapy.simulation.tests.test_particletracker.uniform_magnetic_field"
   ]
  },
  "type": "function"
 },
 "plasmapy.simulation.tests.test_particletracker.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.simulation.tests.test_particletracker.uniform_magnetic_field": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "astropy.units.T",
    "astropy.units.m",
    "numpy.linspace",
    "plasmapy.plasma.sources.Plasma3D",
    "plasmapy.simulation.tests.test_particletracker.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "plasmapy.urlencode": {
  "data": {
   "shadows": "urllib.parse.urlencode"
  },
  "type": "import"
 },
 "plasmapy.utils": {
  "data": {},
  "type": "module"
 },
 "plasmapy.utils.CouplingWarning": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.CouplingWarning"
  },
  "type": "import"
 },
 "plasmapy.utils.PhysicsError": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.PhysicsError"
  },
  "type": "import"
 },
 "plasmapy.utils.PhysicsWarning": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.PhysicsWarning"
  },
  "type": "import"
 },
 "plasmapy.utils.PlasmaPyError": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.PlasmaPyError"
  },
  "type": "import"
 },
 "plasmapy.utils.PlasmaPyWarning": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.PlasmaPyWarning"
  },
  "type": "import"
 },
 "plasmapy.utils.RelativityError": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.RelativityError"
  },
  "type": "import"
 },
 "plasmapy.utils.RelativityWarning": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.RelativityWarning"
  },
  "type": "import"
 },
 "plasmapy.utils.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "plasmapy.utils.datatype_factory_base": {
  "data": {},
  "type": "module"
 },
 "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory": {
  "data": {
   "lineno": 37
  },
  "type": "class"
 },
 "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory.__call__": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory._check_registered_widget": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "MultipleMatchError",
    "NoMatchError",
    "WidgetType",
    "len",
    "list",
    "print"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory.register": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "AttributeError",
    "ValidationFunctionError",
    "WidgetType",
    "WidgetType.__name__",
    "callable",
    "getattr",
    "hasattr",
    "plasmapy.utils.datatype_factory_base.inspect"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory.unregister": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "WidgetType"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.datatype_factory_base.MultipleMatchError": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.datatype_factory_base.NoMatchError": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.datatype_factory_base.ValidationFunctionError": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.datatype_factory_base.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators": {
  "data": {},
  "type": "module"
 },
 "plasmapy.utils.decorators.CheckBase": {
  "data": {
   "shadows": "plasmapy.utils.decorators.checks.CheckBase"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.CheckUnits": {
  "data": {
   "shadows": "plasmapy.utils.decorators.checks.CheckUnits"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.CheckValues": {
  "data": {
   "shadows": "plasmapy.utils.decorators.checks.CheckValues"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.ValidateQuantities": {
  "data": {
   "shadows": "plasmapy.utils.decorators.validators.ValidateQuantities"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "plasmapy.utils.decorators.angular_freq_to_hz": {
  "data": {
   "shadows": "plasmapy.utils.decorators.converter.angular_freq_to_hz"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.check_relativistic": {
  "data": {
   "shadows": "plasmapy.utils.decorators.checks.check_relativistic"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.check_units": {
  "data": {
   "shadows": "plasmapy.utils.decorators.checks.check_units"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.check_values": {
  "data": {
   "shadows": "plasmapy.utils.decorators.checks.check_values"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.checks": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "plasmapy.utils.decorators.checks.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.checks.CheckBase": {
  "data": {
   "lineno": 40
  },
  "type": "class"
 },
 "plasmapy.utils.decorators.checks.CheckBase.__init__": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckBase.checks": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckUnits": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "plasmapy.utils.decorators.checks.CheckBase"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.decorators.checks.CheckUnits.__call__": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "f",
    "plasmapy.utils.decorators.checks.inspect"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckUnits.__call__.wrapper": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "f",
    "plasmapy.utils.decorators.checks.functools",
    "plasmapy.utils.decorators.helpers.preserve_signature"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckUnits.__init__": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "astropy.units.Unit",
    "str",
    "super",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckUnits._check_unit": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckUnits._check_unit_core": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "TypeError",
    "ValueError",
    "astropy.units.Quantity",
    "astropy.units.Unit",
    "astropy.units.UnitTypeError",
    "hasattr",
    "len",
    "numpy.array",
    "numpy.count_nonzero",
    "numpy.equal",
    "numpy.logical_and",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckUnits._condition_target_units": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "TypeError",
    "astropy.units.Unit",
    "bool",
    "staticmethod",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckUnits._flatten_equivalencies_list": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckUnits._get_unit_checks": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "TypeError",
    "ValueError",
    "all",
    "astropy.units.equivalencies.Equivalency",
    "functools.reduce",
    "isinstance",
    "len",
    "list",
    "plasmapy.utils.decorators.checks.collections",
    "plasmapy.utils.decorators.checks.inspect",
    "plasmapy.utils.decorators.checks.warnings",
    "plasmapy.utils.exceptions.PlasmaPyWarning",
    "set",
    "str",
    "tuple",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckUnits._normalize_equivalencies": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.Unit",
    "callable",
    "enumerate",
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckValues": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "plasmapy.utils.decorators.checks.CheckBase"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.decorators.checks.CheckValues.__call__": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "plasmapy.utils.decorators.checks.inspect"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckValues.__call__.wrapper": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "f",
    "plasmapy.utils.decorators.checks.functools",
    "plasmapy.utils.decorators.helpers.preserve_signature"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckValues.__init__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "bool",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckValues._check_value": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "list",
    "numpy.any",
    "numpy.errstate",
    "numpy.iscomplexobj",
    "numpy.isinf",
    "numpy.isnan",
    "str",
    "tuple",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.CheckValues._get_value_checks": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "bool",
    "len",
    "plasmapy.utils.decorators.checks.inspect",
    "plasmapy.utils.decorators.checks.warnings",
    "plasmapy.utils.exceptions.PlasmaPyWarning",
    "set",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.checks.Equivalency": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "plasmapy.utils.decorators.checks.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.checks.PlasmaPyWarning": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.PlasmaPyWarning"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.checks.RelativityError": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.RelativityError"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.checks.RelativityWarning": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.RelativityWarning"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.checks.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.checks.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.checks.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "plasmapy.utils.decorators.checks._check_relativistic": {
  "data": {
   "lineno": 1322,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "astropy.constants.c.to_value",
    "astropy.units.Quantity",
    "astropy.units.UnitConversionError",
    "astropy.units.dimensionless_unscaled",
    "isinstance",
    "numpy.abs",
    "numpy.inf",
    "numpy.max",
    "plasmapy.utils.decorators.checks.warnings",
    "plasmapy.utils.exceptions.RelativityError",
    "plasmapy.utils.exceptions.RelativityWarning",
    "round",
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.c": {
  "data": {
   "shadows": "astropy.constants.c"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.checks.check_relativistic": {
  "data": {
   "lineno": 1253,
   "symbols_in_volume": [
    "decorator"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.check_relativistic.decorator": {
  "data": {
   "lineno": 1307
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.check_relativistic.decorator.wrapper": {
  "data": {
   "lineno": 1308,
   "symbols_in_volume": [
    "_check_relativistic",
    "f",
    "f.__name__",
    "plasmapy.utils.decorators.checks.functools",
    "plasmapy.utils.decorators.helpers.preserve_signature"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.check_units": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "plasmapy.utils.decorators.checks.CheckUnits",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.check_values": {
  "data": {
   "lineno": 1178,
   "symbols_in_volume": [
    "bool",
    "plasmapy.utils.decorators.checks.CheckValues",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.checks.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.checks.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.checks.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.checks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.checks.preserve_signature": {
  "data": {
   "shadows": "plasmapy.utils.decorators.helpers.preserve_signature"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.checks.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.checks.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.checks.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.converter": {
  "data": {},
  "type": "module"
 },
 "plasmapy.utils.decorators.converter.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "plasmapy.utils.decorators.converter.angular_freq_to_hz": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "plasmapy.utils.decorators.converter.inspect"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.converter.angular_freq_to_hz.wrapper": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "astropy.units.Hz",
    "astropy.units.cy",
    "astropy.units.s",
    "fn",
    "plasmapy.utils.decorators.converter.functools",
    "plasmapy.utils.decorators.helpers.preserve_signature"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.converter.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.converter.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.converter.preserve_signature": {
  "data": {
   "shadows": "plasmapy.utils.decorators.helpers.preserve_signature"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.converter.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.helpers": {
  "data": {},
  "type": "module"
 },
 "plasmapy.utils.decorators.helpers.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "plasmapy.utils.decorators.helpers.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.helpers.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.helpers.preserve_signature": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "f",
    "hasattr",
    "list",
    "plasmapy.utils.decorators.helpers.functools",
    "plasmapy.utils.decorators.helpers.inspect"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.helpers.preserve_signature.wrapper": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "f",
    "plasmapy.utils.decorators.helpers.functools"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.preserve_signature": {
  "data": {
   "shadows": "plasmapy.utils.decorators.helpers.preserve_signature"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests": {
  "data": {},
  "type": "module"
 },
 "plasmapy.utils.decorators.tests.test_checks": {
  "data": {
   "symbols_in_volume": [
    "TypeError",
    "astropy.constants.c",
    "astropy.units.AA",
    "astropy.units.Gyr",
    "astropy.units.UnitConversionError",
    "astropy.units.cm",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.inf",
    "plasmapy.utils.exceptions.RelativityError"
   ]
  },
  "type": "module"
 },
 "plasmapy.utils.decorators.tests.test_checks.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_checks.CheckBase": {
  "data": {
   "shadows": "plasmapy.utils.decorators.checks.CheckBase"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_checks.CheckUnits": {
  "data": {
   "shadows": "plasmapy.utils.decorators.checks.CheckUnits"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_checks.CheckValues": {
  "data": {
   "shadows": "plasmapy.utils.decorators.checks.CheckValues"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_checks.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_checks.LambdaType": {
  "data": {
   "shadows": "types.LambdaType"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_checks.PlasmaPyWarning": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.PlasmaPyWarning"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_checks.RelativityError": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.RelativityError"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_checks.RelativityWarning": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.RelativityWarning"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckBase": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckBase.test_checks": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "plasmapy.utils.decorators.checks.CheckBase"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckBase.test_for_members": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "hasattr",
    "plasmapy.utils.decorators.checks.CheckUnits"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "plasmapy.utils.decorators.checks.CheckUnits._CheckUnits__check_defaults"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.foo_no_anno": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.foo_partial_anno": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "astropy.units.cm",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.foo_return_anno": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "astropy.units.um",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.foo_stars": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "astropy.units.cm",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.foo_with_none": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "astropy.units.cm",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.test_cu_called_as_decorator": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "Foo",
    "astropy.units.UnitTypeError",
    "astropy.units.cm",
    "astropy.units.g",
    "astropy.units.km",
    "plasmapy.utils.decorators.checks.CheckUnits",
    "plasmapy.utils.decorators.tests.test_checks.pytest",
    "wfoo"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.test_cu_called_as_decorator.Foo": {
  "data": {
   "lineno": 613
  },
  "type": "class"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.test_cu_called_as_decorator.Foo.__init__": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "astropy.units.cm",
    "plasmapy.utils.decorators.checks.CheckUnits"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.test_cu_called_as_decorator.Foo.bar": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "astropy.units.cm",
    "plasmapy.utils.decorators.checks.CheckUnits"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.test_cu_default_check_values": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "dict",
    "hasattr",
    "isinstance",
    "plasmapy.utils.decorators.checks.CheckUnits"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.test_cu_method__check_unit": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.units.UnitTypeError",
    "astropy.units.cm",
    "astropy.units.kg",
    "astropy.units.km",
    "astropy.units.m",
    "enumerate",
    "hasattr",
    "isinstance",
    "plasmapy.utils.decorators.checks.CheckUnits",
    "plasmapy.utils.decorators.tests.test_checks.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.test_cu_method__check_unit.MyQuantity": {
  "data": {
   "lineno": 453
  },
  "type": "class"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.test_cu_method__condition_target_units": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.units.Quantity",
    "astropy.units.cm",
    "astropy.units.km",
    "float",
    "hasattr",
    "plasmapy.utils.decorators.checks.CheckUnits",
    "plasmapy.utils.decorators.tests.test_checks.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.test_cu_method__flatten_equivalencies_list": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "hasattr",
    "plasmapy.utils.decorators.checks.CheckUnits"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.test_cu_method__get_unit_checks": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.K",
    "astropy.units.cm",
    "astropy.units.km",
    "astropy.units.temperature",
    "astropy.units.temperature_energy",
    "astropy.units.um",
    "enumerate",
    "hasattr",
    "list",
    "plasmapy.utils.decorators.checks.CheckUnits",
    "plasmapy.utils.decorators.tests.test_checks.inspect",
    "plasmapy.utils.decorators.tests.test_checks.pytest",
    "plasmapy.utils.exceptions.PlasmaPyWarning",
    "sorted"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.test_cu_method__normalize_equivalencies": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.K",
    "astropy.units.cm",
    "astropy.units.deg_C",
    "hasattr",
    "isinstance",
    "len",
    "plasmapy.utils.decorators.checks.CheckUnits",
    "plasmapy.utils.decorators.tests.test_checks.pytest",
    "tuple",
    "types.LambdaType"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.test_cu_preserves_signature": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "hasattr",
    "plasmapy.utils.decorators.checks.CheckUnits",
    "plasmapy.utils.decorators.tests.test_checks.inspect",
    "wfoo",
    "wfoo.__signature__"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.test_decorator_func_def": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "astropy.units.cm",
    "plasmapy.utils.decorators.checks.CheckUnits",
    "plasmapy.utils.decorators.checks.CheckUnits.__module__",
    "plasmapy.utils.decorators.checks.CheckUnits.__qualname__",
    "plasmapy.utils.decorators.checks.check_units",
    "plasmapy.utils.decorators.tests.test_checks.inspect",
    "range",
    "sorted",
    "unittest.mock.Mock",
    "unittest.mock.patch",
    "wfoo"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckUnits.test_inheritance": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "issubclass",
    "plasmapy.utils.decorators.checks.CheckBase",
    "plasmapy.utils.decorators.checks.CheckUnits"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckValues": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "plasmapy.utils.decorators.checks.CheckValues._CheckValues__check_defaults"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckValues.foo": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckValues.foo_stars": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckValues.test_cv_called_as_decorator": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "Foo",
    "ValueError",
    "plasmapy.utils.decorators.checks.CheckValues",
    "plasmapy.utils.decorators.tests.test_checks.pytest",
    "wfoo"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckValues.test_cv_called_as_decorator.Foo": {
  "data": {
   "lineno": 1092
  },
  "type": "class"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckValues.test_cv_called_as_decorator.Foo.__init__": {
  "data": {
   "lineno": 1093,
   "symbols_in_volume": [
    "plasmapy.utils.decorators.checks.CheckValues"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckValues.test_cv_called_as_decorator.Foo.bar": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "plasmapy.utils.decorators.checks.CheckValues"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckValues.test_cv_default_check_values": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "dict",
    "hasattr",
    "isinstance",
    "plasmapy.utils.decorators.checks.CheckValues"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckValues.test_cv_method__check_value": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.cm",
    "astropy.units.kg",
    "complex",
    "cv",
    "cv._check_value",
    "hasattr",
    "numpy.array",
    "numpy.complex",
    "numpy.inf",
    "numpy.nan",
    "plasmapy.utils.decorators.checks.CheckValues",
    "plasmapy.utils.decorators.tests.test_checks.pytest",
    "wfoo"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckValues.test_cv_method__get_value_checks": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "astropy.units.cm",
    "hasattr",
    "plasmapy.utils.decorators.checks.CheckValues",
    "plasmapy.utils.decorators.tests.test_checks.inspect",
    "plasmapy.utils.decorators.tests.test_checks.pytest",
    "plasmapy.utils.exceptions.PlasmaPyWarning",
    "sorted"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckValues.test_cv_preserves_signature": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "hasattr",
    "plasmapy.utils.decorators.checks.CheckValues",
    "plasmapy.utils.decorators.tests.test_checks.inspect",
    "wfoo",
    "wfoo.__signature__"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckValues.test_decorator_func_def": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "plasmapy.utils.decorators.checks.CheckValues",
    "plasmapy.utils.decorators.checks.CheckValues.__module__",
    "plasmapy.utils.decorators.checks.CheckValues.__qualname__",
    "plasmapy.utils.decorators.checks.check_values",
    "plasmapy.utils.decorators.tests.test_checks.inspect",
    "range",
    "sorted",
    "unittest.mock.Mock",
    "unittest.mock.patch",
    "wfoo"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.TestCheckValues.test_inheritance": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "issubclass",
    "plasmapy.utils.decorators.checks.CheckBase",
    "plasmapy.utils.decorators.checks.CheckValues"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks._check_relativistic": {
  "data": {
   "shadows": "plasmapy.utils.decorators.checks._check_relativistic"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_checks.c": {
  "data": {
   "shadows": "astropy.constants.c"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_checks.check_relativistic": {
  "data": {
   "shadows": "plasmapy.utils.decorators.checks.check_relativistic"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_checks.check_units": {
  "data": {
   "shadows": "plasmapy.utils.decorators.checks.check_units"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_checks.check_values": {
  "data": {
   "shadows": "plasmapy.utils.decorators.checks.check_values"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_checks.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_checks.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_checks.non_relativistic_speed_examples": {
  "data": {
   "lineno": 1205
  },
  "type": "constant"
 },
 "plasmapy.utils.decorators.tests.test_checks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_checks.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_checks.relativistic_error_examples": {
  "data": {
   "lineno": 1213
  },
  "type": "constant"
 },
 "plasmapy.utils.decorators.tests.test_checks.relativistic_warning_examples": {
  "data": {
   "lineno": 1226
  },
  "type": "constant"
 },
 "plasmapy.utils.decorators.tests.test_checks.test__check_relativisitc_valid": {
  "data": {
   "lineno": 1235,
   "symbols_in_volume": [
    "plasmapy.utils.decorators.checks._check_relativistic",
    "plasmapy.utils.decorators.tests.test_checks.non_relativistic_speed_examples",
    "plasmapy.utils.decorators.tests.test_checks.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.test__check_relativistic_errors": {
  "data": {
   "lineno": 1240,
   "symbols_in_volume": [
    "plasmapy.utils.decorators.checks._check_relativistic",
    "plasmapy.utils.decorators.tests.test_checks.pytest",
    "plasmapy.utils.decorators.tests.test_checks.relativistic_error_examples"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.test__check_relativistic_warnings": {
  "data": {
   "lineno": 1246,
   "symbols_in_volume": [
    "plasmapy.utils.decorators.checks._check_relativistic",
    "plasmapy.utils.decorators.tests.test_checks.pytest",
    "plasmapy.utils.decorators.tests.test_checks.relativistic_warning_examples",
    "plasmapy.utils.exceptions.RelativityWarning"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.test_check_relativistic_decorator": {
  "data": {
   "lineno": 1253,
   "symbols_in_volume": [
    "plasmapy.utils.decorators.tests.test_checks.non_relativistic_speed_examples",
    "plasmapy.utils.decorators.tests.test_checks.pytest",
    "speed_func"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.test_check_relativistic_decorator.speed_func": {
  "data": {
   "lineno": 1255,
   "symbols_in_volume": [
    "plasmapy.utils.decorators.checks.check_relativistic"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.test_check_relativistic_decorator_errors": {
  "data": {
   "lineno": 1280,
   "symbols_in_volume": [
    "plasmapy.utils.decorators.tests.test_checks.pytest",
    "plasmapy.utils.decorators.tests.test_checks.relativistic_error_examples",
    "speed_func"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.test_check_relativistic_decorator_errors.speed_func": {
  "data": {
   "lineno": 1282,
   "symbols_in_volume": [
    "plasmapy.utils.decorators.checks.check_relativistic"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.test_check_relativistic_decorator_no_args": {
  "data": {
   "lineno": 1262,
   "symbols_in_volume": [
    "plasmapy.utils.decorators.tests.test_checks.non_relativistic_speed_examples",
    "plasmapy.utils.decorators.tests.test_checks.pytest",
    "speed_func"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.test_check_relativistic_decorator_no_args.speed_func": {
  "data": {
   "lineno": 1264,
   "symbols_in_volume": [
    "plasmapy.utils.decorators.checks.check_relativistic"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.test_check_relativistic_decorator_no_args_parentheses": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "plasmapy.utils.decorators.tests.test_checks.non_relativistic_speed_examples",
    "plasmapy.utils.decorators.tests.test_checks.pytest",
    "speed_func"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.test_check_relativistic_decorator_no_args_parentheses.speed_func": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": [
    "plasmapy.utils.decorators.checks.check_relativistic"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_checks.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_converters": {
  "data": {},
  "type": "module"
 },
 "plasmapy.utils.decorators.tests.test_converters.angular_freq_to_hz": {
  "data": {
   "shadows": "plasmapy.utils.decorators.converter.angular_freq_to_hz"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_converters.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_converters.test_conversion": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "astropy.units.Hz",
    "astropy.units.rad",
    "astropy.units.s",
    "numpy.pi",
    "test_function"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_converters.test_conversion.test_function": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "astropy.units.rad",
    "astropy.units.s",
    "numpy.pi",
    "plasmapy.utils.decorators.converter.angular_freq_to_hz"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_converters.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_helpers": {
  "data": {},
  "type": "module"
 },
 "plasmapy.utils.decorators.tests.test_helpers.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_helpers.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_helpers.test_preserve_signature": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "hasattr",
    "plasmapy.utils.decorators.tests.test_helpers.inspect",
    "preserve_signature",
    "unittest.mock.Mock",
    "wfoo",
    "wfoo.__signature__"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_helpers.test_preserve_signature.foo": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_validators": {
  "data": {},
  "type": "module"
 },
 "plasmapy.utils.decorators.tests.test_validators.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_validators.CheckUnits": {
  "data": {
   "shadows": "plasmapy.utils.decorators.checks.CheckUnits"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_validators.CheckValues": {
  "data": {
   "shadows": "plasmapy.utils.decorators.checks.CheckValues"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_validators.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_validators.ImplicitUnitConversionWarning": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.ImplicitUnitConversionWarning"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_validators.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_validators.TestValidateQuantities": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "plasmapy.utils.decorators.checks.CheckUnits._CheckUnits__check_defaults",
    "plasmapy.utils.decorators.checks.CheckValues._CheckValues__check_defaults"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.decorators.tests.test_validators.TestValidateQuantities.foo": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_validators.TestValidateQuantities.foo_anno": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "astropy.units.cm",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_validators.TestValidateQuantities.test_decorator_func_def": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "astropy.units.cm",
    "plasmapy.utils.decorators.tests.test_validators.inspect",
    "plasmapy.utils.decorators.validators.ValidateQuantities",
    "plasmapy.utils.decorators.validators.ValidateQuantities.__module__",
    "plasmapy.utils.decorators.validators.ValidateQuantities.__qualname__",
    "plasmapy.utils.decorators.validators.validate_quantities",
    "range",
    "sorted",
    "unittest.mock.Mock",
    "unittest.mock.patch",
    "wfoo"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_validators.TestValidateQuantities.test_inheritance": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "issubclass",
    "plasmapy.utils.decorators.checks.CheckUnits",
    "plasmapy.utils.decorators.checks.CheckValues",
    "plasmapy.utils.decorators.validators.ValidateQuantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_validators.TestValidateQuantities.test_vq_called_as_decorator": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "Foo",
    "TypeError",
    "ValueError",
    "astropy.units.N",
    "astropy.units.N.to_string",
    "astropy.units.UnitTypeError",
    "astropy.units.cm",
    "astropy.units.cm.to",
    "astropy.units.g",
    "astropy.units.kg",
    "astropy.units.kg.to",
    "astropy.units.m",
    "astropy.units.m.to",
    "astropy.units.s",
    "astropy.units.s.to",
    "astropy.units.um",
    "len",
    "plasmapy.utils.decorators.tests.test_validators.pytest",
    "plasmapy.utils.decorators.validators.ValidateQuantities",
    "unittest.mock.patch.object",
    "wfoo"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_validators.TestValidateQuantities.test_vq_called_as_decorator.Foo": {
  "data": {
   "lineno": 460
  },
  "type": "class"
 },
 "plasmapy.utils.decorators.tests.test_validators.TestValidateQuantities.test_vq_called_as_decorator.Foo.__init__": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "astropy.units.cm",
    "plasmapy.utils.decorators.validators.ValidateQuantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_validators.TestValidateQuantities.test_vq_called_as_decorator.Foo.bar": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "astropy.units.cm",
    "astropy.units.m",
    "plasmapy.utils.decorators.validators.ValidateQuantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_validators.TestValidateQuantities.test_vq_method__get_validations": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.cm",
    "hasattr",
    "plasmapy.utils.decorators.checks.CheckUnits",
    "plasmapy.utils.decorators.checks.CheckValues",
    "plasmapy.utils.decorators.tests.test_validators.inspect",
    "plasmapy.utils.decorators.tests.test_validators.pytest",
    "plasmapy.utils.decorators.validators.ValidateQuantities",
    "sorted",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_validators.TestValidateQuantities.test_vq_method__validate_quantity": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.units.K",
    "astropy.units.K.to",
    "astropy.units.UnitsWarning",
    "astropy.units.cm",
    "astropy.units.cm.to",
    "astropy.units.eV",
    "astropy.units.km",
    "astropy.units.temperature_energy",
    "enumerate",
    "hasattr",
    "plasmapy.utils.decorators.checks.CheckUnits",
    "plasmapy.utils.decorators.checks.CheckValues",
    "plasmapy.utils.decorators.tests.test_validators.pytest",
    "plasmapy.utils.decorators.tests.test_validators.warnings",
    "plasmapy.utils.decorators.validators.ValidateQuantities",
    "plasmapy.utils.exceptions.ImplicitUnitConversionWarning",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_validators.TestValidateQuantities.test_vq_preserves_signature": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "hasattr",
    "plasmapy.utils.decorators.tests.test_validators.inspect",
    "plasmapy.utils.decorators.validators.ValidateQuantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.tests.test_validators.ValidateQuantities": {
  "data": {
   "shadows": "plasmapy.utils.decorators.validators.ValidateQuantities"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_validators.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_validators.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_validators.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_validators.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_validators.validate_quantities": {
  "data": {
   "shadows": "plasmapy.utils.decorators.validators.validate_quantities"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.tests.test_validators.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.validate_quantities": {
  "data": {
   "shadows": "plasmapy.utils.decorators.validators.validate_quantities"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.validators": {
  "data": {},
  "type": "module"
 },
 "plasmapy.utils.decorators.validators.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.validators.CheckUnits": {
  "data": {
   "shadows": "plasmapy.utils.decorators.checks.CheckUnits"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.validators.CheckValues": {
  "data": {
   "shadows": "plasmapy.utils.decorators.checks.CheckValues"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.validators.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.validators.ImplicitUnitConversionWarning": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.ImplicitUnitConversionWarning"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.validators.ValidateQuantities": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "plasmapy.utils.decorators.checks.CheckUnits",
    "plasmapy.utils.decorators.checks.CheckValues"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.decorators.validators.ValidateQuantities.__call__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "plasmapy.utils.decorators.validators.inspect"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.validators.ValidateQuantities.__call__.wrapper": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "f",
    "plasmapy.utils.decorators.helpers.preserve_signature",
    "plasmapy.utils.decorators.validators.functools"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.validators.ValidateQuantities.__init__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "TypeError",
    "str",
    "super",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.validators.ValidateQuantities._get_validations": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "plasmapy.utils.decorators.validators.inspect",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.validators.ValidateQuantities._validate_quantity": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.units.UnitsWarning",
    "enumerate",
    "hasattr",
    "len",
    "plasmapy.utils.decorators.validators.warnings",
    "plasmapy.utils.exceptions.ImplicitUnitConversionWarning",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.validators.ValidateQuantities.validations": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.validators.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "plasmapy.utils.decorators.validators.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.validators.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.validators.preserve_signature": {
  "data": {
   "shadows": "plasmapy.utils.decorators.helpers.preserve_signature"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.validators.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.utils.decorators.validators.validate_quantities": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "plasmapy.utils.decorators.validators.ValidateQuantities"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.decorators.validators.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "plasmapy.utils.error_messages": {
  "data": {
   "symbols_in_volume": [
    "plasmapy.utils.error_messages._blue",
    "plasmapy.utils.error_messages._bold",
    "plasmapy.utils.error_messages._cyan",
    "plasmapy.utils.error_messages._magenta",
    "plasmapy.utils.error_messages._red",
    "plasmapy.utils.error_messages.colorama"
   ]
  },
  "type": "module"
 },
 "plasmapy.utils.error_messages.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "plasmapy.utils.error_messages.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "plasmapy.utils.error_messages.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "plasmapy.utils.error_messages.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "plasmapy.utils.error_messages._blue": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "plasmapy.utils.error_messages._bold": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "plasmapy.utils.error_messages._cyan": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "plasmapy.utils.error_messages._exc_str": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "Exception",
    "plasmapy.utils.error_messages._exception_color",
    "plasmapy.utils.error_messages._message_color",
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.error_messages._exception_color": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "plasmapy.utils.error_messages._format_arg": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "astropy.units.quantity.Quantity",
    "hasattr",
    "isinstance",
    "plasmapy.utils.error_messages._format_quantity",
    "repr"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.error_messages._format_kw": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.error_messages._format_quantity": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.error_messages._func_color": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "plasmapy.utils.error_messages._magenta": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "plasmapy.utils.error_messages._message_color": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "plasmapy.utils.error_messages._red": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "plasmapy.utils.error_messages._represent_result": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "hasattr",
    "plasmapy.utils.error_messages._message_color",
    "plasmapy.utils.error_messages._result_color",
    "repr",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.error_messages._result_color": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "plasmapy.utils.error_messages._type_color": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "plasmapy.utils.error_messages.call_string": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "isinstance",
    "plasmapy.utils.error_messages._format_arg",
    "plasmapy.utils.error_messages._format_kw",
    "plasmapy.utils.error_messages._message_color",
    "str",
    "tuple",
    "typing.Any",
    "typing.Callable",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.error_messages.colorama": {
  "data": {
   "shadows": "colorama"
  },
  "type": "import"
 },
 "plasmapy.utils.error_messages.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.utils.exceptions": {
  "data": {},
  "type": "module"
 },
 "plasmapy.utils.exceptions.CouplingWarning": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "plasmapy.utils.exceptions.PhysicsWarning"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.exceptions.ImplicitUnitConversionWarning": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "astropy.units.UnitsWarning",
    "plasmapy.utils.exceptions.PlasmaPyWarning"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.exceptions.PhysicsError": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "plasmapy.utils.exceptions.PlasmaPyError"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.exceptions.PhysicsWarning": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "plasmapy.utils.exceptions.PlasmaPyWarning"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.exceptions.PlasmaPyError": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.exceptions.PlasmaPyWarning": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.exceptions.RelativityError": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "plasmapy.utils.exceptions.PhysicsError"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.exceptions.RelativityWarning": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "plasmapy.utils.exceptions.PhysicsWarning"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.exceptions.UnitsWarning": {
  "data": {
   "shadows": "astropy.units.UnitsWarning"
  },
  "type": "import"
 },
 "plasmapy.utils.exceptions.__all__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "plasmapy.utils.pytest_helpers": {
  "data": {},
  "type": "module"
 },
 "plasmapy.utils.pytest_helpers.assert_can_handle_nparray": {
  "data": {
   "shadows": "plasmapy.utils.pytest_helpers.pytest_helpers.assert_can_handle_nparray"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.exceptions": {
  "data": {},
  "type": "module"
 },
 "plasmapy.utils.pytest_helpers.exceptions.InconsistentTypeError": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "plasmapy.utils.pytest_helpers.exceptions.RunTestError"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.pytest_helpers.exceptions.IncorrectResultError": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "plasmapy.utils.pytest_helpers.exceptions.RunTestError"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.pytest_helpers.exceptions.InvalidTestError": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.pytest_helpers.exceptions.MissingExceptionError": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "plasmapy.utils.pytest_helpers.exceptions.RunTestError"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.pytest_helpers.exceptions.MissingWarningError": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "plasmapy.utils.pytest_helpers.exceptions.RunTestError"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.pytest_helpers.exceptions.RunTestError": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.pytest_helpers.exceptions.UnexpectedExceptionError": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "plasmapy.utils.pytest_helpers.exceptions.RunTestError"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.pytest_helpers.exceptions.UnexpectedResultError": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "plasmapy.utils.pytest_helpers.exceptions.RunTestError"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.pytest_helpers.exceptions.__all__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers": {
  "data": {
   "symbols_in_volume": [
    "plasmapy.utils.pytest_helpers.pytest_helpers._blue",
    "plasmapy.utils.pytest_helpers.pytest_helpers._bold",
    "plasmapy.utils.pytest_helpers.pytest_helpers._cyan",
    "plasmapy.utils.pytest_helpers.pytest_helpers._magenta",
    "plasmapy.utils.pytest_helpers.pytest_helpers._red",
    "plasmapy.utils.pytest_helpers.pytest_helpers.colorama"
   ]
  },
  "type": "module"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.InconsistentTypeError": {
  "data": {
   "shadows": "plasmapy.utils.pytest_helpers.exceptions.InconsistentTypeError"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.InvalidTestError": {
  "data": {
   "shadows": "plasmapy.utils.pytest_helpers.exceptions.InvalidTestError"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.MissingExceptionError": {
  "data": {
   "shadows": "plasmapy.utils.pytest_helpers.exceptions.MissingExceptionError"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.MissingWarningError": {
  "data": {
   "shadows": "plasmapy.utils.pytest_helpers.exceptions.MissingWarningError"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.PlasmaPyWarning": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.PlasmaPyWarning"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.UnexpectedExceptionError": {
  "data": {
   "shadows": "plasmapy.utils.pytest_helpers.exceptions.UnexpectedExceptionError"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.UnexpectedResultError": {
  "data": {
   "shadows": "plasmapy.utils.pytest_helpers.exceptions.UnexpectedResultError"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.__all__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers._blue": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers._bold": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers._cyan": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers._exc_str": {
  "data": {
   "shadows": "plasmapy.utils.error_messages._exc_str"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers._exception_color": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers._func_color": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers._magenta": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers._message_color": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers._process_input": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "decorator",
    "typing.Callable",
    "wrapped_function"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers._process_input.decorator": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "plasmapy.utils.pytest_helpers.pytest_helpers.inspect",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers._process_input.decorator.wrapper": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "len",
    "list",
    "plasmapy.utils.pytest_helpers.pytest_helpers.functools",
    "tuple",
    "wrapped_function"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers._red": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers._represent_result": {
  "data": {
   "shadows": "plasmapy.utils.error_messages._represent_result"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers._result_color": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers._type_color": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.assert_can_handle_nparray": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "AttributeError",
    "_prepare_input",
    "astropy.tests.helper.assert_quantity_allclose",
    "dict",
    "enumerate",
    "function_to_test",
    "numpy.isscalar",
    "plasmapy.utils.exceptions.PlasmaPyWarning",
    "plasmapy.utils.pytest_helpers.pytest_helpers.inspect",
    "plasmapy.utils.pytest_helpers.pytest_helpers.warnings"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.assert_can_handle_nparray._prepare_input": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.G",
    "astropy.units.eV",
    "astropy.units.m",
    "astropy.units.s",
    "numpy.arange",
    "numpy.nan",
    "numpy.ones",
    "numpy.reshape",
    "plasmapy.utils.pytest_helpers.pytest_helpers.inspect"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.astrohelper": {
  "data": {
   "shadows": "astropy.tests.helper"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.call_string": {
  "data": {
   "shadows": "plasmapy.utils.error_messages.call_string"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.colorama": {
  "data": {
   "shadows": "colorama"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.const": {
  "data": {
   "shadows": "astropy.constants"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.run_test": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "Warning",
    "astropy.constants.Constant",
    "astropy.constants.EMConstant",
    "astropy.units.Quantity",
    "astropy.units.UnitBase",
    "astropy.units.UnitsError",
    "callable",
    "float",
    "func",
    "isinstance",
    "issubclass",
    "len",
    "numpy.allclose",
    "plasmapy.utils.error_messages._exc_str",
    "plasmapy.utils.error_messages._represent_result",
    "plasmapy.utils.error_messages.call_string",
    "plasmapy.utils.pytest_helpers.exceptions.InconsistentTypeError",
    "plasmapy.utils.pytest_helpers.exceptions.InvalidTestError",
    "plasmapy.utils.pytest_helpers.exceptions.MissingExceptionError",
    "plasmapy.utils.pytest_helpers.exceptions.MissingWarningError",
    "plasmapy.utils.pytest_helpers.exceptions.UnexpectedExceptionError",
    "plasmapy.utils.pytest_helpers.exceptions.UnexpectedResultError",
    "plasmapy.utils.pytest_helpers.pytest_helpers._func_color",
    "plasmapy.utils.pytest_helpers.pytest_helpers._message_color",
    "plasmapy.utils.pytest_helpers.pytest_helpers._process_input",
    "plasmapy.utils.pytest_helpers.pytest_helpers._type_color",
    "plasmapy.utils.pytest_helpers.pytest_helpers.collections",
    "plasmapy.utils.pytest_helpers.pytest_helpers.inspect",
    "plasmapy.utils.pytest_helpers.pytest_helpers.pytest",
    "tuple",
    "type",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.run_test_equivalent_calls": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "Exception",
    "all",
    "bool",
    "callable",
    "dict",
    "f",
    "func",
    "isinstance",
    "len",
    "list",
    "plasmapy.utils.error_messages.call_string",
    "plasmapy.utils.pytest_helpers.exceptions.InvalidTestError",
    "plasmapy.utils.pytest_helpers.exceptions.UnexpectedExceptionError",
    "plasmapy.utils.pytest_helpers.exceptions.UnexpectedResultError",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.pytest_helpers.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.run_test": {
  "data": {
   "shadows": "plasmapy.utils.pytest_helpers.pytest_helpers.run_test"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.run_test_equivalent_calls": {
  "data": {
   "shadows": "plasmapy.utils.pytest_helpers.pytest_helpers.run_test_equivalent_calls"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.tests": {
  "data": {},
  "type": "module"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "IOError",
    "TypeError",
    "UserWarning",
    "ValueError",
    "astropy.units.C",
    "astropy.units.K",
    "astropy.units.Mpc",
    "astropy.units.N",
    "astropy.units.UnitsError",
    "astropy.units.barn",
    "astropy.units.g",
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.pc",
    "astropy.units.s",
    "plasmapy.particles.Particle",
    "plasmapy.utils.exceptions.PlasmaPyError",
    "plasmapy.utils.exceptions.PlasmaPyWarning",
    "plasmapy.utils.pytest_helpers.InconsistentTypeError",
    "plasmapy.utils.pytest_helpers.MissingExceptionError",
    "plasmapy.utils.pytest_helpers.MissingWarningError",
    "plasmapy.utils.pytest_helpers.UnexpectedExceptionError",
    "plasmapy.utils.pytest_helpers.UnexpectedResultError",
    "plasmapy.utils.pytest_helpers.run_test",
    "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.adams_number",
    "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.func",
    "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.generic_function",
    "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.issue_warning",
    "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.raise_exception",
    "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.return_arg",
    "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.return_quantity",
    "type"
   ]
  },
  "type": "module"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.InconsistentTypeError": {
  "data": {
   "shadows": "plasmapy.utils.pytest_helpers.InconsistentTypeError"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.MissingExceptionError": {
  "data": {
   "shadows": "plasmapy.utils.pytest_helpers.MissingExceptionError"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.MissingWarningError": {
  "data": {
   "shadows": "plasmapy.utils.pytest_helpers.MissingWarningError"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.Particle": {
  "data": {
   "shadows": "plasmapy.particles.Particle"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.PlasmaPyError": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.PlasmaPyError"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.PlasmaPyWarning": {
  "data": {
   "shadows": "plasmapy.utils.exceptions.PlasmaPyWarning"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.UnexpectedExceptionError": {
  "data": {
   "shadows": "plasmapy.utils.pytest_helpers.UnexpectedExceptionError"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.UnexpectedResultError": {
  "data": {
   "shadows": "plasmapy.utils.pytest_helpers.UnexpectedResultError"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.adams_number": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.call_string": {
  "data": {
   "shadows": "plasmapy.utils.call_string"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.call_string_table": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.f_args_kwargs_expected_whaterror": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.func": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.issue_warning",
    "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.raise_exception",
    "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.warnings"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.generic_function": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.inputs_table": {
  "data": {
   "lineno": 212
  },
  "type": "constant"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.issue_warning": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "int",
    "plasmapy.utils.exceptions.PlasmaPyWarning",
    "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.warnings"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.raise_exception": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "plasmapy.utils.exceptions.PlasmaPyError"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.return_arg": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "UserWarning",
    "bool",
    "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.warnings",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.return_quantity": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "UserWarning",
    "astropy.units.m",
    "astropy.units.s",
    "bool",
    "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.warnings"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.run_test": {
  "data": {
   "shadows": "plasmapy.utils.pytest_helpers.run_test"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.run_test_equivalent_calls": {
  "data": {
   "shadows": "plasmapy.utils.pytest_helpers.run_test_equivalent_calls"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.run_test_equivalent_calls_table": {
  "data": {
   "lineno": 229
  },
  "type": "constant"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.test_call_string": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "plasmapy.utils.call_string",
    "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.call_string_table",
    "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.test_func": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "plasmapy.utils.pytest_helpers.run_test",
    "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.inputs_table",
    "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.test_run_test": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "Exception",
    "plasmapy.utils.call_string",
    "plasmapy.utils.pytest_helpers.run_test",
    "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.f_args_kwargs_expected_whaterror",
    "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.test_run_test_atol": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "plasmapy.utils.pytest_helpers.run_test",
    "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.return_arg"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.test_run_test_atol_failure": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "plasmapy.utils.pytest_helpers.UnexpectedResultError",
    "plasmapy.utils.pytest_helpers.run_test",
    "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.pytest",
    "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.return_arg"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.test_run_test_equivalent_calls": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "Exception",
    "issubclass",
    "plasmapy.utils.pytest_helpers.run_test_equivalent_calls",
    "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.pytest",
    "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.run_test_equivalent_calls_table"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.test_run_test_equivalent_calls_types": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "plasmapy.utils.pytest_helpers.UnexpectedResultError",
    "plasmapy.utils.pytest_helpers.run_test_equivalent_calls",
    "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.pytest",
    "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.return_arg"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.test_run_test_rtol": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "plasmapy.utils.pytest_helpers.run_test",
    "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.return_arg"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.test_run_test_rtol_failure": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "plasmapy.utils.pytest_helpers.UnexpectedResultError",
    "plasmapy.utils.pytest_helpers.run_test",
    "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.pytest",
    "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.return_arg"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "plasmapy.utils.roman": {
  "data": {},
  "type": "module"
 },
 "plasmapy.utils.roman.roman": {
  "data": {
   "symbols_in_volume": [
    "plasmapy.utils.roman.roman.re"
   ]
  },
  "type": "module"
 },
 "plasmapy.utils.roman.roman.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "plasmapy.utils.roman.roman.InvalidRomanNumeralError": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "plasmapy.utils.roman.roman.RomanError"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.roman.roman.OutOfRangeError": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "plasmapy.utils.roman.roman.RomanError"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.roman.roman.RomanError": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.roman.roman.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "plasmapy.utils.roman.roman.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "plasmapy.utils.roman.roman._romanNumeralMap": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "plasmapy.utils.roman.roman._romanNumeralPattern": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "plasmapy.utils.roman.roman.from_roman": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len",
    "numbers.Integral",
    "plasmapy.utils.roman.roman.InvalidRomanNumeralError",
    "plasmapy.utils.roman.roman._romanNumeralMap",
    "plasmapy.utils.roman.roman._romanNumeralPattern",
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.roman.roman.is_roman_numeral": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "isinstance",
    "plasmapy.utils.roman.roman._romanNumeralPattern",
    "str"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.roman.roman.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.utils.roman.roman.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "plasmapy.utils.roman.roman.to_roman": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numbers.Integral",
    "numpy.integer",
    "plasmapy.utils.roman.roman.OutOfRangeError",
    "plasmapy.utils.roman.roman._romanNumeralMap",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.roman.tests": {
  "data": {},
  "type": "module"
 },
 "plasmapy.utils.roman.tests.test_roman": {
  "data": {
   "symbols_in_volume": [
    "TypeError",
    "numpy.int",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "plasmapy.utils.roman.InvalidRomanNumeralError",
    "plasmapy.utils.roman.OutOfRangeError"
   ]
  },
  "type": "module"
 },
 "plasmapy.utils.roman.tests.test_roman.fromRoman_exceptions_table": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "plasmapy.utils.roman.tests.test_roman.ints_and_roman_numerals": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "plasmapy.utils.roman.tests.test_roman.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "plasmapy.utils.roman.tests.test_roman.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.utils.roman.tests.test_roman.roman": {
  "data": {
   "shadows": "plasmapy.utils.roman"
  },
  "type": "import"
 },
 "plasmapy.utils.roman.tests.test_roman.run_test": {
  "data": {
   "shadows": "plasmapy.utils.pytest_helpers.run_test"
  },
  "type": "import"
 },
 "plasmapy.utils.roman.tests.test_roman.test_from_roman": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "int",
    "plasmapy.utils.pytest_helpers.run_test",
    "plasmapy.utils.roman.from_roman",
    "plasmapy.utils.roman.tests.test_roman.ints_and_roman_numerals",
    "plasmapy.utils.roman.tests.test_roman.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.roman.tests.test_roman.test_from_roman_exceptions": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "input",
    "plasmapy.utils.pytest_helpers.run_test",
    "plasmapy.utils.roman.from_roman",
    "plasmapy.utils.roman.tests.test_roman.fromRoman_exceptions_table",
    "plasmapy.utils.roman.tests.test_roman.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.roman.tests.test_roman.test_is_roman_numeral": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "input",
    "plasmapy.utils.pytest_helpers.run_test",
    "plasmapy.utils.roman.is_roman_numeral",
    "plasmapy.utils.roman.tests.test_roman.pytest",
    "plasmapy.utils.roman.tests.test_roman.test_is_roman_numeral_table"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.roman.tests.test_roman.test_is_roman_numeral_table": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "plasmapy.utils.roman.tests.test_roman.test_to_roman": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "plasmapy.utils.pytest_helpers.run_test",
    "plasmapy.utils.roman.tests.test_roman.ints_and_roman_numerals",
    "plasmapy.utils.roman.tests.test_roman.pytest",
    "plasmapy.utils.roman.to_roman"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.roman.tests.test_roman.test_to_roman_exceptions": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "input",
    "plasmapy.utils.pytest_helpers.run_test",
    "plasmapy.utils.roman.tests.test_roman.pytest",
    "plasmapy.utils.roman.tests.test_roman.toRoman_exceptions_table",
    "plasmapy.utils.roman.to_roman"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.roman.tests.test_roman.toRoman_exceptions_table": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "plasmapy.utils.tests": {
  "data": {},
  "type": "module"
 },
 "plasmapy.utils.tests.test_datatype_factory_base": {
  "data": {},
  "type": "module"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.BaseWidget": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.BaseWidget.__init__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.BasicRegistrationFactory": {
  "data": {
   "shadows": "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory"
  },
  "type": "import"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.DefaultWidget": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "plasmapy.utils.tests.test_datatype_factory_base.BaseWidget"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.DifferentValidationWidget": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "plasmapy.utils.tests.test_datatype_factory_base.BaseWidget"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.DifferentValidationWidget.different_validation_function": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.DuplicateStandardWidget": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "plasmapy.utils.tests.test_datatype_factory_base.BaseWidget"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.DuplicateStandardWidget._factory_validation_function": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.ExternallyValidatedWidget": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "plasmapy.utils.tests.test_datatype_factory_base.BaseWidget"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.FancyWidget": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "plasmapy.utils.tests.test_datatype_factory_base.BaseWidget"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.FancyWidget._factory_validation_function": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.MissingClassMethodDifferentValidationWidget": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "plasmapy.utils.tests.test_datatype_factory_base.BaseWidget"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.MissingClassMethodDifferentValidationWidget.different_validation_function": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.MissingClassMethodWidget": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "plasmapy.utils.tests.test_datatype_factory_base.BaseWidget"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.MissingClassMethodWidget._factory_validation_function": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.MultipleMatchError": {
  "data": {
   "shadows": "plasmapy.utils.datatype_factory_base.MultipleMatchError"
  },
  "type": "import"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.NoMatchError": {
  "data": {
   "shadows": "plasmapy.utils.datatype_factory_base.NoMatchError"
  },
  "type": "import"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.StandardWidget": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "plasmapy.utils.tests.test_datatype_factory_base.BaseWidget"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.StandardWidget._factory_validation_function": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.TestBasicRegistrationFactory": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.TestBasicRegistrationFactory.test_default_factory": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "DefaultFactory",
    "DefaultFactory.register",
    "DefaultFactory.unregister",
    "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory",
    "plasmapy.utils.datatype_factory_base.ValidationFunctionError",
    "plasmapy.utils.tests.test_datatype_factory_base.DefaultWidget",
    "plasmapy.utils.tests.test_datatype_factory_base.ExternallyValidatedWidget",
    "plasmapy.utils.tests.test_datatype_factory_base.FancyWidget",
    "plasmapy.utils.tests.test_datatype_factory_base.MissingClassMethodWidget",
    "plasmapy.utils.tests.test_datatype_factory_base.StandardWidget",
    "plasmapy.utils.tests.test_datatype_factory_base.UnvalidatedWidget",
    "plasmapy.utils.tests.test_datatype_factory_base.external_validation_function",
    "plasmapy.utils.tests.test_datatype_factory_base.pytest",
    "type"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.TestBasicRegistrationFactory.test_extra_validation_factory": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "ExtraValidationFactory",
    "ExtraValidationFactory.register",
    "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory",
    "plasmapy.utils.datatype_factory_base.ValidationFunctionError",
    "plasmapy.utils.tests.test_datatype_factory_base.DifferentValidationWidget",
    "plasmapy.utils.tests.test_datatype_factory_base.MissingClassMethodDifferentValidationWidget",
    "plasmapy.utils.tests.test_datatype_factory_base.pytest",
    "type"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.TestBasicRegistrationFactory.test_multiple_match_factory": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "MultipleMatchFactory",
    "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory",
    "plasmapy.utils.datatype_factory_base.MultipleMatchError",
    "plasmapy.utils.tests.test_datatype_factory_base.DuplicateStandardWidget",
    "plasmapy.utils.tests.test_datatype_factory_base.StandardWidget",
    "plasmapy.utils.tests.test_datatype_factory_base.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.TestBasicRegistrationFactory.test_no_default_factory": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "NoDefaultFactory",
    "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory",
    "plasmapy.utils.datatype_factory_base.NoMatchError",
    "plasmapy.utils.tests.test_datatype_factory_base.FancyWidget",
    "plasmapy.utils.tests.test_datatype_factory_base.StandardWidget",
    "plasmapy.utils.tests.test_datatype_factory_base.pytest",
    "type"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.TestBasicRegistrationFactory.test_validation_fun_not_callable": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "AttributeError",
    "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory",
    "plasmapy.utils.tests.test_datatype_factory_base.StandardWidget",
    "plasmapy.utils.tests.test_datatype_factory_base.pytest"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.TestBasicRegistrationFactory.test_with_external_registry": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "FactoryWithExternalRegistry",
    "len",
    "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory",
    "plasmapy.utils.tests.test_datatype_factory_base.StandardWidget",
    "type"
   ]
  },
  "type": "function"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.UnvalidatedWidget": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "plasmapy.utils.tests.test_datatype_factory_base.BaseWidget"
   ]
  },
  "type": "class"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.ValidationFunctionError": {
  "data": {
   "shadows": "plasmapy.utils.datatype_factory_base.ValidationFunctionError"
  },
  "type": "import"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.external_validation_function": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "plasmapy.utils.tests.test_datatype_factory_base.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "plasmapy.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "plasmapy.warn_add": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "plasmapy.webbrowser": {
  "data": {
   "shadows": "webbrowser"
  },
  "type": "import"
 }
}