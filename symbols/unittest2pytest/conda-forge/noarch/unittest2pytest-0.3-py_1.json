{
 "unittest2pytest": {
  "data": {},
  "type": "module"
 },
 "unittest2pytest.__author__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "unittest2pytest.__copyright__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "unittest2pytest.__licence__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "unittest2pytest.__main__": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "unittest2pytest.__main__.main"
   ]
  },
  "type": "module"
 },
 "unittest2pytest.__main__.__author__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "unittest2pytest.__main__.__copyright__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "unittest2pytest.__main__.__licence__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "unittest2pytest.__main__.lib2to3.main": {
  "data": {
   "shadows": "lib2to3.main"
  },
  "type": "import"
 },
 "unittest2pytest.__main__.main": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "SystemExit"
   ]
  },
  "type": "function"
 },
 "unittest2pytest.__title__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "unittest2pytest.__version__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "unittest2pytest.fixes": {
  "data": {},
  "type": "module"
 },
 "unittest2pytest.fixes.fix_remove_class": {
  "data": {},
  "type": "module"
 },
 "unittest2pytest.fixes.fix_remove_class.BaseFix": {
  "data": {
   "shadows": "lib2to3.fixer_base.BaseFix"
  },
  "type": "import"
 },
 "unittest2pytest.fixes.fix_remove_class.FixRemoveClass": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "lib2to3.fixer_base.BaseFix"
   ]
  },
  "type": "class"
 },
 "unittest2pytest.fixes.fix_remove_class.FixRemoveClass.dedent": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "len",
    "lib2to3.fixer_util.token.DEDENT",
    "lib2to3.fixer_util.token.INDENT"
   ]
  },
  "type": "function"
 },
 "unittest2pytest.fixes.fix_remove_class.FixRemoveClass.transform": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "len",
    "lib2to3.fixer_util.find_indentation",
    "lib2to3.fixer_util.token.NEWLINE"
   ]
  },
  "type": "function"
 },
 "unittest2pytest.fixes.fix_remove_class.__author__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "unittest2pytest.fixes.fix_remove_class.__copyright__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "unittest2pytest.fixes.fix_remove_class.__licence__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "unittest2pytest.fixes.fix_remove_class.find_indentation": {
  "data": {
   "shadows": "lib2to3.fixer_util.find_indentation"
  },
  "type": "import"
 },
 "unittest2pytest.fixes.fix_remove_class.token": {
  "data": {
   "shadows": "lib2to3.fixer_util.token"
  },
  "type": "import"
 },
 "unittest2pytest.fixes.fix_self_assert": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "hasattr",
    "list",
    "unittest2pytest.fixes.fix_self_assert.AlmostOp",
    "unittest2pytest.fixes.fix_self_assert.CompOp",
    "unittest2pytest.fixes.fix_self_assert.DualOp",
    "unittest2pytest.fixes.fix_self_assert.RaisesOp",
    "unittest2pytest.fixes.fix_self_assert.RaisesRegexOp",
    "unittest2pytest.fixes.fix_self_assert.SequenceEqual",
    "unittest2pytest.fixes.fix_self_assert.UnaryOp",
    "unittest2pytest.fixes.fix_self_assert._method_aliases",
    "unittest2pytest.fixes.fix_self_assert._method_map",
    "unittest2pytest.fixes.fix_self_assert.re",
    "unittest2pytest.fixes.fix_self_assert.unittest"
   ]
  },
  "type": "module"
 },
 "unittest2pytest.fixes.fix_self_assert.AlmostOp": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "lib2to3.fixer_util.Call",
    "lib2to3.fixer_util.Comma",
    "lib2to3.fixer_util.Name",
    "lib2to3.fixer_util.Node",
    "lib2to3.fixer_util.Number",
    "lib2to3.fixer_util.syms.factor",
    "unittest2pytest.fixes.fix_self_assert.CompOp"
   ]
  },
  "type": "function"
 },
 "unittest2pytest.fixes.fix_self_assert.ArgList": {
  "data": {
   "shadows": "lib2to3.fixer_util.ArgList"
  },
  "type": "import"
 },
 "unittest2pytest.fixes.fix_self_assert.BaseFix": {
  "data": {
   "shadows": "lib2to3.fixer_base.BaseFix"
  },
  "type": "import"
 },
 "unittest2pytest.fixes.fix_self_assert.Call": {
  "data": {
   "shadows": "lib2to3.fixer_util.Call"
  },
  "type": "import"
 },
 "unittest2pytest.fixes.fix_self_assert.Comma": {
  "data": {
   "shadows": "lib2to3.fixer_util.Comma"
  },
  "type": "import"
 },
 "unittest2pytest.fixes.fix_self_assert.CompOp": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "lib2to3.fixer_util.Name",
    "lib2to3.fixer_util.Node",
    "lib2to3.fixer_util.syms.comparison",
    "parenthesize_expression"
   ]
  },
  "type": "function"
 },
 "unittest2pytest.fixes.fix_self_assert.DualOp": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "lib2to3.fixer_util.Node",
    "lib2to3.fixer_util.syms.test",
    "unittest2pytest.fixes.fix_self_assert.fill_template"
   ]
  },
  "type": "function"
 },
 "unittest2pytest.fixes.fix_self_assert.FixSelfAssert": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "lib2to3.fixer_base.BaseFix",
    "map",
    "repr",
    "set",
    "unittest2pytest.fixes.fix_self_assert._method_aliases",
    "unittest2pytest.fixes.fix_self_assert._method_map"
   ]
  },
  "type": "class"
 },
 "unittest2pytest.fixes.fix_self_assert.FixSelfAssert.transform": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "AttributeError",
    "RuntimeError",
    "fix_line_wrapping",
    "getattr",
    "lib2to3.fixer_util.Name",
    "lib2to3.fixer_util.Node",
    "lib2to3.fixer_util.find_indentation",
    "lib2to3.fixer_util.syms.arglist",
    "lib2to3.fixer_util.syms.assert_stmt",
    "process_arg",
    "unittest2pytest.fixes.fix_self_assert._method_aliases",
    "unittest2pytest.fixes.fix_self_assert._method_map",
    "unittest2pytest.fixes.fix_self_assert.add_import",
    "unittest2pytest.fixes.fix_self_assert.unittest"
   ]
  },
  "type": "function"
 },
 "unittest2pytest.fixes.fix_self_assert.FixSelfAssert.transform.fix_line_wrapping": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "fix_line_wrapping",
    "lib2to3.fixer_util.token.LBRACE",
    "lib2to3.fixer_util.token.LPAR",
    "lib2to3.fixer_util.token.LSQB"
   ]
  },
  "type": "function"
 },
 "unittest2pytest.fixes.fix_self_assert.FixSelfAssert.transform.process_arg": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "isinstance",
    "lib2to3.fixer_util.Leaf",
    "lib2to3.fixer_util.Node",
    "lib2to3.fixer_util.syms.argument",
    "lib2to3.fixer_util.token.COMMA",
    "lib2to3.fixer_util.token.EQUAL",
    "lib2to3.fixer_util.token.NAME"
   ]
  },
  "type": "function"
 },
 "unittest2pytest.fixes.fix_self_assert.KeywordArg": {
  "data": {
   "shadows": "lib2to3.fixer_util.KeywordArg"
  },
  "type": "import"
 },
 "unittest2pytest.fixes.fix_self_assert.Leaf": {
  "data": {
   "shadows": "lib2to3.fixer_util.Leaf"
  },
  "type": "import"
 },
 "unittest2pytest.fixes.fix_self_assert.Name": {
  "data": {
   "shadows": "lib2to3.fixer_util.Name"
  },
  "type": "import"
 },
 "unittest2pytest.fixes.fix_self_assert.Newline": {
  "data": {
   "shadows": "lib2to3.fixer_util.Newline"
  },
  "type": "import"
 },
 "unittest2pytest.fixes.fix_self_assert.Node": {
  "data": {
   "shadows": "lib2to3.fixer_util.Node"
  },
  "type": "import"
 },
 "unittest2pytest.fixes.fix_self_assert.Number": {
  "data": {
   "shadows": "lib2to3.fixer_util.Number"
  },
  "type": "import"
 },
 "unittest2pytest.fixes.fix_self_assert.RaisesOp": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "lib2to3.fixer_util.Call",
    "lib2to3.fixer_util.Name",
    "lib2to3.fixer_util.Newline",
    "lib2to3.fixer_util.Node",
    "lib2to3.fixer_util.syms.lambdef",
    "lib2to3.fixer_util.syms.with_stmt"
   ]
  },
  "type": "function"
 },
 "unittest2pytest.fixes.fix_self_assert.RaisesRegexOp": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "lib2to3.fixer_util.Name",
    "lib2to3.fixer_util.Newline",
    "lib2to3.fixer_util.Node",
    "lib2to3.fixer_util.syms.arglist",
    "lib2to3.fixer_util.syms.suite",
    "lib2to3.fixer_util.syms.with_stmt",
    "list",
    "reversed",
    "unittest2pytest.fixes.fix_self_assert.RaisesOp"
   ]
  },
  "type": "function"
 },
 "unittest2pytest.fixes.fix_self_assert.SequenceEqual": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "unittest2pytest.fixes.fix_self_assert.CompOp"
   ]
  },
  "type": "function"
 },
 "unittest2pytest.fixes.fix_self_assert.String": {
  "data": {
   "shadows": "lib2to3.fixer_util.String"
  },
  "type": "import"
 },
 "unittest2pytest.fixes.fix_self_assert.TEMPLATE_PATTERN": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "unittest2pytest.fixes.fix_self_assert.UnaryOp": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "lib2to3.fixer_util.Name",
    "lib2to3.fixer_util.Node",
    "lib2to3.fixer_util.syms.test",
    "parenthesize_expression"
   ]
  },
  "type": "function"
 },
 "unittest2pytest.fixes.fix_self_assert.__author__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "unittest2pytest.fixes.fix_self_assert.__copyright__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "unittest2pytest.fixes.fix_self_assert.__licence__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "unittest2pytest.fixes.fix_self_assert._method_aliases": {
  "data": {
   "lineno": 298
  },
  "type": "constant"
 },
 "unittest2pytest.fixes.fix_self_assert._method_map": {
  "data": {
   "lineno": 237
  },
  "type": "constant"
 },
 "unittest2pytest.fixes.fix_self_assert.add_import": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "get_parent_of_type",
    "insert_import",
    "lib2to3.fixer_util.Name",
    "lib2to3.fixer_util.Newline",
    "lib2to3.fixer_util.Node",
    "lib2to3.fixer_util.does_tree_import",
    "lib2to3.fixer_util.syms.file_input",
    "lib2to3.fixer_util.syms.import_name",
    "lib2to3.fixer_util.syms.simple_stmt",
    "lib2to3.fixer_util.syms.suite"
   ]
  },
  "type": "function"
 },
 "unittest2pytest.fixes.fix_self_assert.does_tree_import": {
  "data": {
   "shadows": "lib2to3.fixer_util.does_tree_import"
  },
  "type": "import"
 },
 "unittest2pytest.fixes.fix_self_assert.fill_template": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "lib2to3.fixer_util.Name",
    "ord",
    "unittest2pytest.fixes.fix_self_assert.TEMPLATE_PATTERN"
   ]
  },
  "type": "function"
 },
 "unittest2pytest.fixes.fix_self_assert.find_indentation": {
  "data": {
   "shadows": "lib2to3.fixer_util.find_indentation"
  },
  "type": "import"
 },
 "unittest2pytest.fixes.fix_self_assert.get_import_nodes": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "lib2to3.fixer_util.is_import",
    "lib2to3.fixer_util.syms.simple_stmt"
   ]
  },
  "type": "function"
 },
 "unittest2pytest.fixes.fix_self_assert.get_parent_of_type": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "unittest2pytest.fixes.fix_self_assert.insert_import": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "get_import_nodes"
   ]
  },
  "type": "function"
 },
 "unittest2pytest.fixes.fix_self_assert.is_import": {
  "data": {
   "shadows": "lib2to3.fixer_util.is_import"
  },
  "type": "import"
 },
 "unittest2pytest.fixes.fix_self_assert.parenthesize": {
  "data": {
   "shadows": "lib2to3.fixer_util.parenthesize"
  },
  "type": "import"
 },
 "unittest2pytest.fixes.fix_self_assert.parenthesize_expression": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "lib2to3.fixer_util.parenthesize",
    "lib2to3.fixer_util.syms.comparison",
    "lib2to3.fixer_util.syms.not_test"
   ]
  },
  "type": "function"
 },
 "unittest2pytest.fixes.fix_self_assert.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "unittest2pytest.fixes.fix_self_assert.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "unittest2pytest.fixes.fix_self_assert.syms": {
  "data": {
   "shadows": "lib2to3.fixer_util.syms"
  },
  "type": "import"
 },
 "unittest2pytest.fixes.fix_self_assert.token": {
  "data": {
   "shadows": "lib2to3.fixer_util.token"
  },
  "type": "import"
 },
 "unittest2pytest.fixes.fix_self_assert.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "unittest2pytest.utils": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "unittest2pytest.utils.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "unittest2pytest.utils.Parameter": {
  "data": {
   "shadows": "inspect.Parameter"
  },
  "type": "import"
 },
 "unittest2pytest.utils.SelfMarker": {
  "data": {
   "lineno": 38
  },
  "type": "class"
 },
 "unittest2pytest.utils.__apply_defaults": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "KeyError",
    "collections.OrderedDict",
    "inspect.Parameter.VAR_KEYWORD",
    "inspect.Parameter.VAR_POSITIONAL",
    "inspect.Parameter.empty"
   ]
  },
  "type": "function"
 },
 "unittest2pytest.utils.__author__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "unittest2pytest.utils.__copyright__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "unittest2pytest.utils.__licence__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "unittest2pytest.utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "unittest2pytest.utils.resolve_func_args": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "AttributeError",
    "inspect.Parameter.VAR_KEYWORD",
    "inspect.Parameter.VAR_POSITIONAL",
    "inspect.Parameter.empty",
    "iter",
    "len",
    "list",
    "unittest2pytest.utils.SelfMarker",
    "unittest2pytest.utils.__apply_defaults",
    "unittest2pytest.utils.inspect"
   ]
  },
  "type": "function"
 }
}