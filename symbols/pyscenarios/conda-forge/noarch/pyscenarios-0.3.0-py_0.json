{
 "pyscenarios": {
  "lineno": null,
  "symbols_in_volume": [
   "pkg_resources.get_distribution"
  ],
  "type": "module"
 },
 "pyscenarios.copula": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyscenarios.copula._copula_impl": {
  "lineno": 163,
  "symbols_in_volume": [
   "dask.array.Array",
   "dask.array.core.normalize_chunks",
   "dask.array.from_array",
   "numpy.asarray",
   "numpy.linalg.cholesky",
   "numpy.ndarray",
   "typing.List",
   "typing.Union",
   "typing.cast"
  ],
  "type": "function"
 },
 "pyscenarios.copula.gaussian_copula": {
  "lineno": 18,
  "symbols_in_volume": [
   "dask.array.Array",
   "numpy.ndarray",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "pyscenarios.copula.t_copula": {
  "lineno": 85,
  "symbols_in_volume": [
   "dask.array.Array",
   "numpy.ndarray",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "pyscenarios.duck": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "module"
 },
 "pyscenarios.duck.RandomState": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyscenarios.duck.RandomState.__init__": {
  "lineno": 91,
  "symbols_in_volume": [
   "dask.array.random.RandomState",
   "typing.Optional"
  ],
  "type": "function"
 },
 "pyscenarios.duck.RandomState._apply": {
  "lineno": 98,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "pyscenarios.duck.RandomState._numpy_state": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "pyscenarios.duck.RandomState.standard_normal": {
  "lineno": 114,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "pyscenarios.duck.RandomState.uniform": {
  "lineno": 111,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "pyscenarios.duck._apply_binary": {
  "lineno": 36,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Callable"
  ],
  "type": "function"
 },
 "pyscenarios.duck._apply_binary.wrapper": {
  "lineno": 41,
  "symbols_in_volume": [
   "dask.array.Array",
   "dask.array.blockwise",
   "functools.wraps"
  ],
  "type": "function"
 },
 "pyscenarios.duck._apply_unary": {
  "lineno": 21,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Callable"
  ],
  "type": "function"
 },
 "pyscenarios.duck._apply_unary.wrapper": {
  "lineno": 26,
  "symbols_in_volume": [
   "dask.array.Array",
   "dask.array.blockwise",
   "functools.wraps"
  ],
  "type": "function"
 },
 "pyscenarios.duck._toplevel": {
  "lineno": 61,
  "symbols_in_volume": [
   "dask.array.Array",
   "numpy.ndarray",
   "typing.Callable",
   "typing.Union"
  ],
  "type": "function"
 },
 "pyscenarios.duck._toplevel.wrapper": {
  "lineno": 66,
  "symbols_in_volume": [
   "dask.array",
   "dask.array.Array",
   "numpy"
  ],
  "type": "function"
 },
 "pyscenarios.duck.array": {
  "lineno": 13,
  "symbols_in_volume": [
   "dask.array.Array",
   "numpy.array",
   "numpy.ndarray",
   "typing.Any",
   "typing.Union"
  ],
  "type": "function"
 },
 "pyscenarios.sobol": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyscenarios.sobol._calc_v_kernel": {
  "lineno": 66,
  "symbols_in_volume": [
   "numba.jit",
   "numpy.empty",
   "numpy.ndarray",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "pyscenarios.sobol._load_directions": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "pyscenarios.sobol._sobol_kernel": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pyscenarios.sobol._sobol_kernel_jit": {
  "lineno": 108,
  "symbols_in_volume": [
   "numba.jit",
   "numpy.double",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pyscenarios.sobol.load_v": {
  "lineno": 26,
  "symbols_in_volume": [
   "lzma.open",
   "numpy.ndarray",
   "pkg_resources.resource_stream"
  ],
  "type": "function"
 },
 "pyscenarios.sobol.max_dimensions": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyscenarios.sobol.sobol": {
  "lineno": 139,
  "symbols_in_volume": [
   "dask.array.Array",
   "dask.array.core.normalize_chunks",
   "numpy.ndarray",
   "typing.Tuple",
   "typing.Union",
   "typing.cast"
  ],
  "type": "function"
 },
 "pyscenarios.stats": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyscenarios.stats.tail_dependence": {
  "lineno": 13,
  "symbols_in_volume": [
   "dask.array.Array",
   "numpy.ndarray",
   "numpy.newaxis",
   "typing.Any",
   "typing.Union"
  ],
  "type": "function"
 },
 "pyscenarios.tests": {
  "lineno": null,
  "symbols_in_volume": [
   "os.getenv",
   "pytest.mark.skipif"
  ],
  "type": "module"
 },
 "pyscenarios.tests.test_copula": {
  "lineno": null,
  "symbols_in_volume": [
   "pyscenarios.copula.gaussian_copula",
   "pyscenarios.copula.t_copula",
   "pytest.mark.parametrize"
  ],
  "type": "module"
 },
 "pyscenarios.tests.test_copula.test_bad_params_common": {
  "lineno": 235,
  "symbols_in_volume": [
   "functools.partial",
   "pyscenarios.copula.gaussian_copula",
   "pyscenarios.copula.t_copula",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyscenarios.tests.test_copula.test_bad_params_t": {
  "lineno": 250,
  "symbols_in_volume": [
   "pyscenarios.copula.t_copula",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyscenarios.tests.test_copula.test_cov_roundtrip": {
  "lineno": 198,
  "symbols_in_volume": [
   "numpy.corrcoef",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "pyscenarios.tests.test_copula.test_extra_samples": {
  "lineno": 188,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "pyscenarios.tests.test_copula.test_gaussian_mersenne_da": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pyscenarios.copula.gaussian_copula"
  ],
  "type": "function"
 },
 "pyscenarios.tests.test_copula.test_gaussian_mersenne_np": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.testing.assert_allclose",
   "pyscenarios.copula.gaussian_copula"
  ],
  "type": "function"
 },
 "pyscenarios.tests.test_copula.test_gaussian_sobol": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.testing.assert_allclose",
   "pyscenarios.copula.gaussian_copula",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyscenarios.tests.test_copula.test_it_mersenne_da": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pyscenarios.copula.t_copula"
  ],
  "type": "function"
 },
 "pyscenarios.tests.test_copula.test_it_mersenne_np": {
  "lineno": 106,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.testing.assert_allclose",
   "pyscenarios.copula.t_copula"
  ],
  "type": "function"
 },
 "pyscenarios.tests.test_copula.test_it_sobol": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.testing.assert_allclose",
   "pyscenarios.copula.t_copula",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyscenarios.tests.test_copula.test_normal_01": {
  "lineno": 171,
  "symbols_in_volume": [
   "numpy.histogram",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "pyscenarios.tests.test_copula.test_student_t_mersenne_da": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pyscenarios.copula.t_copula"
  ],
  "type": "function"
 },
 "pyscenarios.tests.test_copula.test_student_t_mersenne_np": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.testing.assert_allclose",
   "pyscenarios.copula.t_copula"
  ],
  "type": "function"
 },
 "pyscenarios.tests.test_copula.test_student_t_sobol": {
  "lineno": 87,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.testing.assert_allclose",
   "pyscenarios.copula.t_copula",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyscenarios.tests.test_copula.test_tail_dependence": {
  "lineno": 205,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pyscenarios.copula.t_copula",
   "pyscenarios.stats.tail_dependence",
   "pytest.mark.parametrize",
   "pytest.param"
  ],
  "type": "function"
 },
 "pyscenarios.tests.test_duck": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyscenarios.tests.test_duck.test_array": {
  "lineno": 10,
  "symbols_in_volume": [
   "dask.array.arange",
   "numpy.array",
   "numpy.ndarray",
   "numpy.testing.assert_equal",
   "pyscenarios.duck.array"
  ],
  "type": "function"
 },
 "pyscenarios.tests.test_duck.test_map_blocks": {
  "lineno": 21,
  "symbols_in_volume": [
   "dask.array.from_array",
   "numpy.ndarray",
   "numpy.random.rand",
   "numpy.sqrt",
   "numpy.testing.assert_array_equal",
   "pyscenarios.duck.norm_ppf",
   "pyscenarios.duck.sqrt",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyscenarios.tests.test_duck.test_map_blocks_df": {
  "lineno": 42,
  "symbols_in_volume": [
   "dask.array.Array",
   "dask.array.from_array",
   "numpy.array",
   "numpy.asarray",
   "numpy.ndarray",
   "numpy.random.rand",
   "numpy.testing.assert_array_equal",
   "pyscenarios.duck.chi2_ppf",
   "pyscenarios.duck.t_cdf",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyscenarios.tests.test_duck.test_randomstate_standard_normal": {
  "lineno": 117,
  "symbols_in_volume": [
   "dask.array.random.RandomState",
   "numpy.ndarray",
   "numpy.random.RandomState",
   "numpy.testing.assert_array_equal",
   "pyscenarios.duck.RandomState",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyscenarios.tests.test_duck.test_randomstate_uniform": {
  "lineno": 102,
  "symbols_in_volume": [
   "dask.array.random.RandomState",
   "numpy.ndarray",
   "numpy.random.RandomState",
   "numpy.testing.assert_array_equal",
   "pyscenarios.duck.RandomState",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyscenarios.tests.test_duck.test_where": {
  "lineno": 82,
  "symbols_in_volume": [
   "dask.array.from_array",
   "numpy.array",
   "numpy.ndarray",
   "numpy.testing.assert_array_equal",
   "pyscenarios.duck.where",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyscenarios.tests.test_sobol": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "module"
 },
 "pyscenarios.tests.test_sobol.test_bad_samples": {
  "lineno": 75,
  "symbols_in_volume": [
   "pyscenarios.sobol.sobol",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyscenarios.tests.test_sobol.test_dask_1d": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pyscenarios.sobol.sobol"
  ],
  "type": "function"
 },
 "pyscenarios.tests.test_sobol.test_dask_2d": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pyscenarios.sobol.sobol"
  ],
  "type": "function"
 },
 "pyscenarios.tests.test_sobol.test_max_dimensions": {
  "lineno": 30,
  "symbols_in_volume": [
   "pyscenarios.sobol.max_dimensions",
   "pyscenarios.sobol.sobol",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyscenarios.tests.test_sobol.test_numpy_1d": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pyscenarios.sobol.sobol"
  ],
  "type": "function"
 },
 "pyscenarios.tests.test_sobol.test_numpy_2d": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pyscenarios.sobol.sobol"
  ],
  "type": "function"
 },
 "pyscenarios.tests.test_sobol.test_samepoints": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.sort",
   "pyscenarios.sobol.max_dimensions",
   "pyscenarios.sobol.sobol",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyscenarios.tests.test_stats": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyscenarios.tests.test_stats.test_tail_dependence": {
  "lineno": 9,
  "symbols_in_volume": [
   "dask.array.from_array",
   "numpy.array",
   "numpy.nan",
   "numpy.ndarray",
   "numpy.testing.assert_array_equal",
   "pyscenarios.stats.tail_dependence",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyscenarios.typing": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "module"
 }
}