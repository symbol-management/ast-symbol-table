{
 "pyspectral": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pkg_resources.DistributionNotFound",
    "pkg_resources.get_distribution"
   ]
  },
  "type": "module"
 },
 "pyspectral.DistributionNotFound": {
  "data": {
   "shadows": "pkg_resources.DistributionNotFound"
  },
  "type": "import"
 },
 "pyspectral.__version__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyspectral.atm_correction_ir": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "float",
    "numpy.ma.arange",
    "pyspectral.atm_correction_ir.AtmosphericalCorrection",
    "pyspectral.atm_correction_ir.NDIM",
    "pyspectral.atm_correction_ir.SATZ",
    "pyspectral.atm_correction_ir.SHAPE",
    "pyspectral.atm_correction_ir.TBS",
    "pyspectral.atm_correction_ir.logging",
    "pyspectral.atm_correction_ir.this"
   ]
  },
  "type": "module"
 },
 "pyspectral.atm_correction_ir.AtmosphericalCorrection": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyspectral.atm_correction_ir.AtmosphericalCorrection.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "AttributeError",
    "pyspectral.atm_correction_ir.LOG"
   ]
  },
  "type": "function"
 },
 "pyspectral.atm_correction_ir.AtmosphericalCorrection.get_correction": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "viewzen_corr"
   ]
  },
  "type": "function"
 },
 "pyspectral.atm_correction_ir.LOG": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "pyspectral.atm_correction_ir.NDIM": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "pyspectral.atm_correction_ir.SATZ": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "pyspectral.atm_correction_ir.SHAPE": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "pyspectral.atm_correction_ir.TBS": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "pyspectral.atm_correction_ir.atm_corr": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "pyspectral.atm_correction_ir.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyspectral.atm_correction_ir.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyspectral.atm_correction_ir.this": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "pyspectral.atm_correction_ir.viewzen_corr": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "delta",
    "numpy.ma.where",
    "tau",
    "tau0"
   ]
  },
  "type": "function"
 },
 "pyspectral.atm_correction_ir.viewzen_corr.delta": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ratio"
   ]
  },
  "type": "function"
 },
 "pyspectral.atm_correction_ir.viewzen_corr.ratio": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "pyspectral.atm_correction_ir.viewzen_corr.tau": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ratio"
   ]
  },
  "type": "function"
 },
 "pyspectral.atm_correction_ir.viewzen_corr.tau0": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "ratio"
   ]
  },
  "type": "function"
 },
 "pyspectral.blackbody": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "dask.array",
    "numpy",
    "pyspectral.blackbody.logging"
   ]
  },
  "type": "module"
 },
 "pyspectral.blackbody.C_SPEED": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyspectral.blackbody.EPSILON": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyspectral.blackbody.H_PLANCK": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyspectral.blackbody.K_BOLTZMANN": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyspectral.blackbody.LOG": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyspectral.blackbody.blackbody": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "pyspectral.blackbody.planck"
   ]
  },
  "type": "function"
 },
 "pyspectral.blackbody.blackbody_rad2temp": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.divide",
    "numpy.isscalar",
    "numpy.log",
    "numpy.ma.is_masked",
    "numpy.ma.masked_array",
    "numpy.ma.masked_less_equal",
    "numpy.reshape",
    "pyspectral.blackbody.C_SPEED",
    "pyspectral.blackbody.H_PLANCK",
    "pyspectral.blackbody.K_BOLTZMANN"
   ]
  },
  "type": "function"
 },
 "pyspectral.blackbody.blackbody_wn": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "pyspectral.blackbody.planck"
   ]
  },
  "type": "function"
 },
 "pyspectral.blackbody.blackbody_wn_rad2temp": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.divide",
    "numpy.isscalar",
    "numpy.log",
    "pyspectral.blackbody.C_SPEED",
    "pyspectral.blackbody.H_PLANCK",
    "pyspectral.blackbody.K_BOLTZMANN",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyspectral.blackbody.da": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyspectral.blackbody.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyspectral.blackbody.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyspectral.blackbody.planck": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "MemoryError",
    "dask.array",
    "isinstance",
    "len",
    "list",
    "numpy",
    "numpy.abs",
    "numpy.array",
    "numpy.errstate",
    "numpy.exp",
    "numpy.isscalar",
    "numpy.multiply",
    "numpy.nan",
    "numpy.nanmax",
    "numpy.nanmin",
    "numpy.ndarray",
    "numpy.where",
    "pyspectral.blackbody.C_SPEED",
    "pyspectral.blackbody.EPSILON",
    "pyspectral.blackbody.H_PLANCK",
    "pyspectral.blackbody.K_BOLTZMANN",
    "pyspectral.blackbody.LOG",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyspectral.config": {
  "data": {
   "symbols_in_volume": [
    "IOError",
    "ImportError",
    "__name__",
    "pyspectral.config.CONFIG_FILE",
    "pyspectral.config.logging",
    "pyspectral.config.os",
    "pyspectral.config.pkg_resources",
    "str"
   ]
  },
  "type": "module"
 },
 "pyspectral.config.AppDirs": {
  "data": {
   "shadows": "appdirs.AppDirs"
  },
  "type": "import"
 },
 "pyspectral.config.BUILTIN_CONFIG_FILE": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pyspectral.config.CONFIG_FILE": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pyspectral.config.LOG": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyspectral.config.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "pyspectral.config.UnsafeLoader": {
  "data": {
   "shadows": "yaml.Loader"
  },
  "type": "import"
 },
 "pyspectral.config.expanduser": {
  "data": {
   "shadows": "os.path.expanduser"
  },
  "type": "import"
 },
 "pyspectral.config.get_config": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "appdirs.AppDirs",
    "open",
    "os.path.expanduser",
    "pyspectral.config.BUILTIN_CONFIG_FILE",
    "pyspectral.config.CONFIG_FILE",
    "pyspectral.config.recursive_dict_update",
    "pyspectral.config.yaml",
    "yaml.Loader"
   ]
  },
  "type": "function"
 },
 "pyspectral.config.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyspectral.config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyspectral.config.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyspectral.config.recursive_dict_update": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "collections.Mapping",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyspectral.config.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "pyspectral.get_distribution": {
  "data": {
   "shadows": "pkg_resources.get_distribution"
  },
  "type": "import"
 },
 "pyspectral.near_infrared_reflectance": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyspectral.near_infrared_reflectance.logging"
   ]
  },
  "type": "module"
 },
 "pyspectral.near_infrared_reflectance.BANDNAMES": {
  "data": {
   "shadows": "pyspectral.utils.BANDNAMES"
  },
  "type": "import"
 },
 "pyspectral.near_infrared_reflectance.Calculator": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pyspectral.radiance_tb_conversion.RadTbConverter"
   ]
  },
  "type": "class"
 },
 "pyspectral.near_infrared_reflectance.Calculator.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "NotImplementedError",
    "dict",
    "isinstance",
    "numbers.Number",
    "pyspectral.config.get_config",
    "pyspectral.near_infrared_reflectance.Calculator",
    "pyspectral.near_infrared_reflectance.LOG",
    "pyspectral.near_infrared_reflectance.TERMINATOR_LIMIT",
    "pyspectral.near_infrared_reflectance.os",
    "pyspectral.utils.BANDNAMES",
    "pyspectral.utils.BANDNAMES.get",
    "pyspectral.utils.TB2RAD_DIR",
    "pyspectral.utils.WAVE_LENGTH",
    "pyspectral.utils.get_bandname_from_wavelength",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "pyspectral.near_infrared_reflectance.Calculator._get_solarflux": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "pyspectral.solar.SolarIrradianceSpectrum",
    "pyspectral.solar.TOTAL_IRRADIANCE_SPECTRUM_2000ASTM"
   ]
  },
  "type": "function"
 },
 "pyspectral.near_infrared_reflectance.Calculator.derive_rad39_corr": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "AttributeError",
    "pyspectral.near_infrared_reflectance.LOG"
   ]
  },
  "type": "function"
 },
 "pyspectral.near_infrared_reflectance.Calculator.emissive_part_3x": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "TypeError",
    "numpy.isnan",
    "numpy.where",
    "pyspectral.near_infrared_reflectance.LOG"
   ]
  },
  "type": "function"
 },
 "pyspectral.near_infrared_reflectance.Calculator.reflectance_from_tbs": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "hasattr",
    "numpy.array",
    "numpy.asanyarray",
    "numpy.cos",
    "numpy.deg2rad",
    "numpy.isnan",
    "numpy.isscalar",
    "numpy.logical_or",
    "numpy.ma.masked_invalid",
    "numpy.nan",
    "numpy.pi",
    "numpy.where",
    "pyspectral.near_infrared_reflectance.EPSILON",
    "pyspectral.near_infrared_reflectance.LOG",
    "str"
   ]
  },
  "type": "function"
 },
 "pyspectral.near_infrared_reflectance.EPSILON": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pyspectral.near_infrared_reflectance.LOG": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pyspectral.near_infrared_reflectance.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "pyspectral.near_infrared_reflectance.RadTbConverter": {
  "data": {
   "shadows": "pyspectral.radiance_tb_conversion.RadTbConverter"
  },
  "type": "import"
 },
 "pyspectral.near_infrared_reflectance.SolarIrradianceSpectrum": {
  "data": {
   "shadows": "pyspectral.solar.SolarIrradianceSpectrum"
  },
  "type": "import"
 },
 "pyspectral.near_infrared_reflectance.TB2RAD_DIR": {
  "data": {
   "shadows": "pyspectral.utils.TB2RAD_DIR"
  },
  "type": "import"
 },
 "pyspectral.near_infrared_reflectance.TB_MAX": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pyspectral.near_infrared_reflectance.TB_MIN": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pyspectral.near_infrared_reflectance.TERMINATOR_LIMIT": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pyspectral.near_infrared_reflectance.TOTAL_IRRADIANCE_SPECTRUM_2000ASTM": {
  "data": {
   "shadows": "pyspectral.solar.TOTAL_IRRADIANCE_SPECTRUM_2000ASTM"
  },
  "type": "import"
 },
 "pyspectral.near_infrared_reflectance.WAVE_LENGTH": {
  "data": {
   "shadows": "pyspectral.utils.WAVE_LENGTH"
  },
  "type": "import"
 },
 "pyspectral.near_infrared_reflectance.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "pyspectral.near_infrared_reflectance.asanyarray": {
  "data": {
   "shadows": "numpy.asanyarray"
  },
  "type": "import"
 },
 "pyspectral.near_infrared_reflectance.get_bandname_from_wavelength": {
  "data": {
   "shadows": "pyspectral.utils.get_bandname_from_wavelength"
  },
  "type": "import"
 },
 "pyspectral.near_infrared_reflectance.get_config": {
  "data": {
   "shadows": "pyspectral.config.get_config"
  },
  "type": "import"
 },
 "pyspectral.near_infrared_reflectance.isnan": {
  "data": {
   "shadows": "numpy.isnan"
  },
  "type": "import"
 },
 "pyspectral.near_infrared_reflectance.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyspectral.near_infrared_reflectance.logical_or": {
  "data": {
   "shadows": "numpy.logical_or"
  },
  "type": "import"
 },
 "pyspectral.near_infrared_reflectance.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyspectral.near_infrared_reflectance.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyspectral.near_infrared_reflectance.where": {
  "data": {
   "shadows": "numpy.where"
  },
  "type": "import"
 },
 "pyspectral.radiance_tb_conversion": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyspectral.blackbody.blackbody",
    "pyspectral.blackbody.blackbody_wn",
    "pyspectral.radiance_tb_conversion.logging",
    "pyspectral.utils.WAVE_LENGTH",
    "pyspectral.utils.WAVE_NUMBER"
   ]
  },
  "type": "module"
 },
 "pyspectral.radiance_tb_conversion.BANDNAMES": {
  "data": {
   "shadows": "pyspectral.utils.BANDNAMES"
  },
  "type": "import"
 },
 "pyspectral.radiance_tb_conversion.BLACKBODY_FUNC": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pyspectral.radiance_tb_conversion.C_SPEED": {
  "data": {
   "shadows": "pyspectral.blackbody.C_SPEED"
  },
  "type": "import"
 },
 "pyspectral.radiance_tb_conversion.EPSILON": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pyspectral.radiance_tb_conversion.H_PLANCK": {
  "data": {
   "shadows": "pyspectral.blackbody.H_PLANCK"
  },
  "type": "import"
 },
 "pyspectral.radiance_tb_conversion.K_BOLTZMANN": {
  "data": {
   "shadows": "pyspectral.blackbody.K_BOLTZMANN"
  },
  "type": "import"
 },
 "pyspectral.radiance_tb_conversion.LOG": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pyspectral.radiance_tb_conversion.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "pyspectral.radiance_tb_conversion.RadTbConverter": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyspectral.radiance_tb_conversion.RadTbConverter.__init__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "AttributeError",
    "pyspectral.radiance_tb_conversion.BLACKBODY_FUNC",
    "pyspectral.utils.WAVE_LENGTH",
    "pyspectral.utils.WAVE_NUMBER"
   ]
  },
  "type": "function"
 },
 "pyspectral.radiance_tb_conversion.RadTbConverter._get_rsr": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "isinstance",
    "numbers.Number",
    "numpy.trapz",
    "pyspectral.radiance_tb_conversion.LOG",
    "pyspectral.rsr_reader.RelativeSpectralResponse",
    "pyspectral.utils.BANDNAMES",
    "pyspectral.utils.BANDNAMES.get",
    "pyspectral.utils.WAVE_NUMBER",
    "pyspectral.utils.convert2wavenumber",
    "pyspectral.utils.get_bandname_from_wavelength",
    "str"
   ]
  },
  "type": "function"
 },
 "pyspectral.radiance_tb_conversion.RadTbConverter._getitem": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyspectral.radiance_tb_conversion.RadTbConverter._getsatname": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyspectral.radiance_tb_conversion.RadTbConverter.make_tb2rad_lut": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.savez",
    "pyspectral.radiance_tb_conversion.TB_MAX",
    "pyspectral.radiance_tb_conversion.TB_MIN"
   ]
  },
  "type": "function"
 },
 "pyspectral.radiance_tb_conversion.RadTbConverter.radiance2tb": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "radiance2tb"
   ]
  },
  "type": "function"
 },
 "pyspectral.radiance_tb_conversion.RadTbConverter.read_tb2rad_lut": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "numpy.load",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyspectral.radiance_tb_conversion.RadTbConverter.tb2radiance": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "int",
    "pyspectral.utils.WAVE_NUMBER",
    "scipy.integrate.trapz"
   ]
  },
  "type": "function"
 },
 "pyspectral.radiance_tb_conversion.RelativeSpectralResponse": {
  "data": {
   "shadows": "pyspectral.rsr_reader.RelativeSpectralResponse"
  },
  "type": "import"
 },
 "pyspectral.radiance_tb_conversion.SEVIRI": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "pyspectral.radiance_tb_conversion.SeviriRadTbConverter": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "pyspectral.radiance_tb_conversion.RadTbConverter"
   ]
  },
  "type": "class"
 },
 "pyspectral.radiance_tb_conversion.SeviriRadTbConverter.__init__": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "AttributeError",
    "isinstance",
    "pyspectral.radiance_tb_conversion.SeviriRadTbConverter",
    "pyspectral.utils.BANDNAMES",
    "pyspectral.utils.BANDNAMES.get",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "pyspectral.radiance_tb_conversion.SeviriRadTbConverter._get_rsr": {
  "data": {
   "lineno": 298
  },
  "type": "function"
 },
 "pyspectral.radiance_tb_conversion.SeviriRadTbConverter.radiance2tb": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "numpy.log",
    "pyspectral.blackbody.C_SPEED",
    "pyspectral.blackbody.H_PLANCK",
    "pyspectral.blackbody.K_BOLTZMANN",
    "pyspectral.radiance_tb_conversion.SEVIRI"
   ]
  },
  "type": "function"
 },
 "pyspectral.radiance_tb_conversion.SeviriRadTbConverter.tb2radiance": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.exp",
    "pyspectral.blackbody.C_SPEED",
    "pyspectral.blackbody.H_PLANCK",
    "pyspectral.blackbody.K_BOLTZMANN",
    "pyspectral.radiance_tb_conversion.SEVIRI"
   ]
  },
  "type": "function"
 },
 "pyspectral.radiance_tb_conversion.TB_MAX": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pyspectral.radiance_tb_conversion.TB_MIN": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pyspectral.radiance_tb_conversion.WAVE_LENGTH": {
  "data": {
   "shadows": "pyspectral.utils.WAVE_LENGTH"
  },
  "type": "import"
 },
 "pyspectral.radiance_tb_conversion.WAVE_NUMBER": {
  "data": {
   "shadows": "pyspectral.utils.WAVE_NUMBER"
  },
  "type": "import"
 },
 "pyspectral.radiance_tb_conversion.blackbody": {
  "data": {
   "shadows": "pyspectral.blackbody.blackbody"
  },
  "type": "import"
 },
 "pyspectral.radiance_tb_conversion.blackbody_wn": {
  "data": {
   "shadows": "pyspectral.blackbody.blackbody_wn"
  },
  "type": "import"
 },
 "pyspectral.radiance_tb_conversion.convert2wavenumber": {
  "data": {
   "shadows": "pyspectral.utils.convert2wavenumber"
  },
  "type": "import"
 },
 "pyspectral.radiance_tb_conversion.get_bandname_from_wavelength": {
  "data": {
   "shadows": "pyspectral.utils.get_bandname_from_wavelength"
  },
  "type": "import"
 },
 "pyspectral.radiance_tb_conversion.integrate": {
  "data": {
   "shadows": "scipy.integrate"
  },
  "type": "import"
 },
 "pyspectral.radiance_tb_conversion.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyspectral.radiance_tb_conversion.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyspectral.radiance_tb_conversion.rad2temp": {
  "data": {
   "shadows": "pyspectral.blackbody.blackbody_rad2temp"
  },
  "type": "import"
 },
 "pyspectral.radiance_tb_conversion.radiance2tb": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "pyspectral.blackbody.blackbody_rad2temp"
   ]
  },
  "type": "function"
 },
 "pyspectral.raw_reader": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyspectral.raw_reader.logging"
   ]
  },
  "type": "module"
 },
 "pyspectral.raw_reader.InstrumentRSR": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyspectral.raw_reader.InstrumentRSR.__init__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "pyspectral.raw_reader.InstrumentRSR._get_bandfilenames": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pyspectral.raw_reader.LOG",
    "pyspectral.raw_reader.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyspectral.raw_reader.InstrumentRSR._get_options_from_config": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pyspectral.config.get_config"
   ]
  },
  "type": "function"
 },
 "pyspectral.raw_reader.InstrumentRSR._load": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyspectral.raw_reader.LOG": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyspectral.raw_reader.get_config": {
  "data": {
   "shadows": "pyspectral.config.get_config"
  },
  "type": "import"
 },
 "pyspectral.raw_reader.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyspectral.raw_reader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyspectral.rayleigh": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "dask.array",
    "dask.array.Array",
    "dask.array.from_array",
    "dask.array.map_blocks",
    "pyspectral.rayleigh.logging"
   ]
  },
  "type": "module"
 },
 "pyspectral.rayleigh.AEROSOL_TYPES": {
  "data": {
   "shadows": "pyspectral.utils.AEROSOL_TYPES"
  },
  "type": "import"
 },
 "pyspectral.rayleigh.ATMOSPHERES": {
  "data": {
   "shadows": "pyspectral.utils.ATMOSPHERES"
  },
  "type": "import"
 },
 "pyspectral.rayleigh.ATM_CORRECTION_LUT_VERSION": {
  "data": {
   "shadows": "pyspectral.utils.ATM_CORRECTION_LUT_VERSION"
  },
  "type": "import"
 },
 "pyspectral.rayleigh.Array": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pyspectral.rayleigh.BANDNAMES": {
  "data": {
   "shadows": "pyspectral.utils.BANDNAMES"
  },
  "type": "import"
 },
 "pyspectral.rayleigh.BandFrequencyOutOfRange": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "pyspectral.rayleigh.HAVE_DASK": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pyspectral.rayleigh.INSTRUMENTS": {
  "data": {
   "shadows": "pyspectral.utils.INSTRUMENTS"
  },
  "type": "import"
 },
 "pyspectral.rayleigh.LOG": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "pyspectral.rayleigh.MultilinearInterpolator": {
  "data": {
   "shadows": "geotiepoints.multilinear.MultilinearInterpolator"
  },
  "type": "import"
 },
 "pyspectral.rayleigh.RAYLEIGH_LUT_DIRS": {
  "data": {
   "shadows": "pyspectral.utils.RAYLEIGH_LUT_DIRS"
  },
  "type": "import"
 },
 "pyspectral.rayleigh.Rayleigh": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "pyspectral.rayleigh.RayleighConfigBaseClass"
   ]
  },
  "type": "class"
 },
 "pyspectral.rayleigh.Rayleigh.__init__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "IOError",
    "pyspectral.rayleigh.LOG",
    "pyspectral.rayleigh.Rayleigh",
    "pyspectral.rayleigh.os",
    "pyspectral.utils.INSTRUMENTS.get",
    "pyspectral.utils.RAYLEIGH_LUT_DIRS",
    "pyspectral.utils.download_luts",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "pyspectral.rayleigh.Rayleigh._do_interp": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "minterp",
    "numpy.vstack",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyspectral.rayleigh.Rayleigh.get_effective_wavelength": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "IOError",
    "KeyError",
    "OSError",
    "float",
    "isinstance",
    "pyspectral.rayleigh.BandFrequencyOutOfRange",
    "pyspectral.rayleigh.LOG",
    "pyspectral.rsr_reader.RelativeSpectralResponse",
    "pyspectral.utils.BANDNAMES",
    "pyspectral.utils.BANDNAMES.get",
    "pyspectral.utils.get_bandname_from_wavelength",
    "pyspectral.utils.get_central_wave",
    "six.integer_types",
    "str"
   ]
  },
  "type": "function"
 },
 "pyspectral.rayleigh.Rayleigh.get_reflectance": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "dask.array.Array",
    "dask.array.compute",
    "dask.array.from_array",
    "dask.array.map_blocks",
    "float",
    "geotiepoints.multilinear.MultilinearInterpolator",
    "isinstance",
    "len",
    "minterp",
    "minterp.set_values",
    "numpy.arccos",
    "numpy.atleast_2d",
    "numpy.clip",
    "numpy.cos",
    "numpy.deg2rad",
    "numpy.rad2deg",
    "numpy.searchsorted",
    "numpy.where",
    "numpy.zeros",
    "pyspectral.rayleigh.HAVE_DASK",
    "pyspectral.rayleigh.LOG",
    "pyspectral.rayleigh.time",
    "str"
   ]
  },
  "type": "function"
 },
 "pyspectral.rayleigh.Rayleigh.get_reflectance_lut": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "get_reflectance_lut"
   ]
  },
  "type": "function"
 },
 "pyspectral.rayleigh.RayleighConfigBaseClass": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyspectral.rayleigh.RayleighConfigBaseClass.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "AttributeError",
    "pyspectral.config.get_config",
    "pyspectral.rayleigh.LOG",
    "pyspectral.utils.AEROSOL_TYPES",
    "pyspectral.utils.ATMOSPHERES",
    "pyspectral.utils.ATMOSPHERES.keys",
    "pyspectral.utils.ATM_CORRECTION_LUT_VERSION",
    "str"
   ]
  },
  "type": "function"
 },
 "pyspectral.rayleigh.RayleighConfigBaseClass._get_lutfiles_version": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "open",
    "pyspectral.rayleigh.os",
    "pyspectral.utils.ATM_CORRECTION_LUT_VERSION",
    "pyspectral.utils.RAYLEIGH_LUT_DIRS"
   ]
  },
  "type": "function"
 },
 "pyspectral.rayleigh.RayleighConfigBaseClass.lutfiles_version_uptodate": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "pyspectral.rayleigh.RelativeSpectralResponse": {
  "data": {
   "shadows": "pyspectral.rsr_reader.RelativeSpectralResponse"
  },
  "type": "import"
 },
 "pyspectral.rayleigh.arccos": {
  "data": {
   "shadows": "numpy.arccos"
  },
  "type": "import"
 },
 "pyspectral.rayleigh.atleast_2d": {
  "data": {
   "shadows": "numpy.atleast_2d"
  },
  "type": "import"
 },
 "pyspectral.rayleigh.check_and_download": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "pyspectral.rayleigh.LOG",
    "pyspectral.rayleigh.RayleighConfigBaseClass",
    "pyspectral.utils.AEROSOL_TYPES",
    "pyspectral.utils.download_luts"
   ]
  },
  "type": "function"
 },
 "pyspectral.rayleigh.clip": {
  "data": {
   "shadows": "numpy.clip"
  },
  "type": "import"
 },
 "pyspectral.rayleigh.cos": {
  "data": {
   "shadows": "numpy.cos"
  },
  "type": "import"
 },
 "pyspectral.rayleigh.da": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pyspectral.rayleigh.deg2rad": {
  "data": {
   "shadows": "numpy.deg2rad"
  },
  "type": "import"
 },
 "pyspectral.rayleigh.download_luts": {
  "data": {
   "shadows": "pyspectral.utils.download_luts"
  },
  "type": "import"
 },
 "pyspectral.rayleigh.from_array": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pyspectral.rayleigh.get_bandname_from_wavelength": {
  "data": {
   "shadows": "pyspectral.utils.get_bandname_from_wavelength"
  },
  "type": "import"
 },
 "pyspectral.rayleigh.get_central_wave": {
  "data": {
   "shadows": "pyspectral.utils.get_central_wave"
  },
  "type": "import"
 },
 "pyspectral.rayleigh.get_config": {
  "data": {
   "shadows": "pyspectral.config.get_config"
  },
  "type": "import"
 },
 "pyspectral.rayleigh.get_reflectance_lut": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "dask.array.from_array",
    "pyspectral.rayleigh.HAVE_DASK",
    "pyspectral.rayleigh.h5py"
   ]
  },
  "type": "function"
 },
 "pyspectral.rayleigh.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pyspectral.rayleigh.integer_types": {
  "data": {
   "shadows": "six.integer_types"
  },
  "type": "import"
 },
 "pyspectral.rayleigh.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyspectral.rayleigh.map_blocks": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pyspectral.rayleigh.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyspectral.rayleigh.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyspectral.rayleigh.rad2deg": {
  "data": {
   "shadows": "numpy.rad2deg"
  },
  "type": "import"
 },
 "pyspectral.rayleigh.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyspectral.rayleigh.where": {
  "data": {
   "shadows": "numpy.where"
  },
  "type": "import"
 },
 "pyspectral.rayleigh.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pyspectral.rsr_reader": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyspectral.rsr_reader.logging",
    "pyspectral.rsr_reader.main"
   ]
  },
  "type": "module"
 },
 "pyspectral.rsr_reader.INSTRUMENTS": {
  "data": {
   "shadows": "pyspectral.utils.INSTRUMENTS"
  },
  "type": "import"
 },
 "pyspectral.rsr_reader.LOG": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyspectral.rsr_reader.RSRDataBaseClass": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyspectral.rsr_reader.RSRDataBaseClass.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pyspectral.config.get_config",
    "pyspectral.utils.RSR_DATA_VERSION",
    "pyspectral.utils.WAVE_LENGTH"
   ]
  },
  "type": "function"
 },
 "pyspectral.rsr_reader.RSRDataBaseClass._get_rsr_data_version": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "open",
    "pyspectral.rsr_reader.os",
    "pyspectral.utils.RSR_DATA_VERSION_FILENAME"
   ]
  },
  "type": "function"
 },
 "pyspectral.rsr_reader.RSRDataBaseClass.rsr_data_version_uptodate": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyspectral.rsr_reader.RSR_DATA_VERSION": {
  "data": {
   "shadows": "pyspectral.utils.RSR_DATA_VERSION"
  },
  "type": "import"
 },
 "pyspectral.rsr_reader.RSR_DATA_VERSION_FILENAME": {
  "data": {
   "shadows": "pyspectral.utils.RSR_DATA_VERSION_FILENAME"
  },
  "type": "import"
 },
 "pyspectral.rsr_reader.RelativeSpectralResponse": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "pyspectral.rsr_reader.RSRDataBaseClass"
   ]
  },
  "type": "class"
 },
 "pyspectral.rsr_reader.RelativeSpectralResponse.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "AttributeError",
    "IOError",
    "glob.glob",
    "pyspectral.rsr_reader.LOG",
    "pyspectral.rsr_reader.RelativeSpectralResponse",
    "pyspectral.rsr_reader.os",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "pyspectral.rsr_reader.RelativeSpectralResponse._check_instrument": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "pyspectral.rsr_reader.LOG",
    "pyspectral.utils.INSTRUMENTS.get"
   ]
  },
  "type": "function"
 },
 "pyspectral.rsr_reader.RelativeSpectralResponse._get_filename": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "os.path.expanduser",
    "pyspectral.rsr_reader.LOG",
    "pyspectral.rsr_reader.os",
    "pyspectral.utils.RSR_DATA_VERSION",
    "pyspectral.utils.download_rsr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyspectral.rsr_reader.RelativeSpectralResponse.convert": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyspectral.utils.WAVE_LENGTH",
    "pyspectral.utils.WAVE_NUMBER",
    "pyspectral.utils.convert2wavenumber",
    "pyspectral.utils.get_central_wave"
   ]
  },
  "type": "function"
 },
 "pyspectral.rsr_reader.RelativeSpectralResponse.integral": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "numpy.trapz"
   ]
  },
  "type": "function"
 },
 "pyspectral.rsr_reader.RelativeSpectralResponse.load": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "KeyError",
    "isinstance",
    "pyspectral.rsr_reader.LOG",
    "pyspectral.rsr_reader.h5py",
    "pyspectral.utils.INSTRUMENTS.get",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyspectral.rsr_reader.WAVE_LENGTH": {
  "data": {
   "shadows": "pyspectral.utils.WAVE_LENGTH"
  },
  "type": "import"
 },
 "pyspectral.rsr_reader.WAVE_NUMBER": {
  "data": {
   "shadows": "pyspectral.utils.WAVE_NUMBER"
  },
  "type": "import"
 },
 "pyspectral.rsr_reader.check_and_download": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "pyspectral.rsr_reader.LOG",
    "pyspectral.rsr_reader.RSRDataBaseClass",
    "pyspectral.utils.download_rsr"
   ]
  },
  "type": "function"
 },
 "pyspectral.rsr_reader.convert2wavenumber": {
  "data": {
   "shadows": "pyspectral.utils.convert2wavenumber"
  },
  "type": "import"
 },
 "pyspectral.rsr_reader.download_rsr": {
  "data": {
   "shadows": "pyspectral.utils.download_rsr"
  },
  "type": "import"
 },
 "pyspectral.rsr_reader.expanduser": {
  "data": {
   "shadows": "os.path.expanduser"
  },
  "type": "import"
 },
 "pyspectral.rsr_reader.get_central_wave": {
  "data": {
   "shadows": "pyspectral.utils.get_central_wave"
  },
  "type": "import"
 },
 "pyspectral.rsr_reader.get_config": {
  "data": {
   "shadows": "pyspectral.config.get_config"
  },
  "type": "import"
 },
 "pyspectral.rsr_reader.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "pyspectral.rsr_reader.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pyspectral.rsr_reader.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyspectral.rsr_reader.main": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "pyspectral.rsr_reader.RelativeSpectralResponse"
   ]
  },
  "type": "function"
 },
 "pyspectral.rsr_reader.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyspectral.rsr_reader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyspectral.solar": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pkg_resources.resource_filename",
    "pyspectral.solar.logging"
   ]
  },
  "type": "module"
 },
 "pyspectral.solar.InterpolatedUnivariateSpline": {
  "data": {
   "shadows": "scipy.interpolate.InterpolatedUnivariateSpline"
  },
  "type": "import"
 },
 "pyspectral.solar.LOG": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyspectral.solar.SolarIrradianceSpectrum": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyspectral.solar.SolarIrradianceSpectrum.__init__": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "pyspectral.solar.SolarIrradianceSpectrum._band_calculations": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "int",
    "ius",
    "numpy.greater_equal",
    "numpy.less_equal",
    "numpy.linspace",
    "numpy.logical_and",
    "numpy.repeat",
    "numpy.trapz",
    "pyspectral.solar.LOG",
    "round",
    "scipy.interpolate.InterpolatedUnivariateSpline"
   ]
  },
  "type": "function"
 },
 "pyspectral.solar.SolarIrradianceSpectrum._load": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.genfromtxt"
   ]
  },
  "type": "function"
 },
 "pyspectral.solar.SolarIrradianceSpectrum.convert2wavenumber": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "pyspectral.solar.SolarIrradianceSpectrum.inband_solarflux": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "pyspectral.solar.SolarIrradianceSpectrum.inband_solarirradiance": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "pyspectral.solar.SolarIrradianceSpectrum.interpolate": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "int",
    "ius",
    "numpy.linspace",
    "round",
    "scipy.interpolate.InterpolatedUnivariateSpline"
   ]
  },
  "type": "function"
 },
 "pyspectral.solar.SolarIrradianceSpectrum.plot": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "TypeError",
    "matplotlib.pyplot.show",
    "matplotlib.pyplot.subplots",
    "matplotlib.rcParams"
   ]
  },
  "type": "function"
 },
 "pyspectral.solar.SolarIrradianceSpectrum.solar_constant": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "TypeError",
    "numpy.trapz"
   ]
  },
  "type": "function"
 },
 "pyspectral.solar.TOTAL_IRRADIANCE_SPECTRUM_2000ASTM": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyspectral.solar.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyspectral.solar.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyspectral.solar.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyspectral.solar.rcParams": {
  "data": {
   "shadows": "matplotlib.rcParams"
  },
  "type": "import"
 },
 "pyspectral.solar.resource_filename": {
  "data": {
   "shadows": "pkg_resources.resource_filename"
  },
  "type": "import"
 },
 "pyspectral.tests": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyspectral.tests.os",
    "pyspectral.tests.suite",
    "pyspectral.tests.sys",
    "unittest2.TextTestRunner"
   ]
  },
  "type": "module"
 },
 "pyspectral.tests.APPVEYOR": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyspectral.tests.TRAVIS": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyspectral.tests.blackbody": {
  "data": {
   "shadows": "pyspectral.blackbody"
  },
  "type": "import"
 },
 "pyspectral.tests.data": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "pyspectral.tests.data.TEST_RAYLEIGH_AZID_COORD": {
  "data": {
   "lineno": 268
  },
  "type": "constant"
 },
 "pyspectral.tests.data.TEST_RAYLEIGH_LUT": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pyspectral.tests.data.TEST_RAYLEIGH_SATZ_COORD": {
  "data": {
   "lineno": 269
  },
  "type": "constant"
 },
 "pyspectral.tests.data.TEST_RAYLEIGH_SUNZ_COORD": {
  "data": {
   "lineno": 270
  },
  "type": "constant"
 },
 "pyspectral.tests.data.TEST_RAYLEIGH_WVL_COORD": {
  "data": {
   "lineno": 271
  },
  "type": "constant"
 },
 "pyspectral.tests.data.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyspectral.tests.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "pyspectral.tests.near_infrared_reflectance": {
  "data": {
   "shadows": "pyspectral.near_infrared_reflectance"
  },
  "type": "import"
 },
 "pyspectral.tests.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyspectral.tests.solar": {
  "data": {
   "shadows": "pyspectral.solar"
  },
  "type": "import"
 },
 "pyspectral.tests.suite": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "pyspectral.blackbody",
    "pyspectral.near_infrared_reflectance",
    "pyspectral.solar",
    "pyspectral.tests.APPVEYOR",
    "pyspectral.tests.TRAVIS",
    "pyspectral.tests.doctest",
    "unittest2.TestSuite"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyspectral.tests.test_atm_correction_ir": {
  "data": {
   "symbols_in_volume": [
    "numpy.ma.array",
    "pyspectral.tests.test_atm_correction_ir.sys"
   ]
  },
  "type": "module"
 },
 "pyspectral.tests.test_atm_correction_ir.AtmosphericalCorrection": {
  "data": {
   "shadows": "pyspectral.atm_correction_ir.AtmosphericalCorrection"
  },
  "type": "import"
 },
 "pyspectral.tests.test_atm_correction_ir.RES": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "pyspectral.tests.test_atm_correction_ir.SATZ": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyspectral.tests.test_atm_correction_ir.TBS": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "pyspectral.tests.test_atm_correction_ir.TestAtmCorrection": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "pyspectral.tests.test_atm_correction_ir.TestAtmCorrection.test_get_correction": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyspectral.atm_correction_ir.AtmosphericalCorrection",
    "pyspectral.tests.test_atm_correction_ir.RES",
    "pyspectral.tests.test_atm_correction_ir.SATZ",
    "pyspectral.tests.test_atm_correction_ir.TBS"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_atm_correction_ir.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyspectral.tests.test_atm_correction_ir.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyspectral.tests.test_atm_correction_ir.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyspectral.tests.test_blackbody": {
  "data": {},
  "type": "module"
 },
 "pyspectral.tests.test_blackbody.CustomScheduler": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyspectral.tests.test_blackbody.CustomScheduler.__call__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "RuntimeError",
    "pyspectral.tests.test_blackbody.dask"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_blackbody.CustomScheduler.__init__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "pyspectral.tests.test_blackbody.RAD_11MICRON_300KELVIN": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyspectral.tests.test_blackbody.RAD_11MICRON_301KELVIN": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyspectral.tests.test_blackbody.TestBlackbody": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pyspectral.tests.test_blackbody.unittest"
   ]
  },
  "type": "class"
 },
 "pyspectral.tests.test_blackbody.TestBlackbody.test_blackbody": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.isscalar",
    "numpy.ndarray",
    "pyspectral.blackbody.blackbody",
    "pyspectral.blackbody.blackbody_rad2temp",
    "pyspectral.tests.test_blackbody.RAD_11MICRON_300KELVIN",
    "pyspectral.tests.test_blackbody.RAD_11MICRON_301KELVIN"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_blackbody.TestBlackbody.test_blackbody_dask": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "dask.array.Array",
    "dask.array.from_array",
    "pyspectral.blackbody.blackbody",
    "pyspectral.tests.test_blackbody.CustomScheduler",
    "pyspectral.tests.test_blackbody.dask"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_blackbody.TestBlackbody.test_blackbody_wn": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.array",
    "pyspectral.blackbody.blackbody_wn",
    "pyspectral.blackbody.blackbody_wn_rad2temp",
    "pyspectral.tests.test_blackbody.WN_RAD_11MICRON_300KELVIN",
    "pyspectral.tests.test_blackbody.WN_RAD_11MICRON_301KELVIN",
    "pyspectral.tests.unittest_helpers.assertNumpyArraysEqual"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_blackbody.TestBlackbody.test_blackbody_wn_dask": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "dask.array.Array",
    "dask.array.from_array",
    "numpy.array",
    "pyspectral.blackbody.blackbody_wn_rad2temp",
    "pyspectral.tests.test_blackbody.CustomScheduler",
    "pyspectral.tests.test_blackbody.dask",
    "pyspectral.tests.unittest_helpers.assertNumpyArraysEqual"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_blackbody.WN_RAD_11MICRON_300KELVIN": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyspectral.tests.test_blackbody.WN_RAD_11MICRON_301KELVIN": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyspectral.tests.test_blackbody.__unittest": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyspectral.tests.test_blackbody.assertNumpyArraysEqual": {
  "data": {
   "shadows": "pyspectral.tests.unittest_helpers.assertNumpyArraysEqual"
  },
  "type": "import"
 },
 "pyspectral.tests.test_blackbody.blackbody": {
  "data": {
   "shadows": "pyspectral.blackbody.blackbody"
  },
  "type": "import"
 },
 "pyspectral.tests.test_blackbody.blackbody_rad2temp": {
  "data": {
   "shadows": "pyspectral.blackbody.blackbody_rad2temp"
  },
  "type": "import"
 },
 "pyspectral.tests.test_blackbody.blackbody_wn": {
  "data": {
   "shadows": "pyspectral.blackbody.blackbody_wn"
  },
  "type": "import"
 },
 "pyspectral.tests.test_blackbody.blackbody_wn_rad2temp": {
  "data": {
   "shadows": "pyspectral.blackbody.blackbody_wn_rad2temp"
  },
  "type": "import"
 },
 "pyspectral.tests.test_blackbody.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "pyspectral.tests.test_blackbody.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "pyspectral.tests.test_blackbody.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyspectral.tests.test_blackbody.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyspectral.tests.test_rad_tb_conversions": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "pyspectral.tests.test_rad_tb_conversions.I4_RESPONSE",
    "pyspectral.tests.test_rad_tb_conversions.I4_WAVELENGTH",
    "pyspectral.tests.test_rad_tb_conversions.M12_RESPONSE",
    "pyspectral.tests.test_rad_tb_conversions.M12_WAVELENGTH",
    "pyspectral.tests.test_rad_tb_conversions.RESP",
    "pyspectral.tests.test_rad_tb_conversions.SEV_RSR",
    "pyspectral.tests.test_rad_tb_conversions.TEST_RSR",
    "pyspectral.tests.test_rad_tb_conversions.VIIRS_RSR",
    "pyspectral.tests.test_rad_tb_conversions.WAVN",
    "pyspectral.tests.test_rad_tb_conversions.sys",
    "pyspectral.utils.get_central_wave"
   ]
  },
  "type": "module"
 },
 "pyspectral.tests.test_rad_tb_conversions.I4_RESPONSE": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "pyspectral.tests.test_rad_tb_conversions.I4_WAVELENGTH": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "pyspectral.tests.test_rad_tb_conversions.M12_RESPONSE": {
  "data": {
   "lineno": 210
  },
  "type": "constant"
 },
 "pyspectral.tests.test_rad_tb_conversions.M12_WAVELENGTH": {
  "data": {
   "lineno": 199
  },
  "type": "constant"
 },
 "pyspectral.tests.test_rad_tb_conversions.RESP": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "pyspectral.tests.test_rad_tb_conversions.RSRTestDataModis": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyspectral.tests.test_rad_tb_conversions.RSRTestDataModis.__init__": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "pyspectral.tests.test_rad_tb_conversions.TEST_RSR"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_rad_tb_conversions.RadTbConverter": {
  "data": {
   "shadows": "pyspectral.radiance_tb_conversion.RadTbConverter"
  },
  "type": "import"
 },
 "pyspectral.tests.test_rad_tb_conversions.SEV_RSR": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "pyspectral.tests.test_rad_tb_conversions.SeviriRadTbConverter": {
  "data": {
   "shadows": "pyspectral.radiance_tb_conversion.SeviriRadTbConverter"
  },
  "type": "import"
 },
 "pyspectral.tests.test_rad_tb_conversions.TEST_RSR": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pyspectral.tests.test_rad_tb_conversions.TEST_TBS": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyspectral.tests.test_rad_tb_conversions.TRUE_RADS": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyspectral.tests.test_rad_tb_conversions.TRUE_RADS_SEVIRI": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pyspectral.tests.test_rad_tb_conversions.TestRadTbConversions": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "pyspectral.tests.test_rad_tb_conversions.TestRadTbConversions.setUp": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "pyspectral.radiance_tb_conversion.RadTbConverter",
    "pyspectral.tests.test_rad_tb_conversions.TEST_RSR",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_rad_tb_conversions.TestRadTbConversions.tearDown": {
  "data": {
   "lineno": 366
  },
  "type": "function"
 },
 "pyspectral.tests.test_rad_tb_conversions.TestRadTbConversions.test_get_bandname": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "AttributeError",
    "pyspectral.radiance_tb_conversion.RadTbConverter",
    "pyspectral.tests.test_rad_tb_conversions.VIIRS_RSR",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_rad_tb_conversions.TestRadTbConversions.test_rad2tb": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyspectral.tests.test_rad_tb_conversions.TEST_TBS",
    "pyspectral.tests.test_rad_tb_conversions.TRUE_RADS"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_rad_tb_conversions.TestSeviriConversions": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "pyspectral.tests.test_rad_tb_conversions.TestSeviriConversions.setUp": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "pyspectral.radiance_tb_conversion.RadTbConverter",
    "pyspectral.radiance_tb_conversion.SeviriRadTbConverter",
    "pyspectral.tests.test_rad_tb_conversions.SEV_RSR",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_rad_tb_conversions.TestSeviriConversions.tearDown": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "pyspectral.tests.test_rad_tb_conversions.TestSeviriConversions.test_conversion_simple": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.random.random",
    "numpy.random.seed",
    "pyspectral.tests.test_rad_tb_conversions.TEST_TBS"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_rad_tb_conversions.TestSeviriConversions.test_conversions_methods": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyspectral.tests.test_rad_tb_conversions.TEST_TBS"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_rad_tb_conversions.TestSeviriConversions.test_rad2tb": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyspectral.tests.test_rad_tb_conversions.TEST_TBS",
    "pyspectral.tests.test_rad_tb_conversions.TRUE_RADS_SEVIRI"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_rad_tb_conversions.VIIRS_RSR": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "pyspectral.tests.test_rad_tb_conversions.WAVN": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "pyspectral.tests.test_rad_tb_conversions.get_central_wave": {
  "data": {
   "shadows": "pyspectral.utils.get_central_wave"
  },
  "type": "import"
 },
 "pyspectral.tests.test_rad_tb_conversions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyspectral.tests.test_rad_tb_conversions.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "pyspectral.tests.test_rad_tb_conversions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyspectral.tests.test_rad_tb_conversions.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyspectral.tests.test_rayleigh": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "pyspectral.tests.test_rayleigh.sys"
   ]
  },
  "type": "module"
 },
 "pyspectral.tests.test_rayleigh.BandFrequencyOutOfRange": {
  "data": {
   "shadows": "pyspectral.rayleigh.BandFrequencyOutOfRange"
  },
  "type": "import"
 },
 "pyspectral.tests.test_rayleigh.RSR_DATA_VERSION": {
  "data": {
   "shadows": "pyspectral.utils.RSR_DATA_VERSION"
  },
  "type": "import"
 },
 "pyspectral.tests.test_rayleigh.RelativeSpectralResponseTestData": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyspectral.tests.test_rayleigh.RelativeSpectralResponseTestData.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_rayleigh.TEST_RAYLEIGH_AZID_COORD": {
  "data": {
   "shadows": "pyspectral.tests.data.TEST_RAYLEIGH_AZID_COORD"
  },
  "type": "import"
 },
 "pyspectral.tests.test_rayleigh.TEST_RAYLEIGH_LUT": {
  "data": {
   "shadows": "pyspectral.tests.data.TEST_RAYLEIGH_LUT"
  },
  "type": "import"
 },
 "pyspectral.tests.test_rayleigh.TEST_RAYLEIGH_RESULT1": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pyspectral.tests.test_rayleigh.TEST_RAYLEIGH_RESULT2": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pyspectral.tests.test_rayleigh.TEST_RAYLEIGH_RESULT3": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pyspectral.tests.test_rayleigh.TEST_RAYLEIGH_SATZ_COORD": {
  "data": {
   "shadows": "pyspectral.tests.data.TEST_RAYLEIGH_SATZ_COORD"
  },
  "type": "import"
 },
 "pyspectral.tests.test_rayleigh.TEST_RAYLEIGH_SUNZ_COORD": {
  "data": {
   "shadows": "pyspectral.tests.data.TEST_RAYLEIGH_SUNZ_COORD"
  },
  "type": "import"
 },
 "pyspectral.tests.test_rayleigh.TEST_RAYLEIGH_WVL_COORD": {
  "data": {
   "shadows": "pyspectral.tests.data.TEST_RAYLEIGH_WVL_COORD"
  },
  "type": "import"
 },
 "pyspectral.tests.test_rayleigh.TestRayleigh": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "pyspectral.tests.test_rayleigh.TestRayleigh.setUp": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "dask.array.from_array",
    "pyspectral.rayleigh.Rayleigh",
    "pyspectral.tests.test_rayleigh.RelativeSpectralResponseTestData",
    "pyspectral.tests.test_rayleigh.TEST_RAYLEIGH_RESULT1",
    "pyspectral.tests.test_rayleigh.TEST_RAYLEIGH_RESULT2",
    "pyspectral.tests.test_rayleigh.TEST_RAYLEIGH_RESULT3",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_rayleigh.TestRayleigh.test_get_effective_wavelength": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "IOError",
    "pyspectral.rayleigh.BandFrequencyOutOfRange",
    "pyspectral.rayleigh.Rayleigh",
    "pyspectral.tests.test_rayleigh.RelativeSpectralResponseTestData",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_rayleigh.TestRayleigh.test_get_reflectance": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pyspectral.tests.data.TEST_RAYLEIGH_AZID_COORD",
    "pyspectral.tests.data.TEST_RAYLEIGH_LUT",
    "pyspectral.tests.data.TEST_RAYLEIGH_SATZ_COORD",
    "pyspectral.tests.data.TEST_RAYLEIGH_SUNZ_COORD",
    "pyspectral.tests.data.TEST_RAYLEIGH_WVL_COORD",
    "pyspectral.tests.test_rayleigh.TEST_RAYLEIGH_RESULT1",
    "pyspectral.tests.test_rayleigh.TEST_RAYLEIGH_RESULT2",
    "pyspectral.utils.RSR_DATA_VERSION",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_rayleigh.TestRayleigh.test_get_reflectance_dask": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "dask.array.Array",
    "dask.array.from_array",
    "numpy.allclose",
    "numpy.array",
    "pyspectral.tests.data.TEST_RAYLEIGH_AZID_COORD",
    "pyspectral.tests.data.TEST_RAYLEIGH_LUT",
    "pyspectral.tests.data.TEST_RAYLEIGH_SATZ_COORD",
    "pyspectral.tests.data.TEST_RAYLEIGH_SUNZ_COORD",
    "pyspectral.tests.data.TEST_RAYLEIGH_WVL_COORD",
    "pyspectral.tests.test_rayleigh.TEST_RAYLEIGH_RESULT1",
    "pyspectral.tests.test_rayleigh.TEST_RAYLEIGH_RESULT2",
    "pyspectral.utils.RSR_DATA_VERSION",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_rayleigh.TestRayleigh.test_get_reflectance_no_rsr": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "IOError",
    "numpy.allclose",
    "numpy.array",
    "pyspectral.rayleigh.Rayleigh",
    "pyspectral.tests.data.TEST_RAYLEIGH_AZID_COORD",
    "pyspectral.tests.data.TEST_RAYLEIGH_LUT",
    "pyspectral.tests.data.TEST_RAYLEIGH_SATZ_COORD",
    "pyspectral.tests.data.TEST_RAYLEIGH_SUNZ_COORD",
    "pyspectral.tests.data.TEST_RAYLEIGH_WVL_COORD",
    "pyspectral.tests.test_rayleigh.TEST_RAYLEIGH_RESULT3",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_rayleigh.TestRayleigh.test_get_reflectance_numpy_dask": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "dask.array.from_array",
    "numpy.allclose",
    "numpy.array",
    "numpy.ndarray",
    "pyspectral.tests.data.TEST_RAYLEIGH_AZID_COORD",
    "pyspectral.tests.data.TEST_RAYLEIGH_LUT",
    "pyspectral.tests.data.TEST_RAYLEIGH_SATZ_COORD",
    "pyspectral.tests.data.TEST_RAYLEIGH_SUNZ_COORD",
    "pyspectral.tests.data.TEST_RAYLEIGH_WVL_COORD",
    "pyspectral.tests.test_rayleigh.TEST_RAYLEIGH_RESULT1",
    "pyspectral.tests.test_rayleigh.TEST_RAYLEIGH_RESULT2",
    "pyspectral.utils.RSR_DATA_VERSION",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_rayleigh.TestRayleigh.test_rayleigh_init": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "AttributeError",
    "pyspectral.rayleigh.Rayleigh",
    "pyspectral.tests.test_rayleigh.RelativeSpectralResponseTestData",
    "pyspectral.tests.test_rayleigh.os",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_rayleigh.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "pyspectral.tests.test_rayleigh.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyspectral.tests.test_rayleigh.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyspectral.tests.test_rayleigh.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "pyspectral.tests.test_rayleigh.rayleigh": {
  "data": {
   "shadows": "pyspectral.rayleigh"
  },
  "type": "import"
 },
 "pyspectral.tests.test_rayleigh.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyspectral.tests.test_rayleigh.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyspectral.tests.test_reflectance": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "pyspectral.tests.test_reflectance.RESP",
    "pyspectral.tests.test_reflectance.TEST_RSR",
    "pyspectral.tests.test_reflectance.TEST_RSR_WN",
    "pyspectral.tests.test_reflectance.WVN",
    "pyspectral.tests.test_reflectance.sys"
   ]
  },
  "type": "module"
 },
 "pyspectral.tests.test_reflectance.Calculator": {
  "data": {
   "shadows": "pyspectral.near_infrared_reflectance.Calculator"
  },
  "type": "import"
 },
 "pyspectral.tests.test_reflectance.RESP": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "pyspectral.tests.test_reflectance.TEST_RSR": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyspectral.tests.test_reflectance.TEST_RSR_WN": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "pyspectral.tests.test_reflectance.TestReflectance": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "pyspectral.tests.test_reflectance.TestReflectance.test_reflectance": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ImportError",
    "NotImplementedError",
    "dask.array.from_array",
    "hasattr",
    "numpy.array",
    "numpy.isnan",
    "numpy.ma.masked_array",
    "numpy.testing.assert_allclose",
    "pyspectral.near_infrared_reflectance.Calculator",
    "pyspectral.tests.test_reflectance.TEST_RSR",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_reflectance.TestReflectance.test_rsr_integral": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyspectral.near_infrared_reflectance.Calculator",
    "pyspectral.tests.test_reflectance.TEST_RSR",
    "pyspectral.tests.test_reflectance.TEST_RSR_WN",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_reflectance.WVN": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "pyspectral.tests.test_reflectance.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "pyspectral.tests.test_reflectance.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyspectral.tests.test_reflectance.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "pyspectral.tests.test_reflectance.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyspectral.tests.test_reflectance.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyspectral.tests.test_rsr_reader": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "pyspectral.tests.test_rsr_reader.DIR_PATH_ITEMS",
    "pyspectral.tests.test_rsr_reader.TEST_CONFIG",
    "pyspectral.tests.test_rsr_reader.TEST_RSR",
    "pyspectral.tests.test_rsr_reader.TEST_RSR2",
    "pyspectral.tests.test_rsr_reader.TEST_RSR_DIR",
    "pyspectral.tests.test_rsr_reader.sys"
   ]
  },
  "type": "module"
 },
 "pyspectral.tests.test_rsr_reader.DIR_PATH_ITEMS": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "pyspectral.tests.test_rsr_reader.RESULT_WVN_RSR": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "pyspectral.tests.test_rsr_reader.RSR_DATA_VERSION": {
  "data": {
   "shadows": "pyspectral.utils.RSR_DATA_VERSION"
  },
  "type": "import"
 },
 "pyspectral.tests.test_rsr_reader.RelativeSpectralResponse": {
  "data": {
   "shadows": "pyspectral.rsr_reader.RelativeSpectralResponse"
  },
  "type": "import"
 },
 "pyspectral.tests.test_rsr_reader.TEST_CONFIG": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "pyspectral.tests.test_rsr_reader.TEST_RSR": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyspectral.tests.test_rsr_reader.TEST_RSR2": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "pyspectral.tests.test_rsr_reader.TEST_RSR_DIR": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "pyspectral.tests.test_rsr_reader.TestRsrReader": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "pyspectral.tests.test_rsr_reader.TestRsrReader.test_convert": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.allclose",
    "pyspectral.rsr_reader.RelativeSpectralResponse",
    "pyspectral.tests.test_rsr_reader.RESULT_WVN_RSR",
    "pyspectral.tests.test_rsr_reader.TEST_CONFIG",
    "pyspectral.tests.test_rsr_reader.TEST_RSR",
    "pyspectral.utils.RSR_DATA_VERSION",
    "pyspectral.utils.WAVE_NUMBER",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_rsr_reader.TestRsrReader.test_integral": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "pyspectral.rsr_reader.RelativeSpectralResponse",
    "pyspectral.tests.test_rsr_reader.TEST_CONFIG",
    "pyspectral.tests.test_rsr_reader.TEST_RSR2",
    "pyspectral.utils.RSR_DATA_VERSION",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_rsr_reader.TestRsrReader.test_rsr_response": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "AttributeError",
    "pyspectral.rsr_reader.RelativeSpectralResponse",
    "pyspectral.tests.test_rsr_reader.TEST_CONFIG",
    "pyspectral.tests.test_rsr_reader.TEST_RSR_DIR",
    "pyspectral.utils.RSR_DATA_VERSION",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_rsr_reader.WAVE_NUMBER": {
  "data": {
   "shadows": "pyspectral.utils.WAVE_NUMBER"
  },
  "type": "import"
 },
 "pyspectral.tests.test_rsr_reader.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyspectral.tests.test_rsr_reader.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pyspectral.tests.test_rsr_reader.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "pyspectral.tests.test_rsr_reader.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyspectral.tests.test_rsr_reader.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyspectral.tests.test_solarflux": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "pyspectral.tests.test_solarflux.TEST_RSR"
   ]
  },
  "type": "module"
 },
 "pyspectral.tests.test_solarflux.RESULT_IPOL_WVLS": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "pyspectral.tests.test_solarflux.SolarIrradianceSpectrum": {
  "data": {
   "shadows": "pyspectral.solar.SolarIrradianceSpectrum"
  },
  "type": "import"
 },
 "pyspectral.tests.test_solarflux.TEST_RSR": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyspectral.tests.test_solarflux.TOTAL_IRRADIANCE_SPECTRUM_2000ASTM": {
  "data": {
   "shadows": "pyspectral.solar.TOTAL_IRRADIANCE_SPECTRUM_2000ASTM"
  },
  "type": "import"
 },
 "pyspectral.tests.test_solarflux.TestSolarflux": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "pyspectral.tests.test_solarflux.unittest"
   ]
  },
  "type": "class"
 },
 "pyspectral.tests.test_solarflux.TestSolarflux.setUp": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "pyspectral.solar.SolarIrradianceSpectrum",
    "pyspectral.solar.TOTAL_IRRADIANCE_SPECTRUM_2000ASTM",
    "pyspectral.tests.test_solarflux.TEST_RSR"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_solarflux.TestSolarflux.test_interpolate": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyspectral.tests.test_solarflux.RESULT_IPOL_WVLS"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_solarflux.TestSolarflux.test_read": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "pyspectral.tests.test_solarflux.os"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_solarflux.TestSolarflux.test_solar_flux": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "pyspectral.tests.test_solarflux.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyspectral.tests.test_solarflux.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyspectral.tests.test_solarflux.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyspectral.tests.test_utils": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "pyspectral.tests.test_utils.RESULT_RSR",
    "pyspectral.tests.test_utils.TEST_RSR"
   ]
  },
  "type": "module"
 },
 "pyspectral.tests.test_utils.RESULT_RSR": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pyspectral.tests.test_utils.RsrTestData": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyspectral.tests.test_utils.RsrTestData.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_utils.TEST_RSR": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyspectral.tests.test_utils.TestUtils": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "pyspectral.tests.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "pyspectral.tests.test_utils.TestUtils.setUp": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "pyspectral.tests.test_utils.RsrTestData"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_utils.TestUtils.test_convert2wavenumber": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyspectral.tests.test_utils.RESULT_RSR",
    "pyspectral.tests.test_utils.TEST_RSR",
    "pyspectral.utils.convert2wavenumber"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_utils.TestUtils.test_get_bandname_from_wavelength": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "AttributeError",
    "pyspectral.tests.test_utils.TEST_RSR",
    "pyspectral.utils.get_bandname_from_wavelength"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyspectral.tests.test_utils.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyspectral.tests.test_utils.utils": {
  "data": {
   "shadows": "pyspectral.utils"
  },
  "type": "import"
 },
 "pyspectral.tests.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyspectral.tests.unittest_helpers": {
  "data": {},
  "type": "module"
 },
 "pyspectral.tests.unittest_helpers.assertNumpyArraysEqual": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "pyspectral.tests.unittest_helpers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyspectral.utils": {
  "data": {
   "symbols_in_volume": [
    "OSError",
    "__name__",
    "pyspectral.config.get_config",
    "pyspectral.utils.AEROSOL_TYPES",
    "pyspectral.utils.ATM_CORRECTION_LUT_VERSION",
    "pyspectral.utils.BANDNAMES",
    "pyspectral.utils.CONF",
    "pyspectral.utils.HTTPS_RAYLEIGH_LUTS",
    "pyspectral.utils.LOCAL_RAYLEIGH_DIR",
    "pyspectral.utils.LOCAL_RSR_DIR",
    "pyspectral.utils.RAYLEIGH_LUT_DIRS",
    "pyspectral.utils.URL_PREFIX",
    "pyspectral.utils.dirname",
    "pyspectral.utils.logging",
    "pyspectral.utils.name",
    "pyspectral.utils.os",
    "pyspectral.utils.tempfile",
    "pyspectral.utils.url",
    "range",
    "str"
   ]
  },
  "type": "module"
 },
 "pyspectral.utils.AEROSOL_TYPES": {
  "data": {
   "lineno": 209
  },
  "type": "constant"
 },
 "pyspectral.utils.ATMOSPHERES": {
  "data": {
   "lineno": 215
  },
  "type": "constant"
 },
 "pyspectral.utils.ATM_CORRECTION_LUT_VERSION": {
  "data": {
   "lineno": 184
  },
  "type": "constant"
 },
 "pyspectral.utils.BANDNAMES": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyspectral.utils.CONF": {
  "data": {
   "lineno": 228
  },
  "type": "constant"
 },
 "pyspectral.utils.HTTPS_RAYLEIGH_LUTS": {
  "data": {
   "lineno": 220
  },
  "type": "constant"
 },
 "pyspectral.utils.HTTP_PYSPECTRAL_RSR": {
  "data": {
   "lineno": 178
  },
  "type": "constant"
 },
 "pyspectral.utils.INSTRUMENTS": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "pyspectral.utils.LOCAL_RAYLEIGH_DIR": {
  "data": {
   "lineno": 230
  },
  "type": "constant"
 },
 "pyspectral.utils.LOCAL_RSR_DIR": {
  "data": {
   "lineno": 229
  },
  "type": "constant"
 },
 "pyspectral.utils.LOG": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyspectral.utils.NullHandler": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "pyspectral.utils.logging"
   ]
  },
  "type": "class"
 },
 "pyspectral.utils.NullHandler.emit": {
  "data": {
   "lineno": 528
  },
  "type": "function"
 },
 "pyspectral.utils.RAYLEIGH_LUT_DIRS": {
  "data": {
   "lineno": 238
  },
  "type": "constant"
 },
 "pyspectral.utils.RSR_DATA_VERSION": {
  "data": {
   "lineno": 182
  },
  "type": "constant"
 },
 "pyspectral.utils.RSR_DATA_VERSION_FILENAME": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "pyspectral.utils.TB2RAD_DIR": {
  "data": {
   "lineno": 243
  },
  "type": "constant"
 },
 "pyspectral.utils.URL_PREFIX": {
  "data": {
   "lineno": 221
  },
  "type": "constant"
 },
 "pyspectral.utils.WAVE_LENGTH": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyspectral.utils.WAVE_NUMBER": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyspectral.utils._is_logging_on": {
  "data": {
   "lineno": 503
  },
  "type": "constant"
 },
 "pyspectral.utils.convert2hdf5": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "ClassIn",
    "numpy.isnan",
    "pyspectral.utils.get_central_wave",
    "pyspectral.utils.h5py",
    "pyspectral.utils.os"
   ]
  },
  "type": "function"
 },
 "pyspectral.utils.convert2wavenumber": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "dict",
    "pyspectral.utils.LOG",
    "pyspectral.utils.name",
    "type"
   ]
  },
  "type": "function"
 },
 "pyspectral.utils.debug_on": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "logging_on",
    "pyspectral.utils.logging"
   ]
  },
  "type": "function"
 },
 "pyspectral.utils.dirname": {
  "data": {
   "lineno": 240
  },
  "type": "constant"
 },
 "pyspectral.utils.download_luts": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "ImportError",
    "OSError",
    "int",
    "isinstance",
    "list",
    "open",
    "pyspectral.utils.HTTPS_RAYLEIGH_LUTS",
    "pyspectral.utils.LOG",
    "pyspectral.utils.RAYLEIGH_LUT_DIRS",
    "pyspectral.utils.os",
    "pyspectral.utils.requests",
    "pyspectral.utils.tarfile",
    "set",
    "tqdm.tqdm",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyspectral.utils.download_rsr": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "ImportError",
    "open",
    "pyspectral.utils.HTTP_PYSPECTRAL_RSR",
    "pyspectral.utils.LOCAL_RSR_DIR",
    "pyspectral.utils.LOG",
    "pyspectral.utils.os",
    "pyspectral.utils.requests",
    "pyspectral.utils.tarfile",
    "tqdm.tqdm"
   ]
  },
  "type": "function"
 },
 "pyspectral.utils.get_bandname_from_wavelength": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "AttributeError",
    "abs",
    "len",
    "pyspectral.utils.BANDNAMES",
    "pyspectral.utils.LOG",
    "str"
   ]
  },
  "type": "function"
 },
 "pyspectral.utils.get_central_wave": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "numpy.trapz"
   ]
  },
  "type": "function"
 },
 "pyspectral.utils.get_config": {
  "data": {
   "shadows": "pyspectral.config.get_config"
  },
  "type": "import"
 },
 "pyspectral.utils.get_logger": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "pyspectral.utils.NullHandler",
    "pyspectral.utils.logging",
    "pyspectral.utils.name"
   ]
  },
  "type": "function"
 },
 "pyspectral.utils.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pyspectral.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyspectral.utils.logging_off": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "pyspectral.utils.NullHandler",
    "pyspectral.utils.logging"
   ]
  },
  "type": "function"
 },
 "pyspectral.utils.logging_on": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "pyspectral.utils._is_logging_on",
    "pyspectral.utils.logging"
   ]
  },
  "type": "function"
 },
 "pyspectral.utils.name": {
  "data": {
   "lineno": 223
  },
  "type": "constant"
 },
 "pyspectral.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyspectral.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyspectral.utils.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "pyspectral.utils.sort_data": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.diff",
    "numpy.equal",
    "numpy.r_",
    "numpy.repeat",
    "pyspectral.utils.LOG"
   ]
  },
  "type": "function"
 },
 "pyspectral.utils.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "pyspectral.utils.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyspectral.utils.tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "pyspectral.utils.url": {
  "data": {
   "lineno": 224
  },
  "type": "constant"
 }
}