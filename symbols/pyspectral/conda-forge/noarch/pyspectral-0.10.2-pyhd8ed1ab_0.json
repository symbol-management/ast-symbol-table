{
 "pyspectral": {
  "lineno": null,
  "symbols_in_volume": [
   "pkg_resources.DistributionNotFound",
   "pkg_resources.get_distribution"
  ],
  "type": "module"
 },
 "pyspectral.atm_correction_ir": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "numpy.ma.arange"
  ],
  "type": "module"
 },
 "pyspectral.atm_correction_ir.AtmosphericalCorrection": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyspectral.atm_correction_ir.AtmosphericalCorrection.__init__": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.atm_correction_ir.AtmosphericalCorrection.get_correction": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.atm_correction_ir.viewzen_corr": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.ma.where"
  ],
  "type": "function"
 },
 "pyspectral.atm_correction_ir.viewzen_corr.delta": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.atm_correction_ir.viewzen_corr.ratio": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.atm_correction_ir.viewzen_corr.tau": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.atm_correction_ir.viewzen_corr.tau0": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.blackbody": {
  "lineno": null,
  "symbols_in_volume": [
   "dask.array",
   "logging.getLogger",
   "numpy"
  ],
  "type": "module"
 },
 "pyspectral.blackbody.blackbody": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.blackbody.blackbody_rad2temp": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.divide",
   "numpy.isscalar",
   "numpy.log",
   "numpy.ma.is_masked",
   "numpy.ma.masked_array",
   "numpy.ma.masked_less_equal",
   "numpy.reshape"
  ],
  "type": "function"
 },
 "pyspectral.blackbody.blackbody_wn": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.blackbody.blackbody_wn_rad2temp": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.divide",
   "numpy.isscalar",
   "numpy.log"
  ],
  "type": "function"
 },
 "pyspectral.blackbody.planck": {
  "lineno": 126,
  "symbols_in_volume": [
   "dask.array",
   "numpy",
   "numpy.abs",
   "numpy.array",
   "numpy.errstate",
   "numpy.exp",
   "numpy.isscalar",
   "numpy.multiply",
   "numpy.nan",
   "numpy.nanmax",
   "numpy.nanmin",
   "numpy.ndarray",
   "numpy.where"
  ],
  "type": "function"
 },
 "pyspectral.config": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "os.environ.get",
   "os.path.exists",
   "os.path.isfile",
   "os.path.join",
   "pkg_resources.resource_filename"
  ],
  "type": "module"
 },
 "pyspectral.config.get_config": {
  "lineno": 75,
  "symbols_in_volume": [
   "appdirs.AppDirs",
   "os.path.expanduser",
   "yaml.Loader",
   "yaml.load"
  ],
  "type": "function"
 },
 "pyspectral.config.recursive_dict_update": {
  "lineno": 58,
  "symbols_in_volume": [
   "collections.Mapping"
  ],
  "type": "function"
 },
 "pyspectral.near_infrared_reflectance": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "pyspectral.near_infrared_reflectance.Calculator": {
  "lineno": 55,
  "symbols_in_volume": [
   "pyspectral.radiance_tb_conversion.RadTbConverter"
  ],
  "type": "class"
 },
 "pyspectral.near_infrared_reflectance.Calculator.__init__": {
  "lineno": 68,
  "symbols_in_volume": [
   "numbers.Number",
   "os.path.basename",
   "os.path.dirname",
   "os.path.exists",
   "os.path.join",
   "pyspectral.config.get_config",
   "pyspectral.utils.BANDNAMES",
   "pyspectral.utils.BANDNAMES.get",
   "pyspectral.utils.TB2RAD_DIR",
   "pyspectral.utils.WAVE_LENGTH",
   "pyspectral.utils.get_bandname_from_wavelength"
  ],
  "type": "function"
 },
 "pyspectral.near_infrared_reflectance.Calculator._get_solarflux": {
  "lineno": 163,
  "symbols_in_volume": [
   "pyspectral.solar.SolarIrradianceSpectrum",
   "pyspectral.solar.TOTAL_IRRADIANCE_SPECTRUM_2000ASTM"
  ],
  "type": "function"
 },
 "pyspectral.near_infrared_reflectance.Calculator.derive_rad39_corr": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.near_infrared_reflectance.Calculator.emissive_part_3x": {
  "lineno": 171,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.where"
  ],
  "type": "function"
 },
 "pyspectral.near_infrared_reflectance.Calculator.reflectance_from_tbs": {
  "lineno": 192,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asanyarray",
   "numpy.cos",
   "numpy.deg2rad",
   "numpy.isnan",
   "numpy.isscalar",
   "numpy.logical_or",
   "numpy.ma.masked_invalid",
   "numpy.nan",
   "numpy.pi",
   "numpy.where"
  ],
  "type": "function"
 },
 "pyspectral.radiance_tb_conversion": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "pyspectral.blackbody.blackbody",
   "pyspectral.blackbody.blackbody_wn",
   "pyspectral.utils.WAVE_LENGTH",
   "pyspectral.utils.WAVE_NUMBER"
  ],
  "type": "module"
 },
 "pyspectral.radiance_tb_conversion.RadTbConverter": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyspectral.radiance_tb_conversion.RadTbConverter.__init__": {
  "lineno": 102,
  "symbols_in_volume": [
   "pyspectral.utils.WAVE_LENGTH",
   "pyspectral.utils.WAVE_NUMBER"
  ],
  "type": "function"
 },
 "pyspectral.radiance_tb_conversion.RadTbConverter._get_rsr": {
  "lineno": 137,
  "symbols_in_volume": [
   "numbers.Number",
   "numpy.trapz",
   "pyspectral.rsr_reader.RelativeSpectralResponse",
   "pyspectral.utils.BANDNAMES",
   "pyspectral.utils.BANDNAMES.get",
   "pyspectral.utils.WAVE_NUMBER",
   "pyspectral.utils.convert2wavenumber",
   "pyspectral.utils.get_bandname_from_wavelength"
  ],
  "type": "function"
 },
 "pyspectral.radiance_tb_conversion.RadTbConverter._getitem": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.radiance_tb_conversion.RadTbConverter._getsatname": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.radiance_tb_conversion.RadTbConverter.make_tb2rad_lut": {
  "lineno": 239,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.savez"
  ],
  "type": "function"
 },
 "pyspectral.radiance_tb_conversion.RadTbConverter.radiance2tb": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.radiance_tb_conversion.RadTbConverter.read_tb2rad_lut": {
  "lineno": 246,
  "symbols_in_volume": [
   "numpy.load"
  ],
  "type": "function"
 },
 "pyspectral.radiance_tb_conversion.RadTbConverter.tb2radiance": {
  "lineno": 181,
  "symbols_in_volume": [
   "pyspectral.utils.WAVE_NUMBER",
   "scipy.integrate.trapz"
  ],
  "type": "function"
 },
 "pyspectral.radiance_tb_conversion.SeviriRadTbConverter": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyspectral.radiance_tb_conversion.SeviriRadTbConverter.__init__": {
  "lineno": 282,
  "symbols_in_volume": [
   "pyspectral.utils.BANDNAMES",
   "pyspectral.utils.BANDNAMES.get"
  ],
  "type": "function"
 },
 "pyspectral.radiance_tb_conversion.SeviriRadTbConverter._get_rsr": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.radiance_tb_conversion.SeviriRadTbConverter.radiance2tb": {
  "lineno": 302,
  "symbols_in_volume": [
   "numpy.log",
   "pyspectral.blackbody.C_SPEED",
   "pyspectral.blackbody.H_PLANCK",
   "pyspectral.blackbody.K_BOLTZMANN"
  ],
  "type": "function"
 },
 "pyspectral.radiance_tb_conversion.SeviriRadTbConverter.tb2radiance": {
  "lineno": 327,
  "symbols_in_volume": [
   "numpy.exp",
   "pyspectral.blackbody.C_SPEED",
   "pyspectral.blackbody.H_PLANCK",
   "pyspectral.blackbody.K_BOLTZMANN"
  ],
  "type": "function"
 },
 "pyspectral.radiance_tb_conversion.radiance2tb": {
  "lineno": 261,
  "symbols_in_volume": [
   "pyspectral.blackbody.blackbody_rad2temp"
  ],
  "type": "function"
 },
 "pyspectral.raw_reader": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "pyspectral.raw_reader.InstrumentRSR": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyspectral.raw_reader.InstrumentRSR.__init__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.raw_reader.InstrumentRSR._get_bandfilenames": {
  "lineno": 61,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join"
  ],
  "type": "function"
 },
 "pyspectral.raw_reader.InstrumentRSR._get_options_from_config": {
  "lineno": 54,
  "symbols_in_volume": [
   "pyspectral.config.get_config"
  ],
  "type": "function"
 },
 "pyspectral.raw_reader.InstrumentRSR._load": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.rayleigh": {
  "lineno": null,
  "symbols_in_volume": [
   "dask.array",
   "dask.array.Array",
   "dask.array.from_array",
   "dask.array.map_blocks",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "pyspectral.rayleigh.BandFrequencyOutOfRange": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyspectral.rayleigh.Rayleigh": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyspectral.rayleigh.Rayleigh.__init__": {
  "lineno": 140,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.isfile",
   "os.path.join",
   "pyspectral.utils.INSTRUMENTS.get",
   "pyspectral.utils.RAYLEIGH_LUT_DIRS",
   "pyspectral.utils.download_luts"
  ],
  "type": "function"
 },
 "pyspectral.rayleigh.Rayleigh._do_interp": {
  "lineno": 232,
  "symbols_in_volume": [
   "numpy.vstack"
  ],
  "type": "function"
 },
 "pyspectral.rayleigh.Rayleigh.get_effective_wavelength": {
  "lineno": 183,
  "symbols_in_volume": [
   "pyspectral.rsr_reader.RelativeSpectralResponse",
   "pyspectral.utils.BANDNAMES",
   "pyspectral.utils.BANDNAMES.get",
   "pyspectral.utils.get_bandname_from_wavelength",
   "pyspectral.utils.get_central_wave",
   "six.integer_types"
  ],
  "type": "function"
 },
 "pyspectral.rayleigh.Rayleigh.get_reflectance": {
  "lineno": 238,
  "symbols_in_volume": [
   "dask.array.Array",
   "dask.array.compute",
   "dask.array.from_array",
   "dask.array.map_blocks",
   "geotiepoints.multilinear.MultilinearInterpolator",
   "numpy.arccos",
   "numpy.atleast_2d",
   "numpy.clip",
   "numpy.cos",
   "numpy.deg2rad",
   "numpy.rad2deg",
   "numpy.searchsorted",
   "numpy.where",
   "numpy.zeros",
   "time.time"
  ],
  "type": "function"
 },
 "pyspectral.rayleigh.Rayleigh.get_reflectance_lut": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.rayleigh.RayleighConfigBaseClass": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyspectral.rayleigh.RayleighConfigBaseClass.__init__": {
  "lineno": 74,
  "symbols_in_volume": [
   "pyspectral.config.get_config",
   "pyspectral.utils.AEROSOL_TYPES",
   "pyspectral.utils.ATMOSPHERES",
   "pyspectral.utils.ATMOSPHERES.keys",
   "pyspectral.utils.ATM_CORRECTION_LUT_VERSION"
  ],
  "type": "function"
 },
 "pyspectral.rayleigh.RayleighConfigBaseClass._get_lutfiles_version": {
  "lineno": 101,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join",
   "pyspectral.utils.ATM_CORRECTION_LUT_VERSION",
   "pyspectral.utils.RAYLEIGH_LUT_DIRS"
  ],
  "type": "function"
 },
 "pyspectral.rayleigh.RayleighConfigBaseClass.lutfiles_version_uptodate": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.rayleigh.check_and_download": {
  "lineno": 361,
  "symbols_in_volume": [
   "pyspectral.utils.AEROSOL_TYPES",
   "pyspectral.utils.download_luts"
  ],
  "type": "function"
 },
 "pyspectral.rayleigh.get_reflectance_lut": {
  "lineno": 325,
  "symbols_in_volume": [
   "dask.array.from_array",
   "h5py.File"
  ],
  "type": "function"
 },
 "pyspectral.rsr_reader": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "pyspectral.rsr_reader.RSRDataBaseClass": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyspectral.rsr_reader.RSRDataBaseClass.__init__": {
  "lineno": 52,
  "symbols_in_volume": [
   "pyspectral.config.get_config",
   "pyspectral.utils.RSR_DATA_VERSION",
   "pyspectral.utils.WAVE_LENGTH"
  ],
  "type": "function"
 },
 "pyspectral.rsr_reader.RSRDataBaseClass._get_rsr_data_version": {
  "lineno": 77,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join",
   "pyspectral.utils.RSR_DATA_VERSION_FILENAME"
  ],
  "type": "function"
 },
 "pyspectral.rsr_reader.RSRDataBaseClass.rsr_data_version_uptodate": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.rsr_reader.RelativeSpectralResponse": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyspectral.rsr_reader.RelativeSpectralResponse.__init__": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.rsr_reader.RelativeSpectralResponse._check_filename_exist": {
  "lineno": 159,
  "symbols_in_volume": [
   "glob.glob",
   "os.path.exists",
   "os.path.isfile",
   "os.path.join"
  ],
  "type": "function"
 },
 "pyspectral.rsr_reader.RelativeSpectralResponse._check_instrument": {
  "lineno": 123,
  "symbols_in_volume": [
   "pyspectral.utils.INSTRUMENTS.get"
  ],
  "type": "function"
 },
 "pyspectral.rsr_reader.RelativeSpectralResponse._get_filename": {
  "lineno": 133,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.expanduser",
   "os.path.isfile",
   "os.path.join",
   "pyspectral.utils.RSR_DATA_VERSION",
   "pyspectral.utils.download_rsr"
  ],
  "type": "function"
 },
 "pyspectral.rsr_reader.RelativeSpectralResponse.convert": {
  "lineno": 197,
  "symbols_in_volume": [
   "pyspectral.utils.WAVE_LENGTH",
   "pyspectral.utils.WAVE_NUMBER",
   "pyspectral.utils.convert2wavenumber",
   "pyspectral.utils.get_central_wave"
  ],
  "type": "function"
 },
 "pyspectral.rsr_reader.RelativeSpectralResponse.get_number_of_detectors4bandname": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.rsr_reader.RelativeSpectralResponse.get_relative_spectral_responses": {
  "lineno": 304,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.rsr_reader.RelativeSpectralResponse.integral": {
  "lineno": 188,
  "symbols_in_volume": [
   "numpy.trapz"
  ],
  "type": "function"
 },
 "pyspectral.rsr_reader.RelativeSpectralResponse.load": {
  "lineno": 177,
  "symbols_in_volume": [
   "h5py.File"
  ],
  "type": "function"
 },
 "pyspectral.rsr_reader.RelativeSpectralResponse.set_band_central_wavelength_per_detector": {
  "lineno": 295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.rsr_reader.RelativeSpectralResponse.set_band_names": {
  "lineno": 224,
  "symbols_in_volume": [
   "pyspectral.utils.convert2str"
  ],
  "type": "function"
 },
 "pyspectral.rsr_reader.RelativeSpectralResponse.set_band_responses_per_detector": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.rsr_reader.RelativeSpectralResponse.set_band_wavelengths_per_detector": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.rsr_reader.RelativeSpectralResponse.set_description": {
  "lineno": 219,
  "symbols_in_volume": [
   "pyspectral.utils.convert2str"
  ],
  "type": "function"
 },
 "pyspectral.rsr_reader.RelativeSpectralResponse.set_instrument": {
  "lineno": 229,
  "symbols_in_volume": [
   "pyspectral.utils.INSTRUMENTS.get",
   "pyspectral.utils.convert2str"
  ],
  "type": "function"
 },
 "pyspectral.rsr_reader.RelativeSpectralResponse.set_platform_name": {
  "lineno": 241,
  "symbols_in_volume": [
   "pyspectral.utils.convert2str"
  ],
  "type": "function"
 },
 "pyspectral.rsr_reader.check_and_download": {
  "lineno": 317,
  "symbols_in_volume": [
   "pyspectral.utils.download_rsr"
  ],
  "type": "function"
 },
 "pyspectral.rsr_reader.main": {
  "lineno": 332,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.solar": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "pkg_resources.resource_filename"
  ],
  "type": "module"
 },
 "pyspectral.solar.SolarIrradianceSpectrum": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyspectral.solar.SolarIrradianceSpectrum.__init__": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.solar.SolarIrradianceSpectrum._band_calculations": {
  "lineno": 140,
  "symbols_in_volume": [
   "numpy.greater_equal",
   "numpy.less_equal",
   "numpy.linspace",
   "numpy.logical_and",
   "numpy.repeat",
   "numpy.trapz",
   "scipy.interpolate.InterpolatedUnivariateSpline"
  ],
  "type": "function"
 },
 "pyspectral.solar.SolarIrradianceSpectrum._load": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.genfromtxt"
  ],
  "type": "function"
 },
 "pyspectral.solar.SolarIrradianceSpectrum.convert2wavenumber": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.solar.SolarIrradianceSpectrum.inband_solarflux": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.solar.SolarIrradianceSpectrum.inband_solarirradiance": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.solar.SolarIrradianceSpectrum.interpolate": {
  "lineno": 204,
  "symbols_in_volume": [
   "numpy.linspace",
   "scipy.interpolate.InterpolatedUnivariateSpline"
  ],
  "type": "function"
 },
 "pyspectral.solar.SolarIrradianceSpectrum.plot": {
  "lineno": 252,
  "symbols_in_volume": [
   "matplotlib.pyplot.show",
   "matplotlib.pyplot.subplots",
   "matplotlib.rcParams"
  ],
  "type": "function"
 },
 "pyspectral.solar.SolarIrradianceSpectrum.solar_constant": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.trapz"
  ],
  "type": "function"
 },
 "pyspectral.tests": {
  "lineno": null,
  "symbols_in_volume": [
   "os.environ.get",
   "sys.version_info",
   "unittest2.TextTestRunner"
  ],
  "type": "module"
 },
 "pyspectral.tests.data": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "module"
 },
 "pyspectral.tests.suite": {
  "lineno": 41,
  "symbols_in_volume": [
   "doctest.DocFileSuite",
   "doctest.DocTestSuite",
   "pyspectral.blackbody",
   "pyspectral.near_infrared_reflectance",
   "pyspectral.solar",
   "unittest2.TestSuite"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_atm_correction_ir": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.ma.array",
   "sys.version_info"
  ],
  "type": "module"
 },
 "pyspectral.tests.test_atm_correction_ir.TestAtmCorrection": {
  "lineno": 118,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "pyspectral.tests.test_atm_correction_ir.TestAtmCorrection.test_get_correction": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyspectral.atm_correction_ir.AtmosphericalCorrection"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_blackbody": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyspectral.tests.test_blackbody.CustomScheduler": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyspectral.tests.test_blackbody.CustomScheduler.__call__": {
  "lineno": 52,
  "symbols_in_volume": [
   "dask.get"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_blackbody.CustomScheduler.__init__": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.tests.test_blackbody.TestBlackbody": {
  "lineno": 61,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyspectral.tests.test_blackbody.TestBlackbody.test_blackbody": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isscalar",
   "numpy.ndarray",
   "pyspectral.blackbody.blackbody",
   "pyspectral.blackbody.blackbody_rad2temp"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_blackbody.TestBlackbody.test_blackbody_dask": {
  "lineno": 88,
  "symbols_in_volume": [
   "dask.array.Array",
   "dask.array.from_array",
   "dask.config.set",
   "pyspectral.blackbody.blackbody"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_blackbody.TestBlackbody.test_blackbody_wn": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.array",
   "pyspectral.blackbody.blackbody_wn",
   "pyspectral.blackbody.blackbody_wn_rad2temp",
   "pyspectral.tests.unittest_helpers.assertNumpyArraysEqual"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_blackbody.TestBlackbody.test_blackbody_wn_dask": {
  "lineno": 131,
  "symbols_in_volume": [
   "dask.array.Array",
   "dask.array.from_array",
   "dask.config.set",
   "numpy.array",
   "pyspectral.blackbody.blackbody_wn_rad2temp",
   "pyspectral.tests.unittest_helpers.assertNumpyArraysEqual"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_rad_tb_conversions": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "pyspectral.utils.get_central_wave",
   "sys.version_info"
  ],
  "type": "module"
 },
 "pyspectral.tests.test_rad_tb_conversions.RSRTestDataModis": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyspectral.tests.test_rad_tb_conversions.RSRTestDataModis.__init__": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.tests.test_rad_tb_conversions.TestRadTbConversions": {
  "lineno": 293,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "pyspectral.tests.test_rad_tb_conversions.TestRadTbConversions.setUp": {
  "lineno": 296,
  "symbols_in_volume": [
   "pyspectral.radiance_tb_conversion.RadTbConverter",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_rad_tb_conversions.TestRadTbConversions.test_get_bandname": {
  "lineno": 308,
  "symbols_in_volume": [
   "pyspectral.radiance_tb_conversion.RadTbConverter",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_rad_tb_conversions.TestRadTbConversions.test_rad2tb": {
  "lineno": 328,
  "symbols_in_volume": [
   "numpy.allclose"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_rad_tb_conversions.TestSeviriConversions": {
  "lineno": 235,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "pyspectral.tests.test_rad_tb_conversions.TestSeviriConversions.setUp": {
  "lineno": 238,
  "symbols_in_volume": [
   "pyspectral.radiance_tb_conversion.RadTbConverter",
   "pyspectral.radiance_tb_conversion.SeviriRadTbConverter",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_rad_tb_conversions.TestSeviriConversions.test_conversion_simple": {
  "lineno": 256,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.random",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_rad_tb_conversions.TestSeviriConversions.test_conversions_methods": {
  "lineno": 276,
  "symbols_in_volume": [
   "numpy.allclose"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_rad_tb_conversions.TestSeviriConversions.test_rad2tb": {
  "lineno": 251,
  "symbols_in_volume": [
   "numpy.allclose"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_rayleigh": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "sys.version_info"
  ],
  "type": "module"
 },
 "pyspectral.tests.test_rayleigh.RelativeSpectralResponseTestData": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyspectral.tests.test_rayleigh.RelativeSpectralResponseTestData.__init__": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_rayleigh.TestRayleigh": {
  "lineno": 93,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "pyspectral.tests.test_rayleigh.TestRayleigh.setUp": {
  "lineno": 96,
  "symbols_in_volume": [
   "dask.array.from_array",
   "pyspectral.rayleigh.Rayleigh",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_rayleigh.TestRayleigh.test_get_effective_wavelength": {
  "lineno": 113,
  "symbols_in_volume": [
   "pyspectral.rayleigh.BandFrequencyOutOfRange",
   "pyspectral.rayleigh.Rayleigh",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_rayleigh.TestRayleigh.test_get_reflectance": {
  "lineno": 166,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "pyspectral.tests.data.TEST_RAYLEIGH_AZID_COORD",
   "pyspectral.tests.data.TEST_RAYLEIGH_LUT",
   "pyspectral.tests.data.TEST_RAYLEIGH_SATZ_COORD",
   "pyspectral.tests.data.TEST_RAYLEIGH_SUNZ_COORD",
   "pyspectral.tests.data.TEST_RAYLEIGH_WVL_COORD",
   "pyspectral.utils.RSR_DATA_VERSION",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_rayleigh.TestRayleigh.test_get_reflectance_dask": {
  "lineno": 204,
  "symbols_in_volume": [
   "dask.array.Array",
   "dask.array.from_array",
   "numpy.allclose",
   "numpy.array",
   "pyspectral.tests.data.TEST_RAYLEIGH_AZID_COORD",
   "pyspectral.tests.data.TEST_RAYLEIGH_LUT",
   "pyspectral.tests.data.TEST_RAYLEIGH_SATZ_COORD",
   "pyspectral.tests.data.TEST_RAYLEIGH_SUNZ_COORD",
   "pyspectral.tests.data.TEST_RAYLEIGH_WVL_COORD",
   "pyspectral.utils.RSR_DATA_VERSION",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_rayleigh.TestRayleigh.test_get_reflectance_no_rsr": {
  "lineno": 288,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "pyspectral.rayleigh.Rayleigh",
   "pyspectral.tests.data.TEST_RAYLEIGH_AZID_COORD",
   "pyspectral.tests.data.TEST_RAYLEIGH_LUT",
   "pyspectral.tests.data.TEST_RAYLEIGH_SATZ_COORD",
   "pyspectral.tests.data.TEST_RAYLEIGH_SUNZ_COORD",
   "pyspectral.tests.data.TEST_RAYLEIGH_WVL_COORD",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_rayleigh.TestRayleigh.test_get_reflectance_numpy_dask": {
  "lineno": 246,
  "symbols_in_volume": [
   "dask.array.from_array",
   "numpy.allclose",
   "numpy.array",
   "numpy.ndarray",
   "pyspectral.tests.data.TEST_RAYLEIGH_AZID_COORD",
   "pyspectral.tests.data.TEST_RAYLEIGH_LUT",
   "pyspectral.tests.data.TEST_RAYLEIGH_SATZ_COORD",
   "pyspectral.tests.data.TEST_RAYLEIGH_SUNZ_COORD",
   "pyspectral.tests.data.TEST_RAYLEIGH_WVL_COORD",
   "pyspectral.utils.RSR_DATA_VERSION",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_rayleigh.TestRayleigh.test_rayleigh_init": {
  "lineno": 141,
  "symbols_in_volume": [
   "os.path.basename",
   "pyspectral.rayleigh.Rayleigh",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_reflectance": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "sys.version_info"
  ],
  "type": "module"
 },
 "pyspectral.tests.test_reflectance.TestReflectance": {
  "lineno": 102,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "pyspectral.tests.test_reflectance.TestReflectance.test_reflectance": {
  "lineno": 130,
  "symbols_in_volume": [
   "dask.array.from_array",
   "numpy.array",
   "numpy.isnan",
   "numpy.ma.masked_array",
   "numpy.testing.assert_allclose",
   "pyspectral.near_infrared_reflectance.Calculator",
   "pyspectral.near_infrared_reflectance.TERMINATOR_LIMIT",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_reflectance.TestReflectance.test_rsr_integral": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pyspectral.near_infrared_reflectance.Calculator",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_rsr_reader": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "sys.version_info"
  ],
  "type": "module"
 },
 "pyspectral.tests.test_rsr_reader.MyHdf5Mock": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyspectral.tests.test_rsr_reader.MyHdf5Mock.__init__": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.tests.test_rsr_reader.TestPopulateRSRObject": {
  "lineno": 181,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "pyspectral.tests.test_rsr_reader.TestPopulateRSRObject.setUp": {
  "lineno": 184,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_rsr_reader.TestPopulateRSRObject.test_create_rsr_instance": {
  "lineno": 234,
  "symbols_in_volume": [
   "pyspectral.rsr_reader.RelativeSpectralResponse",
   "pytest.raises",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_rsr_reader.TestPopulateRSRObject.test_set_band_central_wavelength_per_detector": {
  "lineno": 367,
  "symbols_in_volume": [
   "pyspectral.rsr_reader.RelativeSpectralResponse",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_rsr_reader.TestPopulateRSRObject.test_set_band_names": {
  "lineno": 350,
  "symbols_in_volume": [
   "pyspectral.rsr_reader.RelativeSpectralResponse",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_rsr_reader.TestPopulateRSRObject.test_set_band_responses_per_detector": {
  "lineno": 423,
  "symbols_in_volume": [
   "numpy.array",
   "pyspectral.rsr_reader.RelativeSpectralResponse",
   "pyspectral.tests.unittest_helpers.assertNumpyArraysEqual",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_rsr_reader.TestPopulateRSRObject.test_set_band_wavelengths_per_detector": {
  "lineno": 394,
  "symbols_in_volume": [
   "numpy.array",
   "pyspectral.rsr_reader.RelativeSpectralResponse",
   "pyspectral.tests.unittest_helpers.assertNumpyArraysEqual",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_rsr_reader.TestPopulateRSRObject.test_set_description": {
  "lineno": 253,
  "symbols_in_volume": [
   "pyspectral.rsr_reader.RelativeSpectralResponse",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_rsr_reader.TestPopulateRSRObject.test_set_instrument": {
  "lineno": 320,
  "symbols_in_volume": [
   "pyspectral.rsr_reader.RelativeSpectralResponse",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_rsr_reader.TestPopulateRSRObject.test_set_platform_name": {
  "lineno": 275,
  "symbols_in_volume": [
   "pyspectral.rsr_reader.RelativeSpectralResponse",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_rsr_reader.TestRsrReader": {
  "lineno": 90,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "pyspectral.tests.test_rsr_reader.TestRsrReader.test_convert": {
  "lineno": 132,
  "symbols_in_volume": [
   "numpy.allclose",
   "pyspectral.rsr_reader.RelativeSpectralResponse",
   "pyspectral.utils.RSR_DATA_VERSION",
   "pyspectral.utils.WAVE_NUMBER",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_rsr_reader.TestRsrReader.test_integral": {
  "lineno": 156,
  "symbols_in_volume": [
   "pyspectral.rsr_reader.RelativeSpectralResponse",
   "pyspectral.utils.RSR_DATA_VERSION",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_rsr_reader.TestRsrReader.test_rsr_response": {
  "lineno": 93,
  "symbols_in_volume": [
   "pyspectral.rsr_reader.RelativeSpectralResponse",
   "pyspectral.utils.RSR_DATA_VERSION",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_solarflux": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "module"
 },
 "pyspectral.tests.test_solarflux.TestSolarflux": {
  "lineno": 60,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyspectral.tests.test_solarflux.TestSolarflux.setUp": {
  "lineno": 63,
  "symbols_in_volume": [
   "pyspectral.solar.SolarIrradianceSpectrum",
   "pyspectral.solar.TOTAL_IRRADIANCE_SPECTRUM_2000ASTM"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_solarflux.TestSolarflux.test_interpolate": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.allclose"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_solarflux.TestSolarflux.test_read": {
  "lineno": 69,
  "symbols_in_volume": [
   "os.path.exists"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_solarflux.TestSolarflux.test_solar_flux": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.tests.test_utils": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "module"
 },
 "pyspectral.tests.test_utils.RsrTestData": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyspectral.tests.test_utils.RsrTestData.__init__": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_utils.TestUtils": {
  "lineno": 113,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyspectral.tests.test_utils.TestUtils.setUp": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.tests.test_utils.TestUtils.test_convert2wavenumber": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.allclose",
   "pyspectral.utils.convert2wavenumber"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_utils.TestUtils.test_get_bandname_from_wavelength": {
  "lineno": 131,
  "symbols_in_volume": [
   "pyspectral.utils.get_bandname_from_wavelength"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_utils.TestUtils.test_get_wave_range": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pyspectral.utils.get_wave_range"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_utils.TestUtils.test_sort_data": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "pyspectral.utils.sort_data"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_utils.test_bytes2string_bytes_string": {
  "lineno": 230,
  "symbols_in_volume": [
   "pyspectral.utils.bytes2string"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_utils.test_bytes2string_numpy_string": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.string_",
   "pyspectral.utils.bytes2string"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_utils.test_bytes2string_numpy_string_array": {
  "lineno": 250,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.string_",
   "pyspectral.utils.bytes2string"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_utils.test_bytes2string_pure_string": {
  "lineno": 237,
  "symbols_in_volume": [
   "pyspectral.utils.bytes2string"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_utils.test_np2str_byte_object": {
  "lineno": 184,
  "symbols_in_volume": [
   "numpy.string_",
   "pyspectral.utils.np2str"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_utils.test_np2str_multi_element": {
  "lineno": 207,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.string_",
   "pyspectral.utils.np2str",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_utils.test_np2str_pure_string": {
  "lineno": 223,
  "symbols_in_volume": [
   "pyspectral.utils.np2str"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_utils.test_np2str_scalar": {
  "lineno": 216,
  "symbols_in_volume": [
   "pyspectral.utils.np2str",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_utils.test_np2str_single_element_array": {
  "lineno": 191,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.string_",
   "pyspectral.utils.np2str"
  ],
  "type": "function"
 },
 "pyspectral.tests.test_utils.test_np2str_single_element_scalar": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.string_",
   "pyspectral.utils.np2str"
  ],
  "type": "function"
 },
 "pyspectral.tests.unittest_helpers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyspectral.tests.unittest_helpers.assertNumpyArraysEqual": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.allclose"
  ],
  "type": "function"
 },
 "pyspectral.utils": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "os.makedirs",
   "os.path.isdir",
   "os.path.join",
   "pyspectral.config.get_config",
   "tempfile.gettempdir"
  ],
  "type": "module"
 },
 "pyspectral.utils.NullHandler": {
  "lineno": 542,
  "symbols_in_volume": [
   "logging.Handler"
  ],
  "type": "class"
 },
 "pyspectral.utils.NullHandler.emit": {
  "lineno": 545,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.utils.bytes2string": {
  "lineno": 617,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.utils.convert2hdf5": {
  "lineno": 375,
  "symbols_in_volume": [
   "h5py.File",
   "numpy.isnan",
   "os.path.join"
  ],
  "type": "function"
 },
 "pyspectral.utils.convert2str": {
  "lineno": 584,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.utils.convert2wavenumber": {
  "lineno": 265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.utils.debug_on": {
  "lineno": 515,
  "symbols_in_volume": [
   "logging.DEBUG"
  ],
  "type": "function"
 },
 "pyspectral.utils.download_luts": {
  "lineno": 454,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.isdir",
   "os.path.join",
   "os.remove",
   "requests.get",
   "tarfile.open",
   "tqdm.tqdm"
  ],
  "type": "function"
 },
 "pyspectral.utils.download_rsr": {
  "lineno": 412,
  "symbols_in_volume": [
   "os.path.join",
   "os.remove",
   "requests.get",
   "tarfile.open",
   "tqdm.tqdm"
  ],
  "type": "function"
 },
 "pyspectral.utils.get_bandname_from_wavelength": {
  "lineno": 332,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.utils.get_central_wave": {
  "lineno": 310,
  "symbols_in_volume": [
   "numpy.trapz"
  ],
  "type": "function"
 },
 "pyspectral.utils.get_logger": {
  "lineno": 554,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "function"
 },
 "pyspectral.utils.get_wave_range": {
  "lineno": 562,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyspectral.utils.logging_off": {
  "lineno": 549,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "function"
 },
 "pyspectral.utils.logging_on": {
  "lineno": 523,
  "symbols_in_volume": [
   "logging.Formatter",
   "logging.StreamHandler",
   "logging.WARNING",
   "logging.getLogger"
  ],
  "type": "function"
 },
 "pyspectral.utils.np2str": {
  "lineno": 593,
  "symbols_in_volume": [
   "numpy.object_",
   "numpy.str_",
   "numpy.string_"
  ],
  "type": "function"
 },
 "pyspectral.utils.sort_data": {
  "lineno": 355,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.diff",
   "numpy.equal",
   "numpy.r_",
   "numpy.repeat"
  ],
  "type": "function"
 }
}