{
 "fairlearn": {
  "lineno": null,
  "symbols_in_volume": [
   "atexit.register",
   "logging.FileHandler",
   "logging.INFO",
   "logging.getLogger",
   "os.environ",
   "os.environ.get",
   "os.environ.keys",
   "os.makedirs",
   "os.path.dirname",
   "sys.stderr"
  ],
  "type": "module"
 },
 "fairlearn._input_validation": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "module"
 },
 "fairlearn._input_validation._compress_multiple_sensitive_features_into_single_column": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy.apply_along_axis",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "fairlearn._input_validation._validate_and_reformat_input": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.unique",
   "pandas.DataFrame",
   "pandas.Series",
   "sklearn.utils.validation.check_X_y",
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_consistent_length"
  ],
  "type": "function"
 },
 "fairlearn.close_handler": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.metrics._balanced_root_mean_squared_error": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.metrics._balanced_root_mean_squared_error._balanced_root_mean_squared_error": {
  "lineno": 13,
  "symbols_in_volume": [
   "math.sqrt",
   "numpy.array_equal",
   "numpy.ones",
   "numpy.unique",
   "numpy.zeros",
   "sklearn.metrics.mean_squared_error"
  ],
  "type": "function"
 },
 "fairlearn.metrics._disparities": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.metrics._disparities.demographic_parity_difference": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._disparities.demographic_parity_ratio": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._disparities.equalized_odds_difference": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._disparities.equalized_odds_ratio": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._extra_metrics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.metrics._extra_metrics._root_mean_squared_error": {
  "lineno": 44,
  "symbols_in_volume": [
   "sklearn.metrics.mean_squared_error"
  ],
  "type": "function"
 },
 "fairlearn.metrics._extra_metrics.false_negative_rate": {
  "lineno": 37,
  "symbols_in_volume": [
   "sklearn.metrics.confusion_matrix"
  ],
  "type": "function"
 },
 "fairlearn.metrics._extra_metrics.false_positive_rate": {
  "lineno": 30,
  "symbols_in_volume": [
   "sklearn.metrics.confusion_matrix"
  ],
  "type": "function"
 },
 "fairlearn.metrics._extra_metrics.true_negative_rate": {
  "lineno": 23,
  "symbols_in_volume": [
   "sklearn.metrics.confusion_matrix"
  ],
  "type": "function"
 },
 "fairlearn.metrics._extra_metrics.true_positive_rate": {
  "lineno": 16,
  "symbols_in_volume": [
   "sklearn.metrics.confusion_matrix"
  ],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.metrics._group_metric_set._create_group_metric_set": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set._process_predictions": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set._process_sensitive_features": {
  "lineno": 95,
  "symbols_in_volume": [
   "sklearn.preprocessing.LabelEncoder"
  ],
  "type": "function"
 },
 "fairlearn.metrics._input_manipulations": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.squeeze"
  ],
  "type": "function"
 },
 "fairlearn.metrics._mean_predictions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.metrics._mean_predictions._mean_overprediction": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.ones"
  ],
  "type": "function"
 },
 "fairlearn.metrics._mean_predictions._mean_underprediction": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.ones"
  ],
  "type": "function"
 },
 "fairlearn.metrics._mean_predictions.mean_prediction": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.ones"
  ],
  "type": "function"
 },
 "fairlearn.metrics._metrics_engine": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.metrics.accuracy_score",
   "sklearn.metrics.balanced_accuracy_score",
   "sklearn.metrics.confusion_matrix",
   "sklearn.metrics.mean_absolute_error",
   "sklearn.metrics.mean_squared_error",
   "sklearn.metrics.precision_score",
   "sklearn.metrics.r2_score",
   "sklearn.metrics.recall_score",
   "sklearn.metrics.roc_auc_score",
   "sklearn.metrics.zero_one_loss"
  ],
  "type": "module"
 },
 "fairlearn.metrics._metrics_engine._DerivedMetricCallable": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.metrics._metrics_engine._DerivedMetricCallable.__call__": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._metrics_engine._DerivedMetricCallable.__init__": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._metrics_engine._DerivedMetricCallable.__repr__": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._metrics_engine._MetricGroupSummaryCallable": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.metrics._metrics_engine._MetricGroupSummaryCallable.__call__": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._metrics_engine._MetricGroupSummaryCallable.__init__": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._metrics_engine._MetricGroupSummaryCallable.__repr__": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._metrics_engine._check_array_sizes": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._metrics_engine._check_metric_params": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._metrics_engine._derive_metrics": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._metrics_engine._function_name": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._metrics_engine.difference_from_summary": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._metrics_engine.group_max_from_summary": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._metrics_engine.group_min_from_summary": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._metrics_engine.group_summary": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.unique",
   "sklearn.utils.Bunch"
  ],
  "type": "function"
 },
 "fairlearn.metrics._metrics_engine.make_derived_metric": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._metrics_engine.make_metric_group_summary": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._metrics_engine.ratio_from_summary": {
  "lineno": 222,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "fairlearn.metrics._selection_rate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.metrics._selection_rate.selection_rate": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.dot",
   "numpy.ones",
   "numpy.squeeze"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.postprocessing._constants": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.postprocessing._interpolated_prediction": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "fairlearn.postprocessing._interpolated_prediction.InterpolatedPredictor": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.postprocessing._interpolated_prediction.InterpolatedPredictor.__init__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._interpolated_prediction.InterpolatedPredictor.__repr__": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._interpolated_prediction.InterpolatedPredictor.predict": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._plotting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.postprocessing._plotting._get_debug_color": {
  "lineno": 10,
  "symbols_in_volume": [
   "matplotlib.cm.ScalarMappable"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._plotting._plot_curve": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._plotting._plot_overlap": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._plotting._plot_solution": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._plotting._raise_if_not_threshold_optimizer": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._plotting.plot_threshold_optimizer": {
  "lineno": 59,
  "symbols_in_volume": [
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.show"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._roc_curve_utilities": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.postprocessing._roc_curve_utilities._calculate_roc_points": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._roc_curve_utilities._filter_points_to_get_convex_hull": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._roc_curve_utilities._get_counts": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._roc_curve_utilities._get_roc": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._roc_curve_utilities._get_scores_labels_and_counts": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._roc_curve_utilities._interpolate_curve": {
  "lineno": 72,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_operation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation.__init__": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation.__repr__": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation.get_predictor_from_operation": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation.operator": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation.threshold": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer": {
  "lineno": 46,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClassifierMixin",
   "sklearn.base.MetaEstimatorMixin"
  ],
  "type": "class"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer.__init__": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer._pmf_predict": {
  "lineno": 159,
  "symbols_in_volume": [
   "fairlearn._input_validation._validate_and_reformat_input",
   "numpy.array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer._threshold_optimization_demographic_parity": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.linspace"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer._threshold_optimization_equalized_odds": {
  "lineno": 285,
  "symbols_in_volume": [
   "numpy.amin",
   "numpy.linspace",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer.fit": {
  "lineno": 77,
  "symbols_in_volume": [
   "fairlearn._input_validation._validate_and_reformat_input",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series",
   "sklearn.clone",
   "sklearn.exceptions.NotFittedError",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer.predict": {
  "lineno": 131,
  "symbols_in_volume": [
   "fairlearn._input_validation._validate_and_reformat_input",
   "numpy.random.rand",
   "random.seed",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer._reformat_and_group_data": {
  "lineno": 409,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer._reformat_data_into_dict": {
  "lineno": 448,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer._vectorized_prediction": {
  "lineno": 386,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "fairlearn.reductions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._exponentiated_gradient": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._exponentiated_gradient._constants": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._GapResult": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._GapResult.__init__": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._GapResult.gap": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian.__init__": {
  "lineno": 41,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pickle.dumps"
  ],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian._call_oracle": {
  "lineno": 137,
  "symbols_in_volume": [
   "numpy.unique",
   "pickle.loads",
   "sklearn.dummy.DummyClassifier",
   "time.time"
  ],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian._eval": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian.best_h": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.PINF"
  ],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian.best_h.h": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian.eval_gap": {
  "lineno": 97,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian.solve_linprog": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.ones",
   "numpy.zeros",
   "pandas.Series",
   "scipy.optimize.linprog"
  ],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient": {
  "lineno": 18,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.MetaEstimatorMixin"
  ],
  "type": "class"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient.__init__": {
  "lineno": 50,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient._pmf_predict": {
  "lineno": 210,
  "symbols_in_volume": [
   "numpy.concatenate",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient.fit": {
  "lineno": 70,
  "symbols_in_volume": [
   "fairlearn._input_validation._validate_and_reformat_input",
   "fairlearn.reductions._moments.ClassificationMoment",
   "numpy.PINF",
   "numpy.exp",
   "numpy.sqrt",
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient.predict": {
  "lineno": 194,
  "symbols_in_volume": [
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "fairlearn.reductions._grid_search": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._grid_search._grid_generator": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "fairlearn.reductions._grid_search._grid_generator._GridGenerator": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._grid_search._grid_generator._GridGenerator.__init__": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.floor",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.reductions._grid_search._grid_generator._GridGenerator.accumulate_integer_grid": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._grid_search._grid_generator._GridGenerator.build_integer_grid": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch": {
  "lineno": 24,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.MetaEstimatorMixin"
  ],
  "type": "class"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.__init__": {
  "lineno": 64,
  "symbols_in_volume": [
   "fairlearn.reductions._moments.Moment",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.fit": {
  "lineno": 100,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn._input_validation._KW_SENSITIVE_FEATURES",
   "fairlearn._input_validation._validate_and_reformat_input",
   "fairlearn.reductions._moments.ClassificationMoment",
   "numpy.unique",
   "sklearn.dummy.DummyClassifier",
   "time.time"
  ],
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.fit.loss_fct": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.fit.predict_fct": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.predict": {
  "lineno": 203,
  "symbols_in_volume": [
   "fairlearn._NO_PREDICT_BEFORE_FIT",
   "sklearn.exceptions.NotFittedError"
  ],
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.predict_proba": {
  "lineno": 216,
  "symbols_in_volume": [
   "fairlearn._NO_PREDICT_BEFORE_FIT",
   "sklearn.exceptions.NotFittedError"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._moments.bounded_group_loss": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._moments.bounded_group_loss.AbsoluteLoss": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.AbsoluteLoss.__init__": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.abs"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.AbsoluteLoss.eval": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.clip"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.AverageLossMoment": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.AverageLossMoment.__init__": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.__init__": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.default_objective": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.gamma": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.load_data": {
  "lineno": 22,
  "symbols_in_volume": [
   "fairlearn._input_validation._KW_SENSITIVE_FEATURES",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.project_lambda": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.signed_weights": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.GroupLossMoment": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.GroupLossMoment.__init__": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.SquareLoss": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.SquareLoss.__init__": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.SquareLoss.eval": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.clip"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ZeroOneLoss": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ZeroOneLoss.__init__": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.conditional_selection_rate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.ConditionalSelectionRate": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.ConditionalSelectionRate.__init__": {
  "lineno": 39,
  "symbols_in_volume": [
   "fairlearn._input_validation._MESSAGE_RATIO_NOT_IN_RANGE"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.ConditionalSelectionRate.default_objective": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.ConditionalSelectionRate.gamma": {
  "lineno": 99,
  "symbols_in_volume": [
   "pandas.concat"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.ConditionalSelectionRate.load_data": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.ones",
   "numpy.vstack",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.ConditionalSelectionRate.project_lambda": {
  "lineno": 120,
  "symbols_in_volume": [
   "pandas.concat"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.ConditionalSelectionRate.signed_weights": {
  "lineno": 137,
  "symbols_in_volume": [
   "pandas.isna"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.DemographicParity": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.DemographicParity.load_data": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.EqualizedOdds": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.EqualizedOdds.load_data": {
  "lineno": 255,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.ErrorRateRatio": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.ErrorRateRatio.load_data": {
  "lineno": 285,
  "symbols_in_volume": [
   "numpy.vstack"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.TruePositiveRateDifference": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.TruePositiveRateDifference.load_data": {
  "lineno": 220,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.error_rate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._moments.error_rate.ErrorRate": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.error_rate.ErrorRate.gamma": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.error_rate.ErrorRate.load_data": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.error_rate.ErrorRate.project_lambda": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.error_rate.ErrorRate.signed_weights": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.moment": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._moments.moment.ClassificationMoment": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.moment.LossMoment": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.moment.LossMoment.__init__": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.moment.Moment.__init__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment.gamma": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment.load_data": {
  "lineno": 28,
  "symbols_in_volume": [
   "fairlearn._input_validation._KW_SENSITIVE_FEATURES",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment.project_lambda": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment.signed_weights": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment.total_samples": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.show_versions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.show_versions._get_deps_info": {
  "lineno": 28,
  "symbols_in_volume": [
   "importlib.import_module",
   "sys.modules"
  ],
  "type": "function"
 },
 "fairlearn.show_versions._get_deps_info.get_version": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.show_versions._get_sys_info": {
  "lineno": 11,
  "symbols_in_volume": [
   "platform.platform",
   "sys.executable",
   "sys.version.replace"
  ],
  "type": "function"
 },
 "fairlearn.show_versions.show_versions": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.widget": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.widget._fairlearn_dashboard": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard.__init__": {
  "lineno": 51,
  "symbols_in_volume": [
   "IPython.display.display",
   "fairlearn.metrics._balanced_root_mean_squared_error_group_summary",
   "fairlearn.metrics._mean_overprediction_group_summary",
   "fairlearn.metrics._mean_underprediction_group_summary",
   "fairlearn.metrics._root_mean_squared_error_group_summary",
   "fairlearn.metrics.accuracy_score_group_summary",
   "fairlearn.metrics.false_negative_rate_group_summary",
   "fairlearn.metrics.false_positive_rate_group_summary",
   "fairlearn.metrics.mean_absolute_error_group_summary",
   "fairlearn.metrics.mean_prediction_group_summary",
   "fairlearn.metrics.mean_squared_error_group_summary",
   "fairlearn.metrics.precision_score_group_summary",
   "fairlearn.metrics.r2_score_group_summary",
   "fairlearn.metrics.recall_score_group_summary",
   "fairlearn.metrics.roc_auc_score_group_summary",
   "fairlearn.metrics.selection_rate_group_summary",
   "fairlearn.metrics.true_negative_rate_group_summary",
   "fairlearn.metrics.zero_one_loss_group_summary",
   "numpy.shape"
  ],
  "type": "function"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard._convert_to_list": {
  "lineno": 231,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard._on_request": {
  "lineno": 194,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard._sanitize_data_shape": {
  "lineno": 224,
  "symbols_in_volume": [
   "numpy.shape"
  ],
  "type": "function"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard._show": {
  "lineno": 221,
  "symbols_in_volume": [
   "IPython.display.display"
  ],
  "type": "function"
 },
 "fairlearn.widget._fairlearn_widget": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.widget._fairlearn_widget.FairlearnWidget": {
  "lineno": 10,
  "symbols_in_volume": [
   "ipywidgets.DOMWidget",
   "ipywidgets.register",
   "traitlets.Dict",
   "traitlets.Unicode"
  ],
  "type": "class"
 },
 "fairlearn.widget._jupyter_nbextension_paths": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.notebooks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.notebooks.test_notebooks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.notebooks.test_notebooks.ScrapSpec": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.notebooks.test_notebooks.ScrapSpec.__init__": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.notebooks.test_notebooks.ScrapSpec.code": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.notebooks.test_notebooks.ScrapSpec.expected": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.notebooks.test_notebooks.append_scrapbook_commands": {
  "lineno": 34,
  "symbols_in_volume": [
   "nbformat.NO_CONVERT",
   "nbformat.read",
   "nbformat.v4.new_code_cell",
   "nbformat.write"
  ],
  "type": "function"
 },
 "test.notebooks.test_notebooks.assay_one_notebook": {
  "lineno": 53,
  "symbols_in_volume": [
   "papermill.execute_notebook",
   "scrapbook.read_notebook"
  ],
  "type": "function"
 },
 "test.notebooks.test_notebooks.test_binary_classification_on_compas_dataset": {
  "lineno": 106,
  "symbols_in_volume": [
   "pytest.approx",
   "pytest.mark.notebooks"
  ],
  "type": "function"
 },
 "test.notebooks.test_notebooks.test_binary_classification_with_the_uci_credit_card_default_dataset": {
  "lineno": 138,
  "symbols_in_volume": [
   "pytest.mark.notebooks"
  ],
  "type": "function"
 },
 "test.notebooks.test_notebooks.test_grid_search_for_binary_classification": {
  "lineno": 92,
  "symbols_in_volume": [
   "pytest.approx",
   "pytest.mark.notebooks"
  ],
  "type": "function"
 },
 "test.notebooks.test_notebooks.test_grid_search_with_census_data": {
  "lineno": 119,
  "symbols_in_volume": [
   "pytest.mark.notebooks"
  ],
  "type": "function"
 },
 "test.notebooks.test_notebooks.test_group_metrics_notebook": {
  "lineno": 79,
  "symbols_in_volume": [
   "pytest.mark.notebooks"
  ],
  "type": "function"
 },
 "test.notebooks.test_notebooks.test_mitigating_disparities_in_ranking_from_binary_data": {
  "lineno": 127,
  "symbols_in_volume": [
   "pytest.approx",
   "pytest.mark.notebooks"
  ],
  "type": "function"
 },
 "test.unit": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.conftest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.conftest.pytest_collection_modifyitems": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.conftest.pytest_configure": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.constants": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.input_convertors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.input_convertors._map_into_single_column": {
  "lineno": 97,
  "symbols_in_volume": [
   "fairlearn._input_validation._compress_multiple_sensitive_features_into_single_column",
   "numpy.array"
  ],
  "type": "function"
 },
 "test.unit.input_convertors.ensure_dataframe": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.input_convertors.ensure_list": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.input_convertors.ensure_list_1d": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.input_convertors.ensure_ndarray": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.input_convertors.ensure_ndarray_2d": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.expand_dims"
  ],
  "type": "function"
 },
 "test.unit.input_convertors.ensure_series": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.metrics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.sample_loader": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.INFO",
   "logging.getLogger",
   "os.path.dirname",
   "os.path.realpath"
  ],
  "type": "module"
 },
 "test.unit.metrics.sample_loader.load_sample_dashboard": {
  "lineno": 15,
  "symbols_in_volume": [
   "json.load",
   "os.path.join"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.test_all_correct": {
  "lineno": 10,
  "symbols_in_volume": [
   "fairlearn.metrics._balanced_root_mean_squared_error"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.test_all_incorrect": {
  "lineno": 19,
  "symbols_in_volume": [
   "fairlearn.metrics._balanced_root_mean_squared_error"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.test_probability_predict": {
  "lineno": 41,
  "symbols_in_volume": [
   "fairlearn.metrics._balanced_root_mean_squared_error"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.test_weighted": {
  "lineno": 28,
  "symbols_in_volume": [
   "fairlearn.metrics._balanced_root_mean_squared_error",
   "math.sqrt"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.test_y_true_not_0_1": {
  "lineno": 53,
  "symbols_in_volume": [
   "fairlearn.metrics._balanced_root_mean_squared_error",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_create_group_metric_set": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_create_group_metric_set.TestCreateGroupMetricSet": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_create_group_metric_set.TestCreateGroupMetricSet.test_round_trip_1p_1f": {
  "lineno": 133,
  "symbols_in_volume": [
   "fairlearn.metrics._group_metric_set._create_group_metric_set",
   "pytest.mark.parametrize",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_create_group_metric_set.TestCreateGroupMetricSet.test_round_trip_2p_3f": {
  "lineno": 153,
  "symbols_in_volume": [
   "fairlearn.metrics._group_metric_set._create_group_metric_set",
   "pytest.mark.parametrize",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_create_group_metric_set.TestCreateGroupMetricSet.test_specific_metrics": {
  "lineno": 179,
  "symbols_in_volume": [
   "fairlearn.metrics._group_metric_set._create_group_metric_set",
   "fairlearn.metrics.accuracy_score_group_summary",
   "fairlearn.metrics.roc_auc_score_group_summary"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_create_group_metric_set.TestProcessPredictions": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_create_group_metric_set.TestProcessPredictions.test_results_are_sorted": {
  "lineno": 111,
  "symbols_in_volume": [
   "fairlearn.metrics._group_metric_set._process_predictions",
   "pytest.mark.parametrize",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_create_group_metric_set.TestProcessPredictions.test_smoke": {
  "lineno": 96,
  "symbols_in_volume": [
   "fairlearn.metrics._group_metric_set._process_predictions",
   "pytest.mark.parametrize",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_create_group_metric_set.TestProcessSensitiveFeatures": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_create_group_metric_set.TestProcessSensitiveFeatures.test_result_is_sorted": {
  "lineno": 81,
  "symbols_in_volume": [
   "fairlearn.metrics._group_metric_set._process_sensitive_features"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_create_group_metric_set.TestProcessSensitiveFeatures.test_smoke": {
  "lineno": 55,
  "symbols_in_volume": [
   "fairlearn.metrics._group_metric_set._process_sensitive_features",
   "pytest.mark.parametrize",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_create_group_metric_set.TestProcessSensitiveFeatures.test_smoke_string_groups": {
  "lineno": 68,
  "symbols_in_volume": [
   "fairlearn.metrics._group_metric_set._process_sensitive_features",
   "pytest.mark.parametrize",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_create_group_metric_set.validate_dashboard_dictionary": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_extra_metrics.test_fnr_all_correct": {
  "lineno": 45,
  "symbols_in_volume": [
   "fairlearn.metrics.false_negative_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_fnr_none_correct": {
  "lineno": 53,
  "symbols_in_volume": [
   "fairlearn.metrics.false_negative_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_fnr_some_correct": {
  "lineno": 69,
  "symbols_in_volume": [
   "fairlearn.metrics.false_negative_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_fnr_with_false_positive": {
  "lineno": 61,
  "symbols_in_volume": [
   "fairlearn.metrics.false_negative_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_fpr_all_correct": {
  "lineno": 80,
  "symbols_in_volume": [
   "fairlearn.metrics.false_positive_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_fpr_none_correct": {
  "lineno": 88,
  "symbols_in_volume": [
   "fairlearn.metrics.false_positive_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_fpr_some_correct": {
  "lineno": 96,
  "symbols_in_volume": [
   "fairlearn.metrics.false_positive_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_tnr_all_correct": {
  "lineno": 10,
  "symbols_in_volume": [
   "fairlearn.metrics.true_negative_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_tnr_none_correct": {
  "lineno": 18,
  "symbols_in_volume": [
   "fairlearn.metrics.true_negative_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_tnr_some_correct": {
  "lineno": 26,
  "symbols_in_volume": [
   "fairlearn.metrics.true_negative_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_tnr_some_correct_with_false_negative": {
  "lineno": 34,
  "symbols_in_volume": [
   "fairlearn.metrics.true_negative_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers": {
  "lineno": null,
  "symbols_in_volume": [
   "fairlearn.metrics.accuracy_score_group_summary",
   "fairlearn.metrics.confusion_matrix_group_summary",
   "fairlearn.metrics.mean_absolute_error_group_summary",
   "fairlearn.metrics.mean_squared_error_group_summary",
   "fairlearn.metrics.precision_score_group_summary",
   "fairlearn.metrics.r2_score_group_summary",
   "fairlearn.metrics.recall_score_group_summary",
   "fairlearn.metrics.roc_auc_score_group_summary",
   "fairlearn.metrics.zero_one_loss_group_summary",
   "sklearn.metrics.accuracy_score",
   "sklearn.metrics.confusion_matrix",
   "sklearn.metrics.mean_absolute_error",
   "sklearn.metrics.mean_squared_error",
   "sklearn.metrics.precision_score",
   "sklearn.metrics.r2_score",
   "sklearn.metrics.recall_score",
   "sklearn.metrics.roc_auc_score",
   "sklearn.metrics.zero_one_loss"
  ],
  "type": "module"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_accuracy_score_unnormalized": {
  "lineno": 105,
  "symbols_in_volume": [
   "fairlearn.metrics.accuracy_score_group_summary",
   "sklearn.metrics.accuracy_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_confusion_matrix_labels": {
  "lineno": 116,
  "symbols_in_volume": [
   "fairlearn.metrics.confusion_matrix_group_summary",
   "numpy.array_equal",
   "sklearn.metrics.confusion_matrix"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_mean_squared_error_multioutput_list_ndarray": {
  "lineno": 223,
  "symbols_in_volume": [
   "fairlearn.metrics.mean_squared_error_group_summary",
   "numpy.array_equal",
   "numpy.random.rand",
   "numpy.unique",
   "sklearn.metrics.mean_squared_error"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_mean_squared_error_multioutput_single_ndarray": {
  "lineno": 193,
  "symbols_in_volume": [
   "fairlearn.metrics.mean_squared_error_group_summary",
   "numpy.array_equal",
   "numpy.random.rand",
   "sklearn.metrics.mean_squared_error"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_precision_score_pos_label": {
  "lineno": 136,
  "symbols_in_volume": [
   "fairlearn.metrics.precision_score_group_summary",
   "numpy.array_equal",
   "sklearn.metrics.precision_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_precision_score_ternary": {
  "lineno": 128,
  "symbols_in_volume": [
   "fairlearn.metrics.precision_score_group_summary",
   "numpy.array_equal",
   "sklearn.metrics.precision_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_r2_score_multioutput": {
  "lineno": 206,
  "symbols_in_volume": [
   "fairlearn.metrics.r2_score_group_summary",
   "numpy.array_equal",
   "numpy.asarray",
   "numpy.random.rand",
   "numpy.unique",
   "sklearn.metrics.r2_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_recall_score_pos_label": {
  "lineno": 154,
  "symbols_in_volume": [
   "fairlearn.metrics.recall_score_group_summary",
   "numpy.array_equal",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_recall_score_ternary": {
  "lineno": 146,
  "symbols_in_volume": [
   "fairlearn.metrics.recall_score_group_summary",
   "numpy.array_equal",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_roc_auc_score_average": {
  "lineno": 164,
  "symbols_in_volume": [
   "fairlearn.metrics.roc_auc_score_group_summary",
   "sklearn.metrics.roc_auc_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_roc_auc_score_max_fpr": {
  "lineno": 172,
  "symbols_in_volume": [
   "fairlearn.metrics.roc_auc_score_group_summary",
   "sklearn.metrics.roc_auc_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_zero_one_loss_unnormalized": {
  "lineno": 182,
  "symbols_in_volume": [
   "fairlearn.metrics.zero_one_loss_group_summary",
   "sklearn.metrics.zero_one_loss"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_metric_unweighted": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.array_equal",
   "numpy.ndarray",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_metric_weighted": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.array_equal",
   "numpy.ndarray",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_metric_weighted_ternary": {
  "lineno": 87,
  "symbols_in_volume": [
   "numpy.array_equal",
   "numpy.ndarray",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArray1D": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArray1D.test_2d_raises_exception": {
  "lineno": 84,
  "symbols_in_volume": [
   "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArray1D.test_simple_list": {
  "lineno": 53,
  "symbols_in_volume": [
   "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArray1D.test_simple_nested_list": {
  "lineno": 64,
  "symbols_in_volume": [
   "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArray1D.test_simple_transposed_list": {
  "lineno": 74,
  "symbols_in_volume": [
   "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArrayAndSqueeze": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArrayAndSqueeze.test_multi_columns": {
  "lineno": 32,
  "symbols_in_volume": [
   "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArrayAndSqueeze.test_multi_rows": {
  "lineno": 22,
  "symbols_in_volume": [
   "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArrayAndSqueeze.test_simple_list": {
  "lineno": 11,
  "symbols_in_volume": [
   "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArrayAndSqueeze.test_single_element": {
  "lineno": 42,
  "symbols_in_volume": [
   "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_overprediction_unweighted": {
  "lineno": 45,
  "symbols_in_volume": [
   "fairlearn.metrics._mean_overprediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_overprediction_unweighted_single": {
  "lineno": 54,
  "symbols_in_volume": [
   "fairlearn.metrics._mean_overprediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_overprediction_weighted": {
  "lineno": 63,
  "symbols_in_volume": [
   "fairlearn.metrics._mean_overprediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_overprediction_weighted_single": {
  "lineno": 73,
  "symbols_in_volume": [
   "fairlearn.metrics._mean_overprediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_prediction_single": {
  "lineno": 16,
  "symbols_in_volume": [
   "fairlearn.metrics.mean_prediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_prediction_unweighted": {
  "lineno": 7,
  "symbols_in_volume": [
   "fairlearn.metrics.mean_prediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_prediction_weighted": {
  "lineno": 25,
  "symbols_in_volume": [
   "fairlearn.metrics.mean_prediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_prediction_weighted_single": {
  "lineno": 35,
  "symbols_in_volume": [
   "fairlearn.metrics.mean_prediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_underprediction_unweighted": {
  "lineno": 83,
  "symbols_in_volume": [
   "fairlearn.metrics._mean_underprediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_underprediction_unweighted_single": {
  "lineno": 92,
  "symbols_in_volume": [
   "fairlearn.metrics._mean_underprediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_underprediction_weighted": {
  "lineno": 101,
  "symbols_in_volume": [
   "fairlearn.metrics._mean_underprediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_underprediction_weighted_single": {
  "lineno": 111,
  "symbols_in_volume": [
   "fairlearn.metrics._mean_underprediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_metrics_engine.TestGroupSummary": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_metrics_engine.TestGroupSummary.test_groups_only_one_element": {
  "lineno": 231,
  "symbols_in_volume": [
   "fairlearn.metrics.difference_from_summary",
   "fairlearn.metrics.group_max_from_summary",
   "fairlearn.metrics.group_min_from_summary",
   "fairlearn.metrics.group_summary",
   "fairlearn.metrics.ratio_from_summary"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestGroupSummary.test_groups_only_one_element.sum_lengths": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestGroupSummary.test_matrix_metric": {
  "lineno": 69,
  "symbols_in_volume": [
   "fairlearn.metrics.group_summary",
   "numpy.array_equal",
   "numpy.ones",
   "pytest.mark.parametrize",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestGroupSummary.test_matrix_metric_other_properties": {
  "lineno": 87,
  "symbols_in_volume": [
   "fairlearn.metrics.difference_from_summary",
   "fairlearn.metrics.group_max_from_summary",
   "fairlearn.metrics.group_min_from_summary",
   "fairlearn.metrics.group_summary",
   "fairlearn.metrics.ratio_from_summary",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestGroupSummary.test_metric_results_zero": {
  "lineno": 193,
  "symbols_in_volume": [
   "fairlearn.metrics.difference_from_summary",
   "fairlearn.metrics.group_max_from_summary",
   "fairlearn.metrics.group_min_from_summary",
   "fairlearn.metrics.group_summary",
   "fairlearn.metrics.ratio_from_summary"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestGroupSummary.test_metric_results_zero.zero_results": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestGroupSummary.test_negative_results": {
  "lineno": 175,
  "symbols_in_volume": [
   "fairlearn.metrics.difference_from_summary",
   "fairlearn.metrics.group_max_from_summary",
   "fairlearn.metrics.group_min_from_summary",
   "fairlearn.metrics.group_summary",
   "fairlearn.metrics.ratio_from_summary",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestGroupSummary.test_negative_results.negative_results": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestGroupSummary.test_single_element_input": {
  "lineno": 213,
  "symbols_in_volume": [
   "fairlearn.metrics.difference_from_summary",
   "fairlearn.metrics.group_max_from_summary",
   "fairlearn.metrics.group_min_from_summary",
   "fairlearn.metrics.group_summary",
   "fairlearn.metrics.ratio_from_summary"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestGroupSummary.test_single_element_input.sum_lengths": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestGroupSummary.test_smoke": {
  "lineno": 27,
  "symbols_in_volume": [
   "fairlearn.metrics.difference_from_summary",
   "fairlearn.metrics.group_max_from_summary",
   "fairlearn.metrics.group_min_from_summary",
   "fairlearn.metrics.group_summary",
   "fairlearn.metrics.ratio_from_summary",
   "pytest.approx",
   "pytest.mark.parametrize",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestGroupSummary.test_string_groups": {
  "lineno": 46,
  "symbols_in_volume": [
   "fairlearn.metrics.difference_from_summary",
   "fairlearn.metrics.group_max_from_summary",
   "fairlearn.metrics.group_min_from_summary",
   "fairlearn.metrics.group_summary",
   "fairlearn.metrics.ratio_from_summary",
   "pytest.approx",
   "pytest.mark.parametrize",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestGroupSummary.test_true_group_length_mismatch": {
  "lineno": 145,
  "symbols_in_volume": [
   "fairlearn.metrics.group_summary",
   "pytest.mark.parametrize",
   "pytest.raises",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestGroupSummary.test_true_predict_length_mismatch": {
  "lineno": 130,
  "symbols_in_volume": [
   "fairlearn.metrics.group_summary",
   "pytest.mark.parametrize",
   "pytest.raises",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestGroupSummary.test_true_weight_length_mismatch": {
  "lineno": 160,
  "symbols_in_volume": [
   "fairlearn.metrics.group_summary",
   "pytest.mark.parametrize",
   "pytest.raises",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestGroupSummary.test_with_weights": {
  "lineno": 107,
  "symbols_in_volume": [
   "fairlearn.metrics.difference_from_summary",
   "fairlearn.metrics.group_max_from_summary",
   "fairlearn.metrics.group_min_from_summary",
   "fairlearn.metrics.group_summary",
   "fairlearn.metrics.ratio_from_summary",
   "pytest.approx",
   "pytest.mark.parametrize",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMakeDerivedMetric": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_metrics_engine.TestMakeDerivedMetric.test_keys_and_weights": {
  "lineno": 315,
  "symbols_in_volume": [
   "fairlearn.metrics.difference_from_summary",
   "fairlearn.metrics.group_max_from_summary",
   "fairlearn.metrics.group_min_from_summary",
   "fairlearn.metrics.make_derived_metric",
   "fairlearn.metrics.make_metric_group_summary",
   "fairlearn.metrics.ratio_from_summary",
   "pytest.approx",
   "pytest.mark.parametrize",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMakeDerivedMetric.test_smoke": {
  "lineno": 295,
  "symbols_in_volume": [
   "fairlearn.metrics.difference_from_summary",
   "fairlearn.metrics.group_max_from_summary",
   "fairlearn.metrics.group_min_from_summary",
   "fairlearn.metrics.make_derived_metric",
   "fairlearn.metrics.make_metric_group_summary",
   "fairlearn.metrics.ratio_from_summary",
   "pytest.approx"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMakeMetricGroupSummary": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_metrics_engine.TestMakeMetricGroupSummary.test_keys_and_weights": {
  "lineno": 266,
  "symbols_in_volume": [
   "fairlearn.metrics.difference_from_summary",
   "fairlearn.metrics.group_max_from_summary",
   "fairlearn.metrics.group_min_from_summary",
   "fairlearn.metrics.make_metric_group_summary",
   "fairlearn.metrics.ratio_from_summary",
   "pytest.approx",
   "pytest.mark.parametrize",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMakeMetricGroupSummary.test_smoke": {
  "lineno": 250,
  "symbols_in_volume": [
   "fairlearn.metrics.difference_from_summary",
   "fairlearn.metrics.group_max_from_summary",
   "fairlearn.metrics.group_min_from_summary",
   "fairlearn.metrics.make_metric_group_summary",
   "fairlearn.metrics.ratio_from_summary",
   "pytest.approx"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.mock_func": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.mock_func_matrix_return": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.mock_func_weight": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.multiply",
   "numpy.sum"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine_dicts": {
  "lineno": null,
  "symbols_in_volume": [
   "fairlearn.metrics._balanced_root_mean_squared_error_group_summary",
   "fairlearn.metrics._mean_overprediction_group_summary",
   "fairlearn.metrics._mean_underprediction_group_summary",
   "fairlearn.metrics._root_mean_squared_error_group_summary",
   "fairlearn.metrics.accuracy_score_difference",
   "fairlearn.metrics.accuracy_score_group_min",
   "fairlearn.metrics.accuracy_score_group_summary",
   "fairlearn.metrics.accuracy_score_ratio",
   "fairlearn.metrics.balanced_accuracy_score_group_min",
   "fairlearn.metrics.balanced_accuracy_score_group_summary",
   "fairlearn.metrics.confusion_matrix_group_summary",
   "fairlearn.metrics.false_negative_rate_difference",
   "fairlearn.metrics.false_negative_rate_group_summary",
   "fairlearn.metrics.false_negative_rate_ratio",
   "fairlearn.metrics.false_positive_rate_difference",
   "fairlearn.metrics.false_positive_rate_group_summary",
   "fairlearn.metrics.false_positive_rate_ratio",
   "fairlearn.metrics.mean_absolute_error_group_max",
   "fairlearn.metrics.mean_absolute_error_group_summary",
   "fairlearn.metrics.mean_prediction_group_summary",
   "fairlearn.metrics.mean_squared_error_group_max",
   "fairlearn.metrics.mean_squared_error_group_summary",
   "fairlearn.metrics.precision_score_group_min",
   "fairlearn.metrics.precision_score_group_summary",
   "fairlearn.metrics.r2_score_group_min",
   "fairlearn.metrics.r2_score_group_summary",
   "fairlearn.metrics.recall_score_group_min",
   "fairlearn.metrics.recall_score_group_summary",
   "fairlearn.metrics.roc_auc_score_group_min",
   "fairlearn.metrics.roc_auc_score_group_summary",
   "fairlearn.metrics.selection_rate_difference",
   "fairlearn.metrics.selection_rate_group_summary",
   "fairlearn.metrics.selection_rate_ratio",
   "fairlearn.metrics.true_negative_rate_difference",
   "fairlearn.metrics.true_negative_rate_group_summary",
   "fairlearn.metrics.true_negative_rate_ratio",
   "fairlearn.metrics.true_positive_rate_difference",
   "fairlearn.metrics.true_positive_rate_group_summary",
   "fairlearn.metrics.true_positive_rate_ratio",
   "fairlearn.metrics.zero_one_loss_difference",
   "fairlearn.metrics.zero_one_loss_group_max",
   "fairlearn.metrics.zero_one_loss_group_summary",
   "fairlearn.metrics.zero_one_loss_ratio",
   "numpy.array"
  ],
  "type": "module"
 },
 "test.unit.metrics.test_metrics_engine_dicts.test_derived_metrics_smoke": {
  "lineno": 102,
  "symbols_in_volume": [
   "pytest.approx",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine_dicts.test_dict_sizes": {
  "lineno": 88,
  "symbols_in_volume": [
   "fairlearn.metrics._derived_metric_dict",
   "fairlearn.metrics._metric_group_summary_dict"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine_dicts.test_metric_group_summary_smoke": {
  "lineno": 93,
  "symbols_in_volume": [
   "pytest.approx",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_selection_rate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_selection_rate.test_selection_rate_group_summary": {
  "lineno": 39,
  "symbols_in_volume": [
   "fairlearn.metrics.selection_rate_group_summary",
   "pytest.approx"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_selection_rate.test_selection_rate_non_numeric": {
  "lineno": 28,
  "symbols_in_volume": [
   "fairlearn.metrics.selection_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_selection_rate.test_selection_rate_unweighted": {
  "lineno": 9,
  "symbols_in_volume": [
   "fairlearn.metrics.selection_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_selection_rate.test_selection_rate_weighted": {
  "lineno": 18,
  "symbols_in_volume": [
   "fairlearn.metrics.selection_rate"
  ],
  "type": "function"
 },
 "test.unit.postprocessing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.postprocessing.conftest": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "numpy.array",
   "numpy.hstack",
   "numpy.stack",
   "test.unit.input_convertors.ensure_dataframe",
   "test.unit.input_convertors.ensure_list_1d",
   "test.unit.input_convertors.ensure_ndarray",
   "test.unit.input_convertors.ensure_ndarray_2d",
   "test.unit.input_convertors.ensure_series"
  ],
  "type": "module"
 },
 "test.unit.postprocessing.conftest.ExampleEstimator": {
  "lineno": 120,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClassifierMixin"
  ],
  "type": "class"
 },
 "test.unit.postprocessing.conftest.ExampleEstimator.fit": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.postprocessing.conftest.ExampleEstimator.predict": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.postprocessing.conftest.ExampleNotEstimator1": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.postprocessing.conftest.ExampleNotEstimator1.fit": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.postprocessing.conftest.ExampleNotEstimator2": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.postprocessing.conftest.ExampleNotEstimator2.predict": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.postprocessing.conftest.ExampleNotPredictor": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.postprocessing.conftest.ExamplePredictor": {
  "lineno": 105,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClassifierMixin"
  ],
  "type": "class"
 },
 "test.unit.postprocessing.conftest.ExamplePredictor.__init__": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.postprocessing.conftest.ExamplePredictor.fit": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.postprocessing.conftest.ExamplePredictor.predict": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.postprocessing.conftest._get_grouped_data_and_base_points": {
  "lineno": 138,
  "symbols_in_volume": [
   "fairlearn.postprocessing._constants.LABEL_KEY",
   "fairlearn.postprocessing._constants.SCORE_KEY",
   "fairlearn.postprocessing._constants.SENSITIVE_FEATURE_KEY",
   "fairlearn.postprocessing._threshold_operation.ThresholdOperation",
   "numpy.inf",
   "numpy.linspace",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.conftest._get_predictions_by_sensitive_feature": {
  "lineno": 183,
  "symbols_in_volume": [
   "collections.defaultdict",
   "test.unit.input_convertors._map_into_single_column"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.conftest.data": {
  "lineno": 67,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.conftest.data_X_sf": {
  "lineno": 91,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.conftest.data_X_y_sf": {
  "lineno": 98,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.conftest.data_sf": {
  "lineno": 84,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.conftest.is_invalid_transformation": {
  "lineno": 72,
  "symbols_in_volume": [
   "test.unit.input_convertors.ensure_list_1d",
   "test.unit.input_convertors.ensure_series"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.postprocessing.test_curve_utilities._assert_equal_points": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities._assert_interpolated_points_are_between_base_points": {
  "lineno": 124,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities._assert_interpolated_points_are_between_base_points._get_base_point_coordinates": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities.test_assert_interpolated_curve": {
  "lineno": 17,
  "symbols_in_volume": [
   "fairlearn.postprocessing._roc_curve_utilities._interpolate_curve",
   "numpy.linspace",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities.test_calculate_roc_points": {
  "lineno": 84,
  "symbols_in_volume": [
   "fairlearn.postprocessing._constants.LABEL_KEY",
   "fairlearn.postprocessing._constants.SCORE_KEY",
   "fairlearn.postprocessing._constants.SENSITIVE_FEATURE_KEY",
   "fairlearn.postprocessing._roc_curve_utilities._calculate_roc_points",
   "fairlearn.postprocessing._roc_curve_utilities._filter_points_to_get_convex_hull",
   "fairlearn.postprocessing._threshold_operation.ThresholdOperation",
   "numpy.inf",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities.test_convex_hull": {
  "lineno": 44,
  "symbols_in_volume": [
   "fairlearn.postprocessing._roc_curve_utilities._filter_points_to_get_convex_hull",
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities.test_get_roc": {
  "lineno": 112,
  "symbols_in_volume": [
   "fairlearn.postprocessing._roc_curve_utilities._get_roc",
   "fairlearn.postprocessing._roc_curve_utilities._interpolate_curve"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities.test_interpolate_curve": {
  "lineno": 30,
  "symbols_in_volume": [
   "fairlearn.postprocessing._roc_curve_utilities._interpolate_curve",
   "numpy.linspace",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_plots": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.postprocessing.test_plots.TestPlots": {
  "lineno": 52,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "test.unit.postprocessing.test_plots.TestPlots.test_plot_demographic_parity_ex1": {
  "lineno": 67,
  "symbols_in_volume": [
   "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
   "pytest.mark.mpl_image_compare"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_plots.TestPlots.test_plot_demographic_parity_ex2": {
  "lineno": 71,
  "symbols_in_volume": [
   "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
   "pytest.mark.mpl_image_compare"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_plots.TestPlots.test_plot_demographic_parity_ex3": {
  "lineno": 75,
  "symbols_in_volume": [
   "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
   "pytest.mark.mpl_image_compare"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_plots.TestPlots.test_plot_equalized_odds_ex1": {
  "lineno": 55,
  "symbols_in_volume": [
   "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
   "pytest.mark.mpl_image_compare"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_plots.TestPlots.test_plot_equalized_odds_ex2": {
  "lineno": 59,
  "symbols_in_volume": [
   "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
   "pytest.mark.mpl_image_compare"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_plots.TestPlots.test_plot_equalized_odds_ex3": {
  "lineno": 63,
  "symbols_in_volume": [
   "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
   "pytest.mark.mpl_image_compare"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_plots._fit_and_plot": {
  "lineno": 27,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing.plot_threshold_optimizer",
   "matplotlib.pyplot.subplots"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_plots.is_mpl_installed": {
  "lineno": 39,
  "symbols_in_volume": [
   "pkg_resources.DistributionNotFound",
   "pkg_resources.get_distribution"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_plots.is_py35_on_macos": {
  "lineno": 48,
  "symbols_in_volume": [
   "platform.system",
   "sys.version_info"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_smoke": {
  "lineno": null,
  "symbols_in_volume": [
   "lightgbm.LGBMClassifier",
   "platform.system",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.svm.SVC",
   "sklearn.tree.DecisionTreeClassifier"
  ],
  "type": "module"
 },
 "test.unit.postprocessing.test_smoke.test_smoke": {
  "lineno": 23,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "numpy.random.choice",
   "numpy.random.normal",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_operation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.postprocessing.test_threshold_operation.test_predict_from_operation_invalid_operator": {
  "lineno": 26,
  "symbols_in_volume": [
   "fairlearn.postprocessing._threshold_operation.ThresholdOperation",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_operation.test_predict_from_operation_less": {
  "lineno": 8,
  "symbols_in_volume": [
   "fairlearn.postprocessing._threshold_operation.ThresholdOperation"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_operation.test_predict_from_operation_more": {
  "lineno": 17,
  "symbols_in_volume": [
   "fairlearn.postprocessing._threshold_operation.ThresholdOperation"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.postprocessing.test_threshold_optimization.create_adjusted_predictor": {
  "lineno": 440,
  "symbols_in_volume": [
   "fairlearn.postprocessing._threshold_optimizer._vectorized_prediction"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_constraints_not_supported": {
  "lineno": 53,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._threshold_optimizer.NOT_SUPPORTED_CONSTRAINTS_ERROR_MESSAGE",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_no_estimator_error": {
  "lineno": 46,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
   "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
   "fairlearn.postprocessing._threshold_optimizer.ESTIMATOR_ERROR_MESSAGE",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_none_input_data": {
  "lineno": 62,
  "symbols_in_volume": [
   "fairlearn._input_validation._MESSAGE_SENSITIVE_FEATURES_NONE",
   "fairlearn._input_validation._MESSAGE_Y_NONE",
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
   "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_predict_before_fit_error": {
  "lineno": 29,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
   "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_predict_different_argument_lengths": {
  "lineno": 421,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
   "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_predict_output_0_or_1": {
  "lineno": 407,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
   "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_degenerate_labels": {
  "lineno": 108,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
   "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
   "fairlearn.postprocessing._roc_curve_utilities.DEGENERATE_LABELS_ERROR_MESSAGE.format",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_demographic_parity": {
  "lineno": 153,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
   "numpy.isclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_demographic_parity._average_prediction": {
  "lineno": 209,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_demographic_parity.prob_pred": {
  "lineno": 165,
  "symbols_in_volume": [
   "fairlearn.postprocessing._threshold_optimizer._vectorized_prediction"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_demographic_parity_e2e": {
  "lineno": 335,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
   "numpy.average",
   "numpy.isclose",
   "pytest.mark.uncollect_if",
   "test.unit.input_convertors._map_into_single_column"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_different_input_lengths": {
  "lineno": 124,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
   "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_equalized_odds": {
  "lineno": 222,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
   "numpy.isclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_equalized_odds._average_prediction_for_label": {
  "lineno": 296,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_equalized_odds.prob_pred": {
  "lineno": 234,
  "symbols_in_volume": [
   "fairlearn.postprocessing._threshold_optimizer._vectorized_prediction"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_equalized_odds_e2e": {
  "lineno": 382,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
   "numpy.average",
   "numpy.isclose",
   "pytest.mark.uncollect_if",
   "test.unit.input_convertors._map_into_single_column"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_non_binary_labels": {
  "lineno": 87,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn._input_validation._LABELS_NOT_0_1_ERROR_MESSAGE",
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
   "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.reductions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.conftest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.conftest.is_invalid_transformation": {
  "lineno": 7,
  "symbols_in_volume": [
   "test.unit.input_convertors.ensure_list",
   "test.unit.input_convertors.ensure_series"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresBinaryClassifierLearner": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresBinaryClassifierLearner.__init__": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresBinaryClassifierLearner.fit": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linalg.lstsq",
   "numpy.newaxis",
   "numpy.sqrt",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresBinaryClassifierLearner.predict": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresRegressor": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresRegressor.__init__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresRegressor.fit": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linalg.lstsq",
   "numpy.newaxis",
   "numpy.sqrt",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresRegressor.predict": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments": {
  "lineno": null,
  "symbols_in_volume": [
   "test.unit.input_convertors.conversions_for_1d",
   "test.unit.input_convertors.ensure_dataframe",
   "test.unit.input_convertors.ensure_ndarray"
  ],
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.TestExponentiatedGradientArguments": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.TestExponentiatedGradientArguments.test_argument_types": {
  "lineno": 33,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.ErrorRate",
   "fairlearn.reductions.ExponentiatedGradient",
   "pytest.approx",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "test.unit.input_convertors._map_into_single_column",
   "test.unit.reductions.conftest.is_invalid_transformation"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.TestExponentiatedGradientArguments.test_argument_types.Q": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.TestExponentiatedGradientArguments.test_binary_classifier_0_1_required": {
  "lineno": 110,
  "symbols_in_volume": [
   "fairlearn._input_validation._LABELS_NOT_0_1_ERROR_MESSAGE",
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.ExponentiatedGradient",
   "pytest.raises",
   "sklearn.linear_model.LogisticRegression"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.TestExponentiatedGradientArguments.test_input_X_unchanged": {
  "lineno": 71,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.ExponentiatedGradient",
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke": {
  "lineno": 19,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions.ErrorRateRatio",
   "fairlearn.reductions.TruePositiveRateDifference"
  ],
  "type": "class"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.run_smoke_test": {
  "lineno": 202,
  "symbols_in_volume": [
   "fairlearn.reductions.ErrorRate",
   "fairlearn.reductions.ExponentiatedGradient",
   "fairlearn.reductions._exponentiated_gradient._constants._MIN_T",
   "pytest.approx"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.run_smoke_test.Q": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.setup_method": {
  "lineno": 20,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.test_simple_fit_predict": {
  "lineno": 245,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.ExponentiatedGradient",
   "fairlearn.reductions.TruePositiveRateDifference",
   "pandas.DataFrame",
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.test_single_y_value": {
  "lineno": 253,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.ExponentiatedGradient",
   "numpy.array_equal",
   "pandas.DataFrame",
   "sklearn.dummy.DummyClassifier",
   "sklearn.linear_model.LogisticRegression"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.test_smoke": {
  "lineno": 237,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.test_smoke_flipped": {
  "lineno": 241,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.test_call_oracle": {
  "lineno": 78,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian",
   "numpy.exp",
   "pandas.Series",
   "pickle.loads",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.test_call_oracle_single_y_value": {
  "lineno": 125,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian",
   "numpy.exp",
   "pandas.DataFrame",
   "pandas.Series",
   "pytest.mark.parametrize",
   "sklearn.dummy.DummyClassifier"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.test_lagrangian_eval": {
  "lineno": 18,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian",
   "numpy.exp",
   "numpy.isclose",
   "numpy.sum",
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.test_lagrangian_eval.h": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_utilities": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient.test_utilities._get_data": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.stack",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.grid_search.test_grid_generator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.grid_search.test_grid_generator.calculate_grid": {
  "lineno": 162,
  "symbols_in_volume": [
   "fairlearn.reductions._grid_search.grid_search._GridGenerator",
   "test.unit.reductions.grid_search.utilities._quick_data"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_generator.test_grid_generator_demographic_parity": {
  "lineno": 16,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions._moments.conditional_selection_rate._ALL",
   "fairlearn.reductions._moments.conditional_selection_rate._EVENT",
   "fairlearn.reductions._moments.conditional_selection_rate._GROUP_ID",
   "fairlearn.reductions._moments.conditional_selection_rate._SIGN",
   "numpy.isclose",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_generator.test_grid_generator_demographic_parity_with_center": {
  "lineno": 37,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions._moments.conditional_selection_rate._ALL",
   "fairlearn.reductions._moments.conditional_selection_rate._EVENT",
   "fairlearn.reductions._moments.conditional_selection_rate._GROUP_ID",
   "fairlearn.reductions._moments.conditional_selection_rate._SIGN",
   "numpy.isclose",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_generator.test_grid_generator_equalized_odds": {
  "lineno": 93,
  "symbols_in_volume": [
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions._moments.conditional_selection_rate._EVENT",
   "fairlearn.reductions._moments.conditional_selection_rate._GROUP_ID",
   "fairlearn.reductions._moments.conditional_selection_rate._SIGN",
   "numpy.isclose",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_generator.test_grid_generator_equalized_odds_basic": {
  "lineno": 65,
  "symbols_in_volume": [
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions._moments.conditional_selection_rate._EVENT",
   "fairlearn.reductions._moments.conditional_selection_rate._GROUP_ID",
   "fairlearn.reductions._moments.conditional_selection_rate._SIGN",
   "numpy.isclose",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_generator.test_grid_generator_equalized_odds_with_center": {
  "lineno": 123,
  "symbols_in_volume": [
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions._moments.conditional_selection_rate._EVENT",
   "fairlearn.reductions._moments.conditional_selection_rate._GROUP_ID",
   "fairlearn.reductions._moments.conditional_selection_rate._SIGN",
   "numpy.isclose",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments": {
  "lineno": null,
  "symbols_in_volume": [
   "test.unit.input_convertors.conversions_for_1d",
   "test.unit.input_convertors.ensure_dataframe",
   "test.unit.input_convertors.ensure_ndarray"
  ],
  "type": "module"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_X_A_different_rows": {
  "lineno": 102,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "numpy.random.randint",
   "numpy.stack",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "pytest.raises",
   "test.unit.reductions.conftest.is_invalid_transformation",
   "test.unit.reductions.grid_search.utilities._quick_data"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_X_Y_different_rows": {
  "lineno": 84,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "numpy.random.randint",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "pytest.raises",
   "test.unit.reductions.conftest.is_invalid_transformation",
   "test.unit.reductions.grid_search.utilities._quick_data"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_X_is_None": {
  "lineno": 52,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "pytest.raises",
   "test.unit.reductions.conftest.is_invalid_transformation",
   "test.unit.reductions.grid_search.utilities._quick_data"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_Y_df_bad_columns": {
  "lineno": 220,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "pandas.DataFrame",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "pytest.raises",
   "test.unit.reductions.conftest.is_invalid_transformation",
   "test.unit.reductions.grid_search.utilities._quick_data"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_Y_is_None": {
  "lineno": 67,
  "symbols_in_volume": [
   "fairlearn._input_validation._MESSAGE_Y_NONE",
   "fairlearn.reductions.GridSearch",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "pytest.raises",
   "test.unit.reductions.conftest.is_invalid_transformation",
   "test.unit.reductions.grid_search.utilities._quick_data"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_Y_ndarray_bad_columns": {
  "lineno": 236,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "numpy.stack",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "pytest.raises",
   "test.unit.reductions.conftest.is_invalid_transformation",
   "test.unit.reductions.grid_search.utilities._quick_data"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_grid_size_warning_up_to_5_sensitive_feature_group": {
  "lineno": 181,
  "symbols_in_volume": [
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions.GridSearch",
   "fairlearn.reductions._grid_search._grid_generator.GRID_SIZE_WARN_TEMPLATE.format",
   "logging.WARNING",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "pytest.skip",
   "test.unit.reductions.conftest.is_invalid_transformation",
   "test.unit.reductions.grid_search.utilities._quick_data"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_many_sensitive_feature_groups_warning": {
  "lineno": 124,
  "symbols_in_volume": [
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions.GridSearch",
   "fairlearn.reductions._grid_search._grid_generator.GRID_DIMENSION_WARN_TEMPLATE.format",
   "fairlearn.reductions._grid_search._grid_generator.GRID_DIMENSION_WARN_THRESHOLD",
   "fairlearn.reductions._grid_search._grid_generator.GRID_SIZE_WARN_TEMPLATE.format",
   "logging.WARNING",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "test.unit.reductions.conftest.is_invalid_transformation",
   "test.unit.reductions.grid_search.utilities._quick_data"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_no_predict_before_fit": {
  "lineno": 254,
  "symbols_in_volume": [
   "fairlearn._NO_PREDICT_BEFORE_FIT",
   "fairlearn.reductions.GridSearch",
   "pytest.raises",
   "sklearn.exceptions.NotFittedError",
   "test.unit.reductions.grid_search.utilities._quick_data"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_no_predict_proba_before_fit": {
  "lineno": 263,
  "symbols_in_volume": [
   "fairlearn._NO_PREDICT_BEFORE_FIT",
   "fairlearn.reductions.GridSearch",
   "pytest.raises",
   "sklearn.exceptions.NotFittedError",
   "test.unit.reductions.grid_search.utilities._quick_data"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_valid_inputs": {
  "lineno": 37,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "test.unit.reductions.conftest.is_invalid_transformation",
   "test.unit.reductions.grid_search.utilities._quick_data",
   "test.unit.reductions.grid_search.utilities.assert_n_grid_search_results"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ConditionalOpportunityTests": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ConditionalOpportunityTests.test_Y_not_0_1": {
  "lineno": 294,
  "symbols_in_volume": [
   "fairlearn._input_validation._LABELS_NOT_0_1_ERROR_MESSAGE",
   "fairlearn.reductions.GridSearch",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "pytest.raises",
   "test.unit.reductions.conftest.is_invalid_transformation",
   "test.unit.reductions.grid_search.utilities._quick_data"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ConditionalOpportunityTests.test_Y_ternary": {
  "lineno": 275,
  "symbols_in_volume": [
   "fairlearn._input_validation._LABELS_NOT_0_1_ERROR_MESSAGE",
   "fairlearn.reductions.GridSearch",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "pytest.raises",
   "test.unit.reductions.conftest.is_invalid_transformation",
   "test.unit.reductions.grid_search.utilities._quick_data"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestBoundedGroupLoss": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestBoundedGroupLoss.setup_method": {
  "lineno": 328,
  "symbols_in_volume": [
   "fairlearn.reductions.GroupLossMoment",
   "fairlearn.reductions.ZeroOneLoss",
   "sklearn.linear_model.LinearRegression"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestDemographicParity": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestDemographicParity.setup_method": {
  "lineno": 314,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "sklearn.linear_model.LogisticRegression"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestEqualizedOdds": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestEqualizedOdds.setup_method": {
  "lineno": 321,
  "symbols_in_volume": [
   "fairlearn.reductions.EqualizedOdds",
   "sklearn.linear_model.LogisticRegression"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity._simple_threshold_data": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.full",
   "numpy.linspace",
   "numpy.ones",
   "numpy.stack",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.test_can_specify_and_generate_lambda_vecs": {
  "lineno": 172,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.GridSearch",
   "numpy.array_equal",
   "numpy.zeros",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pandas.concat",
   "pytest.mark.parametrize",
   "sklearn.linear_model.LogisticRegression",
   "test.unit.reductions.grid_search.utilities.assert_n_grid_search_results"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.test_demographicparity_fair_uneven_populations": {
  "lineno": 45,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.GridSearch",
   "numpy.allclose",
   "numpy.array_equal",
   "pandas.DataFrame",
   "pytest.mark.parametrize",
   "sklearn.linear_model.LogisticRegression",
   "test.unit.reductions.grid_search.utilities.assert_n_grid_search_results"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.test_demographicparity_fair_uneven_populations_with_grid_offset": {
  "lineno": 86,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.GridSearch",
   "numpy.allclose",
   "numpy.array_equal",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pytest.mark.parametrize",
   "sklearn.linear_model.LogisticRegression",
   "test.unit.reductions.grid_search.utilities.assert_n_grid_search_results"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.test_lambda_vec_zero_unchanged_model": {
  "lineno": 131,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.GridSearch",
   "numpy.array_equal",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pytest.mark.parametrize",
   "sklearn.linear_model.LogisticRegression",
   "test.unit.reductions.grid_search.utilities.assert_n_grid_search_results"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.test_single_y_class": {
  "lineno": 228,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.GridSearch",
   "numpy.array_equal",
   "numpy.full",
   "pandas.DataFrame",
   "sklearn.dummy.DummyClassifier",
   "sklearn.linear_model.LogisticRegression"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression._simple_regression_data": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.full",
   "numpy.linspace",
   "numpy.ones",
   "numpy.stack",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.test_bgl_lagrange_specifications": {
  "lineno": 138,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn.reductions.GridSearch",
   "fairlearn.reductions.GroupLossMoment",
   "fairlearn.reductions.ZeroOneLoss",
   "numpy.array_equal",
   "pandas.Int64Index",
   "pandas.Series",
   "pandas.concat",
   "pytest.mark.parametrize",
   "sklearn.linear_model.LinearRegression",
   "test.unit.reductions.grid_search.utilities.assert_n_grid_search_results"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.test_bgl_unfair": {
  "lineno": 47,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "fairlearn.reductions.GroupLossMoment",
   "fairlearn.reductions.SquareLoss",
   "numpy.allclose",
   "numpy.inf",
   "pandas.DataFrame",
   "pytest.mark.parametrize",
   "sklearn.linear_model.LinearRegression",
   "test.unit.reductions.grid_search.utilities.assert_n_grid_search_results",
   "test.unit.utility_functions.logging_all_close"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.test_bgl_unmitigated_same": {
  "lineno": 100,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn.reductions.GridSearch",
   "fairlearn.reductions.GroupLossMoment",
   "fairlearn.reductions.ZeroOneLoss",
   "numpy.allclose",
   "pandas.DataFrame",
   "pandas.Int64Index",
   "pandas.Series",
   "pytest.mark.parametrize",
   "sklearn.linear_model.LinearRegression"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.utilities": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.grid_search.utilities._quick_data": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.stack"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.utilities.assert_n_grid_search_results": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.reductions.moments": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.moments.data_generator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.moments.data_generator.simple_binary_threshold_data": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.full",
   "numpy.linspace",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity.test_construct_and_load": {
  "lineno": 13,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions._moments.moment._EVENT",
   "fairlearn.reductions._moments.moment._GROUP_ID",
   "fairlearn.reductions._moments.moment._SIGN",
   "pandas.MultiIndex.from_product",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity.test_project_lambda_smoke_negatives": {
  "lineno": 86,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions._moments.moment._EVENT",
   "fairlearn.reductions._moments.moment._GROUP_ID",
   "fairlearn.reductions._moments.moment._SIGN",
   "numpy.float64",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity.test_project_lambda_smoke_positives": {
  "lineno": 108,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions._moments.moment._EVENT",
   "fairlearn.reductions._moments.moment._GROUP_ID",
   "fairlearn.reductions._moments.moment._SIGN",
   "numpy.float64",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity.test_signed_weights": {
  "lineno": 132,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions._moments.moment._EVENT",
   "fairlearn.reductions._moments.moment._GROUP_ID",
   "fairlearn.reductions._moments.moment._SIGN",
   "numpy.array_equal",
   "numpy.concatenate",
   "numpy.full",
   "pandas.MultiIndex.from_product",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds.test_construct_and_load": {
  "lineno": 13,
  "symbols_in_volume": [
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions._moments.moment._EVENT",
   "fairlearn.reductions._moments.moment._GROUP_ID",
   "fairlearn.reductions._moments.moment._SIGN",
   "numpy.array_equal",
   "pandas.MultiIndex.from_product",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds.test_project_lambda_smoke_negatives": {
  "lineno": 103,
  "symbols_in_volume": [
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions._moments.moment._EVENT",
   "fairlearn.reductions._moments.moment._GROUP_ID",
   "fairlearn.reductions._moments.moment._SIGN",
   "numpy.float64",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds.test_project_lambda_smoke_positives": {
  "lineno": 124,
  "symbols_in_volume": [
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions._moments.moment._EVENT",
   "fairlearn.reductions._moments.moment._GROUP_ID",
   "fairlearn.reductions._moments.moment._SIGN",
   "numpy.float64",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds.test_signed_weights": {
  "lineno": 147,
  "symbols_in_volume": [
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions._moments.moment._EVENT",
   "fairlearn.reductions._moments.moment._GROUP_ID",
   "fairlearn.reductions._moments.moment._SIGN",
   "numpy.array_equal",
   "numpy.concatenate",
   "numpy.full",
   "pandas.MultiIndex.from_product",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.test_smoke": {
  "lineno": null,
  "symbols_in_volume": [
   "lightgbm.LGBMClassifier",
   "platform.system",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.svm.SVC",
   "sklearn.tree.DecisionTreeClassifier"
  ],
  "type": "module"
 },
 "test.unit.reductions.test_smoke.test_smoke": {
  "lineno": 24,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions.ExponentiatedGradient",
   "fairlearn.reductions.GridSearch",
   "numpy.random.choice",
   "numpy.random.normal",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.utility_functions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.utility_functions.logging_all_close": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.asarray",
   "numpy.isclose",
   "numpy.logical_not",
   "numpy.where"
  ],
  "type": "function"
 }
}