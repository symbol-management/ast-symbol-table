{
 "fairlearn": {
  "lineno": null,
  "symbols_in_volume": [
   "atexit.register",
   "logging.FileHandler",
   "logging.INFO",
   "logging.getLogger",
   "os.environ.get",
   "os.makedirs",
   "os.path.dirname"
  ],
  "type": "module"
 },
 "fairlearn._input_validation": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "module"
 },
 "fairlearn._input_validation._merge_columns": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.apply_along_axis",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "fairlearn._input_validation._validate_and_reformat_input": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.unique",
   "pandas.DataFrame",
   "pandas.Series",
   "sklearn.utils.validation.check_X_y",
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_consistent_length"
  ],
  "type": "function"
 },
 "fairlearn.close_handler": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.datasets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.datasets._constants": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.datasets._fetch_adult": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.datasets._fetch_adult.fetch_adult": {
  "lineno": 10,
  "symbols_in_volume": [
   "pathlib.Path",
   "sklearn.datasets.fetch_openml"
  ],
  "type": "function"
 },
 "fairlearn.datasets._fetch_bank_marketing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.datasets._fetch_bank_marketing.fetch_bank_marketing": {
  "lineno": 10,
  "symbols_in_volume": [
   "pathlib.Path",
   "sklearn.datasets.fetch_openml"
  ],
  "type": "function"
 },
 "fairlearn.datasets._fetch_boston": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.datasets._fetch_boston.fetch_boston": {
  "lineno": 13,
  "symbols_in_volume": [
   "fairlearn.exceptions.DataFairnessWarning",
   "pathlib.Path",
   "sklearn.datasets.fetch_openml",
   "warnings.warn"
  ],
  "type": "function"
 },
 "fairlearn.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.exceptions.DataFairnessWarning": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.metrics": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "module"
 },
 "fairlearn.metrics._balanced_root_mean_squared_error": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.metrics._balanced_root_mean_squared_error._balanced_root_mean_squared_error": {
  "lineno": 13,
  "symbols_in_volume": [
   "math.sqrt",
   "numpy.array_equal",
   "numpy.ones",
   "numpy.unique",
   "numpy.zeros",
   "sklearn.metrics.mean_squared_error"
  ],
  "type": "function"
 },
 "fairlearn.metrics._disparities": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.metrics._disparities._get_eo_frame": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._disparities.demographic_parity_difference": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._disparities.demographic_parity_ratio": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._disparities.equalized_odds_difference": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._disparities.equalized_odds_ratio": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._extra_metrics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.metrics._extra_metrics._get_labels_for_confusion_matrix": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.unique"
  ],
  "type": "function"
 },
 "fairlearn.metrics._extra_metrics._root_mean_squared_error": {
  "lineno": 215,
  "symbols_in_volume": [
   "sklearn.metrics.mean_squared_error"
  ],
  "type": "function"
 },
 "fairlearn.metrics._extra_metrics.false_negative_rate": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.vstack",
   "sklearn.metrics.confusion_matrix"
  ],
  "type": "function"
 },
 "fairlearn.metrics._extra_metrics.false_positive_rate": {
  "lineno": 147,
  "symbols_in_volume": [
   "numpy.vstack",
   "sklearn.metrics.confusion_matrix"
  ],
  "type": "function"
 },
 "fairlearn.metrics._extra_metrics.true_negative_rate": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.vstack",
   "sklearn.metrics.confusion_matrix"
  ],
  "type": "function"
 },
 "fairlearn.metrics._extra_metrics.true_positive_rate": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.vstack",
   "sklearn.metrics.confusion_matrix"
  ],
  "type": "function"
 },
 "fairlearn.metrics._function_container": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "fairlearn.metrics._function_container.FunctionContainer": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.metrics._function_container.FunctionContainer.__init__": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.asarray",
   "typing.Any",
   "typing.Callable",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "fairlearn.metrics._function_container.FunctionContainer.evaluate": {
  "lineno": 87,
  "symbols_in_volume": [
   "numpy.ndarray",
   "typing.Any"
  ],
  "type": "function"
 },
 "fairlearn.metrics._function_container.FunctionContainer.evaluate_all": {
  "lineno": 105,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "fairlearn.metrics._function_container.FunctionContainer.func_": {
  "lineno": 64,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "fairlearn.metrics._function_container.FunctionContainer.generate_sample_params_for_mask": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.ndarray",
   "typing.Dict"
  ],
  "type": "function"
 },
 "fairlearn.metrics._function_container.FunctionContainer.name_": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._function_container.FunctionContainer.sample_params_": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.ndarray",
   "typing.Dict"
  ],
  "type": "function"
 },
 "fairlearn.metrics._generated_metrics": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.metrics.accuracy_score",
   "sklearn.metrics.balanced_accuracy_score",
   "sklearn.metrics.f1_score",
   "sklearn.metrics.log_loss",
   "sklearn.metrics.mean_absolute_error",
   "sklearn.metrics.mean_squared_error",
   "sklearn.metrics.precision_score",
   "sklearn.metrics.r2_score",
   "sklearn.metrics.recall_score",
   "sklearn.metrics.roc_auc_score",
   "sklearn.metrics.zero_one_loss"
  ],
  "type": "module"
 },
 "fairlearn.metrics._group_feature": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.metrics._group_feature.GroupFeature": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.metrics._group_feature.GroupFeature.__init__": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.Series",
   "sklearn.preprocessing.LabelEncoder",
   "typing.Optional"
  ],
  "type": "function"
 },
 "fairlearn.metrics._group_feature.GroupFeature.classes": {
  "lineno": 88,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "fairlearn.metrics._group_feature.GroupFeature.get_mask_for_class": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.ndarray",
   "typing.Any"
  ],
  "type": "function"
 },
 "fairlearn.metrics._group_feature.GroupFeature.get_mask_for_class_index": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "fairlearn.metrics._group_feature.GroupFeature.name": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.metrics.accuracy_score",
   "sklearn.metrics.f1_score",
   "sklearn.metrics.log_loss",
   "sklearn.metrics.mean_absolute_error",
   "sklearn.metrics.mean_squared_error",
   "sklearn.metrics.precision_score",
   "sklearn.metrics.r2_score",
   "sklearn.metrics.recall_score",
   "sklearn.metrics.roc_auc_score",
   "sklearn.metrics.zero_one_loss"
  ],
  "type": "module"
 },
 "fairlearn.metrics._group_metric_set._create_group_metric_set": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set._process_predictions": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set._process_sensitive_features": {
  "lineno": 89,
  "symbols_in_volume": [
   "sklearn.preprocessing.LabelEncoder"
  ],
  "type": "function"
 },
 "fairlearn.metrics._input_manipulations": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.squeeze"
  ],
  "type": "function"
 },
 "fairlearn.metrics._make_derived_metric": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.metrics._make_derived_metric._DerivedMetric": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.metrics._make_derived_metric._DerivedMetric.__call__": {
  "lineno": 51,
  "symbols_in_volume": [
   "functools.partial",
   "typing.Union"
  ],
  "type": "function"
 },
 "fairlearn.metrics._make_derived_metric._DerivedMetric.__init__": {
  "lineno": 28,
  "symbols_in_volume": [
   "inspect.signature",
   "typing.Callable",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "fairlearn.metrics._make_derived_metric.make_derived_metric": {
  "lineno": 95,
  "symbols_in_volume": [
   "typing.Callable",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "fairlearn.metrics._mean_predictions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.metrics._mean_predictions._mean_overprediction": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.ones"
  ],
  "type": "function"
 },
 "fairlearn.metrics._mean_predictions._mean_underprediction": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.ones"
  ],
  "type": "function"
 },
 "fairlearn.metrics._mean_predictions.mean_prediction": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.ones"
  ],
  "type": "function"
 },
 "fairlearn.metrics._metric_frame": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "fairlearn.metrics._metric_frame.MetricFrame": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.metrics._metric_frame.MetricFrame.__init__": {
  "lineno": 114,
  "symbols_in_volume": [
   "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze",
   "sklearn.utils.check_consistent_length",
   "typing.Any",
   "typing.Callable",
   "typing.Dict",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame._compute_by_group": {
  "lineno": 163,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame._compute_dataframe_from_rows": {
  "lineno": 171,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_product"
  ],
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame._compute_overall": {
  "lineno": 153,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame._mask_from_tuple": {
  "lineno": 548,
  "symbols_in_volume": [
   "numpy.logical_and",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame._process_features": {
  "lineno": 497,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.atleast_1d",
   "numpy.isscalar",
   "numpy.object",
   "numpy.squeeze",
   "pandas.DataFrame",
   "pandas.DataFrame.from_dict",
   "pandas.Series",
   "sklearn.utils.check_consistent_length",
   "typing.List"
  ],
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame._process_functions": {
  "lineno": 469,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame.by_group": {
  "lineno": 237,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Union"
  ],
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame.control_levels": {
  "lineno": 267,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame.difference": {
  "lineno": 362,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Any",
   "typing.Union"
  ],
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame.group_max": {
  "lineno": 298,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Any",
   "typing.Union"
  ],
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame.group_min": {
  "lineno": 330,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Any",
   "typing.Union"
  ],
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame.overall": {
  "lineno": 198,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Any",
   "typing.Union"
  ],
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame.ratio": {
  "lineno": 403,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Any",
   "typing.Union"
  ],
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame.ratio.ratio_sub_one": {
  "lineno": 453,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame.sensitive_levels": {
  "lineno": 283,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "fairlearn.metrics._selection_rate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.metrics._selection_rate.selection_rate": {
  "lineno": 13,
  "symbols_in_volume": [
   "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze",
   "numpy.asarray",
   "numpy.dot",
   "numpy.ones",
   "numpy.squeeze",
   "typing.Any"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.postprocessing._constants": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.postprocessing._interpolated_thresholder": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.postprocessing._interpolated_thresholder.InterpolatedThresholder": {
  "lineno": 18,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.MetaEstimatorMixin"
  ],
  "type": "class"
 },
 "fairlearn.postprocessing._interpolated_thresholder.InterpolatedThresholder.__init__": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._interpolated_thresholder.InterpolatedThresholder._pmf_predict": {
  "lineno": 70,
  "symbols_in_volume": [
   "fairlearn._input_validation._validate_and_reformat_input",
   "numpy.array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._interpolated_thresholder.InterpolatedThresholder.fit": {
  "lineno": 51,
  "symbols_in_volume": [
   "sklearn.clone",
   "sklearn.exceptions.NotFittedError",
   "sklearn.utils.validation.check_is_fitted",
   "warnings.warn"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._interpolated_thresholder.InterpolatedThresholder.predict": {
  "lineno": 105,
  "symbols_in_volume": [
   "sklearn.utils.check_random_state",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._plotting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.postprocessing._plotting._get_debug_color": {
  "lineno": 15,
  "symbols_in_volume": [
   "matplotlib.cm.ScalarMappable"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._plotting._plot_curve": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._plotting._plot_overlap": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._plotting._plot_solution": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._plotting._raise_if_not_threshold_optimizer": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._plotting.plot_threshold_optimizer": {
  "lineno": 64,
  "symbols_in_volume": [
   "matplotlib.pyplot.axes",
   "matplotlib.pyplot.show",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_operation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation.__call__": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation.__init__": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation.__repr__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation.operator": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation.threshold": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer": {
  "lineno": 96,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.MetaEstimatorMixin"
  ],
  "type": "class"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer.__init__": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer._pmf_predict": {
  "lineno": 254,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer._threshold_optimization_for_equalized_odds": {
  "lineno": 361,
  "symbols_in_volume": [
   "numpy.amin",
   "numpy.around",
   "numpy.linspace",
   "pandas.DataFrame",
   "sklearn.utils.Bunch"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer._threshold_optimization_for_simple_constraints": {
  "lineno": 275,
  "symbols_in_volume": [
   "numpy.linspace",
   "sklearn.utils.Bunch"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer.fit": {
  "lineno": 163,
  "symbols_in_volume": [
   "fairlearn._input_validation._KW_CONTROL_FEATURES",
   "fairlearn._input_validation._validate_and_reformat_input",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series",
   "sklearn.clone",
   "sklearn.exceptions.NotFittedError",
   "sklearn.utils.validation.check_is_fitted",
   "warnings.warn"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer.predict": {
  "lineno": 231,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer._reformat_and_group_data": {
  "lineno": 472,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer._reformat_data_into_dict": {
  "lineno": 515,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._tradeoff_curve_utilities": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.postprocessing._tradeoff_curve_utilities._calculate_tradeoff_points": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._tradeoff_curve_utilities._extend_confusion_matrix": {
  "lineno": 37,
  "symbols_in_volume": [
   "sklearn.utils.Bunch"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._tradeoff_curve_utilities._filter_points_to_get_convex_hull": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._tradeoff_curve_utilities._get_counts": {
  "lineno": 296,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._tradeoff_curve_utilities._get_scores_labels_and_counts": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._tradeoff_curve_utilities._interpolate_curve": {
  "lineno": 145,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._tradeoff_curve_utilities._tradeoff_curve": {
  "lineno": 69,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "fairlearn.preprocessing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.preprocessing._correlation_remover": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.preprocessing._correlation_remover.CorrelationRemover": {
  "lineno": 11,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "fairlearn.preprocessing._correlation_remover.CorrelationRemover.__init__": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.preprocessing._correlation_remover.CorrelationRemover._create_lookup": {
  "lineno": 69,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "fairlearn.preprocessing._correlation_remover.CorrelationRemover._split_X": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.preprocessing._correlation_remover.CorrelationRemover.fit": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.linalg.lstsq",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "fairlearn.preprocessing._correlation_remover.CorrelationRemover.transform": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "sklearn.utils.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "fairlearn.reductions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._exponentiated_gradient": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._exponentiated_gradient._constants": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._GapResult": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._GapResult.__init__": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._GapResult.gap": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian.__init__": {
  "lineno": 46,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian._call_oracle": {
  "lineno": 149,
  "symbols_in_volume": [
   "fairlearn.reductions._moments.ClassificationMoment",
   "numpy.unique",
   "sklearn.clone",
   "sklearn.dummy.DummyClassifier",
   "time.time"
  ],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian._eval": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian.best_h": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.PINF"
  ],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian.best_h.h": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian.eval_gap": {
  "lineno": 108,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian.solve_linprog": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.ones",
   "numpy.zeros",
   "pandas.Series",
   "scipy.optimize.linprog"
  ],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient": {
  "lineno": 19,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.MetaEstimatorMixin"
  ],
  "type": "class"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient.__init__": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient._pmf_predict": {
  "lineno": 236,
  "symbols_in_volume": [
   "fairlearn.reductions._moments.ClassificationMoment",
   "numpy.concatenate",
   "numpy.zeros",
   "pandas.DataFrame",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient.fit": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.PINF",
   "numpy.exp",
   "numpy.sqrt",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient.predict": {
  "lineno": 191,
  "symbols_in_volume": [
   "fairlearn.reductions._moments.ClassificationMoment",
   "numpy.zeros",
   "sklearn.utils.check_random_state",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "fairlearn.reductions._grid_search": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._grid_search._grid_generator": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "fairlearn.reductions._grid_search._grid_generator._GridGenerator": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._grid_search._grid_generator._GridGenerator.__init__": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.floor",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.reductions._grid_search._grid_generator._GridGenerator.accumulate_integer_grid": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._grid_search._grid_generator._GridGenerator.build_integer_grid": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch": {
  "lineno": 22,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.MetaEstimatorMixin"
  ],
  "type": "class"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.__init__": {
  "lineno": 67,
  "symbols_in_volume": [
   "fairlearn.reductions._moments.Moment"
  ],
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.fit": {
  "lineno": 98,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn.reductions._moments.ClassificationMoment",
   "numpy.float64",
   "numpy.unique",
   "pandas.DataFrame",
   "sklearn.dummy.DummyClassifier",
   "time.time"
  ],
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.fit.loss_fct": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.fit.predict_fct": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.predict": {
  "lineno": 202,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.predict_proba": {
  "lineno": 214,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._moments.bounded_group_loss": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._moments.bounded_group_loss.AbsoluteLoss": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.AbsoluteLoss.__init__": {
  "lineno": 140,
  "symbols_in_volume": [
   "numpy.abs"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.AbsoluteLoss.eval": {
  "lineno": 146,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.clip"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.BoundedGroupLoss": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.BoundedGroupLoss.__init__": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.__init__": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.bound": {
  "lineno": 75,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.default_objective": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.gamma": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.load_data": {
  "lineno": 38,
  "symbols_in_volume": [
   "fairlearn._input_validation._validate_and_reformat_input",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.project_lambda": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.signed_weights": {
  "lineno": 91,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.MeanLoss": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.MeanLoss.__init__": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.SquareLoss": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.SquareLoss.__init__": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.SquareLoss.eval": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.clip"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ZeroOneLoss": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ZeroOneLoss.__init__": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.error_rate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._moments.error_rate.ErrorRate": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.error_rate.ErrorRate.gamma": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.squeeze",
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.error_rate.ErrorRate.load_data": {
  "lineno": 17,
  "symbols_in_volume": [
   "fairlearn._input_validation._validate_and_reformat_input"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.error_rate.ErrorRate.project_lambda": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.error_rate.ErrorRate.signed_weights": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.moment": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._moments.moment.ClassificationMoment": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.moment.LossMoment": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.moment.LossMoment.__init__": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.moment.Moment.__init__": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment._y_as_series": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment.bound": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment.gamma": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment.load_data": {
  "lineno": 27,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment.project_lambda": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment.signed_weights": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment.total_samples": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.utility_parity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._moments.utility_parity.DemographicParity": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.utility_parity.DemographicParity.load_data": {
  "lineno": 279,
  "symbols_in_volume": [
   "fairlearn._input_validation._validate_and_reformat_input",
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.utility_parity.EqualizedOdds": {
  "lineno": 390,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.utility_parity.EqualizedOdds.load_data": {
  "lineno": 421,
  "symbols_in_volume": [
   "fairlearn._input_validation._validate_and_reformat_input"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.utility_parity.ErrorRateParity": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.utility_parity.ErrorRateParity.load_data": {
  "lineno": 461,
  "symbols_in_volume": [
   "fairlearn._input_validation._validate_and_reformat_input",
   "numpy.vstack",
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.utility_parity.FalsePositiveRateParity": {
  "lineno": 344,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.utility_parity.FalsePositiveRateParity.load_data": {
  "lineno": 376,
  "symbols_in_volume": [
   "fairlearn._input_validation._validate_and_reformat_input"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.utility_parity.TruePositiveRateParity": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.utility_parity.TruePositiveRateParity.load_data": {
  "lineno": 330,
  "symbols_in_volume": [
   "fairlearn._input_validation._validate_and_reformat_input"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.utility_parity.UtilityParity": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.utility_parity.UtilityParity.__init__": {
  "lineno": 87,
  "symbols_in_volume": [
   "fairlearn._input_validation._MESSAGE_RATIO_NOT_IN_RANGE"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.utility_parity.UtilityParity.bound": {
  "lineno": 191,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.utility_parity.UtilityParity.default_objective": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.utility_parity.UtilityParity.gamma": {
  "lineno": 167,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.squeeze",
   "pandas.concat"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.utility_parity.UtilityParity.load_data": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.ones",
   "numpy.vstack",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.utility_parity.UtilityParity.project_lambda": {
  "lineno": 200,
  "symbols_in_volume": [
   "pandas.concat"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.utility_parity.UtilityParity.signed_weights": {
  "lineno": 217,
  "symbols_in_volume": [
   "pandas.isna"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.utility_parity._combine_event_and_control": {
  "lineno": 21,
  "symbols_in_volume": [
   "pandas.notnull"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.utility_parity._merge_event_and_control_columns": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.show_versions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.show_versions._get_deps_info": {
  "lineno": 31,
  "symbols_in_volume": [
   "importlib.import_module",
   "sys.modules"
  ],
  "type": "function"
 },
 "fairlearn.show_versions._get_deps_info.get_version": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.show_versions._get_sys_info": {
  "lineno": 14,
  "symbols_in_volume": [
   "platform.platform",
   "sys.executable",
   "sys.version.replace"
  ],
  "type": "function"
 },
 "fairlearn.show_versions.show_versions": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.widget": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.widget._fairlearn_dashboard": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard.__init__": {
  "lineno": 41,
  "symbols_in_volume": [
   "IPython.display.display",
   "fairlearn.metrics._extra_metrics._balanced_root_mean_squared_error",
   "fairlearn.metrics._extra_metrics._mean_overprediction",
   "fairlearn.metrics._extra_metrics._mean_underprediction",
   "fairlearn.metrics._extra_metrics._root_mean_squared_error",
   "fairlearn.metrics._extra_metrics.false_negative_rate",
   "fairlearn.metrics._extra_metrics.false_positive_rate",
   "fairlearn.metrics._extra_metrics.mean_prediction",
   "fairlearn.metrics._extra_metrics.selection_rate",
   "fairlearn.metrics._extra_metrics.true_negative_rate",
   "numpy.shape",
   "sklearn.metrics.accuracy_score",
   "sklearn.metrics.f1_score",
   "sklearn.metrics.log_loss",
   "sklearn.metrics.mean_absolute_error",
   "sklearn.metrics.mean_squared_error",
   "sklearn.metrics.precision_score",
   "sklearn.metrics.r2_score",
   "sklearn.metrics.recall_score",
   "sklearn.metrics.roc_auc_score",
   "sklearn.metrics.zero_one_loss",
   "warnings.warn"
  ],
  "type": "function"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard._convert_to_list": {
  "lineno": 235,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard._on_request": {
  "lineno": 198,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn.metrics.MetricFrame"
  ],
  "type": "function"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard._sanitize_data_shape": {
  "lineno": 228,
  "symbols_in_volume": [
   "numpy.shape"
  ],
  "type": "function"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard._show": {
  "lineno": 225,
  "symbols_in_volume": [
   "IPython.display.display"
  ],
  "type": "function"
 },
 "fairlearn.widget._fairlearn_widget": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.widget._fairlearn_widget.FairlearnWidget": {
  "lineno": 10,
  "symbols_in_volume": [
   "ipywidgets.DOMWidget",
   "ipywidgets.register",
   "traitlets.Dict",
   "traitlets.Unicode"
  ],
  "type": "class"
 },
 "fairlearn.widget._jupyter_nbextension_paths": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.notebooks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.notebooks.test_notebooks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.notebooks.test_notebooks.ScrapSpec": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.notebooks.test_notebooks.ScrapSpec.__init__": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.notebooks.test_notebooks.ScrapSpec.code": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.notebooks.test_notebooks.ScrapSpec.expected": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.notebooks.test_notebooks.append_scrapbook_commands": {
  "lineno": 34,
  "symbols_in_volume": [
   "nbformat.NO_CONVERT",
   "nbformat.read",
   "nbformat.v4.new_code_cell",
   "nbformat.write"
  ],
  "type": "function"
 },
 "test.notebooks.test_notebooks.assay_one_notebook": {
  "lineno": 53,
  "symbols_in_volume": [
   "papermill.execute_notebook",
   "scrapbook.read_notebook"
  ],
  "type": "function"
 },
 "test.notebooks.test_notebooks.test_binary_classification_with_the_uci_credit_card_default_dataset": {
  "lineno": 104,
  "symbols_in_volume": [
   "pytest.mark.notebooks"
  ],
  "type": "function"
 },
 "test.notebooks.test_notebooks.test_grid_search_for_binary_classification": {
  "lineno": 79,
  "symbols_in_volume": [
   "pytest.approx",
   "pytest.mark.notebooks"
  ],
  "type": "function"
 },
 "test.notebooks.test_notebooks.test_mitigating_disparities_in_ranking_from_binary_data": {
  "lineno": 93,
  "symbols_in_volume": [
   "pytest.approx",
   "pytest.mark.notebooks"
  ],
  "type": "function"
 },
 "test.unit": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.conftest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.conftest.pytest_collection_modifyitems": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.conftest.pytest_configure": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.constants": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.datasets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.datasets.test_datasets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.datasets.test_datasets.TestFairlearnDataset": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.datasets.test_datasets.TestFairlearnDataset.test_dataset_as_X_y": {
  "lineno": 29,
  "symbols_in_volume": [
   "fairlearn.datasets.fetch_adult",
   "fairlearn.datasets.fetch_bank_marketing",
   "fairlearn.datasets.fetch_boston",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.datasets.test_datasets.TestFairlearnDataset.test_dataset_as_bunch": {
  "lineno": 15,
  "symbols_in_volume": [
   "fairlearn.datasets.fetch_adult",
   "fairlearn.datasets.fetch_bank_marketing",
   "fairlearn.datasets.fetch_boston",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.fixes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.fixes.get_sklearn_expected_1d_message": {
  "lineno": 7,
  "symbols_in_volume": [
   "sklearn.__version__"
  ],
  "type": "function"
 },
 "test.unit.input_convertors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.input_convertors._map_into_single_column": {
  "lineno": 97,
  "symbols_in_volume": [
   "fairlearn._input_validation._merge_columns",
   "numpy.array"
  ],
  "type": "function"
 },
 "test.unit.input_convertors.ensure_dataframe": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.input_convertors.ensure_list": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.input_convertors.ensure_list_1d": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.input_convertors.ensure_ndarray": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.input_convertors.ensure_ndarray_2d": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.expand_dims"
  ],
  "type": "function"
 },
 "test.unit.input_convertors.ensure_series": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.metrics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.data_for_test": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "module"
 },
 "test.unit.metrics.data_for_test.array_gen": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "test.unit.metrics.data_for_test.group_gen": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.metrics.sample_loader": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.INFO",
   "logging.getLogger",
   "os.path.dirname",
   "os.path.realpath"
  ],
  "type": "module"
 },
 "test.unit.metrics.sample_loader.load_sample_dashboard": {
  "lineno": 15,
  "symbols_in_volume": [
   "json.load",
   "os.path.join"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.test_all_correct": {
  "lineno": 10,
  "symbols_in_volume": [
   "fairlearn.metrics._balanced_root_mean_squared_error"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.test_all_incorrect": {
  "lineno": 19,
  "symbols_in_volume": [
   "fairlearn.metrics._balanced_root_mean_squared_error"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.test_probability_predict": {
  "lineno": 41,
  "symbols_in_volume": [
   "fairlearn.metrics._balanced_root_mean_squared_error"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.test_weighted": {
  "lineno": 28,
  "symbols_in_volume": [
   "fairlearn.metrics._balanced_root_mean_squared_error",
   "math.sqrt"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.test_y_true_not_0_1": {
  "lineno": 53,
  "symbols_in_volume": [
   "fairlearn.metrics._balanced_root_mean_squared_error",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_create_group_metric_set": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_create_group_metric_set.TestCreateGroupMetricSet": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_create_group_metric_set.TestCreateGroupMetricSet.test_regression_prediction_type": {
  "lineno": 216,
  "symbols_in_volume": [
   "fairlearn.metrics._group_metric_set._create_group_metric_set"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_create_group_metric_set.TestCreateGroupMetricSet.test_round_trip_1p_1f": {
  "lineno": 135,
  "symbols_in_volume": [
   "fairlearn.metrics._group_metric_set._create_group_metric_set",
   "pytest.mark.parametrize",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_create_group_metric_set.TestCreateGroupMetricSet.test_round_trip_2p_3f": {
  "lineno": 155,
  "symbols_in_volume": [
   "fairlearn.metrics._group_metric_set._create_group_metric_set",
   "pytest.mark.parametrize",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_create_group_metric_set.TestCreateGroupMetricSet.test_specific_metrics": {
  "lineno": 181,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "fairlearn.metrics._group_metric_set._create_group_metric_set",
   "sklearn.metrics.accuracy_score",
   "sklearn.metrics.roc_auc_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_create_group_metric_set.TestProcessPredictions": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_create_group_metric_set.TestProcessPredictions.test_results_are_sorted": {
  "lineno": 113,
  "symbols_in_volume": [
   "fairlearn.metrics._group_metric_set._process_predictions",
   "pytest.mark.parametrize",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_create_group_metric_set.TestProcessPredictions.test_smoke": {
  "lineno": 98,
  "symbols_in_volume": [
   "fairlearn.metrics._group_metric_set._process_predictions",
   "pytest.mark.parametrize",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_create_group_metric_set.TestProcessSensitiveFeatures": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_create_group_metric_set.TestProcessSensitiveFeatures.test_result_is_sorted": {
  "lineno": 83,
  "symbols_in_volume": [
   "fairlearn.metrics._group_metric_set._process_sensitive_features"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_create_group_metric_set.TestProcessSensitiveFeatures.test_smoke": {
  "lineno": 57,
  "symbols_in_volume": [
   "fairlearn.metrics._group_metric_set._process_sensitive_features",
   "pytest.mark.parametrize",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_create_group_metric_set.TestProcessSensitiveFeatures.test_smoke_string_groups": {
  "lineno": 70,
  "symbols_in_volume": [
   "fairlearn.metrics._group_metric_set._process_sensitive_features",
   "pytest.mark.parametrize",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_create_group_metric_set.validate_dashboard_dictionary": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.metrics.test_disparities": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_disparities.test_demographic_parity_difference": {
  "lineno": 20,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "fairlearn.metrics.demographic_parity_difference",
   "fairlearn.metrics.selection_rate",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_disparities.test_demographic_parity_difference_weighted": {
  "lineno": 29,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "fairlearn.metrics.demographic_parity_difference",
   "fairlearn.metrics.selection_rate",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_disparities.test_demographic_parity_ratio": {
  "lineno": 43,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "fairlearn.metrics.demographic_parity_ratio",
   "fairlearn.metrics.selection_rate",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_disparities.test_demographic_parity_ratio_weighted": {
  "lineno": 54,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "fairlearn.metrics.demographic_parity_ratio",
   "fairlearn.metrics.selection_rate",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_disparities.test_equalized_odds_difference": {
  "lineno": 68,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "fairlearn.metrics.equalized_odds_difference",
   "fairlearn.metrics.false_positive_rate",
   "fairlearn.metrics.true_positive_rate",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_disparities.test_equalized_odds_difference_weighted": {
  "lineno": 81,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "fairlearn.metrics.equalized_odds_difference",
   "fairlearn.metrics.false_positive_rate",
   "fairlearn.metrics.true_positive_rate",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_disparities.test_equalized_odds_ratio": {
  "lineno": 97,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "fairlearn.metrics.equalized_odds_ratio",
   "fairlearn.metrics.false_positive_rate",
   "fairlearn.metrics.true_positive_rate",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_disparities.test_equalized_odds_ratio_weighted": {
  "lineno": 110,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "fairlearn.metrics.equalized_odds_ratio",
   "fairlearn.metrics.false_positive_rate",
   "fairlearn.metrics.true_positive_rate",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_extra_metrics.TestFNR": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_extra_metrics.TestFNR.test_against_sklearn": {
  "lineno": 283,
  "symbols_in_volume": [
   "fairlearn.metrics.false_negative_rate",
   "pytest.approx",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestFNR.test_against_sklearn_weighted": {
  "lineno": 295,
  "symbols_in_volume": [
   "fairlearn.metrics.false_negative_rate",
   "pytest.approx",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestFNR.test_all_correct": {
  "lineno": 242,
  "symbols_in_volume": [
   "fairlearn.metrics.false_negative_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestFNR.test_none_correct": {
  "lineno": 249,
  "symbols_in_volume": [
   "fairlearn.metrics.false_negative_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestFNR.test_some_correct": {
  "lineno": 263,
  "symbols_in_volume": [
   "fairlearn.metrics.false_negative_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestFNR.test_some_correct_other_labels": {
  "lineno": 274,
  "symbols_in_volume": [
   "fairlearn.metrics.false_negative_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestFNR.test_with_false_positive": {
  "lineno": 256,
  "symbols_in_volume": [
   "fairlearn.metrics.false_negative_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestFPR": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_extra_metrics.TestFPR.test_against_sklearn": {
  "lineno": 338,
  "symbols_in_volume": [
   "fairlearn.metrics.false_positive_rate",
   "sklearn.metrics.confusion_matrix"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestFPR.test_against_sklearn_weighted": {
  "lineno": 349,
  "symbols_in_volume": [
   "fairlearn.metrics.false_positive_rate",
   "sklearn.metrics.confusion_matrix"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestFPR.test_all_correct": {
  "lineno": 313,
  "symbols_in_volume": [
   "fairlearn.metrics.false_positive_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestFPR.test_none_correct": {
  "lineno": 320,
  "symbols_in_volume": [
   "fairlearn.metrics.false_positive_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestFPR.test_some_correct": {
  "lineno": 327,
  "symbols_in_volume": [
   "fairlearn.metrics.false_positive_rate",
   "pytest.approx"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestGetLabelsForConfusionMatrix": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_extra_metrics.TestGetLabelsForConfusionMatrix.test_need_pos_label": {
  "lineno": 67,
  "symbols_in_volume": [
   "fairlearn.metrics._extra_metrics._get_labels_for_confusion_matrix",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestGetLabelsForConfusionMatrix.test_pos_label_not_in_data": {
  "lineno": 76,
  "symbols_in_volume": [
   "fairlearn.metrics._extra_metrics._get_labels_for_confusion_matrix",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestGetLabelsForConfusionMatrix.test_single_value_alpha_pos_label": {
  "lineno": 47,
  "symbols_in_volume": [
   "fairlearn.metrics._extra_metrics._get_labels_for_confusion_matrix",
   "numpy.array_equal"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestGetLabelsForConfusionMatrix.test_single_value_numeric_no_pos_label": {
  "lineno": 33,
  "symbols_in_volume": [
   "fairlearn.metrics._extra_metrics._get_labels_for_confusion_matrix",
   "numpy.array_equal"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestGetLabelsForConfusionMatrix.test_single_value_numeric_pos_label": {
  "lineno": 41,
  "symbols_in_volume": [
   "fairlearn.metrics._extra_metrics._get_labels_for_confusion_matrix",
   "numpy.array_equal"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestGetLabelsForConfusionMatrix.test_smoke": {
  "lineno": 15,
  "symbols_in_volume": [
   "fairlearn.metrics._extra_metrics._get_labels_for_confusion_matrix",
   "numpy.array_equal"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestGetLabelsForConfusionMatrix.test_smoke_alpha_pos_label": {
  "lineno": 27,
  "symbols_in_volume": [
   "fairlearn.metrics._extra_metrics._get_labels_for_confusion_matrix",
   "numpy.array_equal"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestGetLabelsForConfusionMatrix.test_smoke_numeric_pos_label": {
  "lineno": 21,
  "symbols_in_volume": [
   "fairlearn.metrics._extra_metrics._get_labels_for_confusion_matrix",
   "numpy.array_equal"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestGetLabelsForConfusionMatrix.test_too_many_values": {
  "lineno": 53,
  "symbols_in_volume": [
   "fairlearn.metrics._extra_metrics._get_labels_for_confusion_matrix",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestSingleValueArrays": {
  "lineno": 364,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_extra_metrics.TestSingleValueArrays.test_all_negative_ones": {
  "lineno": 403,
  "symbols_in_volume": [
   "fairlearn.metrics.false_negative_rate",
   "fairlearn.metrics.false_positive_rate",
   "fairlearn.metrics.true_negative_rate",
   "fairlearn.metrics.true_positive_rate",
   "numpy.ones"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestSingleValueArrays.test_all_ones": {
  "lineno": 384,
  "symbols_in_volume": [
   "fairlearn.metrics.false_negative_rate",
   "fairlearn.metrics.false_positive_rate",
   "fairlearn.metrics.true_negative_rate",
   "fairlearn.metrics.true_positive_rate",
   "numpy.ones"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestSingleValueArrays.test_all_zeros": {
  "lineno": 365,
  "symbols_in_volume": [
   "fairlearn.metrics.false_negative_rate",
   "fairlearn.metrics.false_positive_rate",
   "fairlearn.metrics.true_negative_rate",
   "fairlearn.metrics.true_positive_rate",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestTNR": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_extra_metrics.TestTNR.test_against_sklearn": {
  "lineno": 208,
  "symbols_in_volume": [
   "fairlearn.metrics.true_negative_rate",
   "sklearn.metrics.confusion_matrix"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestTNR.test_against_sklearn_weighted": {
  "lineno": 221,
  "symbols_in_volume": [
   "fairlearn.metrics.true_negative_rate",
   "sklearn.metrics.confusion_matrix"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestTNR.test_all_correct": {
  "lineno": 163,
  "symbols_in_volume": [
   "fairlearn.metrics.true_negative_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestTNR.test_none_correct": {
  "lineno": 173,
  "symbols_in_volume": [
   "fairlearn.metrics.true_negative_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestTNR.test_some_correct": {
  "lineno": 183,
  "symbols_in_volume": [
   "fairlearn.metrics.true_negative_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestTNR.test_some_correct_other_labels": {
  "lineno": 192,
  "symbols_in_volume": [
   "fairlearn.metrics.true_negative_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestTNR.test_tnr_some_correct_with_false_negative": {
  "lineno": 201,
  "symbols_in_volume": [
   "fairlearn.metrics.true_negative_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestTPR": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_extra_metrics.TestTPR.test_against_sklearn": {
  "lineno": 116,
  "symbols_in_volume": [
   "fairlearn.metrics.true_positive_rate",
   "pytest.approx",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestTPR.test_against_sklearn_weighted": {
  "lineno": 128,
  "symbols_in_volume": [
   "fairlearn.metrics.true_positive_rate",
   "pytest.approx",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestTPR.test_all_correct": {
  "lineno": 87,
  "symbols_in_volume": [
   "fairlearn.metrics.true_positive_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestTPR.test_none_correct": {
  "lineno": 97,
  "symbols_in_volume": [
   "fairlearn.metrics.true_positive_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestTPR.test_some_correct": {
  "lineno": 107,
  "symbols_in_volume": [
   "fairlearn.metrics.true_positive_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestTPR.test_tpr_values_alpha": {
  "lineno": 143,
  "symbols_in_volume": [
   "fairlearn.metrics.true_positive_rate",
   "pytest.approx",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_function_container": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_function_container.test_constructor_named": {
  "lineno": 32,
  "symbols_in_volume": [
   "fairlearn.metrics._function_container.FunctionContainer",
   "numpy.array_equal",
   "numpy.ndarray",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_function_container.test_constructor_no_name": {
  "lineno": 20,
  "symbols_in_volume": [
   "fairlearn.metrics._function_container.FunctionContainer",
   "functools.partial",
   "numpy.array_equal",
   "numpy.ndarray",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_function_container.test_constructor_unnamed": {
  "lineno": 10,
  "symbols_in_volume": [
   "fairlearn.metrics._function_container.FunctionContainer",
   "numpy.array_equal",
   "numpy.ndarray",
   "sklearn.metrics.recall_score",
   "sklearn.metrics.recall_score.__name__"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_function_container.test_function_evaluation": {
  "lineno": 54,
  "symbols_in_volume": [
   "fairlearn.metrics._function_container.FunctionContainer",
   "numpy.asarray",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_function_container.test_function_evaluation_sample_param_none": {
  "lineno": 78,
  "symbols_in_volume": [
   "fairlearn.metrics._function_container.FunctionContainer",
   "numpy.asarray",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_function_container.test_generate_sample_params_for_mask": {
  "lineno": 42,
  "symbols_in_volume": [
   "fairlearn.metrics._function_container.FunctionContainer",
   "numpy.array_equal",
   "numpy.ndarray",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_generated_metrics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_generated_metrics.test_against_demographic_parity_difference": {
  "lineno": 59,
  "symbols_in_volume": [
   "fairlearn.metrics.demographic_parity_difference",
   "fairlearn.metrics.selection_rate_difference",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_generated_metrics.test_against_demographic_parity_ratio": {
  "lineno": 70,
  "symbols_in_volume": [
   "fairlearn.metrics.demographic_parity_ratio",
   "fairlearn.metrics.selection_rate_ratio",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_generated_metrics.test_dict_sizes": {
  "lineno": 45,
  "symbols_in_volume": [
   "fairlearn.metrics._generated_metric_dict"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_generated_metrics.test_generated_metrics_smoke": {
  "lineno": 49,
  "symbols_in_volume": [
   "fairlearn.metrics",
   "pytest.approx",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_feature": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_group_feature.common_validations": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.array_equal"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_feature.test_Series_int_name": {
  "lineno": 80,
  "symbols_in_volume": [
   "fairlearn.metrics._group_feature.GroupFeature",
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_feature.test_list": {
  "lineno": 26,
  "symbols_in_volume": [
   "fairlearn.metrics._group_feature.GroupFeature"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_feature.test_named_Series": {
  "lineno": 59,
  "symbols_in_volume": [
   "fairlearn.metrics._group_feature.GroupFeature",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_feature.test_named_Series_override_name": {
  "lineno": 69,
  "symbols_in_volume": [
   "fairlearn.metrics._group_feature.GroupFeature",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_feature.test_named_list": {
  "lineno": 33,
  "symbols_in_volume": [
   "fairlearn.metrics._group_feature.GroupFeature"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_feature.test_ndarray": {
  "lineno": 41,
  "symbols_in_volume": [
   "fairlearn.metrics._group_feature.GroupFeature",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_feature.test_unnamed_Series": {
  "lineno": 50,
  "symbols_in_volume": [
   "fairlearn.metrics._group_feature.GroupFeature",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArray1D": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArray1D.test_2d_raises_exception": {
  "lineno": 84,
  "symbols_in_volume": [
   "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArray1D.test_simple_list": {
  "lineno": 53,
  "symbols_in_volume": [
   "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArray1D.test_simple_nested_list": {
  "lineno": 64,
  "symbols_in_volume": [
   "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArray1D.test_simple_transposed_list": {
  "lineno": 74,
  "symbols_in_volume": [
   "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArrayAndSqueeze": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArrayAndSqueeze.test_multi_columns": {
  "lineno": 32,
  "symbols_in_volume": [
   "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArrayAndSqueeze.test_multi_rows": {
  "lineno": 22,
  "symbols_in_volume": [
   "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArrayAndSqueeze.test_simple_list": {
  "lineno": 11,
  "symbols_in_volume": [
   "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArrayAndSqueeze.test_single_element": {
  "lineno": 42,
  "symbols_in_volume": [
   "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.full"
  ],
  "type": "module"
 },
 "test.unit.metrics.test_make_derived_metric.test_bad_transform_rejected": {
  "lineno": 222,
  "symbols_in_volume": [
   "fairlearn.metrics.make_derived_metric",
   "pytest.raises",
   "sklearn.metrics.accuracy_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_derived_difference_between_groups": {
  "lineno": 29,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "fairlearn.metrics.make_derived_metric",
   "sklearn.metrics.accuracy_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_derived_difference_both_arg_types": {
  "lineno": 101,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "fairlearn.metrics.make_derived_metric",
   "functools.partial",
   "sklearn.metrics.fbeta_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_derived_difference_both_arg_types_default_sample_param_names": {
  "lineno": 122,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "fairlearn.metrics.make_derived_metric",
   "functools.partial",
   "sklearn.metrics.fbeta_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_derived_difference_broadcast_arg": {
  "lineno": 68,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "fairlearn.metrics.make_derived_metric",
   "functools.partial",
   "sklearn.metrics.fbeta_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_derived_difference_default_is_between_groups": {
  "lineno": 42,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "fairlearn.metrics.make_derived_metric",
   "sklearn.metrics.accuracy_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_derived_difference_sample_arg": {
  "lineno": 85,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "fairlearn.metrics.make_derived_metric",
   "functools.partial",
   "sklearn.metrics.fbeta_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_derived_difference_to_overall": {
  "lineno": 55,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "fairlearn.metrics.make_derived_metric",
   "sklearn.metrics.accuracy_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_derived_ratio_between_groups": {
  "lineno": 141,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "fairlearn.metrics.make_derived_metric",
   "sklearn.metrics.precision_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_derived_ratio_default_is_between_groups": {
  "lineno": 153,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "fairlearn.metrics.make_derived_metric",
   "sklearn.metrics.precision_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_derived_ratio_to_overall": {
  "lineno": 165,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "fairlearn.metrics.make_derived_metric",
   "sklearn.metrics.precision_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_function_method_arg_rejected": {
  "lineno": 208,
  "symbols_in_volume": [
   "fairlearn.metrics.make_derived_metric",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_function_method_arg_rejected.bad_fn": {
  "lineno": 210,
  "symbols_in_volume": [
   "sklearn.metrics.accuracy_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_group_max": {
  "lineno": 189,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "fairlearn.metrics.make_derived_metric",
   "sklearn.metrics.precision_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_group_min": {
  "lineno": 177,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "fairlearn.metrics.make_derived_metric",
   "sklearn.metrics.precision_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_noncallable_rejected": {
  "lineno": 201,
  "symbols_in_volume": [
   "fairlearn.metrics.make_derived_metric",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_overprediction_unweighted": {
  "lineno": 45,
  "symbols_in_volume": [
   "fairlearn.metrics._mean_overprediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_overprediction_unweighted_single": {
  "lineno": 54,
  "symbols_in_volume": [
   "fairlearn.metrics._mean_overprediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_overprediction_weighted": {
  "lineno": 63,
  "symbols_in_volume": [
   "fairlearn.metrics._mean_overprediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_overprediction_weighted_single": {
  "lineno": 73,
  "symbols_in_volume": [
   "fairlearn.metrics._mean_overprediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_prediction_single": {
  "lineno": 16,
  "symbols_in_volume": [
   "fairlearn.metrics.mean_prediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_prediction_unweighted": {
  "lineno": 7,
  "symbols_in_volume": [
   "fairlearn.metrics.mean_prediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_prediction_weighted": {
  "lineno": 25,
  "symbols_in_volume": [
   "fairlearn.metrics.mean_prediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_prediction_weighted_single": {
  "lineno": 35,
  "symbols_in_volume": [
   "fairlearn.metrics.mean_prediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_underprediction_unweighted": {
  "lineno": 83,
  "symbols_in_volume": [
   "fairlearn.metrics._mean_underprediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_underprediction_unweighted_single": {
  "lineno": 92,
  "symbols_in_volume": [
   "fairlearn.metrics._mean_underprediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_underprediction_weighted": {
  "lineno": 101,
  "symbols_in_volume": [
   "fairlearn.metrics._mean_underprediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_underprediction_weighted_single": {
  "lineno": 111,
  "symbols_in_volume": [
   "fairlearn.metrics._mean_underprediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.metrics.accuracy_score",
   "sklearn.metrics.balanced_accuracy_score",
   "sklearn.metrics.precision_score",
   "sklearn.metrics.recall_score"
  ],
  "type": "module"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sf": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sf._prepare": {
  "lineno": 308,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.logical_and",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sf.test_difference_between_groups": {
  "lineno": 359,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sf.test_difference_to_overall": {
  "lineno": 369,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sf.test_max": {
  "lineno": 349,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sf.test_min": {
  "lineno": 339,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sf.test_ratio_between_groups": {
  "lineno": 383,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sf.test_ratio_to_overall": {
  "lineno": 393,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.approx",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sfFnDict": {
  "lineno": 412,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sfFnDict._prepare": {
  "lineno": 414,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.logical_and",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sfFnDict.test_difference_between_groups": {
  "lineno": 464,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sfFnDict.test_difference_to_overall": {
  "lineno": 474,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sfFnDict.test_max": {
  "lineno": 454,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sfFnDict.test_min": {
  "lineno": 444,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sfFnDict.test_ratio_between_groups": {
  "lineno": 488,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sfFnDict.test_ratio_to_overall": {
  "lineno": 498,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.approx",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cf": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cf._prepare": {
  "lineno": 22,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cf.test_difference_between_groups": {
  "lineno": 55,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cf.test_difference_defaults_to_between_groups": {
  "lineno": 63,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cf.test_difference_to_overall": {
  "lineno": 71,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cf.test_max": {
  "lineno": 47,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cf.test_min": {
  "lineno": 39,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cf.test_ratio_between_groups": {
  "lineno": 81,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cf.test_ratio_defaults_to_between_groups": {
  "lineno": 90,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cf.test_ratio_to_overall": {
  "lineno": 99,
  "symbols_in_volume": [
   "pytest.approx",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cfFnDict": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cfFnDict._prepare": {
  "lineno": 118,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cfFnDict.test_difference_between_groups": {
  "lineno": 152,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cfFnDict.test_difference_defaults_to_between_groups": {
  "lineno": 161,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cfFnDict.test_difference_to_overall": {
  "lineno": 170,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cfFnDict.test_max": {
  "lineno": 143,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cfFnDict.test_min": {
  "lineno": 134,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cfFnDict.test_ratio_between_groups": {
  "lineno": 181,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cfFnDict.test_ratio_defaults_to_between_groups": {
  "lineno": 191,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cfFnDict.test_ratio_to_overall": {
  "lineno": 201,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.approx",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cf": {
  "lineno": 517,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cf._prepare": {
  "lineno": 519,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.logical_and",
   "numpy.stack",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cf.test_difference_between_groups": {
  "lineno": 598,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cf.test_difference_to_overall": {
  "lineno": 610,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cf.test_max": {
  "lineno": 586,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cf.test_min": {
  "lineno": 574,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cf.test_ratio_between_groups": {
  "lineno": 627,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cf.test_ratio_to_overall": {
  "lineno": 643,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.approx",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cfFnDict": {
  "lineno": 665,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cfFnDict._prepare": {
  "lineno": 667,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.logical_and",
   "numpy.stack",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cfFnDict.test_difference_between_groups": {
  "lineno": 745,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cfFnDict.test_difference_to_overall": {
  "lineno": 757,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cfFnDict.test_max": {
  "lineno": 733,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cfFnDict.test_min": {
  "lineno": 721,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cfFnDict.test_ratio_between_groups": {
  "lineno": 774,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cfFnDict.test_ratio_to_overall": {
  "lineno": 790,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.approx",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf0cf": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf0cf._prepare": {
  "lineno": 220,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "pandas.Series",
   "sklearn.metrics.precision_score",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf0cf.test_difference_between_groups": {
  "lineno": 256,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf0cf.test_difference_to_overall": {
  "lineno": 265,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf0cf.test_max": {
  "lineno": 248,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf0cf.test_min": {
  "lineno": 239,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf0cf.test_ratio_between_groups": {
  "lineno": 276,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf0cf.test_ratio_to_overall": {
  "lineno": 286,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.approx"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf1cf": {
  "lineno": 812,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf1cf._prepare": {
  "lineno": 813,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.logical_and",
   "pandas.DataFrame",
   "sklearn.metrics.precision_score",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf1cf.test_difference_between_groups": {
  "lineno": 877,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf1cf.test_difference_to_overall": {
  "lineno": 888,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf1cf.test_max": {
  "lineno": 866,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf1cf.test_min": {
  "lineno": 855,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf1cf.test_ratio_between_groups": {
  "lineno": 903,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf1cf.test_ratio_to_overall": {
  "lineno": 914,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.approx"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.test_2m_1sf_2cf": {
  "lineno": 935,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.logical_and",
   "pandas.DataFrame",
   "pytest.approx",
   "sklearn.metrics.precision_score",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_by_group": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.metrics.accuracy_score",
   "sklearn.metrics.balanced_accuracy_score",
   "sklearn.metrics.precision_score",
   "sklearn.metrics.recall_score"
  ],
  "type": "module"
 },
 "test.unit.metrics.test_metricframe_by_group.test_1m_1sf_0cf": {
  "lineno": 20,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.array_equal",
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_by_group.test_1m_1sf_0cf_metric_dict": {
  "lineno": 38,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.array_equal",
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_by_group.test_1m_1sf_1cf": {
  "lineno": 56,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.array_equal",
   "numpy.logical_and",
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_by_group.test_1m_1sf_1cf_metric_dict": {
  "lineno": 84,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.array_equal",
   "numpy.logical_and",
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_by_group.test_2m_2sf_2cf": {
  "lineno": 112,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.array_equal",
   "numpy.logical_and",
   "numpy.stack",
   "pandas.DataFrame",
   "sklearn.metrics.precision_score",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_comprehensive": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_metricframe_comprehensive.test_3m_2sf_2cf": {
  "lineno": 14,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.logical_and",
   "numpy.random.default_rng",
   "numpy.stack",
   "numpy.unique",
   "pandas.DataFrame",
   "pytest.approx",
   "sklearn.metrics.accuracy_score",
   "sklearn.metrics.precision_score",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_feature_indexing": {
  "lineno": null,
  "symbols_in_volume": [
   "fairlearn.metrics._group_feature.GroupFeature"
  ],
  "type": "module"
 },
 "test.unit.metrics.test_metricframe_feature_indexing.TestSingleFeatureIndexing": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_metricframe_feature_indexing.TestSingleFeatureIndexing.test_mask_from_tuple_0": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.array_equal"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_feature_indexing.TestTwoFeatureIndexing": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_metricframe_feature_indexing.TestTwoFeatureIndexing.test_mask_from_tuple": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.array_equal"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_missing": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.asarray",
   "sklearn.metrics.accuracy_score",
   "sklearn.metrics.balanced_accuracy_score",
   "sklearn.metrics.precision_score",
   "sklearn.metrics.recall_score"
  ],
  "type": "module"
 },
 "test.unit.metrics.test_metricframe_missing.test_missing_conditional_feature_combinations": {
  "lineno": 59,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.isnan",
   "numpy.logical_and",
   "numpy.stack",
   "numpy.unique",
   "pytest.approx",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_missing.test_missing_sensitive_feature_combinations": {
  "lineno": 23,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.isnan",
   "numpy.logical_and",
   "numpy.stack",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_multiclass": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "module"
 },
 "test.unit.metrics.test_metricframe_multiclass.test_roc_auc": {
  "lineno": 25,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "functools.partial",
   "numpy.unique",
   "sklearn.metrics.roc_auc_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_nonscalar": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_metricframe_nonscalar.test_1m_1sf_0cf": {
  "lineno": 13,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.array_equal",
   "numpy.unique",
   "sklearn.metrics.confusion_matrix"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_nonscalar.test_1m_1sf_1cf": {
  "lineno": 29,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.array_equal",
   "numpy.logical_and",
   "numpy.unique",
   "sklearn.metrics.confusion_matrix"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_nonscalar.test_mixed_metrics": {
  "lineno": 50,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.array_equal",
   "numpy.unique",
   "sklearn.metrics.confusion_matrix",
   "sklearn.metrics.precision_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_nonscalar.test_multid_input_output": {
  "lineno": 72,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "functools.partial",
   "numpy.array_equal",
   "numpy.random.rand",
   "numpy.unique",
   "sklearn.metrics.r2_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_overall": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.metrics.accuracy_score",
   "sklearn.metrics.balanced_accuracy_score",
   "sklearn.metrics.precision_score",
   "sklearn.metrics.recall_score"
  ],
  "type": "module"
 },
 "test.unit.metrics.test_metricframe_overall.test_1m_0cf": {
  "lineno": 20,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_overall.test_1m_0cf_metric_dict": {
  "lineno": 33,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_overall.test_1m_0cf_wgt": {
  "lineno": 47,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_overall.test_1m_0cf_wgt_metric_dict": {
  "lineno": 62,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_overall.test_1m_1cf": {
  "lineno": 92,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_overall.test_1m_1cf_metric_dict": {
  "lineno": 112,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.array_equal",
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_overall.test_1m_1cf_wgt": {
  "lineno": 131,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "pandas.Series",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_overall.test_1m_1cf_wgt_metric_dict": {
  "lineno": 151,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.array_equal",
   "pandas.DataFrame",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_overall.test_1m_2cf": {
  "lineno": 173,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.array_equal",
   "numpy.logical_and",
   "numpy.stack",
   "pandas.Series",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_overall.test_1m_2cf_metric_dict": {
  "lineno": 199,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.array_equal",
   "numpy.logical_and",
   "numpy.stack",
   "pandas.DataFrame",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_overall.test_2m_0cf": {
  "lineno": 77,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "pandas.Series",
   "sklearn.metrics.precision_score",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_overall.test_2m_2cf": {
  "lineno": 225,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.logical_and",
   "numpy.stack",
   "pandas.DataFrame",
   "sklearn.metrics.precision_score",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_metricframe_process_features.TestSingleFeature": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_metricframe_process_features.TestSingleFeature._common_validations": {
  "lineno": 16,
  "symbols_in_volume": [
   "fairlearn.metrics._group_feature.GroupFeature",
   "numpy.array_equal"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestSingleFeature._get_raw_data": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestSingleFeature.test_1d_array": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestSingleFeature.test_single_column_dataframe": {
  "lineno": 57,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestSingleFeature.test_single_column_dataframe_integer_name": {
  "lineno": 83,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestSingleFeature.test_single_column_dataframe_unnamed": {
  "lineno": 65,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestSingleFeature.test_single_dict": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestSingleFeature.test_single_list": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestSingleFeature.test_single_series": {
  "lineno": 31,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestSingleFeature.test_single_series_integer_name": {
  "lineno": 39,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestTwoFeatures": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_metricframe_process_features.TestTwoFeatures._common_validations": {
  "lineno": 98,
  "symbols_in_volume": [
   "fairlearn.metrics._group_feature.GroupFeature",
   "numpy.array_equal"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestTwoFeatures._get_raw_data": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestTwoFeatures.test_2d_array": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.object"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestTwoFeatures.test_dictionary": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestTwoFeatures.test_list_of_series": {
  "lineno": 152,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestTwoFeatures.test_named_dataframe": {
  "lineno": 131,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestTwoFeatures.test_nested_list": {
  "lineno": 112,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestTwoFeatures.test_unnamed_dataframe": {
  "lineno": 141,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_smoke": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_metricframe_smoke.test_1m_1sf_1cf": {
  "lineno": 103,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.logical_and",
   "pandas.Series",
   "pytest.mark.parametrize",
   "sklearn.metrics.recall_score",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_smoke.test_1m_1sf_1cf_metric_dict": {
  "lineno": 166,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.logical_and",
   "pandas.DataFrame",
   "pytest.mark.parametrize",
   "sklearn.metrics.recall_score",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_smoke.test_basic": {
  "lineno": 16,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.array_equal",
   "pandas.DataFrame",
   "pandas.Series",
   "pytest.mark.parametrize",
   "sklearn.metrics.recall_score",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_smoke.test_basic_metric_dict": {
  "lineno": 58,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.array_equal",
   "pandas.DataFrame",
   "pandas.Series",
   "pytest.mark.parametrize",
   "sklearn.metrics.recall_score",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_smoke.test_duplicate_cf_names": {
  "lineno": 240,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.stack",
   "pandas.DataFrame",
   "pytest.raises",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_smoke.test_duplicate_cf_sf_names": {
  "lineno": 252,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.stack",
   "pandas.DataFrame",
   "pytest.raises",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_smoke.test_duplicate_sf_names": {
  "lineno": 229,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.stack",
   "pandas.DataFrame",
   "pytest.raises",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_smoke.test_single_element_lists": {
  "lineno": 265,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "sklearn.metrics.balanced_accuracy_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_selection_rate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_selection_rate.test_selection_rate_empty": {
  "lineno": 10,
  "symbols_in_volume": [
   "fairlearn.metrics._selection_rate._EMPTY_INPUT_PREDICTIONS_ERROR_MESSAGE",
   "fairlearn.metrics.selection_rate",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_selection_rate.test_selection_rate_non_numeric": {
  "lineno": 42,
  "symbols_in_volume": [
   "fairlearn.metrics.selection_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_selection_rate.test_selection_rate_single_element": {
  "lineno": 16,
  "symbols_in_volume": [
   "fairlearn.metrics.selection_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_selection_rate.test_selection_rate_unweighted": {
  "lineno": 23,
  "symbols_in_volume": [
   "fairlearn.metrics.selection_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_selection_rate.test_selection_rate_weighted": {
  "lineno": 32,
  "symbols_in_volume": [
   "fairlearn.metrics.selection_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.utils._get_raw_MetricFrame": {
  "lineno": 7,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "fairlearn.metrics.MetricFrame.__new__"
  ],
  "type": "function"
 },
 "test.unit.postprocessing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.postprocessing.conftest": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "numpy.array",
   "numpy.hstack",
   "numpy.stack",
   "test.unit.input_convertors.ensure_dataframe",
   "test.unit.input_convertors.ensure_list_1d",
   "test.unit.input_convertors.ensure_ndarray",
   "test.unit.input_convertors.ensure_ndarray_2d",
   "test.unit.input_convertors.ensure_series"
  ],
  "type": "module"
 },
 "test.unit.postprocessing.conftest.ExampleNotEstimator1": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.postprocessing.conftest.ExampleNotEstimator1.fit": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.postprocessing.conftest.ExampleNotEstimator2": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.postprocessing.conftest.ExampleNotEstimator2.predict": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.postprocessing.conftest.ExampleNotPredictor": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.postprocessing.conftest.ExamplePredictor": {
  "lineno": 105,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClassifierMixin"
  ],
  "type": "class"
 },
 "test.unit.postprocessing.conftest.ExamplePredictor.__init__": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.postprocessing.conftest.ExamplePredictor.fit": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.postprocessing.conftest.ExamplePredictor.predict": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.postprocessing.conftest._get_grouped_data_and_base_points": {
  "lineno": 131,
  "symbols_in_volume": [
   "fairlearn.postprocessing._constants.LABEL_KEY",
   "fairlearn.postprocessing._constants.SCORE_KEY",
   "fairlearn.postprocessing._constants.SENSITIVE_FEATURE_KEY",
   "fairlearn.postprocessing._threshold_operation.ThresholdOperation",
   "numpy.inf",
   "numpy.linspace",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.conftest._get_predictions_by_sensitive_feature": {
  "lineno": 176,
  "symbols_in_volume": [
   "collections.defaultdict",
   "test.unit.input_convertors._map_into_single_column"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.conftest.data": {
  "lineno": 67,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.conftest.data_X_sf": {
  "lineno": 91,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.conftest.data_X_y_sf": {
  "lineno": 98,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.conftest.data_sf": {
  "lineno": 84,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.conftest.is_invalid_transformation": {
  "lineno": 72,
  "symbols_in_volume": [
   "test.unit.input_convertors.ensure_list_1d",
   "test.unit.input_convertors.ensure_series"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.postprocessing.test_curve_utilities._assert_equal_points": {
  "lineno": 194,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities._assert_interpolated_points_are_between_base_points": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities._assert_interpolated_points_are_between_base_points._get_base_point_coordinates": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities.test_assert_interpolated_curve": {
  "lineno": 19,
  "symbols_in_volume": [
   "fairlearn.postprocessing._tradeoff_curve_utilities._interpolate_curve",
   "numpy.linspace",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities.test_calculate_tradeoff_points": {
  "lineno": 86,
  "symbols_in_volume": [
   "fairlearn.postprocessing._constants.LABEL_KEY",
   "fairlearn.postprocessing._constants.SCORE_KEY",
   "fairlearn.postprocessing._constants.SENSITIVE_FEATURE_KEY",
   "fairlearn.postprocessing._threshold_operation.ThresholdOperation",
   "fairlearn.postprocessing._tradeoff_curve_utilities._calculate_tradeoff_points",
   "fairlearn.postprocessing._tradeoff_curve_utilities._filter_points_to_get_convex_hull",
   "numpy.inf",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities.test_convex_hull": {
  "lineno": 46,
  "symbols_in_volume": [
   "fairlearn.postprocessing._tradeoff_curve_utilities._filter_points_to_get_convex_hull",
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities.test_interpolate_curve": {
  "lineno": 32,
  "symbols_in_volume": [
   "fairlearn.postprocessing._tradeoff_curve_utilities._interpolate_curve",
   "numpy.linspace",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities.test_tradeoff_curve": {
  "lineno": 126,
  "symbols_in_volume": [
   "fairlearn.postprocessing._tradeoff_curve_utilities._interpolate_curve",
   "fairlearn.postprocessing._tradeoff_curve_utilities._tradeoff_curve"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_plots": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.postprocessing.test_plots.TestPlots": {
  "lineno": 45,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "test.unit.postprocessing.test_plots.TestPlots.test_plot_demographic_parity_ex1": {
  "lineno": 59,
  "symbols_in_volume": [
   "pytest.mark.mpl_image_compare"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_plots.TestPlots.test_plot_demographic_parity_ex2": {
  "lineno": 63,
  "symbols_in_volume": [
   "pytest.mark.mpl_image_compare"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_plots.TestPlots.test_plot_demographic_parity_ex3": {
  "lineno": 67,
  "symbols_in_volume": [
   "pytest.mark.mpl_image_compare"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_plots.TestPlots.test_plot_equalized_odds_ex1": {
  "lineno": 47,
  "symbols_in_volume": [
   "pytest.mark.mpl_image_compare"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_plots.TestPlots.test_plot_equalized_odds_ex2": {
  "lineno": 51,
  "symbols_in_volume": [
   "pytest.mark.mpl_image_compare"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_plots.TestPlots.test_plot_equalized_odds_ex3": {
  "lineno": 55,
  "symbols_in_volume": [
   "pytest.mark.mpl_image_compare"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_plots._fit_and_plot": {
  "lineno": 24,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing.plot_threshold_optimizer",
   "matplotlib.pyplot.subplots"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_plots.is_mpl_installed": {
  "lineno": 36,
  "symbols_in_volume": [
   "pkg_resources.DistributionNotFound",
   "pkg_resources.get_distribution"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_smoke": {
  "lineno": null,
  "symbols_in_volume": [
   "lightgbm.LGBMClassifier",
   "platform.system",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.svm.SVC",
   "sklearn.tree.DecisionTreeClassifier"
  ],
  "type": "module"
 },
 "test.unit.postprocessing.test_smoke.test_smoke": {
  "lineno": 23,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "numpy.random.choice",
   "numpy.random.normal",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_operation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.postprocessing.test_threshold_operation.test_predict_from_operation_invalid_operator": {
  "lineno": 26,
  "symbols_in_volume": [
   "fairlearn.postprocessing._threshold_operation.ThresholdOperation",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_operation.test_predict_from_operation_less": {
  "lineno": 8,
  "symbols_in_volume": [
   "fairlearn.postprocessing._threshold_operation.ThresholdOperation"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_operation.test_predict_from_operation_more": {
  "lineno": 17,
  "symbols_in_volume": [
   "fairlearn.postprocessing._threshold_operation.ThresholdOperation"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.inf"
  ],
  "type": "module"
 },
 "test.unit.postprocessing.test_threshold_optimization.PassThroughPredictor": {
  "lineno": 153,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "test.unit.postprocessing.test_threshold_optimization.PassThroughPredictor.__init__": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.PassThroughPredictor.fit": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.PassThroughPredictor.predict": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_constraints_not_supported": {
  "lineno": 54,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._threshold_optimizer.NOT_SUPPORTED_CONSTRAINTS_ERROR_MESSAGE",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_constraints_objective_pairs": {
  "lineno": 616,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "pandas.Series",
   "pytest.approx",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_no_estimator_error": {
  "lineno": 47,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._threshold_optimizer.BASE_ESTIMATOR_NONE_ERROR_MESSAGE",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_none_input_data": {
  "lineno": 63,
  "symbols_in_volume": [
   "fairlearn._input_validation._MESSAGE_SENSITIVE_FEATURES_NONE",
   "fairlearn._input_validation._MESSAGE_Y_NONE",
   "fairlearn.postprocessing.ThresholdOptimizer",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_predict_before_fit_error": {
  "lineno": 30,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_predict_different_argument_lengths": {
  "lineno": 438,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_predict_output_0_or_1": {
  "lineno": 424,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_degenerate_labels": {
  "lineno": 109,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._tradeoff_curve_utilities.DEGENERATE_LABELS_ERROR_MESSAGE.format",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_demographic_parity": {
  "lineno": 168,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "numpy.isclose",
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_demographic_parity._average_prediction": {
  "lineno": 224,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_demographic_parity.prob_pred": {
  "lineno": 182,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_demographic_parity_e2e": {
  "lineno": 350,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "numpy.average",
   "numpy.isclose",
   "pytest.mark.uncollect_if",
   "test.unit.input_convertors._map_into_single_column"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_different_input_lengths": {
  "lineno": 124,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_equalized_odds": {
  "lineno": 237,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "numpy.isclose",
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_equalized_odds._average_prediction_for_label": {
  "lineno": 311,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_equalized_odds.prob_pred": {
  "lineno": 251,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_equalized_odds_e2e": {
  "lineno": 398,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "numpy.average",
   "numpy.isclose",
   "pytest.mark.uncollect_if",
   "test.unit.input_convertors._map_into_single_column"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_non_binary_labels": {
  "lineno": 88,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn._input_validation._LABELS_NOT_0_1_ERROR_MESSAGE",
   "fairlearn.postprocessing.ThresholdOptimizer",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.preprocessing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.preprocessing.linear_dep_remover": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.preprocessing.linear_dep_remover.test_sklearn_compat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.preprocessing.linear_dep_remover.test_sklearn_compat.test_estimator_checks": {
  "lineno": 12,
  "symbols_in_volume": [
   "fairlearn.preprocessing.CorrelationRemover",
   "fairlearn.preprocessing.CorrelationRemover.__name__",
   "pytest.mark.parametrize",
   "sklearn.utils.estimator_checks.check_complex_data",
   "sklearn.utils.estimator_checks.check_dict_unchanged",
   "sklearn.utils.estimator_checks.check_dont_overwrite_parameters",
   "sklearn.utils.estimator_checks.check_dtype_object",
   "sklearn.utils.estimator_checks.check_estimator_sparse_data",
   "sklearn.utils.estimator_checks.check_estimators_dtypes",
   "sklearn.utils.estimator_checks.check_estimators_empty_data_messages",
   "sklearn.utils.estimator_checks.check_estimators_fit_returns_self",
   "sklearn.utils.estimator_checks.check_estimators_nan_inf",
   "sklearn.utils.estimator_checks.check_estimators_overwrite_params",
   "sklearn.utils.estimator_checks.check_estimators_pickle",
   "sklearn.utils.estimator_checks.check_fit2d_1feature",
   "sklearn.utils.estimator_checks.check_fit2d_1sample",
   "sklearn.utils.estimator_checks.check_fit2d_predict1d",
   "sklearn.utils.estimator_checks.check_fit_score_takes_y",
   "sklearn.utils.estimator_checks.check_get_params_invariance",
   "sklearn.utils.estimator_checks.check_methods_subset_invariance",
   "sklearn.utils.estimator_checks.check_pipeline_consistency",
   "sklearn.utils.estimator_checks.check_sample_weights_list",
   "sklearn.utils.estimator_checks.check_sample_weights_pandas_series",
   "sklearn.utils.estimator_checks.check_set_params",
   "sklearn.utils.estimator_checks.check_transformer_general",
   "sklearn.utils.estimator_checks.check_transformers_unfitted"
  ],
  "type": "function"
 },
 "test.unit.preprocessing.linear_dep_remover.test_sklearn_compat.test_linear_dependence": {
  "lineno": 48,
  "symbols_in_volume": [
   "fairlearn.preprocessing.CorrelationRemover",
   "numpy.allclose",
   "numpy.array"
  ],
  "type": "function"
 },
 "test.unit.preprocessing.linear_dep_remover.test_sklearn_compat.test_linear_dependence_pd": {
  "lineno": 58,
  "symbols_in_volume": [
   "fairlearn.preprocessing.CorrelationRemover",
   "numpy.allclose",
   "numpy.array",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.reductions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.conftest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.conftest.is_invalid_transformation": {
  "lineno": 7,
  "symbols_in_volume": [
   "test.unit.input_convertors.ensure_list",
   "test.unit.input_convertors.ensure_series"
  ],
  "type": "function"
 },
 "test.unit.reductions.data_generators": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.data_generators.loan_scenario_generator": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.transpose",
   "pandas.DataFrame",
   "random.random",
   "random.seed"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresBinaryClassifierLearner": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresBinaryClassifierLearner.__init__": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresBinaryClassifierLearner.fit": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linalg.lstsq",
   "numpy.newaxis",
   "numpy.sqrt",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresBinaryClassifierLearner.predict": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresRegressor": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresRegressor.__init__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresRegressor.fit": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linalg.lstsq",
   "numpy.newaxis",
   "numpy.sqrt",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresRegressor.predict": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.MockEstimator": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.MockEstimator.fit": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.MockEstimator.predict": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.run_comparisons": {
  "lineno": 38,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "fairlearn.reductions.ExponentiatedGradient",
   "pandas.get_dummies",
   "sklearn.linear_model.LogisticRegression",
   "test.unit.reductions.data_generators.loan_scenario_generator"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.test_demographic_parity": {
  "lineno": 95,
  "symbols_in_volume": [
   "fairlearn.metrics.selection_rate",
   "fairlearn.reductions.DemographicParity"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.test_equalized_odds": {
  "lineno": 111,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "fairlearn.metrics.false_positive_rate",
   "fairlearn.metrics.true_positive_rate",
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions.ExponentiatedGradient",
   "pandas.get_dummies",
   "sklearn.linear_model.LogisticRegression",
   "test.unit.reductions.data_generators.loan_scenario_generator"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.test_error_rate_parity": {
  "lineno": 99,
  "symbols_in_volume": [
   "fairlearn.reductions.ErrorRateParity",
   "sklearn.metrics.accuracy_score"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.test_false_positive_rate_parity": {
  "lineno": 107,
  "symbols_in_volume": [
   "fairlearn.metrics.false_positive_rate",
   "fairlearn.reductions.FalsePositiveRateParity"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.test_true_positive_rate_parity": {
  "lineno": 103,
  "symbols_in_volume": [
   "fairlearn.metrics.true_positive_rate",
   "fairlearn.reductions.TruePositiveRateParity"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments": {
  "lineno": null,
  "symbols_in_volume": [
   "test.unit.input_convertors.conversions_for_1d",
   "test.unit.input_convertors.ensure_dataframe",
   "test.unit.input_convertors.ensure_ndarray"
  ],
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.TestExponentiatedGradientArguments": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.TestExponentiatedGradientArguments.test_argument_types_difference_bound": {
  "lineno": 36,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.ErrorRate",
   "fairlearn.reductions.ExponentiatedGradient",
   "numpy.all",
   "numpy.isclose",
   "pytest.approx",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "test.unit.input_convertors._map_into_single_column",
   "test.unit.reductions.conftest.is_invalid_transformation"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.TestExponentiatedGradientArguments.test_argument_types_difference_bound.Q": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.TestExponentiatedGradientArguments.test_argument_types_ratio_bound": {
  "lineno": 78,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.ErrorRate",
   "fairlearn.reductions.ExponentiatedGradient",
   "numpy.all",
   "numpy.isclose",
   "pytest.approx",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "test.unit.input_convertors._map_into_single_column",
   "test.unit.reductions.conftest.is_invalid_transformation"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.TestExponentiatedGradientArguments.test_argument_types_ratio_bound.Q": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.TestExponentiatedGradientArguments.test_binary_classifier_0_1_required": {
  "lineno": 156,
  "symbols_in_volume": [
   "fairlearn._input_validation._LABELS_NOT_0_1_ERROR_MESSAGE",
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.ExponentiatedGradient",
   "pytest.raises",
   "sklearn.linear_model.LogisticRegression"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.TestExponentiatedGradientArguments.test_input_X_unchanged": {
  "lineno": 122,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.ExponentiatedGradient",
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.TestExponentiatedGradientArguments.test_sample_weights_argument": {
  "lineno": 167,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.ExponentiatedGradient",
   "pytest.raises",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.pipeline.Pipeline",
   "sklearn.preprocessing.StandardScaler"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke": {
  "lineno": 27,
  "symbols_in_volume": [
   "fairlearn.reductions.AbsoluteLoss",
   "fairlearn.reductions.BoundedGroupLoss",
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions.ErrorRateParity",
   "fairlearn.reductions.FalsePositiveRateParity",
   "fairlearn.reductions.SquareLoss",
   "fairlearn.reductions.TruePositiveRateParity",
   "fairlearn.reductions.ZeroOneLoss"
  ],
  "type": "class"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke._assert_expgrad_state": {
  "lineno": 417,
  "symbols_in_volume": [
   "fairlearn.reductions._exponentiated_gradient._constants._MIN_ITER",
   "pytest.approx"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.run_smoke_test_binary_classification": {
  "lineno": 286,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn.reductions.ErrorRate",
   "fairlearn.reductions.ExponentiatedGradient",
   "pytest.approx"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.run_smoke_test_binary_classification.Q": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.test_simple_fit_predict_binary_classification": {
  "lineno": 365,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions.ErrorRateParity",
   "fairlearn.reductions.ExponentiatedGradient",
   "fairlearn.reductions.FalsePositiveRateParity",
   "fairlearn.reductions.TruePositiveRateParity",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.test_simple_fit_predict_regression": {
  "lineno": 378,
  "symbols_in_volume": [
   "fairlearn.reductions.AbsoluteLoss",
   "fairlearn.reductions.BoundedGroupLoss",
   "fairlearn.reductions.ExponentiatedGradient",
   "fairlearn.reductions.SquareLoss",
   "fairlearn.reductions.ZeroOneLoss",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.test_single_y_value": {
  "lineno": 389,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.ExponentiatedGradient",
   "numpy.array_equal",
   "pandas.DataFrame",
   "sklearn.dummy.DummyClassifier",
   "sklearn.linear_model.LogisticRegression"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.test_smoke": {
  "lineno": 320,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.test_smoke_flipped": {
  "lineno": 324,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.test_smoke_regression": {
  "lineno": 328,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn.reductions.ExponentiatedGradient",
   "fairlearn.reductions._moments.bounded_group_loss.MeanLoss",
   "pytest.approx",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.test_smoke_regression.Q": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian": {
  "lineno": null,
  "symbols_in_volume": [
   "fairlearn.reductions.BoundedGroupLoss",
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions.ErrorRateParity",
   "fairlearn.reductions.FalsePositiveRateParity",
   "fairlearn.reductions.TruePositiveRateParity"
  ],
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.get_lambda_new_weights_and_labels": {
  "lineno": 194,
  "symbols_in_volume": [
   "fairlearn.reductions.LossMoment"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.get_lambda_vec": {
  "lineno": 184,
  "symbols_in_volume": [
   "numpy.exp",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.test_call_oracle": {
  "lineno": 105,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn.reductions.LossMoment",
   "fairlearn.reductions.ZeroOneLoss",
   "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian",
   "pytest.mark.parametrize",
   "sklearn.base.BaseEstimator"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.test_call_oracle_single_y_value": {
  "lineno": 140,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn.reductions.BoundedGroupLoss",
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions.ErrorRateParity",
   "fairlearn.reductions.LossMoment",
   "fairlearn.reductions.ZeroOneLoss",
   "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian",
   "pandas.DataFrame",
   "pandas.Series",
   "pytest.mark.parametrize",
   "sklearn.dummy.DummyClassifier"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.test_lagrangian_eval": {
  "lineno": 36,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn.reductions.LossMoment",
   "fairlearn.reductions.ZeroOneLoss",
   "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian",
   "numpy.isclose",
   "numpy.sum",
   "pandas.Series",
   "pytest.approx",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.test_lagrangian_eval.h": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_utilities": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient.test_utilities._get_data": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.stack",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.grid_search.test_grid_generator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.grid_search.test_grid_generator.calculate_grid": {
  "lineno": 162,
  "symbols_in_volume": [
   "fairlearn.reductions._grid_search.grid_search._GridGenerator",
   "test.unit.reductions.grid_search.utilities._quick_data"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_generator.test_grid_generator_demographic_parity": {
  "lineno": 16,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions._moments.utility_parity._ALL",
   "fairlearn.reductions._moments.utility_parity._EVENT",
   "fairlearn.reductions._moments.utility_parity._GROUP_ID",
   "fairlearn.reductions._moments.utility_parity._SIGN",
   "numpy.isclose",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_generator.test_grid_generator_demographic_parity_with_center": {
  "lineno": 37,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions._moments.utility_parity._ALL",
   "fairlearn.reductions._moments.utility_parity._EVENT",
   "fairlearn.reductions._moments.utility_parity._GROUP_ID",
   "fairlearn.reductions._moments.utility_parity._SIGN",
   "numpy.isclose",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_generator.test_grid_generator_equalized_odds": {
  "lineno": 93,
  "symbols_in_volume": [
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions._moments.utility_parity._EVENT",
   "fairlearn.reductions._moments.utility_parity._GROUP_ID",
   "fairlearn.reductions._moments.utility_parity._SIGN",
   "numpy.isclose",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_generator.test_grid_generator_equalized_odds_basic": {
  "lineno": 65,
  "symbols_in_volume": [
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions._moments.utility_parity._EVENT",
   "fairlearn.reductions._moments.utility_parity._GROUP_ID",
   "fairlearn.reductions._moments.utility_parity._SIGN",
   "numpy.isclose",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_generator.test_grid_generator_equalized_odds_with_center": {
  "lineno": 123,
  "symbols_in_volume": [
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions._moments.utility_parity._EVENT",
   "fairlearn.reductions._moments.utility_parity._GROUP_ID",
   "fairlearn.reductions._moments.utility_parity._SIGN",
   "numpy.isclose",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments": {
  "lineno": null,
  "symbols_in_volume": [
   "test.unit.input_convertors.conversions_for_1d",
   "test.unit.input_convertors.ensure_dataframe",
   "test.unit.input_convertors.ensure_ndarray"
  ],
  "type": "module"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_X_A_different_rows": {
  "lineno": 115,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "numpy.random.randint",
   "numpy.stack",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "pytest.raises",
   "test.unit.reductions.conftest.is_invalid_transformation",
   "test.unit.reductions.grid_search.utilities._quick_data"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_X_Y_different_rows": {
  "lineno": 96,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "numpy.random.randint",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "pytest.raises",
   "test.unit.reductions.conftest.is_invalid_transformation",
   "test.unit.reductions.grid_search.utilities._quick_data"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_X_is_None": {
  "lineno": 62,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "pytest.raises",
   "test.unit.reductions.conftest.is_invalid_transformation",
   "test.unit.reductions.grid_search.utilities._quick_data"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_Y_df_bad_columns": {
  "lineno": 236,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "pandas.DataFrame",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "pytest.raises",
   "test.unit.fixes.get_sklearn_expected_1d_message",
   "test.unit.reductions.conftest.is_invalid_transformation",
   "test.unit.reductions.grid_search.utilities._quick_data"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_Y_is_None": {
  "lineno": 78,
  "symbols_in_volume": [
   "fairlearn._input_validation._MESSAGE_Y_NONE",
   "fairlearn.reductions.GridSearch",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "pytest.raises",
   "test.unit.reductions.conftest.is_invalid_transformation",
   "test.unit.reductions.grid_search.utilities._quick_data"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_Y_ndarray_bad_columns": {
  "lineno": 252,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "numpy.stack",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "pytest.raises",
   "test.unit.fixes.get_sklearn_expected_1d_message",
   "test.unit.reductions.conftest.is_invalid_transformation",
   "test.unit.reductions.grid_search.utilities._quick_data"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_grid_size_warning_up_to_5_sensitive_feature_group": {
  "lineno": 196,
  "symbols_in_volume": [
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions.GridSearch",
   "fairlearn.reductions._grid_search._grid_generator.GRID_SIZE_WARN_TEMPLATE.format",
   "logging.WARNING",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "pytest.skip",
   "test.unit.reductions.conftest.is_invalid_transformation",
   "test.unit.reductions.grid_search.utilities._quick_data"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_many_sensitive_feature_groups_warning": {
  "lineno": 138,
  "symbols_in_volume": [
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions.GridSearch",
   "fairlearn.reductions._grid_search._grid_generator.GRID_DIMENSION_WARN_TEMPLATE.format",
   "fairlearn.reductions._grid_search._grid_generator.GRID_DIMENSION_WARN_THRESHOLD",
   "fairlearn.reductions._grid_search._grid_generator.GRID_SIZE_WARN_TEMPLATE.format",
   "logging.WARNING",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "test.unit.reductions.conftest.is_invalid_transformation",
   "test.unit.reductions.grid_search.utilities._quick_data"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_no_predict_before_fit": {
  "lineno": 270,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "fairlearn.reductions.GridSearch.__name__",
   "pytest.raises",
   "sklearn.exceptions.NotFittedError",
   "test.unit.reductions.grid_search.utilities._quick_data"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_no_predict_proba_before_fit": {
  "lineno": 280,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "fairlearn.reductions.GridSearch.__name__",
   "pytest.raises",
   "sklearn.exceptions.NotFittedError",
   "test.unit.reductions.grid_search.utilities._quick_data"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_valid_inputs": {
  "lineno": 46,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "test.unit.reductions.conftest.is_invalid_transformation",
   "test.unit.reductions.grid_search.utilities._quick_data",
   "test.unit.reductions.grid_search.utilities.assert_n_grid_search_results"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ConditionalOpportunityTests": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ConditionalOpportunityTests.test_Y_not_0_1": {
  "lineno": 313,
  "symbols_in_volume": [
   "fairlearn._input_validation._LABELS_NOT_0_1_ERROR_MESSAGE",
   "fairlearn.reductions.GridSearch",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "pytest.raises",
   "test.unit.reductions.conftest.is_invalid_transformation",
   "test.unit.reductions.grid_search.utilities._quick_data"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ConditionalOpportunityTests.test_Y_ternary": {
  "lineno": 293,
  "symbols_in_volume": [
   "fairlearn._input_validation._LABELS_NOT_0_1_ERROR_MESSAGE",
   "fairlearn.reductions.GridSearch",
   "pytest.mark.parametrize",
   "pytest.mark.uncollect_if",
   "pytest.raises",
   "test.unit.reductions.conftest.is_invalid_transformation",
   "test.unit.reductions.grid_search.utilities._quick_data"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestBoundedGroupLoss": {
  "lineno": 358,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestBoundedGroupLoss.setup_method": {
  "lineno": 359,
  "symbols_in_volume": [
   "fairlearn.reductions.BoundedGroupLoss",
   "fairlearn.reductions.ZeroOneLoss",
   "sklearn.linear_model.LinearRegression"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestDemographicParity": {
  "lineno": 342,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestDemographicParity.setup_method": {
  "lineno": 343,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "sklearn.linear_model.LogisticRegression"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestEqualizedOdds": {
  "lineno": 350,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestEqualizedOdds.setup_method": {
  "lineno": 351,
  "symbols_in_volume": [
   "fairlearn.reductions.EqualizedOdds",
   "sklearn.linear_model.LogisticRegression"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestPipelineEstimator": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestPipelineEstimator.setup_method": {
  "lineno": 334,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.pipeline.Pipeline",
   "sklearn.preprocessing.StandardScaler"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity._simple_threshold_data": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.full",
   "numpy.linspace",
   "numpy.ones",
   "numpy.stack",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.test_can_specify_and_generate_lambda_vecs": {
  "lineno": 172,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.GridSearch",
   "numpy.array_equal",
   "numpy.zeros",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pandas.concat",
   "pytest.mark.parametrize",
   "sklearn.linear_model.LogisticRegression",
   "test.unit.reductions.grid_search.utilities.assert_n_grid_search_results"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.test_demographicparity_fair_uneven_populations": {
  "lineno": 45,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.GridSearch",
   "numpy.allclose",
   "numpy.array_equal",
   "pandas.DataFrame",
   "pytest.mark.parametrize",
   "sklearn.linear_model.LogisticRegression",
   "test.unit.reductions.grid_search.utilities.assert_n_grid_search_results"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.test_demographicparity_fair_uneven_populations_with_grid_offset": {
  "lineno": 86,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.GridSearch",
   "numpy.allclose",
   "numpy.array_equal",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pytest.mark.parametrize",
   "sklearn.linear_model.LogisticRegression",
   "test.unit.reductions.grid_search.utilities.assert_n_grid_search_results"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.test_lambda_vec_zero_unchanged_model": {
  "lineno": 131,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.GridSearch",
   "numpy.array_equal",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pytest.mark.parametrize",
   "sklearn.linear_model.LogisticRegression",
   "test.unit.reductions.grid_search.utilities.assert_n_grid_search_results"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.test_single_y_class": {
  "lineno": 228,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.GridSearch",
   "numpy.array_equal",
   "numpy.full",
   "pandas.DataFrame",
   "sklearn.dummy.DummyClassifier",
   "sklearn.linear_model.LogisticRegression"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression._simple_regression_data": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.full",
   "numpy.linspace",
   "numpy.ones",
   "numpy.stack",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.test_bgl_lagrange_specifications": {
  "lineno": 138,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn.reductions.BoundedGroupLoss",
   "fairlearn.reductions.GridSearch",
   "fairlearn.reductions.ZeroOneLoss",
   "numpy.array_equal",
   "pandas.Int64Index",
   "pandas.Series",
   "pandas.concat",
   "pytest.mark.parametrize",
   "sklearn.linear_model.LinearRegression",
   "test.unit.reductions.grid_search.utilities.assert_n_grid_search_results"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.test_bgl_unfair": {
  "lineno": 47,
  "symbols_in_volume": [
   "fairlearn.reductions.BoundedGroupLoss",
   "fairlearn.reductions.GridSearch",
   "fairlearn.reductions.SquareLoss",
   "numpy.allclose",
   "numpy.inf",
   "pandas.DataFrame",
   "pytest.mark.parametrize",
   "sklearn.linear_model.LinearRegression",
   "test.unit.reductions.grid_search.utilities.assert_n_grid_search_results",
   "test.unit.utility_functions.logging_all_close"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.test_bgl_unmitigated_same": {
  "lineno": 100,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn.reductions.BoundedGroupLoss",
   "fairlearn.reductions.GridSearch",
   "fairlearn.reductions.ZeroOneLoss",
   "numpy.allclose",
   "pandas.DataFrame",
   "pandas.Int64Index",
   "pandas.Series",
   "pytest.mark.parametrize",
   "sklearn.linear_model.LinearRegression"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.utilities": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.grid_search.utilities._quick_data": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.stack"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.utilities.assert_n_grid_search_results": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.reductions.moments": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.moments.data_generator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.moments.data_generator.simple_binary_threshold_data": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.full",
   "numpy.linspace",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_bounded_group_loss": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.moments.test_moments_bounded_group_loss.TestBoundedGroupLoss": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.reductions.moments.test_moments_bounded_group_loss.TestBoundedGroupLoss.test_bgl_gpa_data": {
  "lineno": 27,
  "symbols_in_volume": [
   "fairlearn.reductions.BoundedGroupLoss",
   "fairlearn.reductions.SquareLoss",
   "numpy.all",
   "numpy.any",
   "numpy.array",
   "numpy.inf",
   "pandas.DataFrame",
   "sklearn.linear_model.LinearRegression",
   "sklearn.model_selection.train_test_split"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_bounded_group_loss.TestBoundedGroupLoss.test_bgl_gpa_data.predictor": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_bounded_group_loss.TestBoundedGroupLoss.test_eps": {
  "lineno": 15,
  "symbols_in_volume": [
   "fairlearn.reductions.BoundedGroupLoss",
   "fairlearn.reductions.SquareLoss",
   "numpy.all",
   "numpy.inf",
   "numpy.isclose",
   "sklearn.linear_model.LinearRegression",
   "test.unit.reductions.grid_search.utilities._quick_data"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_bounded_group_loss.TestBoundedGroupLoss.test_eps.predictor": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_control_features": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.moments.test_moments_control_features._selected_label_compare": {
  "lineno": 82,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.asarray",
   "pandas.get_dummies",
   "pytest.approx",
   "sklearn.linear_model.LogisticRegression",
   "test.unit.reductions.data_generators.loan_scenario_generator"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_control_features._simple_compare": {
  "lineno": 39,
  "symbols_in_volume": [
   "fairlearn.metrics.MetricFrame",
   "numpy.asarray",
   "pandas.get_dummies",
   "pytest.approx",
   "sklearn.linear_model.LogisticRegression",
   "test.unit.reductions.data_generators.loan_scenario_generator"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_control_features.test_demographic_parity": {
  "lineno": 71,
  "symbols_in_volume": [
   "fairlearn.metrics.selection_rate",
   "fairlearn.reductions.DemographicParity"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_control_features.test_equalized_odds": {
  "lineno": 133,
  "symbols_in_volume": [
   "fairlearn.metrics.false_positive_rate",
   "fairlearn.metrics.true_positive_rate",
   "fairlearn.reductions.EqualizedOdds"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_control_features.test_error_rate_parity": {
  "lineno": 75,
  "symbols_in_volume": [
   "fairlearn.reductions.ErrorRateParity"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_control_features.test_error_rate_parity.err_rate": {
  "lineno": 76,
  "symbols_in_volume": [
   "sklearn.metrics.accuracy_score"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_control_features.test_false_positive_parity": {
  "lineno": 125,
  "symbols_in_volume": [
   "fairlearn.metrics.false_positive_rate",
   "fairlearn.reductions.FalsePositiveRateParity"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_control_features.test_true_positive_parity": {
  "lineno": 117,
  "symbols_in_volume": [
   "fairlearn.metrics.true_positive_rate",
   "fairlearn.reductions.TruePositiveRateParity"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity.test_construct_and_load": {
  "lineno": 13,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions._moments.moment._EVENT",
   "fairlearn.reductions._moments.moment._GROUP_ID",
   "fairlearn.reductions._moments.moment._SIGN",
   "pandas.MultiIndex.from_product",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity.test_project_lambda_smoke_negatives": {
  "lineno": 86,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions._moments.moment._EVENT",
   "fairlearn.reductions._moments.moment._GROUP_ID",
   "fairlearn.reductions._moments.moment._SIGN",
   "numpy.float64",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity.test_project_lambda_smoke_positives": {
  "lineno": 108,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions._moments.moment._EVENT",
   "fairlearn.reductions._moments.moment._GROUP_ID",
   "fairlearn.reductions._moments.moment._SIGN",
   "numpy.float64",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity.test_signed_weights": {
  "lineno": 132,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions._moments.moment._EVENT",
   "fairlearn.reductions._moments.moment._GROUP_ID",
   "fairlearn.reductions._moments.moment._SIGN",
   "numpy.array_equal",
   "numpy.concatenate",
   "numpy.full",
   "pandas.MultiIndex.from_product",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds.test_construct_and_load": {
  "lineno": 13,
  "symbols_in_volume": [
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions._moments.moment._EVENT",
   "fairlearn.reductions._moments.moment._GROUP_ID",
   "fairlearn.reductions._moments.moment._SIGN",
   "numpy.array_equal",
   "pandas.MultiIndex.from_product",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds.test_project_lambda_smoke_negatives": {
  "lineno": 103,
  "symbols_in_volume": [
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions._moments.moment._EVENT",
   "fairlearn.reductions._moments.moment._GROUP_ID",
   "fairlearn.reductions._moments.moment._SIGN",
   "numpy.float64",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds.test_project_lambda_smoke_positives": {
  "lineno": 124,
  "symbols_in_volume": [
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions._moments.moment._EVENT",
   "fairlearn.reductions._moments.moment._GROUP_ID",
   "fairlearn.reductions._moments.moment._SIGN",
   "numpy.float64",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds.test_signed_weights": {
  "lineno": 147,
  "symbols_in_volume": [
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions._moments.moment._EVENT",
   "fairlearn.reductions._moments.moment._GROUP_ID",
   "fairlearn.reductions._moments.moment._SIGN",
   "numpy.array_equal",
   "numpy.concatenate",
   "numpy.full",
   "pandas.MultiIndex.from_product",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.test_smoke": {
  "lineno": null,
  "symbols_in_volume": [
   "lightgbm.LGBMClassifier",
   "platform.system",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.svm.SVC",
   "sklearn.tree.DecisionTreeClassifier"
  ],
  "type": "module"
 },
 "test.unit.reductions.test_smoke.test_smoke": {
  "lineno": 24,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions.ExponentiatedGradient",
   "fairlearn.reductions.GridSearch",
   "numpy.random.choice",
   "numpy.random.normal",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.test_random_state": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.test_random_state._get_test_data": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.int",
   "pandas.DataFrame",
   "sklearn.datasets.fetch_openml",
   "sklearn.model_selection.train_test_split"
  ],
  "type": "function"
 },
 "test.unit.test_random_state.test_random_state_exponentiated_gradient": {
  "lineno": 38,
  "symbols_in_volume": [
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions.ExponentiatedGradient",
   "sklearn.linear_model.LogisticRegression"
  ],
  "type": "function"
 },
 "test.unit.test_random_state.test_random_state_threshold_optimizer": {
  "lineno": 13,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "sklearn.linear_model.LogisticRegression"
  ],
  "type": "function"
 },
 "test.unit.test_show_versions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.test_show_versions.test_smoke": {
  "lineno": 7,
  "symbols_in_volume": [
   "fairlearn.show_versions"
  ],
  "type": "function"
 },
 "test.unit.utility_functions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.utility_functions.logging_all_close": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.asarray",
   "numpy.isclose",
   "numpy.logical_not",
   "numpy.where"
  ],
  "type": "function"
 },
 "test_othermlpackages": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test_othermlpackages.package_test_common": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test_othermlpackages.package_test_common.fetch_adult": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.get_dummies",
   "sklearn.datasets.fetch_openml",
   "sklearn.model_selection.train_test_split",
   "sklearn.preprocessing.LabelEncoder",
   "sklearn.preprocessing.StandardScaler"
  ],
  "type": "function"
 },
 "test_othermlpackages.package_test_common.run_expgrad_classification": {
  "lineno": 51,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn.reductions.ExponentiatedGradient"
  ],
  "type": "function"
 },
 "test_othermlpackages.package_test_common.run_gridsearch_classification": {
  "lineno": 75,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn.reductions.GridSearch"
  ],
  "type": "function"
 },
 "test_othermlpackages.package_test_common.run_thresholdoptimizer_classification": {
  "lineno": 100,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn.metrics.demographic_parity_difference",
   "fairlearn.postprocessing.ThresholdOptimizer"
  ],
  "type": "function"
 },
 "test_othermlpackages.test_lightgbm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test_othermlpackages.test_lightgbm.test_expgrad_classification": {
  "lineno": 11,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "lightgbm.LGBMClassifier"
  ],
  "type": "function"
 },
 "test_othermlpackages.test_lightgbm.test_gridsearch_classification": {
  "lineno": 25,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "lightgbm.LGBMClassifier"
  ],
  "type": "function"
 },
 "test_othermlpackages.test_lightgbm.test_thresholdoptimizer_classification": {
  "lineno": 39,
  "symbols_in_volume": [
   "lightgbm.LGBMClassifier"
  ],
  "type": "function"
 },
 "test_othermlpackages.test_pytorch": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test_othermlpackages.test_pytorch.create_model": {
  "lineno": 14,
  "symbols_in_volume": [
   "torch.cuda.is_available",
   "torch.nn.BCELoss",
   "torch.optim.Adam"
  ],
  "type": "function"
 },
 "test_othermlpackages.test_pytorch.create_model.ClassificationModel": {
  "lineno": 16,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "test_othermlpackages.test_pytorch.create_model.ClassificationModel.__init__": {
  "lineno": 17,
  "symbols_in_volume": [
   "torch.nn.Linear",
   "torch.nn.ReLU",
   "torch.nn.Sequential",
   "torch.nn.Sigmoid"
  ],
  "type": "function"
 },
 "test_othermlpackages.test_pytorch.create_model.ClassificationModel.forward": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test_othermlpackages.test_pytorch.create_model.SampleWeightNeuralNet": {
  "lineno": 30,
  "symbols_in_volume": [
   "skorch.NeuralNetClassifier"
  ],
  "type": "class"
 },
 "test_othermlpackages.test_pytorch.create_model.SampleWeightNeuralNet.__init__": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test_othermlpackages.test_pytorch.create_model.SampleWeightNeuralNet.fit": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.ones_like",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test_othermlpackages.test_pytorch.create_model.SampleWeightNeuralNet.get_loss": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test_othermlpackages.test_pytorch.create_model.SampleWeightNeuralNet.predict": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.float",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test_othermlpackages.test_pytorch.test_expgrad_classification": {
  "lineno": 82,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity"
  ],
  "type": "function"
 },
 "test_othermlpackages.test_pytorch.test_gridsearch_classification": {
  "lineno": 89,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity"
  ],
  "type": "function"
 },
 "test_othermlpackages.test_pytorch.test_thresholdoptimizer_classification": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test_othermlpackages.test_tensorflow": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test_othermlpackages.test_tensorflow.create_model": {
  "lineno": 13,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.models.Sequential"
  ],
  "type": "function"
 },
 "test_othermlpackages.test_tensorflow.test_expgrad_classification": {
  "lineno": 25,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "tensorflow.keras.wrappers.scikit_learn.KerasClassifier"
  ],
  "type": "function"
 },
 "test_othermlpackages.test_tensorflow.test_gridsearch_classification": {
  "lineno": 32,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "tensorflow.keras.wrappers.scikit_learn.KerasClassifier"
  ],
  "type": "function"
 },
 "test_othermlpackages.test_tensorflow.test_thresholdoptimizer_classification": {
  "lineno": 39,
  "symbols_in_volume": [
   "tensorflow.keras.wrappers.scikit_learn.KerasClassifier"
  ],
  "type": "function"
 },
 "test_othermlpackages.test_xgboost": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test_othermlpackages.test_xgboost.test_expgrad_classification": {
  "lineno": 11,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "xgboost.XGBClassifier"
  ],
  "type": "function"
 },
 "test_othermlpackages.test_xgboost.test_gridsearch_classification": {
  "lineno": 18,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "xgboost.XGBClassifier"
  ],
  "type": "function"
 },
 "test_othermlpackages.test_xgboost.test_thresholdoptimizer_classification": {
  "lineno": 25,
  "symbols_in_volume": [
   "xgboost.XGBClassifier"
  ],
  "type": "function"
 }
}