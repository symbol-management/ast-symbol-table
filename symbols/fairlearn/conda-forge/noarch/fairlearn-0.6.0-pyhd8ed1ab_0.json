{
 "fairlearn": {
  "data": {
   "symbols_in_volume": [
    "fairlearn.__name__",
    "fairlearn.__version__",
    "fairlearn.atexit",
    "fairlearn.close_handler",
    "fairlearn.fairlearn_logs",
    "fairlearn.handler",
    "fairlearn.logger",
    "fairlearn.logging",
    "fairlearn.os"
   ]
  },
  "type": "module"
 },
 "fairlearn.__name__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "fairlearn.__version__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "fairlearn._base_version": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "fairlearn._input_validation": {
  "data": {
   "symbols_in_volume": [
    "fairlearn._input_validation._KW_SENSITIVE_FEATURES",
    "fairlearn._input_validation.logging",
    "list",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "module"
 },
 "fairlearn._input_validation._ALLOWED_INPUT_TYPES_SENSITIVE_FEATURES": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "fairlearn._input_validation._ALLOWED_INPUT_TYPES_X": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "fairlearn._input_validation._ALLOWED_INPUT_TYPES_Y": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "fairlearn._input_validation._EMPTY_INPUT_ERROR_MESSAGE": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "fairlearn._input_validation._INPUT_DATA_FORMAT_ERROR_MESSAGE": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "fairlearn._input_validation._KW_CONTROL_FEATURES": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "fairlearn._input_validation._KW_SENSITIVE_FEATURES": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "fairlearn._input_validation._LABELS_NOT_0_1_ERROR_MESSAGE": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "fairlearn._input_validation._MERGE_COLUMN_SEPARATOR": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "fairlearn._input_validation._MESSAGE_RATIO_NOT_IN_RANGE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "fairlearn._input_validation._MESSAGE_SENSITIVE_FEATURES_NONE": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "fairlearn._input_validation._MESSAGE_X_NONE": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "fairlearn._input_validation._MESSAGE_X_SENSITIVE_ROWS": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "fairlearn._input_validation._MESSAGE_X_Y_ROWS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "fairlearn._input_validation._MESSAGE_Y_NONE": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "fairlearn._input_validation._MORE_THAN_ONE_COLUMN_ERROR_MESSAGE": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "fairlearn._input_validation._NDARRAY_NOT_TWO_DIMENSIONAL_ERROR_MESSAGE": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "fairlearn._input_validation._NOT_ALLOWED_MATRIX_TYPE_ERROR_MESSAGE": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "fairlearn._input_validation._NOT_ALLOWED_TYPE_ERROR_MESSAGE": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "fairlearn._input_validation._merge_columns": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn._input_validation._MERGE_COLUMN_SEPARATOR",
    "isinstance",
    "len",
    "numpy.apply_along_axis",
    "numpy.ndarray",
    "range",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "fairlearn._input_validation._validate_and_reformat_input": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "_merge_columns",
    "fairlearn._input_validation._KW_CONTROL_FEATURES",
    "fairlearn._input_validation._KW_SENSITIVE_FEATURES",
    "fairlearn._input_validation._LABELS_NOT_0_1_ERROR_MESSAGE",
    "fairlearn._input_validation._MESSAGE_SENSITIVE_FEATURES_NONE",
    "fairlearn._input_validation._MESSAGE_Y_NONE",
    "isinstance",
    "len",
    "numpy.ndarray",
    "numpy.unique",
    "pandas.DataFrame",
    "pandas.Series",
    "set",
    "sklearn.utils.validation.check_X_y",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_consistent_length"
   ]
  },
  "type": "function"
 },
 "fairlearn._input_validation.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.validation.check_X_y"
  },
  "type": "import"
 },
 "fairlearn._input_validation.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "fairlearn._input_validation.check_consistent_length": {
  "data": {
   "shadows": "sklearn.utils.validation.check_consistent_length"
  },
  "type": "import"
 },
 "fairlearn._input_validation.logger": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "fairlearn._input_validation.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "fairlearn._input_validation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn._input_validation.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fairlearn.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "fairlearn.close_handler": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "fairlearn.handler",
    "fairlearn.logger"
   ]
  },
  "type": "function"
 },
 "fairlearn.datasets": {
  "data": {},
  "type": "module"
 },
 "fairlearn.datasets.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "fairlearn.datasets._constants": {
  "data": {},
  "type": "module"
 },
 "fairlearn.datasets._constants._DOWNLOAD_DIRECTORY_NAME": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "fairlearn.datasets._fetch_adult": {
  "data": {},
  "type": "module"
 },
 "fairlearn.datasets._fetch_adult.fetch_adult": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "fairlearn.datasets._fetch_adult.pathlib",
    "sklearn.datasets.fetch_openml"
   ]
  },
  "type": "function"
 },
 "fairlearn.datasets._fetch_adult.fetch_openml": {
  "data": {
   "shadows": "sklearn.datasets.fetch_openml"
  },
  "type": "import"
 },
 "fairlearn.datasets._fetch_adult.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "fairlearn.datasets._fetch_bank_marketing": {
  "data": {},
  "type": "module"
 },
 "fairlearn.datasets._fetch_bank_marketing.fetch_bank_marketing": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "fairlearn.datasets._fetch_bank_marketing.pathlib",
    "sklearn.datasets.fetch_openml"
   ]
  },
  "type": "function"
 },
 "fairlearn.datasets._fetch_bank_marketing.fetch_openml": {
  "data": {
   "shadows": "sklearn.datasets.fetch_openml"
  },
  "type": "import"
 },
 "fairlearn.datasets._fetch_bank_marketing.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "fairlearn.datasets._fetch_boston": {
  "data": {},
  "type": "module"
 },
 "fairlearn.datasets._fetch_boston.DataFairnessWarning": {
  "data": {
   "shadows": "fairlearn.exceptions.DataFairnessWarning"
  },
  "type": "import"
 },
 "fairlearn.datasets._fetch_boston.fetch_boston": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "fairlearn.datasets._fetch_boston.pathlib",
    "fairlearn.datasets._fetch_boston.warnings",
    "fairlearn.exceptions.DataFairnessWarning",
    "sklearn.datasets.fetch_openml"
   ]
  },
  "type": "function"
 },
 "fairlearn.datasets._fetch_boston.fetch_openml": {
  "data": {
   "shadows": "sklearn.datasets.fetch_openml"
  },
  "type": "import"
 },
 "fairlearn.datasets._fetch_boston.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "fairlearn.datasets._fetch_boston.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "fairlearn.exceptions": {
  "data": {},
  "type": "module"
 },
 "fairlearn.exceptions.DataFairnessWarning": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "fairlearn.fairlearn_logs": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "fairlearn.handler": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "fairlearn.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "fairlearn.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "fairlearn.metrics": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "fairlearn.metrics._core",
    "fairlearn.metrics._disparities",
    "fairlearn.metrics._extra_metrics",
    "fairlearn.metrics._module_obj",
    "list",
    "setattr",
    "sorted",
    "sys.modules"
   ]
  },
  "type": "module"
 },
 "fairlearn.metrics.__all__": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "fairlearn.metrics._balanced_root_mean_squared_error": {
  "data": {},
  "type": "module"
 },
 "fairlearn.metrics._balanced_root_mean_squared_error._Y_TRUE_NOT_0_1": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "fairlearn.metrics._balanced_root_mean_squared_error._balanced_root_mean_squared_error": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "_convert_to_ndarray_and_squeeze",
    "fairlearn.metrics._balanced_root_mean_squared_error._Y_TRUE_NOT_0_1",
    "fairlearn.metrics._balanced_root_mean_squared_error.math",
    "len",
    "numpy.array_equal",
    "numpy.ones",
    "numpy.unique",
    "numpy.zeros",
    "range",
    "sklearn.metrics.mean_squared_error"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._balanced_root_mean_squared_error.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "fairlearn.metrics._balanced_root_mean_squared_error.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.metrics._balanced_root_mean_squared_error.skm": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "fairlearn.metrics._core": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "fairlearn.metrics._disparities": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "fairlearn.metrics._disparities._get_eo_frame": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "MetricFrame"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._disparities.demographic_parity_difference": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "MetricFrame",
    "float"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._disparities.demographic_parity_ratio": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "MetricFrame",
    "float"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._disparities.equalized_odds_difference": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "_get_eo_frame",
    "float",
    "max"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._disparities.equalized_odds_ratio": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "_get_eo_frame",
    "float",
    "min"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._extra_metrics": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "fairlearn.metrics._extra_metrics._NEED_POS_LABEL_IN_Y_VALS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "fairlearn.metrics._extra_metrics._RESTRICTED_VALS_IF_POS_LABEL_NONE": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "fairlearn.metrics._extra_metrics._TOO_MANY_UNIQUE_Y_VALS": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "fairlearn.metrics._extra_metrics._get_labels_for_confusion_matrix": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics._extra_metrics._NEED_POS_LABEL_IN_Y_VALS",
    "fairlearn.metrics._extra_metrics._RESTRICTED_VALS_IF_POS_LABEL_NONE",
    "fairlearn.metrics._extra_metrics._TOO_MANY_UNIQUE_Y_VALS",
    "frozenset",
    "len",
    "list",
    "numpy.unique",
    "reversed"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._extra_metrics._root_mean_squared_error": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "sklearn.metrics.mean_squared_error"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._extra_metrics.false_negative_rate": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "fairlearn.metrics._extra_metrics._get_labels_for_confusion_matrix",
    "float",
    "numpy.vstack",
    "sklearn.metrics.confusion_matrix"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._extra_metrics.false_positive_rate": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "fairlearn.metrics._extra_metrics._get_labels_for_confusion_matrix",
    "float",
    "numpy.vstack",
    "sklearn.metrics.confusion_matrix"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._extra_metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.metrics._extra_metrics.skm": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "fairlearn.metrics._extra_metrics.true_negative_rate": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "fairlearn.metrics._extra_metrics._get_labels_for_confusion_matrix",
    "float",
    "numpy.vstack",
    "sklearn.metrics.confusion_matrix"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._extra_metrics.true_positive_rate": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "fairlearn.metrics._extra_metrics._get_labels_for_confusion_matrix",
    "float",
    "numpy.vstack",
    "sklearn.metrics.confusion_matrix"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._function_container": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "fairlearn.metrics._function_container.logging"
   ]
  },
  "type": "module"
 },
 "fairlearn.metrics._function_container.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "fairlearn.metrics._function_container.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "fairlearn.metrics._function_container.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "fairlearn.metrics._function_container.FunctionContainer": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "fairlearn.metrics._function_container.FunctionContainer.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "dict",
    "fairlearn.metrics._function_container._DEFAULT_NAME",
    "fairlearn.metrics._function_container._METRIC_FUNCTION_NONE",
    "fairlearn.metrics._function_container._METRIC_FUNCTION_NOT_CALLABLE",
    "fairlearn.metrics._function_container._SAMPLE_PARAMS_NOT_DICT",
    "fairlearn.metrics._function_container.logger",
    "hasattr",
    "isinstance",
    "numpy.asarray",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._function_container.FunctionContainer.evaluate": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.ndarray",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._function_container.FunctionContainer.evaluate_all": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._function_container.FunctionContainer.func_": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "property",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._function_container.FunctionContainer.generate_sample_params_for_mask": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "dict",
    "numpy.ndarray",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._function_container.FunctionContainer.name_": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._function_container.FunctionContainer.sample_params_": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.ndarray",
    "property",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._function_container.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "fairlearn.metrics._function_container._DEFAULT_NAME": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "fairlearn.metrics._function_container._METRIC_FUNCTION_NONE": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "fairlearn.metrics._function_container._METRIC_FUNCTION_NOT_CALLABLE": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "fairlearn.metrics._function_container._SAMPLE_PARAMS_NOT_DICT": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "fairlearn.metrics._function_container.logger": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "fairlearn.metrics._function_container.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "fairlearn.metrics._function_container.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.metrics._generated_metrics": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "fairlearn.metrics._generated_metrics.METRICS_SPEC",
    "fairlearn.metrics._generated_metrics._generated_metric_dict",
    "fairlearn.metrics._generated_metrics.fn",
    "fairlearn.metrics._generated_metrics.name",
    "make_derived_metric",
    "sklearn.metrics.accuracy_score",
    "sklearn.metrics.balanced_accuracy_score",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.log_loss",
    "sklearn.metrics.mean_absolute_error",
    "sklearn.metrics.mean_squared_error",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.r2_score",
    "sklearn.metrics.recall_score",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.zero_one_loss"
   ]
  },
  "type": "module"
 },
 "fairlearn.metrics._generated_metrics.METRICS_SPEC": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "fairlearn.metrics._generated_metrics._generated_metric_dict": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "fairlearn.metrics._generated_metrics.fn": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "fairlearn.metrics._generated_metrics.name": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "fairlearn.metrics._generated_metrics.skm": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "fairlearn.metrics._group_feature": {
  "data": {},
  "type": "module"
 },
 "fairlearn.metrics._group_feature.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "fairlearn.metrics._group_feature.GroupFeature": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "fairlearn.metrics._group_feature.GroupFeature.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics._group_feature._SERIES_NAME_NOT_STRING",
    "int",
    "isinstance",
    "numpy.asarray",
    "pandas.Series",
    "sklearn.preprocessing.LabelEncoder",
    "str",
    "type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._group_feature.GroupFeature.classes": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "list",
    "property",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._group_feature.GroupFeature.get_mask_for_class": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.ndarray",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._group_feature.GroupFeature.get_mask_for_class_index": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "int",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._group_feature.GroupFeature.name": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._group_feature.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelEncoder"
  },
  "type": "import"
 },
 "fairlearn.metrics._group_feature.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "fairlearn.metrics._group_feature.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "fairlearn.metrics._group_feature._SERIES_NAME_NOT_STRING": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_feature.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.metrics._group_feature.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fairlearn.metrics._group_metric_set": {
  "data": {
   "symbols_in_volume": [
    "fairlearn.metrics._group_metric_set.ACCURACY_SCORE_GROUP_SUMMARY",
    "fairlearn.metrics._group_metric_set.BALANCED_ROOT_MEAN_SQUARED_ERROR_GROUP_SUMMARY",
    "fairlearn.metrics._group_metric_set.BINARY_CLASSIFICATION",
    "fairlearn.metrics._group_metric_set.BINARY_CLASSIFICATION_METRICS",
    "fairlearn.metrics._group_metric_set.F1_SCORE_GROUP_SUMMARY",
    "fairlearn.metrics._group_metric_set.FALLOUT_RATE_GROUP_SUMMARY",
    "fairlearn.metrics._group_metric_set.LOG_LOSS_GROUP_SUMMARY",
    "fairlearn.metrics._group_metric_set.MEAN_ABSOLUTE_ERROR_GROUP_SUMMARY",
    "fairlearn.metrics._group_metric_set.MEAN_OVERPREDICTION_GROUP_SUMMARY",
    "fairlearn.metrics._group_metric_set.MEAN_PREDICTION_GROUP_SUMMARY",
    "fairlearn.metrics._group_metric_set.MEAN_SQUARED_ERROR_GROUP_SUMMARY",
    "fairlearn.metrics._group_metric_set.MEAN_UNDERPREDICTION_GROUP_SUMMARY",
    "fairlearn.metrics._group_metric_set.MISS_RATE_GROUP_SUMMARY",
    "fairlearn.metrics._group_metric_set.PRECISION_SCORE_GROUP_SUMMARY",
    "fairlearn.metrics._group_metric_set.R2_SCORE_GROUP_SUMMARY",
    "fairlearn.metrics._group_metric_set.RECALL_SCORE_GROUP_SUMMARY",
    "fairlearn.metrics._group_metric_set.REGRESSION",
    "fairlearn.metrics._group_metric_set.REGRESSION_METRICS",
    "fairlearn.metrics._group_metric_set.ROC_AUC_SCORE_GROUP_SUMMARY",
    "fairlearn.metrics._group_metric_set.ROOT_MEAN_SQUARED_ERROR_GROUP_SUMMARY",
    "fairlearn.metrics._group_metric_set.SELECTION_RATE_GROUP_SUMMARY",
    "fairlearn.metrics._group_metric_set.SPECIFICITY_SCORE_GROUP_SUMMARY",
    "fairlearn.metrics._group_metric_set.ZERO_ONE_LOSS_GROUP_SUMMARY",
    "frozenset",
    "sklearn.metrics.accuracy_score",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.log_loss",
    "sklearn.metrics.mean_absolute_error",
    "sklearn.metrics.mean_squared_error",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.r2_score",
    "sklearn.metrics.recall_score",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.zero_one_loss"
   ]
  },
  "type": "module"
 },
 "fairlearn.metrics._group_metric_set.ACCURACY_SCORE_GROUP_SUMMARY": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set.BALANCED_ROOT_MEAN_SQUARED_ERROR_GROUP_SUMMARY": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set.BINARY_CLASSIFICATION": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set.BINARY_CLASSIFICATION_METRICS": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set.F1_SCORE_GROUP_SUMMARY": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set.FALLOUT_RATE_GROUP_SUMMARY": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set.LOG_LOSS_GROUP_SUMMARY": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set.MEAN_ABSOLUTE_ERROR_GROUP_SUMMARY": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set.MEAN_OVERPREDICTION_GROUP_SUMMARY": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set.MEAN_PREDICTION_GROUP_SUMMARY": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set.MEAN_SQUARED_ERROR_GROUP_SUMMARY": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set.MEAN_UNDERPREDICTION_GROUP_SUMMARY": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set.MISS_RATE_GROUP_SUMMARY": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set.PRECISION_SCORE_GROUP_SUMMARY": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set.R2_SCORE_GROUP_SUMMARY": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set.RECALL_SCORE_GROUP_SUMMARY": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set.REGRESSION": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set.REGRESSION_METRICS": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set.ROC_AUC_SCORE_GROUP_SUMMARY": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set.ROOT_MEAN_SQUARED_ERROR_GROUP_SUMMARY": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set.SELECTION_RATE_GROUP_SUMMARY": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set.SPECIFICITY_SCORE_GROUP_SUMMARY": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set.ZERO_ONE_LOSS_GROUP_SUMMARY": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._BINS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._BIN_LABELS": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._BIN_VECTOR": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._DASHBOARD_DICTIONARY": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._FEATURE_BIN_NAME": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._GLOBAL": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._MODEL_NAMES": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._PRECOMPUTED_BINS": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._PRECOMPUTED_METRICS": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._PREDICTION_BINARY_CLASSIFICATION": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._PREDICTION_REGRESSION": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._PREDICTION_TYPE": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._SCHEMA": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._VERSION": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._Y_PRED": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._Y_TRUE": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._allowed_prediction_types": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._create_group_metric_set": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "MetricFrame",
    "NotImplementedError",
    "ValueError",
    "_convert_to_ndarray_and_squeeze",
    "dict",
    "fairlearn.metrics._group_metric_set.BINARY_CLASSIFICATION",
    "fairlearn.metrics._group_metric_set.BINARY_CLASSIFICATION_METRICS",
    "fairlearn.metrics._group_metric_set.REGRESSION",
    "fairlearn.metrics._group_metric_set.REGRESSION_METRICS",
    "fairlearn.metrics._group_metric_set._BINS",
    "fairlearn.metrics._group_metric_set._BIN_VECTOR",
    "fairlearn.metrics._group_metric_set._DASHBOARD_DICTIONARY",
    "fairlearn.metrics._group_metric_set._GLOBAL",
    "fairlearn.metrics._group_metric_set._MODEL_NAMES",
    "fairlearn.metrics._group_metric_set._PRECOMPUTED_BINS",
    "fairlearn.metrics._group_metric_set._PRECOMPUTED_METRICS",
    "fairlearn.metrics._group_metric_set._PREDICTION_BINARY_CLASSIFICATION",
    "fairlearn.metrics._group_metric_set._PREDICTION_REGRESSION",
    "fairlearn.metrics._group_metric_set._PREDICTION_TYPE",
    "fairlearn.metrics._group_metric_set._SCHEMA",
    "fairlearn.metrics._group_metric_set._VERSION",
    "fairlearn.metrics._group_metric_set._Y_PRED",
    "fairlearn.metrics._group_metric_set._Y_TRUE",
    "fairlearn.metrics._group_metric_set._allowed_prediction_types",
    "fairlearn.metrics._group_metric_set._process_predictions",
    "fairlearn.metrics._group_metric_set._process_sensitive_features",
    "list",
    "sorted"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set._process_predictions": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "_convert_to_ndarray_and_squeeze",
    "sorted"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set._process_sensitive_features": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "_convert_to_ndarray_and_squeeze",
    "dict",
    "fairlearn.metrics._group_metric_set._BIN_LABELS",
    "fairlearn.metrics._group_metric_set._BIN_VECTOR",
    "fairlearn.metrics._group_metric_set._FEATURE_BIN_NAME",
    "int",
    "list",
    "sklearn.preprocessing.LabelEncoder",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set.preprocessing": {
  "data": {
   "shadows": "sklearn.preprocessing"
  },
  "type": "import"
 },
 "fairlearn.metrics._group_metric_set.skm": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "fairlearn.metrics._input_manipulations": {
  "data": {},
  "type": "module"
 },
 "fairlearn.metrics._input_manipulations._ARRAY_NOT_1D": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics._input_manipulations._ARRAY_NOT_1D",
    "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze",
    "len"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.squeeze"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._input_manipulations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.metrics._make_derived_metric": {
  "data": {
   "symbols_in_volume": [
    "fairlearn.metrics._make_derived_metric.transform_options"
   ]
  },
  "type": "module"
 },
 "fairlearn.metrics._make_derived_metric.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "fairlearn.metrics._make_derived_metric.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "fairlearn.metrics._make_derived_metric.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "fairlearn.metrics._make_derived_metric._DerivedMetric": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "fairlearn.metrics._make_derived_metric._DerivedMetric.__call__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "MetricFrame",
    "ValueError",
    "dict",
    "fairlearn.metrics._make_derived_metric._INVALID_TRANSFORM",
    "fairlearn.metrics._make_derived_metric.functools",
    "fairlearn.metrics._make_derived_metric.parameters_for_transforms",
    "float",
    "int",
    "sorted",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._make_derived_metric._DerivedMetric.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "fairlearn.metrics._make_derived_metric._INVALID_TRANSFORM",
    "fairlearn.metrics._make_derived_metric._METHOD_ARG_ERROR",
    "fairlearn.metrics._make_derived_metric._METRIC_CALLABLE_ERROR",
    "fairlearn.metrics._make_derived_metric.inspect",
    "fairlearn.metrics._make_derived_metric.parameters_for_transforms",
    "fairlearn.metrics._make_derived_metric.transform_options",
    "float",
    "int",
    "str",
    "typing.Callable",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._make_derived_metric._INVALID_TRANSFORM": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "fairlearn.metrics._make_derived_metric._METHOD_ARG_ERROR": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "fairlearn.metrics._make_derived_metric._METRIC_CALLABLE_ERROR": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "fairlearn.metrics._make_derived_metric.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "fairlearn.metrics._make_derived_metric.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "fairlearn.metrics._make_derived_metric.make_derived_metric": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "fairlearn.metrics._make_derived_metric._DerivedMetric",
    "float",
    "int",
    "str",
    "typing.Callable",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._make_derived_metric.parameters_for_transforms": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "fairlearn.metrics._make_derived_metric.transform_options": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "fairlearn.metrics._mean_predictions": {
  "data": {},
  "type": "module"
 },
 "fairlearn.metrics._mean_predictions._mean_overprediction": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "_convert_to_ndarray_and_squeeze",
    "float",
    "len",
    "numpy.dot",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._mean_predictions._mean_underprediction": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "_convert_to_ndarray_and_squeeze",
    "float",
    "len",
    "numpy.dot",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._mean_predictions.mean_prediction": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "_convert_to_ndarray_and_squeeze",
    "float",
    "len",
    "numpy.dot",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._mean_predictions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.metrics._metric_frame": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "fairlearn.metrics._metric_frame.logging"
   ]
  },
  "type": "module"
 },
 "fairlearn.metrics._metric_frame.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "fairlearn.metrics._metric_frame.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "fairlearn.metrics._metric_frame.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "fairlearn.metrics._metric_frame.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "fairlearn.metrics._metric_frame.MetricFrame": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "fairlearn.metrics._metric_frame.MetricFrame.__init__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze",
    "fairlearn.metrics._metric_frame._DUPLICATE_FEATURE_NAME",
    "set",
    "sklearn.utils.check_consistent_length",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame._compute_by_group": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "fairlearn.metrics._metric_frame.copy"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame._compute_dataframe_from_rows": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "fairlearn.metrics._metric_frame._SUBGROUP_COUNT_WARNING",
    "fairlearn.metrics._metric_frame._SUBGROUP_COUNT_WARNING_THRESHOLD",
    "fairlearn.metrics._metric_frame.logger",
    "len",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_product",
    "sum"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame._compute_overall": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame._mask_from_tuple": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.logical_and",
    "numpy.ndarray",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame._process_features": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "GroupFeature",
    "ValueError",
    "dict",
    "fairlearn.metrics._metric_frame._FEATURE_DF_COLUMN_BAD_NAME",
    "fairlearn.metrics._metric_frame._FEATURE_LIST_NONSCALAR",
    "fairlearn.metrics._metric_frame._TOO_MANY_FEATURE_DIMS",
    "isinstance",
    "len",
    "list",
    "numpy.asarray",
    "numpy.atleast_1d",
    "numpy.isscalar",
    "numpy.object",
    "numpy.squeeze",
    "pandas.DataFrame",
    "pandas.DataFrame.from_dict",
    "pandas.Series",
    "range",
    "sklearn.utils.check_consistent_length",
    "str",
    "type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame._process_functions": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "FunctionContainer",
    "ValueError",
    "dict",
    "fairlearn.metrics._metric_frame._SAMPLE_PARAM_KEYS_NOT_IN_FUNC_DICT",
    "isinstance",
    "set",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame.by_group": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "property",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame.control_levels": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame.difference": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "str",
    "typing.Any",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame.group_max": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "typing.Any",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame.group_min": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "typing.Any",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame.overall": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "property",
    "typing.Any",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame.ratio": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "ValueError",
    "min",
    "pandas.DataFrame",
    "pandas.Series",
    "str",
    "typing.Any",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame.ratio.ratio_sub_one": {
  "data": {
   "lineno": 453
  },
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.MetricFrame.sensitive_levels": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._metric_frame.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "fairlearn.metrics._metric_frame.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "fairlearn.metrics._metric_frame._BAD_FEATURE_LENGTH": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "fairlearn.metrics._metric_frame._DUPLICATE_FEATURE_NAME": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "fairlearn.metrics._metric_frame._FEATURE_DF_COLUMN_BAD_NAME": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "fairlearn.metrics._metric_frame._FEATURE_LIST_NONSCALAR": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "fairlearn.metrics._metric_frame._SAMPLE_PARAM_KEYS_NOT_IN_FUNC_DICT": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "fairlearn.metrics._metric_frame._SUBGROUP_COUNT_WARNING": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "fairlearn.metrics._metric_frame._SUBGROUP_COUNT_WARNING_THRESHOLD": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "fairlearn.metrics._metric_frame._TOO_MANY_FEATURE_DIMS": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "fairlearn.metrics._metric_frame._convert_to_ndarray_and_squeeze": {
  "data": {
   "shadows": "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze"
  },
  "type": "import"
 },
 "fairlearn.metrics._metric_frame.check_consistent_length": {
  "data": {
   "shadows": "sklearn.utils.check_consistent_length"
  },
  "type": "import"
 },
 "fairlearn.metrics._metric_frame.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "fairlearn.metrics._metric_frame.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "fairlearn.metrics._metric_frame.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "fairlearn.metrics._metric_frame.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.metrics._metric_frame.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fairlearn.metrics._module_obj": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "fairlearn.metrics._selection_rate": {
  "data": {},
  "type": "module"
 },
 "fairlearn.metrics._selection_rate.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "fairlearn.metrics._selection_rate._EMPTY_INPUT_PREDICTIONS_ERROR_MESSAGE": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "fairlearn.metrics._selection_rate._convert_to_ndarray_and_squeeze": {
  "data": {
   "shadows": "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze"
  },
  "type": "import"
 },
 "fairlearn.metrics._selection_rate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.metrics._selection_rate.selection_rate": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze",
    "fairlearn.metrics._selection_rate._EMPTY_INPUT_PREDICTIONS_ERROR_MESSAGE",
    "float",
    "len",
    "numpy.asarray",
    "numpy.dot",
    "numpy.ones",
    "numpy.squeeze",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "fairlearn.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "fairlearn.postprocessing": {
  "data": {},
  "type": "module"
 },
 "fairlearn.postprocessing.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._constants": {
  "data": {},
  "type": "module"
 },
 "fairlearn.postprocessing._constants.BASE_ESTIMATOR_NONE_ERROR_MESSAGE": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._constants.BASE_ESTIMATOR_NOT_FITTED_WARNING": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._constants.LABEL_KEY": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._constants.OUTPUT_SEPARATOR": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._constants.P0_KEY": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._constants.P1_KEY": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._constants.SCORE_KEY": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._constants.SENSITIVE_FEATURE_KEY": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._constants._MATPLOTLIB_IMPORT_ERROR_MESSAGE": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._interpolated_thresholder": {
  "data": {},
  "type": "module"
 },
 "fairlearn.postprocessing._interpolated_thresholder.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._interpolated_thresholder.InterpolatedThresholder": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.MetaEstimatorMixin"
   ]
  },
  "type": "class"
 },
 "fairlearn.postprocessing._interpolated_thresholder.InterpolatedThresholder.__init__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "fairlearn.postprocessing._interpolated_thresholder.InterpolatedThresholder._pmf_predict": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "fairlearn._input_validation._validate_and_reformat_input",
    "numpy.array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._interpolated_thresholder.InterpolatedThresholder.fit": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.clone",
    "sklearn.exceptions.NotFittedError",
    "sklearn.utils.validation.check_is_fitted",
    "type",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._interpolated_thresholder.InterpolatedThresholder.predict": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "len",
    "sklearn.utils.check_random_state",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._interpolated_thresholder.MetaEstimatorMixin": {
  "data": {
   "shadows": "sklearn.base.MetaEstimatorMixin"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._interpolated_thresholder.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._interpolated_thresholder._validate_and_reformat_input": {
  "data": {
   "shadows": "fairlearn._input_validation._validate_and_reformat_input"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._interpolated_thresholder.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._interpolated_thresholder.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._interpolated_thresholder.clone": {
  "data": {
   "shadows": "sklearn.clone"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._interpolated_thresholder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._interpolated_thresholder.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._plotting": {
  "data": {},
  "type": "module"
 },
 "fairlearn.postprocessing._plotting._debug_colormap": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._plotting._debug_colors": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._plotting._debug_ncolors": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._plotting._get_debug_color": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ImportError",
    "RuntimeError",
    "fairlearn.postprocessing._plotting._debug_colormap",
    "fairlearn.postprocessing._plotting._debug_colors",
    "fairlearn.postprocessing._plotting._debug_ncolors",
    "len",
    "matplotlib.cm.ScalarMappable",
    "range"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._plotting._plot_curve": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "fairlearn.postprocessing._plotting._get_debug_color",
    "str"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._plotting._plot_overlap": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "fairlearn.postprocessing._plotting._plot_solution": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "fairlearn.postprocessing._plotting._raise_if_not_threshold_optimizer": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._plotting.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._plotting.cm": {
  "data": {
   "shadows": "matplotlib.cm"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._plotting.matplotlib.colors": {
  "data": {
   "shadows": "matplotlib.colors"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._plotting.plot_threshold_optimizer": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ImportError",
    "RuntimeError",
    "fairlearn.postprocessing._plotting._plot_curve",
    "fairlearn.postprocessing._plotting._plot_overlap",
    "fairlearn.postprocessing._plotting._plot_solution",
    "fairlearn.postprocessing._plotting._raise_if_not_threshold_optimizer",
    "matplotlib.pyplot.axes",
    "matplotlib.pyplot.show",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._plotting.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._threshold_operation": {
  "data": {},
  "type": "module"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation.__call__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation.__repr__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation.operator": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation.threshold": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "fairlearn.postprocessing._threshold_optimizer.ALL_CONSTRAINTS",
    "fairlearn.postprocessing._threshold_optimizer.OBJECTIVES_FOR_EQUALIZED_ODDS",
    "fairlearn.postprocessing._threshold_optimizer.OBJECTIVES_FOR_SIMPLE_CONSTRAINTS",
    "fairlearn.postprocessing._threshold_optimizer.SIMPLE_CONSTRAINTS",
    "fairlearn.postprocessing._threshold_optimizer.logging",
    "list",
    "sorted"
   ]
  },
  "type": "module"
 },
 "fairlearn.postprocessing._threshold_optimizer.ALL_CONSTRAINTS": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._threshold_optimizer.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._threshold_optimizer.Bunch": {
  "data": {
   "shadows": "sklearn.utils.Bunch"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._threshold_optimizer.DIFFERENT_INPUT_LENGTH_ERROR_MESSAGE": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._threshold_optimizer.MULTIPLE_DATA_COLUMNS_ERROR_MESSAGE": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._threshold_optimizer.MetaEstimatorMixin": {
  "data": {
   "shadows": "sklearn.base.MetaEstimatorMixin"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._threshold_optimizer.NON_BINARY_LABELS_ERROR_MESSAGE": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._threshold_optimizer.NOT_SUPPORTED_CONSTRAINTS_ERROR_MESSAGE": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._threshold_optimizer.NOT_SUPPORTED_OBJECTIVES_FOR_EQUALIZED_ODDS_ERROR_MESSAGE": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._threshold_optimizer.NOT_SUPPORTED_OBJECTIVES_FOR_SIMPLE_CONSTRAINTS_ERROR_MESSAGE": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._threshold_optimizer.NO_CONTROL_FEATURES": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._threshold_optimizer.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._threshold_optimizer.OBJECTIVES_FOR_EQUALIZED_ODDS": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._threshold_optimizer.OBJECTIVES_FOR_SIMPLE_CONSTRAINTS": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._threshold_optimizer.SCORES_DATA_TOO_MANY_COLUMNS_ERROR_MESSAGE": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._threshold_optimizer.SENSITIVE_FEATURE_NAME_CONFLICT_DETECTED_ERROR_MESSAGE": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._threshold_optimizer.SIMPLE_CONSTRAINTS": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.MetaEstimatorMixin"
   ]
  },
  "type": "class"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer.__init__": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer._pmf_predict": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer._threshold_optimization_for_equalized_odds": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "InterpolatedThresholder",
    "_extend_confusion_matrix",
    "_interpolate_curve",
    "_reformat_and_group_data",
    "_tradeoff_curve",
    "fairlearn.postprocessing._threshold_optimizer.logger",
    "len",
    "numpy.amin",
    "numpy.around",
    "numpy.linspace",
    "pandas.DataFrame",
    "sklearn.utils.Bunch",
    "str",
    "sum",
    "type"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer._threshold_optimization_for_simple_constraints": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "InterpolatedThresholder",
    "_interpolate_curve",
    "_reformat_and_group_data",
    "_tradeoff_curve",
    "fairlearn.postprocessing._threshold_optimizer.logger",
    "len",
    "numpy.linspace",
    "sklearn.utils.Bunch",
    "str"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer.fit": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn._input_validation._KW_CONTROL_FEATURES",
    "fairlearn._input_validation._validate_and_reformat_input",
    "fairlearn.postprocessing._threshold_optimizer.NOT_SUPPORTED_CONSTRAINTS_ERROR_MESSAGE",
    "fairlearn.postprocessing._threshold_optimizer.NOT_SUPPORTED_OBJECTIVES_FOR_EQUALIZED_ODDS_ERROR_MESSAGE",
    "fairlearn.postprocessing._threshold_optimizer.NOT_SUPPORTED_OBJECTIVES_FOR_SIMPLE_CONSTRAINTS_ERROR_MESSAGE",
    "fairlearn.postprocessing._threshold_optimizer.NO_CONTROL_FEATURES",
    "fairlearn.postprocessing._threshold_optimizer.OBJECTIVES_FOR_EQUALIZED_ODDS",
    "fairlearn.postprocessing._threshold_optimizer.OBJECTIVES_FOR_SIMPLE_CONSTRAINTS",
    "fairlearn.postprocessing._threshold_optimizer.SIMPLE_CONSTRAINTS",
    "int",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series",
    "sklearn.clone",
    "sklearn.exceptions.NotFittedError",
    "sklearn.utils.validation.check_is_fitted",
    "threshold_optimization_method",
    "type",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer.predict": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer.UNEXPECTED_DATA_TYPE_ERROR_MESSAGE": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._threshold_optimizer._KW_CONTROL_FEATURES": {
  "data": {
   "shadows": "fairlearn._input_validation._KW_CONTROL_FEATURES"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._threshold_optimizer._reformat_and_group_data": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "ValueError",
    "_reformat_data_into_dict",
    "fairlearn.postprocessing._threshold_optimizer.SENSITIVE_FEATURE_NAME_CONFLICT_DETECTED_ERROR_MESSAGE",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer._reformat_data_into_dict": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "fairlearn.postprocessing._threshold_optimizer.MULTIPLE_DATA_COLUMNS_ERROR_MESSAGE",
    "fairlearn.postprocessing._threshold_optimizer.UNEXPECTED_DATA_TYPE_ERROR_MESSAGE",
    "len",
    "list",
    "map",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series",
    "type"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer._validate_and_reformat_input": {
  "data": {
   "shadows": "fairlearn._input_validation._validate_and_reformat_input"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._threshold_optimizer.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._threshold_optimizer.clone": {
  "data": {
   "shadows": "sklearn.clone"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._threshold_optimizer.logger": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._threshold_optimizer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._threshold_optimizer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._threshold_optimizer.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._threshold_optimizer.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._tradeoff_curve_utilities": {
  "data": {},
  "type": "module"
 },
 "fairlearn.postprocessing._tradeoff_curve_utilities.Bunch": {
  "data": {
   "shadows": "sklearn.utils.Bunch"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._tradeoff_curve_utilities.DEGENERATE_LABELS_ERROR_MESSAGE": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._tradeoff_curve_utilities.METRIC_DICT": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._tradeoff_curve_utilities._calculate_tradeoff_points": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "ThresholdOperation",
    "ValueError",
    "_get_scores_labels_and_counts",
    "fairlearn.postprocessing._tradeoff_curve_utilities.DEGENERATE_LABELS_ERROR_MESSAGE",
    "fairlearn.postprocessing._tradeoff_curve_utilities.METRIC_DICT",
    "fairlearn.postprocessing._tradeoff_curve_utilities._extend_confusion_matrix",
    "numpy.inf",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._tradeoff_curve_utilities._extend_confusion_matrix": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "sklearn.utils.Bunch"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._tradeoff_curve_utilities._filter_points_to_get_convex_hull": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._tradeoff_curve_utilities._get_counts": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "len",
    "sum"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._tradeoff_curve_utilities._get_scores_labels_and_counts": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "_get_counts",
    "list"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._tradeoff_curve_utilities._interpolate_curve": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._tradeoff_curve_utilities._tradeoff_curve": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "_calculate_tradeoff_points",
    "_filter_points_to_get_convex_hull",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._tradeoff_curve_utilities.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._tradeoff_curve_utilities.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fairlearn.preprocessing": {
  "data": {},
  "type": "module"
 },
 "fairlearn.preprocessing.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "fairlearn.preprocessing._correlation_remover": {
  "data": {},
  "type": "module"
 },
 "fairlearn.preprocessing._correlation_remover.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "fairlearn.preprocessing._correlation_remover.CorrelationRemover": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "fairlearn.preprocessing._correlation_remover.CorrelationRemover.__init__": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "fairlearn.preprocessing._correlation_remover.CorrelationRemover._create_lookup": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "fairlearn.preprocessing._correlation_remover.CorrelationRemover._split_X": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "fairlearn.preprocessing._correlation_remover.CorrelationRemover.fit": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.linalg.lstsq",
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "fairlearn.preprocessing._correlation_remover.CorrelationRemover.transform": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ValueError",
    "numpy.atleast_2d",
    "sklearn.utils.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "fairlearn.preprocessing._correlation_remover.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "fairlearn.preprocessing._correlation_remover.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "fairlearn.preprocessing._correlation_remover.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "fairlearn.preprocessing._correlation_remover.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.preprocessing._correlation_remover.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fairlearn.reductions": {
  "data": {
   "symbols_in_volume": [
    "fairlearn.reductions._exponentiated_gradient",
    "fairlearn.reductions._grid_search",
    "fairlearn.reductions._moments"
   ]
  },
  "type": "module"
 },
 "fairlearn.reductions.__all__": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "fairlearn.reductions._exponentiated_gradient": {
  "data": {},
  "type": "module"
 },
 "fairlearn.reductions._exponentiated_gradient.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "fairlearn.reductions._exponentiated_gradient._constants": {
  "data": {},
  "type": "module"
 },
 "fairlearn.reductions._exponentiated_gradient._constants._ACCURACY_MUL": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "fairlearn.reductions._exponentiated_gradient._constants._INDENTATION": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "fairlearn.reductions._exponentiated_gradient._constants._LINE": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "fairlearn.reductions._exponentiated_gradient._constants._MIN_ITER": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "fairlearn.reductions._exponentiated_gradient._constants._PRECISION": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "fairlearn.reductions._exponentiated_gradient._constants._REGRET_CHECK_INCREASE_T": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "fairlearn.reductions._exponentiated_gradient._constants._REGRET_CHECK_START_T": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "fairlearn.reductions._exponentiated_gradient._constants._SHRINK_ETA": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "fairlearn.reductions._exponentiated_gradient._constants._SHRINK_REGRET": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "fairlearn.reductions._exponentiated_gradient._lagrangian.logging"
   ]
  },
  "type": "module"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian.ClassificationMoment": {
  "data": {
   "shadows": "fairlearn.reductions._moments.ClassificationMoment"
  },
  "type": "import"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian.DummyClassifier": {
  "data": {
   "shadows": "sklearn.dummy.DummyClassifier"
  },
  "type": "import"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._GapResult": {
  "data": {
   "lineno": 222
  },
  "type": "class"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._GapResult.__init__": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._GapResult.gap": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian._call_oracle": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "fairlearn.reductions._exponentiated_gradient._lagrangian.logger",
    "fairlearn.reductions._moments.ClassificationMoment",
    "isinstance",
    "len",
    "numpy.unique",
    "sklearn.clone",
    "sklearn.dummy.DummyClassifier",
    "time.time"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian._eval": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "callable",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian.best_h": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "fairlearn.reductions._exponentiated_gradient._lagrangian.logger",
    "len",
    "numpy.PINF"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian.best_h.h": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian.eval_gap": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "_GapResult",
    "fairlearn.reductions._exponentiated_gradient._lagrangian.logger",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian.solve_linprog": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "len",
    "numpy.concatenate",
    "numpy.ones",
    "numpy.zeros",
    "pandas.Series",
    "range",
    "scipy.optimize.linprog"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian.clone": {
  "data": {
   "shadows": "sklearn.clone"
  },
  "type": "import"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian.opt": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.logging"
   ]
  },
  "type": "module"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ClassificationMoment": {
  "data": {
   "shadows": "fairlearn.reductions._moments.ClassificationMoment"
  },
  "type": "import"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.MetaEstimatorMixin"
   ]
  },
  "type": "class"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient.__init__": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient._pmf_predict": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "fairlearn.reductions._moments.ClassificationMoment",
    "isinstance",
    "len",
    "numpy.concatenate",
    "numpy.zeros",
    "pandas.DataFrame",
    "range",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient.fit": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "_Lagrangian",
    "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.logger",
    "h",
    "len",
    "min",
    "numpy.PINF",
    "numpy.exp",
    "numpy.sqrt",
    "pandas.DataFrame",
    "pandas.Series",
    "range"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient.predict": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "fairlearn.reductions._moments.ClassificationMoment",
    "isinstance",
    "len",
    "numpy.zeros",
    "range",
    "sklearn.utils.check_random_state",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.MetaEstimatorMixin": {
  "data": {
   "shadows": "sklearn.base.MetaEstimatorMixin"
  },
  "type": "import"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fairlearn.reductions._grid_search": {
  "data": {},
  "type": "module"
 },
 "fairlearn.reductions._grid_search.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "fairlearn.reductions._grid_search._grid_generator": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "fairlearn.reductions._grid_search._grid_generator.logging"
   ]
  },
  "type": "module"
 },
 "fairlearn.reductions._grid_search._grid_generator.GRID_DIMENSION_WARN_TEMPLATE": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "fairlearn.reductions._grid_search._grid_generator.GRID_DIMENSION_WARN_THRESHOLD": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "fairlearn.reductions._grid_search._grid_generator.GRID_SIZE_WARN_TEMPLATE": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "fairlearn.reductions._grid_search._grid_generator._GridGenerator": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "fairlearn.reductions._grid_search._grid_generator._GridGenerator.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "fairlearn.reductions._grid_search._grid_generator.GRID_DIMENSION_WARN_TEMPLATE",
    "fairlearn.reductions._grid_search._grid_generator.GRID_DIMENSION_WARN_THRESHOLD",
    "fairlearn.reductions._grid_search._grid_generator.GRID_SIZE_WARN_TEMPLATE",
    "fairlearn.reductions._grid_search._grid_generator.logger",
    "float",
    "int",
    "len",
    "numpy.floor",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._grid_search._grid_generator._GridGenerator.accumulate_integer_grid": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "abs",
    "range"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._grid_search._grid_generator._GridGenerator.build_integer_grid": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._grid_search._grid_generator.logger": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "fairlearn.reductions._grid_search._grid_generator.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "fairlearn.reductions._grid_search._grid_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.reductions._grid_search._grid_generator.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fairlearn.reductions._grid_search.grid_search": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "fairlearn.reductions._grid_search.grid_search.logging"
   ]
  },
  "type": "module"
 },
 "fairlearn.reductions._grid_search.grid_search.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "fairlearn.reductions._grid_search.grid_search.ClassificationMoment": {
  "data": {
   "shadows": "fairlearn.reductions._moments.ClassificationMoment"
  },
  "type": "import"
 },
 "fairlearn.reductions._grid_search.grid_search.DummyClassifier": {
  "data": {
   "shadows": "sklearn.dummy.DummyClassifier"
  },
  "type": "import"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.MetaEstimatorMixin"
   ]
  },
  "type": "class"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.__init__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "RuntimeError",
    "fairlearn.reductions._grid_search.grid_search.TRADEOFF_OPTIMIZATION",
    "fairlearn.reductions._moments.Moment",
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.fit": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "RuntimeError",
    "_GridGenerator",
    "fairlearn.reductions._grid_search.grid_search.TRADEOFF_OPTIMIZATION",
    "fairlearn.reductions._grid_search.grid_search.copy",
    "fairlearn.reductions._grid_search.grid_search.logger",
    "fairlearn.reductions._moments.ClassificationMoment",
    "isinstance",
    "len",
    "loss_fct",
    "min",
    "numpy.float64",
    "numpy.unique",
    "pandas.DataFrame",
    "range",
    "sklearn.dummy.DummyClassifier",
    "time.time"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.fit.loss_fct": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.fit.predict_fct": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.predict": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.predict_proba": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.MetaEstimatorMixin": {
  "data": {
   "shadows": "sklearn.base.MetaEstimatorMixin"
  },
  "type": "import"
 },
 "fairlearn.reductions._grid_search.grid_search.Moment": {
  "data": {
   "shadows": "fairlearn.reductions._moments.Moment"
  },
  "type": "import"
 },
 "fairlearn.reductions._grid_search.grid_search.TRADEOFF_OPTIMIZATION": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "fairlearn.reductions._grid_search.grid_search.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "fairlearn.reductions._grid_search.grid_search.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "fairlearn.reductions._grid_search.grid_search.logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "fairlearn.reductions._grid_search.grid_search.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "fairlearn.reductions._grid_search.grid_search.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.reductions._grid_search.grid_search.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fairlearn.reductions._grid_search.grid_search.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "fairlearn.reductions._moments": {
  "data": {},
  "type": "module"
 },
 "fairlearn.reductions._moments.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "fairlearn.reductions._moments.bounded_group_loss": {
  "data": {
   "symbols_in_volume": [
    "fairlearn.reductions._moments.bounded_group_loss.AbsoluteLoss",
    "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment"
   ]
  },
  "type": "module"
 },
 "fairlearn.reductions._moments.bounded_group_loss.AbsoluteLoss": {
  "data": {
   "lineno": 137
  },
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.AbsoluteLoss.__init__": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.AbsoluteLoss.eval": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.clip"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.BoundedGroupLoss": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment"
   ]
  },
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.BoundedGroupLoss.__init__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.bound": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.default_objective": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "MeanLoss"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.gamma": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "predictor",
    "str"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.load_data": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "fairlearn._input_validation._validate_and_reformat_input",
    "pandas.DataFrame",
    "pandas.Series",
    "super"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.project_lambda": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.signed_weights": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.MeanLoss": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment"
   ]
  },
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.MeanLoss.__init__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.SquareLoss": {
  "data": {
   "lineno": 122
  },
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.SquareLoss.__init__": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.SquareLoss.eval": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.clip"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ZeroOneLoss": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "fairlearn.reductions._moments.bounded_group_loss.AbsoluteLoss"
   ]
  },
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ZeroOneLoss.__init__": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss._validate_and_reformat_input": {
  "data": {
   "shadows": "fairlearn._input_validation._validate_and_reformat_input"
  },
  "type": "import"
 },
 "fairlearn.reductions._moments.bounded_group_loss.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.reductions._moments.bounded_group_loss.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fairlearn.reductions._moments.error_rate": {
  "data": {},
  "type": "module"
 },
 "fairlearn.reductions._moments.error_rate.ErrorRate": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "fairlearn.reductions._moments.error_rate.ErrorRate.gamma": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "numpy.squeeze",
    "pandas.Series",
    "predictor",
    "str"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.error_rate.ErrorRate.load_data": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "fairlearn._input_validation._validate_and_reformat_input",
    "super"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.error_rate.ErrorRate.project_lambda": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.error_rate.ErrorRate.signed_weights": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.error_rate._validate_and_reformat_input": {
  "data": {
   "shadows": "fairlearn._input_validation._validate_and_reformat_input"
  },
  "type": "import"
 },
 "fairlearn.reductions._moments.error_rate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.reductions._moments.error_rate.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fairlearn.reductions._moments.moment": {
  "data": {
   "symbols_in_volume": [
    "fairlearn.reductions._moments.moment.ClassificationMoment",
    "fairlearn.reductions._moments.moment.LossMoment",
    "fairlearn.reductions._moments.moment.Moment"
   ]
  },
  "type": "module"
 },
 "fairlearn.reductions._moments.moment.ClassificationMoment": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "fairlearn.reductions._moments.moment.Moment"
   ]
  },
  "type": "class"
 },
 "fairlearn.reductions._moments.moment.LossMoment": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "fairlearn.reductions._moments.moment.Moment"
   ]
  },
  "type": "class"
 },
 "fairlearn.reductions._moments.moment.LossMoment.__init__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "fairlearn.reductions._moments.moment.Moment.__init__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment._y_as_series": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment.bound": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment.gamma": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment.load_data": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "fairlearn.reductions._moments.moment._GROUP_ID",
    "fairlearn.reductions._moments.moment._LABEL",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment.project_lambda": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment.signed_weights": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment.total_samples": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.moment._ALL": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "fairlearn.reductions._moments.moment._EVENT": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "fairlearn.reductions._moments.moment._GROUP_ID": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "fairlearn.reductions._moments.moment._LABEL": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "fairlearn.reductions._moments.moment._LOSS": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "fairlearn.reductions._moments.moment._PREDICTION": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "fairlearn.reductions._moments.moment._SIGN": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "fairlearn.reductions._moments.moment.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fairlearn.reductions._moments.utility_parity": {
  "data": {
   "symbols_in_volume": [
    "fairlearn.reductions._moments.utility_parity.UtilityParity"
   ]
  },
  "type": "module"
 },
 "fairlearn.reductions._moments.utility_parity.DemographicParity": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "fairlearn.reductions._moments.utility_parity.UtilityParity"
   ]
  },
  "type": "class"
 },
 "fairlearn.reductions._moments.utility_parity.DemographicParity.load_data": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "fairlearn._input_validation._validate_and_reformat_input",
    "fairlearn.reductions._moments.utility_parity._merge_event_and_control_columns",
    "pandas.Series",
    "super"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.utility_parity.EqualizedOdds": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "fairlearn.reductions._moments.utility_parity.UtilityParity"
   ]
  },
  "type": "class"
 },
 "fairlearn.reductions._moments.utility_parity.EqualizedOdds.load_data": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "fairlearn._input_validation._validate_and_reformat_input",
    "fairlearn.reductions._moments.utility_parity._merge_event_and_control_columns",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.utility_parity.ErrorRateParity": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "fairlearn.reductions._moments.utility_parity.UtilityParity"
   ]
  },
  "type": "class"
 },
 "fairlearn.reductions._moments.utility_parity.ErrorRateParity.load_data": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "fairlearn._input_validation._validate_and_reformat_input",
    "fairlearn.reductions._moments.utility_parity._merge_event_and_control_columns",
    "numpy.vstack",
    "pandas.Series",
    "super"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.utility_parity.FalsePositiveRateParity": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "fairlearn.reductions._moments.utility_parity.UtilityParity"
   ]
  },
  "type": "class"
 },
 "fairlearn.reductions._moments.utility_parity.FalsePositiveRateParity.load_data": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "fairlearn._input_validation._validate_and_reformat_input",
    "fairlearn.reductions._moments.utility_parity._merge_event_and_control_columns",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.utility_parity.TruePositiveRateParity": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "fairlearn.reductions._moments.utility_parity.UtilityParity"
   ]
  },
  "type": "class"
 },
 "fairlearn.reductions._moments.utility_parity.TruePositiveRateParity.load_data": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "fairlearn._input_validation._validate_and_reformat_input",
    "fairlearn.reductions._moments.utility_parity._merge_event_and_control_columns",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.utility_parity.UtilityParity": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "fairlearn.reductions._moments.utility_parity.UtilityParity.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn._input_validation._MESSAGE_RATIO_NOT_IN_RANGE",
    "fairlearn.reductions._moments.utility_parity.UtilityParity",
    "fairlearn.reductions._moments.utility_parity._DEFAULT_DIFFERENCE_BOUND",
    "fairlearn.reductions._moments.utility_parity._MESSAGE_INVALID_BOUNDS",
    "super"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.utility_parity.UtilityParity.bound": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.utility_parity.UtilityParity.default_objective": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ErrorRate"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.utility_parity.UtilityParity.gamma": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "fairlearn.reductions._moments.utility_parity._LOWER_BOUND_DIFF",
    "fairlearn.reductions._moments.utility_parity._UPPER_BOUND_DIFF",
    "isinstance",
    "numpy.ndarray",
    "numpy.squeeze",
    "pandas.concat",
    "predictor",
    "str"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.utility_parity.UtilityParity.load_data": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.ones",
    "numpy.vstack",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "super"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.utility_parity.UtilityParity.project_lambda": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.utility_parity.UtilityParity.signed_weights": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "pandas.isna"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.utility_parity._CTRL_EVENT_FORMAT": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "fairlearn.reductions._moments.utility_parity._DEFAULT_DIFFERENCE_BOUND": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "fairlearn.reductions._moments.utility_parity._LOWER_BOUND_DIFF": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "fairlearn.reductions._moments.utility_parity._MESSAGE_INVALID_BOUNDS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "fairlearn.reductions._moments.utility_parity._MESSAGE_RATIO_NOT_IN_RANGE": {
  "data": {
   "shadows": "fairlearn._input_validation._MESSAGE_RATIO_NOT_IN_RANGE"
  },
  "type": "import"
 },
 "fairlearn.reductions._moments.utility_parity._UPPER_BOUND_DIFF": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "fairlearn.reductions._moments.utility_parity._combine_event_and_control": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "fairlearn.reductions._moments.utility_parity._CTRL_EVENT_FORMAT",
    "pandas.notnull",
    "str"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.utility_parity._merge_event_and_control_columns": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "fairlearn.reductions._moments.utility_parity._combine_event_and_control"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.utility_parity._validate_and_reformat_input": {
  "data": {
   "shadows": "fairlearn._input_validation._validate_and_reformat_input"
  },
  "type": "import"
 },
 "fairlearn.reductions._moments.utility_parity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.reductions._moments.utility_parity.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fairlearn.show_versions": {
  "data": {},
  "type": "module"
 },
 "fairlearn.show_versions._get_deps_info": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ImportError",
    "fairlearn.show_versions.importlib",
    "fairlearn.show_versions.sys",
    "get_version",
    "sorted"
   ]
  },
  "type": "function"
 },
 "fairlearn.show_versions._get_deps_info.get_version": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "fairlearn.show_versions._get_sys_info": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "dict",
    "fairlearn.show_versions.platform",
    "fairlearn.show_versions.sys"
   ]
  },
  "type": "function"
 },
 "fairlearn.show_versions.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "fairlearn.show_versions.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "fairlearn.show_versions.show_versions": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "fairlearn.show_versions._get_deps_info",
    "fairlearn.show_versions._get_sys_info",
    "print"
   ]
  },
  "type": "function"
 },
 "fairlearn.show_versions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "fairlearn.widget": {
  "data": {},
  "type": "module"
 },
 "fairlearn.widget.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "fairlearn.widget._fairlearn_dashboard": {
  "data": {},
  "type": "module"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "FairlearnWidget",
    "IPython.display.display",
    "ValueError",
    "Warning",
    "dict",
    "fairlearn.metrics._extra_metrics._balanced_root_mean_squared_error",
    "fairlearn.metrics._extra_metrics._mean_overprediction",
    "fairlearn.metrics._extra_metrics._mean_underprediction",
    "fairlearn.metrics._extra_metrics._root_mean_squared_error",
    "fairlearn.metrics._extra_metrics.false_negative_rate",
    "fairlearn.metrics._extra_metrics.false_positive_rate",
    "fairlearn.metrics._extra_metrics.mean_prediction",
    "fairlearn.metrics._extra_metrics.selection_rate",
    "fairlearn.metrics._extra_metrics.true_negative_rate",
    "isinstance",
    "len",
    "numpy.shape",
    "sklearn.metrics.accuracy_score",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.log_loss",
    "sklearn.metrics.mean_absolute_error",
    "sklearn.metrics.mean_squared_error",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.r2_score",
    "sklearn.metrics.recall_score",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.zero_one_loss",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard._convert_to_list": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard._on_request": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "fairlearn.metrics.MetricFrame",
    "fairlearn.widget._fairlearn_dashboard.copy",
    "id"
   ]
  },
  "type": "function"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard._sanitize_data_shape": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "len",
    "list",
    "map",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard._show": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "IPython.display.display"
   ]
  },
  "type": "function"
 },
 "fairlearn.widget._fairlearn_dashboard.MetricFrame": {
  "data": {
   "shadows": "fairlearn.metrics.MetricFrame"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard._balanced_root_mean_squared_error": {
  "data": {
   "shadows": "fairlearn.metrics._extra_metrics._balanced_root_mean_squared_error"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard._mean_overprediction": {
  "data": {
   "shadows": "fairlearn.metrics._extra_metrics._mean_overprediction"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard._mean_underprediction": {
  "data": {
   "shadows": "fairlearn.metrics._extra_metrics._mean_underprediction"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard._root_mean_squared_error": {
  "data": {
   "shadows": "fairlearn.metrics._extra_metrics._root_mean_squared_error"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.display": {
  "data": {
   "shadows": "IPython.display.display"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.false_negative_rate": {
  "data": {
   "shadows": "fairlearn.metrics._extra_metrics.false_negative_rate"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.false_positive_rate": {
  "data": {
   "shadows": "fairlearn.metrics._extra_metrics.false_positive_rate"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.mean_prediction": {
  "data": {
   "shadows": "fairlearn.metrics._extra_metrics.mean_prediction"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.selection_rate": {
  "data": {
   "shadows": "fairlearn.metrics._extra_metrics.selection_rate"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.skm": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.true_negative_rate": {
  "data": {
   "shadows": "fairlearn.metrics._extra_metrics.true_negative_rate"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_widget": {
  "data": {},
  "type": "module"
 },
 "fairlearn.widget._fairlearn_widget.Dict": {
  "data": {
   "shadows": "traitlets.Dict"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_widget.FairlearnWidget": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ipywidgets.DOMWidget",
    "ipywidgets.register",
    "traitlets.Dict",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "fairlearn.widget._fairlearn_widget.Unicode": {
  "data": {
   "shadows": "traitlets.Unicode"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_widget.widgets": {
  "data": {
   "shadows": "ipywidgets"
  },
  "type": "import"
 },
 "fairlearn.widget._jupyter_nbextension_paths": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "test": {
  "data": {},
  "type": "module"
 },
 "test.notebooks": {
  "data": {},
  "type": "module"
 },
 "test.notebooks.test_notebooks": {
  "data": {},
  "type": "module"
 },
 "test.notebooks.test_notebooks.ScrapSpec": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "test.notebooks.test_notebooks.ScrapSpec.__init__": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "test.notebooks.test_notebooks.ScrapSpec.code": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "test.notebooks.test_notebooks.ScrapSpec.expected": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "test.notebooks.test_notebooks.append_scrapbook_commands": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "nbformat.NO_CONVERT",
    "nbformat.read",
    "nbformat.v4.new_code_cell",
    "nbformat.write"
   ]
  },
  "type": "function"
 },
 "test.notebooks.test_notebooks.assay_one_notebook": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "papermill.execute_notebook",
    "scrapbook.read_notebook",
    "test.notebooks.test_notebooks.append_scrapbook_commands"
   ]
  },
  "type": "function"
 },
 "test.notebooks.test_notebooks.nbf": {
  "data": {
   "shadows": "nbformat"
  },
  "type": "import"
 },
 "test.notebooks.test_notebooks.pm": {
  "data": {
   "shadows": "papermill"
  },
  "type": "import"
 },
 "test.notebooks.test_notebooks.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.notebooks.test_notebooks.sb": {
  "data": {
   "shadows": "scrapbook"
  },
  "type": "import"
 },
 "test.notebooks.test_notebooks.test_binary_classification_with_the_uci_credit_card_default_dataset": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "test.notebooks.test_notebooks.ScrapSpec",
    "test.notebooks.test_notebooks.assay_one_notebook",
    "test.notebooks.test_notebooks.pytest"
   ]
  },
  "type": "function"
 },
 "test.notebooks.test_notebooks.test_grid_search_for_binary_classification": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "test.notebooks.test_notebooks.ScrapSpec",
    "test.notebooks.test_notebooks.assay_one_notebook",
    "test.notebooks.test_notebooks.pytest"
   ]
  },
  "type": "function"
 },
 "test.notebooks.test_notebooks.test_mitigating_disparities_in_ranking_from_binary_data": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "test.notebooks.test_notebooks.ScrapSpec",
    "test.notebooks.test_notebooks.assay_one_notebook",
    "test.notebooks.test_notebooks.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit": {
  "data": {},
  "type": "module"
 },
 "test.unit.conftest": {
  "data": {},
  "type": "module"
 },
 "test.unit.conftest.pytest_collection_modifyitems": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "test.unit.conftest.pytest_configure": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "test.unit.constants": {
  "data": {},
  "type": "module"
 },
 "test.unit.constants.MULTIPLE_SENSITIVE_FEATURE_COMPRESSION_SKIP_REASON": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "test.unit.datasets": {
  "data": {},
  "type": "module"
 },
 "test.unit.datasets.test_datasets": {
  "data": {},
  "type": "module"
 },
 "test.unit.datasets.test_datasets.TestFairlearnDataset": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "test.unit.datasets.test_datasets.TestFairlearnDataset.test_dataset_as_X_y": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "fairlearn.datasets.fetch_adult",
    "fairlearn.datasets.fetch_bank_marketing",
    "fairlearn.datasets.fetch_boston",
    "fetch_function",
    "isinstance",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series",
    "test.unit.datasets.test_datasets.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.datasets.test_datasets.TestFairlearnDataset.test_dataset_as_bunch": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "fairlearn.datasets.fetch_adult",
    "fairlearn.datasets.fetch_bank_marketing",
    "fairlearn.datasets.fetch_boston",
    "fetch_function",
    "isinstance",
    "list",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series",
    "str",
    "test.unit.datasets.test_datasets.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.datasets.test_datasets.fetch_adult": {
  "data": {
   "shadows": "fairlearn.datasets.fetch_adult"
  },
  "type": "import"
 },
 "test.unit.datasets.test_datasets.fetch_bank_marketing": {
  "data": {
   "shadows": "fairlearn.datasets.fetch_bank_marketing"
  },
  "type": "import"
 },
 "test.unit.datasets.test_datasets.fetch_boston": {
  "data": {
   "shadows": "fairlearn.datasets.fetch_boston"
  },
  "type": "import"
 },
 "test.unit.datasets.test_datasets.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.datasets.test_datasets.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.datasets.test_datasets.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.fixes": {
  "data": {},
  "type": "module"
 },
 "test.unit.fixes.get_sklearn_expected_1d_message": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "test.unit.fixes.sklearn"
   ]
  },
  "type": "function"
 },
 "test.unit.fixes.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "test.unit.input_convertors": {
  "data": {
   "symbols_in_volume": [
    "test.unit.input_convertors.ensure_dataframe",
    "test.unit.input_convertors.ensure_list",
    "test.unit.input_convertors.ensure_ndarray",
    "test.unit.input_convertors.ensure_ndarray_2d",
    "test.unit.input_convertors.ensure_series"
   ]
  },
  "type": "module"
 },
 "test.unit.input_convertors._map_into_single_column": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "fairlearn._input_validation._merge_columns",
    "len",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "test.unit.input_convertors._merge_columns": {
  "data": {
   "shadows": "fairlearn._input_validation._merge_columns"
  },
  "type": "import"
 },
 "test.unit.input_convertors.conversions_for_1d": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "test.unit.input_convertors.ensure_dataframe": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.input_convertors.ensure_list": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.input_convertors.ensure_list_1d": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.input_convertors.ensure_ndarray": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "numpy.asarray",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.input_convertors.ensure_ndarray_2d": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.expand_dims",
    "test.unit.input_convertors.ensure_ndarray"
   ]
  },
  "type": "function"
 },
 "test.unit.input_convertors.ensure_series": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.input_convertors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.input_convertors.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.metrics": {
  "data": {},
  "type": "module"
 },
 "test.unit.metrics.data_for_test": {
  "data": {
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "test.unit.metrics.data_for_test.array_gen",
    "test.unit.metrics.data_for_test.y_t"
   ]
  },
  "type": "module"
 },
 "test.unit.metrics.data_for_test.array_gen": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.asarray",
    "range",
    "test.unit.metrics.data_for_test.group_gen"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.data_for_test.g_1": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "test.unit.metrics.data_for_test.g_2": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "test.unit.metrics.data_for_test.g_3": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "test.unit.metrics.data_for_test.g_4": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "test.unit.metrics.data_for_test.group_gen": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.data_for_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.metrics.data_for_test.s_w": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "test.unit.metrics.data_for_test.y_p": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "test.unit.metrics.data_for_test.y_t": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "test.unit.metrics.sample_loader": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.unit.metrics.sample_loader.logging",
    "test.unit.metrics.sample_loader.os",
    "test.unit.metrics.sample_loader.test_logger"
   ]
  },
  "type": "module"
 },
 "test.unit.metrics.sample_loader._DATA_DIR": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "test.unit.metrics.sample_loader._TEST_DIR": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "test.unit.metrics.sample_loader.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "test.unit.metrics.sample_loader.load_sample_dashboard": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "open",
    "test.unit.metrics.sample_loader._DATA_DIR",
    "test.unit.metrics.sample_loader._TEST_DIR",
    "test.unit.metrics.sample_loader.json",
    "test.unit.metrics.sample_loader.os"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.sample_loader.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "test.unit.metrics.sample_loader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.unit.metrics.sample_loader.test_logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error": {
  "data": {},
  "type": "module"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.metrics": {
  "data": {
   "shadows": "fairlearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.test_all_correct": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "fairlearn.metrics._balanced_root_mean_squared_error"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.test_all_incorrect": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "fairlearn.metrics._balanced_root_mean_squared_error"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.test_probability_predict": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "fairlearn.metrics._balanced_root_mean_squared_error"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.test_weighted": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "fairlearn.metrics._balanced_root_mean_squared_error",
    "test.unit.metrics.test_balanced_root_mean_squared_error.math"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.test_y_true_not_0_1": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics._balanced_root_mean_squared_error",
    "test.unit.metrics.test_balanced_root_mean_squared_error.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_create_group_metric_set": {
  "data": {},
  "type": "module"
 },
 "test.unit.metrics.test_create_group_metric_set.MetricFrame": {
  "data": {
   "shadows": "fairlearn.metrics.MetricFrame"
  },
  "type": "import"
 },
 "test.unit.metrics.test_create_group_metric_set.TestCreateGroupMetricSet": {
  "data": {
   "lineno": 134
  },
  "type": "class"
 },
 "test.unit.metrics.test_create_group_metric_set.TestCreateGroupMetricSet.test_regression_prediction_type": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "fairlearn.metrics._group_metric_set._create_group_metric_set"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_create_group_metric_set.TestCreateGroupMetricSet.test_round_trip_1p_1f": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "fairlearn.metrics._group_metric_set._create_group_metric_set",
    "load_sample_dashboard",
    "t_sf",
    "t_y_p",
    "t_y_t",
    "test.unit.input_convertors.conversions_for_1d",
    "test.unit.metrics.test_create_group_metric_set._BC_1P_1F",
    "test.unit.metrics.test_create_group_metric_set.pytest",
    "test.unit.metrics.test_create_group_metric_set.validate_dashboard_dictionary"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_create_group_metric_set.TestCreateGroupMetricSet.test_round_trip_2p_3f": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "enumerate",
    "fairlearn.metrics._group_metric_set._create_group_metric_set",
    "load_sample_dashboard",
    "t_sf",
    "t_y_p",
    "t_y_t",
    "test.unit.input_convertors.conversions_for_1d",
    "test.unit.metrics.test_create_group_metric_set._BC_2P_3F",
    "test.unit.metrics.test_create_group_metric_set.pytest",
    "test.unit.metrics.test_create_group_metric_set.validate_dashboard_dictionary"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_create_group_metric_set.TestCreateGroupMetricSet.test_specific_metrics": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "fairlearn.metrics._group_metric_set._create_group_metric_set",
    "len",
    "list",
    "sklearn.metrics.accuracy_score",
    "sklearn.metrics.roc_auc_score",
    "test.unit.metrics.test_create_group_metric_set.validate_dashboard_dictionary"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_create_group_metric_set.TestProcessPredictions": {
  "data": {
   "lineno": 97
  },
  "type": "class"
 },
 "test.unit.metrics.test_create_group_metric_set.TestProcessPredictions.test_results_are_sorted": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "fairlearn.metrics._group_metric_set._process_predictions",
    "isinstance",
    "list",
    "range",
    "test.unit.input_convertors.conversions_for_1d",
    "test.unit.metrics.test_create_group_metric_set.pytest",
    "transform_y_1",
    "transform_y_2",
    "transform_y_3"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_create_group_metric_set.TestProcessPredictions.test_smoke": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "fairlearn.metrics._group_metric_set._process_predictions",
    "isinstance",
    "len",
    "list",
    "test.unit.input_convertors.conversions_for_1d",
    "test.unit.metrics.test_create_group_metric_set.pytest",
    "transform_y_p"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_create_group_metric_set.TestProcessSensitiveFeatures": {
  "data": {
   "lineno": 56
  },
  "type": "class"
 },
 "test.unit.metrics.test_create_group_metric_set.TestProcessSensitiveFeatures.test_result_is_sorted": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "fairlearn.metrics._group_metric_set._process_sensitive_features",
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_create_group_metric_set.TestProcessSensitiveFeatures.test_smoke": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "fairlearn.metrics._group_metric_set._process_sensitive_features",
    "isinstance",
    "len",
    "list",
    "test.unit.input_convertors.conversions_for_1d",
    "test.unit.metrics.test_create_group_metric_set.pytest",
    "transform_feature"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_create_group_metric_set.TestProcessSensitiveFeatures.test_smoke_string_groups": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "fairlearn.metrics._group_metric_set._process_sensitive_features",
    "isinstance",
    "len",
    "list",
    "test.unit.input_convertors.conversions_for_1d",
    "test.unit.metrics.test_create_group_metric_set.pytest",
    "transform_feature"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_create_group_metric_set._BC_1P_1F": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "test.unit.metrics.test_create_group_metric_set._BC_2P_3F": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "test.unit.metrics.test_create_group_metric_set._create_group_metric_set": {
  "data": {
   "shadows": "fairlearn.metrics._group_metric_set._create_group_metric_set"
  },
  "type": "import"
 },
 "test.unit.metrics.test_create_group_metric_set._process_predictions": {
  "data": {
   "shadows": "fairlearn.metrics._group_metric_set._process_predictions"
  },
  "type": "import"
 },
 "test.unit.metrics.test_create_group_metric_set._process_sensitive_features": {
  "data": {
   "shadows": "fairlearn.metrics._group_metric_set._process_sensitive_features"
  },
  "type": "import"
 },
 "test.unit.metrics.test_create_group_metric_set.conversions_for_1d": {
  "data": {
   "shadows": "test.unit.input_convertors.conversions_for_1d"
  },
  "type": "import"
 },
 "test.unit.metrics.test_create_group_metric_set.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.metrics.test_create_group_metric_set.skm": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_create_group_metric_set.validate_dashboard_dictionary": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "len",
    "list",
    "max",
    "sorted"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_disparities": {
  "data": {},
  "type": "module"
 },
 "test.unit.metrics.test_disparities.MetricFrame": {
  "data": {
   "shadows": "fairlearn.metrics.MetricFrame"
  },
  "type": "import"
 },
 "test.unit.metrics.test_disparities._aggregate_methods": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "test.unit.metrics.test_disparities.demographic_parity_difference": {
  "data": {
   "shadows": "fairlearn.metrics.demographic_parity_difference"
  },
  "type": "import"
 },
 "test.unit.metrics.test_disparities.demographic_parity_ratio": {
  "data": {
   "shadows": "fairlearn.metrics.demographic_parity_ratio"
  },
  "type": "import"
 },
 "test.unit.metrics.test_disparities.equalized_odds_difference": {
  "data": {
   "shadows": "fairlearn.metrics.equalized_odds_difference"
  },
  "type": "import"
 },
 "test.unit.metrics.test_disparities.equalized_odds_ratio": {
  "data": {
   "shadows": "fairlearn.metrics.equalized_odds_ratio"
  },
  "type": "import"
 },
 "test.unit.metrics.test_disparities.false_positive_rate": {
  "data": {
   "shadows": "fairlearn.metrics.false_positive_rate"
  },
  "type": "import"
 },
 "test.unit.metrics.test_disparities.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.metrics.test_disparities.selection_rate": {
  "data": {
   "shadows": "fairlearn.metrics.selection_rate"
  },
  "type": "import"
 },
 "test.unit.metrics.test_disparities.test_demographic_parity_difference": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "fairlearn.metrics.demographic_parity_difference",
    "fairlearn.metrics.selection_rate",
    "test.unit.metrics.test_disparities._aggregate_methods",
    "test.unit.metrics.test_disparities.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_disparities.test_demographic_parity_difference_weighted": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "fairlearn.metrics.demographic_parity_difference",
    "fairlearn.metrics.selection_rate",
    "test.unit.metrics.test_disparities._aggregate_methods",
    "test.unit.metrics.test_disparities.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_disparities.test_demographic_parity_ratio": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "fairlearn.metrics.demographic_parity_ratio",
    "fairlearn.metrics.selection_rate",
    "test.unit.metrics.test_disparities._aggregate_methods",
    "test.unit.metrics.test_disparities.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_disparities.test_demographic_parity_ratio_weighted": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "fairlearn.metrics.demographic_parity_ratio",
    "fairlearn.metrics.selection_rate",
    "test.unit.metrics.test_disparities._aggregate_methods",
    "test.unit.metrics.test_disparities.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_disparities.test_equalized_odds_difference": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "fairlearn.metrics.equalized_odds_difference",
    "fairlearn.metrics.false_positive_rate",
    "fairlearn.metrics.true_positive_rate",
    "test.unit.metrics.test_disparities._aggregate_methods",
    "test.unit.metrics.test_disparities.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_disparities.test_equalized_odds_difference_weighted": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "fairlearn.metrics.equalized_odds_difference",
    "fairlearn.metrics.false_positive_rate",
    "fairlearn.metrics.true_positive_rate",
    "test.unit.metrics.test_disparities._aggregate_methods",
    "test.unit.metrics.test_disparities.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_disparities.test_equalized_odds_ratio": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "fairlearn.metrics.equalized_odds_ratio",
    "fairlearn.metrics.false_positive_rate",
    "fairlearn.metrics.true_positive_rate",
    "test.unit.metrics.test_disparities._aggregate_methods",
    "test.unit.metrics.test_disparities.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_disparities.test_equalized_odds_ratio_weighted": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "fairlearn.metrics.equalized_odds_ratio",
    "fairlearn.metrics.false_positive_rate",
    "fairlearn.metrics.true_positive_rate",
    "test.unit.metrics.test_disparities._aggregate_methods",
    "test.unit.metrics.test_disparities.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_disparities.true_positive_rate": {
  "data": {
   "shadows": "fairlearn.metrics.true_positive_rate"
  },
  "type": "import"
 },
 "test.unit.metrics.test_extra_metrics": {
  "data": {},
  "type": "module"
 },
 "test.unit.metrics.test_extra_metrics.TestFNR": {
  "data": {
   "lineno": 240
  },
  "type": "class"
 },
 "test.unit.metrics.test_extra_metrics.TestFNR.test_against_sklearn": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "fairlearn.metrics.false_negative_rate",
    "sklearn.metrics.recall_score",
    "test.unit.metrics.test_extra_metrics.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestFNR.test_against_sklearn_weighted": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "fairlearn.metrics.false_negative_rate",
    "sklearn.metrics.recall_score",
    "test.unit.metrics.test_extra_metrics.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestFNR.test_all_correct": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "fairlearn.metrics.false_negative_rate"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestFNR.test_none_correct": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "fairlearn.metrics.false_negative_rate"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestFNR.test_some_correct": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "fairlearn.metrics.false_negative_rate"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestFNR.test_some_correct_other_labels": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "fairlearn.metrics.false_negative_rate"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestFNR.test_with_false_positive": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "fairlearn.metrics.false_negative_rate"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestFPR": {
  "data": {
   "lineno": 311
  },
  "type": "class"
 },
 "test.unit.metrics.test_extra_metrics.TestFPR.test_against_sklearn": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "fairlearn.metrics.false_positive_rate",
    "sklearn.metrics.confusion_matrix"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestFPR.test_against_sklearn_weighted": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "fairlearn.metrics.false_positive_rate",
    "sklearn.metrics.confusion_matrix"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestFPR.test_all_correct": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "fairlearn.metrics.false_positive_rate"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestFPR.test_none_correct": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "fairlearn.metrics.false_positive_rate"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestFPR.test_some_correct": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "fairlearn.metrics.false_positive_rate",
    "test.unit.metrics.test_extra_metrics.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestGetLabelsForConfusionMatrix": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "test.unit.metrics.test_extra_metrics.TestGetLabelsForConfusionMatrix.test_need_pos_label": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics._extra_metrics._get_labels_for_confusion_matrix",
    "str",
    "test.unit.metrics.test_extra_metrics.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestGetLabelsForConfusionMatrix.test_pos_label_not_in_data": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics._extra_metrics._get_labels_for_confusion_matrix",
    "str",
    "test.unit.metrics.test_extra_metrics.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestGetLabelsForConfusionMatrix.test_single_value_alpha_pos_label": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "fairlearn.metrics._extra_metrics._get_labels_for_confusion_matrix",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestGetLabelsForConfusionMatrix.test_single_value_numeric_no_pos_label": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "fairlearn.metrics._extra_metrics._get_labels_for_confusion_matrix",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestGetLabelsForConfusionMatrix.test_single_value_numeric_pos_label": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "fairlearn.metrics._extra_metrics._get_labels_for_confusion_matrix",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestGetLabelsForConfusionMatrix.test_smoke": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "fairlearn.metrics._extra_metrics._get_labels_for_confusion_matrix",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestGetLabelsForConfusionMatrix.test_smoke_alpha_pos_label": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "fairlearn.metrics._extra_metrics._get_labels_for_confusion_matrix",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestGetLabelsForConfusionMatrix.test_smoke_numeric_pos_label": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "fairlearn.metrics._extra_metrics._get_labels_for_confusion_matrix",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestGetLabelsForConfusionMatrix.test_too_many_values": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics._extra_metrics._get_labels_for_confusion_matrix",
    "str",
    "test.unit.metrics.test_extra_metrics.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestSingleValueArrays": {
  "data": {
   "lineno": 364
  },
  "type": "class"
 },
 "test.unit.metrics.test_extra_metrics.TestSingleValueArrays.test_all_negative_ones": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "fairlearn.metrics.false_negative_rate",
    "fairlearn.metrics.false_positive_rate",
    "fairlearn.metrics.true_negative_rate",
    "fairlearn.metrics.true_positive_rate",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestSingleValueArrays.test_all_ones": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "fairlearn.metrics.false_negative_rate",
    "fairlearn.metrics.false_positive_rate",
    "fairlearn.metrics.true_negative_rate",
    "fairlearn.metrics.true_positive_rate",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestSingleValueArrays.test_all_zeros": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "fairlearn.metrics.false_negative_rate",
    "fairlearn.metrics.false_positive_rate",
    "fairlearn.metrics.true_negative_rate",
    "fairlearn.metrics.true_positive_rate",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestTNR": {
  "data": {
   "lineno": 162
  },
  "type": "class"
 },
 "test.unit.metrics.test_extra_metrics.TestTNR.test_against_sklearn": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "fairlearn.metrics.true_negative_rate",
    "sklearn.metrics.confusion_matrix"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestTNR.test_against_sklearn_weighted": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "fairlearn.metrics.true_negative_rate",
    "sklearn.metrics.confusion_matrix"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestTNR.test_all_correct": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "fairlearn.metrics.true_negative_rate"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestTNR.test_none_correct": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "fairlearn.metrics.true_negative_rate"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestTNR.test_some_correct": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "fairlearn.metrics.true_negative_rate"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestTNR.test_some_correct_other_labels": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "fairlearn.metrics.true_negative_rate"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestTNR.test_tnr_some_correct_with_false_negative": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "fairlearn.metrics.true_negative_rate"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestTPR": {
  "data": {
   "lineno": 86
  },
  "type": "class"
 },
 "test.unit.metrics.test_extra_metrics.TestTPR.test_against_sklearn": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "fairlearn.metrics.true_positive_rate",
    "sklearn.metrics.recall_score",
    "test.unit.metrics.test_extra_metrics.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestTPR.test_against_sklearn_weighted": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "fairlearn.metrics.true_positive_rate",
    "sklearn.metrics.recall_score",
    "test.unit.metrics.test_extra_metrics.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestTPR.test_all_correct": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "fairlearn.metrics.true_positive_rate"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestTPR.test_none_correct": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "fairlearn.metrics.true_positive_rate"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestTPR.test_some_correct": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "fairlearn.metrics.true_positive_rate"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.TestTPR.test_tpr_values_alpha": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "fairlearn.metrics.true_positive_rate",
    "sklearn.metrics.recall_score",
    "test.unit.metrics.test_extra_metrics.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics._get_labels_for_confusion_matrix": {
  "data": {
   "shadows": "fairlearn.metrics._extra_metrics._get_labels_for_confusion_matrix"
  },
  "type": "import"
 },
 "test.unit.metrics.test_extra_metrics.metrics": {
  "data": {
   "shadows": "fairlearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_extra_metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.metrics.test_extra_metrics.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.metrics.test_extra_metrics.skm": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_function_container": {
  "data": {},
  "type": "module"
 },
 "test.unit.metrics.test_function_container.FunctionContainer": {
  "data": {
   "shadows": "fairlearn.metrics._function_container.FunctionContainer"
  },
  "type": "import"
 },
 "test.unit.metrics.test_function_container.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "test.unit.metrics.test_function_container.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.metrics.test_function_container.recall_score": {
  "data": {
   "shadows": "sklearn.metrics.recall_score"
  },
  "type": "import"
 },
 "test.unit.metrics.test_function_container.test_constructor_named": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "fairlearn.metrics._function_container.FunctionContainer",
    "isinstance",
    "len",
    "numpy.array_equal",
    "numpy.ndarray",
    "sklearn.metrics.recall_score"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_function_container.test_constructor_no_name": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "fairlearn.metrics._function_container.FunctionContainer",
    "isinstance",
    "len",
    "numpy.array_equal",
    "numpy.ndarray",
    "sklearn.metrics.recall_score",
    "test.unit.metrics.test_function_container.functools"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_function_container.test_constructor_unnamed": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "fairlearn.metrics._function_container.FunctionContainer",
    "isinstance",
    "len",
    "numpy.array_equal",
    "numpy.ndarray",
    "sklearn.metrics.recall_score",
    "sklearn.metrics.recall_score.__name__"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_function_container.test_function_evaluation": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "fairlearn.metrics._function_container.FunctionContainer",
    "numpy.asarray",
    "sklearn.metrics.recall_score"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_function_container.test_function_evaluation_sample_param_none": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "fairlearn.metrics._function_container.FunctionContainer",
    "numpy.asarray",
    "sklearn.metrics.recall_score"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_function_container.test_generate_sample_params_for_mask": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "fairlearn.metrics._function_container.FunctionContainer",
    "isinstance",
    "len",
    "numpy.array_equal",
    "numpy.ndarray",
    "sklearn.metrics.recall_score"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_generated_metrics": {
  "data": {},
  "type": "module"
 },
 "test.unit.metrics.test_generated_metrics.derived_metric_results": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "test.unit.metrics.test_generated_metrics.metrics": {
  "data": {
   "shadows": "fairlearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_generated_metrics.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.metrics.test_generated_metrics.sf_binary": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "test.unit.metrics.test_generated_metrics.test_against_demographic_parity_difference": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "fairlearn.metrics.demographic_parity_difference",
    "fairlearn.metrics.selection_rate_difference",
    "test.unit.metrics.test_generated_metrics.pytest",
    "test.unit.metrics.test_generated_metrics.sf_binary",
    "test.unit.metrics.test_generated_metrics.y_pred",
    "test.unit.metrics.test_generated_metrics.y_true"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_generated_metrics.test_against_demographic_parity_ratio": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "fairlearn.metrics.demographic_parity_ratio",
    "fairlearn.metrics.selection_rate_ratio",
    "test.unit.metrics.test_generated_metrics.pytest",
    "test.unit.metrics.test_generated_metrics.sf_binary",
    "test.unit.metrics.test_generated_metrics.y_pred",
    "test.unit.metrics.test_generated_metrics.y_true"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_generated_metrics.test_dict_sizes": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "fairlearn.metrics._generated_metric_dict",
    "len"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_generated_metrics.test_generated_metrics_smoke": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "callable",
    "fairlearn.metrics",
    "func",
    "getattr",
    "test.unit.metrics.test_generated_metrics.derived_metric_results",
    "test.unit.metrics.test_generated_metrics.pytest",
    "test.unit.metrics.test_generated_metrics.sf_binary",
    "test.unit.metrics.test_generated_metrics.y_pred",
    "test.unit.metrics.test_generated_metrics.y_true"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_generated_metrics.y_pred": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "test.unit.metrics.test_generated_metrics.y_true": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "test.unit.metrics.test_group_feature": {
  "data": {},
  "type": "module"
 },
 "test.unit.metrics.test_group_feature.common_validations": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.array_equal",
    "test.unit.metrics.test_group_feature.expected_classes"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_feature.expected_classes": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "test.unit.metrics.test_group_feature.metrics": {
  "data": {
   "shadows": "fairlearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_group_feature.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.metrics.test_group_feature.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.metrics.test_group_feature.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.metrics.test_group_feature.raw_feature": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "test.unit.metrics.test_group_feature.test_Series_int_name": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics._group_feature.GroupFeature",
    "pandas.Series",
    "test.unit.metrics.test_group_feature.pytest",
    "test.unit.metrics.test_group_feature.raw_feature"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_feature.test_list": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "fairlearn.metrics._group_feature.GroupFeature",
    "test.unit.metrics.test_group_feature.common_validations",
    "test.unit.metrics.test_group_feature.raw_feature"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_feature.test_named_Series": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "fairlearn.metrics._group_feature.GroupFeature",
    "pandas.Series",
    "test.unit.metrics.test_group_feature.common_validations",
    "test.unit.metrics.test_group_feature.raw_feature"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_feature.test_named_Series_override_name": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "fairlearn.metrics._group_feature.GroupFeature",
    "pandas.Series",
    "test.unit.metrics.test_group_feature.common_validations",
    "test.unit.metrics.test_group_feature.raw_feature"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_feature.test_named_list": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "fairlearn.metrics._group_feature.GroupFeature",
    "test.unit.metrics.test_group_feature.common_validations",
    "test.unit.metrics.test_group_feature.raw_feature"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_feature.test_ndarray": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "fairlearn.metrics._group_feature.GroupFeature",
    "numpy.asarray",
    "test.unit.metrics.test_group_feature.common_validations",
    "test.unit.metrics.test_group_feature.raw_feature"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_feature.test_unnamed_Series": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "fairlearn.metrics._group_feature.GroupFeature",
    "pandas.Series",
    "test.unit.metrics.test_group_feature.common_validations",
    "test.unit.metrics.test_group_feature.raw_feature"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations": {
  "data": {},
  "type": "module"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArray1D": {
  "data": {
   "lineno": 52
  },
  "type": "class"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArray1D.test_2d_raises_exception": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d",
    "test.unit.metrics.test_input_manipulations.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArray1D.test_simple_list": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArray1D.test_simple_nested_list": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArray1D.test_simple_transposed_list": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArrayAndSqueeze": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArrayAndSqueeze.test_multi_columns": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArrayAndSqueeze.test_multi_rows": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArrayAndSqueeze.test_simple_list": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArrayAndSqueeze.test_single_element": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.fmim": {
  "data": {
   "shadows": "fairlearn.metrics._input_manipulations"
  },
  "type": "import"
 },
 "test.unit.metrics.test_input_manipulations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.metrics.test_input_manipulations.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.metrics.test_make_derived_metric": {
  "data": {
   "symbols_in_volume": [
    "len",
    "numpy.concatenate",
    "numpy.full",
    "test.unit.metrics.test_make_derived_metric.As",
    "test.unit.metrics.test_make_derived_metric.Bs",
    "test.unit.metrics.test_make_derived_metric.wgt_A",
    "test.unit.metrics.test_make_derived_metric.wgt_B",
    "test.unit.metrics.test_make_derived_metric.y_p_A",
    "test.unit.metrics.test_make_derived_metric.y_p_B",
    "test.unit.metrics.test_make_derived_metric.y_t_A",
    "test.unit.metrics.test_make_derived_metric.y_t_B"
   ]
  },
  "type": "module"
 },
 "test.unit.metrics.test_make_derived_metric.As": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "test.unit.metrics.test_make_derived_metric.Bs": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "test.unit.metrics.test_make_derived_metric.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "test.unit.metrics.test_make_derived_metric.gid": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "test.unit.metrics.test_make_derived_metric.metrics": {
  "data": {
   "shadows": "fairlearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_make_derived_metric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.metrics.test_make_derived_metric.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.metrics.test_make_derived_metric.skm": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_make_derived_metric.test_bad_transform_rejected": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics.make_derived_metric",
    "sklearn.metrics.accuracy_score",
    "test.unit.metrics.test_make_derived_metric.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_derived_difference_between_groups": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "fairlearn.metrics.make_derived_metric",
    "my_fn",
    "sklearn.metrics.accuracy_score",
    "test.unit.metrics.test_make_derived_metric.gid",
    "test.unit.metrics.test_make_derived_metric.y_p",
    "test.unit.metrics.test_make_derived_metric.y_t"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_derived_difference_both_arg_types": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "fairlearn.metrics.make_derived_metric",
    "my_fn",
    "sklearn.metrics.fbeta_score",
    "test.unit.metrics.test_make_derived_metric.functools",
    "test.unit.metrics.test_make_derived_metric.gid",
    "test.unit.metrics.test_make_derived_metric.wgt",
    "test.unit.metrics.test_make_derived_metric.y_p",
    "test.unit.metrics.test_make_derived_metric.y_t"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_derived_difference_both_arg_types_default_sample_param_names": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "fairlearn.metrics.make_derived_metric",
    "my_fn",
    "sklearn.metrics.fbeta_score",
    "test.unit.metrics.test_make_derived_metric.functools",
    "test.unit.metrics.test_make_derived_metric.gid",
    "test.unit.metrics.test_make_derived_metric.wgt",
    "test.unit.metrics.test_make_derived_metric.y_p",
    "test.unit.metrics.test_make_derived_metric.y_t"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_derived_difference_broadcast_arg": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "fairlearn.metrics.make_derived_metric",
    "my_fn",
    "sklearn.metrics.fbeta_score",
    "test.unit.metrics.test_make_derived_metric.functools",
    "test.unit.metrics.test_make_derived_metric.gid",
    "test.unit.metrics.test_make_derived_metric.y_p",
    "test.unit.metrics.test_make_derived_metric.y_t"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_derived_difference_default_is_between_groups": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "fairlearn.metrics.make_derived_metric",
    "my_fn",
    "sklearn.metrics.accuracy_score",
    "test.unit.metrics.test_make_derived_metric.gid",
    "test.unit.metrics.test_make_derived_metric.y_p",
    "test.unit.metrics.test_make_derived_metric.y_t"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_derived_difference_sample_arg": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "fairlearn.metrics.make_derived_metric",
    "my_fn",
    "sklearn.metrics.fbeta_score",
    "test.unit.metrics.test_make_derived_metric.functools",
    "test.unit.metrics.test_make_derived_metric.gid",
    "test.unit.metrics.test_make_derived_metric.wgt",
    "test.unit.metrics.test_make_derived_metric.y_p",
    "test.unit.metrics.test_make_derived_metric.y_t"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_derived_difference_to_overall": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "fairlearn.metrics.make_derived_metric",
    "my_fn",
    "sklearn.metrics.accuracy_score",
    "test.unit.metrics.test_make_derived_metric.gid",
    "test.unit.metrics.test_make_derived_metric.y_p",
    "test.unit.metrics.test_make_derived_metric.y_t"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_derived_ratio_between_groups": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "fairlearn.metrics.make_derived_metric",
    "my_fn",
    "sklearn.metrics.precision_score",
    "test.unit.metrics.test_make_derived_metric.gid",
    "test.unit.metrics.test_make_derived_metric.y_p",
    "test.unit.metrics.test_make_derived_metric.y_t"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_derived_ratio_default_is_between_groups": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "fairlearn.metrics.make_derived_metric",
    "my_fn",
    "sklearn.metrics.precision_score",
    "test.unit.metrics.test_make_derived_metric.gid",
    "test.unit.metrics.test_make_derived_metric.y_p",
    "test.unit.metrics.test_make_derived_metric.y_t"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_derived_ratio_to_overall": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "fairlearn.metrics.make_derived_metric",
    "my_fn",
    "sklearn.metrics.precision_score",
    "test.unit.metrics.test_make_derived_metric.gid",
    "test.unit.metrics.test_make_derived_metric.y_p",
    "test.unit.metrics.test_make_derived_metric.y_t"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_function_method_arg_rejected": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics.make_derived_metric",
    "test.unit.metrics.test_make_derived_metric.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_function_method_arg_rejected.bad_fn": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "print",
    "sklearn.metrics.accuracy_score",
    "test.unit.metrics.test_make_derived_metric.y_p",
    "test.unit.metrics.test_make_derived_metric.y_t"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_group_max": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "fairlearn.metrics.make_derived_metric",
    "my_fn",
    "sklearn.metrics.precision_score",
    "test.unit.metrics.test_make_derived_metric.gid",
    "test.unit.metrics.test_make_derived_metric.y_p",
    "test.unit.metrics.test_make_derived_metric.y_t"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_group_min": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "fairlearn.metrics.make_derived_metric",
    "my_fn",
    "sklearn.metrics.precision_score",
    "test.unit.metrics.test_make_derived_metric.gid",
    "test.unit.metrics.test_make_derived_metric.y_p",
    "test.unit.metrics.test_make_derived_metric.y_t"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.test_noncallable_rejected": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics.make_derived_metric",
    "test.unit.metrics.test_make_derived_metric.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_make_derived_metric.wgt": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "test.unit.metrics.test_make_derived_metric.wgt_A": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "test.unit.metrics.test_make_derived_metric.wgt_B": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "test.unit.metrics.test_make_derived_metric.y_p": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "test.unit.metrics.test_make_derived_metric.y_p_A": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "test.unit.metrics.test_make_derived_metric.y_p_B": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "test.unit.metrics.test_make_derived_metric.y_t": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "test.unit.metrics.test_make_derived_metric.y_t_A": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "test.unit.metrics.test_make_derived_metric.y_t_B": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "test.unit.metrics.test_mean_predictions": {
  "data": {},
  "type": "module"
 },
 "test.unit.metrics.test_mean_predictions.metrics": {
  "data": {
   "shadows": "fairlearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_overprediction_unweighted": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "fairlearn.metrics._mean_overprediction"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_overprediction_unweighted_single": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "fairlearn.metrics._mean_overprediction"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_overprediction_weighted": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "fairlearn.metrics._mean_overprediction"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_overprediction_weighted_single": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "fairlearn.metrics._mean_overprediction"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_prediction_single": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "fairlearn.metrics.mean_prediction"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_prediction_unweighted": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "fairlearn.metrics.mean_prediction"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_prediction_weighted": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "fairlearn.metrics.mean_prediction"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_prediction_weighted_single": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "fairlearn.metrics.mean_prediction"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_underprediction_unweighted": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "fairlearn.metrics._mean_underprediction"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_underprediction_unweighted_single": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "fairlearn.metrics._mean_underprediction"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_underprediction_weighted": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "fairlearn.metrics._mean_underprediction"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_underprediction_weighted_single": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "fairlearn.metrics._mean_underprediction"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates": {
  "data": {
   "symbols_in_volume": [
    "sklearn.metrics.accuracy_score",
    "sklearn.metrics.balanced_accuracy_score",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score"
   ]
  },
  "type": "module"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sf": {
  "data": {
   "lineno": 306
  },
  "type": "class"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sf._prepare": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "isinstance",
    "list",
    "metric_fn",
    "metric_fn.__name__",
    "numpy.logical_and",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sf.test_difference_between_groups": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "max",
    "metric_fn",
    "min",
    "pandas.Series",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sf.test_difference_to_overall": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "abs",
    "isinstance",
    "len",
    "max",
    "metric_fn",
    "pandas.Series",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sf.test_max": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "max",
    "metric_fn",
    "pandas.Series",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sf.test_min": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "metric_fn",
    "min",
    "pandas.Series",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sf.test_ratio_between_groups": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "max",
    "metric_fn",
    "min",
    "pandas.Series",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sf.test_ratio_to_overall": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "metric_fn",
    "min",
    "pandas.Series",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sfFnDict": {
  "data": {
   "lineno": 412
  },
  "type": "class"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sfFnDict._prepare": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "isinstance",
    "list",
    "metric_fn",
    "numpy.logical_and",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sfFnDict.test_difference_between_groups": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "isinstance",
    "max",
    "metric_fn",
    "min",
    "pandas.DataFrame",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sfFnDict.test_difference_to_overall": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "abs",
    "isinstance",
    "max",
    "metric_fn",
    "pandas.DataFrame",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sfFnDict.test_max": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "isinstance",
    "max",
    "metric_fn",
    "pandas.DataFrame",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sfFnDict.test_min": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "isinstance",
    "metric_fn",
    "min",
    "pandas.DataFrame",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sfFnDict.test_ratio_between_groups": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "isinstance",
    "max",
    "metric_fn",
    "min",
    "pandas.DataFrame",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1cf1sfFnDict.test_ratio_to_overall": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "isinstance",
    "metric_fn",
    "min",
    "pandas.DataFrame",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cf": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cf._prepare": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "isinstance",
    "list",
    "metric_fn",
    "metric_fn.__name__"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cf.test_difference_between_groups": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "abs",
    "float",
    "isinstance",
    "metric_fn",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cf.test_difference_defaults_to_between_groups": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "abs",
    "float",
    "isinstance",
    "metric_fn",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cf.test_difference_to_overall": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "abs",
    "float",
    "isinstance",
    "max",
    "metric_fn",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cf.test_max": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "max",
    "metric_fn",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cf.test_min": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "metric_fn",
    "min",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cf.test_ratio_between_groups": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "max",
    "metric_fn",
    "min",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cf.test_ratio_defaults_to_between_groups": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "max",
    "metric_fn",
    "min",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cf.test_ratio_to_overall": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "metric_fn",
    "min",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cfFnDict": {
  "data": {
   "lineno": 116
  },
  "type": "class"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cfFnDict._prepare": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "isinstance",
    "list",
    "metric_fn"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cfFnDict.test_difference_between_groups": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "abs",
    "isinstance",
    "len",
    "metric_fn",
    "pandas.Series",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cfFnDict.test_difference_defaults_to_between_groups": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "abs",
    "isinstance",
    "len",
    "metric_fn",
    "pandas.Series",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cfFnDict.test_difference_to_overall": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "abs",
    "isinstance",
    "len",
    "max",
    "metric_fn",
    "pandas.Series",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cfFnDict.test_max": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "max",
    "metric_fn",
    "pandas.Series",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cfFnDict.test_min": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "metric_fn",
    "min",
    "pandas.Series",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cfFnDict.test_ratio_between_groups": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "max",
    "metric_fn",
    "min",
    "pandas.Series",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cfFnDict.test_ratio_defaults_to_between_groups": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "max",
    "metric_fn",
    "min",
    "pandas.Series",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf0cfFnDict.test_ratio_to_overall": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "metric_fn",
    "min",
    "pandas.Series",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cf": {
  "data": {
   "lineno": 517
  },
  "type": "class"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cf._prepare": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "isinstance",
    "list",
    "metric_fn",
    "metric_fn.__name__",
    "numpy.logical_and",
    "numpy.stack",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cf.test_difference_between_groups": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "max",
    "metric_fn",
    "min",
    "pandas.Series",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cf.test_difference_to_overall": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "abs",
    "isinstance",
    "len",
    "max",
    "metric_fn",
    "pandas.Series",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cf.test_max": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "max",
    "metric_fn",
    "pandas.Series",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cf.test_min": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "metric_fn",
    "min",
    "pandas.Series",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cf.test_ratio_between_groups": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "max",
    "metric_fn",
    "min",
    "pandas.Series",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cf.test_ratio_to_overall": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "metric_fn",
    "min",
    "pandas.Series",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cfFnDict": {
  "data": {
   "lineno": 665
  },
  "type": "class"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cfFnDict._prepare": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "isinstance",
    "list",
    "metric_fn",
    "numpy.logical_and",
    "numpy.stack",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cfFnDict.test_difference_between_groups": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "isinstance",
    "max",
    "metric_fn",
    "min",
    "pandas.DataFrame",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cfFnDict.test_difference_to_overall": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "abs",
    "isinstance",
    "max",
    "metric_fn",
    "pandas.DataFrame",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cfFnDict.test_max": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "isinstance",
    "max",
    "metric_fn",
    "pandas.DataFrame",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cfFnDict.test_min": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "isinstance",
    "metric_fn",
    "min",
    "pandas.DataFrame",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cfFnDict.test_ratio_between_groups": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "isinstance",
    "max",
    "metric_fn",
    "min",
    "pandas.DataFrame",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test1m1sf2cfFnDict.test_ratio_to_overall": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "isinstance",
    "metric_fn",
    "min",
    "pandas.DataFrame",
    "test.unit.metrics.test_metricframe_aggregates.metric",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf0cf": {
  "data": {
   "lineno": 219
  },
  "type": "class"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf0cf._prepare": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "isinstance",
    "list",
    "pandas.Series",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf0cf.test_difference_between_groups": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "abs",
    "isinstance",
    "len",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf0cf.test_difference_to_overall": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "abs",
    "isinstance",
    "len",
    "max",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf0cf.test_max": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "isinstance",
    "max",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf0cf.test_min": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "min",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf0cf.test_ratio_between_groups": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "max",
    "min",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf0cf.test_ratio_to_overall": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "min",
    "pandas.Series",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf1cf": {
  "data": {
   "lineno": 812
  },
  "type": "class"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf1cf._prepare": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "isinstance",
    "list",
    "numpy.logical_and",
    "pandas.DataFrame",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf1cf.test_difference_between_groups": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": [
    "isinstance",
    "max",
    "min",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf1cf.test_difference_to_overall": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "abs",
    "isinstance",
    "max",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf1cf.test_max": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "isinstance",
    "max",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf1cf.test_min": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "isinstance",
    "min",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf1cf.test_ratio_between_groups": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "isinstance",
    "max",
    "min",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.Test2m1sf1cf.test_ratio_to_overall": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "isinstance",
    "min",
    "pandas.DataFrame",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_aggregates.metric": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "test.unit.metrics.test_metricframe_aggregates.metrics": {
  "data": {
   "shadows": "fairlearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_aggregates.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_aggregates.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_aggregates.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_aggregates.skm": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_aggregates.test_2m_1sf_2cf": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "abs",
    "fairlearn.metrics.MetricFrame",
    "isinstance",
    "list",
    "max",
    "metric_fn",
    "min",
    "numpy.logical_and",
    "pandas.DataFrame",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score",
    "test.unit.metrics.test_metricframe_aggregates.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_by_group": {
  "data": {
   "symbols_in_volume": [
    "sklearn.metrics.accuracy_score",
    "sklearn.metrics.balanced_accuracy_score",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score"
   ]
  },
  "type": "module"
 },
 "test.unit.metrics.test_metricframe_by_group.MetricFrame": {
  "data": {
   "shadows": "fairlearn.metrics.MetricFrame"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_by_group.metric": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "test.unit.metrics.test_metricframe_by_group.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_by_group.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_by_group.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_by_group.skm": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_by_group.test_1m_1sf_0cf": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "isinstance",
    "len",
    "metric_fn",
    "numpy.array_equal",
    "pandas.Series",
    "test.unit.metrics.test_metricframe_by_group.metric",
    "test.unit.metrics.test_metricframe_by_group.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_by_group.test_1m_1sf_0cf_metric_dict": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "isinstance",
    "metric_fn",
    "metric_fn.__name__",
    "numpy.array_equal",
    "pandas.DataFrame",
    "test.unit.metrics.test_metricframe_by_group.metric",
    "test.unit.metrics.test_metricframe_by_group.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_by_group.test_1m_1sf_1cf": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "isinstance",
    "len",
    "metric_fn",
    "numpy.array_equal",
    "numpy.logical_and",
    "pandas.Series",
    "test.unit.metrics.test_metricframe_by_group.metric",
    "test.unit.metrics.test_metricframe_by_group.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_by_group.test_1m_1sf_1cf_metric_dict": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "isinstance",
    "metric_fn",
    "metric_fn.__name__",
    "numpy.array_equal",
    "numpy.logical_and",
    "pandas.DataFrame",
    "test.unit.metrics.test_metricframe_by_group.metric",
    "test.unit.metrics.test_metricframe_by_group.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_by_group.test_2m_2sf_2cf": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "isinstance",
    "numpy.array_equal",
    "numpy.logical_and",
    "numpy.stack",
    "pandas.DataFrame",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_comprehensive": {
  "data": {},
  "type": "module"
 },
 "test.unit.metrics.test_metricframe_comprehensive.metrics": {
  "data": {
   "shadows": "fairlearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_comprehensive.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_comprehensive.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_comprehensive.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_comprehensive.skm": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_comprehensive.test_3m_2sf_2cf": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "abs",
    "array_gen",
    "f",
    "fairlearn.metrics.MetricFrame",
    "isinstance",
    "len",
    "list",
    "max",
    "min",
    "numpy.logical_and",
    "numpy.random.default_rng",
    "numpy.stack",
    "numpy.unique",
    "pandas.DataFrame",
    "sklearn.metrics.accuracy_score",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score",
    "sum",
    "test.unit.metrics.test_metricframe_comprehensive.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_feature_indexing": {
  "data": {
   "symbols_in_volume": [
    "fairlearn.metrics._group_feature.GroupFeature"
   ]
  },
  "type": "module"
 },
 "test.unit.metrics.test_metricframe_feature_indexing.TestSingleFeatureIndexing": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "test.unit.metrics.test_metricframe_feature_indexing.TestSingleFeatureIndexing.test_mask_from_tuple_0": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "_get_raw_MetricFrame",
    "numpy.array_equal",
    "test.unit.metrics.test_metricframe_feature_indexing.gf0"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_feature_indexing.TestTwoFeatureIndexing": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "test.unit.metrics.test_metricframe_feature_indexing.TestTwoFeatureIndexing.test_mask_from_tuple": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "_get_raw_MetricFrame",
    "numpy.array_equal",
    "test.unit.metrics.test_metricframe_feature_indexing.gf0",
    "test.unit.metrics.test_metricframe_feature_indexing.gf1"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_feature_indexing.gf0": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "test.unit.metrics.test_metricframe_feature_indexing.gf1": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "test.unit.metrics.test_metricframe_feature_indexing.metrics": {
  "data": {
   "shadows": "fairlearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_feature_indexing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_missing": {
  "data": {
   "symbols_in_volume": [
    "group_gen",
    "int",
    "len",
    "numpy.asarray",
    "range",
    "sklearn.metrics.accuracy_score",
    "sklearn.metrics.balanced_accuracy_score",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score",
    "test.unit.metrics.test_metricframe_missing.n"
   ]
  },
  "type": "module"
 },
 "test.unit.metrics.test_metricframe_missing.g_A": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "test.unit.metrics.test_metricframe_missing.g_B": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "test.unit.metrics.test_metricframe_missing.metric": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "test.unit.metrics.test_metricframe_missing.metrics": {
  "data": {
   "shadows": "fairlearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_missing.n": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "test.unit.metrics.test_metricframe_missing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_missing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_missing.skm": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_missing.test_missing_conditional_feature_combinations": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "abs",
    "dict",
    "fairlearn.metrics.MetricFrame",
    "max",
    "metric_fn",
    "min",
    "numpy.isnan",
    "numpy.logical_and",
    "numpy.stack",
    "numpy.unique",
    "sum",
    "test.unit.metrics.test_metricframe_missing.g_A",
    "test.unit.metrics.test_metricframe_missing.g_B",
    "test.unit.metrics.test_metricframe_missing.metric",
    "test.unit.metrics.test_metricframe_missing.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_missing.test_missing_sensitive_feature_combinations": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "abs",
    "fairlearn.metrics.MetricFrame",
    "len",
    "max",
    "metric_fn",
    "min",
    "numpy.isnan",
    "numpy.logical_and",
    "numpy.stack",
    "sum",
    "test.unit.metrics.test_metricframe_missing.g_A",
    "test.unit.metrics.test_metricframe_missing.g_B",
    "test.unit.metrics.test_metricframe_missing.metric",
    "test.unit.metrics.test_metricframe_missing.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_multiclass": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "test.unit.metrics.test_metricframe_multiclass.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_multiclass.metrics": {
  "data": {
   "shadows": "fairlearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_multiclass.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_multiclass.s_f": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "test.unit.metrics.test_metricframe_multiclass.skm": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_multiclass.test_roc_auc": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "numpy.unique",
    "ras",
    "sklearn.metrics.roc_auc_score",
    "test.unit.metrics.test_metricframe_multiclass.functools",
    "test.unit.metrics.test_metricframe_multiclass.s_f",
    "test.unit.metrics.test_metricframe_multiclass.y_pred",
    "test.unit.metrics.test_metricframe_multiclass.y_true"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_multiclass.y_pred": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "test.unit.metrics.test_metricframe_multiclass.y_true": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "test.unit.metrics.test_metricframe_nonscalar": {
  "data": {},
  "type": "module"
 },
 "test.unit.metrics.test_metricframe_nonscalar.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_nonscalar.metrics": {
  "data": {
   "shadows": "fairlearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_nonscalar.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_nonscalar.skm": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_nonscalar.test_1m_1sf_0cf": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "numpy.array_equal",
    "numpy.unique",
    "sklearn.metrics.confusion_matrix"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_nonscalar.test_1m_1sf_1cf": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "numpy.array_equal",
    "numpy.logical_and",
    "numpy.unique",
    "sklearn.metrics.confusion_matrix"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_nonscalar.test_mixed_metrics": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "numpy.array_equal",
    "numpy.unique",
    "sklearn.metrics.confusion_matrix",
    "sklearn.metrics.precision_score"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_nonscalar.test_multid_input_output": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "len",
    "numpy.array_equal",
    "numpy.random.rand",
    "numpy.unique",
    "sklearn.metrics.r2_score",
    "test.unit.metrics.test_metricframe_nonscalar.functools"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_overall": {
  "data": {
   "symbols_in_volume": [
    "sklearn.metrics.accuracy_score",
    "sklearn.metrics.balanced_accuracy_score",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score"
   ]
  },
  "type": "module"
 },
 "test.unit.metrics.test_metricframe_overall.MetricFrame": {
  "data": {
   "shadows": "fairlearn.metrics.MetricFrame"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_overall.metric": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "test.unit.metrics.test_metricframe_overall.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_overall.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_overall.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_overall.skm": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_overall.test_1m_0cf": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "float",
    "isinstance",
    "metric_fn",
    "test.unit.metrics.test_metricframe_overall.metric",
    "test.unit.metrics.test_metricframe_overall.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_overall.test_1m_0cf_metric_dict": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "isinstance",
    "len",
    "metric_fn",
    "metric_fn.__name__",
    "pandas.Series",
    "test.unit.metrics.test_metricframe_overall.metric",
    "test.unit.metrics.test_metricframe_overall.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_overall.test_1m_0cf_wgt": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "float",
    "isinstance",
    "metric_fn",
    "test.unit.metrics.test_metricframe_overall.metric",
    "test.unit.metrics.test_metricframe_overall.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_overall.test_1m_0cf_wgt_metric_dict": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "isinstance",
    "len",
    "metric_fn",
    "metric_fn.__name__",
    "pandas.Series",
    "test.unit.metrics.test_metricframe_overall.metric",
    "test.unit.metrics.test_metricframe_overall.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_overall.test_1m_1cf": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "isinstance",
    "len",
    "metric_fn",
    "pandas.Series",
    "test.unit.metrics.test_metricframe_overall.metric",
    "test.unit.metrics.test_metricframe_overall.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_overall.test_1m_1cf_metric_dict": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "isinstance",
    "metric_fn",
    "metric_fn.__name__",
    "numpy.array_equal",
    "pandas.DataFrame",
    "test.unit.metrics.test_metricframe_overall.metric",
    "test.unit.metrics.test_metricframe_overall.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_overall.test_1m_1cf_wgt": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "isinstance",
    "len",
    "pandas.Series",
    "sklearn.metrics.recall_score"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_overall.test_1m_1cf_wgt_metric_dict": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "isinstance",
    "numpy.array_equal",
    "pandas.DataFrame",
    "sklearn.metrics.recall_score"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_overall.test_1m_2cf": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "isinstance",
    "len",
    "numpy.array_equal",
    "numpy.logical_and",
    "numpy.stack",
    "pandas.Series",
    "sklearn.metrics.recall_score"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_overall.test_1m_2cf_metric_dict": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "isinstance",
    "numpy.array_equal",
    "numpy.logical_and",
    "numpy.stack",
    "pandas.DataFrame",
    "sklearn.metrics.recall_score"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_overall.test_2m_0cf": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "isinstance",
    "len",
    "pandas.Series",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_overall.test_2m_2cf": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "isinstance",
    "numpy.logical_and",
    "numpy.stack",
    "pandas.DataFrame",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features": {
  "data": {},
  "type": "module"
 },
 "test.unit.metrics.test_metricframe_process_features.TestSingleFeature": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "test.unit.metrics.test_metricframe_process_features.TestSingleFeature._common_validations": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "fairlearn.metrics._group_feature.GroupFeature",
    "isinstance",
    "len",
    "list",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestSingleFeature._get_raw_data": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestSingleFeature.test_1d_array": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "_get_raw_MetricFrame",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestSingleFeature.test_single_column_dataframe": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "_get_raw_MetricFrame",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestSingleFeature.test_single_column_dataframe_integer_name": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ValueError",
    "_get_raw_MetricFrame",
    "pandas.DataFrame",
    "test.unit.metrics.test_metricframe_process_features.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestSingleFeature.test_single_column_dataframe_unnamed": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "_get_raw_MetricFrame",
    "pandas.DataFrame",
    "test.unit.metrics.test_metricframe_process_features.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestSingleFeature.test_single_dict": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "_get_raw_MetricFrame"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestSingleFeature.test_single_list": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "_get_raw_MetricFrame"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestSingleFeature.test_single_series": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "_get_raw_MetricFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestSingleFeature.test_single_series_integer_name": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "_get_raw_MetricFrame",
    "pandas.Series",
    "test.unit.metrics.test_metricframe_process_features.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestTwoFeatures": {
  "data": {
   "lineno": 94
  },
  "type": "class"
 },
 "test.unit.metrics.test_metricframe_process_features.TestTwoFeatures._common_validations": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "fairlearn.metrics._group_feature.GroupFeature",
    "isinstance",
    "len",
    "list",
    "numpy.array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestTwoFeatures._get_raw_data": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestTwoFeatures.test_2d_array": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "_get_raw_MetricFrame",
    "numpy.asarray",
    "numpy.object"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestTwoFeatures.test_dictionary": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "_get_raw_MetricFrame"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestTwoFeatures.test_list_of_series": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "ValueError",
    "_get_raw_MetricFrame",
    "pandas.Series",
    "test.unit.metrics.test_metricframe_process_features.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestTwoFeatures.test_named_dataframe": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "_get_raw_MetricFrame",
    "pandas.DataFrame",
    "zip"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestTwoFeatures.test_nested_list": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "ValueError",
    "_get_raw_MetricFrame",
    "test.unit.metrics.test_metricframe_process_features.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.TestTwoFeatures.test_unnamed_dataframe": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ValueError",
    "_get_raw_MetricFrame",
    "pandas.DataFrame",
    "test.unit.metrics.test_metricframe_process_features.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_process_features.metrics": {
  "data": {
   "shadows": "fairlearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_process_features.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_process_features.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_process_features.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_smoke": {
  "data": {},
  "type": "module"
 },
 "test.unit.metrics.test_metricframe_smoke.conversions_for_1d": {
  "data": {
   "shadows": "test.unit.input_convertors.conversions_for_1d"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_smoke.metrics": {
  "data": {
   "shadows": "fairlearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_smoke.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_smoke.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_smoke.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_smoke.skm": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metricframe_smoke.test_1m_1sf_1cf": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "isinstance",
    "len",
    "list",
    "max",
    "min",
    "numpy.logical_and",
    "pandas.Series",
    "sklearn.metrics.recall_score",
    "test.unit.input_convertors.conversions_for_1d",
    "test.unit.metrics.test_metricframe_smoke.pytest",
    "transform_y_p",
    "transform_y_t"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_smoke.test_1m_1sf_1cf_metric_dict": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "isinstance",
    "list",
    "max",
    "min",
    "numpy.logical_and",
    "pandas.DataFrame",
    "sklearn.metrics.recall_score",
    "test.unit.input_convertors.conversions_for_1d",
    "test.unit.metrics.test_metricframe_smoke.pytest",
    "transform_y_p",
    "transform_y_t"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_smoke.test_basic": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "float",
    "isinstance",
    "len",
    "list",
    "max",
    "min",
    "numpy.array_equal",
    "pandas.DataFrame",
    "pandas.Series",
    "sklearn.metrics.recall_score",
    "test.unit.input_convertors.conversions_for_1d",
    "test.unit.metrics.test_metricframe_smoke.pytest",
    "transform_y_p",
    "transform_y_t"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_smoke.test_basic_metric_dict": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "isinstance",
    "len",
    "list",
    "max",
    "min",
    "numpy.array_equal",
    "pandas.DataFrame",
    "pandas.Series",
    "sklearn.metrics.recall_score",
    "test.unit.input_convertors.conversions_for_1d",
    "test.unit.metrics.test_metricframe_smoke.pytest",
    "transform_y_p",
    "transform_y_t"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_smoke.test_duplicate_cf_names": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics.MetricFrame",
    "numpy.stack",
    "pandas.DataFrame",
    "sklearn.metrics.recall_score",
    "test.unit.metrics.test_metricframe_smoke.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_smoke.test_duplicate_cf_sf_names": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics.MetricFrame",
    "numpy.stack",
    "pandas.DataFrame",
    "sklearn.metrics.recall_score",
    "test.unit.metrics.test_metricframe_smoke.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_smoke.test_duplicate_sf_names": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics.MetricFrame",
    "numpy.stack",
    "pandas.DataFrame",
    "sklearn.metrics.recall_score",
    "test.unit.metrics.test_metricframe_smoke.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metricframe_smoke.test_single_element_lists": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "sklearn.metrics.balanced_accuracy_score"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_selection_rate": {
  "data": {},
  "type": "module"
 },
 "test.unit.metrics.test_selection_rate._EMPTY_INPUT_PREDICTIONS_ERROR_MESSAGE": {
  "data": {
   "shadows": "fairlearn.metrics._selection_rate._EMPTY_INPUT_PREDICTIONS_ERROR_MESSAGE"
  },
  "type": "import"
 },
 "test.unit.metrics.test_selection_rate.metrics": {
  "data": {
   "shadows": "fairlearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_selection_rate.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.metrics.test_selection_rate.test_selection_rate_empty": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics._selection_rate._EMPTY_INPUT_PREDICTIONS_ERROR_MESSAGE",
    "fairlearn.metrics.selection_rate",
    "test.unit.metrics.test_selection_rate.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_selection_rate.test_selection_rate_non_numeric": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "fairlearn.metrics.selection_rate"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_selection_rate.test_selection_rate_single_element": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "fairlearn.metrics.selection_rate"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_selection_rate.test_selection_rate_unweighted": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "fairlearn.metrics.selection_rate"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_selection_rate.test_selection_rate_weighted": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "fairlearn.metrics.selection_rate"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.utils": {
  "data": {},
  "type": "module"
 },
 "test.unit.metrics.utils._get_raw_MetricFrame": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "fairlearn.metrics.MetricFrame.__new__"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.utils.metrics": {
  "data": {
   "shadows": "fairlearn.metrics"
  },
  "type": "import"
 },
 "test.unit.postprocessing": {
  "data": {},
  "type": "module"
 },
 "test.unit.postprocessing.conftest": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple",
    "int",
    "numpy.array",
    "numpy.hstack",
    "numpy.stack",
    "test.unit.input_convertors.ensure_dataframe",
    "test.unit.input_convertors.ensure_list_1d",
    "test.unit.input_convertors.ensure_ndarray",
    "test.unit.input_convertors.ensure_ndarray_2d",
    "test.unit.input_convertors.ensure_series",
    "test.unit.postprocessing.conftest.X_ex",
    "test.unit.postprocessing.conftest._data",
    "test.unit.postprocessing.conftest.labels_ex",
    "test.unit.postprocessing.conftest.scores_ex",
    "test.unit.postprocessing.conftest.sensitive_feature_names_ex1",
    "test.unit.postprocessing.conftest.sensitive_feature_names_ex2",
    "test.unit.postprocessing.conftest.sensitive_feature_names_ex3",
    "test.unit.postprocessing.conftest.sensitive_features_ex1",
    "test.unit.postprocessing.conftest.sensitive_features_ex2",
    "test.unit.postprocessing.conftest.sensitive_features_ex3"
   ]
  },
  "type": "module"
 },
 "test.unit.postprocessing.conftest.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "test.unit.postprocessing.conftest.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "test.unit.postprocessing.conftest.ExampleNotEstimator1": {
  "data": {
   "lineno": 121
  },
  "type": "class"
 },
 "test.unit.postprocessing.conftest.ExampleNotEstimator1.fit": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "test.unit.postprocessing.conftest.ExampleNotEstimator2": {
  "data": {
   "lineno": 126
  },
  "type": "class"
 },
 "test.unit.postprocessing.conftest.ExampleNotEstimator2.predict": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "test.unit.postprocessing.conftest.ExampleNotPredictor": {
  "data": {
   "lineno": 117
  },
  "type": "class"
 },
 "test.unit.postprocessing.conftest.ExamplePredictor": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "test.unit.postprocessing.conftest.ExamplePredictor.__init__": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "test.unit.postprocessing.conftest.ExamplePredictor.fit": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "test.unit.postprocessing.conftest.ExamplePredictor.predict": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "test.unit.postprocessing.conftest.LABEL_KEY": {
  "data": {
   "shadows": "fairlearn.postprocessing._constants.LABEL_KEY"
  },
  "type": "import"
 },
 "test.unit.postprocessing.conftest.LabelAndPrediction": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "test.unit.postprocessing.conftest.SCORE_KEY": {
  "data": {
   "shadows": "fairlearn.postprocessing._constants.SCORE_KEY"
  },
  "type": "import"
 },
 "test.unit.postprocessing.conftest.SENSITIVE_FEATURE_KEY": {
  "data": {
   "shadows": "fairlearn.postprocessing._constants.SENSITIVE_FEATURE_KEY"
  },
  "type": "import"
 },
 "test.unit.postprocessing.conftest.ThresholdOperation": {
  "data": {
   "shadows": "fairlearn.postprocessing._threshold_operation.ThresholdOperation"
  },
  "type": "import"
 },
 "test.unit.postprocessing.conftest.X_ex": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "test.unit.postprocessing.conftest._data": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "test.unit.postprocessing.conftest._data_ex1": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "test.unit.postprocessing.conftest._data_ex2": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "test.unit.postprocessing.conftest._data_ex3": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "test.unit.postprocessing.conftest._get_grouped_data_and_base_points": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "fairlearn.postprocessing._constants.LABEL_KEY",
    "fairlearn.postprocessing._constants.SCORE_KEY",
    "fairlearn.postprocessing._constants.SENSITIVE_FEATURE_KEY",
    "fairlearn.postprocessing._threshold_operation.ThresholdOperation",
    "numpy.inf",
    "numpy.linspace",
    "pandas.DataFrame",
    "test.unit.postprocessing.conftest.data",
    "test.unit.postprocessing.conftest.labels_ex",
    "test.unit.postprocessing.conftest.scores_ex",
    "test.unit.postprocessing.conftest.sensitive_features_ex1"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.conftest._get_predictions_by_sensitive_feature": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "adjusted_predictor",
    "collections.defaultdict",
    "len",
    "list",
    "range",
    "test.unit.input_convertors._map_into_single_column",
    "test.unit.postprocessing.conftest.LabelAndPrediction"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.conftest._map_into_single_column": {
  "data": {
   "shadows": "test.unit.input_convertors._map_into_single_column"
  },
  "type": "import"
 },
 "test.unit.postprocessing.conftest.candidate_A_transforms": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "test.unit.postprocessing.conftest.candidate_X_transforms": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "test.unit.postprocessing.conftest.candidate_Y_transforms": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "test.unit.postprocessing.conftest.data": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "test.unit.postprocessing.conftest._data_ex1",
    "test.unit.postprocessing.conftest._data_ex2",
    "test.unit.postprocessing.conftest._data_ex3",
    "test.unit.postprocessing.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.conftest.data_X_sf": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "X_transform",
    "test.unit.postprocessing.conftest.candidate_X_transforms",
    "test.unit.postprocessing.conftest.data_sf",
    "test.unit.postprocessing.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.conftest.data_X_y_sf": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "test.unit.postprocessing.conftest.candidate_Y_transforms",
    "test.unit.postprocessing.conftest.data_X_sf",
    "test.unit.postprocessing.conftest.pytest",
    "y_transform"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.conftest.data_sf": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "sensitive_feature_transform",
    "test.unit.postprocessing.conftest.candidate_A_transforms",
    "test.unit.postprocessing.conftest.data",
    "test.unit.postprocessing.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.conftest.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "test.unit.postprocessing.conftest.degenerate_labels_ex": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "test.unit.postprocessing.conftest.ensure_dataframe": {
  "data": {
   "shadows": "test.unit.input_convertors.ensure_dataframe"
  },
  "type": "import"
 },
 "test.unit.postprocessing.conftest.ensure_list_1d": {
  "data": {
   "shadows": "test.unit.input_convertors.ensure_list_1d"
  },
  "type": "import"
 },
 "test.unit.postprocessing.conftest.ensure_ndarray": {
  "data": {
   "shadows": "test.unit.input_convertors.ensure_ndarray"
  },
  "type": "import"
 },
 "test.unit.postprocessing.conftest.ensure_ndarray_2d": {
  "data": {
   "shadows": "test.unit.input_convertors.ensure_ndarray_2d"
  },
  "type": "import"
 },
 "test.unit.postprocessing.conftest.ensure_series": {
  "data": {
   "shadows": "test.unit.input_convertors.ensure_series"
  },
  "type": "import"
 },
 "test.unit.postprocessing.conftest.is_invalid_transformation": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "test.unit.input_convertors.ensure_list_1d",
    "test.unit.input_convertors.ensure_series",
    "test.unit.postprocessing.conftest.sensitive_features_ex3"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.conftest.labels_ex": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "test.unit.postprocessing.conftest.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "test.unit.postprocessing.conftest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.postprocessing.conftest.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.postprocessing.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.postprocessing.conftest.scores_ex": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "test.unit.postprocessing.conftest.sensitive_feature_names_ex1": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "test.unit.postprocessing.conftest.sensitive_feature_names_ex2": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "test.unit.postprocessing.conftest.sensitive_feature_names_ex3": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "test.unit.postprocessing.conftest.sensitive_features_ex1": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "test.unit.postprocessing.conftest.sensitive_features_ex2": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "test.unit.postprocessing.conftest.sensitive_features_ex3": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "test.unit.postprocessing.test_curve_utilities": {
  "data": {},
  "type": "module"
 },
 "test.unit.postprocessing.test_curve_utilities.LABEL_KEY": {
  "data": {
   "shadows": "fairlearn.postprocessing._constants.LABEL_KEY"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_curve_utilities.SCORE_KEY": {
  "data": {
   "shadows": "fairlearn.postprocessing._constants.SCORE_KEY"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_curve_utilities.SENSITIVE_FEATURE_KEY": {
  "data": {
   "shadows": "fairlearn.postprocessing._constants.SENSITIVE_FEATURE_KEY"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_curve_utilities.ThresholdOperation": {
  "data": {
   "shadows": "fairlearn.postprocessing._threshold_operation.ThresholdOperation"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_curve_utilities._assert_equal_points": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "len",
    "numpy.isclose",
    "range"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities._assert_interpolated_points_are_between_base_points": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "_get_base_point_coordinates",
    "len",
    "numpy.isclose",
    "range"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities._assert_interpolated_points_are_between_base_points._get_base_point_coordinates": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities._calculate_tradeoff_points": {
  "data": {
   "shadows": "fairlearn.postprocessing._tradeoff_curve_utilities._calculate_tradeoff_points"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_curve_utilities._filter_points_to_get_convex_hull": {
  "data": {
   "shadows": "fairlearn.postprocessing._tradeoff_curve_utilities._filter_points_to_get_convex_hull"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_curve_utilities._interpolate_curve": {
  "data": {
   "shadows": "fairlearn.postprocessing._tradeoff_curve_utilities._interpolate_curve"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_curve_utilities._tradeoff_curve": {
  "data": {
   "shadows": "fairlearn.postprocessing._tradeoff_curve_utilities._tradeoff_curve"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_curve_utilities.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_curve_utilities.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_curve_utilities.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_curve_utilities.test_assert_interpolated_curve": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "_assert_interpolated_points_are_between_base_points",
    "fairlearn.postprocessing._tradeoff_curve_utilities._interpolate_curve",
    "numpy.linspace",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities.test_calculate_tradeoff_points": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "_assert_equal_points",
    "fairlearn.postprocessing._constants.LABEL_KEY",
    "fairlearn.postprocessing._constants.SCORE_KEY",
    "fairlearn.postprocessing._constants.SENSITIVE_FEATURE_KEY",
    "fairlearn.postprocessing._threshold_operation.ThresholdOperation",
    "fairlearn.postprocessing._tradeoff_curve_utilities._calculate_tradeoff_points",
    "fairlearn.postprocessing._tradeoff_curve_utilities._filter_points_to_get_convex_hull",
    "numpy.inf",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities.test_convex_hull": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "fairlearn.postprocessing._tradeoff_curve_utilities._filter_points_to_get_convex_hull",
    "pandas.DataFrame",
    "test.unit.postprocessing.test_curve_utilities.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities.test_interpolate_curve": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "_assert_interpolated_points_are_between_base_points",
    "fairlearn.postprocessing._tradeoff_curve_utilities._interpolate_curve",
    "numpy.linspace",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities.test_tradeoff_curve": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "_assert_interpolated_points_are_between_base_points",
    "_get_grouped_data_and_base_points",
    "fairlearn.postprocessing._tradeoff_curve_utilities._interpolate_curve",
    "fairlearn.postprocessing._tradeoff_curve_utilities._tradeoff_curve"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_plots": {
  "data": {},
  "type": "module"
 },
 "test.unit.postprocessing.test_plots.PYTEST_MPL_NOT_INSTALLED_MSG": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "test.unit.postprocessing.test_plots.TestPlots": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "test.unit.postprocessing.test_plots.PYTEST_MPL_NOT_INSTALLED_MSG",
    "test.unit.postprocessing.test_plots.is_mpl_installed",
    "test.unit.postprocessing.test_plots.pytest"
   ]
  },
  "type": "class"
 },
 "test.unit.postprocessing.test_plots.TestPlots.test_plot_demographic_parity_ex1": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "test.unit.postprocessing.test_plots._fit_and_plot",
    "test.unit.postprocessing.test_plots.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_plots.TestPlots.test_plot_demographic_parity_ex2": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "test.unit.postprocessing.test_plots._fit_and_plot",
    "test.unit.postprocessing.test_plots.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_plots.TestPlots.test_plot_demographic_parity_ex3": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "test.unit.postprocessing.test_plots._fit_and_plot",
    "test.unit.postprocessing.test_plots.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_plots.TestPlots.test_plot_equalized_odds_ex1": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "test.unit.postprocessing.test_plots._fit_and_plot",
    "test.unit.postprocessing.test_plots.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_plots.TestPlots.test_plot_equalized_odds_ex2": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "test.unit.postprocessing.test_plots._fit_and_plot",
    "test.unit.postprocessing.test_plots.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_plots.TestPlots.test_plot_equalized_odds_ex3": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "test.unit.postprocessing.test_plots._fit_and_plot",
    "test.unit.postprocessing.test_plots.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_plots.ThresholdOptimizer": {
  "data": {
   "shadows": "fairlearn.postprocessing.ThresholdOptimizer"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_plots._fit_and_plot": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ExamplePredictor",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "fairlearn.postprocessing.plot_threshold_optimizer",
    "matplotlib.pyplot.subplots"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_plots.is_mpl_installed": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "test.unit.postprocessing.test_plots.pkg_resources"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_plots.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_plots.plot_threshold_optimizer": {
  "data": {
   "shadows": "fairlearn.postprocessing.plot_threshold_optimizer"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_plots.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_plots.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_smoke": {
  "data": {
   "symbols_in_volume": [
    "lightgbm.LGBMClassifier",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.svm.SVC",
    "sklearn.tree.DecisionTreeClassifier",
    "test.unit.postprocessing.test_smoke._ESTIMATORS",
    "test.unit.postprocessing.test_smoke.platform"
   ]
  },
  "type": "module"
 },
 "test.unit.postprocessing.test_smoke.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_smoke.LGBMClassifier": {
  "data": {
   "shadows": "lightgbm.LGBMClassifier"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_smoke.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_smoke.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_smoke.ThresholdOptimizer": {
  "data": {
   "shadows": "fairlearn.postprocessing.ThresholdOptimizer"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_smoke._ESTIMATORS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "test.unit.postprocessing.test_smoke.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_smoke.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_smoke.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_smoke.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_smoke.test_smoke": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Estimator",
    "Mitigator",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "numpy.random.choice",
    "numpy.random.normal",
    "numpy.random.seed",
    "pandas.DataFrame",
    "test.unit.postprocessing.test_smoke._ESTIMATORS",
    "test.unit.postprocessing.test_smoke.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_operation": {
  "data": {},
  "type": "module"
 },
 "test.unit.postprocessing.test_threshold_operation.ThresholdOperation": {
  "data": {
   "shadows": "fairlearn.postprocessing._threshold_operation.ThresholdOperation"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_operation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_operation.test_predict_from_operation_invalid_operator": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.postprocessing._threshold_operation.ThresholdOperation",
    "test.unit.postprocessing.test_threshold_operation.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_operation.test_predict_from_operation_less": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "classifier",
    "fairlearn.postprocessing._threshold_operation.ThresholdOperation"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_operation.test_predict_from_operation_more": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "classifier",
    "fairlearn.postprocessing._threshold_operation.ThresholdOperation"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization": {
  "data": {
   "symbols_in_volume": [
    "numpy.inf",
    "test.unit.postprocessing.test_threshold_optimization._NEG_P0",
    "test.unit.postprocessing.test_threshold_optimization._NEG_P1",
    "test.unit.postprocessing.test_threshold_optimization._P0",
    "test.unit.postprocessing.test_threshold_optimization._P1",
    "test.unit.postprocessing.test_threshold_optimization._POS_P0",
    "test.unit.postprocessing.test_threshold_optimization._POS_P1"
   ]
  },
  "type": "module"
 },
 "test.unit.postprocessing.test_threshold_optimization.BASE_ESTIMATOR_NONE_ERROR_MESSAGE": {
  "data": {
   "shadows": "fairlearn.postprocessing._threshold_optimizer.BASE_ESTIMATOR_NONE_ERROR_MESSAGE"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization.DEGENERATE_LABELS_ERROR_MESSAGE": {
  "data": {
   "shadows": "fairlearn.postprocessing._tradeoff_curve_utilities.DEGENERATE_LABELS_ERROR_MESSAGE"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization.NOT_SUPPORTED_CONSTRAINTS_ERROR_MESSAGE": {
  "data": {
   "shadows": "fairlearn.postprocessing._threshold_optimizer.NOT_SUPPORTED_CONSTRAINTS_ERROR_MESSAGE"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization.PREC": {
  "data": {
   "lineno": 613
  },
  "type": "constant"
 },
 "test.unit.postprocessing.test_threshold_optimization.PassThroughPredictor": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "test.unit.postprocessing.test_threshold_optimization.PassThroughPredictor.__init__": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.PassThroughPredictor.fit": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.PassThroughPredictor.predict": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.ThresholdOptimizer": {
  "data": {
   "shadows": "fairlearn.postprocessing.ThresholdOptimizer"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization._LABELS_NOT_0_1_ERROR_MESSAGE": {
  "data": {
   "shadows": "fairlearn._input_validation._LABELS_NOT_0_1_ERROR_MESSAGE"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization._MESSAGE_SENSITIVE_FEATURES_NONE": {
  "data": {
   "shadows": "fairlearn._input_validation._MESSAGE_SENSITIVE_FEATURES_NONE"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization._MESSAGE_Y_NONE": {
  "data": {
   "shadows": "fairlearn._input_validation._MESSAGE_Y_NONE"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization._NEG_P0": {
  "data": {
   "lineno": 374
  },
  "type": "constant"
 },
 "test.unit.postprocessing.test_threshold_optimization._NEG_P1": {
  "data": {
   "lineno": 375
  },
  "type": "constant"
 },
 "test.unit.postprocessing.test_threshold_optimization._P0": {
  "data": {
   "lineno": 332
  },
  "type": "constant"
 },
 "test.unit.postprocessing.test_threshold_optimization._P1": {
  "data": {
   "lineno": 333
  },
  "type": "constant"
 },
 "test.unit.postprocessing.test_threshold_optimization._POS_P0": {
  "data": {
   "lineno": 372
  },
  "type": "constant"
 },
 "test.unit.postprocessing.test_threshold_optimization._POS_P1": {
  "data": {
   "lineno": 373
  },
  "type": "constant"
 },
 "test.unit.postprocessing.test_threshold_optimization._degenerate_labels_feature_name": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "test.unit.postprocessing.test_threshold_optimization._expected_ps_demographic_parity": {
  "data": {
   "lineno": 334
  },
  "type": "constant"
 },
 "test.unit.postprocessing.test_threshold_optimization._expected_ps_equalized_odds": {
  "data": {
   "lineno": 376
  },
  "type": "constant"
 },
 "test.unit.postprocessing.test_threshold_optimization._map_into_single_column": {
  "data": {
   "shadows": "test.unit.input_convertors._map_into_single_column"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization.constraints_list": {
  "data": {
   "lineno": 457
  },
  "type": "constant"
 },
 "test.unit.postprocessing.test_threshold_optimization.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization.objectives_list": {
  "data": {
   "lineno": 467
  },
  "type": "constant"
 },
 "test.unit.postprocessing.test_threshold_optimization.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization.results": {
  "data": {
   "lineno": 479
  },
  "type": "constant"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_constraints_not_supported": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ExamplePredictor",
    "ValueError",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "fairlearn.postprocessing._threshold_optimizer.NOT_SUPPORTED_CONSTRAINTS_ERROR_MESSAGE",
    "test.unit.postprocessing.test_threshold_optimization.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_constraints_objective_pairs": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "pandas.Series",
    "str",
    "test.unit.postprocessing.test_threshold_optimization.PREC",
    "test.unit.postprocessing.test_threshold_optimization.PassThroughPredictor",
    "test.unit.postprocessing.test_threshold_optimization.constraints_list",
    "test.unit.postprocessing.test_threshold_optimization.objectives_list",
    "test.unit.postprocessing.test_threshold_optimization.pytest",
    "test.unit.postprocessing.test_threshold_optimization.results",
    "type"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_no_estimator_error": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "fairlearn.postprocessing._threshold_optimizer.BASE_ESTIMATOR_NONE_ERROR_MESSAGE",
    "test.unit.postprocessing.test_threshold_optimization.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_none_input_data": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ExamplePredictor",
    "ValueError",
    "fairlearn._input_validation._MESSAGE_SENSITIVE_FEATURES_NONE",
    "fairlearn._input_validation._MESSAGE_Y_NONE",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "str",
    "test.unit.postprocessing.test_threshold_optimization.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_predict_before_fit_error": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ExamplePredictor",
    "ValueError",
    "X_transform",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "getattr",
    "sensitive_features_transform",
    "test.unit.postprocessing.test_threshold_optimization.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_predict_different_argument_lengths": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "ExamplePredictor",
    "ValueError",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "test.unit.postprocessing.test_threshold_optimization.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_predict_output_0_or_1": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "ExamplePredictor",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "test.unit.postprocessing.test_threshold_optimization.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_degenerate_labels": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ExamplePredictor",
    "ValueError",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "fairlearn.postprocessing._tradeoff_curve_utilities.DEGENERATE_LABELS_ERROR_MESSAGE.format",
    "test.unit.postprocessing.test_threshold_optimization._degenerate_labels_feature_name",
    "test.unit.postprocessing.test_threshold_optimization.pytest",
    "y_transform"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_demographic_parity": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "_average_prediction",
    "_get_predictions_by_sensitive_feature",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "numpy.isclose",
    "pandas.DataFrame",
    "prob_pred",
    "sensitive_features_transform",
    "sorted",
    "test.unit.postprocessing.test_threshold_optimization.PassThroughPredictor",
    "test.unit.postprocessing.test_threshold_optimization.pytest",
    "y_transform"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_demographic_parity._average_prediction": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "len",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_demographic_parity.prob_pred": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_demographic_parity_e2e": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "ExamplePredictor",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "numpy.average",
    "numpy.isclose",
    "test.unit.input_convertors._map_into_single_column",
    "test.unit.postprocessing.test_threshold_optimization._P0",
    "test.unit.postprocessing.test_threshold_optimization._P1",
    "test.unit.postprocessing.test_threshold_optimization._expected_ps_demographic_parity",
    "test.unit.postprocessing.test_threshold_optimization.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_different_input_lengths": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ExamplePredictor",
    "ValueError",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "len",
    "test.unit.postprocessing.test_threshold_optimization.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_equalized_odds": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "_average_prediction_for_label",
    "_get_predictions_by_sensitive_feature",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "numpy.isclose",
    "pandas.DataFrame",
    "prob_pred",
    "sensitive_features_transform",
    "sorted",
    "test.unit.postprocessing.test_threshold_optimization.PassThroughPredictor",
    "test.unit.postprocessing.test_threshold_optimization.pytest",
    "y_transform"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_equalized_odds._average_prediction_for_label": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "len",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_equalized_odds.prob_pred": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_equalized_odds_e2e": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "ExamplePredictor",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "numpy.average",
    "numpy.isclose",
    "test.unit.input_convertors._map_into_single_column",
    "test.unit.postprocessing.test_threshold_optimization._NEG_P0",
    "test.unit.postprocessing.test_threshold_optimization._NEG_P1",
    "test.unit.postprocessing.test_threshold_optimization._POS_P0",
    "test.unit.postprocessing.test_threshold_optimization._POS_P1",
    "test.unit.postprocessing.test_threshold_optimization._expected_ps_equalized_odds",
    "test.unit.postprocessing.test_threshold_optimization.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_non_binary_labels": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ExamplePredictor",
    "ValueError",
    "copy.deepcopy",
    "fairlearn._input_validation._LABELS_NOT_0_1_ERROR_MESSAGE",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "test.unit.postprocessing.test_threshold_optimization.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.preprocessing": {
  "data": {},
  "type": "module"
 },
 "test.unit.preprocessing.linear_dep_remover": {
  "data": {},
  "type": "module"
 },
 "test.unit.preprocessing.linear_dep_remover.test_sklearn_compat": {
  "data": {},
  "type": "module"
 },
 "test.unit.preprocessing.linear_dep_remover.test_sklearn_compat.CorrelationRemover": {
  "data": {
   "shadows": "fairlearn.preprocessing.CorrelationRemover"
  },
  "type": "import"
 },
 "test.unit.preprocessing.linear_dep_remover.test_sklearn_compat.estimator_checks": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks"
  },
  "type": "import"
 },
 "test.unit.preprocessing.linear_dep_remover.test_sklearn_compat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.preprocessing.linear_dep_remover.test_sklearn_compat.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.preprocessing.linear_dep_remover.test_sklearn_compat.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.preprocessing.linear_dep_remover.test_sklearn_compat.test_estimator_checks": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "fairlearn.preprocessing.CorrelationRemover",
    "fairlearn.preprocessing.CorrelationRemover.__name__",
    "sklearn.utils.estimator_checks.check_complex_data",
    "sklearn.utils.estimator_checks.check_dict_unchanged",
    "sklearn.utils.estimator_checks.check_dont_overwrite_parameters",
    "sklearn.utils.estimator_checks.check_dtype_object",
    "sklearn.utils.estimator_checks.check_estimator_sparse_data",
    "sklearn.utils.estimator_checks.check_estimators_dtypes",
    "sklearn.utils.estimator_checks.check_estimators_empty_data_messages",
    "sklearn.utils.estimator_checks.check_estimators_fit_returns_self",
    "sklearn.utils.estimator_checks.check_estimators_nan_inf",
    "sklearn.utils.estimator_checks.check_estimators_overwrite_params",
    "sklearn.utils.estimator_checks.check_estimators_pickle",
    "sklearn.utils.estimator_checks.check_fit2d_1feature",
    "sklearn.utils.estimator_checks.check_fit2d_1sample",
    "sklearn.utils.estimator_checks.check_fit2d_predict1d",
    "sklearn.utils.estimator_checks.check_fit_score_takes_y",
    "sklearn.utils.estimator_checks.check_get_params_invariance",
    "sklearn.utils.estimator_checks.check_methods_subset_invariance",
    "sklearn.utils.estimator_checks.check_pipeline_consistency",
    "sklearn.utils.estimator_checks.check_sample_weights_list",
    "sklearn.utils.estimator_checks.check_sample_weights_pandas_series",
    "sklearn.utils.estimator_checks.check_set_params",
    "sklearn.utils.estimator_checks.check_transformer_general",
    "sklearn.utils.estimator_checks.check_transformers_unfitted",
    "test.unit.preprocessing.linear_dep_remover.test_sklearn_compat.pytest",
    "test_fn"
   ]
  },
  "type": "function"
 },
 "test.unit.preprocessing.linear_dep_remover.test_sklearn_compat.test_linear_dependence": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "fairlearn.preprocessing.CorrelationRemover",
    "numpy.allclose",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "test.unit.preprocessing.linear_dep_remover.test_sklearn_compat.test_linear_dependence_pd": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "fairlearn.preprocessing.CorrelationRemover",
    "numpy.allclose",
    "numpy.array",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions": {
  "data": {},
  "type": "module"
 },
 "test.unit.reductions.conftest": {
  "data": {},
  "type": "module"
 },
 "test.unit.reductions.conftest.ensure_list": {
  "data": {
   "shadows": "test.unit.input_convertors.ensure_list"
  },
  "type": "import"
 },
 "test.unit.reductions.conftest.ensure_series": {
  "data": {
   "shadows": "test.unit.input_convertors.ensure_series"
  },
  "type": "import"
 },
 "test.unit.reductions.conftest.is_invalid_transformation": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "test.unit.input_convertors.ensure_list",
    "test.unit.input_convertors.ensure_series"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.data_generators": {
  "data": {},
  "type": "module"
 },
 "test.unit.reductions.data_generators.loan_scenario_generator": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.transpose",
    "pandas.DataFrame",
    "range",
    "test.unit.reductions.data_generators.random"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.data_generators.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.reductions.data_generators.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.reductions.data_generators.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient": {
  "data": {},
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners": {
  "data": {},
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresBinaryClassifierLearner": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresBinaryClassifierLearner.__init__": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresBinaryClassifierLearner.fit": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.linalg.lstsq",
    "numpy.newaxis",
    "numpy.sqrt",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresBinaryClassifierLearner.predict": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresRegressor": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresRegressor.__init__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresRegressor.fit": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.linalg.lstsq",
    "numpy.newaxis",
    "numpy.sqrt",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresRegressor.predict": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.MockEstimator": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.MockEstimator.fit": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.MockEstimator.predict": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features": {
  "data": {},
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.DemographicParity": {
  "data": {
   "shadows": "fairlearn.reductions.DemographicParity"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.EqualizedOdds": {
  "data": {
   "shadows": "fairlearn.reductions.EqualizedOdds"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.ErrorRateParity": {
  "data": {
   "shadows": "fairlearn.reductions.ErrorRateParity"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.ExponentiatedGradient": {
  "data": {
   "shadows": "fairlearn.reductions.ExponentiatedGradient"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.FalsePositiveRateParity": {
  "data": {
   "shadows": "fairlearn.reductions.FalsePositiveRateParity"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.MetricFrame": {
  "data": {
   "shadows": "fairlearn.metrics.MetricFrame"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.TruePositiveRateParity": {
  "data": {
   "shadows": "fairlearn.reductions.TruePositiveRateParity"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.f": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.false_positive_rate": {
  "data": {
   "shadows": "fairlearn.metrics.false_positive_rate"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.ibs": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.loan_scenario_generator": {
  "data": {
   "shadows": "test.unit.reductions.data_generators.loan_scenario_generator"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.n": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.run_comparisons": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "fairlearn.reductions.ExponentiatedGradient",
    "moment",
    "pandas.get_dummies",
    "print",
    "sklearn.linear_model.LogisticRegression",
    "test.unit.reductions.data_generators.loan_scenario_generator",
    "test.unit.reductions.exponentiated_gradient.test_control_features.f",
    "test.unit.reductions.exponentiated_gradient.test_control_features.ibs",
    "test.unit.reductions.exponentiated_gradient.test_control_features.n",
    "test.unit.reductions.exponentiated_gradient.test_control_features.sfs"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.selection_rate": {
  "data": {
   "shadows": "fairlearn.metrics.selection_rate"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.sfs": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.test_demographic_parity": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "fairlearn.metrics.selection_rate",
    "fairlearn.reductions.DemographicParity",
    "test.unit.reductions.exponentiated_gradient.test_control_features.run_comparisons"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.test_equalized_odds": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "fairlearn.metrics.false_positive_rate",
    "fairlearn.metrics.true_positive_rate",
    "fairlearn.reductions.EqualizedOdds",
    "fairlearn.reductions.ExponentiatedGradient",
    "pandas.get_dummies",
    "print",
    "sklearn.linear_model.LogisticRegression",
    "test.unit.reductions.data_generators.loan_scenario_generator",
    "test.unit.reductions.exponentiated_gradient.test_control_features.f",
    "test.unit.reductions.exponentiated_gradient.test_control_features.ibs",
    "test.unit.reductions.exponentiated_gradient.test_control_features.n",
    "test.unit.reductions.exponentiated_gradient.test_control_features.sfs"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.test_error_rate_parity": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "fairlearn.reductions.ErrorRateParity",
    "sklearn.metrics.accuracy_score",
    "test.unit.reductions.exponentiated_gradient.test_control_features.run_comparisons"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.test_false_positive_rate_parity": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "fairlearn.metrics.false_positive_rate",
    "fairlearn.reductions.FalsePositiveRateParity",
    "test.unit.reductions.exponentiated_gradient.test_control_features.run_comparisons"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.test_true_positive_rate_parity": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "fairlearn.metrics.true_positive_rate",
    "fairlearn.reductions.TruePositiveRateParity",
    "test.unit.reductions.exponentiated_gradient.test_control_features.run_comparisons"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_control_features.true_positive_rate": {
  "data": {
   "shadows": "fairlearn.metrics.true_positive_rate"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments": {
  "data": {
   "symbols_in_volume": [
    "test.unit.input_convertors.conversions_for_1d",
    "test.unit.input_convertors.ensure_dataframe",
    "test.unit.input_convertors.ensure_ndarray"
   ]
  },
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.DemographicParity": {
  "data": {
   "shadows": "fairlearn.reductions.DemographicParity"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.ErrorRate": {
  "data": {
   "shadows": "fairlearn.reductions.ErrorRate"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.ExponentiatedGradient": {
  "data": {
   "shadows": "fairlearn.reductions.ExponentiatedGradient"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.TestExponentiatedGradientArguments": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.TestExponentiatedGradientArguments.test_argument_types_difference_bound": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "LeastSquaresBinaryClassifierLearner",
    "_get_data",
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions.ErrorRate",
    "fairlearn.reductions.ExponentiatedGradient",
    "len",
    "numpy.all",
    "numpy.isclose",
    "test.unit.input_convertors._map_into_single_column",
    "test.unit.reductions.conftest.is_invalid_transformation",
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments._PRECISION",
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.candidate_A_transforms",
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.candidate_X_transforms",
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.candidate_Y_transforms",
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.pytest",
    "transformA",
    "transformX",
    "transformY"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.TestExponentiatedGradientArguments.test_argument_types_difference_bound.Q": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.TestExponentiatedGradientArguments.test_argument_types_ratio_bound": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "LeastSquaresBinaryClassifierLearner",
    "_get_data",
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions.ErrorRate",
    "fairlearn.reductions.ExponentiatedGradient",
    "len",
    "numpy.all",
    "numpy.isclose",
    "test.unit.input_convertors._map_into_single_column",
    "test.unit.reductions.conftest.is_invalid_transformation",
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments._PRECISION",
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.candidate_A_transforms",
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.candidate_X_transforms",
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.candidate_Y_transforms",
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.pytest",
    "transformA",
    "transformX",
    "transformY"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.TestExponentiatedGradientArguments.test_argument_types_ratio_bound.Q": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.TestExponentiatedGradientArguments.test_binary_classifier_0_1_required": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "ValueError",
    "_get_data",
    "fairlearn._input_validation._LABELS_NOT_0_1_ERROR_MESSAGE",
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions.ExponentiatedGradient",
    "sklearn.linear_model.LogisticRegression",
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.TestExponentiatedGradientArguments.test_input_X_unchanged": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "LeastSquaresBinaryClassifierLearner",
    "_get_data",
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions.ExponentiatedGradient",
    "isinstance",
    "len",
    "pandas.Series",
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.candidate_A_transforms",
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.candidate_X_transforms",
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.candidate_Y_transforms",
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.pytest",
    "transformA",
    "transformX",
    "transformY",
    "type"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.TestExponentiatedGradientArguments.test_sample_weights_argument": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ValueError",
    "_get_data",
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions.ExponentiatedGradient",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.Pipeline",
    "sklearn.preprocessing.StandardScaler",
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments._LABELS_NOT_0_1_ERROR_MESSAGE": {
  "data": {
   "shadows": "fairlearn._input_validation._LABELS_NOT_0_1_ERROR_MESSAGE"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments._PRECISION": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments._map_into_single_column": {
  "data": {
   "shadows": "test.unit.input_convertors._map_into_single_column"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.candidate_A_transforms": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.candidate_X_transforms": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.candidate_Y_transforms": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.conversions_for_1d": {
  "data": {
   "shadows": "test.unit.input_convertors.conversions_for_1d"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.ensure_dataframe": {
  "data": {
   "shadows": "test.unit.input_convertors.ensure_dataframe"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.ensure_ndarray": {
  "data": {
   "shadows": "test.unit.input_convertors.ensure_ndarray"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.is_invalid_transformation": {
  "data": {
   "shadows": "test.unit.reductions.conftest.is_invalid_transformation"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke": {
  "data": {},
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.AbsoluteLoss": {
  "data": {
   "shadows": "fairlearn.reductions.AbsoluteLoss"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.BoundedGroupLoss": {
  "data": {
   "shadows": "fairlearn.reductions.BoundedGroupLoss"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.DemographicParity": {
  "data": {
   "shadows": "fairlearn.reductions.DemographicParity"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.DummyClassifier": {
  "data": {
   "shadows": "sklearn.dummy.DummyClassifier"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.EqualizedOdds": {
  "data": {
   "shadows": "fairlearn.reductions.EqualizedOdds"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.ErrorRate": {
  "data": {
   "shadows": "fairlearn.reductions.ErrorRate"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.ErrorRateParity": {
  "data": {
   "shadows": "fairlearn.reductions.ErrorRateParity"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.ExponentiatedGradient": {
  "data": {
   "shadows": "fairlearn.reductions.ExponentiatedGradient"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.FalsePositiveRateParity": {
  "data": {
   "shadows": "fairlearn.reductions.FalsePositiveRateParity"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.MeanLoss": {
  "data": {
   "shadows": "fairlearn.reductions._moments.bounded_group_loss.MeanLoss"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.SquareLoss": {
  "data": {
   "shadows": "fairlearn.reductions.SquareLoss"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "fairlearn.reductions.AbsoluteLoss",
    "fairlearn.reductions.BoundedGroupLoss",
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions.EqualizedOdds",
    "fairlearn.reductions.ErrorRateParity",
    "fairlearn.reductions.FalsePositiveRateParity",
    "fairlearn.reductions.SquareLoss",
    "fairlearn.reductions.TruePositiveRateParity",
    "fairlearn.reductions.ZeroOneLoss"
   ]
  },
  "type": "class"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke._assert_expgrad_state": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "fairlearn.reductions._exponentiated_gradient._constants._MIN_ITER",
    "len",
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke._PRECISION",
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.run_smoke_test_binary_classification": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "LeastSquaresBinaryClassifierLearner",
    "_get_data",
    "copy.deepcopy",
    "fairlearn.reductions.ErrorRate",
    "fairlearn.reductions.ExponentiatedGradient",
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke._PRECISION",
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.run_smoke_test_binary_classification.Q": {
  "data": {
   "lineno": 311
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.test_simple_fit_predict_binary_classification": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "Constraints",
    "LeastSquaresBinaryClassifierLearner",
    "_get_data",
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions.EqualizedOdds",
    "fairlearn.reductions.ErrorRateParity",
    "fairlearn.reductions.ExponentiatedGradient",
    "fairlearn.reductions.FalsePositiveRateParity",
    "fairlearn.reductions.TruePositiveRateParity",
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.test_simple_fit_predict_regression": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "LeastSquaresRegressor",
    "_get_data",
    "fairlearn.reductions.AbsoluteLoss",
    "fairlearn.reductions.BoundedGroupLoss",
    "fairlearn.reductions.ExponentiatedGradient",
    "fairlearn.reductions.SquareLoss",
    "fairlearn.reductions.ZeroOneLoss",
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.test_single_y_value": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions.ExponentiatedGradient",
    "isinstance",
    "len",
    "numpy.array_equal",
    "pandas.DataFrame",
    "sklearn.dummy.DummyClassifier",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.test_smoke": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.test_smoke_flipped": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.test_smoke_regression": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "LeastSquaresRegressor",
    "_get_data",
    "copy.deepcopy",
    "fairlearn.reductions.ExponentiatedGradient",
    "fairlearn.reductions._moments.bounded_group_loss.MeanLoss",
    "len",
    "range",
    "sum",
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke._PRECISION",
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.test_smoke_regression.Q": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TruePositiveRateParity": {
  "data": {
   "shadows": "fairlearn.reductions.TruePositiveRateParity"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.ZeroOneLoss": {
  "data": {
   "shadows": "fairlearn.reductions.ZeroOneLoss"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke._MIN_ITER": {
  "data": {
   "shadows": "fairlearn.reductions._exponentiated_gradient._constants._MIN_ITER"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke._PRECISION": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian": {
  "data": {
   "symbols_in_volume": [
    "fairlearn.reductions.BoundedGroupLoss",
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions.EqualizedOdds",
    "fairlearn.reductions.ErrorRateParity",
    "fairlearn.reductions.FalsePositiveRateParity",
    "fairlearn.reductions.TruePositiveRateParity",
    "test.unit.reductions.exponentiated_gradient.test_lagrangian.CLASSIFICATION_CONSTRAINTS",
    "test.unit.reductions.exponentiated_gradient.test_lagrangian.REGRESSION_CONSTRAINTS"
   ]
  },
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.ALL_CONSTRAINTS": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.BoundedGroupLoss": {
  "data": {
   "shadows": "fairlearn.reductions.BoundedGroupLoss"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.CLASSIFICATION_CONSTRAINTS": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.DemographicParity": {
  "data": {
   "shadows": "fairlearn.reductions.DemographicParity"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.DummyClassifier": {
  "data": {
   "shadows": "sklearn.dummy.DummyClassifier"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.EqualizedOdds": {
  "data": {
   "shadows": "fairlearn.reductions.EqualizedOdds"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.ErrorRateParity": {
  "data": {
   "shadows": "fairlearn.reductions.ErrorRateParity"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.FalsePositiveRateParity": {
  "data": {
   "shadows": "fairlearn.reductions.FalsePositiveRateParity"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.LossMoment": {
  "data": {
   "shadows": "fairlearn.reductions.LossMoment"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.REGRESSION_CONSTRAINTS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.TruePositiveRateParity": {
  "data": {
   "shadows": "fairlearn.reductions.TruePositiveRateParity"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.ZeroOneLoss": {
  "data": {
   "shadows": "fairlearn.reductions.ZeroOneLoss"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian._Lagrangian": {
  "data": {
   "shadows": "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian._PRECISION": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.get_lambda_new_weights_and_labels": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "fairlearn.reductions.LossMoment",
    "isinstance",
    "test.unit.reductions.exponentiated_gradient.test_lagrangian.get_lambda_vec"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.get_lambda_vec": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "numpy.exp",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.test_call_oracle": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "Constraints",
    "_get_data",
    "copy.deepcopy",
    "fairlearn.reductions.LossMoment",
    "fairlearn.reductions.ZeroOneLoss",
    "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian",
    "get_lambda_new_weights_and_labels",
    "issubclass",
    "len",
    "sklearn.base.BaseEstimator",
    "test.unit.reductions.exponentiated_gradient.test_lagrangian.ALL_CONSTRAINTS",
    "test.unit.reductions.exponentiated_gradient.test_lagrangian.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.test_call_oracle_single_y_value": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "Constraints",
    "copy.deepcopy",
    "fairlearn.reductions.BoundedGroupLoss",
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions.EqualizedOdds",
    "fairlearn.reductions.ErrorRateParity",
    "fairlearn.reductions.LossMoment",
    "fairlearn.reductions.ZeroOneLoss",
    "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian",
    "get_lambda_vec",
    "isinstance",
    "issubclass",
    "len",
    "pandas.DataFrame",
    "pandas.Series",
    "sklearn.dummy.DummyClassifier",
    "test.unit.reductions.exponentiated_gradient.test_lagrangian.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.test_lagrangian_eval": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "Constraints",
    "LeastSquaresBinaryClassifierLearner",
    "_get_data",
    "copy.deepcopy",
    "fairlearn.reductions.LossMoment",
    "fairlearn.reductions.ZeroOneLoss",
    "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian",
    "get_lambda_vec",
    "issubclass",
    "numpy.isclose",
    "numpy.sum",
    "pandas.Series",
    "test.unit.reductions.exponentiated_gradient.test_lagrangian.ALL_CONSTRAINTS",
    "test.unit.reductions.exponentiated_gradient.test_lagrangian._PRECISION",
    "test.unit.reductions.exponentiated_gradient.test_lagrangian.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_lagrangian.test_lagrangian_eval.h": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_utilities": {
  "data": {
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient.test_utilities.X1": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "test.unit.reductions.exponentiated_gradient.test_utilities.X2": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "test.unit.reductions.exponentiated_gradient.test_utilities.X3": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "test.unit.reductions.exponentiated_gradient.test_utilities._get_data": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "int",
    "numpy.stack",
    "pandas.DataFrame",
    "pandas.Series",
    "test.unit.reductions.exponentiated_gradient.test_utilities.X1",
    "test.unit.reductions.exponentiated_gradient.test_utilities.X2",
    "test.unit.reductions.exponentiated_gradient.test_utilities.X3",
    "test.unit.reductions.exponentiated_gradient.test_utilities.labels",
    "test.unit.reductions.exponentiated_gradient.test_utilities.scores",
    "test.unit.reductions.exponentiated_gradient.test_utilities.sensitive_features"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_utilities.labels": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "test.unit.reductions.exponentiated_gradient.test_utilities.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_utilities.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_utilities.scores": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "test.unit.reductions.exponentiated_gradient.test_utilities.sensitive_features": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "test.unit.reductions.grid_search": {
  "data": {},
  "type": "module"
 },
 "test.unit.reductions.grid_search.test_grid_generator": {
  "data": {},
  "type": "module"
 },
 "test.unit.reductions.grid_search.test_grid_generator.DemographicParity": {
  "data": {
   "shadows": "fairlearn.reductions.DemographicParity"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_generator.EqualizedOdds": {
  "data": {
   "shadows": "fairlearn.reductions.EqualizedOdds"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_generator._ALL": {
  "data": {
   "shadows": "fairlearn.reductions._moments.utility_parity._ALL"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_generator._EVENT": {
  "data": {
   "shadows": "fairlearn.reductions._moments.utility_parity._EVENT"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_generator._GROUP_ID": {
  "data": {
   "shadows": "fairlearn.reductions._moments.utility_parity._GROUP_ID"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_generator._GridGenerator": {
  "data": {
   "shadows": "fairlearn.reductions._grid_search.grid_search._GridGenerator"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_generator._SIGN": {
  "data": {
   "shadows": "fairlearn.reductions._moments.utility_parity._SIGN"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_generator._quick_data": {
  "data": {
   "shadows": "test.unit.reductions.grid_search.utilities._quick_data"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_generator.calculate_grid": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "fairlearn.reductions._grid_search.grid_search._GridGenerator",
    "test.unit.reductions.grid_search.utilities._quick_data"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_generator.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_generator.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_generator.test_grid_generator_demographic_parity": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "calculate_grid",
    "events",
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions._moments.utility_parity._ALL",
    "fairlearn.reductions._moments.utility_parity._EVENT",
    "fairlearn.reductions._moments.utility_parity._GROUP_ID",
    "fairlearn.reductions._moments.utility_parity._SIGN",
    "int",
    "max",
    "numpy.isclose",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "range",
    "test.unit.reductions.grid_search.test_grid_generator.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_generator.test_grid_generator_demographic_parity_with_center": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "calculate_grid",
    "events",
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions._moments.utility_parity._ALL",
    "fairlearn.reductions._moments.utility_parity._EVENT",
    "fairlearn.reductions._moments.utility_parity._GROUP_ID",
    "fairlearn.reductions._moments.utility_parity._SIGN",
    "int",
    "max",
    "numpy.isclose",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "range",
    "test.unit.reductions.grid_search.test_grid_generator.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_generator.test_grid_generator_equalized_odds": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "calculate_grid",
    "events",
    "fairlearn.reductions.EqualizedOdds",
    "fairlearn.reductions._moments.utility_parity._EVENT",
    "fairlearn.reductions._moments.utility_parity._GROUP_ID",
    "fairlearn.reductions._moments.utility_parity._SIGN",
    "numpy.isclose",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "range",
    "test.unit.reductions.grid_search.test_grid_generator.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_generator.test_grid_generator_equalized_odds_basic": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "calculate_grid",
    "events",
    "fairlearn.reductions.EqualizedOdds",
    "fairlearn.reductions._moments.utility_parity._EVENT",
    "fairlearn.reductions._moments.utility_parity._GROUP_ID",
    "fairlearn.reductions._moments.utility_parity._SIGN",
    "numpy.isclose",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "range",
    "test.unit.reductions.grid_search.test_grid_generator.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_generator.test_grid_generator_equalized_odds_with_center": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "calculate_grid",
    "events",
    "fairlearn.reductions.EqualizedOdds",
    "fairlearn.reductions._moments.utility_parity._EVENT",
    "fairlearn.reductions._moments.utility_parity._GROUP_ID",
    "fairlearn.reductions._moments.utility_parity._SIGN",
    "numpy.isclose",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "range",
    "test.unit.reductions.grid_search.test_grid_generator.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments": {
  "data": {
   "symbols_in_volume": [
    "test.unit.input_convertors.conversions_for_1d",
    "test.unit.input_convertors.ensure_dataframe",
    "test.unit.input_convertors.ensure_ndarray"
   ]
  },
  "type": "module"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests": {
  "data": {
   "lineno": 45
  },
  "type": "class"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_X_A_different_rows": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.reductions.GridSearch",
    "len",
    "numpy.random.randint",
    "numpy.stack",
    "test.unit.reductions.conftest.is_invalid_transformation",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_A_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_X_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_Y_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.pytest",
    "test.unit.reductions.grid_search.utilities._quick_data",
    "transformA",
    "transformX",
    "transformY"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_X_Y_different_rows": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.reductions.GridSearch",
    "len",
    "numpy.random.randint",
    "test.unit.reductions.conftest.is_invalid_transformation",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_A_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_X_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_Y_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.pytest",
    "test.unit.reductions.grid_search.utilities._quick_data",
    "transformA",
    "transformX",
    "transformY"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_X_is_None": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.reductions.GridSearch",
    "test.unit.reductions.conftest.is_invalid_transformation",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_A_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_Y_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.pytest",
    "test.unit.reductions.grid_search.utilities._quick_data",
    "transformA",
    "transformY"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_Y_df_bad_columns": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.reductions.GridSearch",
    "pandas.DataFrame",
    "test.unit.fixes.get_sklearn_expected_1d_message",
    "test.unit.reductions.conftest.is_invalid_transformation",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_A_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_X_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.pytest",
    "test.unit.reductions.grid_search.utilities._quick_data",
    "transformA",
    "transformX"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_Y_is_None": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn._input_validation._MESSAGE_Y_NONE",
    "fairlearn.reductions.GridSearch",
    "test.unit.reductions.conftest.is_invalid_transformation",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_A_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_X_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.pytest",
    "test.unit.reductions.grid_search.utilities._quick_data",
    "transformA",
    "transformX"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_Y_ndarray_bad_columns": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.reductions.GridSearch",
    "numpy.stack",
    "test.unit.fixes.get_sklearn_expected_1d_message",
    "test.unit.reductions.conftest.is_invalid_transformation",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_A_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_X_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.pytest",
    "test.unit.reductions.grid_search.utilities._quick_data",
    "transformA",
    "transformX"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_grid_size_warning_up_to_5_sensitive_feature_group": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "fairlearn.reductions.EqualizedOdds",
    "fairlearn.reductions.GridSearch",
    "fairlearn.reductions._grid_search._grid_generator.GRID_SIZE_WARN_TEMPLATE.format",
    "isinstance",
    "len",
    "test.unit.reductions.conftest.is_invalid_transformation",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_A_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_X_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_Y_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.logging",
    "test.unit.reductions.grid_search.test_grid_search_arguments.pytest",
    "test.unit.reductions.grid_search.utilities._quick_data",
    "transformA",
    "transformX",
    "transformY"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_many_sensitive_feature_groups_warning": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "fairlearn.reductions.EqualizedOdds",
    "fairlearn.reductions.GridSearch",
    "fairlearn.reductions._grid_search._grid_generator.GRID_DIMENSION_WARN_TEMPLATE.format",
    "fairlearn.reductions._grid_search._grid_generator.GRID_DIMENSION_WARN_THRESHOLD",
    "fairlearn.reductions._grid_search._grid_generator.GRID_SIZE_WARN_TEMPLATE.format",
    "isinstance",
    "len",
    "test.unit.reductions.conftest.is_invalid_transformation",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_A_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_X_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_Y_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.logging",
    "test.unit.reductions.grid_search.test_grid_search_arguments.pytest",
    "test.unit.reductions.grid_search.utilities._quick_data",
    "transformA",
    "transformX",
    "transformY"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_no_predict_before_fit": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "fairlearn.reductions.GridSearch",
    "fairlearn.reductions.GridSearch.__name__",
    "sklearn.exceptions.NotFittedError",
    "test.unit.reductions.grid_search.test_grid_search_arguments.not_fitted_error_msg",
    "test.unit.reductions.grid_search.test_grid_search_arguments.pytest",
    "test.unit.reductions.grid_search.utilities._quick_data"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_no_predict_proba_before_fit": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "fairlearn.reductions.GridSearch",
    "fairlearn.reductions.GridSearch.__name__",
    "sklearn.exceptions.NotFittedError",
    "test.unit.reductions.grid_search.test_grid_search_arguments.not_fitted_error_msg",
    "test.unit.reductions.grid_search.test_grid_search_arguments.pytest",
    "test.unit.reductions.grid_search.utilities._quick_data"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_valid_inputs": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "fairlearn.reductions.GridSearch",
    "test.unit.reductions.conftest.is_invalid_transformation",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_A_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_X_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_Y_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.pytest",
    "test.unit.reductions.grid_search.utilities._quick_data",
    "test.unit.reductions.grid_search.utilities.assert_n_grid_search_results",
    "transformA",
    "transformX",
    "transformY"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.BoundedGroupLoss": {
  "data": {
   "shadows": "fairlearn.reductions.BoundedGroupLoss"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ConditionalOpportunityTests": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests"
   ]
  },
  "type": "class"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ConditionalOpportunityTests.test_Y_not_0_1": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn._input_validation._LABELS_NOT_0_1_ERROR_MESSAGE",
    "fairlearn.reductions.GridSearch",
    "test.unit.reductions.conftest.is_invalid_transformation",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_A_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_X_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_Y_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.pytest",
    "test.unit.reductions.grid_search.utilities._quick_data",
    "transformA",
    "transformX",
    "transformY"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ConditionalOpportunityTests.test_Y_ternary": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn._input_validation._LABELS_NOT_0_1_ERROR_MESSAGE",
    "fairlearn.reductions.GridSearch",
    "test.unit.reductions.conftest.is_invalid_transformation",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_A_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_X_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_Y_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.pytest",
    "test.unit.reductions.grid_search.utilities._quick_data",
    "transformA",
    "transformX",
    "transformY"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.DemographicParity": {
  "data": {
   "shadows": "fairlearn.reductions.DemographicParity"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.EqualizedOdds": {
  "data": {
   "shadows": "fairlearn.reductions.EqualizedOdds"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.GRID_DIMENSION_WARN_TEMPLATE": {
  "data": {
   "shadows": "fairlearn.reductions._grid_search._grid_generator.GRID_DIMENSION_WARN_TEMPLATE"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.GRID_DIMENSION_WARN_THRESHOLD": {
  "data": {
   "shadows": "fairlearn.reductions._grid_search._grid_generator.GRID_DIMENSION_WARN_THRESHOLD"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.GRID_SIZE_WARN_TEMPLATE": {
  "data": {
   "shadows": "fairlearn.reductions._grid_search._grid_generator.GRID_SIZE_WARN_TEMPLATE"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.GridSearch": {
  "data": {
   "shadows": "fairlearn.reductions.GridSearch"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestBoundedGroupLoss": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests"
   ]
  },
  "type": "class"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestBoundedGroupLoss.setup_method": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "fairlearn.reductions.BoundedGroupLoss",
    "fairlearn.reductions.ZeroOneLoss",
    "sklearn.linear_model.LinearRegression"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestDemographicParity": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "test.unit.reductions.grid_search.test_grid_search_arguments.ConditionalOpportunityTests"
   ]
  },
  "type": "class"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestDemographicParity.setup_method": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "fairlearn.reductions.DemographicParity",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestEqualizedOdds": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "test.unit.reductions.grid_search.test_grid_search_arguments.ConditionalOpportunityTests"
   ]
  },
  "type": "class"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestEqualizedOdds.setup_method": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "fairlearn.reductions.EqualizedOdds",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestPipelineEstimator": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "test.unit.reductions.grid_search.test_grid_search_arguments.ConditionalOpportunityTests"
   ]
  },
  "type": "class"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestPipelineEstimator.setup_method": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "fairlearn.reductions.DemographicParity",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.Pipeline",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ZeroOneLoss": {
  "data": {
   "shadows": "fairlearn.reductions.ZeroOneLoss"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments._LABELS_NOT_0_1_ERROR_MESSAGE": {
  "data": {
   "shadows": "fairlearn._input_validation._LABELS_NOT_0_1_ERROR_MESSAGE"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments._MESSAGE_Y_NONE": {
  "data": {
   "shadows": "fairlearn._input_validation._MESSAGE_Y_NONE"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments._quick_data": {
  "data": {
   "shadows": "test.unit.reductions.grid_search.utilities._quick_data"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.assert_n_grid_search_results": {
  "data": {
   "shadows": "test.unit.reductions.grid_search.utilities.assert_n_grid_search_results"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_A_transforms": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_X_transforms": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_Y_transforms": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.conversions_for_1d": {
  "data": {
   "shadows": "test.unit.input_convertors.conversions_for_1d"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ensure_dataframe": {
  "data": {
   "shadows": "test.unit.input_convertors.ensure_dataframe"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ensure_ndarray": {
  "data": {
   "shadows": "test.unit.input_convertors.ensure_ndarray"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.get_sklearn_expected_1d_message": {
  "data": {
   "shadows": "test.unit.fixes.get_sklearn_expected_1d_message"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.is_invalid_transformation": {
  "data": {
   "shadows": "test.unit.reductions.conftest.is_invalid_transformation"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.not_fitted_error_msg": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity": {
  "data": {},
  "type": "module"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.DemographicParity": {
  "data": {
   "shadows": "fairlearn.reductions.DemographicParity"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.DummyClassifier": {
  "data": {
   "shadows": "sklearn.dummy.DummyClassifier"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.GridSearch": {
  "data": {
   "shadows": "fairlearn.reductions.GridSearch"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity._simple_threshold_data": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "len",
    "numpy.concatenate",
    "numpy.full",
    "numpy.linspace",
    "numpy.ones",
    "numpy.stack",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.assert_n_grid_search_results": {
  "data": {
   "shadows": "test.unit.reductions.grid_search.utilities.assert_n_grid_search_results"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.test_can_specify_and_generate_lambda_vecs": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions.GridSearch",
    "numpy.array_equal",
    "numpy.zeros",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "pandas.concat",
    "range",
    "sklearn.linear_model.LogisticRegression",
    "sorted",
    "test.unit.reductions.grid_search.test_grid_search_demographicparity._simple_threshold_data",
    "test.unit.reductions.grid_search.test_grid_search_demographicparity.copy",
    "test.unit.reductions.grid_search.test_grid_search_demographicparity.pytest",
    "test.unit.reductions.grid_search.utilities.assert_n_grid_search_results"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.test_demographicparity_fair_uneven_populations": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions.GridSearch",
    "numpy.allclose",
    "numpy.array_equal",
    "pandas.DataFrame",
    "sklearn.linear_model.LogisticRegression",
    "test.unit.reductions.grid_search.test_grid_search_demographicparity._simple_threshold_data",
    "test.unit.reductions.grid_search.test_grid_search_demographicparity.pytest",
    "test.unit.reductions.grid_search.utilities.assert_n_grid_search_results"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.test_demographicparity_fair_uneven_populations_with_grid_offset": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions.GridSearch",
    "numpy.allclose",
    "numpy.array_equal",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "sklearn.linear_model.LogisticRegression",
    "test.unit.reductions.grid_search.test_grid_search_demographicparity._simple_threshold_data",
    "test.unit.reductions.grid_search.test_grid_search_demographicparity.pytest",
    "test.unit.reductions.grid_search.utilities.assert_n_grid_search_results"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.test_lambda_vec_zero_unchanged_model": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions.GridSearch",
    "numpy.array_equal",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "sklearn.linear_model.LogisticRegression",
    "test.unit.reductions.grid_search.test_grid_search_demographicparity._simple_threshold_data",
    "test.unit.reductions.grid_search.test_grid_search_demographicparity.copy",
    "test.unit.reductions.grid_search.test_grid_search_demographicparity.pytest",
    "test.unit.reductions.grid_search.utilities.assert_n_grid_search_results"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.test_single_y_class": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions.GridSearch",
    "isinstance",
    "numpy.array_equal",
    "numpy.full",
    "pandas.DataFrame",
    "sklearn.dummy.DummyClassifier",
    "sklearn.linear_model.LogisticRegression",
    "test.unit.reductions.grid_search.test_grid_search_demographicparity.copy"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression": {
  "data": {},
  "type": "module"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.BoundedGroupLoss": {
  "data": {
   "shadows": "fairlearn.reductions.BoundedGroupLoss"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.GridSearch": {
  "data": {
   "shadows": "fairlearn.reductions.GridSearch"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.SquareLoss": {
  "data": {
   "shadows": "fairlearn.reductions.SquareLoss"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.ZeroOneLoss": {
  "data": {
   "shadows": "fairlearn.reductions.ZeroOneLoss"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression._simple_regression_data": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "len",
    "numpy.concatenate",
    "numpy.full",
    "numpy.linspace",
    "numpy.ones",
    "numpy.stack",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.assert_n_grid_search_results": {
  "data": {
   "shadows": "test.unit.reductions.grid_search.utilities.assert_n_grid_search_results"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.logging_all_close": {
  "data": {
   "shadows": "test.unit.utility_functions.logging_all_close"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.test_bgl_lagrange_specifications": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "fairlearn.reductions.BoundedGroupLoss",
    "fairlearn.reductions.GridSearch",
    "fairlearn.reductions.ZeroOneLoss",
    "len",
    "numpy.array_equal",
    "pandas.Int64Index",
    "pandas.Series",
    "pandas.concat",
    "range",
    "sklearn.linear_model.LinearRegression",
    "sorted",
    "test.unit.reductions.grid_search.test_grid_search_regression._simple_regression_data",
    "test.unit.reductions.grid_search.test_grid_search_regression.copy",
    "test.unit.reductions.grid_search.test_grid_search_regression.pytest",
    "test.unit.reductions.grid_search.utilities.assert_n_grid_search_results"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.test_bgl_unfair": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "fairlearn.reductions.BoundedGroupLoss",
    "fairlearn.reductions.GridSearch",
    "fairlearn.reductions.SquareLoss",
    "numpy.allclose",
    "numpy.inf",
    "pandas.DataFrame",
    "sklearn.linear_model.LinearRegression",
    "test.unit.reductions.grid_search.test_grid_search_regression._simple_regression_data",
    "test.unit.reductions.grid_search.test_grid_search_regression.pytest",
    "test.unit.reductions.grid_search.utilities.assert_n_grid_search_results",
    "test.unit.utility_functions.logging_all_close"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.test_bgl_unmitigated_same": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "fairlearn.reductions.BoundedGroupLoss",
    "fairlearn.reductions.GridSearch",
    "fairlearn.reductions.ZeroOneLoss",
    "numpy.allclose",
    "pandas.DataFrame",
    "pandas.Int64Index",
    "pandas.Series",
    "sklearn.linear_model.LinearRegression",
    "sorted",
    "test.unit.reductions.grid_search.test_grid_search_regression._simple_regression_data",
    "test.unit.reductions.grid_search.test_grid_search_regression.copy",
    "test.unit.reductions.grid_search.test_grid_search_regression.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.utilities": {
  "data": {},
  "type": "module"
 },
 "test.unit.reductions.grid_search.utilities._quick_data": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.stack"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.utilities.assert_n_grid_search_results": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.utilities.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.reductions.moments": {
  "data": {},
  "type": "module"
 },
 "test.unit.reductions.moments.data_generator": {
  "data": {},
  "type": "module"
 },
 "test.unit.reductions.moments.data_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.data_generator.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.data_generator.simple_binary_threshold_data": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.full",
    "numpy.linspace",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_bounded_group_loss": {
  "data": {},
  "type": "module"
 },
 "test.unit.reductions.moments.test_moments_bounded_group_loss.BoundedGroupLoss": {
  "data": {
   "shadows": "fairlearn.reductions.BoundedGroupLoss"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_bounded_group_loss.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_bounded_group_loss.SquareLoss": {
  "data": {
   "shadows": "fairlearn.reductions.SquareLoss"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_bounded_group_loss.TestBoundedGroupLoss": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "test.unit.reductions.moments.test_moments_bounded_group_loss.TestBoundedGroupLoss.test_bgl_gpa_data": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "fairlearn.reductions.BoundedGroupLoss",
    "fairlearn.reductions.SquareLoss",
    "numpy.all",
    "numpy.any",
    "numpy.array",
    "numpy.inf",
    "pandas.DataFrame",
    "sklearn.linear_model.LinearRegression",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_bounded_group_loss.TestBoundedGroupLoss.test_bgl_gpa_data.predictor": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_bounded_group_loss.TestBoundedGroupLoss.test_eps": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "fairlearn.reductions.BoundedGroupLoss",
    "fairlearn.reductions.SquareLoss",
    "numpy.all",
    "numpy.inf",
    "numpy.isclose",
    "sklearn.linear_model.LinearRegression",
    "test.unit.reductions.grid_search.utilities._quick_data"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_bounded_group_loss.TestBoundedGroupLoss.test_eps.predictor": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_bounded_group_loss._quick_data": {
  "data": {
   "shadows": "test.unit.reductions.grid_search.utilities._quick_data"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_bounded_group_loss.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_bounded_group_loss.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_bounded_group_loss.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_control_features": {
  "data": {},
  "type": "module"
 },
 "test.unit.reductions.moments.test_moments_control_features.DemographicParity": {
  "data": {
   "shadows": "fairlearn.reductions.DemographicParity"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_control_features.EqualizedOdds": {
  "data": {
   "shadows": "fairlearn.reductions.EqualizedOdds"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_control_features.ErrorRateParity": {
  "data": {
   "shadows": "fairlearn.reductions.ErrorRateParity"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_control_features.FalsePositiveRateParity": {
  "data": {
   "shadows": "fairlearn.reductions.FalsePositiveRateParity"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_control_features.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_control_features.MetricFrame": {
  "data": {
   "shadows": "fairlearn.metrics.MetricFrame"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_control_features.TruePositiveRateParity": {
  "data": {
   "shadows": "fairlearn.reductions.TruePositiveRateParity"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_control_features._selected_label_compare": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "moment",
    "numpy.asarray",
    "pandas.get_dummies",
    "sklearn.linear_model.LogisticRegression",
    "test.unit.reductions.data_generators.loan_scenario_generator",
    "test.unit.reductions.moments.test_moments_control_features.f",
    "test.unit.reductions.moments.test_moments_control_features.ibs",
    "test.unit.reductions.moments.test_moments_control_features.n",
    "test.unit.reductions.moments.test_moments_control_features.pytest",
    "test.unit.reductions.moments.test_moments_control_features.sfs"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_control_features._simple_compare": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "fairlearn.metrics.MetricFrame",
    "moment",
    "numpy.asarray",
    "pandas.get_dummies",
    "sklearn.linear_model.LogisticRegression",
    "test.unit.reductions.data_generators.loan_scenario_generator",
    "test.unit.reductions.moments.test_moments_control_features.f",
    "test.unit.reductions.moments.test_moments_control_features.ibs",
    "test.unit.reductions.moments.test_moments_control_features.n",
    "test.unit.reductions.moments.test_moments_control_features.pytest",
    "test.unit.reductions.moments.test_moments_control_features.sfs"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_control_features.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_control_features.f": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "test.unit.reductions.moments.test_moments_control_features.false_positive_rate": {
  "data": {
   "shadows": "fairlearn.metrics.false_positive_rate"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_control_features.ibs": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "test.unit.reductions.moments.test_moments_control_features.loan_scenario_generator": {
  "data": {
   "shadows": "test.unit.reductions.data_generators.loan_scenario_generator"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_control_features.n": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "test.unit.reductions.moments.test_moments_control_features.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_control_features.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_control_features.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_control_features.selection_rate": {
  "data": {
   "shadows": "fairlearn.metrics.selection_rate"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_control_features.sfs": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "test.unit.reductions.moments.test_moments_control_features.test_demographic_parity": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "fairlearn.metrics.selection_rate",
    "fairlearn.reductions.DemographicParity",
    "test.unit.reductions.moments.test_moments_control_features._simple_compare"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_control_features.test_equalized_odds": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "fairlearn.metrics.false_positive_rate",
    "fairlearn.metrics.true_positive_rate",
    "fairlearn.reductions.EqualizedOdds",
    "moment",
    "test.unit.reductions.moments.test_moments_control_features._selected_label_compare"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_control_features.test_error_rate_parity": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "fairlearn.reductions.ErrorRateParity",
    "test.unit.reductions.moments.test_moments_control_features._simple_compare"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_control_features.test_error_rate_parity.err_rate": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "sklearn.metrics.accuracy_score"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_control_features.test_false_positive_parity": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "fairlearn.metrics.false_positive_rate",
    "fairlearn.reductions.FalsePositiveRateParity",
    "moment",
    "test.unit.reductions.moments.test_moments_control_features._selected_label_compare"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_control_features.test_true_positive_parity": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "fairlearn.metrics.true_positive_rate",
    "fairlearn.reductions.TruePositiveRateParity",
    "moment",
    "test.unit.reductions.moments.test_moments_control_features._selected_label_compare"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_control_features.true_positive_rate": {
  "data": {
   "shadows": "fairlearn.metrics.true_positive_rate"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity": {
  "data": {},
  "type": "module"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity.DemographicParity": {
  "data": {
   "shadows": "fairlearn.reductions.DemographicParity"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity._EVENT": {
  "data": {
   "shadows": "fairlearn.reductions._moments.moment._EVENT"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity._GROUP_ID": {
  "data": {
   "shadows": "fairlearn.reductions._moments.moment._GROUP_ID"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity._SIGN": {
  "data": {
   "shadows": "fairlearn.reductions._moments.moment._SIGN"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity.test_construct_and_load": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "events",
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions._moments.moment._EVENT",
    "fairlearn.reductions._moments.moment._GROUP_ID",
    "fairlearn.reductions._moments.moment._SIGN",
    "len",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "simple_binary_threshold_data"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity.test_project_lambda_smoke_negatives": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "events",
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions._moments.moment._EVENT",
    "fairlearn.reductions._moments.moment._GROUP_ID",
    "fairlearn.reductions._moments.moment._SIGN",
    "numpy.float64",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity.test_project_lambda_smoke_positives": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "events",
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions._moments.moment._EVENT",
    "fairlearn.reductions._moments.moment._GROUP_ID",
    "fairlearn.reductions._moments.moment._SIGN",
    "numpy.float64",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity.test_signed_weights": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "events",
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions._moments.moment._EVENT",
    "fairlearn.reductions._moments.moment._GROUP_ID",
    "fairlearn.reductions._moments.moment._SIGN",
    "numpy.array_equal",
    "numpy.concatenate",
    "numpy.full",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "simple_binary_threshold_data"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds": {
  "data": {},
  "type": "module"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds.EqualizedOdds": {
  "data": {
   "shadows": "fairlearn.reductions.EqualizedOdds"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds._EVENT": {
  "data": {
   "shadows": "fairlearn.reductions._moments.moment._EVENT"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds._GROUP_ID": {
  "data": {
   "shadows": "fairlearn.reductions._moments.moment._GROUP_ID"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds._SIGN": {
  "data": {
   "shadows": "fairlearn.reductions._moments.moment._SIGN"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds.test_construct_and_load": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "events",
    "fairlearn.reductions.EqualizedOdds",
    "fairlearn.reductions._moments.moment._EVENT",
    "fairlearn.reductions._moments.moment._GROUP_ID",
    "fairlearn.reductions._moments.moment._SIGN",
    "len",
    "numpy.array_equal",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "simple_binary_threshold_data",
    "sum"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds.test_project_lambda_smoke_negatives": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "events",
    "fairlearn.reductions.EqualizedOdds",
    "fairlearn.reductions._moments.moment._EVENT",
    "fairlearn.reductions._moments.moment._GROUP_ID",
    "fairlearn.reductions._moments.moment._SIGN",
    "numpy.float64",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds.test_project_lambda_smoke_positives": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "events",
    "fairlearn.reductions.EqualizedOdds",
    "fairlearn.reductions._moments.moment._EVENT",
    "fairlearn.reductions._moments.moment._GROUP_ID",
    "fairlearn.reductions._moments.moment._SIGN",
    "numpy.float64",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds.test_signed_weights": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "events",
    "fairlearn.reductions.EqualizedOdds",
    "fairlearn.reductions._moments.moment._EVENT",
    "fairlearn.reductions._moments.moment._GROUP_ID",
    "fairlearn.reductions._moments.moment._SIGN",
    "int",
    "len",
    "numpy.array_equal",
    "numpy.concatenate",
    "numpy.full",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "simple_binary_threshold_data",
    "sum"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.test_smoke": {
  "data": {
   "symbols_in_volume": [
    "lightgbm.LGBMClassifier",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.svm.SVC",
    "sklearn.tree.DecisionTreeClassifier",
    "test.unit.reductions.test_smoke._ESTIMATORS",
    "test.unit.reductions.test_smoke.platform"
   ]
  },
  "type": "module"
 },
 "test.unit.reductions.test_smoke.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "test.unit.reductions.test_smoke.DemographicParity": {
  "data": {
   "shadows": "fairlearn.reductions.DemographicParity"
  },
  "type": "import"
 },
 "test.unit.reductions.test_smoke.EqualizedOdds": {
  "data": {
   "shadows": "fairlearn.reductions.EqualizedOdds"
  },
  "type": "import"
 },
 "test.unit.reductions.test_smoke.ExponentiatedGradient": {
  "data": {
   "shadows": "fairlearn.reductions.ExponentiatedGradient"
  },
  "type": "import"
 },
 "test.unit.reductions.test_smoke.GridSearch": {
  "data": {
   "shadows": "fairlearn.reductions.GridSearch"
  },
  "type": "import"
 },
 "test.unit.reductions.test_smoke.LGBMClassifier": {
  "data": {
   "shadows": "lightgbm.LGBMClassifier"
  },
  "type": "import"
 },
 "test.unit.reductions.test_smoke.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "test.unit.reductions.test_smoke.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "test.unit.reductions.test_smoke._ESTIMATORS": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "test.unit.reductions.test_smoke.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.reductions.test_smoke.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.reductions.test_smoke.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "test.unit.reductions.test_smoke.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.reductions.test_smoke.test_smoke": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "Constraints",
    "Estimator",
    "Mitigator",
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions.EqualizedOdds",
    "fairlearn.reductions.ExponentiatedGradient",
    "fairlearn.reductions.GridSearch",
    "list",
    "numpy.random.choice",
    "numpy.random.normal",
    "numpy.random.seed",
    "pandas.DataFrame",
    "range",
    "test.unit.reductions.test_smoke._ESTIMATORS",
    "test.unit.reductions.test_smoke.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.test_random_state": {
  "data": {},
  "type": "module"
 },
 "test.unit.test_random_state.EqualizedOdds": {
  "data": {
   "shadows": "fairlearn.reductions.EqualizedOdds"
  },
  "type": "import"
 },
 "test.unit.test_random_state.ExponentiatedGradient": {
  "data": {
   "shadows": "fairlearn.reductions.ExponentiatedGradient"
  },
  "type": "import"
 },
 "test.unit.test_random_state.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "test.unit.test_random_state.ThresholdOptimizer": {
  "data": {
   "shadows": "fairlearn.postprocessing.ThresholdOptimizer"
  },
  "type": "import"
 },
 "test.unit.test_random_state._get_test_data": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.int",
    "pandas.DataFrame",
    "sklearn.datasets.fetch_openml",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "test.unit.test_random_state.fetch_openml": {
  "data": {
   "shadows": "sklearn.datasets.fetch_openml"
  },
  "type": "import"
 },
 "test.unit.test_random_state.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.test_random_state.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.test_random_state.test_random_state_exponentiated_gradient": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "_get_test_data",
    "fairlearn.reductions.EqualizedOdds",
    "fairlearn.reductions.ExponentiatedGradient",
    "range",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "test.unit.test_random_state.test_random_state_threshold_optimizer": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "_get_test_data",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "range",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "test.unit.test_random_state.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "test.unit.test_show_versions": {
  "data": {},
  "type": "module"
 },
 "test.unit.test_show_versions.fairlearn": {
  "data": {
   "shadows": "fairlearn"
  },
  "type": "import"
 },
 "test.unit.test_show_versions.test_smoke": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "test.unit.test_show_versions.fairlearn"
   ]
  },
  "type": "function"
 },
 "test.unit.utility_functions": {
  "data": {},
  "type": "module"
 },
 "test.unit.utility_functions.logging_all_close": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.asarray",
    "numpy.isclose",
    "numpy.logical_not",
    "numpy.where",
    "print"
   ]
  },
  "type": "function"
 },
 "test.unit.utility_functions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test_othermlpackages": {
  "data": {},
  "type": "module"
 },
 "test_othermlpackages.package_test_common": {
  "data": {},
  "type": "module"
 },
 "test_othermlpackages.package_test_common.ExponentiatedGradient": {
  "data": {
   "shadows": "fairlearn.reductions.ExponentiatedGradient"
  },
  "type": "import"
 },
 "test_othermlpackages.package_test_common.GridSearch": {
  "data": {
   "shadows": "fairlearn.reductions.GridSearch"
  },
  "type": "import"
 },
 "test_othermlpackages.package_test_common.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelEncoder"
  },
  "type": "import"
 },
 "test_othermlpackages.package_test_common.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "test_othermlpackages.package_test_common.ThresholdOptimizer": {
  "data": {
   "shadows": "fairlearn.postprocessing.ThresholdOptimizer"
  },
  "type": "import"
 },
 "test_othermlpackages.package_test_common.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "test_othermlpackages.package_test_common.demographic_parity_difference": {
  "data": {
   "shadows": "fairlearn.metrics.demographic_parity_difference"
  },
  "type": "import"
 },
 "test_othermlpackages.package_test_common.fetch_adult": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.get_dummies",
    "sklearn.datasets.fetch_openml",
    "sklearn.model_selection.train_test_split",
    "sklearn.preprocessing.LabelEncoder",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "test_othermlpackages.package_test_common.fetch_openml": {
  "data": {
   "shadows": "sklearn.datasets.fetch_openml"
  },
  "type": "import"
 },
 "test_othermlpackages.package_test_common.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test_othermlpackages.package_test_common.run_expgrad_classification": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "abs",
    "fairlearn.reductions.ExponentiatedGradient",
    "len",
    "test_othermlpackages.package_test_common.copy",
    "test_othermlpackages.package_test_common.fetch_adult"
   ]
  },
  "type": "function"
 },
 "test_othermlpackages.package_test_common.run_gridsearch_classification": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "abs",
    "fairlearn.reductions.GridSearch",
    "len",
    "test_othermlpackages.package_test_common.copy",
    "test_othermlpackages.package_test_common.fetch_adult"
   ]
  },
  "type": "function"
 },
 "test_othermlpackages.package_test_common.run_thresholdoptimizer_classification": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "fairlearn.metrics.demographic_parity_difference",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "test_othermlpackages.package_test_common.copy",
    "test_othermlpackages.package_test_common.fetch_adult"
   ]
  },
  "type": "function"
 },
 "test_othermlpackages.package_test_common.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "test_othermlpackages.test_lightgbm": {
  "data": {},
  "type": "module"
 },
 "test_othermlpackages.test_lightgbm.DemographicParity": {
  "data": {
   "shadows": "fairlearn.reductions.DemographicParity"
  },
  "type": "import"
 },
 "test_othermlpackages.test_lightgbm.lgb": {
  "data": {
   "shadows": "lightgbm"
  },
  "type": "import"
 },
 "test_othermlpackages.test_lightgbm.ptc": {
  "data": {
   "shadows": "package_test_common"
  },
  "type": "import"
 },
 "test_othermlpackages.test_lightgbm.test_expgrad_classification": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "fairlearn.reductions.DemographicParity",
    "lightgbm.LGBMClassifier"
   ]
  },
  "type": "function"
 },
 "test_othermlpackages.test_lightgbm.test_gridsearch_classification": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "fairlearn.reductions.DemographicParity",
    "lightgbm.LGBMClassifier"
   ]
  },
  "type": "function"
 },
 "test_othermlpackages.test_lightgbm.test_thresholdoptimizer_classification": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "lightgbm.LGBMClassifier"
   ]
  },
  "type": "function"
 },
 "test_othermlpackages.test_pytorch": {
  "data": {},
  "type": "module"
 },
 "test_othermlpackages.test_pytorch.DemographicParity": {
  "data": {
   "shadows": "fairlearn.reductions.DemographicParity"
  },
  "type": "import"
 },
 "test_othermlpackages.test_pytorch.NeuralNetClassifier": {
  "data": {
   "shadows": "skorch.NeuralNetClassifier"
  },
  "type": "import"
 },
 "test_othermlpackages.test_pytorch.create_model": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "SampleWeightNeuralNet",
    "test_othermlpackages.test_pytorch.torch",
    "torch.nn.BCELoss",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test_othermlpackages.test_pytorch.create_model.ClassificationModel": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "test_othermlpackages.test_pytorch.create_model.ClassificationModel.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "torch.nn.ReLU",
    "torch.nn.Sequential",
    "torch.nn.Sigmoid"
   ]
  },
  "type": "function"
 },
 "test_othermlpackages.test_pytorch.create_model.ClassificationModel.forward": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "test_othermlpackages.test_pytorch.create_model.SampleWeightNeuralNet": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "skorch.NeuralNetClassifier"
   ]
  },
  "type": "class"
 },
 "test_othermlpackages.test_pytorch.create_model.SampleWeightNeuralNet.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "test_othermlpackages.test_pytorch.create_model.SampleWeightNeuralNet.fit": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ones_like",
    "pandas.DataFrame",
    "pandas.Series",
    "super"
   ]
  },
  "type": "function"
 },
 "test_othermlpackages.test_pytorch.create_model.SampleWeightNeuralNet.get_loss": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "test_othermlpackages.test_pytorch.create_model.SampleWeightNeuralNet.predict": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "isinstance",
    "numpy.float",
    "pandas.DataFrame",
    "pandas.Series",
    "super"
   ]
  },
  "type": "function"
 },
 "test_othermlpackages.test_pytorch.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "test_othermlpackages.test_pytorch.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test_othermlpackages.test_pytorch.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test_othermlpackages.test_pytorch.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test_othermlpackages.test_pytorch.ptc": {
  "data": {
   "shadows": "package_test_common"
  },
  "type": "import"
 },
 "test_othermlpackages.test_pytorch.test_expgrad_classification": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "fairlearn.reductions.DemographicParity",
    "test_othermlpackages.test_pytorch.create_model"
   ]
  },
  "type": "function"
 },
 "test_othermlpackages.test_pytorch.test_gridsearch_classification": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "fairlearn.reductions.DemographicParity",
    "test_othermlpackages.test_pytorch.create_model"
   ]
  },
  "type": "function"
 },
 "test_othermlpackages.test_pytorch.test_thresholdoptimizer_classification": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "test_othermlpackages.test_pytorch.create_model"
   ]
  },
  "type": "function"
 },
 "test_othermlpackages.test_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test_othermlpackages.test_tensorflow": {
  "data": {},
  "type": "module"
 },
 "test_othermlpackages.test_tensorflow.DemographicParity": {
  "data": {
   "shadows": "fairlearn.reductions.DemographicParity"
  },
  "type": "import"
 },
 "test_othermlpackages.test_tensorflow.Dense": {
  "data": {
   "shadows": "tensorflow.keras.layers.Dense"
  },
  "type": "import"
 },
 "test_othermlpackages.test_tensorflow.KerasClassifier": {
  "data": {
   "shadows": "tensorflow.keras.wrappers.scikit_learn.KerasClassifier"
  },
  "type": "import"
 },
 "test_othermlpackages.test_tensorflow.Sequential": {
  "data": {
   "shadows": "tensorflow.keras.models.Sequential"
  },
  "type": "import"
 },
 "test_othermlpackages.test_tensorflow.create_model": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.models.Sequential"
   ]
  },
  "type": "function"
 },
 "test_othermlpackages.test_tensorflow.ptc": {
  "data": {
   "shadows": "package_test_common"
  },
  "type": "import"
 },
 "test_othermlpackages.test_tensorflow.test_expgrad_classification": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "fairlearn.reductions.DemographicParity",
    "tensorflow.keras.wrappers.scikit_learn.KerasClassifier",
    "test_othermlpackages.test_tensorflow.create_model"
   ]
  },
  "type": "function"
 },
 "test_othermlpackages.test_tensorflow.test_gridsearch_classification": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "fairlearn.reductions.DemographicParity",
    "tensorflow.keras.wrappers.scikit_learn.KerasClassifier",
    "test_othermlpackages.test_tensorflow.create_model"
   ]
  },
  "type": "function"
 },
 "test_othermlpackages.test_tensorflow.test_thresholdoptimizer_classification": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.keras.wrappers.scikit_learn.KerasClassifier",
    "test_othermlpackages.test_tensorflow.create_model"
   ]
  },
  "type": "function"
 },
 "test_othermlpackages.test_xgboost": {
  "data": {},
  "type": "module"
 },
 "test_othermlpackages.test_xgboost.DemographicParity": {
  "data": {
   "shadows": "fairlearn.reductions.DemographicParity"
  },
  "type": "import"
 },
 "test_othermlpackages.test_xgboost.ptc": {
  "data": {
   "shadows": "package_test_common"
  },
  "type": "import"
 },
 "test_othermlpackages.test_xgboost.test_expgrad_classification": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "fairlearn.reductions.DemographicParity",
    "xgboost.XGBClassifier"
   ]
  },
  "type": "function"
 },
 "test_othermlpackages.test_xgboost.test_gridsearch_classification": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "fairlearn.reductions.DemographicParity",
    "xgboost.XGBClassifier"
   ]
  },
  "type": "function"
 },
 "test_othermlpackages.test_xgboost.test_thresholdoptimizer_classification": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "xgboost.XGBClassifier"
   ]
  },
  "type": "function"
 },
 "test_othermlpackages.test_xgboost.xgb": {
  "data": {
   "shadows": "xgboost"
  },
  "type": "import"
 }
}