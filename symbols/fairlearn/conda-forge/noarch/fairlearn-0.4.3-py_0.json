{
 "fairlearn": {
  "lineno": null,
  "symbols_in_volume": [
   "atexit.register",
   "logging.FileHandler",
   "logging.INFO",
   "logging.getLogger",
   "os.environ",
   "os.environ.get",
   "os.environ.keys",
   "os.makedirs",
   "os.path.dirname",
   "sys.stderr"
  ],
  "type": "module"
 },
 "fairlearn._input_validation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn._input_validation._get_matrix_shape": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "fairlearn._input_validation._make_vector": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn._input_validation._validate_and_reformat_reductions_input": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.unique",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "fairlearn.close_handler": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.metrics._balanced_root_mean_squared_error": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.metrics._balanced_root_mean_squared_error.balanced_root_mean_squared_error": {
  "lineno": 13,
  "symbols_in_volume": [
   "math.sqrt",
   "numpy.array_equal",
   "numpy.ones",
   "numpy.unique",
   "numpy.zeros",
   "sklearn.metrics.mean_squared_error"
  ],
  "type": "function"
 },
 "fairlearn.metrics._extra_metrics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.metrics._extra_metrics.fallout_rate": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._extra_metrics.miss_rate": {
  "lineno": 33,
  "symbols_in_volume": [
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "fairlearn.metrics._extra_metrics.specificity_score": {
  "lineno": 18,
  "symbols_in_volume": [
   "sklearn.metrics.confusion_matrix"
  ],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_result": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.metrics._group_metric_result.GroupMetricResult": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.metrics._group_metric_result.GroupMetricResult.__eq__": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.array_equal",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_result.GroupMetricResult.__init__": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_result.GroupMetricResult.__ne__": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_result.GroupMetricResult.argmax_set": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_result.GroupMetricResult.argmin_set": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_result.GroupMetricResult.by_group": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_result.GroupMetricResult.maximum": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_result.GroupMetricResult.minimum": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_result.GroupMetricResult.overall": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_result.GroupMetricResult.range": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_result.GroupMetricResult.range_ratio": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet.__eq__": {
  "lineno": 324,
  "symbols_in_volume": [
   "numpy.array_equal"
  ],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet.__init__": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet.__ne__": {
  "lineno": 337,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet.check_consistency": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet.compute": {
  "lineno": 216,
  "symbols_in_volume": [
   "numpy.unique"
  ],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet.from_dict": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet.group_names": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet.group_title": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet.groups": {
  "lineno": 151,
  "symbols_in_volume": [
   "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d",
   "numpy.array",
   "numpy.array_equal",
   "numpy.unique"
  ],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet.metrics": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet.model_type": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet.to_dict": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet.y_pred": {
  "lineno": 139,
  "symbols_in_volume": [
   "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d"
  ],
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet.y_true": {
  "lineno": 130,
  "symbols_in_volume": [
   "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d"
  ],
  "type": "function"
 },
 "fairlearn.metrics._input_manipulations": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.squeeze"
  ],
  "type": "function"
 },
 "fairlearn.metrics._mean_predictions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.metrics._mean_predictions.mean_overprediction": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.ones"
  ],
  "type": "function"
 },
 "fairlearn.metrics._mean_predictions.mean_prediction": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.ones"
  ],
  "type": "function"
 },
 "fairlearn.metrics._mean_predictions.mean_underprediction": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.ones"
  ],
  "type": "function"
 },
 "fairlearn.metrics._metrics_engine": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.metrics._metrics_engine._check_array_sizes": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._metrics_engine.make_group_metric": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._metrics_engine.make_group_metric.wrapper": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._metrics_engine.metric_by_group": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.unique"
  ],
  "type": "function"
 },
 "fairlearn.metrics._selection_rate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.metrics._selection_rate.group_selection_rate": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._selection_rate.group_selection_rate.internal_sel_wrapper": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._selection_rate.selection_rate": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.dot",
   "numpy.ones",
   "numpy.squeeze"
  ],
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.metrics.max_error",
   "sklearn.metrics.mean_absolute_error",
   "sklearn.metrics.mean_squared_log_error",
   "sklearn.metrics.median_absolute_error"
  ],
  "type": "module"
 },
 "fairlearn.metrics._skm_wrappers.group_accuracy_score": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_accuracy_score.internal_acc_wrapper": {
  "lineno": 19,
  "symbols_in_volume": [
   "sklearn.metrics.accuracy_score"
  ],
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_confusion_matrix": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_confusion_matrix.internal_cm_wrapper": {
  "lineno": 37,
  "symbols_in_volume": [
   "sklearn.metrics.confusion_matrix"
  ],
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_mean_squared_error": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_mean_squared_error.internal_mse_wrapper": {
  "lineno": 131,
  "symbols_in_volume": [
   "sklearn.metrics.mean_squared_error"
  ],
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_precision_score": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_precision_score.internal_prec_wrapper": {
  "lineno": 55,
  "symbols_in_volume": [
   "sklearn.metrics.precision_score"
  ],
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_r2_score": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_r2_score.internal_r2_wrapper": {
  "lineno": 170,
  "symbols_in_volume": [
   "sklearn.metrics.r2_score"
  ],
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_recall_score": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_recall_score.internal_recall_wrapper": {
  "lineno": 73,
  "symbols_in_volume": [
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_roc_auc_score": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_roc_auc_score.internal_ras_wrapper": {
  "lineno": 92,
  "symbols_in_volume": [
   "sklearn.metrics.roc_auc_score"
  ],
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_root_mean_squared_error": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_root_mean_squared_error.internal_rmse_wrapper": {
  "lineno": 151,
  "symbols_in_volume": [
   "math.sqrt",
   "sklearn.metrics.mean_squared_error"
  ],
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_zero_one_loss": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_zero_one_loss.internal_zol_wrapper": {
  "lineno": 111,
  "symbols_in_volume": [
   "sklearn.metrics.zero_one_loss"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.postprocessing._constants": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.postprocessing._curve_plotting_utilities": {
  "lineno": null,
  "symbols_in_volume": [
   "matplotlib.cm.ScalarMappable"
  ],
  "type": "module"
 },
 "fairlearn.postprocessing._curve_plotting_utilities._get_debug_color": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._curve_plotting_utilities.plot_curve": {
  "lineno": 49,
  "symbols_in_volume": [
   "matplotlib.pyplot.plot"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._curve_plotting_utilities.plot_overlap": {
  "lineno": 43,
  "symbols_in_volume": [
   "matplotlib.pyplot.plot"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._curve_plotting_utilities.plot_solution_and_show_plot": {
  "lineno": 31,
  "symbols_in_volume": [
   "matplotlib.pyplot.axvline",
   "matplotlib.pyplot.legend",
   "matplotlib.pyplot.plot",
   "matplotlib.pyplot.show",
   "matplotlib.pyplot.xlabel",
   "matplotlib.pyplot.ylabel"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._interpolated_prediction": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "fairlearn.postprocessing._interpolated_prediction.InterpolatedPredictor": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.postprocessing._interpolated_prediction.InterpolatedPredictor.__init__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._interpolated_prediction.InterpolatedPredictor.__repr__": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._interpolated_prediction.InterpolatedPredictor.predict": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._postprocessing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.postprocessing._postprocessing.PostProcessing": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.postprocessing._postprocessing.PostProcessing.__init__": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._postprocessing.PostProcessing._pmf_predict": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._postprocessing.PostProcessing._validate_estimator": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._postprocessing.PostProcessing._validate_predictor": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._postprocessing.PostProcessing.fit": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._postprocessing.PostProcessing.predict": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._roc_curve_utilities": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.postprocessing._roc_curve_utilities._calculate_roc_points": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._roc_curve_utilities._filter_points_to_get_convex_hull": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._roc_curve_utilities._get_counts": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._roc_curve_utilities._get_roc": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._roc_curve_utilities._get_scores_labels_and_counts": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._roc_curve_utilities._interpolate_curve": {
  "lineno": 72,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_operation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation.__init__": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation.__repr__": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation.get_predictor_from_operation": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation.operator": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation.threshold": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer": {
  "lineno": 47,
  "symbols_in_volume": [
   "fairlearn.postprocessing.PostProcessing"
  ],
  "type": "class"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer.__init__": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer._pmf_predict": {
  "lineno": 156,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer._validate_input_data": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.unique",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer._validate_post_processed_predictor_is_fitted": {
  "lineno": 176,
  "symbols_in_volume": [
   "sklearn.exceptions.NotFittedError"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer.fit": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer.predict": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.random.rand",
   "random.seed"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer._convert_to_ndarray": {
  "lineno": 454,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer._reformat_and_group_data": {
  "lineno": 477,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer._reformat_data_into_dict": {
  "lineno": 516,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer._threshold_optimization_demographic_parity": {
  "lineno": 206,
  "symbols_in_volume": [
   "numpy.linspace"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer._threshold_optimization_equalized_odds": {
  "lineno": 320,
  "symbols_in_volume": [
   "numpy.amin",
   "numpy.linspace",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer._vectorized_prediction": {
  "lineno": 430,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._exponentiated_gradient": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._exponentiated_gradient._constants": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._exponentiated_gradient._exponentiated_gradient_result": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._exponentiated_gradient._exponentiated_gradient_result.ExponentiatedGradientResult": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._exponentiated_gradient._exponentiated_gradient_result.ExponentiatedGradientResult.__init__": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._exponentiated_gradient_result.ExponentiatedGradientResult._as_dict": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._exponentiated_gradient_result.ExponentiatedGradientResult.best_classifier": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._exponentiated_gradient_result.ExponentiatedGradientResult.best_gap": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._exponentiated_gradient_result.ExponentiatedGradientResult.best_t": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._exponentiated_gradient_result.ExponentiatedGradientResult.classifiers": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._exponentiated_gradient_result.ExponentiatedGradientResult.last_t": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._exponentiated_gradient_result.ExponentiatedGradientResult.n_oracle_calls": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._exponentiated_gradient_result.ExponentiatedGradientResult.oracle_calls_execution_time": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._exponentiated_gradient_result.ExponentiatedGradientResult.weights": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._GapResult": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._GapResult.__init__": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._GapResult.gap": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian.__init__": {
  "lineno": 38,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pickle.dumps"
  ],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian._eval": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian._eval_from_error_gamma": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian.best_h": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.PINF",
   "pickle.loads",
   "time.time"
  ],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian.best_h.h": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian.eval_gap": {
  "lineno": 94,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian.solve_linprog": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.ones",
   "numpy.zeros",
   "pandas.Series",
   "scipy.optimize.linprog"
  ],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient": {
  "lineno": 25,
  "symbols_in_volume": [
   "fairlearn.reductions.Reduction"
  ],
  "type": "class"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient.__init__": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient._format_results": {
  "lineno": 195,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient._format_results.best_classifier": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient._pmf_predict": {
  "lineno": 184,
  "symbols_in_volume": [
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient.fit": {
  "lineno": 67,
  "symbols_in_volume": [
   "fairlearn._input_validation._validate_and_reformat_reductions_input",
   "numpy.PINF",
   "numpy.exp",
   "numpy.sqrt",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient.predict": {
  "lineno": 168,
  "symbols_in_volume": [
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient._mean_pred": {
  "lineno": 17,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "fairlearn.reductions._grid_search": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._grid_search.grid_search": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch": {
  "lineno": 82,
  "symbols_in_volume": [
   "fairlearn.reductions.Reduction"
  ],
  "type": "class"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.__init__": {
  "lineno": 120,
  "symbols_in_volume": [
   "fairlearn.reductions._moments.Moment"
  ],
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.all_results": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.best_result": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.fit": {
  "lineno": 165,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn._input_validation._validate_and_reformat_reductions_input",
   "fairlearn.reductions._moments.ClassificationMoment",
   "numpy.unique",
   "time.time"
  ],
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.fit.loss_fct": {
  "lineno": 255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.fit.predict_fct": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.predict": {
  "lineno": 263,
  "symbols_in_volume": [
   "fairlearn._NO_PREDICT_BEFORE_FIT",
   "sklearn.exceptions.NotFittedError"
  ],
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.predict_proba": {
  "lineno": 276,
  "symbols_in_volume": [
   "fairlearn._NO_PREDICT_BEFORE_FIT",
   "sklearn.exceptions.NotFittedError"
  ],
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search._GridGenerator": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._grid_search.grid_search._GridGenerator.__init__": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.floor",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search._GridGenerator.accumulate_integer_grid": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search._GridGenerator.build_integer_grid": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search_result": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._grid_search.grid_search_result.GridSearchResult": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._grid_search.grid_search_result.GridSearchResult.__init__": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search_result.GridSearchResult.gamma": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search_result.GridSearchResult.lambda_vec": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search_result.GridSearchResult.objective": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search_result.GridSearchResult.oracle_call_execution_time": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search_result.GridSearchResult.predictor": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._moments.bounded_group_loss": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._moments.bounded_group_loss.AbsoluteLoss": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.AbsoluteLoss.__init__": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.abs"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.AbsoluteLoss.eval": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.clip"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.AverageLossMoment": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.AverageLossMoment.__init__": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.__init__": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.default_objective": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.gamma": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.load_data": {
  "lineno": 22,
  "symbols_in_volume": [
   "fairlearn._input_validation._KW_SENSITIVE_FEATURES",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.project_lambda": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.signed_weights": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.GroupLossMoment": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.GroupLossMoment.__init__": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.SquareLoss": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.SquareLoss.__init__": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.SquareLoss.eval": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.clip"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ZeroOneLoss": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ZeroOneLoss.__init__": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.conditional_selection_rate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.ConditionalSelectionRate": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.ConditionalSelectionRate.default_objective": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.ConditionalSelectionRate.gamma": {
  "lineno": 69,
  "symbols_in_volume": [
   "pandas.concat"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.ConditionalSelectionRate.load_data": {
  "lineno": 36,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.ConditionalSelectionRate.project_lambda": {
  "lineno": 85,
  "symbols_in_volume": [
   "pandas.concat"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.ConditionalSelectionRate.signed_weights": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.DemographicParity": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.DemographicParity.load_data": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.EqualizedOdds": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.EqualizedOdds.load_data": {
  "lineno": 176,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.error_rate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._moments.error_rate.ErrorRate": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.error_rate.ErrorRate.gamma": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.error_rate.ErrorRate.load_data": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.error_rate.ErrorRate.project_lambda": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.error_rate.ErrorRate.signed_weights": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.moment": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._moments.moment.ClassificationMoment": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.moment.LossMoment": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.moment.LossMoment.__init__": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._moments.moment.Moment.__init__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment.gamma": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment.load_data": {
  "lineno": 28,
  "symbols_in_volume": [
   "fairlearn._input_validation._KW_SENSITIVE_FEATURES",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment.project_lambda": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment.signed_weights": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment.total_samples": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._reduction": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.reductions._reduction.Reduction": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.reductions._reduction.Reduction.fit": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._reduction.Reduction.predict": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.reductions._reduction.Reduction.predict_proba": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fairlearn.widget": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.widget._fairlearn_dashboard": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard.__init__": {
  "lineno": 37,
  "symbols_in_volume": [
   "IPython.display.display",
   "fairlearn.metrics.group_accuracy_score",
   "fairlearn.metrics.group_balanced_root_mean_squared_error",
   "fairlearn.metrics.group_fallout_rate",
   "fairlearn.metrics.group_max_error",
   "fairlearn.metrics.group_mean_absolute_error",
   "fairlearn.metrics.group_mean_overprediction",
   "fairlearn.metrics.group_mean_prediction",
   "fairlearn.metrics.group_mean_squared_error",
   "fairlearn.metrics.group_mean_underprediction",
   "fairlearn.metrics.group_median_absolute_error",
   "fairlearn.metrics.group_miss_rate",
   "fairlearn.metrics.group_precision_score",
   "fairlearn.metrics.group_r2_score",
   "fairlearn.metrics.group_recall_score",
   "fairlearn.metrics.group_roc_auc_score",
   "fairlearn.metrics.group_root_mean_squared_error",
   "fairlearn.metrics.group_selection_rate",
   "fairlearn.metrics.group_specificity_score",
   "fairlearn.metrics.group_zero_one_loss",
   "numpy.shape"
  ],
  "type": "function"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard._convert_to_list": {
  "lineno": 225,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard._on_request": {
  "lineno": 188,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard._sanitize_data_shape": {
  "lineno": 218,
  "symbols_in_volume": [
   "numpy.shape"
  ],
  "type": "function"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard._show": {
  "lineno": 215,
  "symbols_in_volume": [
   "IPython.display.display"
  ],
  "type": "function"
 },
 "fairlearn.widget._fairlearn_widget": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fairlearn.widget._fairlearn_widget.FairlearnWidget": {
  "lineno": 10,
  "symbols_in_volume": [
   "ipywidgets.DOMWidget",
   "ipywidgets.register",
   "traitlets.Dict",
   "traitlets.Unicode"
  ],
  "type": "class"
 },
 "fairlearn.widget._jupyter_nbextension_paths": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.notebooks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.notebooks.test_notebooks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.notebooks.test_notebooks.ScrapSpec": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.notebooks.test_notebooks.ScrapSpec.__init__": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.notebooks.test_notebooks.ScrapSpec.code": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.notebooks.test_notebooks.ScrapSpec.expected": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.notebooks.test_notebooks.append_scrapbook_commands": {
  "lineno": 34,
  "symbols_in_volume": [
   "nbformat.NO_CONVERT",
   "nbformat.read",
   "nbformat.v4.new_code_cell",
   "nbformat.write"
  ],
  "type": "function"
 },
 "test.notebooks.test_notebooks.assay_one_notebook": {
  "lineno": 53,
  "symbols_in_volume": [
   "papermill.execute_notebook",
   "scrapbook.read_notebook"
  ],
  "type": "function"
 },
 "test.notebooks.test_notebooks.test_binary_classification_on_compas_dataset": {
  "lineno": 105,
  "symbols_in_volume": [
   "pytest.approx",
   "pytest.mark.notebooks"
  ],
  "type": "function"
 },
 "test.notebooks.test_notebooks.test_grid_search_for_binary_classification": {
  "lineno": 92,
  "symbols_in_volume": [
   "pytest.approx",
   "pytest.mark.notebooks"
  ],
  "type": "function"
 },
 "test.notebooks.test_notebooks.test_grid_search_with_census_data": {
  "lineno": 118,
  "symbols_in_volume": [
   "pytest.mark.notebooks"
  ],
  "type": "function"
 },
 "test.notebooks.test_notebooks.test_group_metrics_notebook": {
  "lineno": 79,
  "symbols_in_volume": [
   "pytest.mark.notebooks"
  ],
  "type": "function"
 },
 "test.notebooks.test_notebooks.test_mitigating_disparities_in_ranking_from_binary_data": {
  "lineno": 126,
  "symbols_in_volume": [
   "pytest.approx",
   "pytest.mark.notebooks"
  ],
  "type": "function"
 },
 "test.unit": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.input_convertors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.input_convertors.ensure_dataframe": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.input_convertors.ensure_list": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.input_convertors.ensure_ndarray": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.input_convertors.ensure_ndarray_2d": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.expand_dims"
  ],
  "type": "function"
 },
 "test.unit.input_convertors.ensure_series": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.metrics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.test_all_correct": {
  "lineno": 10,
  "symbols_in_volume": [
   "fairlearn.metrics.balanced_root_mean_squared_error"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.test_all_incorrect": {
  "lineno": 19,
  "symbols_in_volume": [
   "fairlearn.metrics.balanced_root_mean_squared_error"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.test_probability_predict": {
  "lineno": 41,
  "symbols_in_volume": [
   "fairlearn.metrics.balanced_root_mean_squared_error"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.test_weighted": {
  "lineno": 28,
  "symbols_in_volume": [
   "fairlearn.metrics.balanced_root_mean_squared_error",
   "math.sqrt"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.test_y_true_not_0_1": {
  "lineno": 53,
  "symbols_in_volume": [
   "fairlearn.metrics.balanced_root_mean_squared_error",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_extra_metrics.test_fallout_all_correct": {
  "lineno": 80,
  "symbols_in_volume": [
   "fairlearn.metrics.fallout_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_fallout_none_correct": {
  "lineno": 88,
  "symbols_in_volume": [
   "fairlearn.metrics.fallout_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_fallout_some_correct": {
  "lineno": 96,
  "symbols_in_volume": [
   "fairlearn.metrics.fallout_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_miss_all_correct": {
  "lineno": 45,
  "symbols_in_volume": [
   "fairlearn.metrics.miss_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_miss_none_correct": {
  "lineno": 53,
  "symbols_in_volume": [
   "fairlearn.metrics.miss_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_miss_some_correct": {
  "lineno": 69,
  "symbols_in_volume": [
   "fairlearn.metrics.miss_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_miss_with_false_positive": {
  "lineno": 61,
  "symbols_in_volume": [
   "fairlearn.metrics.miss_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_specificity_all_correct": {
  "lineno": 10,
  "symbols_in_volume": [
   "fairlearn.metrics.specificity_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_specificity_none_correct": {
  "lineno": 18,
  "symbols_in_volume": [
   "fairlearn.metrics.specificity_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_specificity_some_correct": {
  "lineno": 26,
  "symbols_in_volume": [
   "fairlearn.metrics.specificity_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_specificity_some_correct_with_false_negative": {
  "lineno": 34,
  "symbols_in_volume": [
   "fairlearn.metrics.specificity_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_result": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_group_metric_result.TestComparisons": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_group_metric_result.TestComparisons.test_complex_equality": {
  "lineno": 32,
  "symbols_in_volume": [
   "fairlearn.metrics.group_confusion_matrix"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_result.TestComparisons.test_complex_inequality": {
  "lineno": 41,
  "symbols_in_volume": [
   "fairlearn.metrics.group_confusion_matrix"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_result.TestComparisons.test_mixed_types": {
  "lineno": 50,
  "symbols_in_volume": [
   "fairlearn.metrics.group_accuracy_score",
   "fairlearn.metrics.group_confusion_matrix"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_result.TestComparisons.test_simple_equality": {
  "lineno": 14,
  "symbols_in_volume": [
   "fairlearn.metrics.group_accuracy_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_result.TestComparisons.test_simple_inequality": {
  "lineno": 23,
  "symbols_in_volume": [
   "fairlearn.metrics.group_accuracy_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_group_metric_set.TestConsistencyCheck": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_group_metric_set.TestConsistencyCheck.test_group_names_do_not_match_groups": {
  "lineno": 156,
  "symbols_in_volume": [
   "fairlearn.metrics.GroupMetricResult",
   "fairlearn.metrics.GroupMetricSet",
   "fairlearn.metrics.GroupMetricSet.BINARY_CLASSIFICATION",
   "fairlearn.metrics.GroupMetricSet.GROUP_ACCURACY_SCORE",
   "fairlearn.metrics.GroupMetricSet.GROUP_MISS_RATE",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestConsistencyCheck.test_length_mismatch_groups": {
  "lineno": 131,
  "symbols_in_volume": [
   "fairlearn.metrics.GroupMetricSet",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestConsistencyCheck.test_length_mismatch_y_pred": {
  "lineno": 121,
  "symbols_in_volume": [
   "fairlearn.metrics.GroupMetricSet",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestConsistencyCheck.test_length_mismatch_y_true": {
  "lineno": 111,
  "symbols_in_volume": [
   "fairlearn.metrics.GroupMetricSet",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestConsistencyCheck.test_metric_has_bad_groups": {
  "lineno": 141,
  "symbols_in_volume": [
   "fairlearn.metrics.GroupMetricResult",
   "fairlearn.metrics.GroupMetricSet",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestDictionaryConversions": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_group_metric_set.TestDictionaryConversions.test_round_trip_smoke": {
  "lineno": 233,
  "symbols_in_volume": [
   "fairlearn.metrics.GroupMetricResult",
   "fairlearn.metrics.GroupMetricSet",
   "fairlearn.metrics.GroupMetricSet.BINARY_CLASSIFICATION",
   "fairlearn.metrics.GroupMetricSet.GROUP_ACCURACY_SCORE",
   "fairlearn.metrics.GroupMetricSet.GROUP_MISS_RATE",
   "fairlearn.metrics.GroupMetricSet.from_dict"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestDictionaryConversions.test_to_dict_smoke": {
  "lineno": 187,
  "symbols_in_volume": [
   "fairlearn.metrics.GroupMetricResult",
   "fairlearn.metrics.GroupMetricSet",
   "fairlearn.metrics.GroupMetricSet.BINARY_CLASSIFICATION",
   "fairlearn.metrics.GroupMetricSet.GROUP_ACCURACY_SCORE",
   "fairlearn.metrics.GroupMetricSet.GROUP_MISS_RATE",
   "numpy.array_equal"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties.test_group_names": {
  "lineno": 66,
  "symbols_in_volume": [
   "fairlearn.metrics.GroupMetricSet"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties.test_group_names_not_list": {
  "lineno": 72,
  "symbols_in_volume": [
   "fairlearn.metrics.GroupMetricSet",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties.test_group_names_values_not_string": {
  "lineno": 79,
  "symbols_in_volume": [
   "fairlearn.metrics.GroupMetricSet",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties.test_groups": {
  "lineno": 39,
  "symbols_in_volume": [
   "fairlearn.metrics.GroupMetricSet",
   "numpy.array_equal",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties.test_groups_not_from_zero": {
  "lineno": 45,
  "symbols_in_volume": [
   "fairlearn.metrics.GroupMetricSet",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties.test_groups_not_sequential": {
  "lineno": 52,
  "symbols_in_volume": [
   "fairlearn.metrics.GroupMetricSet",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties.test_groups_strings": {
  "lineno": 59,
  "symbols_in_volume": [
   "fairlearn.metrics.GroupMetricSet",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties.test_metrics": {
  "lineno": 86,
  "symbols_in_volume": [
   "fairlearn.metrics.GroupMetricResult",
   "fairlearn.metrics.GroupMetricSet"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties.test_metrics_keys_not_string": {
  "lineno": 93,
  "symbols_in_volume": [
   "fairlearn.metrics.GroupMetricResult",
   "fairlearn.metrics.GroupMetricSet",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties.test_metrics_values_not_groupmetricresult": {
  "lineno": 102,
  "symbols_in_volume": [
   "fairlearn.metrics.GroupMetricSet",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties.test_model_type_not_allowed": {
  "lineno": 19,
  "symbols_in_volume": [
   "fairlearn.metrics.GroupMetricSet",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties.test_model_type_property": {
  "lineno": 12,
  "symbols_in_volume": [
   "fairlearn.metrics.GroupMetricSet",
   "fairlearn.metrics.GroupMetricSet._allowed_model_types"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties.test_y_pred": {
  "lineno": 33,
  "symbols_in_volume": [
   "fairlearn.metrics.GroupMetricSet",
   "numpy.array_equal",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties.test_y_true": {
  "lineno": 27,
  "symbols_in_volume": [
   "fairlearn.metrics.GroupMetricSet",
   "numpy.array_equal",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.test_compute_binary": {
  "lineno": 272,
  "symbols_in_volume": [
   "fairlearn.metrics.GroupMetricSet",
   "fairlearn.metrics.GroupMetricSet.BINARY_CLASSIFICATION",
   "fairlearn.metrics.GroupMetricSet.GROUP_ACCURACY_SCORE.by_group",
   "fairlearn.metrics.GroupMetricSet.GROUP_ACCURACY_SCORE.overall",
   "fairlearn.metrics.group_accuracy_score",
   "numpy.array_equal",
   "numpy.unique"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.test_compute_regression": {
  "lineno": 290,
  "symbols_in_volume": [
   "fairlearn.metrics.GroupMetricSet",
   "fairlearn.metrics.GroupMetricSet.GROUP_BALANCED_ROOT_MEAN_SQUARED_ERROR.by_group",
   "fairlearn.metrics.GroupMetricSet.GROUP_BALANCED_ROOT_MEAN_SQUARED_ERROR.overall",
   "fairlearn.metrics.GroupMetricSet.REGRESSION",
   "fairlearn.metrics.group_balanced_root_mean_squared_error",
   "numpy.array_equal",
   "numpy.unique"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.test_equality": {
  "lineno": 341,
  "symbols_in_volume": [
   "fairlearn.metrics.GroupMetricSet",
   "fairlearn.metrics.GroupMetricSet.BINARY_CLASSIFICATION"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.test_groups_alphabetical": {
  "lineno": 321,
  "symbols_in_volume": [
   "fairlearn.metrics.GroupMetricSet",
   "fairlearn.metrics.GroupMetricSet.BINARY_CLASSIFICATION",
   "fairlearn.metrics.GroupMetricSet.GROUP_ACCURACY_SCORE",
   "numpy.array_equal"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.test_groups_not_sequential_int": {
  "lineno": 308,
  "symbols_in_volume": [
   "fairlearn.metrics.GroupMetricSet",
   "fairlearn.metrics.GroupMetricSet.BINARY_CLASSIFICATION",
   "numpy.array_equal"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.test_inequality": {
  "lineno": 352,
  "symbols_in_volume": [
   "fairlearn.metrics.GroupMetricSet",
   "fairlearn.metrics.GroupMetricSet.BINARY_CLASSIFICATION"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers": {
  "lineno": null,
  "symbols_in_volume": [
   "fairlearn.metrics.group_accuracy_score",
   "fairlearn.metrics.group_confusion_matrix",
   "fairlearn.metrics.group_max_error",
   "fairlearn.metrics.group_mean_absolute_error",
   "fairlearn.metrics.group_mean_squared_error",
   "fairlearn.metrics.group_mean_squared_log_error",
   "fairlearn.metrics.group_median_absolute_error",
   "fairlearn.metrics.group_precision_score",
   "fairlearn.metrics.group_r2_score",
   "fairlearn.metrics.group_recall_score",
   "fairlearn.metrics.group_roc_auc_score",
   "fairlearn.metrics.group_zero_one_loss",
   "sklearn.metrics.accuracy_score",
   "sklearn.metrics.confusion_matrix",
   "sklearn.metrics.max_error",
   "sklearn.metrics.mean_absolute_error",
   "sklearn.metrics.mean_squared_error",
   "sklearn.metrics.mean_squared_log_error",
   "sklearn.metrics.median_absolute_error",
   "sklearn.metrics.precision_score",
   "sklearn.metrics.r2_score",
   "sklearn.metrics.recall_score",
   "sklearn.metrics.roc_auc_score",
   "sklearn.metrics.zero_one_loss"
  ],
  "type": "module"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_accuracy_score_unnormalized": {
  "lineno": 103,
  "symbols_in_volume": [
   "fairlearn.metrics.group_accuracy_score",
   "sklearn.metrics.accuracy_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_confusion_matrix_labels": {
  "lineno": 113,
  "symbols_in_volume": [
   "fairlearn.metrics.group_confusion_matrix",
   "numpy.array_equal",
   "sklearn.metrics.confusion_matrix"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_mean_squared_error_multioutput_list_ndarray": {
  "lineno": 210,
  "symbols_in_volume": [
   "fairlearn.metrics.group_mean_squared_error",
   "numpy.array_equal",
   "numpy.random.rand",
   "numpy.unique",
   "sklearn.metrics.mean_squared_error"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_mean_squared_error_multioutput_single_ndarray": {
  "lineno": 182,
  "symbols_in_volume": [
   "fairlearn.metrics.group_mean_squared_error",
   "numpy.array_equal",
   "numpy.random.rand",
   "sklearn.metrics.mean_squared_error"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_precision_score_pos_label": {
  "lineno": 131,
  "symbols_in_volume": [
   "fairlearn.metrics.group_precision_score",
   "numpy.array_equal",
   "sklearn.metrics.precision_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_precision_score_ternary": {
  "lineno": 124,
  "symbols_in_volume": [
   "fairlearn.metrics.group_precision_score",
   "numpy.array_equal",
   "sklearn.metrics.precision_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_r2_score_multioutput": {
  "lineno": 194,
  "symbols_in_volume": [
   "fairlearn.metrics.group_r2_score",
   "numpy.array_equal",
   "numpy.asarray",
   "numpy.random.rand",
   "numpy.unique",
   "sklearn.metrics.r2_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_recall_score_pos_label": {
  "lineno": 147,
  "symbols_in_volume": [
   "fairlearn.metrics.group_recall_score",
   "numpy.array_equal",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_recall_score_ternary": {
  "lineno": 140,
  "symbols_in_volume": [
   "fairlearn.metrics.group_recall_score",
   "numpy.array_equal",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_roc_auc_score_average": {
  "lineno": 156,
  "symbols_in_volume": [
   "fairlearn.metrics.group_roc_auc_score",
   "sklearn.metrics.roc_auc_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_roc_auc_score_max_fpr": {
  "lineno": 163,
  "symbols_in_volume": [
   "fairlearn.metrics.group_roc_auc_score",
   "sklearn.metrics.roc_auc_score"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_zero_one_loss_unnormalized": {
  "lineno": 172,
  "symbols_in_volume": [
   "fairlearn.metrics.group_zero_one_loss",
   "sklearn.metrics.zero_one_loss"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_metric_unweighted": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.array_equal",
   "numpy.ndarray",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_metric_weighted": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.array_equal",
   "numpy.ndarray",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_metric_weighted_ternary": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.array_equal",
   "numpy.ndarray",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArray1D": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArray1D.test_2d_raises_exception": {
  "lineno": 84,
  "symbols_in_volume": [
   "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArray1D.test_simple_list": {
  "lineno": 53,
  "symbols_in_volume": [
   "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArray1D.test_simple_nested_list": {
  "lineno": 64,
  "symbols_in_volume": [
   "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArray1D.test_simple_transposed_list": {
  "lineno": 74,
  "symbols_in_volume": [
   "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArrayAndSqueeze": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArrayAndSqueeze.test_multi_columns": {
  "lineno": 32,
  "symbols_in_volume": [
   "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArrayAndSqueeze.test_multi_rows": {
  "lineno": 22,
  "symbols_in_volume": [
   "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArrayAndSqueeze.test_simple_list": {
  "lineno": 11,
  "symbols_in_volume": [
   "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArrayAndSqueeze.test_single_element": {
  "lineno": 42,
  "symbols_in_volume": [
   "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_overprediction_unweighted": {
  "lineno": 45,
  "symbols_in_volume": [
   "fairlearn.metrics.mean_overprediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_overprediction_unweighted_single": {
  "lineno": 54,
  "symbols_in_volume": [
   "fairlearn.metrics.mean_overprediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_overprediction_weighted": {
  "lineno": 63,
  "symbols_in_volume": [
   "fairlearn.metrics.mean_overprediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_overprediction_weighted_single": {
  "lineno": 73,
  "symbols_in_volume": [
   "fairlearn.metrics.mean_overprediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_prediction_single": {
  "lineno": 16,
  "symbols_in_volume": [
   "fairlearn.metrics.mean_prediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_prediction_unweighted": {
  "lineno": 7,
  "symbols_in_volume": [
   "fairlearn.metrics.mean_prediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_prediction_weighted": {
  "lineno": 25,
  "symbols_in_volume": [
   "fairlearn.metrics.mean_prediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_prediction_weighted_single": {
  "lineno": 35,
  "symbols_in_volume": [
   "fairlearn.metrics.mean_prediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_underprediction_unweighted": {
  "lineno": 83,
  "symbols_in_volume": [
   "fairlearn.metrics.mean_underprediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_underprediction_unweighted_single": {
  "lineno": 92,
  "symbols_in_volume": [
   "fairlearn.metrics.mean_underprediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_underprediction_weighted": {
  "lineno": 101,
  "symbols_in_volume": [
   "fairlearn.metrics.mean_underprediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_underprediction_weighted_single": {
  "lineno": 111,
  "symbols_in_volume": [
   "fairlearn.metrics.mean_underprediction"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_metrics_engine.TestMakeGroupMetric": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_metrics_engine.TestMakeGroupMetric.test_keys_and_weights": {
  "lineno": 273,
  "symbols_in_volume": [
   "fairlearn.metrics.make_group_metric",
   "pytest.approx",
   "pytest.mark.parametrize",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMakeGroupMetric.test_smoke": {
  "lineno": 255,
  "symbols_in_volume": [
   "fairlearn.metrics.make_group_metric",
   "pytest.approx"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_groups_only_one_element": {
  "lineno": 236,
  "symbols_in_volume": [
   "fairlearn.metrics.metric_by_group"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_groups_only_one_element.sum_lengths": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_matrix_metric": {
  "lineno": 73,
  "symbols_in_volume": [
   "fairlearn.metrics.metric_by_group",
   "numpy.array_equal",
   "numpy.ones",
   "pytest.mark.parametrize",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_matrix_metric_other_properties": {
  "lineno": 91,
  "symbols_in_volume": [
   "fairlearn.metrics.metric_by_group",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_metric_results_zero": {
  "lineno": 199,
  "symbols_in_volume": [
   "fairlearn.metrics.metric_by_group"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_metric_results_zero.zero_results": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_negative_results": {
  "lineno": 181,
  "symbols_in_volume": [
   "fairlearn.metrics.metric_by_group",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_negative_results.negative_results": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_single_element_input": {
  "lineno": 219,
  "symbols_in_volume": [
   "fairlearn.metrics.metric_by_group"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_single_element_input.sum_lengths": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_smoke": {
  "lineno": 27,
  "symbols_in_volume": [
   "fairlearn.metrics.metric_by_group",
   "pytest.approx",
   "pytest.mark.parametrize",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_string_groups": {
  "lineno": 48,
  "symbols_in_volume": [
   "fairlearn.metrics.metric_by_group",
   "pytest.approx",
   "pytest.mark.parametrize",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_true_group_length_mismatch": {
  "lineno": 153,
  "symbols_in_volume": [
   "fairlearn.metrics.metric_by_group",
   "pytest.mark.parametrize",
   "pytest.raises",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_true_predict_length_mismatch": {
  "lineno": 139,
  "symbols_in_volume": [
   "fairlearn.metrics.metric_by_group",
   "pytest.mark.parametrize",
   "pytest.raises",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_true_weight_length_mismatch": {
  "lineno": 167,
  "symbols_in_volume": [
   "fairlearn.metrics.metric_by_group",
   "pytest.mark.parametrize",
   "pytest.raises",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_with_weights": {
  "lineno": 115,
  "symbols_in_volume": [
   "fairlearn.metrics.metric_by_group",
   "pytest.approx",
   "pytest.mark.parametrize",
   "test.unit.input_convertors.conversions_for_1d"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.mock_func": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.mock_func_matrix_return": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.mock_func_weight": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.multiply",
   "numpy.sum"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_selection_rate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.metrics.test_selection_rate.test_group_selection_rate": {
  "lineno": 39,
  "symbols_in_volume": [
   "fairlearn.metrics.group_selection_rate",
   "pytest.approx"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_selection_rate.test_selection_rate_non_numeric": {
  "lineno": 28,
  "symbols_in_volume": [
   "fairlearn.metrics.selection_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_selection_rate.test_selection_rate_unweighted": {
  "lineno": 9,
  "symbols_in_volume": [
   "fairlearn.metrics.selection_rate"
  ],
  "type": "function"
 },
 "test.unit.metrics.test_selection_rate.test_selection_rate_weighted": {
  "lineno": 18,
  "symbols_in_volume": [
   "fairlearn.metrics.selection_rate"
  ],
  "type": "function"
 },
 "test.unit.postprocessing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.postprocessing.test_curve_utilities": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.postprocessing.test_curve_utilities._assert_equal_points": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities._assert_interpolated_points_are_between_base_points": {
  "lineno": 124,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities._assert_interpolated_points_are_between_base_points._get_base_point_coordinates": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities.test_assert_interpolated_curve": {
  "lineno": 17,
  "symbols_in_volume": [
   "fairlearn.postprocessing._roc_curve_utilities._interpolate_curve",
   "numpy.linspace",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities.test_calculate_roc_points": {
  "lineno": 84,
  "symbols_in_volume": [
   "fairlearn.postprocessing._constants.LABEL_KEY",
   "fairlearn.postprocessing._constants.SCORE_KEY",
   "fairlearn.postprocessing._constants.SENSITIVE_FEATURE_KEY",
   "fairlearn.postprocessing._roc_curve_utilities._calculate_roc_points",
   "fairlearn.postprocessing._roc_curve_utilities._filter_points_to_get_convex_hull",
   "fairlearn.postprocessing._threshold_operation.ThresholdOperation",
   "numpy.inf",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities.test_convex_hull": {
  "lineno": 44,
  "symbols_in_volume": [
   "fairlearn.postprocessing._roc_curve_utilities._filter_points_to_get_convex_hull",
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities.test_get_roc": {
  "lineno": 112,
  "symbols_in_volume": [
   "fairlearn.postprocessing._roc_curve_utilities._get_roc",
   "fairlearn.postprocessing._roc_curve_utilities._interpolate_curve"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities.test_interpolate_curve": {
  "lineno": 30,
  "symbols_in_volume": [
   "fairlearn.postprocessing._roc_curve_utilities._interpolate_curve",
   "numpy.linspace",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_operation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.postprocessing.test_threshold_operation.test_predict_from_operation_invalid_operator": {
  "lineno": 26,
  "symbols_in_volume": [
   "fairlearn.postprocessing._threshold_operation.ThresholdOperation",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_operation.test_predict_from_operation_less": {
  "lineno": 8,
  "symbols_in_volume": [
   "fairlearn.postprocessing._threshold_operation.ThresholdOperation"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_operation.test_predict_from_operation_more": {
  "lineno": 17,
  "symbols_in_volume": [
   "fairlearn.postprocessing._threshold_operation.ThresholdOperation"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "module"
 },
 "test.unit.postprocessing.test_threshold_optimization.create_adjusted_predictor": {
  "lineno": 463,
  "symbols_in_volume": [
   "fairlearn.postprocessing._threshold_optimizer._vectorized_prediction"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_both_predictor_and_estimator_error": {
  "lineno": 50,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
   "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
   "fairlearn.postprocessing._postprocessing.EITHER_PREDICTOR_OR_ESTIMATOR_ERROR_MESSAGE",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_constraints_not_supported": {
  "lineno": 64,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._threshold_optimizer.NOT_SUPPORTED_CONSTRAINTS_ERROR_MESSAGE",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_inconsistent_input_data_types": {
  "lineno": 85,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
   "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
   "fairlearn.postprocessing._threshold_optimizer.INPUT_DATA_FORMAT_ERROR_MESSAGE.format",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_no_predictor_or_estimator_error": {
  "lineno": 58,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
   "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
   "fairlearn.postprocessing._postprocessing.PREDICTOR_OR_ESTIMATOR_REQUIRED_ERROR_MESSAGE",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_not_estimator": {
  "lineno": 70,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
   "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
   "fairlearn.postprocessing._postprocessing.MISSING_FIT_PREDICT_ERROR_MESSAGE",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_not_predictor": {
  "lineno": 78,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
   "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
   "fairlearn.postprocessing._postprocessing.MISSING_PREDICT_ERROR_MESSAGE",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_predict_before_fit_error": {
  "lineno": 35,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
   "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
   "fairlearn.postprocessing._threshold_optimizer.PREDICT_BEFORE_FIT_ERROR_MESSAGE",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_predict_different_argument_lengths": {
  "lineno": 435,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
   "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
   "fairlearn.postprocessing._threshold_optimizer.DIFFERENT_INPUT_LENGTH_ERROR_MESSAGE.format",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_predict_multiple_sensitive_features_columns_error": {
  "lineno": 415,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
   "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
   "fairlearn.postprocessing._threshold_optimizer.MULTIPLE_DATA_COLUMNS_ERROR_MESSAGE.format",
   "pandas.DataFrame",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_predict_output_0_or_1": {
  "lineno": 394,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
   "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_degenerate_labels": {
  "lineno": 123,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
   "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
   "fairlearn.postprocessing._roc_curve_utilities.DEGENERATE_LABELS_ERROR_MESSAGE.format",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_demographic_parity": {
  "lineno": 173,
  "symbols_in_volume": [
   "fairlearn.postprocessing._threshold_optimizer._threshold_optimization_demographic_parity",
   "numpy.isclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_demographic_parity._average_prediction": {
  "lineno": 222,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_demographic_parity_e2e": {
  "lineno": 323,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
   "numpy.array",
   "numpy.average",
   "numpy.isclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_different_input_lengths": {
  "lineno": 140,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
   "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
   "fairlearn.postprocessing._threshold_optimizer.DIFFERENT_INPUT_LENGTH_ERROR_MESSAGE.format",
   "fairlearn.postprocessing._threshold_optimizer.EMPTY_INPUT_ERROR_MESSAGE",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_equalized_odds": {
  "lineno": 235,
  "symbols_in_volume": [
   "fairlearn.postprocessing._threshold_optimizer._threshold_optimization_equalized_odds",
   "numpy.isclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_equalized_odds._average_prediction_for_label": {
  "lineno": 302,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_equalized_odds_e2e": {
  "lineno": 351,
  "symbols_in_volume": [
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
   "numpy.array",
   "numpy.average",
   "numpy.isclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_non_binary_labels": {
  "lineno": 103,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn.postprocessing.ThresholdOptimizer",
   "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
   "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
   "fairlearn.postprocessing._threshold_optimizer.NON_BINARY_LABELS_ERROR_MESSAGE",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_utilities": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "test.unit.postprocessing.test_utilities.ExampleEstimator": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.postprocessing.test_utilities.ExampleEstimator.fit": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.postprocessing.test_utilities.ExampleEstimator.predict": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.postprocessing.test_utilities.ExampleNotEstimator1": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.postprocessing.test_utilities.ExampleNotEstimator1.fit": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.postprocessing.test_utilities.ExampleNotEstimator2": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.postprocessing.test_utilities.ExampleNotEstimator2.predict": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.postprocessing.test_utilities.ExampleNotPredictor": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.postprocessing.test_utilities.ExamplePredictor": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.postprocessing.test_utilities.ExamplePredictor.predict": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.postprocessing.test_utilities._format_as_list_of_lists": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.postprocessing.test_utilities._get_grouped_data_and_base_points": {
  "lineno": 49,
  "symbols_in_volume": [
   "fairlearn.postprocessing._constants.LABEL_KEY",
   "fairlearn.postprocessing._constants.SCORE_KEY",
   "fairlearn.postprocessing._constants.SENSITIVE_FEATURE_KEY",
   "fairlearn.postprocessing._threshold_operation.ThresholdOperation",
   "numpy.inf",
   "numpy.linspace",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.postprocessing.test_utilities._get_predictions_by_sensitive_feature": {
  "lineno": 94,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "test.unit.reductions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresBinaryClassifierLearner": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresBinaryClassifierLearner.__init__": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresBinaryClassifierLearner.fit": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linalg.lstsq",
   "numpy.newaxis",
   "numpy.sqrt",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresBinaryClassifierLearner.predict": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresRegressor": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresRegressor.__init__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresRegressor.fit": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linalg.lstsq",
   "numpy.newaxis",
   "numpy.sqrt",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresRegressor.predict": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments": {
  "lineno": null,
  "symbols_in_volume": [
   "test.unit.input_convertors.conversions_for_1d",
   "test.unit.input_convertors.ensure_dataframe",
   "test.unit.input_convertors.ensure_ndarray"
  ],
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.TestExponentiatedGradientArguments": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.TestExponentiatedGradientArguments.setup_method": {
  "lineno": 27,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.TestExponentiatedGradientArguments.test_argument_types": {
  "lineno": 34,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.ErrorRate",
   "fairlearn.reductions.ExponentiatedGradient",
   "pytest.approx",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke": {
  "lineno": 15,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.EqualizedOdds"
  ],
  "type": "class"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.run_smoke_test": {
  "lineno": 74,
  "symbols_in_volume": [
   "fairlearn.reductions.ErrorRate",
   "fairlearn.reductions.ExponentiatedGradient",
   "pytest.approx"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.setup_method": {
  "lineno": 16,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.test_simple_fit_predict": {
  "lineno": 104,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.ExponentiatedGradient",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.test_smoke": {
  "lineno": 100,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_utilities": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.grid_search": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments": {
  "lineno": null,
  "symbols_in_volume": [
   "test.unit.input_convertors.conversions_for_1d",
   "test.unit.input_convertors.ensure_dataframe",
   "test.unit.input_convertors.ensure_ndarray"
  ],
  "type": "module"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests._quick_data": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.stack"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_A_df_bad_columns": {
  "lineno": 170,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "pandas.DataFrame",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_A_ndarray_bad_columns": {
  "lineno": 185,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "numpy.stack",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_X_A_different_rows": {
  "lineno": 100,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "numpy.random.randint",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_X_Y_different_rows": {
  "lineno": 84,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "numpy.random.randint",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_X_is_None": {
  "lineno": 54,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_Y_df_bad_columns": {
  "lineno": 138,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "pandas.DataFrame",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_Y_is_None": {
  "lineno": 68,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_Y_ndarray_bad_columns": {
  "lineno": 153,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "numpy.stack",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_no_predict_before_fit": {
  "lineno": 200,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "pytest.raises",
   "sklearn.exceptions.NotFittedError"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_no_predict_proba_before_fit": {
  "lineno": 210,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "pytest.raises",
   "sklearn.exceptions.NotFittedError"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_sensitive_feature_non_binary": {
  "lineno": 118,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_valid_inputs": {
  "lineno": 41,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ConditionalOpportunityTests": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ConditionalOpportunityTests.test_Y_not_0_1": {
  "lineno": 241,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ConditionalOpportunityTests.test_Y_ternary": {
  "lineno": 223,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestBoundedGroupLoss": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestBoundedGroupLoss.setup_method": {
  "lineno": 274,
  "symbols_in_volume": [
   "fairlearn.reductions.GroupLossMoment",
   "fairlearn.reductions.ZeroOneLoss",
   "sklearn.linear_model.LinearRegression"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestDemographicParity": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestDemographicParity.setup_method": {
  "lineno": 260,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "sklearn.linear_model.LogisticRegression"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestEqualizedOdds": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestEqualizedOdds.setup_method": {
  "lineno": 267,
  "symbols_in_volume": [
   "fairlearn.reductions.EqualizedOdds",
   "sklearn.linear_model.LogisticRegression"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity._simple_threshold_data": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.full",
   "numpy.linspace",
   "numpy.ones",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.test_can_specify_and_generate_lambda_vecs": {
  "lineno": 111,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.GridSearch",
   "numpy.array_equal",
   "numpy.zeros",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pandas.concat",
   "sklearn.linear_model.LogisticRegression"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.test_demographicparity_fair_uneven_populations": {
  "lineno": 36,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.GridSearch",
   "numpy.allclose",
   "numpy.array_equal",
   "pandas.DataFrame",
   "sklearn.linear_model.LogisticRegression"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.test_lambda_vec_zero_unchanged_model": {
  "lineno": 72,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions.GridSearch",
   "numpy.array_equal",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "sklearn.linear_model.LogisticRegression"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression._simple_regression_data": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.full",
   "numpy.linspace",
   "numpy.ones",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.test_bgl_lagrange_specifications": {
  "lineno": 123,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn.reductions.GridSearch",
   "fairlearn.reductions.GroupLossMoment",
   "fairlearn.reductions.ZeroOneLoss",
   "numpy.array_equal",
   "pandas.Int64Index",
   "pandas.Series",
   "pandas.concat",
   "sklearn.linear_model.LinearRegression"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.test_bgl_unfair": {
  "lineno": 40,
  "symbols_in_volume": [
   "fairlearn.reductions.GridSearch",
   "fairlearn.reductions.GroupLossMoment",
   "fairlearn.reductions.SquareLoss",
   "numpy.allclose",
   "numpy.inf",
   "pandas.DataFrame",
   "sklearn.linear_model.LinearRegression",
   "test.unit.utility_functions.logging_all_close"
  ],
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.test_bgl_unmitigated_same": {
  "lineno": 88,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fairlearn.reductions.GridSearch",
   "fairlearn.reductions.GroupLossMoment",
   "fairlearn.reductions.ZeroOneLoss",
   "numpy.allclose",
   "pandas.DataFrame",
   "pandas.Int64Index",
   "pandas.Series",
   "sklearn.linear_model.LinearRegression"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.moments.data_generator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.moments.data_generator.simple_binary_threshold_data": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.full",
   "numpy.linspace",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity.test_construct_and_load": {
  "lineno": 13,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions._moments.moment._EVENT",
   "fairlearn.reductions._moments.moment._GROUP_ID",
   "fairlearn.reductions._moments.moment._SIGN",
   "pandas.MultiIndex.from_product",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity.test_project_lambda_smoke_negatives": {
  "lineno": 86,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions._moments.moment._EVENT",
   "fairlearn.reductions._moments.moment._GROUP_ID",
   "fairlearn.reductions._moments.moment._SIGN",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity.test_project_lambda_smoke_positives": {
  "lineno": 108,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions._moments.moment._EVENT",
   "fairlearn.reductions._moments.moment._GROUP_ID",
   "fairlearn.reductions._moments.moment._SIGN",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity.test_signed_weights": {
  "lineno": 132,
  "symbols_in_volume": [
   "fairlearn.reductions.DemographicParity",
   "fairlearn.reductions._moments.moment._EVENT",
   "fairlearn.reductions._moments.moment._GROUP_ID",
   "fairlearn.reductions._moments.moment._SIGN",
   "numpy.array_equal",
   "numpy.concatenate",
   "numpy.full",
   "pandas.MultiIndex.from_product",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds.test_construct_and_load": {
  "lineno": 13,
  "symbols_in_volume": [
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions._moments.moment._EVENT",
   "fairlearn.reductions._moments.moment._GROUP_ID",
   "fairlearn.reductions._moments.moment._SIGN",
   "numpy.array_equal",
   "pandas.MultiIndex.from_product",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds.test_project_lambda_smoke_negatives": {
  "lineno": 103,
  "symbols_in_volume": [
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions._moments.moment._EVENT",
   "fairlearn.reductions._moments.moment._GROUP_ID",
   "fairlearn.reductions._moments.moment._SIGN",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds.test_project_lambda_smoke_positives": {
  "lineno": 124,
  "symbols_in_volume": [
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions._moments.moment._EVENT",
   "fairlearn.reductions._moments.moment._GROUP_ID",
   "fairlearn.reductions._moments.moment._SIGN",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds.test_signed_weights": {
  "lineno": 147,
  "symbols_in_volume": [
   "fairlearn.reductions.EqualizedOdds",
   "fairlearn.reductions._moments.moment._EVENT",
   "fairlearn.reductions._moments.moment._GROUP_ID",
   "fairlearn.reductions._moments.moment._SIGN",
   "numpy.array_equal",
   "numpy.concatenate",
   "numpy.full",
   "pandas.MultiIndex.from_product",
   "pandas.Series"
  ],
  "type": "function"
 },
 "test.unit.utility_functions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.unit.utility_functions.logging_all_close": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.asarray",
   "numpy.isclose",
   "numpy.logical_not",
   "numpy.where"
  ],
  "type": "function"
 }
}