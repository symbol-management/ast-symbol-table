{
 "fairlearn": {
  "data": {
   "symbols_in_volume": [
    "ValueError",
    "fairlearn._FAIRLEARN_DEV_VERSION_ENV_VAR",
    "fairlearn.__name__",
    "fairlearn._base_version",
    "fairlearn._dev_version",
    "fairlearn.atexit",
    "fairlearn.close_handler",
    "fairlearn.dev_version_string",
    "fairlearn.dev_version_value",
    "fairlearn.fairlearn_logs",
    "fairlearn.handler",
    "fairlearn.logger",
    "fairlearn.logging",
    "fairlearn.msg",
    "fairlearn.os",
    "fairlearn.sys",
    "int",
    "print"
   ]
  },
  "type": "module"
 },
 "fairlearn._FAIRLEARN_DEV_VERSION_ENV_VAR": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "fairlearn._NO_PREDICT_BEFORE_FIT": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "fairlearn.__name__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "fairlearn.__version__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "fairlearn._base_version": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "fairlearn._dev_version": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "fairlearn._input_validation": {
  "data": {},
  "type": "module"
 },
 "fairlearn._input_validation._KW_SENSITIVE_FEATURES": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "fairlearn._input_validation._MESSAGE_X_NONE": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "fairlearn._input_validation._MESSAGE_X_SENSITIVE_ROWS": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "fairlearn._input_validation._MESSAGE_X_Y_ROWS": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "fairlearn._input_validation._MESSAGE_Y_NONE": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "fairlearn._input_validation._get_matrix_shape": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "len",
    "numpy.ndarray",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "fairlearn._input_validation._make_vector": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "len",
    "list",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "fairlearn._input_validation._validate_and_reformat_reductions_input": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "_get_matrix_shape",
    "_make_vector",
    "fairlearn._input_validation._KW_SENSITIVE_FEATURES",
    "fairlearn._input_validation._MESSAGE_X_NONE",
    "fairlearn._input_validation._MESSAGE_X_SENSITIVE_ROWS",
    "fairlearn._input_validation._MESSAGE_X_Y_ROWS",
    "fairlearn._input_validation._MESSAGE_Y_NONE",
    "len",
    "numpy.unique",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "fairlearn._input_validation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn._input_validation.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fairlearn.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "fairlearn.close_handler": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "fairlearn.handler",
    "fairlearn.logger"
   ]
  },
  "type": "function"
 },
 "fairlearn.dev_version_string": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "fairlearn.dev_version_value": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "fairlearn.fairlearn_logs": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "fairlearn.handler": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "fairlearn.logger": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "fairlearn.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "fairlearn.metrics": {
  "data": {
   "symbols_in_volume": [
    "fairlearn.metrics._engine",
    "fairlearn.metrics._extra_metrics",
    "fairlearn.metrics._group_metrics"
   ]
  },
  "type": "module"
 },
 "fairlearn.metrics.__all__": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "fairlearn.metrics._balanced_root_mean_squared_error": {
  "data": {},
  "type": "module"
 },
 "fairlearn.metrics._balanced_root_mean_squared_error._Y_TRUE_NOT_0_1": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "fairlearn.metrics._balanced_root_mean_squared_error.balanced_root_mean_squared_error": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "_convert_to_ndarray_and_squeeze",
    "fairlearn.metrics._balanced_root_mean_squared_error._Y_TRUE_NOT_0_1",
    "fairlearn.metrics._balanced_root_mean_squared_error.math",
    "len",
    "numpy.array_equal",
    "numpy.ones",
    "numpy.unique",
    "numpy.zeros",
    "range",
    "sklearn.metrics.mean_squared_error"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._balanced_root_mean_squared_error.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "fairlearn.metrics._balanced_root_mean_squared_error.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.metrics._balanced_root_mean_squared_error.skm": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "fairlearn.metrics._engine": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "fairlearn.metrics._extra_metrics": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "fairlearn.metrics._extra_metrics.fallout_rate": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "fairlearn.metrics._extra_metrics.specificity_score"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._extra_metrics.group_balanced_root_mean_squared_error": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "fairlearn.metrics._extra_metrics.group_fallout_rate": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "fairlearn.metrics._extra_metrics.group_mean_overprediction": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "fairlearn.metrics._extra_metrics.group_mean_prediction": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "fairlearn.metrics._extra_metrics.group_mean_underprediction": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "fairlearn.metrics._extra_metrics.group_miss_rate": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "fairlearn.metrics._extra_metrics.group_specificity_score": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "fairlearn.metrics._extra_metrics.miss_rate": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "sklearn.metrics.recall_score"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._extra_metrics.skm": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "fairlearn.metrics._extra_metrics.specificity_score": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "sklearn.metrics.confusion_matrix"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._group_metric_result": {
  "data": {},
  "type": "module"
 },
 "fairlearn.metrics._group_metric_result.GroupMetricResult": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "fairlearn.metrics._group_metric_result.GroupMetricResult.__eq__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "NotImplemented",
    "fairlearn.metrics._group_metric_result.GroupMetricResult",
    "isinstance",
    "numpy.array_equal",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._group_metric_result.GroupMetricResult.__init__": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "fairlearn.metrics._group_metric_result.GroupMetricResult.__ne__": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._group_metric_result.GroupMetricResult.argmax_set": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "property",
    "set"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._group_metric_result.GroupMetricResult.argmin_set": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "property",
    "set"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._group_metric_result.GroupMetricResult.by_group": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "fairlearn.metrics._group_metric_result.GroupMetricResult.maximum": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "max",
    "property"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._group_metric_result.GroupMetricResult.minimum": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "min",
    "property"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._group_metric_result.GroupMetricResult.overall": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "fairlearn.metrics._group_metric_result.GroupMetricResult.range": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._group_metric_result.GroupMetricResult.range_ratio": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "fairlearn.metrics._group_metric_result.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.metrics._group_metric_set": {
  "data": {},
  "type": "module"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "frozenset"
   ]
  },
  "type": "class"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet.__eq__": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "NotImplemented",
    "fairlearn.metrics._group_metric_set.GroupMetricSet",
    "isinstance",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet.__init__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet.__ne__": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet.check_consistency": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics._group_metric_set._ARRAYS_NOT_SAME_LENGTH",
    "fairlearn.metrics._group_metric_set._BIN_MISMATCH_FOR_METRIC",
    "fairlearn.metrics._group_metric_set._GROUP_NAMES_BAD_COUNT",
    "frozenset",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet.compute": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "RuntimeError",
    "fairlearn.metrics._group_metric_set.GroupMetricSet",
    "list",
    "metric_function",
    "numpy.unique",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet.from_dict": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "GroupMetricResult",
    "ValueError",
    "dict",
    "enumerate",
    "fairlearn.metrics._group_metric_set.GroupMetricSet",
    "fairlearn.metrics._group_metric_set._BINS",
    "fairlearn.metrics._group_metric_set._BIN_LABELS",
    "fairlearn.metrics._group_metric_set._BIN_VECTOR",
    "fairlearn.metrics._group_metric_set._DICT_TOO_MANY_Y_PRED",
    "fairlearn.metrics._group_metric_set._FEATURE_BIN_NAME",
    "fairlearn.metrics._group_metric_set._GLOBAL",
    "fairlearn.metrics._group_metric_set._PRECOMPUTED_BINS",
    "fairlearn.metrics._group_metric_set._PRECOMPUTED_METRICS",
    "fairlearn.metrics._group_metric_set._PREDICTION_BINARY_CLASSIFICATION",
    "fairlearn.metrics._group_metric_set._PREDICTION_TYPE",
    "fairlearn.metrics._group_metric_set._UNSUPPORTED_MODEL_TYPE",
    "fairlearn.metrics._group_metric_set._Y_PRED",
    "fairlearn.metrics._group_metric_set._Y_TRUE",
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet.group_names": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics._group_metric_set._GROUP_NAMES_MSG",
    "list",
    "set",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet.group_title": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet.groups": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics._group_metric_set._GROUPS_NOT_SEQUENTIAL_INTEGERS",
    "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d",
    "len",
    "numpy.array",
    "numpy.array_equal",
    "numpy.unique",
    "range"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet.metrics": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics._group_metric_set._METRICS_KEYS_MSG",
    "fairlearn.metrics._group_metric_set._METRICS_VALUES_MSG",
    "set",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet.model_type": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics._group_metric_set.GroupMetricSet",
    "list",
    "sorted"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet.to_dict": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "fairlearn.metrics._group_metric_set.GroupMetricSet",
    "fairlearn.metrics._group_metric_set._BINS",
    "fairlearn.metrics._group_metric_set._BIN_LABELS",
    "fairlearn.metrics._group_metric_set._BIN_VECTOR",
    "fairlearn.metrics._group_metric_set._FEATURE_BIN_NAME",
    "fairlearn.metrics._group_metric_set._GLOBAL",
    "fairlearn.metrics._group_metric_set._PRECOMPUTED_BINS",
    "fairlearn.metrics._group_metric_set._PRECOMPUTED_METRICS",
    "fairlearn.metrics._group_metric_set._PREDICTION_BINARY_CLASSIFICATION",
    "fairlearn.metrics._group_metric_set._PREDICTION_TYPE",
    "fairlearn.metrics._group_metric_set._UNSUPPORTED_MODEL_TYPE",
    "fairlearn.metrics._group_metric_set._Y_PRED",
    "fairlearn.metrics._group_metric_set._Y_TRUE",
    "frozenset",
    "list",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet.y_pred": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set.GroupMetricSet.y_true": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._group_metric_set._ARRAYS_NOT_SAME_LENGTH": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._BINS": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._BIN_LABELS": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._BIN_MISMATCH_FOR_METRIC": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._BIN_VECTOR": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._DICT_TOO_MANY_Y_PRED": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._FEATURE_BIN_NAME": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._GLOBAL": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._GROUPS_NOT_SEQUENTIAL_INTEGERS": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._GROUP_NAMES_BAD_COUNT": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._GROUP_NAMES_MSG": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._METRICS_KEYS_MSG": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._METRICS_VALUES_MSG": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._PRECOMPUTED_BINS": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._PRECOMPUTED_METRICS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._PREDICTION_BINARY_CLASSIFICATION": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._PREDICTION_TYPE": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._UNSUPPORTED_MODEL_TYPE": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._Y_PRED": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._Y_TRUE": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "fairlearn.metrics._group_metric_set._convert_to_ndarray_1d": {
  "data": {
   "shadows": "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d"
  },
  "type": "import"
 },
 "fairlearn.metrics._group_metric_set.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.metrics._group_metrics": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "fairlearn.metrics._input_manipulations": {
  "data": {},
  "type": "module"
 },
 "fairlearn.metrics._input_manipulations._ARRAY_NOT_1D": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics._input_manipulations._ARRAY_NOT_1D",
    "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze",
    "len"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.squeeze"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._input_manipulations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.metrics._mean_predictions": {
  "data": {},
  "type": "module"
 },
 "fairlearn.metrics._mean_predictions.mean_overprediction": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "_convert_to_ndarray_and_squeeze",
    "len",
    "numpy.dot",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._mean_predictions.mean_prediction": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "_convert_to_ndarray_and_squeeze",
    "len",
    "numpy.dot",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._mean_predictions.mean_underprediction": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "_convert_to_ndarray_and_squeeze",
    "len",
    "numpy.dot",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._mean_predictions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.metrics._metrics_engine": {
  "data": {},
  "type": "module"
 },
 "fairlearn.metrics._metrics_engine._MESSAGE_SIZE_MISMATCH": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "fairlearn.metrics._metrics_engine._check_array_sizes": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics._metrics_engine._MESSAGE_SIZE_MISMATCH",
    "len"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._metrics_engine.make_group_metric": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "metric_function.__name__"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._metrics_engine.make_group_metric.wrapper": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "fairlearn.metrics._metrics_engine.metric_by_group",
    "metric_function"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._metrics_engine.metric_by_group": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "GroupMetricResult",
    "_check_array_sizes",
    "_convert_to_ndarray_and_squeeze",
    "metric_function",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._metrics_engine.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.metrics._selection_rate": {
  "data": {},
  "type": "module"
 },
 "fairlearn.metrics._selection_rate.group_selection_rate": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "metric_by_group"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._selection_rate.group_selection_rate.internal_sel_wrapper": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "fairlearn.metrics._selection_rate.selection_rate"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._selection_rate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.metrics._selection_rate.selection_rate": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.dot",
    "numpy.ones",
    "numpy.squeeze"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers": {
  "data": {
   "symbols_in_volume": [
    "make_group_metric",
    "sklearn.metrics.max_error",
    "sklearn.metrics.mean_absolute_error",
    "sklearn.metrics.mean_squared_log_error",
    "sklearn.metrics.median_absolute_error"
   ]
  },
  "type": "module"
 },
 "fairlearn.metrics._skm_wrappers.group_accuracy_score": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "metric_by_group"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_accuracy_score.internal_acc_wrapper": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "sklearn.metrics.accuracy_score"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_confusion_matrix": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "metric_by_group"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_confusion_matrix.internal_cm_wrapper": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "sklearn.metrics.confusion_matrix"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_max_error": {
  "data": {
   "lineno": 179
  },
  "type": "constant"
 },
 "fairlearn.metrics._skm_wrappers.group_mean_absolute_error": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "fairlearn.metrics._skm_wrappers.group_mean_squared_error": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "metric_by_group"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_mean_squared_error.internal_mse_wrapper": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "sklearn.metrics.mean_squared_error"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_mean_squared_log_error": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "fairlearn.metrics._skm_wrappers.group_median_absolute_error": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "fairlearn.metrics._skm_wrappers.group_precision_score": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "metric_by_group"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_precision_score.internal_prec_wrapper": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "sklearn.metrics.precision_score"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_r2_score": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "metric_by_group"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_r2_score.internal_r2_wrapper": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "sklearn.metrics.r2_score"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_recall_score": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "metric_by_group"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_recall_score.internal_recall_wrapper": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "sklearn.metrics.recall_score"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_roc_auc_score": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "metric_by_group"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_roc_auc_score.internal_ras_wrapper": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "sklearn.metrics.roc_auc_score"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_root_mean_squared_error": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "metric_by_group"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_root_mean_squared_error.internal_rmse_wrapper": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "math.sqrt",
    "sklearn.metrics.mean_squared_error"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_zero_one_loss": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "metric_by_group"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.group_zero_one_loss.internal_zol_wrapper": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "sklearn.metrics.zero_one_loss"
   ]
  },
  "type": "function"
 },
 "fairlearn.metrics._skm_wrappers.skm": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "fairlearn.metrics._skm_wrappers.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "fairlearn.msg": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "fairlearn.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "fairlearn.postprocessing": {
  "data": {},
  "type": "module"
 },
 "fairlearn.postprocessing.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._constants": {
  "data": {},
  "type": "module"
 },
 "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._constants.EQUALIZED_ODDS": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._constants.LABEL_KEY": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._constants.OUTPUT_SEPARATOR": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._constants.P0_KEY": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._constants.P1_KEY": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._constants.SCORE_KEY": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._constants.SENSITIVE_FEATURE_KEY": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._constants._MATPLOTLIB_IMPORT_ERROR_MESSAGE": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._curve_plotting_utilities": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "RuntimeError",
    "fairlearn.postprocessing._curve_plotting_utilities.debug_colors",
    "fairlearn.postprocessing._curve_plotting_utilities.tab10_norm",
    "fairlearn.postprocessing._curve_plotting_utilities.tab10_scalarMap",
    "len",
    "matplotlib.cm.ScalarMappable",
    "range"
   ]
  },
  "type": "module"
 },
 "fairlearn.postprocessing._curve_plotting_utilities._get_debug_color": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "fairlearn.postprocessing._curve_plotting_utilities.debug_colormap",
    "fairlearn.postprocessing._curve_plotting_utilities.debug_colors",
    "fairlearn.postprocessing._curve_plotting_utilities.debug_ncolors",
    "len"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._curve_plotting_utilities.cm": {
  "data": {
   "shadows": "matplotlib.cm"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._curve_plotting_utilities.debug_colormap": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._curve_plotting_utilities.debug_colors": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._curve_plotting_utilities.debug_ncolors": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._curve_plotting_utilities.highlight_color": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._curve_plotting_utilities.matplotlib.colors": {
  "data": {
   "shadows": "matplotlib.colors"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._curve_plotting_utilities.plot_curve": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "fairlearn.postprocessing._curve_plotting_utilities._get_debug_color",
    "matplotlib.pyplot.plot",
    "str"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._curve_plotting_utilities.plot_overlap": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "fairlearn.postprocessing._curve_plotting_utilities.highlight_color",
    "matplotlib.pyplot.plot"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._curve_plotting_utilities.plot_solution_and_show_plot": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "matplotlib.pyplot.axvline",
    "matplotlib.pyplot.legend",
    "matplotlib.pyplot.plot",
    "matplotlib.pyplot.show",
    "matplotlib.pyplot.xlabel",
    "matplotlib.pyplot.ylabel"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._curve_plotting_utilities.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._curve_plotting_utilities.tab10_norm": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._curve_plotting_utilities.tab10_scalarMap": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._interpolated_prediction": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "fairlearn.postprocessing._interpolated_prediction.logging"
   ]
  },
  "type": "module"
 },
 "fairlearn.postprocessing._interpolated_prediction.InterpolatedPredictor": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "fairlearn.postprocessing._interpolated_prediction.InterpolatedPredictor.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "fairlearn.postprocessing._interpolated_prediction.logger"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._interpolated_prediction.InterpolatedPredictor.__repr__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "fairlearn.postprocessing._interpolated_prediction.InterpolatedPredictor.predict": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "fairlearn.postprocessing._interpolated_prediction.logger": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._interpolated_prediction.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._postprocessing": {
  "data": {
   "symbols_in_volume": [
    "fairlearn.postprocessing._postprocessing.PostProcessing"
   ]
  },
  "type": "module"
 },
 "fairlearn.postprocessing._postprocessing.EITHER_PREDICTOR_OR_ESTIMATOR_ERROR_MESSAGE": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._postprocessing.MISSING_FIT_PREDICT_ERROR_MESSAGE": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._postprocessing.MISSING_PREDICT_ERROR_MESSAGE": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._postprocessing.PREDICTOR_OR_ESTIMATOR_REQUIRED_ERROR_MESSAGE": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._postprocessing.PostProcessing": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "fairlearn.postprocessing._postprocessing.PostProcessing.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.postprocessing._postprocessing.EITHER_PREDICTOR_OR_ESTIMATOR_ERROR_MESSAGE",
    "fairlearn.postprocessing._postprocessing.PREDICTOR_OR_ESTIMATOR_REQUIRED_ERROR_MESSAGE"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._postprocessing.PostProcessing._pmf_predict": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._postprocessing.PostProcessing._validate_estimator": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "fairlearn.postprocessing._postprocessing.MISSING_FIT_PREDICT_ERROR_MESSAGE",
    "getattr"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._postprocessing.PostProcessing._validate_predictor": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "fairlearn.postprocessing._postprocessing.MISSING_PREDICT_ERROR_MESSAGE",
    "getattr"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._postprocessing.PostProcessing.fit": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._postprocessing.PostProcessing.predict": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._roc_curve_utilities": {
  "data": {},
  "type": "module"
 },
 "fairlearn.postprocessing._roc_curve_utilities.DEGENERATE_LABELS_ERROR_MESSAGE": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._roc_curve_utilities._calculate_roc_points": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ThresholdOperation",
    "ValueError",
    "_get_scores_labels_and_counts",
    "fairlearn.postprocessing._roc_curve_utilities.DEGENERATE_LABELS_ERROR_MESSAGE",
    "numpy.inf",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._roc_curve_utilities._filter_points_to_get_convex_hull": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._roc_curve_utilities._get_counts": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "len",
    "sum"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._roc_curve_utilities._get_roc": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "_calculate_roc_points",
    "_filter_points_to_get_convex_hull",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._roc_curve_utilities._get_scores_labels_and_counts": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "_get_counts",
    "list"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._roc_curve_utilities._interpolate_curve": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._roc_curve_utilities.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._roc_curve_utilities.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._threshold_operation": {
  "data": {},
  "type": "module"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation.__repr__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation.get_predictor_from_operation": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation.operator": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_operation.ThresholdOperation.threshold": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "fairlearn.postprocessing._threshold_optimizer.logging"
   ]
  },
  "type": "module"
 },
 "fairlearn.postprocessing._threshold_optimizer.DIFFERENT_INPUT_LENGTH_ERROR_MESSAGE": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._threshold_optimizer.EMPTY_INPUT_ERROR_MESSAGE": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._threshold_optimizer.INPUT_DATA_FORMAT_ERROR_MESSAGE": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._threshold_optimizer.MULTIPLE_DATA_COLUMNS_ERROR_MESSAGE": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._threshold_optimizer.NON_BINARY_LABELS_ERROR_MESSAGE": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._threshold_optimizer.NOT_SUPPORTED_CONSTRAINTS_ERROR_MESSAGE": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._threshold_optimizer.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._threshold_optimizer.PREDICT_BEFORE_FIT_ERROR_MESSAGE": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._threshold_optimizer.PostProcessing": {
  "data": {
   "shadows": "fairlearn.postprocessing.PostProcessing"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._threshold_optimizer.SCORES_DATA_TOO_MANY_COLUMNS_ERROR_MESSAGE": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._threshold_optimizer.SENSITIVE_FEATURE_NAME_CONFLICT_DETECTED_ERROR_MESSAGE": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "fairlearn.postprocessing.PostProcessing"
   ]
  },
  "type": "class"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.postprocessing._threshold_optimizer.NOT_SUPPORTED_CONSTRAINTS_ERROR_MESSAGE",
    "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer",
    "fairlearn.postprocessing._threshold_optimizer._SUPPORTED_CONSTRAINTS",
    "super"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer._pmf_predict": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "_vectorized_prediction",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer._validate_input_data": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "fairlearn.postprocessing._threshold_optimizer.DIFFERENT_INPUT_LENGTH_ERROR_MESSAGE",
    "fairlearn.postprocessing._threshold_optimizer.EMPTY_INPUT_ERROR_MESSAGE",
    "fairlearn.postprocessing._threshold_optimizer.INPUT_DATA_FORMAT_ERROR_MESSAGE",
    "fairlearn.postprocessing._threshold_optimizer.NON_BINARY_LABELS_ERROR_MESSAGE",
    "len",
    "list",
    "numpy.ndarray",
    "numpy.unique",
    "pandas.DataFrame",
    "pandas.Series",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer._validate_post_processed_predictor_is_fitted": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "fairlearn.postprocessing._threshold_optimizer.PREDICT_BEFORE_FIT_ERROR_MESSAGE",
    "sklearn.exceptions.NotFittedError"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer.fit": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.postprocessing._threshold_optimizer.NOT_SUPPORTED_CONSTRAINTS_ERROR_MESSAGE",
    "int",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series",
    "threshold_optimization_method",
    "type"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer.predict": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "_vectorized_prediction",
    "fairlearn.postprocessing._threshold_optimizer.random",
    "len",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer.UNEXPECTED_DATA_TYPE_ERROR_MESSAGE": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._threshold_optimizer._SUPPORTED_CONSTRAINTS": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._threshold_optimizer._convert_to_ndarray": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Series",
    "type"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer._reformat_and_group_data": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "ValueError",
    "_reformat_data_into_dict",
    "fairlearn.postprocessing._threshold_optimizer.SENSITIVE_FEATURE_NAME_CONFLICT_DETECTED_ERROR_MESSAGE",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer._reformat_data_into_dict": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "fairlearn.postprocessing._threshold_optimizer.MULTIPLE_DATA_COLUMNS_ERROR_MESSAGE",
    "fairlearn.postprocessing._threshold_optimizer.UNEXPECTED_DATA_TYPE_ERROR_MESSAGE",
    "len",
    "list",
    "map",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series",
    "type"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer._threshold_optimization_demographic_parity": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "InterpolatedPredictor",
    "_get_roc",
    "_interpolate_curve",
    "_reformat_and_group_data",
    "fairlearn.postprocessing._threshold_optimizer.logger",
    "len",
    "numpy.linspace",
    "plot_curve",
    "plot_solution_and_show_plot",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer._threshold_optimization_equalized_odds": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "InterpolatedPredictor",
    "_get_roc",
    "_interpolate_curve",
    "_reformat_and_group_data",
    "fairlearn.postprocessing._threshold_optimizer.logger",
    "len",
    "numpy.amin",
    "numpy.linspace",
    "pandas.DataFrame",
    "plot_curve",
    "plot_overlap",
    "plot_solution_and_show_plot",
    "str",
    "sum",
    "type"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer._vectorized_prediction": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "_convert_to_ndarray",
    "fairlearn.postprocessing._threshold_optimizer.MULTIPLE_DATA_COLUMNS_ERROR_MESSAGE",
    "fairlearn.postprocessing._threshold_optimizer.SCORES_DATA_TOO_MANY_COLUMNS_ERROR_MESSAGE",
    "sum"
   ]
  },
  "type": "function"
 },
 "fairlearn.postprocessing._threshold_optimizer.logger": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "fairlearn.postprocessing._threshold_optimizer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._threshold_optimizer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._threshold_optimizer.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fairlearn.postprocessing._threshold_optimizer.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "fairlearn.reductions": {
  "data": {
   "symbols_in_volume": [
    "fairlearn.reductions._exponentiated_gradient",
    "fairlearn.reductions._grid_search",
    "fairlearn.reductions._moments"
   ]
  },
  "type": "module"
 },
 "fairlearn.reductions.__all__": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "fairlearn.reductions._exponentiated_gradient": {
  "data": {},
  "type": "module"
 },
 "fairlearn.reductions._exponentiated_gradient.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "fairlearn.reductions._exponentiated_gradient._constants": {
  "data": {},
  "type": "module"
 },
 "fairlearn.reductions._exponentiated_gradient._constants._ACCURACY_MUL": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "fairlearn.reductions._exponentiated_gradient._constants._INDENTATION": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "fairlearn.reductions._exponentiated_gradient._constants._LINE": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "fairlearn.reductions._exponentiated_gradient._constants._MIN_T": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "fairlearn.reductions._exponentiated_gradient._constants._PRECISION": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "fairlearn.reductions._exponentiated_gradient._constants._REGRET_CHECK_INCREASE_T": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "fairlearn.reductions._exponentiated_gradient._constants._REGRET_CHECK_START_T": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "fairlearn.reductions._exponentiated_gradient._constants._RUN_LP_STEP": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "fairlearn.reductions._exponentiated_gradient._constants._SHRINK_ETA": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "fairlearn.reductions._exponentiated_gradient._constants._SHRINK_REGRET": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "fairlearn.reductions._exponentiated_gradient._exponentiated_gradient_result": {
  "data": {},
  "type": "module"
 },
 "fairlearn.reductions._exponentiated_gradient._exponentiated_gradient_result.ExponentiatedGradientResult": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "fairlearn.reductions._exponentiated_gradient._exponentiated_gradient_result.ExponentiatedGradientResult.__init__": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._exponentiated_gradient_result.ExponentiatedGradientResult._as_dict": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._exponentiated_gradient_result.ExponentiatedGradientResult.best_classifier": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._exponentiated_gradient_result.ExponentiatedGradientResult.best_gap": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._exponentiated_gradient_result.ExponentiatedGradientResult.best_t": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._exponentiated_gradient_result.ExponentiatedGradientResult.classifiers": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._exponentiated_gradient_result.ExponentiatedGradientResult.last_t": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._exponentiated_gradient_result.ExponentiatedGradientResult.n_oracle_calls": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._exponentiated_gradient_result.ExponentiatedGradientResult.oracle_calls_execution_time": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._exponentiated_gradient_result.ExponentiatedGradientResult.weights": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "fairlearn.reductions._exponentiated_gradient._lagrangian.logging"
   ]
  },
  "type": "module"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._GapResult": {
  "data": {
   "lineno": 178
  },
  "type": "class"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._GapResult.__init__": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._GapResult.gap": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "fairlearn.reductions._exponentiated_gradient._lagrangian.pickle",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian._eval": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "callable"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian._eval_from_error_gamma": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian.best_h": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "fairlearn.reductions._exponentiated_gradient._lagrangian.logger",
    "fairlearn.reductions._exponentiated_gradient._lagrangian.pickle",
    "len",
    "numpy.PINF",
    "time.time"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian.best_h.h": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian.eval_gap": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "_GapResult",
    "fairlearn.reductions._exponentiated_gradient._lagrangian.logger",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian.solve_linprog": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "len",
    "numpy.concatenate",
    "numpy.ones",
    "numpy.zeros",
    "pandas.Series",
    "range",
    "scipy.optimize.linprog"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian.opt": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "fairlearn.reductions._exponentiated_gradient._lagrangian.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.logging"
   ]
  },
  "type": "module"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "fairlearn.reductions.Reduction"
   ]
  },
  "type": "class"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient.__init__": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient._format_results": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "ExponentiatedGradientResult",
    "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.logger",
    "len",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient._format_results.best_classifier": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient._mean_pred"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient._pmf_predict": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient.fit": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "_Lagrangian",
    "fairlearn._input_validation._validate_and_reformat_reductions_input",
    "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.logger",
    "h",
    "min",
    "numpy.PINF",
    "numpy.exp",
    "numpy.sqrt",
    "pandas.DataFrame",
    "pandas.Series",
    "range"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient.predict": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "len",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.Reduction": {
  "data": {
   "shadows": "fairlearn.reductions.Reduction"
  },
  "type": "import"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient._mean_pred": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient._validate_and_reformat_reductions_input": {
  "data": {
   "shadows": "fairlearn._input_validation._validate_and_reformat_reductions_input"
  },
  "type": "import"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.logger": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fairlearn.reductions._grid_search": {
  "data": {},
  "type": "module"
 },
 "fairlearn.reductions._grid_search.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "fairlearn.reductions._grid_search.grid_search": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "fairlearn.reductions._grid_search.grid_search.logging"
   ]
  },
  "type": "module"
 },
 "fairlearn.reductions._grid_search.grid_search.ClassificationMoment": {
  "data": {
   "shadows": "fairlearn.reductions._moments.ClassificationMoment"
  },
  "type": "import"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "fairlearn.reductions.Reduction"
   ]
  },
  "type": "class"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.__init__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "RuntimeError",
    "fairlearn.reductions._grid_search.grid_search.TRADEOFF_OPTIMIZATION",
    "fairlearn.reductions._moments.Moment",
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.all_results": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.best_result": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.fit": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "GridSearchResult",
    "RuntimeError",
    "fairlearn._input_validation._validate_and_reformat_reductions_input",
    "fairlearn.reductions._grid_search.grid_search.TRADEOFF_OPTIMIZATION",
    "fairlearn.reductions._grid_search.grid_search._GridGenerator",
    "fairlearn.reductions._grid_search.grid_search.copy",
    "fairlearn.reductions._grid_search.grid_search.logger",
    "fairlearn.reductions._moments.ClassificationMoment",
    "isinstance",
    "min",
    "numpy.unique",
    "set",
    "time.time"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.fit.loss_fct": {
  "data": {
   "lineno": 255
  },
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.fit.predict_fct": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.predict": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "fairlearn._NO_PREDICT_BEFORE_FIT",
    "sklearn.exceptions.NotFittedError"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.GridSearch.predict_proba": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "fairlearn._NO_PREDICT_BEFORE_FIT",
    "sklearn.exceptions.NotFittedError"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search.Moment": {
  "data": {
   "shadows": "fairlearn.reductions._moments.Moment"
  },
  "type": "import"
 },
 "fairlearn.reductions._grid_search.grid_search.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "fairlearn.reductions._grid_search.grid_search.Reduction": {
  "data": {
   "shadows": "fairlearn.reductions.Reduction"
  },
  "type": "import"
 },
 "fairlearn.reductions._grid_search.grid_search.TRADEOFF_OPTIMIZATION": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "fairlearn.reductions._grid_search.grid_search._GridGenerator": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "fairlearn.reductions._grid_search.grid_search._GridGenerator.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "numpy.floor",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search._GridGenerator.accumulate_integer_grid": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "abs",
    "range"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search._GridGenerator.build_integer_grid": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search._NO_PREDICT_BEFORE_FIT": {
  "data": {
   "shadows": "fairlearn._NO_PREDICT_BEFORE_FIT"
  },
  "type": "import"
 },
 "fairlearn.reductions._grid_search.grid_search._validate_and_reformat_reductions_input": {
  "data": {
   "shadows": "fairlearn._input_validation._validate_and_reformat_reductions_input"
  },
  "type": "import"
 },
 "fairlearn.reductions._grid_search.grid_search.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "fairlearn.reductions._grid_search.grid_search.logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "fairlearn.reductions._grid_search.grid_search.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "fairlearn.reductions._grid_search.grid_search.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.reductions._grid_search.grid_search.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fairlearn.reductions._grid_search.grid_search.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "fairlearn.reductions._grid_search.grid_search_result": {
  "data": {},
  "type": "module"
 },
 "fairlearn.reductions._grid_search.grid_search_result.GridSearchResult": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "fairlearn.reductions._grid_search.grid_search_result.GridSearchResult.__init__": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search_result.GridSearchResult.gamma": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search_result.GridSearchResult.lambda_vec": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search_result.GridSearchResult.objective": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search_result.GridSearchResult.oracle_call_execution_time": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._grid_search.grid_search_result.GridSearchResult.predictor": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments": {
  "data": {},
  "type": "module"
 },
 "fairlearn.reductions._moments.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "fairlearn.reductions._moments.bounded_group_loss": {
  "data": {
   "symbols_in_volume": [
    "fairlearn.reductions._moments.bounded_group_loss.AbsoluteLoss",
    "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment"
   ]
  },
  "type": "module"
 },
 "fairlearn.reductions._moments.bounded_group_loss.AbsoluteLoss": {
  "data": {
   "lineno": 101
  },
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.AbsoluteLoss.__init__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.AbsoluteLoss.eval": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.clip"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.AverageLossMoment": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment"
   ]
  },
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.AverageLossMoment.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.default_objective": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "AverageLossMoment"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.gamma": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "predictor",
    "str"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.load_data": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "fairlearn._input_validation._KW_SENSITIVE_FEATURES",
    "pandas.DataFrame",
    "pandas.Series",
    "super"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.project_lambda": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment.signed_weights": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.GroupLossMoment": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment"
   ]
  },
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.GroupLossMoment.__init__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.SquareLoss": {
  "data": {
   "lineno": 86
  },
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.SquareLoss.__init__": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.SquareLoss.eval": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.clip"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ZeroOneLoss": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "fairlearn.reductions._moments.bounded_group_loss.AbsoluteLoss"
   ]
  },
  "type": "class"
 },
 "fairlearn.reductions._moments.bounded_group_loss.ZeroOneLoss.__init__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.bounded_group_loss._KW_SENSITIVE_FEATURES": {
  "data": {
   "shadows": "fairlearn._input_validation._KW_SENSITIVE_FEATURES"
  },
  "type": "import"
 },
 "fairlearn.reductions._moments.bounded_group_loss.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.reductions._moments.bounded_group_loss.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fairlearn.reductions._moments.conditional_selection_rate": {
  "data": {
   "symbols_in_volume": [
    "fairlearn.reductions._moments.conditional_selection_rate.ConditionalSelectionRate"
   ]
  },
  "type": "module"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.ConditionalSelectionRate": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.ConditionalSelectionRate.default_objective": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ErrorRate"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.ConditionalSelectionRate.gamma": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "fairlearn.reductions._moments.conditional_selection_rate._DIFF",
    "pandas.concat",
    "predictor",
    "str"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.ConditionalSelectionRate.load_data": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "super"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.ConditionalSelectionRate.project_lambda": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.ConditionalSelectionRate.signed_weights": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.DemographicParity": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "fairlearn.reductions._moments.conditional_selection_rate.ConditionalSelectionRate"
   ]
  },
  "type": "class"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.DemographicParity.load_data": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.EqualizedOdds": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "fairlearn.reductions._moments.conditional_selection_rate.ConditionalSelectionRate"
   ]
  },
  "type": "class"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.EqualizedOdds.load_data": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "pandas.Series",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.conditional_selection_rate._DIFF": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "fairlearn.reductions._moments.conditional_selection_rate.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fairlearn.reductions._moments.error_rate": {
  "data": {},
  "type": "module"
 },
 "fairlearn.reductions._moments.error_rate.ErrorRate": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "fairlearn.reductions._moments.error_rate.ErrorRate.gamma": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandas.Series",
    "predictor",
    "str"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.error_rate.ErrorRate.load_data": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.error_rate.ErrorRate.project_lambda": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.error_rate.ErrorRate.signed_weights": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.error_rate.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fairlearn.reductions._moments.moment": {
  "data": {
   "symbols_in_volume": [
    "fairlearn.reductions._moments.moment.ClassificationMoment",
    "fairlearn.reductions._moments.moment.LossMoment",
    "fairlearn.reductions._moments.moment.Moment"
   ]
  },
  "type": "module"
 },
 "fairlearn.reductions._moments.moment.ClassificationMoment": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "fairlearn.reductions._moments.moment.Moment"
   ]
  },
  "type": "class"
 },
 "fairlearn.reductions._moments.moment.LossMoment": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "fairlearn.reductions._moments.moment.Moment"
   ]
  },
  "type": "class"
 },
 "fairlearn.reductions._moments.moment.LossMoment.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "fairlearn.reductions._moments.moment.Moment.__init__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment.gamma": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment.load_data": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "fairlearn._input_validation._KW_SENSITIVE_FEATURES",
    "fairlearn.reductions._moments.moment._GROUP_ID",
    "fairlearn.reductions._moments.moment._LABEL",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment.project_lambda": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment.signed_weights": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.moment.Moment.total_samples": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._moments.moment._ALL": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "fairlearn.reductions._moments.moment._EVENT": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "fairlearn.reductions._moments.moment._GROUP_ID": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "fairlearn.reductions._moments.moment._KW_SENSITIVE_FEATURES": {
  "data": {
   "shadows": "fairlearn._input_validation._KW_SENSITIVE_FEATURES"
  },
  "type": "import"
 },
 "fairlearn.reductions._moments.moment._LABEL": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "fairlearn.reductions._moments.moment._LOSS": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "fairlearn.reductions._moments.moment._PREDICTION": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "fairlearn.reductions._moments.moment._SIGN": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "fairlearn.reductions._moments.moment.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fairlearn.reductions._reduction": {
  "data": {
   "symbols_in_volume": [
    "fairlearn.reductions._reduction.Reduction"
   ]
  },
  "type": "module"
 },
 "fairlearn.reductions._reduction.Reduction": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "fairlearn.reductions._reduction.Reduction.fit": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._reduction.Reduction.predict": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "fairlearn.reductions._reduction.Reduction.predict_proba": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "fairlearn.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "fairlearn.widget": {
  "data": {},
  "type": "module"
 },
 "fairlearn.widget.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "fairlearn.widget._fairlearn_dashboard": {
  "data": {},
  "type": "module"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "FairlearnWidget",
    "IPython.display.display",
    "ValueError",
    "Warning",
    "dict",
    "fairlearn.metrics.group_accuracy_score",
    "fairlearn.metrics.group_balanced_root_mean_squared_error",
    "fairlearn.metrics.group_fallout_rate",
    "fairlearn.metrics.group_max_error",
    "fairlearn.metrics.group_mean_absolute_error",
    "fairlearn.metrics.group_mean_overprediction",
    "fairlearn.metrics.group_mean_prediction",
    "fairlearn.metrics.group_mean_squared_error",
    "fairlearn.metrics.group_mean_underprediction",
    "fairlearn.metrics.group_median_absolute_error",
    "fairlearn.metrics.group_miss_rate",
    "fairlearn.metrics.group_precision_score",
    "fairlearn.metrics.group_r2_score",
    "fairlearn.metrics.group_recall_score",
    "fairlearn.metrics.group_roc_auc_score",
    "fairlearn.metrics.group_root_mean_squared_error",
    "fairlearn.metrics.group_selection_rate",
    "fairlearn.metrics.group_specificity_score",
    "fairlearn.metrics.group_zero_one_loss",
    "isinstance",
    "len",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard._convert_to_list": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard._on_request": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "fairlearn.widget._fairlearn_dashboard.copy",
    "id",
    "method"
   ]
  },
  "type": "function"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard._sanitize_data_shape": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "len",
    "list",
    "map",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard._show": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "IPython.display.display"
   ]
  },
  "type": "function"
 },
 "fairlearn.widget._fairlearn_dashboard.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.display": {
  "data": {
   "shadows": "IPython.display.display"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.group_accuracy_score": {
  "data": {
   "shadows": "fairlearn.metrics.group_accuracy_score"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.group_balanced_root_mean_squared_error": {
  "data": {
   "shadows": "fairlearn.metrics.group_balanced_root_mean_squared_error"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.group_fallout_rate": {
  "data": {
   "shadows": "fairlearn.metrics.group_fallout_rate"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.group_max_error": {
  "data": {
   "shadows": "fairlearn.metrics.group_max_error"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.group_mean_absolute_error": {
  "data": {
   "shadows": "fairlearn.metrics.group_mean_absolute_error"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.group_mean_overprediction": {
  "data": {
   "shadows": "fairlearn.metrics.group_mean_overprediction"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.group_mean_prediction": {
  "data": {
   "shadows": "fairlearn.metrics.group_mean_prediction"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.group_mean_squared_error": {
  "data": {
   "shadows": "fairlearn.metrics.group_mean_squared_error"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.group_mean_underprediction": {
  "data": {
   "shadows": "fairlearn.metrics.group_mean_underprediction"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.group_median_absolute_error": {
  "data": {
   "shadows": "fairlearn.metrics.group_median_absolute_error"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.group_miss_rate": {
  "data": {
   "shadows": "fairlearn.metrics.group_miss_rate"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.group_precision_score": {
  "data": {
   "shadows": "fairlearn.metrics.group_precision_score"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.group_r2_score": {
  "data": {
   "shadows": "fairlearn.metrics.group_r2_score"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.group_recall_score": {
  "data": {
   "shadows": "fairlearn.metrics.group_recall_score"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.group_roc_auc_score": {
  "data": {
   "shadows": "fairlearn.metrics.group_roc_auc_score"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.group_root_mean_squared_error": {
  "data": {
   "shadows": "fairlearn.metrics.group_root_mean_squared_error"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.group_selection_rate": {
  "data": {
   "shadows": "fairlearn.metrics.group_selection_rate"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.group_specificity_score": {
  "data": {
   "shadows": "fairlearn.metrics.group_specificity_score"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.group_zero_one_loss": {
  "data": {
   "shadows": "fairlearn.metrics.group_zero_one_loss"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_dashboard.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_widget": {
  "data": {},
  "type": "module"
 },
 "fairlearn.widget._fairlearn_widget.Dict": {
  "data": {
   "shadows": "traitlets.Dict"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_widget.FairlearnWidget": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ipywidgets.DOMWidget",
    "ipywidgets.register",
    "traitlets.Dict",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "fairlearn.widget._fairlearn_widget.Unicode": {
  "data": {
   "shadows": "traitlets.Unicode"
  },
  "type": "import"
 },
 "fairlearn.widget._fairlearn_widget.widgets": {
  "data": {
   "shadows": "ipywidgets"
  },
  "type": "import"
 },
 "fairlearn.widget._jupyter_nbextension_paths": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "test": {
  "data": {},
  "type": "module"
 },
 "test.notebooks": {
  "data": {},
  "type": "module"
 },
 "test.notebooks.test_notebooks": {
  "data": {},
  "type": "module"
 },
 "test.notebooks.test_notebooks.ScrapSpec": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "test.notebooks.test_notebooks.ScrapSpec.__init__": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "test.notebooks.test_notebooks.ScrapSpec.code": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "test.notebooks.test_notebooks.ScrapSpec.expected": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "test.notebooks.test_notebooks.append_scrapbook_commands": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "nbformat.NO_CONVERT",
    "nbformat.read",
    "nbformat.v4.new_code_cell",
    "nbformat.write"
   ]
  },
  "type": "function"
 },
 "test.notebooks.test_notebooks.assay_one_notebook": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "papermill.execute_notebook",
    "scrapbook.read_notebook",
    "test.notebooks.test_notebooks.append_scrapbook_commands"
   ]
  },
  "type": "function"
 },
 "test.notebooks.test_notebooks.nbf": {
  "data": {
   "shadows": "nbformat"
  },
  "type": "import"
 },
 "test.notebooks.test_notebooks.pm": {
  "data": {
   "shadows": "papermill"
  },
  "type": "import"
 },
 "test.notebooks.test_notebooks.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.notebooks.test_notebooks.sb": {
  "data": {
   "shadows": "scrapbook"
  },
  "type": "import"
 },
 "test.notebooks.test_notebooks.test_binary_classification_on_compas_dataset": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "test.notebooks.test_notebooks.ScrapSpec",
    "test.notebooks.test_notebooks.assay_one_notebook",
    "test.notebooks.test_notebooks.pytest"
   ]
  },
  "type": "function"
 },
 "test.notebooks.test_notebooks.test_grid_search_for_binary_classification": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "test.notebooks.test_notebooks.ScrapSpec",
    "test.notebooks.test_notebooks.assay_one_notebook",
    "test.notebooks.test_notebooks.pytest"
   ]
  },
  "type": "function"
 },
 "test.notebooks.test_notebooks.test_grid_search_with_census_data": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "test.notebooks.test_notebooks.ScrapSpec",
    "test.notebooks.test_notebooks.assay_one_notebook",
    "test.notebooks.test_notebooks.pytest"
   ]
  },
  "type": "function"
 },
 "test.notebooks.test_notebooks.test_group_metrics_notebook": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "test.notebooks.test_notebooks.ScrapSpec",
    "test.notebooks.test_notebooks.assay_one_notebook",
    "test.notebooks.test_notebooks.pytest"
   ]
  },
  "type": "function"
 },
 "test.notebooks.test_notebooks.test_mitigating_disparities_in_ranking_from_binary_data": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "test.notebooks.test_notebooks.ScrapSpec",
    "test.notebooks.test_notebooks.assay_one_notebook",
    "test.notebooks.test_notebooks.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit": {
  "data": {},
  "type": "module"
 },
 "test.unit.input_convertors": {
  "data": {
   "symbols_in_volume": [
    "test.unit.input_convertors.ensure_dataframe",
    "test.unit.input_convertors.ensure_list",
    "test.unit.input_convertors.ensure_ndarray",
    "test.unit.input_convertors.ensure_ndarray_2d",
    "test.unit.input_convertors.ensure_series"
   ]
  },
  "type": "module"
 },
 "test.unit.input_convertors.conversions_for_1d": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "test.unit.input_convertors.ensure_dataframe": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.input_convertors.ensure_list": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.input_convertors.ensure_ndarray": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "numpy.asarray",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.input_convertors.ensure_ndarray_2d": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.expand_dims",
    "test.unit.input_convertors.ensure_ndarray"
   ]
  },
  "type": "function"
 },
 "test.unit.input_convertors.ensure_series": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.input_convertors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.input_convertors.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.metrics": {
  "data": {},
  "type": "module"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error": {
  "data": {},
  "type": "module"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.metrics": {
  "data": {
   "shadows": "fairlearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.test_all_correct": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "fairlearn.metrics.balanced_root_mean_squared_error"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.test_all_incorrect": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "fairlearn.metrics.balanced_root_mean_squared_error"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.test_probability_predict": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "fairlearn.metrics.balanced_root_mean_squared_error"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.test_weighted": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "fairlearn.metrics.balanced_root_mean_squared_error",
    "test.unit.metrics.test_balanced_root_mean_squared_error.math"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_balanced_root_mean_squared_error.test_y_true_not_0_1": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics.balanced_root_mean_squared_error",
    "test.unit.metrics.test_balanced_root_mean_squared_error.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics": {
  "data": {},
  "type": "module"
 },
 "test.unit.metrics.test_extra_metrics.metrics": {
  "data": {
   "shadows": "fairlearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_extra_metrics.test_fallout_all_correct": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "fairlearn.metrics.fallout_rate"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_fallout_none_correct": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "fairlearn.metrics.fallout_rate"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_fallout_some_correct": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "fairlearn.metrics.fallout_rate"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_miss_all_correct": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "fairlearn.metrics.miss_rate"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_miss_none_correct": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "fairlearn.metrics.miss_rate"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_miss_some_correct": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "fairlearn.metrics.miss_rate"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_miss_with_false_positive": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "fairlearn.metrics.miss_rate"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_specificity_all_correct": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "fairlearn.metrics.specificity_score"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_specificity_none_correct": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "fairlearn.metrics.specificity_score"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_specificity_some_correct": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "fairlearn.metrics.specificity_score"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_extra_metrics.test_specificity_some_correct_with_false_negative": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "fairlearn.metrics.specificity_score"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_result": {
  "data": {
   "symbols_in_volume": [
    "test.unit.metrics.test_group_metric_result.groups"
   ]
  },
  "type": "module"
 },
 "test.unit.metrics.test_group_metric_result.TestComparisons": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "test.unit.metrics.test_group_metric_result.TestComparisons.test_complex_equality": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "fairlearn.metrics.group_confusion_matrix",
    "test.unit.metrics.test_group_metric_result.Y_pred",
    "test.unit.metrics.test_group_metric_result.Y_true",
    "test.unit.metrics.test_group_metric_result.groups"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_result.TestComparisons.test_complex_inequality": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "fairlearn.metrics.group_confusion_matrix",
    "test.unit.metrics.test_group_metric_result.Y_pred",
    "test.unit.metrics.test_group_metric_result.Y_true",
    "test.unit.metrics.test_group_metric_result.gr_inv",
    "test.unit.metrics.test_group_metric_result.groups"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_result.TestComparisons.test_mixed_types": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "fairlearn.metrics.group_accuracy_score",
    "fairlearn.metrics.group_confusion_matrix",
    "test.unit.metrics.test_group_metric_result.Y_pred",
    "test.unit.metrics.test_group_metric_result.Y_true",
    "test.unit.metrics.test_group_metric_result.groups"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_result.TestComparisons.test_simple_equality": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "fairlearn.metrics.group_accuracy_score",
    "test.unit.metrics.test_group_metric_result.Y_pred",
    "test.unit.metrics.test_group_metric_result.Y_true",
    "test.unit.metrics.test_group_metric_result.groups"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_result.TestComparisons.test_simple_inequality": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "fairlearn.metrics.group_accuracy_score",
    "test.unit.metrics.test_group_metric_result.Y_pred",
    "test.unit.metrics.test_group_metric_result.Y_true",
    "test.unit.metrics.test_group_metric_result.gr_inv",
    "test.unit.metrics.test_group_metric_result.groups"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_result.Y_pred": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "test.unit.metrics.test_group_metric_result.Y_true": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "test.unit.metrics.test_group_metric_result.gr_inv": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "test.unit.metrics.test_group_metric_result.group_accuracy_score": {
  "data": {
   "shadows": "fairlearn.metrics.group_accuracy_score"
  },
  "type": "import"
 },
 "test.unit.metrics.test_group_metric_result.group_confusion_matrix": {
  "data": {
   "shadows": "fairlearn.metrics.group_confusion_matrix"
  },
  "type": "import"
 },
 "test.unit.metrics.test_group_metric_result.groups": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "test.unit.metrics.test_group_metric_set": {
  "data": {
   "symbols_in_volume": [
    "test.unit.metrics.test_group_metric_set.groups"
   ]
  },
  "type": "module"
 },
 "test.unit.metrics.test_group_metric_set.GroupMetricResult": {
  "data": {
   "shadows": "fairlearn.metrics.GroupMetricResult"
  },
  "type": "import"
 },
 "test.unit.metrics.test_group_metric_set.GroupMetricSet": {
  "data": {
   "shadows": "fairlearn.metrics.GroupMetricSet"
  },
  "type": "import"
 },
 "test.unit.metrics.test_group_metric_set.TestConsistencyCheck": {
  "data": {
   "lineno": 110
  },
  "type": "class"
 },
 "test.unit.metrics.test_group_metric_set.TestConsistencyCheck.test_group_names_do_not_match_groups": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics.GroupMetricResult",
    "fairlearn.metrics.GroupMetricSet",
    "fairlearn.metrics.GroupMetricSet.BINARY_CLASSIFICATION",
    "fairlearn.metrics.GroupMetricSet.GROUP_ACCURACY_SCORE",
    "fairlearn.metrics.GroupMetricSet.GROUP_MISS_RATE",
    "test.unit.metrics.test_group_metric_set.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestConsistencyCheck.test_length_mismatch_groups": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics.GroupMetricSet",
    "test.unit.metrics.test_group_metric_set.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestConsistencyCheck.test_length_mismatch_y_pred": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics.GroupMetricSet",
    "test.unit.metrics.test_group_metric_set.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestConsistencyCheck.test_length_mismatch_y_true": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics.GroupMetricSet",
    "test.unit.metrics.test_group_metric_set.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestConsistencyCheck.test_metric_has_bad_groups": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics.GroupMetricResult",
    "fairlearn.metrics.GroupMetricSet",
    "test.unit.metrics.test_group_metric_set.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestDictionaryConversions": {
  "data": {
   "lineno": 186
  },
  "type": "class"
 },
 "test.unit.metrics.test_group_metric_set.TestDictionaryConversions.test_round_trip_smoke": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "fairlearn.metrics.GroupMetricResult",
    "fairlearn.metrics.GroupMetricSet",
    "fairlearn.metrics.GroupMetricSet.BINARY_CLASSIFICATION",
    "fairlearn.metrics.GroupMetricSet.GROUP_ACCURACY_SCORE",
    "fairlearn.metrics.GroupMetricSet.GROUP_MISS_RATE",
    "fairlearn.metrics.GroupMetricSet.from_dict"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestDictionaryConversions.test_to_dict_smoke": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "fairlearn.metrics.GroupMetricResult",
    "fairlearn.metrics.GroupMetricSet",
    "fairlearn.metrics.GroupMetricSet.BINARY_CLASSIFICATION",
    "fairlearn.metrics.GroupMetricSet.GROUP_ACCURACY_SCORE",
    "fairlearn.metrics.GroupMetricSet.GROUP_MISS_RATE",
    "len",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties.test_group_names": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "fairlearn.metrics.GroupMetricSet"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties.test_group_names_not_list": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics.GroupMetricSet",
    "test.unit.metrics.test_group_metric_set.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties.test_group_names_values_not_string": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics.GroupMetricSet",
    "test.unit.metrics.test_group_metric_set.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties.test_groups": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "fairlearn.metrics.GroupMetricSet",
    "isinstance",
    "numpy.array_equal",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties.test_groups_not_from_zero": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics.GroupMetricSet",
    "test.unit.metrics.test_group_metric_set.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties.test_groups_not_sequential": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics.GroupMetricSet",
    "test.unit.metrics.test_group_metric_set.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties.test_groups_strings": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics.GroupMetricSet",
    "test.unit.metrics.test_group_metric_set.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties.test_metrics": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "fairlearn.metrics.GroupMetricResult",
    "fairlearn.metrics.GroupMetricSet"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties.test_metrics_keys_not_string": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics.GroupMetricResult",
    "fairlearn.metrics.GroupMetricSet",
    "test.unit.metrics.test_group_metric_set.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties.test_metrics_values_not_groupmetricresult": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics.GroupMetricSet",
    "test.unit.metrics.test_group_metric_set.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties.test_model_type_not_allowed": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics.GroupMetricSet",
    "test.unit.metrics.test_group_metric_set.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties.test_model_type_property": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "fairlearn.metrics.GroupMetricSet",
    "fairlearn.metrics.GroupMetricSet._allowed_model_types"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties.test_y_pred": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "fairlearn.metrics.GroupMetricSet",
    "isinstance",
    "numpy.array_equal",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.TestProperties.test_y_true": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "fairlearn.metrics.GroupMetricSet",
    "isinstance",
    "numpy.array_equal",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.Y_pred": {
  "data": {
   "lineno": 266
  },
  "type": "constant"
 },
 "test.unit.metrics.test_group_metric_set.Y_true": {
  "data": {
   "lineno": 265
  },
  "type": "constant"
 },
 "test.unit.metrics.test_group_metric_set.gr_alp": {
  "data": {
   "lineno": 269
  },
  "type": "constant"
 },
 "test.unit.metrics.test_group_metric_set.gr_in2": {
  "data": {
   "lineno": 268
  },
  "type": "constant"
 },
 "test.unit.metrics.test_group_metric_set.group_accuracy_score": {
  "data": {
   "shadows": "fairlearn.metrics.group_accuracy_score"
  },
  "type": "import"
 },
 "test.unit.metrics.test_group_metric_set.group_balanced_root_mean_squared_error": {
  "data": {
   "shadows": "fairlearn.metrics.group_balanced_root_mean_squared_error"
  },
  "type": "import"
 },
 "test.unit.metrics.test_group_metric_set.groups": {
  "data": {
   "lineno": 267
  },
  "type": "constant"
 },
 "test.unit.metrics.test_group_metric_set.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.metrics.test_group_metric_set.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.metrics.test_group_metric_set.test_compute_binary": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "fairlearn.metrics.GroupMetricSet",
    "fairlearn.metrics.GroupMetricSet.BINARY_CLASSIFICATION",
    "fairlearn.metrics.GroupMetricSet.GROUP_ACCURACY_SCORE.by_group",
    "fairlearn.metrics.GroupMetricSet.GROUP_ACCURACY_SCORE.overall",
    "fairlearn.metrics.group_accuracy_score",
    "len",
    "numpy.array_equal",
    "numpy.unique",
    "test.unit.metrics.test_group_metric_set.Y_pred",
    "test.unit.metrics.test_group_metric_set.Y_true",
    "test.unit.metrics.test_group_metric_set.groups"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.test_compute_regression": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "fairlearn.metrics.GroupMetricSet",
    "fairlearn.metrics.GroupMetricSet.GROUP_BALANCED_ROOT_MEAN_SQUARED_ERROR.by_group",
    "fairlearn.metrics.GroupMetricSet.GROUP_BALANCED_ROOT_MEAN_SQUARED_ERROR.overall",
    "fairlearn.metrics.GroupMetricSet.REGRESSION",
    "fairlearn.metrics.group_balanced_root_mean_squared_error",
    "len",
    "numpy.array_equal",
    "numpy.unique",
    "test.unit.metrics.test_group_metric_set.Y_pred",
    "test.unit.metrics.test_group_metric_set.Y_true",
    "test.unit.metrics.test_group_metric_set.groups"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.test_equality": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "fairlearn.metrics.GroupMetricSet",
    "fairlearn.metrics.GroupMetricSet.BINARY_CLASSIFICATION",
    "test.unit.metrics.test_group_metric_set.Y_pred",
    "test.unit.metrics.test_group_metric_set.Y_true",
    "test.unit.metrics.test_group_metric_set.gr_alp"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.test_groups_alphabetical": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "fairlearn.metrics.GroupMetricSet",
    "fairlearn.metrics.GroupMetricSet.BINARY_CLASSIFICATION",
    "fairlearn.metrics.GroupMetricSet.GROUP_ACCURACY_SCORE",
    "numpy.array_equal",
    "test.unit.metrics.test_group_metric_set.Y_pred",
    "test.unit.metrics.test_group_metric_set.Y_true",
    "test.unit.metrics.test_group_metric_set.gr_alp",
    "test.unit.metrics.test_group_metric_set.groups"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.test_groups_not_sequential_int": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "fairlearn.metrics.GroupMetricSet",
    "fairlearn.metrics.GroupMetricSet.BINARY_CLASSIFICATION",
    "numpy.array_equal",
    "test.unit.metrics.test_group_metric_set.Y_pred",
    "test.unit.metrics.test_group_metric_set.Y_true",
    "test.unit.metrics.test_group_metric_set.gr_in2",
    "test.unit.metrics.test_group_metric_set.groups"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_metric_set.test_inequality": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "fairlearn.metrics.GroupMetricSet",
    "fairlearn.metrics.GroupMetricSet.BINARY_CLASSIFICATION",
    "test.unit.metrics.test_group_metric_set.Y_pred",
    "test.unit.metrics.test_group_metric_set.Y_true",
    "test.unit.metrics.test_group_metric_set.gr_alp",
    "test.unit.metrics.test_group_metric_set.groups"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers": {
  "data": {
   "symbols_in_volume": [
    "fairlearn.metrics.group_accuracy_score",
    "fairlearn.metrics.group_confusion_matrix",
    "fairlearn.metrics.group_max_error",
    "fairlearn.metrics.group_mean_absolute_error",
    "fairlearn.metrics.group_mean_squared_error",
    "fairlearn.metrics.group_mean_squared_log_error",
    "fairlearn.metrics.group_median_absolute_error",
    "fairlearn.metrics.group_precision_score",
    "fairlearn.metrics.group_r2_score",
    "fairlearn.metrics.group_recall_score",
    "fairlearn.metrics.group_roc_auc_score",
    "fairlearn.metrics.group_zero_one_loss",
    "sklearn.metrics.accuracy_score",
    "sklearn.metrics.confusion_matrix",
    "sklearn.metrics.max_error",
    "sklearn.metrics.mean_absolute_error",
    "sklearn.metrics.mean_squared_error",
    "sklearn.metrics.mean_squared_log_error",
    "sklearn.metrics.median_absolute_error",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.r2_score",
    "sklearn.metrics.recall_score",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.zero_one_loss",
    "test.unit.metrics.test_group_sklearn_wrappers.a",
    "test.unit.metrics.test_group_sklearn_wrappers.b",
    "test.unit.metrics.test_group_sklearn_wrappers.c",
    "test.unit.metrics.test_group_sklearn_wrappers.metrics_no_sample_weights",
    "test.unit.metrics.test_group_sklearn_wrappers.supported_metrics_weighted",
    "test.unit.metrics.test_group_sklearn_wrappers.supported_metrics_weighted_binary"
   ]
  },
  "type": "module"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.Y_pred": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.Y_pred_ternary": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.Y_true": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.Y_true_ternary": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.a": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.b": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.c": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.group2": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.groups": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.metrics": {
  "data": {
   "shadows": "fairlearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.metrics_no_sample_weights": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.skm": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.supported_metrics_unweighted": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.supported_metrics_weighted": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.supported_metrics_weighted_binary": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_accuracy_score_unnormalized": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "fairlearn.metrics.group_accuracy_score",
    "sklearn.metrics.accuracy_score",
    "test.unit.metrics.test_group_sklearn_wrappers.Y_pred",
    "test.unit.metrics.test_group_sklearn_wrappers.Y_true",
    "test.unit.metrics.test_group_sklearn_wrappers.groups"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_confusion_matrix_labels": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "fairlearn.metrics.group_confusion_matrix",
    "numpy.array_equal",
    "sklearn.metrics.confusion_matrix",
    "test.unit.metrics.test_group_sklearn_wrappers.Y_pred",
    "test.unit.metrics.test_group_sklearn_wrappers.Y_true",
    "test.unit.metrics.test_group_sklearn_wrappers.groups"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_mean_squared_error_multioutput_list_ndarray": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "fairlearn.metrics.group_mean_squared_error",
    "len",
    "numpy.array_equal",
    "numpy.random.rand",
    "numpy.unique",
    "range",
    "sklearn.metrics.mean_squared_error",
    "test.unit.metrics.test_group_sklearn_wrappers.groups"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_mean_squared_error_multioutput_single_ndarray": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "fairlearn.metrics.group_mean_squared_error",
    "len",
    "numpy.array_equal",
    "numpy.random.rand",
    "sklearn.metrics.mean_squared_error",
    "test.unit.metrics.test_group_sklearn_wrappers.groups"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_precision_score_pos_label": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "fairlearn.metrics.group_precision_score",
    "numpy.array_equal",
    "sklearn.metrics.precision_score",
    "test.unit.metrics.test_group_sklearn_wrappers.Y_pred",
    "test.unit.metrics.test_group_sklearn_wrappers.Y_true",
    "test.unit.metrics.test_group_sklearn_wrappers.groups"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_precision_score_ternary": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "fairlearn.metrics.group_precision_score",
    "numpy.array_equal",
    "sklearn.metrics.precision_score",
    "test.unit.metrics.test_group_sklearn_wrappers.Y_pred_ternary",
    "test.unit.metrics.test_group_sklearn_wrappers.Y_true_ternary",
    "test.unit.metrics.test_group_sklearn_wrappers.group2"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_r2_score_multioutput": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "fairlearn.metrics.group_r2_score",
    "len",
    "numpy.array_equal",
    "numpy.asarray",
    "numpy.random.rand",
    "numpy.unique",
    "sklearn.metrics.r2_score",
    "test.unit.metrics.test_group_sklearn_wrappers.groups"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_recall_score_pos_label": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "fairlearn.metrics.group_recall_score",
    "numpy.array_equal",
    "sklearn.metrics.recall_score",
    "test.unit.metrics.test_group_sklearn_wrappers.Y_pred",
    "test.unit.metrics.test_group_sklearn_wrappers.Y_true",
    "test.unit.metrics.test_group_sklearn_wrappers.groups"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_recall_score_ternary": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "fairlearn.metrics.group_recall_score",
    "numpy.array_equal",
    "sklearn.metrics.recall_score",
    "test.unit.metrics.test_group_sklearn_wrappers.Y_pred_ternary",
    "test.unit.metrics.test_group_sklearn_wrappers.Y_true_ternary",
    "test.unit.metrics.test_group_sklearn_wrappers.group2"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_roc_auc_score_average": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "fairlearn.metrics.group_roc_auc_score",
    "sklearn.metrics.roc_auc_score",
    "test.unit.metrics.test_group_sklearn_wrappers.Y_pred",
    "test.unit.metrics.test_group_sklearn_wrappers.Y_true",
    "test.unit.metrics.test_group_sklearn_wrappers.groups"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_roc_auc_score_max_fpr": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "fairlearn.metrics.group_roc_auc_score",
    "sklearn.metrics.roc_auc_score",
    "test.unit.metrics.test_group_sklearn_wrappers.Y_pred",
    "test.unit.metrics.test_group_sklearn_wrappers.Y_true",
    "test.unit.metrics.test_group_sklearn_wrappers.groups"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_group_zero_one_loss_unnormalized": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "fairlearn.metrics.group_zero_one_loss",
    "sklearn.metrics.zero_one_loss",
    "test.unit.metrics.test_group_sklearn_wrappers.Y_pred",
    "test.unit.metrics.test_group_sklearn_wrappers.Y_true",
    "test.unit.metrics.test_group_sklearn_wrappers.groups"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_metric_unweighted": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "group_metric_func",
    "isinstance",
    "len",
    "metric_func",
    "numpy.array_equal",
    "numpy.ndarray",
    "test.unit.metrics.test_group_sklearn_wrappers.Y_pred",
    "test.unit.metrics.test_group_sklearn_wrappers.Y_true",
    "test.unit.metrics.test_group_sklearn_wrappers.groups",
    "test.unit.metrics.test_group_sklearn_wrappers.pytest",
    "test.unit.metrics.test_group_sklearn_wrappers.supported_metrics_unweighted"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_metric_weighted": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "group_metric_func",
    "isinstance",
    "len",
    "metric_func",
    "numpy.array_equal",
    "numpy.ndarray",
    "test.unit.metrics.test_group_sklearn_wrappers.Y_pred",
    "test.unit.metrics.test_group_sklearn_wrappers.Y_true",
    "test.unit.metrics.test_group_sklearn_wrappers.groups",
    "test.unit.metrics.test_group_sklearn_wrappers.pytest",
    "test.unit.metrics.test_group_sklearn_wrappers.supported_metrics_weighted_binary",
    "test.unit.metrics.test_group_sklearn_wrappers.weight"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.test_metric_weighted_ternary": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "group_metric_func",
    "isinstance",
    "len",
    "metric_func",
    "numpy.array_equal",
    "numpy.ndarray",
    "test.unit.metrics.test_group_sklearn_wrappers.Y_pred_ternary",
    "test.unit.metrics.test_group_sklearn_wrappers.Y_true_ternary",
    "test.unit.metrics.test_group_sklearn_wrappers.groups",
    "test.unit.metrics.test_group_sklearn_wrappers.pytest",
    "test.unit.metrics.test_group_sklearn_wrappers.supported_metrics_weighted",
    "test.unit.metrics.test_group_sklearn_wrappers.weight"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_group_sklearn_wrappers.weight": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "test.unit.metrics.test_input_manipulations": {
  "data": {},
  "type": "module"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArray1D": {
  "data": {
   "lineno": 52
  },
  "type": "class"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArray1D.test_2d_raises_exception": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d",
    "test.unit.metrics.test_input_manipulations.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArray1D.test_simple_list": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArray1D.test_simple_nested_list": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArray1D.test_simple_transposed_list": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArrayAndSqueeze": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArrayAndSqueeze.test_multi_columns": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArrayAndSqueeze.test_multi_rows": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArrayAndSqueeze.test_simple_list": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.TestConvertToNDArrayAndSqueeze.test_single_element": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_input_manipulations.fmim": {
  "data": {
   "shadows": "fairlearn.metrics._input_manipulations"
  },
  "type": "import"
 },
 "test.unit.metrics.test_input_manipulations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.metrics.test_input_manipulations.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.metrics.test_mean_predictions": {
  "data": {},
  "type": "module"
 },
 "test.unit.metrics.test_mean_predictions.metrics": {
  "data": {
   "shadows": "fairlearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_overprediction_unweighted": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "fairlearn.metrics.mean_overprediction"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_overprediction_unweighted_single": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "fairlearn.metrics.mean_overprediction"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_overprediction_weighted": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "fairlearn.metrics.mean_overprediction"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_overprediction_weighted_single": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "fairlearn.metrics.mean_overprediction"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_prediction_single": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "fairlearn.metrics.mean_prediction"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_prediction_unweighted": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "fairlearn.metrics.mean_prediction"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_prediction_weighted": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "fairlearn.metrics.mean_prediction"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_prediction_weighted_single": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "fairlearn.metrics.mean_prediction"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_underprediction_unweighted": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "fairlearn.metrics.mean_underprediction"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_underprediction_unweighted_single": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "fairlearn.metrics.mean_underprediction"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_underprediction_weighted": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "fairlearn.metrics.mean_underprediction"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_mean_predictions.test_mean_underprediction_weighted_single": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "fairlearn.metrics.mean_underprediction"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine": {
  "data": {},
  "type": "module"
 },
 "test.unit.metrics.test_metrics_engine.TestMakeGroupMetric": {
  "data": {
   "lineno": 254
  },
  "type": "class"
 },
 "test.unit.metrics.test_metrics_engine.TestMakeGroupMetric.test_keys_and_weights": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "fairlearn.metrics.make_group_metric",
    "grouped_metric_func",
    "len",
    "test.unit.input_convertors.conversions_for_1d",
    "test.unit.metrics.test_metrics_engine.mock_func_weight",
    "test.unit.metrics.test_metrics_engine.pytest",
    "transform_gid",
    "transform_s_w",
    "transform_y_a",
    "transform_y_p"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMakeGroupMetric.test_smoke": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "fairlearn.metrics.make_group_metric",
    "grouped_metric_func",
    "len",
    "test.unit.metrics.test_metrics_engine.mock_func",
    "test.unit.metrics.test_metrics_engine.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_groups_only_one_element": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "fairlearn.metrics.metric_by_group"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_groups_only_one_element.sum_lengths": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_matrix_metric": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "fairlearn.metrics.metric_by_group",
    "numpy.array_equal",
    "numpy.ones",
    "test.unit.input_convertors.conversions_for_1d",
    "test.unit.metrics.test_metrics_engine.mock_func_matrix_return",
    "test.unit.metrics.test_metrics_engine.pytest",
    "transform_gid",
    "transform_y_a",
    "transform_y_p"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_matrix_metric_other_properties": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics.metric_by_group",
    "test.unit.metrics.test_metrics_engine.mock_func_matrix_return",
    "test.unit.metrics.test_metrics_engine.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_metric_results_zero": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "fairlearn.metrics.metric_by_group"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_metric_results_zero.zero_results": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_negative_results": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "fairlearn.metrics.metric_by_group",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_negative_results.negative_results": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_single_element_input": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "fairlearn.metrics.metric_by_group"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_single_element_input.sum_lengths": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_smoke": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "fairlearn.metrics.metric_by_group",
    "len",
    "test.unit.input_convertors.conversions_for_1d",
    "test.unit.metrics.test_metrics_engine.mock_func",
    "test.unit.metrics.test_metrics_engine.pytest",
    "transform_gid",
    "transform_y_a",
    "transform_y_p"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_string_groups": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "fairlearn.metrics.metric_by_group",
    "len",
    "test.unit.input_convertors.conversions_for_1d",
    "test.unit.metrics.test_metrics_engine.mock_func",
    "test.unit.metrics.test_metrics_engine.pytest",
    "transform_gid",
    "transform_y_a",
    "transform_y_p"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_true_group_length_mismatch": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics.metric_by_group",
    "test.unit.input_convertors.conversions_for_1d",
    "test.unit.metrics.test_metrics_engine.mock_func_weight",
    "test.unit.metrics.test_metrics_engine.pytest",
    "transform_gid",
    "transform_y_a"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_true_predict_length_mismatch": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics.metric_by_group",
    "test.unit.input_convertors.conversions_for_1d",
    "test.unit.metrics.test_metrics_engine.mock_func_weight",
    "test.unit.metrics.test_metrics_engine.pytest",
    "transform_y_a",
    "transform_y_p"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_true_weight_length_mismatch": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.metrics.metric_by_group",
    "test.unit.input_convertors.conversions_for_1d",
    "test.unit.metrics.test_metrics_engine.mock_func_weight",
    "test.unit.metrics.test_metrics_engine.pytest",
    "transform_s_w",
    "transform_y_a"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.TestMetricByGroup.test_with_weights": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "fairlearn.metrics.metric_by_group",
    "len",
    "test.unit.input_convertors.conversions_for_1d",
    "test.unit.metrics.test_metrics_engine.mock_func_weight",
    "test.unit.metrics.test_metrics_engine.pytest",
    "transform_gid",
    "transform_s_w",
    "transform_y_a",
    "transform_y_p"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.conversions_for_1d": {
  "data": {
   "shadows": "test.unit.input_convertors.conversions_for_1d"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metrics_engine.metrics": {
  "data": {
   "shadows": "fairlearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metrics_engine.mock_func": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.mock_func_matrix_return": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "sum"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.mock_func_weight": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.multiply",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_metrics_engine.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.metrics.test_metrics_engine.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.metrics.test_selection_rate": {
  "data": {},
  "type": "module"
 },
 "test.unit.metrics.test_selection_rate.metrics": {
  "data": {
   "shadows": "fairlearn.metrics"
  },
  "type": "import"
 },
 "test.unit.metrics.test_selection_rate.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.metrics.test_selection_rate.test_group_selection_rate": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "fairlearn.metrics.group_selection_rate",
    "test.unit.metrics.test_selection_rate.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_selection_rate.test_selection_rate_non_numeric": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "fairlearn.metrics.selection_rate"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_selection_rate.test_selection_rate_unweighted": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "fairlearn.metrics.selection_rate"
   ]
  },
  "type": "function"
 },
 "test.unit.metrics.test_selection_rate.test_selection_rate_weighted": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "fairlearn.metrics.selection_rate"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing": {
  "data": {},
  "type": "module"
 },
 "test.unit.postprocessing.test_curve_utilities": {
  "data": {},
  "type": "module"
 },
 "test.unit.postprocessing.test_curve_utilities.LABEL_KEY": {
  "data": {
   "shadows": "fairlearn.postprocessing._constants.LABEL_KEY"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_curve_utilities.SCORE_KEY": {
  "data": {
   "shadows": "fairlearn.postprocessing._constants.SCORE_KEY"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_curve_utilities.SENSITIVE_FEATURE_KEY": {
  "data": {
   "shadows": "fairlearn.postprocessing._constants.SENSITIVE_FEATURE_KEY"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_curve_utilities.ThresholdOperation": {
  "data": {
   "shadows": "fairlearn.postprocessing._threshold_operation.ThresholdOperation"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_curve_utilities._assert_equal_points": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "len",
    "numpy.isclose",
    "range"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities._assert_interpolated_points_are_between_base_points": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "_get_base_point_coordinates",
    "len",
    "numpy.isclose",
    "range"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities._assert_interpolated_points_are_between_base_points._get_base_point_coordinates": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities._calculate_roc_points": {
  "data": {
   "shadows": "fairlearn.postprocessing._roc_curve_utilities._calculate_roc_points"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_curve_utilities._filter_points_to_get_convex_hull": {
  "data": {
   "shadows": "fairlearn.postprocessing._roc_curve_utilities._filter_points_to_get_convex_hull"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_curve_utilities._get_roc": {
  "data": {
   "shadows": "fairlearn.postprocessing._roc_curve_utilities._get_roc"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_curve_utilities._interpolate_curve": {
  "data": {
   "shadows": "fairlearn.postprocessing._roc_curve_utilities._interpolate_curve"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_curve_utilities.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_curve_utilities.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_curve_utilities.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_curve_utilities.test_assert_interpolated_curve": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "_assert_interpolated_points_are_between_base_points",
    "fairlearn.postprocessing._roc_curve_utilities._interpolate_curve",
    "numpy.linspace",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities.test_calculate_roc_points": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "_assert_equal_points",
    "fairlearn.postprocessing._constants.LABEL_KEY",
    "fairlearn.postprocessing._constants.SCORE_KEY",
    "fairlearn.postprocessing._constants.SENSITIVE_FEATURE_KEY",
    "fairlearn.postprocessing._roc_curve_utilities._calculate_roc_points",
    "fairlearn.postprocessing._roc_curve_utilities._filter_points_to_get_convex_hull",
    "fairlearn.postprocessing._threshold_operation.ThresholdOperation",
    "numpy.inf",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities.test_convex_hull": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "fairlearn.postprocessing._roc_curve_utilities._filter_points_to_get_convex_hull",
    "pandas.DataFrame",
    "test.unit.postprocessing.test_curve_utilities.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities.test_get_roc": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "_assert_interpolated_points_are_between_base_points",
    "_get_grouped_data_and_base_points",
    "fairlearn.postprocessing._roc_curve_utilities._get_roc",
    "fairlearn.postprocessing._roc_curve_utilities._interpolate_curve"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_curve_utilities.test_interpolate_curve": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "_assert_interpolated_points_are_between_base_points",
    "fairlearn.postprocessing._roc_curve_utilities._interpolate_curve",
    "numpy.linspace",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_operation": {
  "data": {},
  "type": "module"
 },
 "test.unit.postprocessing.test_threshold_operation.ThresholdOperation": {
  "data": {
   "shadows": "fairlearn.postprocessing._threshold_operation.ThresholdOperation"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_operation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_operation.test_predict_from_operation_invalid_operator": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.postprocessing._threshold_operation.ThresholdOperation",
    "test.unit.postprocessing.test_threshold_operation.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_operation.test_predict_from_operation_less": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "classifier",
    "fairlearn.postprocessing._threshold_operation.ThresholdOperation"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_operation.test_predict_from_operation_more": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "classifier",
    "fairlearn.postprocessing._threshold_operation.ThresholdOperation"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "module"
 },
 "test.unit.postprocessing.test_threshold_optimization.ALLOWED_INPUT_DATA_TYPES": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "test.unit.postprocessing.test_threshold_optimization.DEGENERATE_LABELS_ERROR_MESSAGE": {
  "data": {
   "shadows": "fairlearn.postprocessing._roc_curve_utilities.DEGENERATE_LABELS_ERROR_MESSAGE"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization.DEMOGRAPHIC_PARITY": {
  "data": {
   "shadows": "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization.DIFFERENT_INPUT_LENGTH_ERROR_MESSAGE": {
  "data": {
   "shadows": "fairlearn.postprocessing._threshold_optimizer.DIFFERENT_INPUT_LENGTH_ERROR_MESSAGE"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization.EITHER_PREDICTOR_OR_ESTIMATOR_ERROR_MESSAGE": {
  "data": {
   "shadows": "fairlearn.postprocessing._postprocessing.EITHER_PREDICTOR_OR_ESTIMATOR_ERROR_MESSAGE"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization.EMPTY_INPUT_ERROR_MESSAGE": {
  "data": {
   "shadows": "fairlearn.postprocessing._threshold_optimizer.EMPTY_INPUT_ERROR_MESSAGE"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization.EQUALIZED_ODDS": {
  "data": {
   "shadows": "fairlearn.postprocessing._constants.EQUALIZED_ODDS"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization.INPUT_DATA_FORMAT_ERROR_MESSAGE": {
  "data": {
   "shadows": "fairlearn.postprocessing._threshold_optimizer.INPUT_DATA_FORMAT_ERROR_MESSAGE"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization.MISSING_FIT_PREDICT_ERROR_MESSAGE": {
  "data": {
   "shadows": "fairlearn.postprocessing._postprocessing.MISSING_FIT_PREDICT_ERROR_MESSAGE"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization.MISSING_PREDICT_ERROR_MESSAGE": {
  "data": {
   "shadows": "fairlearn.postprocessing._postprocessing.MISSING_PREDICT_ERROR_MESSAGE"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization.MULTIPLE_DATA_COLUMNS_ERROR_MESSAGE": {
  "data": {
   "shadows": "fairlearn.postprocessing._threshold_optimizer.MULTIPLE_DATA_COLUMNS_ERROR_MESSAGE"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization.NON_BINARY_LABELS_ERROR_MESSAGE": {
  "data": {
   "shadows": "fairlearn.postprocessing._threshold_optimizer.NON_BINARY_LABELS_ERROR_MESSAGE"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization.NOT_SUPPORTED_CONSTRAINTS_ERROR_MESSAGE": {
  "data": {
   "shadows": "fairlearn.postprocessing._threshold_optimizer.NOT_SUPPORTED_CONSTRAINTS_ERROR_MESSAGE"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization.PREDICTOR_OR_ESTIMATOR_REQUIRED_ERROR_MESSAGE": {
  "data": {
   "shadows": "fairlearn.postprocessing._postprocessing.PREDICTOR_OR_ESTIMATOR_REQUIRED_ERROR_MESSAGE"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization.PREDICT_BEFORE_FIT_ERROR_MESSAGE": {
  "data": {
   "shadows": "fairlearn.postprocessing._threshold_optimizer.PREDICT_BEFORE_FIT_ERROR_MESSAGE"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization.ThresholdOptimizer": {
  "data": {
   "shadows": "fairlearn.postprocessing.ThresholdOptimizer"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization._threshold_optimization_demographic_parity": {
  "data": {
   "shadows": "fairlearn.postprocessing._threshold_optimizer._threshold_optimization_demographic_parity"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization._threshold_optimization_equalized_odds": {
  "data": {
   "shadows": "fairlearn.postprocessing._threshold_optimizer._threshold_optimization_equalized_odds"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization._vectorized_prediction": {
  "data": {
   "shadows": "fairlearn.postprocessing._threshold_optimizer._vectorized_prediction"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization.create_adjusted_predictor": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "fairlearn.postprocessing._threshold_optimizer._vectorized_prediction",
    "threshold_optimization_method"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_both_predictor_and_estimator_error": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ExampleEstimator",
    "ExamplePredictor",
    "ValueError",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
    "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
    "fairlearn.postprocessing._postprocessing.EITHER_PREDICTOR_OR_ESTIMATOR_ERROR_MESSAGE",
    "test.unit.postprocessing.test_threshold_optimization.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_constraints_not_supported": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ExamplePredictor",
    "ValueError",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "fairlearn.postprocessing._threshold_optimizer.NOT_SUPPORTED_CONSTRAINTS_ERROR_MESSAGE",
    "test.unit.postprocessing.test_threshold_optimization.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_inconsistent_input_data_types": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ExamplePredictor",
    "TypeError",
    "_format_as_list_of_lists",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
    "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
    "fairlearn.postprocessing._threshold_optimizer.INPUT_DATA_FORMAT_ERROR_MESSAGE.format",
    "str",
    "test.unit.postprocessing.test_threshold_optimization.pytest",
    "type"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_no_predictor_or_estimator_error": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
    "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
    "fairlearn.postprocessing._postprocessing.PREDICTOR_OR_ESTIMATOR_REQUIRED_ERROR_MESSAGE",
    "test.unit.postprocessing.test_threshold_optimization.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_not_estimator": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ExampleNotEstimator1",
    "ExampleNotEstimator2",
    "ValueError",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
    "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
    "fairlearn.postprocessing._postprocessing.MISSING_FIT_PREDICT_ERROR_MESSAGE",
    "test.unit.postprocessing.test_threshold_optimization.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_not_predictor": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ExampleNotPredictor",
    "ValueError",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
    "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
    "fairlearn.postprocessing._postprocessing.MISSING_PREDICT_ERROR_MESSAGE",
    "test.unit.postprocessing.test_threshold_optimization.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_predict_before_fit_error": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ExamplePredictor",
    "ValueError",
    "X_transform",
    "_format_as_list_of_lists",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
    "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
    "fairlearn.postprocessing._threshold_optimizer.PREDICT_BEFORE_FIT_ERROR_MESSAGE",
    "getattr",
    "sensitive_features_transform",
    "test.unit.postprocessing.test_threshold_optimization.ALLOWED_INPUT_DATA_TYPES",
    "test.unit.postprocessing.test_threshold_optimization.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_predict_different_argument_lengths": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "ExamplePredictor",
    "ValueError",
    "X_transform",
    "_format_as_list_of_lists",
    "adjusted_predictor",
    "adjusted_predictor.fit",
    "adjusted_predictor.predict",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
    "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
    "fairlearn.postprocessing._threshold_optimizer.DIFFERENT_INPUT_LENGTH_ERROR_MESSAGE.format",
    "sensitive_features_transform",
    "test.unit.postprocessing.test_threshold_optimization.ALLOWED_INPUT_DATA_TYPES",
    "test.unit.postprocessing.test_threshold_optimization.pytest",
    "y_transform"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_predict_multiple_sensitive_features_columns_error": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "ExamplePredictor",
    "ValueError",
    "X_transform",
    "_format_as_list_of_lists",
    "adjusted_predictor",
    "adjusted_predictor.fit",
    "adjusted_predictor.predict",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
    "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
    "fairlearn.postprocessing._threshold_optimizer.MULTIPLE_DATA_COLUMNS_ERROR_MESSAGE.format",
    "pandas.DataFrame",
    "test.unit.postprocessing.test_threshold_optimization.ALLOWED_INPUT_DATA_TYPES",
    "test.unit.postprocessing.test_threshold_optimization.pytest",
    "y_transform"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_predict_output_0_or_1": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "ExamplePredictor",
    "X_transform",
    "_format_as_list_of_lists",
    "adjusted_predictor",
    "adjusted_predictor.fit",
    "adjusted_predictor.predict",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
    "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
    "sensitive_features_transform",
    "test.unit.postprocessing.test_threshold_optimization.ALLOWED_INPUT_DATA_TYPES",
    "test.unit.postprocessing.test_threshold_optimization.pytest",
    "y_transform"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_degenerate_labels": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "ExamplePredictor",
    "ValueError",
    "X_transform",
    "_format_as_list_of_lists",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
    "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
    "fairlearn.postprocessing._roc_curve_utilities.DEGENERATE_LABELS_ERROR_MESSAGE.format",
    "sensitive_features_transform",
    "test.unit.postprocessing.test_threshold_optimization.ALLOWED_INPUT_DATA_TYPES",
    "test.unit.postprocessing.test_threshold_optimization.pytest",
    "y_transform"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_demographic_parity": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "_average_prediction",
    "_get_predictions_by_sensitive_feature",
    "adjusted_predictor",
    "create_adjusted_predictor",
    "fairlearn.postprocessing._threshold_optimizer._threshold_optimization_demographic_parity",
    "numpy.isclose",
    "score_transform",
    "sensitive_features_transform",
    "sorted",
    "test.unit.postprocessing.test_threshold_optimization.ALLOWED_INPUT_DATA_TYPES",
    "test.unit.postprocessing.test_threshold_optimization.pytest",
    "y_transform"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_demographic_parity._average_prediction": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "len",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_demographic_parity_e2e": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "ExamplePredictor",
    "X_transform",
    "_format_as_list_of_lists",
    "adjusted_predictor",
    "adjusted_predictor._pmf_predict",
    "adjusted_predictor.fit",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
    "numpy.array",
    "numpy.average",
    "numpy.isclose",
    "sensitive_features_transform",
    "test.unit.postprocessing.test_threshold_optimization.ALLOWED_INPUT_DATA_TYPES",
    "test.unit.postprocessing.test_threshold_optimization.pytest",
    "y_transform"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_different_input_lengths": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "ExamplePredictor",
    "ValueError",
    "X_transform",
    "_format_as_list_of_lists",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
    "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
    "fairlearn.postprocessing._threshold_optimizer.DIFFERENT_INPUT_LENGTH_ERROR_MESSAGE.format",
    "fairlearn.postprocessing._threshold_optimizer.EMPTY_INPUT_ERROR_MESSAGE",
    "len",
    "sensitive_features_transform",
    "test.unit.postprocessing.test_threshold_optimization.ALLOWED_INPUT_DATA_TYPES",
    "test.unit.postprocessing.test_threshold_optimization.pytest",
    "y_transform"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_equalized_odds": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "_average_prediction_for_label",
    "_get_predictions_by_sensitive_feature",
    "adjusted_predictor",
    "create_adjusted_predictor",
    "fairlearn.postprocessing._threshold_optimizer._threshold_optimization_equalized_odds",
    "numpy.isclose",
    "score_transform",
    "sensitive_features_transform",
    "sorted",
    "test.unit.postprocessing.test_threshold_optimization.ALLOWED_INPUT_DATA_TYPES",
    "test.unit.postprocessing.test_threshold_optimization.pytest",
    "y_transform"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_equalized_odds._average_prediction_for_label": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "len",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_equalized_odds_e2e": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "ExamplePredictor",
    "X_transform",
    "_format_as_list_of_lists",
    "adjusted_predictor",
    "adjusted_predictor._pmf_predict",
    "adjusted_predictor.fit",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
    "numpy.array",
    "numpy.average",
    "numpy.isclose",
    "sensitive_features_transform",
    "test.unit.postprocessing.test_threshold_optimization.ALLOWED_INPUT_DATA_TYPES",
    "test.unit.postprocessing.test_threshold_optimization.pytest",
    "y_transform"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_non_binary_labels": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ExamplePredictor",
    "ValueError",
    "X_transform",
    "_format_as_list_of_lists",
    "fairlearn.postprocessing.ThresholdOptimizer",
    "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
    "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
    "fairlearn.postprocessing._threshold_optimizer.NON_BINARY_LABELS_ERROR_MESSAGE",
    "sensitive_features_transform",
    "test.unit.postprocessing.test_threshold_optimization.ALLOWED_INPUT_DATA_TYPES",
    "test.unit.postprocessing.test_threshold_optimization.copy",
    "test.unit.postprocessing.test_threshold_optimization.pytest",
    "y_transform"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_utilities": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple",
    "int"
   ]
  },
  "type": "module"
 },
 "test.unit.postprocessing.test_utilities.ExampleEstimator": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "test.unit.postprocessing.test_utilities.ExampleEstimator.fit": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_utilities.ExampleEstimator.predict": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "test.unit.postprocessing.test_utilities.scores_ex"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_utilities.ExampleNotEstimator1": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "test.unit.postprocessing.test_utilities.ExampleNotEstimator1.fit": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_utilities.ExampleNotEstimator2": {
  "data": {
   "lineno": 44
  },
  "type": "class"
 },
 "test.unit.postprocessing.test_utilities.ExampleNotEstimator2.predict": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_utilities.ExampleNotPredictor": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "test.unit.postprocessing.test_utilities.ExamplePredictor": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "test.unit.postprocessing.test_utilities.ExamplePredictor.predict": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "test.unit.postprocessing.test_utilities.scores_ex"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_utilities.LABEL_KEY": {
  "data": {
   "shadows": "fairlearn.postprocessing._constants.LABEL_KEY"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_utilities.LabelAndPrediction": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "test.unit.postprocessing.test_utilities.SCORE_KEY": {
  "data": {
   "shadows": "fairlearn.postprocessing._constants.SCORE_KEY"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_utilities.SENSITIVE_FEATURE_KEY": {
  "data": {
   "shadows": "fairlearn.postprocessing._constants.SENSITIVE_FEATURE_KEY"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_utilities.ThresholdOperation": {
  "data": {
   "shadows": "fairlearn.postprocessing._threshold_operation.ThresholdOperation"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_utilities._format_as_list_of_lists": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_utilities._get_grouped_data_and_base_points": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "fairlearn.postprocessing._constants.LABEL_KEY",
    "fairlearn.postprocessing._constants.SCORE_KEY",
    "fairlearn.postprocessing._constants.SENSITIVE_FEATURE_KEY",
    "fairlearn.postprocessing._threshold_operation.ThresholdOperation",
    "numpy.inf",
    "numpy.linspace",
    "pandas.DataFrame",
    "test.unit.postprocessing.test_utilities.labels_ex",
    "test.unit.postprocessing.test_utilities.scores_ex",
    "test.unit.postprocessing.test_utilities.sensitive_features_ex1"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_utilities._get_predictions_by_sensitive_feature": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "adjusted_predictor",
    "collections.defaultdict",
    "len",
    "list",
    "range",
    "test.unit.postprocessing.test_utilities.LabelAndPrediction"
   ]
  },
  "type": "function"
 },
 "test.unit.postprocessing.test_utilities.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_utilities.degenerate_labels_ex": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "test.unit.postprocessing.test_utilities.labels_ex": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "test.unit.postprocessing.test_utilities.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_utilities.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_utilities.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.postprocessing.test_utilities.scores_ex": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "test.unit.postprocessing.test_utilities.sensitive_feature_names_ex1": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "test.unit.postprocessing.test_utilities.sensitive_feature_names_ex2": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "test.unit.postprocessing.test_utilities.sensitive_features_ex1": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "test.unit.postprocessing.test_utilities.sensitive_features_ex2": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "test.unit.reductions": {
  "data": {},
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient": {
  "data": {},
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners": {
  "data": {},
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresBinaryClassifierLearner": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresBinaryClassifierLearner.__init__": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresBinaryClassifierLearner.fit": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.linalg.lstsq",
    "numpy.newaxis",
    "numpy.sqrt",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresBinaryClassifierLearner.predict": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresRegressor": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresRegressor.__init__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresRegressor.fit": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.linalg.lstsq",
    "numpy.newaxis",
    "numpy.sqrt",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresRegressor.predict": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.simple_learners.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments": {
  "data": {
   "symbols_in_volume": [
    "test.unit.input_convertors.conversions_for_1d",
    "test.unit.input_convertors.ensure_dataframe",
    "test.unit.input_convertors.ensure_ndarray"
   ]
  },
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.DemographicParity": {
  "data": {
   "shadows": "fairlearn.reductions.DemographicParity"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.ErrorRate": {
  "data": {
   "shadows": "fairlearn.reductions.ErrorRate"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.ExponentiatedGradient": {
  "data": {
   "shadows": "fairlearn.reductions.ExponentiatedGradient"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.TestExponentiatedGradientArguments": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.TestExponentiatedGradientArguments.setup_method": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "LeastSquaresBinaryClassifierLearner",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.TestExponentiatedGradientArguments.test_argument_types": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions.ErrorRate",
    "fairlearn.reductions.ExponentiatedGradient",
    "len",
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.candidate_A_transforms",
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.candidate_X_transforms",
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.candidate_Y_transforms",
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.pytest",
    "transformA",
    "transformX",
    "transformY"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.candidate_A_transforms": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.candidate_X_transforms": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.candidate_Y_transforms": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.conversions_for_1d": {
  "data": {
   "shadows": "test.unit.input_convertors.conversions_for_1d"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.ensure_dataframe": {
  "data": {
   "shadows": "test.unit.input_convertors.ensure_dataframe"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.ensure_ndarray": {
  "data": {
   "shadows": "test.unit.input_convertors.ensure_ndarray"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke": {
  "data": {},
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.DemographicParity": {
  "data": {
   "shadows": "fairlearn.reductions.DemographicParity"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.EqualizedOdds": {
  "data": {
   "shadows": "fairlearn.reductions.EqualizedOdds"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.ErrorRate": {
  "data": {
   "shadows": "fairlearn.reductions.ErrorRate"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.ExponentiatedGradient": {
  "data": {
   "shadows": "fairlearn.reductions.ExponentiatedGradient"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions.EqualizedOdds"
   ]
  },
  "type": "class"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.run_smoke_test": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "fairlearn.reductions.ErrorRate",
    "fairlearn.reductions.ExponentiatedGradient",
    "len",
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.setup_method": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "LeastSquaresBinaryClassifierLearner",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.test_simple_fit_predict": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "LeastSquaresBinaryClassifierLearner",
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions.ExponentiatedGradient",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke.test_smoke": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.reductions.exponentiated_gradient.test_utilities": {
  "data": {
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "module"
 },
 "test.unit.reductions.exponentiated_gradient.test_utilities.X1": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "test.unit.reductions.exponentiated_gradient.test_utilities.X2": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "test.unit.reductions.exponentiated_gradient.test_utilities.X3": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "test.unit.reductions.exponentiated_gradient.test_utilities.labels": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "test.unit.reductions.exponentiated_gradient.test_utilities.sensitive_features": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "test.unit.reductions.grid_search": {
  "data": {},
  "type": "module"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments": {
  "data": {
   "symbols_in_volume": [
    "test.unit.input_convertors.conversions_for_1d",
    "test.unit.input_convertors.ensure_dataframe",
    "test.unit.input_convertors.ensure_ndarray"
   ]
  },
  "type": "module"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests._quick_data": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.stack"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_A_df_bad_columns": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "RuntimeError",
    "fairlearn.reductions.GridSearch",
    "pandas.DataFrame",
    "str",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_X_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_Y_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.pytest",
    "transformX",
    "transformY"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_A_ndarray_bad_columns": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "RuntimeError",
    "fairlearn.reductions.GridSearch",
    "numpy.stack",
    "str",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_X_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_Y_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.pytest",
    "transformX",
    "transformY"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_X_A_different_rows": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "RuntimeError",
    "fairlearn.reductions.GridSearch",
    "len",
    "numpy.random.randint",
    "str",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_A_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_X_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_Y_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.pytest",
    "transformA",
    "transformX",
    "transformY"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_X_Y_different_rows": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "RuntimeError",
    "fairlearn.reductions.GridSearch",
    "len",
    "numpy.random.randint",
    "str",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_A_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_X_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_Y_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.pytest",
    "transformA",
    "transformX",
    "transformY"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_X_is_None": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.reductions.GridSearch",
    "str",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_A_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_Y_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.pytest",
    "transformA",
    "transformY"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_Y_df_bad_columns": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "RuntimeError",
    "fairlearn.reductions.GridSearch",
    "pandas.DataFrame",
    "str",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_A_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_X_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.pytest",
    "transformA",
    "transformX"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_Y_is_None": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ValueError",
    "fairlearn.reductions.GridSearch",
    "str",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_A_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_X_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.pytest",
    "transformA",
    "transformX"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_Y_ndarray_bad_columns": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "RuntimeError",
    "fairlearn.reductions.GridSearch",
    "numpy.stack",
    "str",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_A_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_X_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.pytest",
    "transformA",
    "transformX"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_no_predict_before_fit": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "fairlearn.reductions.GridSearch",
    "sklearn.exceptions.NotFittedError",
    "str",
    "test.unit.reductions.grid_search.test_grid_search_arguments.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_no_predict_proba_before_fit": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "fairlearn.reductions.GridSearch",
    "sklearn.exceptions.NotFittedError",
    "str",
    "test.unit.reductions.grid_search.test_grid_search_arguments.pytest"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_sensitive_feature_non_binary": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "RuntimeError",
    "fairlearn.reductions.GridSearch",
    "str",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_A_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_X_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_Y_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.pytest",
    "transformA",
    "transformX",
    "transformY"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests.test_valid_inputs": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "fairlearn.reductions.GridSearch",
    "len",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_A_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_X_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_Y_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.pytest",
    "transformA",
    "transformX",
    "transformY"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ConditionalOpportunityTests": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests"
   ]
  },
  "type": "class"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ConditionalOpportunityTests.test_Y_not_0_1": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "RuntimeError",
    "fairlearn.reductions.GridSearch",
    "str",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_A_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_X_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_Y_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.pytest",
    "transformA",
    "transformX",
    "transformY"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ConditionalOpportunityTests.test_Y_ternary": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "RuntimeError",
    "fairlearn.reductions.GridSearch",
    "str",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_A_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_X_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_Y_transforms",
    "test.unit.reductions.grid_search.test_grid_search_arguments.pytest",
    "transformA",
    "transformX",
    "transformY"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.DemographicParity": {
  "data": {
   "shadows": "fairlearn.reductions.DemographicParity"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.EqualizedOdds": {
  "data": {
   "shadows": "fairlearn.reductions.EqualizedOdds"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.GridSearch": {
  "data": {
   "shadows": "fairlearn.reductions.GridSearch"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.GroupLossMoment": {
  "data": {
   "shadows": "fairlearn.reductions.GroupLossMoment"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestBoundedGroupLoss": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests"
   ]
  },
  "type": "class"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestBoundedGroupLoss.setup_method": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "fairlearn.reductions.GroupLossMoment",
    "fairlearn.reductions.ZeroOneLoss",
    "sklearn.linear_model.LinearRegression"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestDemographicParity": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "test.unit.reductions.grid_search.test_grid_search_arguments.ConditionalOpportunityTests"
   ]
  },
  "type": "class"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestDemographicParity.setup_method": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "fairlearn.reductions.DemographicParity",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestEqualizedOdds": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "test.unit.reductions.grid_search.test_grid_search_arguments.ConditionalOpportunityTests"
   ]
  },
  "type": "class"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.TestEqualizedOdds.setup_method": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "fairlearn.reductions.EqualizedOdds",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ZeroOneLoss": {
  "data": {
   "shadows": "fairlearn.reductions.ZeroOneLoss"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_A_transforms": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_X_transforms": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_Y_transforms": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.conversions_for_1d": {
  "data": {
   "shadows": "test.unit.input_convertors.conversions_for_1d"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ensure_dataframe": {
  "data": {
   "shadows": "test.unit.input_convertors.ensure_dataframe"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.ensure_ndarray": {
  "data": {
   "shadows": "test.unit.input_convertors.ensure_ndarray"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_arguments.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity": {
  "data": {},
  "type": "module"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.DemographicParity": {
  "data": {
   "shadows": "fairlearn.reductions.DemographicParity"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.GridSearch": {
  "data": {
   "shadows": "fairlearn.reductions.GridSearch"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity._simple_threshold_data": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "len",
    "numpy.concatenate",
    "numpy.full",
    "numpy.linspace",
    "numpy.ones",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.test_can_specify_and_generate_lambda_vecs": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions.GridSearch",
    "len",
    "numpy.array_equal",
    "numpy.zeros",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "pandas.concat",
    "range",
    "sklearn.linear_model.LogisticRegression",
    "sorted",
    "test.unit.reductions.grid_search.test_grid_search_demographicparity._simple_threshold_data",
    "test.unit.reductions.grid_search.test_grid_search_demographicparity.copy"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.test_demographicparity_fair_uneven_populations": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions.GridSearch",
    "len",
    "numpy.allclose",
    "numpy.array_equal",
    "pandas.DataFrame",
    "sklearn.linear_model.LogisticRegression",
    "test.unit.reductions.grid_search.test_grid_search_demographicparity._simple_threshold_data"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_demographicparity.test_lambda_vec_zero_unchanged_model": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions.GridSearch",
    "len",
    "numpy.array_equal",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "sklearn.linear_model.LogisticRegression",
    "test.unit.reductions.grid_search.test_grid_search_demographicparity._simple_threshold_data",
    "test.unit.reductions.grid_search.test_grid_search_demographicparity.copy"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression": {
  "data": {},
  "type": "module"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.GridSearch": {
  "data": {
   "shadows": "fairlearn.reductions.GridSearch"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.GroupLossMoment": {
  "data": {
   "shadows": "fairlearn.reductions.GroupLossMoment"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.SquareLoss": {
  "data": {
   "shadows": "fairlearn.reductions.SquareLoss"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.ZeroOneLoss": {
  "data": {
   "shadows": "fairlearn.reductions.ZeroOneLoss"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression._simple_regression_data": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "len",
    "numpy.concatenate",
    "numpy.full",
    "numpy.linspace",
    "numpy.ones",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.logging_all_close": {
  "data": {
   "shadows": "test.unit.utility_functions.logging_all_close"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.test_bgl_lagrange_specifications": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "fairlearn.reductions.GridSearch",
    "fairlearn.reductions.GroupLossMoment",
    "fairlearn.reductions.ZeroOneLoss",
    "len",
    "numpy.array_equal",
    "pandas.Int64Index",
    "pandas.Series",
    "pandas.concat",
    "range",
    "sklearn.linear_model.LinearRegression",
    "sorted",
    "test.unit.reductions.grid_search.test_grid_search_regression._simple_regression_data",
    "test.unit.reductions.grid_search.test_grid_search_regression.copy"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.test_bgl_unfair": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "fairlearn.reductions.GridSearch",
    "fairlearn.reductions.GroupLossMoment",
    "fairlearn.reductions.SquareLoss",
    "len",
    "numpy.allclose",
    "numpy.inf",
    "pandas.DataFrame",
    "sklearn.linear_model.LinearRegression",
    "test.unit.reductions.grid_search.test_grid_search_regression._simple_regression_data",
    "test.unit.utility_functions.logging_all_close"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.grid_search.test_grid_search_regression.test_bgl_unmitigated_same": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "fairlearn.reductions.GridSearch",
    "fairlearn.reductions.GroupLossMoment",
    "fairlearn.reductions.ZeroOneLoss",
    "numpy.allclose",
    "pandas.DataFrame",
    "pandas.Int64Index",
    "pandas.Series",
    "sklearn.linear_model.LinearRegression",
    "sorted",
    "test.unit.reductions.grid_search.test_grid_search_regression._simple_regression_data",
    "test.unit.reductions.grid_search.test_grid_search_regression.copy"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.moments": {
  "data": {},
  "type": "module"
 },
 "test.unit.reductions.moments.data_generator": {
  "data": {},
  "type": "module"
 },
 "test.unit.reductions.moments.data_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.data_generator.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.data_generator.simple_binary_threshold_data": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.full",
    "numpy.linspace",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity": {
  "data": {},
  "type": "module"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity.DemographicParity": {
  "data": {
   "shadows": "fairlearn.reductions.DemographicParity"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity._EVENT": {
  "data": {
   "shadows": "fairlearn.reductions._moments.moment._EVENT"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity._GROUP_ID": {
  "data": {
   "shadows": "fairlearn.reductions._moments.moment._GROUP_ID"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity._SIGN": {
  "data": {
   "shadows": "fairlearn.reductions._moments.moment._SIGN"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity.test_construct_and_load": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "events",
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions._moments.moment._EVENT",
    "fairlearn.reductions._moments.moment._GROUP_ID",
    "fairlearn.reductions._moments.moment._SIGN",
    "len",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "simple_binary_threshold_data"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity.test_project_lambda_smoke_negatives": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "events",
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions._moments.moment._EVENT",
    "fairlearn.reductions._moments.moment._GROUP_ID",
    "fairlearn.reductions._moments.moment._SIGN",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity.test_project_lambda_smoke_positives": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "events",
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions._moments.moment._EVENT",
    "fairlearn.reductions._moments.moment._GROUP_ID",
    "fairlearn.reductions._moments.moment._SIGN",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_demographic_parity.test_signed_weights": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "events",
    "fairlearn.reductions.DemographicParity",
    "fairlearn.reductions._moments.moment._EVENT",
    "fairlearn.reductions._moments.moment._GROUP_ID",
    "fairlearn.reductions._moments.moment._SIGN",
    "numpy.array_equal",
    "numpy.concatenate",
    "numpy.full",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "simple_binary_threshold_data"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds": {
  "data": {},
  "type": "module"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds.EqualizedOdds": {
  "data": {
   "shadows": "fairlearn.reductions.EqualizedOdds"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds._EVENT": {
  "data": {
   "shadows": "fairlearn.reductions._moments.moment._EVENT"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds._GROUP_ID": {
  "data": {
   "shadows": "fairlearn.reductions._moments.moment._GROUP_ID"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds._SIGN": {
  "data": {
   "shadows": "fairlearn.reductions._moments.moment._SIGN"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds.test_construct_and_load": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "events",
    "fairlearn.reductions.EqualizedOdds",
    "fairlearn.reductions._moments.moment._EVENT",
    "fairlearn.reductions._moments.moment._GROUP_ID",
    "fairlearn.reductions._moments.moment._SIGN",
    "len",
    "numpy.array_equal",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "simple_binary_threshold_data",
    "sum"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds.test_project_lambda_smoke_negatives": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "events",
    "fairlearn.reductions.EqualizedOdds",
    "fairlearn.reductions._moments.moment._EVENT",
    "fairlearn.reductions._moments.moment._GROUP_ID",
    "fairlearn.reductions._moments.moment._SIGN",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds.test_project_lambda_smoke_positives": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "events",
    "fairlearn.reductions.EqualizedOdds",
    "fairlearn.reductions._moments.moment._EVENT",
    "fairlearn.reductions._moments.moment._GROUP_ID",
    "fairlearn.reductions._moments.moment._SIGN",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "test.unit.reductions.moments.test_moments_equalized_odds.test_signed_weights": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "events",
    "fairlearn.reductions.EqualizedOdds",
    "fairlearn.reductions._moments.moment._EVENT",
    "fairlearn.reductions._moments.moment._GROUP_ID",
    "fairlearn.reductions._moments.moment._SIGN",
    "int",
    "len",
    "numpy.array_equal",
    "numpy.concatenate",
    "numpy.full",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "simple_binary_threshold_data",
    "sum"
   ]
  },
  "type": "function"
 },
 "test.unit.utility_functions": {
  "data": {},
  "type": "module"
 },
 "test.unit.utility_functions.logging_all_close": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.asarray",
    "numpy.isclose",
    "numpy.logical_not",
    "numpy.where",
    "print"
   ]
  },
  "type": "function"
 },
 "test.unit.utility_functions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 }
}