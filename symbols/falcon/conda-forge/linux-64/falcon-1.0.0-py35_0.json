{
 "*": {
  "data": {
   "imports": [
    "falcon.util.misc",
    "falcon.util.time"
   ]
  },
  "type": "star-import"
 },
 "falcon": {
  "data": {},
  "type": "module"
 },
 "falcon.API": {
  "data": {
   "shadows": "falcon.api.API"
  },
  "type": "import"
 },
 "falcon.DEFAULT_MEDIA_TYPE": {
  "data": {
   "shadows": "falcon.api.DEFAULT_MEDIA_TYPE"
  },
  "type": "import"
 },
 "falcon.HTTPError": {
  "data": {
   "shadows": "falcon.http_error.HTTPError"
  },
  "type": "import"
 },
 "falcon.HTTPStatus": {
  "data": {
   "shadows": "falcon.http_status.HTTPStatus"
  },
  "type": "import"
 },
 "falcon.HTTP_METHODS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "falcon.Request": {
  "data": {
   "shadows": "falcon.request.Request"
  },
  "type": "import"
 },
 "falcon.RequestOptions": {
  "data": {
   "shadows": "falcon.request.RequestOptions"
  },
  "type": "import"
 },
 "falcon.Response": {
  "data": {
   "shadows": "falcon.response.Response"
  },
  "type": "import"
 },
 "falcon.__version__": {
  "data": {
   "shadows": "falcon.version.__version__"
  },
  "type": "import"
 },
 "falcon.after": {
  "data": {
   "shadows": "falcon.hooks.after"
  },
  "type": "import"
 },
 "falcon.api": {
  "data": {},
  "type": "module"
 },
 "falcon.api.API": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "falcon.status_codes.HTTP_100",
    "falcon.status_codes.HTTP_101",
    "falcon.status_codes.HTTP_204",
    "falcon.status_codes.HTTP_304",
    "object",
    "set"
   ]
  },
  "type": "class"
 },
 "falcon.api.API.__call__": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "Exception",
    "err_handler",
    "falcon.http_error.HTTPError",
    "falcon.http_status.HTTPStatus",
    "falcon.status_codes.HTTP_204",
    "falcon.status_codes.HTTP_304",
    "isinstance",
    "responder",
    "start_response",
    "str"
   ]
  },
  "type": "function"
 },
 "falcon.api.API.__init__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "falcon.DEFAULT_MEDIA_TYPE",
    "falcon.api_helpers.default_serialize_error",
    "falcon.api_helpers.prepare_middleware",
    "falcon.request.Request",
    "falcon.request.RequestOptions",
    "falcon.response.Response",
    "falcon.routing.DefaultRouter"
   ]
  },
  "type": "function"
 },
 "falcon.api.API._call_req_mw": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "process_request"
   ]
  },
  "type": "function"
 },
 "falcon.api.API._call_resp_mw": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "process_response"
   ]
  },
  "type": "function"
 },
 "falcon.api.API._call_rsrc_mw": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "process_resource"
   ]
  },
  "type": "function"
 },
 "falcon.api.API._compose_error_response": {
  "data": {
   "lineno": 533
  },
  "type": "function"
 },
 "falcon.api.API._compose_status_response": {
  "data": {
   "lineno": 518
  },
  "type": "function"
 },
 "falcon.api.API._get_body": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "bytes",
    "hasattr",
    "isinstance",
    "iter",
    "len",
    "wsgi_file_wrapper"
   ]
  },
  "type": "function"
 },
 "falcon.api.API._get_responder": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "KeyError",
    "responder"
   ]
  },
  "type": "function"
 },
 "falcon.api.API.add_error_handler": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "falcon.api.API.add_route": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "falcon.api.six",
    "falcon.routing.create_http_method_map",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "falcon.api.API.add_sink": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "falcon.api.re",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "falcon.api.API.set_error_serializer": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "falcon.api.inspect",
    "falcon.api_helpers.wrap_old_error_serializer",
    "len"
   ]
  },
  "type": "function"
 },
 "falcon.api.DEFAULT_MEDIA_TYPE": {
  "data": {
   "shadows": "falcon.DEFAULT_MEDIA_TYPE"
  },
  "type": "import"
 },
 "falcon.api.HTTPError": {
  "data": {
   "shadows": "falcon.http_error.HTTPError"
  },
  "type": "import"
 },
 "falcon.api.HTTPStatus": {
  "data": {
   "shadows": "falcon.http_status.HTTPStatus"
  },
  "type": "import"
 },
 "falcon.api.Request": {
  "data": {
   "shadows": "falcon.request.Request"
  },
  "type": "import"
 },
 "falcon.api.RequestOptions": {
  "data": {
   "shadows": "falcon.request.RequestOptions"
  },
  "type": "import"
 },
 "falcon.api.Response": {
  "data": {
   "shadows": "falcon.response.Response"
  },
  "type": "import"
 },
 "falcon.api.falcon.responders": {
  "data": {
   "shadows": "falcon.responders"
  },
  "type": "import"
 },
 "falcon.api.helpers": {
  "data": {
   "shadows": "falcon.api_helpers"
  },
  "type": "import"
 },
 "falcon.api.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "falcon.api.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "falcon.api.routing": {
  "data": {
   "shadows": "falcon.routing"
  },
  "type": "import"
 },
 "falcon.api.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "falcon.api.status": {
  "data": {
   "shadows": "falcon.status_codes"
  },
  "type": "import"
 },
 "falcon.api_helpers": {
  "data": {},
  "type": "module"
 },
 "falcon.api_helpers.default_serialize_error": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "falcon.api_helpers.prepare_middleware": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "TypeError",
    "falcon.util.get_bound_method",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "falcon.api_helpers.util": {
  "data": {
   "shadows": "falcon.util"
  },
  "type": "import"
 },
 "falcon.api_helpers.wrap_old_error_serializer": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "falcon.api_helpers.wrap_old_error_serializer.new_fn": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "old_fn"
   ]
  },
  "type": "function"
 },
 "falcon.before": {
  "data": {
   "shadows": "falcon.hooks.before"
  },
  "type": "import"
 },
 "falcon.bench": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.bench": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "falcon.bench.bench.guppy",
    "falcon.bench.bench.main",
    "falcon.testing.rand_string"
   ]
  },
  "type": "module"
 },
 "falcon.bench.bench.BODY": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "falcon.bench.bench.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "falcon.bench.bench.HEADERS": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "falcon.bench.bench.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "falcon.bench.bench.avg": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "len",
    "sum"
   ]
  },
  "type": "function"
 },
 "falcon.bench.bench.bench": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "create_bench",
    "decimal.Decimal",
    "falcon.bench.bench.gc",
    "falcon.bench.bench.heapy",
    "falcon.bench.bench.sys",
    "falcon.bench.bench.timeit",
    "str"
   ]
  },
  "type": "function"
 },
 "falcon.bench.bench.cProfile": {
  "data": {
   "shadows": "profile"
  },
  "type": "import"
 },
 "falcon.bench.bench.consolidate_datasets": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "collections.defaultdict",
    "list",
    "min"
   ]
  },
  "type": "function"
 },
 "falcon.bench.bench.create": {
  "data": {
   "shadows": "falcon.bench.create"
  },
  "type": "import"
 },
 "falcon.bench.bench.create_bench": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "eval",
    "falcon.bench.bench.bench",
    "falcon.testing.StartResponseMock"
   ]
  },
  "type": "function"
 },
 "falcon.bench.bench.create_bench.bench": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "AssertionError",
    "app"
   ]
  },
  "type": "function"
 },
 "falcon.bench.bench.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "falcon.bench.bench.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "falcon.bench.bench.get_env": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "falcon.bench.bench.hello_env",
    "falcon.bench.bench.queues_env"
   ]
  },
  "type": "function"
 },
 "falcon.bench.bench.guppy": {
  "data": {
   "shadows": "guppy"
  },
  "type": "import"
 },
 "falcon.bench.bench.heapy": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "falcon.bench.bench.hello_env": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "falcon.testing.create_environ"
   ]
  },
  "type": "function"
 },
 "falcon.bench.bench.helpers": {
  "data": {
   "shadows": "falcon.testing"
  },
  "type": "import"
 },
 "falcon.bench.bench.main": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "decimal.Decimal",
    "enumerate",
    "falcon.bench.bench.argparse",
    "falcon.bench.bench.consolidate_datasets",
    "falcon.bench.bench.get_env",
    "falcon.bench.bench.heapy",
    "falcon.bench.bench.profile",
    "falcon.bench.bench.round_to_int",
    "falcon.bench.bench.run",
    "int",
    "isinstance",
    "len",
    "list",
    "print",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "falcon.bench.bench.pprofile": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "falcon.bench.bench.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "falcon.bench.bench.profile": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "create_bench",
    "falcon.bench.bench.gc",
    "falcon.bench.bench.pprofile",
    "globals",
    "len",
    "locals",
    "print"
   ]
  },
  "type": "function"
 },
 "falcon.bench.bench.queues_env": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "falcon.testing.create_environ"
   ]
  },
  "type": "function"
 },
 "falcon.bench.bench.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "falcon.bench.bench.round_to_int": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "falcon.bench.bench.run": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ImportError",
    "falcon.bench.bench.bench",
    "falcon.bench.bench.create_bench",
    "falcon.bench.bench.get_env",
    "falcon.bench.bench.hello_env",
    "falcon.bench.bench.random",
    "falcon.bench.bench.sys",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "falcon.bench.bench.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "falcon.bench.bench.timeit": {
  "data": {
   "shadows": "timeit"
  },
  "type": "import"
 },
 "falcon.bench.create": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.create.Map": {
  "data": {
   "shadows": "werkzeug.routing.Map"
  },
  "type": "import"
 },
 "falcon.bench.create.Rule": {
  "data": {
   "shadows": "werkzeug.routing.Rule"
  },
  "type": "import"
 },
 "falcon.bench.create.api": {
  "data": {
   "shadows": "falcon.bench.queues.api"
  },
  "type": "import"
 },
 "falcon.bench.create.bottle": {
  "data": {
   "shadows": "bottle"
  },
  "type": "import"
 },
 "falcon.bench.create.bottle.hello": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "falcon.bench.create.bottle"
   ]
  },
  "type": "function"
 },
 "falcon.bench.create.cherrypy": {
  "data": {
   "shadows": "cherrypy",
   "symbols_in_volume": [
    "HelloResource",
    "Root"
   ]
  },
  "type": "import"
 },
 "falcon.bench.create.cherrypy.HelloResource": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.bench.create.cherrypy.HelloResource.GET": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "falcon.bench.create.cherrypy"
   ]
  },
  "type": "function"
 },
 "falcon.bench.create.cherrypy.Root": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.bench.create.falcon": {
  "data": {
   "shadows": "falcon",
   "symbols_in_volume": [
    "HelloResource"
   ]
  },
  "type": "import"
 },
 "falcon.bench.create.falcon.HelloResource": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "falcon.bench.create.falcon.HelloResource.on_get": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "falcon.bench.create.falcon_ext": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "falcon.bench.queues.api.create"
   ]
  },
  "type": "function"
 },
 "falcon.bench.create.flask": {
  "data": {
   "shadows": "flask"
  },
  "type": "import"
 },
 "falcon.bench.create.flask.hello": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "falcon.bench.create.flask"
   ]
  },
  "type": "function"
 },
 "falcon.bench.create.nuts": {
  "data": {
   "shadows": "falcon.bench.nuts.nuts.app"
  },
  "type": "import"
 },
 "falcon.bench.create.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "falcon.bench.create.pecan": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "falcon.bench.create.os",
    "falcon.bench.create.sys",
    "falcon.bench.nuts.nuts.app.__file__",
    "falcon.bench.nuts.nuts.app.create"
   ]
  },
  "type": "function"
 },
 "falcon.bench.create.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "falcon.bench.create.werkzeug": {
  "data": {
   "shadows": "werkzeug.wrappers",
   "symbols_in_volume": [
    "werkzeug.routing.Map",
    "werkzeug.routing.Rule"
   ]
  },
  "type": "import"
 },
 "falcon.bench.create.werkzeug.hello": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "werkzeug.wrappers.Request.application",
    "werkzeug.wrappers.Response"
   ]
  },
  "type": "function"
 },
 "falcon.bench.main": {
  "data": {
   "shadows": "falcon.bench.bench.main"
  },
  "type": "import"
 },
 "falcon.bench.nuts": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.nuts.config": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.nuts.config.app": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "falcon.bench.nuts.config.logging": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "falcon.bench.nuts.config.server": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "falcon.bench.nuts.nuts": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.nuts.nuts.app": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.nuts.nuts.app.create": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "pecan.make_app"
   ]
  },
  "type": "function"
 },
 "falcon.bench.nuts.nuts.app.make_app": {
  "data": {
   "shadows": "pecan.make_app"
  },
  "type": "import"
 },
 "falcon.bench.nuts.nuts.app.setup_app": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "getattr",
    "pecan.make_app"
   ]
  },
  "type": "function"
 },
 "falcon.bench.nuts.nuts.controllers": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.nuts.nuts.controllers.root": {
  "data": {
   "symbols_in_volume": [
    "falcon.bench.nuts.nuts.controllers.root.rand_string"
   ]
  },
  "type": "module"
 },
 "falcon.bench.nuts.nuts.controllers.root.HelloController": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.bench.nuts.nuts.controllers.root.HelloController._lookup": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "falcon.bench.nuts.nuts.controllers.root.TestController",
    "pecan.expose"
   ]
  },
  "type": "function"
 },
 "falcon.bench.nuts.nuts.controllers.root.RootController": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "falcon.bench.nuts.nuts.controllers.root.HelloController",
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.bench.nuts.nuts.controllers.root.RootController.index": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "falcon.bench.nuts.nuts.controllers.root.body",
    "pecan.expose",
    "pecan.response.headers"
   ]
  },
  "type": "function"
 },
 "falcon.bench.nuts.nuts.controllers.root.TestController": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.bench.nuts.nuts.controllers.root.TestController.__init__": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "falcon.bench.nuts.nuts.controllers.root.TestController.test": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "falcon.bench.nuts.nuts.controllers.root.body",
    "pecan.expose",
    "pecan.request.headers",
    "pecan.request.params",
    "pecan.response.headers"
   ]
  },
  "type": "function"
 },
 "falcon.bench.nuts.nuts.controllers.root.body": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "falcon.bench.nuts.nuts.controllers.root.expose": {
  "data": {
   "shadows": "pecan.expose"
  },
  "type": "import"
 },
 "falcon.bench.nuts.nuts.controllers.root.rand_string": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "chr",
    "falcon.bench.nuts.nuts.controllers.root.random",
    "int_gen",
    "max",
    "min",
    "ord",
    "range"
   ]
  },
  "type": "function"
 },
 "falcon.bench.nuts.nuts.controllers.root.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "falcon.bench.nuts.nuts.controllers.root.request": {
  "data": {
   "shadows": "pecan.request"
  },
  "type": "import"
 },
 "falcon.bench.nuts.nuts.controllers.root.response": {
  "data": {
   "shadows": "pecan.response"
  },
  "type": "import"
 },
 "falcon.bench.nuts.nuts.model": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.nuts.nuts.model.conf": {
  "data": {
   "shadows": "pecan.conf"
  },
  "type": "import"
 },
 "falcon.bench.nuts.nuts.model.init_model": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "falcon.bench.nuts.nuts.tests": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.nuts.nuts.tests.FunctionalTest": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "falcon.bench.nuts.nuts.tests.FunctionalTest.setUp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "falcon.bench.nuts.nuts.tests.os",
    "pecan.testing.load_test_app"
   ]
  },
  "type": "function"
 },
 "falcon.bench.nuts.nuts.tests.FunctionalTest.tearDown": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pecan.set_config"
   ]
  },
  "type": "function"
 },
 "falcon.bench.nuts.nuts.tests.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "falcon.bench.nuts.nuts.tests.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "falcon.bench.nuts.nuts.tests.config": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.nuts.nuts.tests.config.app": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "falcon.bench.nuts.nuts.tests.config.server": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "falcon.bench.nuts.nuts.tests.load_test_app": {
  "data": {
   "shadows": "pecan.testing.load_test_app"
  },
  "type": "import"
 },
 "falcon.bench.nuts.nuts.tests.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "falcon.bench.nuts.nuts.tests.set_config": {
  "data": {
   "shadows": "pecan.set_config"
  },
  "type": "import"
 },
 "falcon.bench.nuts.nuts.tests.test_functional": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.nuts.nuts.tests.test_functional.FunctionalTest": {
  "data": {
   "shadows": "nuts.tests.FunctionalTest"
  },
  "type": "import"
 },
 "falcon.bench.nuts.nuts.tests.test_functional.TestApp": {
  "data": {
   "shadows": "webtest.TestApp"
  },
  "type": "import"
 },
 "falcon.bench.nuts.nuts.tests.test_functional.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "falcon.bench.nuts.nuts.tests.test_functional.TestRootController": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "nuts.tests.FunctionalTest"
   ]
  },
  "type": "class"
 },
 "falcon.bench.nuts.nuts.tests.test_functional.TestRootController.test_get": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "falcon.bench.nuts.nuts.tests.test_functional.TestRootController.test_get_not_found": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "falcon.bench.nuts.nuts.tests.test_functional.TestRootController.test_search": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "falcon.bench.nuts.nuts.tests.test_units": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.nuts.nuts.tests.test_units.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "falcon.bench.nuts.nuts.tests.test_units.TestUnits": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "falcon.bench.nuts.nuts.tests.test_units.TestUnits.test_units": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "falcon.bench.nuts.setup": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "ez_setup.use_setuptools",
    "setuptools.find_packages",
    "setuptools.setup"
   ]
  },
  "type": "module"
 },
 "falcon.bench.nuts.setup.find_packages": {
  "data": {
   "shadows": "setuptools.find_packages"
  },
  "type": "import"
 },
 "falcon.bench.nuts.setup.setup": {
  "data": {
   "shadows": "setuptools.setup"
  },
  "type": "import"
 },
 "falcon.bench.nuts.setup.use_setuptools": {
  "data": {
   "shadows": "ez_setup.use_setuptools"
  },
  "type": "import"
 },
 "falcon.bench.queues": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.queues.api": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.queues.api.CannedResponseComponent": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.bench.queues.api.CannedResponseComponent.__init__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "falcon.bench.queues.api.CannedResponseComponent.process_response": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "falcon.bench.queues.api.falcon",
    "len"
   ]
  },
  "type": "function"
 },
 "falcon.bench.queues.api.RequestIDComponent": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.bench.queues.api.RequestIDComponent.process_request": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "falcon.bench.queues.api.RequestIDComponent.process_response": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "falcon.bench.queues.api.claims": {
  "data": {
   "shadows": "falcon.bench.queues.claims"
  },
  "type": "import"
 },
 "falcon.bench.queues.api.create": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "falcon.bench.queues.api.CannedResponseComponent",
    "falcon.bench.queues.api.RequestIDComponent",
    "falcon.bench.queues.api.falcon",
    "falcon.bench.queues.claims.CollectionResource",
    "falcon.bench.queues.claims.ItemResource",
    "falcon.bench.queues.messages.CollectionResource",
    "falcon.bench.queues.messages.ItemResource",
    "falcon.bench.queues.queues.CollectionResource",
    "falcon.bench.queues.queues.ItemResource",
    "falcon.bench.queues.stats.Resource"
   ]
  },
  "type": "function"
 },
 "falcon.bench.queues.api.falcon": {
  "data": {
   "shadows": "falcon"
  },
  "type": "import"
 },
 "falcon.bench.queues.api.messages": {
  "data": {
   "shadows": "falcon.bench.queues.messages"
  },
  "type": "import"
 },
 "falcon.bench.queues.api.queues": {
  "data": {
   "shadows": "falcon.bench.queues.queues"
  },
  "type": "import"
 },
 "falcon.bench.queues.api.stats": {
  "data": {
   "shadows": "falcon.bench.queues.stats"
  },
  "type": "import"
 },
 "falcon.bench.queues.claims": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.queues.claims.CollectionResource": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.bench.queues.claims.CollectionResource.on_post": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "falcon.bench.queues.claims.ItemResource": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.bench.queues.claims.ItemResource.on_delete": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "falcon.bench.queues.claims.ItemResource.on_get": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "falcon.bench.queues.claims.ItemResource.on_patch": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "falcon.bench.queues.messages": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.queues.messages.CollectionResource": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.bench.queues.messages.CollectionResource.on_get": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "falcon.bench.queues.messages.CollectionResource.on_post": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "falcon.bench.queues.messages.ItemResource": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.bench.queues.messages.ItemResource.on_delete": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "falcon.bench.queues.messages.ItemResource.on_get": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "falcon.bench.queues.queues": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.queues.queues.CollectionResource": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.bench.queues.queues.CollectionResource.on_get": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "falcon.bench.queues.queues.ItemResource": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.bench.queues.queues.ItemResource.on_delete": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "falcon.bench.queues.queues.ItemResource.on_get": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "falcon.bench.queues.queues.ItemResource.on_put": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "falcon.bench.queues.stats": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.queues.stats.Resource": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.bench.queues.stats.Resource.on_get": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "falcon.cmd": {
  "data": {},
  "type": "module"
 },
 "falcon.cmd.bench": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "falcon.cmd.bench.main"
   ]
  },
  "type": "module"
 },
 "falcon.cmd.bench.bench": {
  "data": {
   "shadows": "falcon.bench"
  },
  "type": "import"
 },
 "falcon.cmd.bench.fail": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "falcon.cmd.bench.sys"
   ]
  },
  "type": "function"
 },
 "falcon.cmd.bench.main": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "RuntimeError",
    "falcon.bench.main",
    "falcon.cmd.bench.fail"
   ]
  },
  "type": "function"
 },
 "falcon.cmd.bench.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "falcon.errors": {
  "data": {},
  "type": "module"
 },
 "falcon.errors.HTTPBadGateway": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPBadGateway.__init__": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "falcon.errors.HTTPBadGateway",
    "falcon.status_codes.HTTP_502",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPBadRequest": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPBadRequest.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "falcon.errors.HTTPBadRequest",
    "falcon.status_codes.HTTP_400",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPConflict": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPConflict.__init__": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "falcon.errors.HTTPConflict",
    "falcon.status_codes.HTTP_409",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPError": {
  "data": {
   "shadows": "falcon.http_error.HTTPError"
  },
  "type": "import"
 },
 "falcon.errors.HTTPForbidden": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPForbidden.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "falcon.errors.HTTPForbidden",
    "falcon.status_codes.HTTP_403",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPInternalServerError": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPInternalServerError.__init__": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "falcon.errors.HTTPInternalServerError",
    "falcon.status_codes.HTTP_500",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPInvalidHeader": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "falcon.errors.HTTPBadRequest"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPInvalidHeader.__init__": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "falcon.errors.HTTPInvalidHeader",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPInvalidParam": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "falcon.errors.HTTPBadRequest"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPInvalidParam.__init__": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "falcon.errors.HTTPInvalidParam",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPLengthRequired": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPLengthRequired.__init__": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "falcon.errors.HTTPLengthRequired",
    "falcon.status_codes.HTTP_411",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPMethodNotAllowed": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError",
    "falcon.http_error.OptionalRepresentation"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPMethodNotAllowed.__init__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "falcon.errors.HTTPMethodNotAllowed",
    "falcon.status_codes.HTTP_405",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPMissingHeader": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "falcon.errors.HTTPBadRequest"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPMissingHeader.__init__": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "falcon.errors.HTTPMissingHeader",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPMissingParam": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "falcon.errors.HTTPBadRequest"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPMissingParam.__init__": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "falcon.errors.HTTPMissingParam",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPNotAcceptable": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPNotAcceptable.__init__": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "falcon.errors.HTTPNotAcceptable",
    "falcon.status_codes.HTTP_406",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPNotFound": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError",
    "falcon.http_error.OptionalRepresentation"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPNotFound.__init__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "falcon.errors.HTTPNotFound",
    "falcon.status_codes.HTTP_404",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPPreconditionFailed": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPPreconditionFailed.__init__": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "falcon.errors.HTTPPreconditionFailed",
    "falcon.status_codes.HTTP_412",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPRangeNotSatisfiable": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError",
    "falcon.http_error.NoRepresentation"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPRangeNotSatisfiable.__init__": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "falcon.errors.HTTPRangeNotSatisfiable",
    "falcon.status_codes.HTTP_416",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPRequestEntityTooLarge": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPRequestEntityTooLarge.__init__": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "datetime.datetime",
    "falcon.errors.HTTPRequestEntityTooLarge",
    "falcon.status_codes.HTTP_413",
    "falcon.util.dt_to_http",
    "isinstance",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPServiceUnavailable": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPServiceUnavailable.__init__": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "datetime.datetime",
    "falcon.errors.HTTPServiceUnavailable",
    "falcon.status_codes.HTTP_503",
    "falcon.util.dt_to_http",
    "isinstance",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPTooManyRequests": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPTooManyRequests.__init__": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "datetime.datetime",
    "falcon.errors.HTTPTooManyRequests",
    "falcon.status_codes.HTTP_429",
    "falcon.util.dt_to_http",
    "isinstance",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPUnauthorized": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPUnauthorized.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "falcon.errors.HTTPUnauthorized",
    "falcon.status_codes.HTTP_401",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPUnavailableForLegalReasons": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError",
    "falcon.http_error.OptionalRepresentation"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPUnavailableForLegalReasons.__init__": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "falcon.errors.HTTPUnavailableForLegalReasons",
    "falcon.status_codes.HTTP_451",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPUnprocessableEntity": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPUnprocessableEntity.__init__": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "falcon.errors.HTTPUnprocessableEntity",
    "falcon.status_codes.HTTP_422",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPUnsupportedMediaType": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPUnsupportedMediaType.__init__": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "falcon.errors.HTTPUnsupportedMediaType",
    "falcon.status_codes.HTTP_415",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.NoRepresentation": {
  "data": {
   "shadows": "falcon.http_error.NoRepresentation"
  },
  "type": "import"
 },
 "falcon.errors.OptionalRepresentation": {
  "data": {
   "shadows": "falcon.http_error.OptionalRepresentation"
  },
  "type": "import"
 },
 "falcon.errors.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "falcon.errors.status": {
  "data": {
   "shadows": "falcon.status_codes"
  },
  "type": "import"
 },
 "falcon.errors.util": {
  "data": {
   "shadows": "falcon.util"
  },
  "type": "import"
 },
 "falcon.hooks": {
  "data": {},
  "type": "module"
 },
 "falcon.hooks.HTTP_METHODS": {
  "data": {
   "shadows": "falcon.HTTP_METHODS"
  },
  "type": "import"
 },
 "falcon.hooks._has_resource_arg": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "falcon.hooks.functools",
    "falcon.hooks.inspect",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "falcon.hooks._wrap_with_after": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "falcon.hooks._has_resource_arg"
   ]
  },
  "type": "function"
 },
 "falcon.hooks._wrap_with_after.do_after": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "functools.wraps",
    "responder",
    "shim"
   ]
  },
  "type": "function"
 },
 "falcon.hooks._wrap_with_after.shim": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "action"
   ]
  },
  "type": "function"
 },
 "falcon.hooks._wrap_with_before": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "action",
    "falcon.hooks._has_resource_arg",
    "shim"
   ]
  },
  "type": "function"
 },
 "falcon.hooks._wrap_with_before.do_before": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "functools.wraps",
    "responder",
    "shim"
   ]
  },
  "type": "function"
 },
 "falcon.hooks._wrap_with_before.shim": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "action"
   ]
  },
  "type": "function"
 },
 "falcon.hooks.after": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "falcon.hooks.after._after": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "AttributeError",
    "_wrap_with_after",
    "callable",
    "falcon.HTTP_METHODS",
    "falcon.hooks.six",
    "getattr",
    "isinstance",
    "let"
   ]
  },
  "type": "function"
 },
 "falcon.hooks.after._after.let": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "_wrap_with_after",
    "setattr"
   ]
  },
  "type": "function"
 },
 "falcon.hooks.before": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "falcon.hooks.before._before": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "AttributeError",
    "_wrap_with_before",
    "callable",
    "falcon.HTTP_METHODS",
    "falcon.hooks.six",
    "getattr",
    "isinstance",
    "let"
   ]
  },
  "type": "function"
 },
 "falcon.hooks.before._before.let": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "_wrap_with_before",
    "setattr"
   ]
  },
  "type": "function"
 },
 "falcon.hooks.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "falcon.hooks.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "falcon.hooks.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "falcon.hooks.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "falcon.http_error": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "collections.OrderedDict",
    "dict"
   ]
  },
  "type": "module"
 },
 "falcon.http_error.HTTPError": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "falcon.http_error.HTTPError.__init__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "falcon.util.uri.encode"
   ]
  },
  "type": "function"
 },
 "falcon.http_error.HTTPError.has_representation": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.http_error.HTTPError.to_dict": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "dict",
    "obj_type"
   ]
  },
  "type": "function"
 },
 "falcon.http_error.HTTPError.to_json": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "falcon.http_error.json"
   ]
  },
  "type": "function"
 },
 "falcon.http_error.HTTPError.to_xml": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "str",
    "xml.etree.ElementTree.Element",
    "xml.etree.ElementTree.SubElement",
    "xml.etree.ElementTree.tostring"
   ]
  },
  "type": "function"
 },
 "falcon.http_error.NoRepresentation": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.http_error.NoRepresentation.has_representation": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.http_error.OptionalRepresentation": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.http_error.OptionalRepresentation.has_representation": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "falcon.http_error.OptionalRepresentation",
    "property",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.http_error.OrderedDict": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "falcon.http_error.et": {
  "data": {
   "shadows": "xml.etree.ElementTree"
  },
  "type": "import"
 },
 "falcon.http_error.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "falcon.http_error.uri": {
  "data": {
   "shadows": "falcon.util.uri"
  },
  "type": "import"
 },
 "falcon.http_status": {
  "data": {},
  "type": "module"
 },
 "falcon.http_status.HTTPStatus": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "falcon.http_status.HTTPStatus.__init__": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "falcon.redirects": {
  "data": {},
  "type": "module"
 },
 "falcon.redirects.HTTPFound": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "falcon.http_status.HTTPStatus"
   ]
  },
  "type": "class"
 },
 "falcon.redirects.HTTPFound.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "falcon.redirects.HTTPFound",
    "falcon.redirects.falcon",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.redirects.HTTPMovedPermanently": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "falcon.http_status.HTTPStatus"
   ]
  },
  "type": "class"
 },
 "falcon.redirects.HTTPMovedPermanently.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "falcon.redirects.HTTPMovedPermanently",
    "falcon.redirects.falcon",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.redirects.HTTPPermanentRedirect": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "falcon.http_status.HTTPStatus"
   ]
  },
  "type": "class"
 },
 "falcon.redirects.HTTPPermanentRedirect.__init__": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "falcon.redirects.HTTPPermanentRedirect",
    "falcon.redirects.falcon",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.redirects.HTTPSeeOther": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "falcon.http_status.HTTPStatus"
   ]
  },
  "type": "class"
 },
 "falcon.redirects.HTTPSeeOther.__init__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "falcon.redirects.HTTPSeeOther",
    "falcon.redirects.falcon",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.redirects.HTTPStatus": {
  "data": {
   "shadows": "falcon.http_status.HTTPStatus"
  },
  "type": "import"
 },
 "falcon.redirects.HTTPTemporaryRedirect": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "falcon.http_status.HTTPStatus"
   ]
  },
  "type": "class"
 },
 "falcon.redirects.HTTPTemporaryRedirect.__init__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "falcon.redirects.HTTPTemporaryRedirect",
    "falcon.redirects.falcon",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.redirects.falcon": {
  "data": {
   "shadows": "falcon"
  },
  "type": "import"
 },
 "falcon.request": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "datetime.datetime.now",
    "datetime.datetime.strptime",
    "falcon.request.io",
    "falcon.request.socket",
    "six.moves.http_cookies.SimpleCookie"
   ]
  },
  "type": "module"
 },
 "falcon.request.DEFAULT_ERROR_LOG_FORMAT": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "falcon.request.FALSE_STRINGS": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "falcon.request.InputWrapper": {
  "data": {
   "shadows": "wsgiref.validate.InputWrapper"
  },
  "type": "import"
 },
 "falcon.request.NativeStream": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "falcon.request.Request": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "falcon.request_helpers.header_property",
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.request.Request.__init__": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "KeyError",
    "RequestOptions",
    "falcon.request.NativeStream",
    "falcon.request._maybe_wrap_wsgi_stream",
    "falcon.request.six",
    "falcon.util.uri.parse_query_string",
    "isinstance",
    "len",
    "wsgiref.validate.InputWrapper"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request._parse_form_urlencoded": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "falcon.util.uri.parse_query_string"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request._parse_rfc_forwarded": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": [
    "falcon.util.uri.parse_host",
    "falcon.util.uri.unquote_string"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request._wrap_stream": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "HTTPInvalidHeader",
    "falcon.request_helpers.Body"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.accept": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "KeyError",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.access_route": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.app": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.client_accepts": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "ValueError",
    "falcon.request.mimeparse"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.client_accepts_json": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.client_accepts_msgpack": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.client_accepts_xml": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.client_prefers": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "ValueError",
    "falcon.request.mimeparse"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.content_length": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "HTTPInvalidHeader",
    "KeyError",
    "ValueError",
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.cookies": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "falcon.request.SimpleCookie",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.date": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.get_header": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "HTTPMissingHeader",
    "KeyError",
    "falcon.request.WSGI_CONTENT_HEADERS"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.get_header_as_datetime": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "HTTPInvalidHeader",
    "TypeError",
    "ValueError",
    "falcon.util.http_date_to_dt"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.get_param": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "HTTPMissingParam",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.get_param_as_bool": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "HTTPInvalidParam",
    "HTTPMissingParam",
    "falcon.request.FALSE_STRINGS",
    "falcon.request.TRUE_STRINGS",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.get_param_as_date": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "HTTPInvalidParam",
    "ValueError",
    "falcon.request.strptime"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.get_param_as_int": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "HTTPInvalidParam",
    "HTTPMissingParam",
    "ValueError",
    "int",
    "isinstance",
    "list",
    "max",
    "min",
    "str"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.get_param_as_list": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "HTTPInvalidParam",
    "HTTPMissingParam",
    "ValueError",
    "isinstance",
    "list",
    "transform"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.headers": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "falcon.request.WSGI_CONTENT_HEADERS",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.host": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "KeyError",
    "falcon.util.uri.parse_host",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.if_modified_since": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.if_unmodified_since": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.log_error": {
  "data": {
   "lineno": 1042,
   "symbols_in_volume": [
    "falcon.request.DEFAULT_ERROR_LOG_FORMAT",
    "falcon.request.now",
    "falcon.request.six",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.params": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.protocol": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.range": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "HTTPInvalidHeader",
    "KeyError",
    "ValueError",
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.range_unit": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "HTTPInvalidHeader",
    "KeyError",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.relative_uri": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.remote_addr": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.subdomain": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.uri": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "KeyError",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.RequestOptions": {
  "data": {
   "lineno": 1150,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.request.RequestOptions.__init__": {
  "data": {
   "lineno": 1178
  },
  "type": "function"
 },
 "falcon.request.SimpleCookie": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "falcon.request.TRUE_STRINGS": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "falcon.request.WSGI_CONTENT_HEADERS": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "falcon.request._maybe_wrap_wsgi_stream": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "falcon.request.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "falcon.request.helpers": {
  "data": {
   "shadows": "falcon.request_helpers"
  },
  "type": "import"
 },
 "falcon.request.http_cookies": {
  "data": {
   "shadows": "six.moves.http_cookies"
  },
  "type": "import"
 },
 "falcon.request.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "falcon.request.mimeparse": {
  "data": {
   "shadows": "mimeparse"
  },
  "type": "import"
 },
 "falcon.request.now": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "falcon.request.parse_host": {
  "data": {
   "shadows": "falcon.util.uri.parse_host"
  },
  "type": "import"
 },
 "falcon.request.parse_query_string": {
  "data": {
   "shadows": "falcon.util.uri.parse_query_string"
  },
  "type": "import"
 },
 "falcon.request.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "falcon.request.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "falcon.request.strptime": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "falcon.request.unquote_string": {
  "data": {
   "shadows": "falcon.util.uri.unquote_string"
  },
  "type": "import"
 },
 "falcon.request.util": {
  "data": {
   "shadows": "falcon.util"
  },
  "type": "import"
 },
 "falcon.request_helpers": {
  "data": {},
  "type": "module"
 },
 "falcon.request_helpers.Body": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "next",
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.request_helpers.Body.__init__": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "falcon.request_helpers.Body.__iter__": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "falcon.request_helpers.Body.__next__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "next"
   ]
  },
  "type": "function"
 },
 "falcon.request_helpers.Body._read": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "target"
   ]
  },
  "type": "function"
 },
 "falcon.request_helpers.Body.read": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "falcon.request_helpers.Body.readline": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "falcon.request_helpers.Body.readlines": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "falcon.request_helpers.header_property": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request_helpers.header_property.fget": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "falcon.responders": {
  "data": {},
  "type": "module"
 },
 "falcon.responders.HTTPBadRequest": {
  "data": {
   "shadows": "falcon.errors.HTTPBadRequest"
  },
  "type": "import"
 },
 "falcon.responders.HTTPNotFound": {
  "data": {
   "shadows": "falcon.errors.HTTPNotFound"
  },
  "type": "import"
 },
 "falcon.responders.HTTP_204": {
  "data": {
   "shadows": "falcon.status_codes.HTTP_204"
  },
  "type": "import"
 },
 "falcon.responders.HTTP_405": {
  "data": {
   "shadows": "falcon.status_codes.HTTP_405"
  },
  "type": "import"
 },
 "falcon.responders.bad_request": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "falcon.errors.HTTPBadRequest"
   ]
  },
  "type": "function"
 },
 "falcon.responders.create_default_options": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "falcon.responders.create_default_options.on_options": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "falcon.status_codes.HTTP_204"
   ]
  },
  "type": "function"
 },
 "falcon.responders.create_method_not_allowed": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "falcon.responders.create_method_not_allowed.method_not_allowed": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "falcon.status_codes.HTTP_405"
   ]
  },
  "type": "function"
 },
 "falcon.responders.path_not_found": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "falcon.errors.HTTPNotFound"
   ]
  },
  "type": "function"
 },
 "falcon.response": {
  "data": {
   "symbols_in_volume": [
    "falcon.util.TimezoneGMT",
    "six.moves.http_cookies.CookieError",
    "six.moves.http_cookies.SimpleCookie"
   ]
  },
  "type": "module"
 },
 "falcon.response.CookieError": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "falcon.response.GMT_TIMEZONE": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "falcon.response.PY2": {
  "data": {
   "shadows": "six.PY2"
  },
  "type": "import"
 },
 "falcon.response.Response": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "falcon.response_helpers.format_range",
    "falcon.response_helpers.header_property",
    "falcon.util.dt_to_http",
    "falcon.util.uri.encode",
    "object",
    "str"
   ]
  },
  "type": "class"
 },
 "falcon.response.Response.__init__": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "falcon.response.Response._encode_header": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "isinstance",
    "six.PY2"
   ]
  },
  "type": "function"
 },
 "falcon.response.Response._wsgi_headers": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "list",
    "six.PY2"
   ]
  },
  "type": "function"
 },
 "falcon.response.Response.add_link": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "falcon.util.uri.encode",
    "falcon.util.uri.encode_value",
    "isinstance",
    "six.string_types"
   ]
  },
  "type": "function"
 },
 "falcon.response.Response.append_header": {
  "data": {
   "lineno": 297
  },
  "type": "function"
 },
 "falcon.response.Response.get_header": {
  "data": {
   "lineno": 262
  },
  "type": "function"
 },
 "falcon.response.Response.set_cookie": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "falcon.response.CookieError",
    "falcon.response.GMT_TIMEZONE",
    "falcon.response.SimpleCookie",
    "falcon.response_helpers.is_ascii_encodable",
    "int",
    "six.PY2",
    "str"
   ]
  },
  "type": "function"
 },
 "falcon.response.Response.set_header": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "falcon.response.Response.set_headers": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "falcon.response.Response.set_stream": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "falcon.response.Response.unset_cookie": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "falcon.response.SimpleCookie"
   ]
  },
  "type": "function"
 },
 "falcon.response.STRING_TYPES": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "falcon.response.SimpleCookie": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "falcon.response.TimezoneGMT": {
  "data": {
   "shadows": "falcon.util.TimezoneGMT"
  },
  "type": "import"
 },
 "falcon.response.dt_to_http": {
  "data": {
   "shadows": "falcon.util.dt_to_http"
  },
  "type": "import"
 },
 "falcon.response.format_range": {
  "data": {
   "shadows": "falcon.response_helpers.format_range"
  },
  "type": "import"
 },
 "falcon.response.header_property": {
  "data": {
   "shadows": "falcon.response_helpers.header_property"
  },
  "type": "import"
 },
 "falcon.response.http_cookies": {
  "data": {
   "shadows": "six.moves.http_cookies"
  },
  "type": "import"
 },
 "falcon.response.is_ascii_encodable": {
  "data": {
   "shadows": "falcon.response_helpers.is_ascii_encodable"
  },
  "type": "import"
 },
 "falcon.response.uri_encode": {
  "data": {
   "shadows": "falcon.util.uri.encode"
  },
  "type": "import"
 },
 "falcon.response.uri_encode_value": {
  "data": {
   "shadows": "falcon.util.uri.encode_value"
  },
  "type": "import"
 },
 "falcon.response_helpers": {
  "data": {},
  "type": "module"
 },
 "falcon.response_helpers.format_range": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "falcon.response_helpers.header_property": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.response_helpers.header_property.fdel": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "falcon.response_helpers.header_property.fget": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "falcon.response_helpers.header_property.fset": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "transform"
   ]
  },
  "type": "function"
 },
 "falcon.response_helpers.is_ascii_encodable": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "AttributeError",
    "UnicodeDecodeError",
    "UnicodeEncodeError"
   ]
  },
  "type": "function"
 },
 "falcon.routing": {
  "data": {
   "symbols_in_volume": [
    "falcon.routing.compiled.CompiledRouter"
   ]
  },
  "type": "module"
 },
 "falcon.routing.CompiledRouter": {
  "data": {
   "shadows": "falcon.routing.compiled.CompiledRouter"
  },
  "type": "import"
 },
 "falcon.routing.DefaultRouter": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "falcon.routing.compile_uri_template": {
  "data": {
   "shadows": "falcon.routing.util.compile_uri_template"
  },
  "type": "import"
 },
 "falcon.routing.compiled": {
  "data": {},
  "type": "module"
 },
 "falcon.routing.compiled.CompiledRouter": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.routing.compiled.CompiledRouter.__init__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "falcon.routing.compiled.CompiledRouter._compile": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "compile",
    "exec",
    "falcon.routing.compiled.TAB_STR"
   ]
  },
  "type": "function"
 },
 "falcon.routing.compiled.CompiledRouter._compile_tree": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "bool",
    "len",
    "line",
    "sorted"
   ]
  },
  "type": "function"
 },
 "falcon.routing.compiled.CompiledRouter._compile_tree.line": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "falcon.routing.compiled.TAB_STR"
   ]
  },
  "type": "function"
 },
 "falcon.routing.compiled.CompiledRouter.add_route": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "falcon.routing.compiled.re",
    "insert"
   ]
  },
  "type": "function"
 },
 "falcon.routing.compiled.CompiledRouter.add_route.insert": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "CompiledRouterNode",
    "ValueError",
    "insert",
    "len"
   ]
  },
  "type": "function"
 },
 "falcon.routing.compiled.CompiledRouter.find": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "falcon.routing.compiled.CompiledRouterNode": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "falcon.routing.compiled.re",
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.routing.compiled.CompiledRouterNode.__init__": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "falcon.routing.compiled.re",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "falcon.routing.compiled.CompiledRouterNode.conflicts_with": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "falcon.routing.compiled.CompiledRouterNode"
   ]
  },
  "type": "function"
 },
 "falcon.routing.compiled.CompiledRouterNode.matches": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "falcon.routing.compiled.TAB_STR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "falcon.routing.compiled.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "falcon.routing.create_http_method_map": {
  "data": {
   "shadows": "falcon.routing.util.create_http_method_map"
  },
  "type": "import"
 },
 "falcon.routing.util": {
  "data": {},
  "type": "module"
 },
 "falcon.routing.util.HTTP_METHODS": {
  "data": {
   "shadows": "falcon.HTTP_METHODS"
  },
  "type": "import"
 },
 "falcon.routing.util.compile_uri_template": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "falcon.routing.util.re",
    "falcon.routing.util.six",
    "isinstance",
    "set"
   ]
  },
  "type": "function"
 },
 "falcon.routing.util.create_http_method_map": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "AttributeError",
    "callable",
    "falcon.HTTP_METHODS",
    "falcon.responders.create_default_options",
    "falcon.responders.create_method_not_allowed",
    "getattr",
    "list",
    "sorted"
   ]
  },
  "type": "function"
 },
 "falcon.routing.util.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "falcon.routing.util.responders": {
  "data": {
   "shadows": "falcon.responders"
  },
  "type": "import"
 },
 "falcon.routing.util.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "falcon.status_codes": {
  "data": {
   "symbols_in_volume": [
    "falcon.status_codes.HTTP_100",
    "falcon.status_codes.HTTP_101",
    "falcon.status_codes.HTTP_200",
    "falcon.status_codes.HTTP_201",
    "falcon.status_codes.HTTP_202",
    "falcon.status_codes.HTTP_203",
    "falcon.status_codes.HTTP_204",
    "falcon.status_codes.HTTP_205",
    "falcon.status_codes.HTTP_206",
    "falcon.status_codes.HTTP_226",
    "falcon.status_codes.HTTP_300",
    "falcon.status_codes.HTTP_301",
    "falcon.status_codes.HTTP_302",
    "falcon.status_codes.HTTP_303",
    "falcon.status_codes.HTTP_304",
    "falcon.status_codes.HTTP_305",
    "falcon.status_codes.HTTP_307",
    "falcon.status_codes.HTTP_308",
    "falcon.status_codes.HTTP_400",
    "falcon.status_codes.HTTP_401",
    "falcon.status_codes.HTTP_402",
    "falcon.status_codes.HTTP_403",
    "falcon.status_codes.HTTP_404",
    "falcon.status_codes.HTTP_405",
    "falcon.status_codes.HTTP_406",
    "falcon.status_codes.HTTP_407",
    "falcon.status_codes.HTTP_408",
    "falcon.status_codes.HTTP_409",
    "falcon.status_codes.HTTP_410",
    "falcon.status_codes.HTTP_411",
    "falcon.status_codes.HTTP_412",
    "falcon.status_codes.HTTP_413",
    "falcon.status_codes.HTTP_414",
    "falcon.status_codes.HTTP_415",
    "falcon.status_codes.HTTP_416",
    "falcon.status_codes.HTTP_417",
    "falcon.status_codes.HTTP_418",
    "falcon.status_codes.HTTP_422",
    "falcon.status_codes.HTTP_426",
    "falcon.status_codes.HTTP_428",
    "falcon.status_codes.HTTP_429",
    "falcon.status_codes.HTTP_431",
    "falcon.status_codes.HTTP_451",
    "falcon.status_codes.HTTP_500",
    "falcon.status_codes.HTTP_501",
    "falcon.status_codes.HTTP_502",
    "falcon.status_codes.HTTP_503",
    "falcon.status_codes.HTTP_504",
    "falcon.status_codes.HTTP_505",
    "falcon.status_codes.HTTP_511"
   ]
  },
  "type": "module"
 },
 "falcon.status_codes.HTTP_100": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_101": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_200": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_201": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_202": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_203": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_204": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_205": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_206": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_226": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_300": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_301": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_302": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_303": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_304": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_305": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_307": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_308": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_400": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_401": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_402": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_403": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_404": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_405": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_406": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_407": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_408": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_409": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_410": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_411": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_412": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_413": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_414": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_415": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_416": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_417": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_418": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_422": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_426": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_428": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_429": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_431": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_451": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_500": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_501": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_502": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_503": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_504": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_505": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_511": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_701": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_702": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_703": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_710": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_711": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_712": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_719": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_720": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_721": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_722": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_723": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_724": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_725": {
  "data": {
   "lineno": 138
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_726": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_727": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_740": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_741": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_742": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_743": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_744": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_745": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_748": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_749": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_750": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_753": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_754": {
  "data": {
   "lineno": 156
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_755": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_759": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_771": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_772": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_773": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_774": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_776": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_777": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_778": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_779": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_780": {
  "data": {
   "lineno": 171
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_781": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_782": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_783": {
  "data": {
   "lineno": 174
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_784": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_785": {
  "data": {
   "lineno": 176
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_786": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_791": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_792": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_797": {
  "data": {
   "lineno": 182
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_799": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_ACCEPTED": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_BAD_GATEWAY": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_BAD_REQUEST": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_CONFLICT": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_CONTINUE": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_CREATED": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_EXPECTATION_FAILED": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_FORBIDDEN": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_FOUND": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_GATEWAY_TIMEOUT": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_GONE": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_HTTP_VERSION_NOT_SUPPORTED": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_IM_A_TEAPOT": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_IM_USED": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_INTERNAL_SERVER_ERROR": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_LENGTH_REQUIRED": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_METHOD_NOT_ALLOWED": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_MOVED_PERMANENTLY": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_MULTIPLE_CHOICES": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_NETWORK_AUTHENTICATION_REQUIRED": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_NON_AUTHORITATIVE_INFORMATION": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_NOT_ACCEPTABLE": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_NOT_FOUND": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_NOT_IMPLEMENTED": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_NOT_MODIFIED": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_NO_CONTENT": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_OK": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_PARTIAL_CONTENT": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_PAYMENT_REQUIRED": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_PERMANENT_REDIRECT": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_PRECONDITION_FAILED": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_PRECONDITION_REQUIRED": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_PROXY_AUTHENTICATION_REQUIRED": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_REQUESTED_RANGE_NOT_SATISFIABLE": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_REQUEST_ENTITY_TOO_LARGE": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_REQUEST_HEADER_FIELDS_TOO_LARGE": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_REQUEST_TIMEOUT": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_REQUEST_URI_TOO_LONG": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_RESET_CONTENT": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_SEE_OTHER": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_SERVICE_UNAVAILABLE": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_SWITCHING_PROTOCOLS": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_TEMPORARY_REDIRECT": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_TOO_MANY_REQUESTS": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_UNAUTHORIZED": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_UNAVAILABLE_FOR_LEGAL_REASONS": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_UNPROCESSABLE_ENTITY": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_UNSUPPORTED_MEDIA_TYPE": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_UPGRADE_REQUIRED": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_USE_PROXY": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "falcon.testing": {
  "data": {},
  "type": "module"
 },
 "falcon.testing.Result": {
  "data": {
   "shadows": "falcon.testing.test_case.Result"
  },
  "type": "import"
 },
 "falcon.testing.SimpleTestResource": {
  "data": {
   "shadows": "falcon.testing.resource.SimpleTestResource"
  },
  "type": "import"
 },
 "falcon.testing.StartResponseMock": {
  "data": {
   "shadows": "falcon.testing.srmock.StartResponseMock"
  },
  "type": "import"
 },
 "falcon.testing.TestBase": {
  "data": {
   "shadows": "falcon.testing.base.TestBase"
  },
  "type": "import"
 },
 "falcon.testing.TestCase": {
  "data": {
   "shadows": "falcon.testing.test_case.TestCase"
  },
  "type": "import"
 },
 "falcon.testing.TestResource": {
  "data": {
   "shadows": "falcon.testing.resource.TestResource"
  },
  "type": "import"
 },
 "falcon.testing.base": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "falcon.testing.base.StartResponseMock": {
  "data": {
   "shadows": "falcon.testing.srmock.StartResponseMock"
  },
  "type": "import"
 },
 "falcon.testing.base.TestBase": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "falcon.testing.base.falcon",
    "falcon.testing.srmock.StartResponseMock",
    "hasattr",
    "testtools.TestCase"
   ]
  },
  "type": "class"
 },
 "falcon.testing.base.TestBase.assertIn": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "falcon.testing.base.TestBase.setUp": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "before",
    "callable",
    "falcon.testing.base.TestBase",
    "falcon.testing.base.falcon",
    "falcon.testing.base.itertools",
    "getattr",
    "next",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.testing.base.TestBase.simulate_request": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "falcon.testing.helpers.create_environ"
   ]
  },
  "type": "function"
 },
 "falcon.testing.base.TestBase.tearDown": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "after",
    "callable",
    "falcon.testing.base.TestBase",
    "getattr",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.testing.base.create_environ": {
  "data": {
   "shadows": "falcon.testing.helpers.create_environ"
  },
  "type": "import"
 },
 "falcon.testing.base.falcon": {
  "data": {
   "shadows": "falcon"
  },
  "type": "import"
 },
 "falcon.testing.base.falcon.request": {
  "data": {
   "shadows": "falcon.request"
  },
  "type": "import"
 },
 "falcon.testing.base.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "falcon.testing.base.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "falcon.testing.capture_responder_args": {
  "data": {
   "shadows": "falcon.testing.resource.capture_responder_args"
  },
  "type": "import"
 },
 "falcon.testing.helpers": {
  "data": {
   "symbols_in_volume": [
    "falcon.util.http_now"
   ]
  },
  "type": "module"
 },
 "falcon.testing.helpers.DEFAULT_HOST": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "falcon.testing.helpers._add_headers_to_environ": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "falcon.testing.helpers.cgi": {
  "data": {
   "shadows": "cgi"
  },
  "type": "import"
 },
 "falcon.testing.helpers.create_environ": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "_add_headers_to_environ",
    "falcon.testing.helpers.DEFAULT_HOST",
    "falcon.testing.helpers.io",
    "falcon.testing.helpers.six",
    "falcon.testing.helpers.sys",
    "falcon.util.uri.decode",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "falcon.testing.helpers.get_encoding_from_headers": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "falcon.testing.helpers.cgi"
   ]
  },
  "type": "function"
 },
 "falcon.testing.helpers.http_now": {
  "data": {
   "shadows": "falcon.util.http_now"
  },
  "type": "import"
 },
 "falcon.testing.helpers.httpnow": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "falcon.testing.helpers.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "falcon.testing.helpers.rand_string": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "chr",
    "falcon.testing.helpers.random",
    "int_gen",
    "max",
    "min",
    "ord",
    "range"
   ]
  },
  "type": "function"
 },
 "falcon.testing.helpers.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "falcon.testing.helpers.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "falcon.testing.helpers.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "falcon.testing.helpers.uri": {
  "data": {
   "shadows": "falcon.util.uri"
  },
  "type": "import"
 },
 "falcon.testing.resource": {
  "data": {},
  "type": "module"
 },
 "falcon.testing.resource.SimpleTestResource": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.testing.resource.SimpleTestResource.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ValueError",
    "json.dumps"
   ]
  },
  "type": "function"
 },
 "falcon.testing.resource.SimpleTestResource.on_get": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "falcon.testing.resource.capture_responder_args",
    "falcon.testing.resource.falcon",
    "falcon.testing.resource.set_resp_defaults"
   ]
  },
  "type": "function"
 },
 "falcon.testing.resource.TestResource": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "object",
    "rand_string"
   ]
  },
  "type": "class"
 },
 "falcon.testing.resource.TestResource.__init__": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "falcon.testing.resource.TestResource.on_get": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "falcon.testing.resource.falcon"
   ]
  },
  "type": "function"
 },
 "falcon.testing.resource.capture_responder_args": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "falcon.testing.resource.falcon": {
  "data": {
   "shadows": "falcon"
  },
  "type": "import"
 },
 "falcon.testing.resource.json_dumps": {
  "data": {
   "shadows": "json.dumps"
  },
  "type": "import"
 },
 "falcon.testing.resource.set_resp_defaults": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "falcon.testing.srmock": {
  "data": {},
  "type": "module"
 },
 "falcon.testing.srmock.StartResponseMock": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.testing.srmock.StartResponseMock.__call__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "falcon.util.CaseInsensitiveDict"
   ]
  },
  "type": "function"
 },
 "falcon.testing.srmock.StartResponseMock.__init__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "falcon.testing.srmock.StartResponseMock.call_count": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.testing.srmock.util": {
  "data": {
   "shadows": "falcon.util"
  },
  "type": "import"
 },
 "falcon.testing.test_case": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "falcon.testing.test_case.CaseInsensitiveDict": {
  "data": {
   "shadows": "falcon.util.CaseInsensitiveDict"
  },
  "type": "import"
 },
 "falcon.testing.test_case.Result": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.testing.test_case.Result.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "falcon.testing.helpers.get_encoding_from_headers",
    "falcon.util.CaseInsensitiveDict",
    "hasattr",
    "int"
   ]
  },
  "type": "function"
 },
 "falcon.testing.test_case.Result.content": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.testing.test_case.Result.encoding": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.testing.test_case.Result.headers": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.testing.test_case.Result.json": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "falcon.testing.test_case.json",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.testing.test_case.Result.status": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.testing.test_case.Result.status_code": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.testing.test_case.Result.text": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "RuntimeError",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.testing.test_case.StartResponseMock": {
  "data": {
   "shadows": "falcon.testing.srmock.StartResponseMock"
  },
  "type": "import"
 },
 "falcon.testing.test_case.TestCase": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "hasattr",
    "testtools.TestCase"
   ]
  },
  "type": "class"
 },
 "falcon.testing.test_case.TestCase.assertIn": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "falcon.testing.test_case.TestCase.setUp": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "falcon.testing.test_case.TestCase",
    "falcon.testing.test_case.falcon",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.testing.test_case.TestCase.simulate_delete": {
  "data": {
   "lineno": 258
  },
  "type": "function"
 },
 "falcon.testing.test_case.TestCase.simulate_get": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "falcon.testing.test_case.TestCase.simulate_head": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "falcon.testing.test_case.TestCase.simulate_options": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "falcon.testing.test_case.TestCase.simulate_patch": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "falcon.testing.test_case.TestCase.simulate_post": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "falcon.testing.test_case.TestCase.simulate_put": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "falcon.testing.test_case.TestCase.simulate_request": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "ValueError",
    "falcon.testing.helpers.create_environ",
    "falcon.testing.srmock.StartResponseMock",
    "falcon.testing.test_case.Result",
    "validator"
   ]
  },
  "type": "function"
 },
 "falcon.testing.test_case.create_environ": {
  "data": {
   "shadows": "falcon.testing.helpers.create_environ"
  },
  "type": "import"
 },
 "falcon.testing.test_case.falcon": {
  "data": {
   "shadows": "falcon"
  },
  "type": "import"
 },
 "falcon.testing.test_case.falcon.request": {
  "data": {
   "shadows": "falcon.request"
  },
  "type": "import"
 },
 "falcon.testing.test_case.get_encoding_from_headers": {
  "data": {
   "shadows": "falcon.testing.helpers.get_encoding_from_headers"
  },
  "type": "import"
 },
 "falcon.testing.test_case.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "falcon.testing.test_case.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "falcon.testing.test_case.wsgiref.validate": {
  "data": {
   "shadows": "wsgiref.validate"
  },
  "type": "import"
 },
 "falcon.util": {
  "data": {
   "symbols_in_volume": [
    "falcon.util.structures.CaseInsensitiveDict"
   ]
  },
  "type": "module"
 },
 "falcon.util.CaseInsensitiveDict": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "falcon.util.misc": {
  "data": {
   "symbols_in_volume": [
    "falcon.util.misc.datetime"
   ]
  },
  "type": "module"
 },
 "falcon.util.misc.DeprecatedWarning": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "falcon.util.misc.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "falcon.util.misc.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "falcon.util.misc.deprecated": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "falcon.util.misc.deprecated.decorator": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "falcon.util.misc.deprecated.decorator.wrapper": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "falcon.util.misc.DeprecatedWarning",
    "falcon.util.misc.functools",
    "falcon.util.misc.inspect",
    "falcon.util.misc.warnings",
    "func"
   ]
  },
  "type": "function"
 },
 "falcon.util.misc.dt_to_http": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "falcon.util.misc.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "falcon.util.misc.get_bound_method": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "AttributeError",
    "falcon.util.misc.six",
    "getattr"
   ]
  },
  "type": "function"
 },
 "falcon.util.misc.http_date_to_dt": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ValueError",
    "falcon.util.misc.strptime"
   ]
  },
  "type": "function"
 },
 "falcon.util.misc.http_now": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "dt_to_http",
    "falcon.util.misc.utcnow"
   ]
  },
  "type": "function"
 },
 "falcon.util.misc.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "falcon.util.misc.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "falcon.util.misc.strptime": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "falcon.util.misc.to_query_str": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "falcon.util.misc.utcnow": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "falcon.util.misc.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "falcon.util.structures": {
  "data": {
   "shadows": "falcon.util.structures"
  },
  "type": "import"
 },
 "falcon.util.structures.CaseInsensitiveDict": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "falcon.util.structures.collections"
   ]
  },
  "type": "class"
 },
 "falcon.util.structures.CaseInsensitiveDict.__delitem__": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "falcon.util.structures.CaseInsensitiveDict.__eq__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "NotImplemented",
    "dict",
    "falcon.util.structures.CaseInsensitiveDict",
    "falcon.util.structures.collections",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "falcon.util.structures.CaseInsensitiveDict.__getitem__": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "falcon.util.structures.CaseInsensitiveDict.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "falcon.util.structures.CaseInsensitiveDict.__iter__": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "falcon.util.structures.CaseInsensitiveDict.__len__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "falcon.util.structures.CaseInsensitiveDict.__repr__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "falcon.util.structures.CaseInsensitiveDict.__setitem__": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "falcon.util.structures.CaseInsensitiveDict.copy": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "falcon.util.structures.CaseInsensitiveDict"
   ]
  },
  "type": "function"
 },
 "falcon.util.structures.CaseInsensitiveDict.lower_items": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "falcon.util.structures.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "falcon.util.time": {
  "data": {},
  "type": "module"
 },
 "falcon.util.time.TimezoneGMT": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "falcon.util.time.datetime"
   ]
  },
  "type": "class"
 },
 "falcon.util.time.TimezoneGMT.dst": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "falcon.util.time.TimezoneGMT.tzname": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "falcon.util.time.TimezoneGMT.utcoffset": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "falcon.util.time.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "falcon.util.uri": {
  "data": {
   "symbols_in_volume": [
    "bytes",
    "chr",
    "dict",
    "falcon.util.uri._DELIMITERS",
    "falcon.util.uri._HEX_DIGITS",
    "falcon.util.uri._UNRESERVED",
    "falcon.util.uri._create_str_encoder",
    "falcon.util.uri.encode",
    "falcon.util.uri.encode_value",
    "falcon.util.uri.six",
    "int"
   ]
  },
  "type": "module"
 },
 "falcon.util.uri._ALL_ALLOWED": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "falcon.util.uri._DELIMITERS": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "falcon.util.uri._HEX_DIGITS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "falcon.util.uri._HEX_TO_BYTE": {
  "data": {
   "lineno": 198
  },
  "type": "constant"
 },
 "falcon.util.uri._UNRESERVED": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "falcon.util.uri._create_char_encoder": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "chr",
    "falcon.util.uri.six",
    "range"
   ]
  },
  "type": "function"
 },
 "falcon.util.uri._create_str_encoder": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "falcon.util.uri._ALL_ALLOWED",
    "falcon.util.uri._UNRESERVED",
    "falcon.util.uri._create_char_encoder"
   ]
  },
  "type": "function"
 },
 "falcon.util.uri._create_str_encoder.encoder": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "falcon.util.uri.six",
    "isinstance",
    "map"
   ]
  },
  "type": "function"
 },
 "falcon.util.uri.decode": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "falcon.util.uri._HEX_TO_BYTE"
   ]
  },
  "type": "function"
 },
 "falcon.util.uri.encode": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "falcon.util.uri.encode_value": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "falcon.util.uri.parse_host": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "falcon.util.uri.parse_query_string": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "falcon.util.uri.decode",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "falcon.util.uri.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "falcon.util.uri.unquote_string": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "falcon.version": {
  "data": {},
  "type": "module"
 },
 "falcon.version.__version__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 }
}