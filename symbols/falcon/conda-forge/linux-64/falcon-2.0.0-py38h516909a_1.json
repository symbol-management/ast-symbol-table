{
 "*": {
  "data": {
   "imports": [
    "falcon.util.misc",
    "falcon.util.structures",
    "falcon.util.time"
   ]
  },
  "type": "star-import"
 },
 "falcon": {
  "data": {},
  "type": "module"
 },
 "falcon.API": {
  "data": {
   "shadows": "falcon.api.API"
  },
  "type": "import"
 },
 "falcon.Forwarded": {
  "data": {
   "shadows": "falcon.request.Forwarded"
  },
  "type": "import"
 },
 "falcon.HTTPError": {
  "data": {
   "shadows": "falcon.http_error.HTTPError"
  },
  "type": "import"
 },
 "falcon.HTTPStatus": {
  "data": {
   "shadows": "falcon.http_status.HTTPStatus"
  },
  "type": "import"
 },
 "falcon.Request": {
  "data": {
   "shadows": "falcon.request.Request"
  },
  "type": "import"
 },
 "falcon.RequestOptions": {
  "data": {
   "shadows": "falcon.request.RequestOptions"
  },
  "type": "import"
 },
 "falcon.Response": {
  "data": {
   "shadows": "falcon.response.Response"
  },
  "type": "import"
 },
 "falcon.ResponseOptions": {
  "data": {
   "shadows": "falcon.response.ResponseOptions"
  },
  "type": "import"
 },
 "falcon.__version__": {
  "data": {
   "shadows": "falcon.version.__version__"
  },
  "type": "import"
 },
 "falcon.after": {
  "data": {
   "shadows": "falcon.hooks.after"
  },
  "type": "import"
 },
 "falcon.api": {
  "data": {
   "symbols_in_volume": [
    "falcon.status_codes.HTTP_100",
    "falcon.status_codes.HTTP_101",
    "falcon.status_codes.HTTP_204",
    "falcon.status_codes.HTTP_304",
    "frozenset"
   ]
  },
  "type": "module"
 },
 "falcon.api.API": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.api.API.__call__": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "Exception",
    "falcon.api._BODILESS_STATUS_CODES",
    "falcon.api._TYPELESS_STATUS_CODES",
    "falcon.util.compat.PY2",
    "process_request",
    "process_resource",
    "process_response",
    "responder",
    "start_response",
    "str"
   ]
  },
  "type": "function"
 },
 "falcon.api.API.__init__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "falcon.DEFAULT_MEDIA_TYPE",
    "falcon.api_helpers.default_serialize_error",
    "falcon.api_helpers.prepare_middleware",
    "falcon.request.Request",
    "falcon.request.RequestOptions",
    "falcon.response.Response",
    "falcon.response.ResponseOptions",
    "falcon.routing.DefaultRouter"
   ]
  },
  "type": "function"
 },
 "falcon.api.API._compose_error_response": {
  "data": {
   "lineno": 739
  },
  "type": "function"
 },
 "falcon.api.API._compose_status_response": {
  "data": {
   "lineno": 724
  },
  "type": "function"
 },
 "falcon.api.API._get_body": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "bytes",
    "falcon.api_helpers.CloseableStreamIterator",
    "hasattr",
    "isinstance",
    "len",
    "wsgi_file_wrapper"
   ]
  },
  "type": "function"
 },
 "falcon.api.API._get_responder": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "responder"
   ]
  },
  "type": "function"
 },
 "falcon.api.API._handle_exception": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "err_handler",
    "falcon.http_error.HTTPError",
    "falcon.http_status.HTTPStatus",
    "falcon.status_codes",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "falcon.api.API._http_error_handler": {
  "data": {
   "lineno": 752
  },
  "type": "function"
 },
 "falcon.api.API._http_status_handler": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "falcon.status_codes"
   ]
  },
  "type": "function"
 },
 "falcon.api.API.add_error_handler": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "AttributeError",
    "BaseException",
    "TypeError",
    "all",
    "falcon.util.misc.get_argnames",
    "issubclass",
    "len",
    "tuple",
    "wrap_old_handler"
   ]
  },
  "type": "function"
 },
 "falcon.api.API.add_error_handler.wrap_old_handler": {
  "data": {
   "lineno": 556
  },
  "type": "function"
 },
 "falcon.api.API.add_error_handler.wrap_old_handler.handler": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "functools.wraps",
    "old_handler"
   ]
  },
  "type": "function"
 },
 "falcon.api.API.add_route": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "falcon.util.compat.string_types",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "falcon.api.API.add_sink": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "falcon.api.re",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "falcon.api.API.add_static_route": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "falcon.routing.StaticRoute"
   ]
  },
  "type": "function"
 },
 "falcon.api.API.router_options": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.api.API.set_error_serializer": {
  "data": {
   "lineno": 595
  },
  "type": "function"
 },
 "falcon.api.DEFAULT_MEDIA_TYPE": {
  "data": {
   "shadows": "falcon.DEFAULT_MEDIA_TYPE"
  },
  "type": "import"
 },
 "falcon.api.HTTPError": {
  "data": {
   "shadows": "falcon.http_error.HTTPError"
  },
  "type": "import"
 },
 "falcon.api.HTTPStatus": {
  "data": {
   "shadows": "falcon.http_status.HTTPStatus"
  },
  "type": "import"
 },
 "falcon.api.Request": {
  "data": {
   "shadows": "falcon.request.Request"
  },
  "type": "import"
 },
 "falcon.api.RequestOptions": {
  "data": {
   "shadows": "falcon.request.RequestOptions"
  },
  "type": "import"
 },
 "falcon.api.Response": {
  "data": {
   "shadows": "falcon.response.Response"
  },
  "type": "import"
 },
 "falcon.api.ResponseOptions": {
  "data": {
   "shadows": "falcon.response.ResponseOptions"
  },
  "type": "import"
 },
 "falcon.api._BODILESS_STATUS_CODES": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "falcon.api._TYPELESS_STATUS_CODES": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "falcon.api.compat": {
  "data": {
   "shadows": "falcon.util.compat"
  },
  "type": "import"
 },
 "falcon.api.falcon.responders": {
  "data": {
   "shadows": "falcon.responders"
  },
  "type": "import"
 },
 "falcon.api.helpers": {
  "data": {
   "shadows": "falcon.api_helpers"
  },
  "type": "import"
 },
 "falcon.api.misc": {
  "data": {
   "shadows": "falcon.util.misc"
  },
  "type": "import"
 },
 "falcon.api.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "falcon.api.routing": {
  "data": {
   "shadows": "falcon.routing"
  },
  "type": "import"
 },
 "falcon.api.status": {
  "data": {
   "shadows": "falcon.status_codes"
  },
  "type": "import"
 },
 "falcon.api.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "falcon.api_helpers": {
  "data": {},
  "type": "module"
 },
 "falcon.api_helpers.CloseableStreamIterator": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.api_helpers.CloseableStreamIterator.__init__": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "falcon.api_helpers.CloseableStreamIterator.__iter__": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "falcon.api_helpers.CloseableStreamIterator.__next__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "StopIteration"
   ]
  },
  "type": "function"
 },
 "falcon.api_helpers.CloseableStreamIterator.close": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "falcon.api_helpers.CloseableStreamIterator.next": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "falcon.api_helpers.default_serialize_error": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "falcon.api_helpers.prepare_middleware": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "TypeError",
    "falcon.util.get_bound_method",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "falcon.api_helpers.util": {
  "data": {
   "shadows": "falcon.util"
  },
  "type": "import"
 },
 "falcon.before": {
  "data": {
   "shadows": "falcon.hooks.before"
  },
  "type": "import"
 },
 "falcon.bench": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.create": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.create.Map": {
  "data": {
   "shadows": "werkzeug.routing.Map"
  },
  "type": "import"
 },
 "falcon.bench.create.Rule": {
  "data": {
   "shadows": "werkzeug.routing.Rule"
  },
  "type": "import"
 },
 "falcon.bench.create.api": {
  "data": {
   "shadows": "falcon.bench.queues.api"
  },
  "type": "import"
 },
 "falcon.bench.create.bottle": {
  "data": {
   "shadows": "bottle"
  },
  "type": "import"
 },
 "falcon.bench.create.bottle.hello": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "falcon.bench.create.bottle"
   ]
  },
  "type": "function"
 },
 "falcon.bench.create.dj": {
  "data": {
   "shadows": "falcon.bench.dj"
  },
  "type": "import"
 },
 "falcon.bench.create.django": {
  "data": {
   "shadows": "django",
   "symbols_in_volume": [
    "falcon.bench.create.os",
    "falcon.bench.create.sys",
    "falcon.bench.dj.__file__",
    "falcon.bench.dj.dj.wsgi.application"
   ]
  },
  "type": "import"
 },
 "falcon.bench.create.falcon": {
  "data": {
   "shadows": "falcon",
   "symbols_in_volume": [
    "HelloResource"
   ]
  },
  "type": "import"
 },
 "falcon.bench.create.falcon.HelloResource": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "falcon.bench.create.falcon.HelloResource.on_get": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "falcon.bench.create.falcon_ext": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "falcon.bench.queues.api.create"
   ]
  },
  "type": "function"
 },
 "falcon.bench.create.flask": {
  "data": {
   "shadows": "flask"
  },
  "type": "import"
 },
 "falcon.bench.create.flask.hello": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "falcon.bench.create.flask"
   ]
  },
  "type": "function"
 },
 "falcon.bench.create.nuts": {
  "data": {
   "shadows": "falcon.bench.nuts.nuts.app"
  },
  "type": "import"
 },
 "falcon.bench.create.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "falcon.bench.create.pecan": {
  "data": {
   "shadows": "pecan",
   "symbols_in_volume": [
    "falcon.bench.create.os",
    "falcon.bench.create.sys",
    "falcon.bench.nuts.nuts.app.__file__",
    "falcon.bench.nuts.nuts.app.create"
   ]
  },
  "type": "import"
 },
 "falcon.bench.create.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "falcon.bench.create.werkzeug": {
  "data": {
   "shadows": "werkzeug.wrappers",
   "symbols_in_volume": [
    "werkzeug.routing.Map",
    "werkzeug.routing.Rule"
   ]
  },
  "type": "import"
 },
 "falcon.bench.create.werkzeug.hello": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "werkzeug.wrappers.Request.application",
    "werkzeug.wrappers.Response"
   ]
  },
  "type": "function"
 },
 "falcon.bench.create.wsgi": {
  "data": {
   "shadows": "falcon.bench.dj.dj.wsgi"
  },
  "type": "import"
 },
 "falcon.bench.dj": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.dj.dj": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.dj.dj.settings": {
  "data": {
   "symbols_in_volume": [
    "django.core.management.utils.get_random_secret_key",
    "falcon.bench.dj.dj.settings.BASE_DIR",
    "falcon.bench.dj.dj.settings.os"
   ]
  },
  "type": "module"
 },
 "falcon.bench.dj.dj.settings.ALLOWED_HOSTS": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "falcon.bench.dj.dj.settings.AUTH_PASSWORD_VALIDATORS": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "falcon.bench.dj.dj.settings.BASE_DIR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "falcon.bench.dj.dj.settings.DATABASES": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "falcon.bench.dj.dj.settings.DEBUG": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "falcon.bench.dj.dj.settings.INSTALLED_APPS": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "falcon.bench.dj.dj.settings.LANGUAGE_CODE": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "falcon.bench.dj.dj.settings.MIDDLEWARE": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "falcon.bench.dj.dj.settings.ROOT_URLCONF": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "falcon.bench.dj.dj.settings.SECRET_KEY": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "falcon.bench.dj.dj.settings.STATIC_URL": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "falcon.bench.dj.dj.settings.TEMPLATES": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "falcon.bench.dj.dj.settings.TIME_ZONE": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "falcon.bench.dj.dj.settings.USE_I18N": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "falcon.bench.dj.dj.settings.USE_L10N": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "falcon.bench.dj.dj.settings.USE_TZ": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "falcon.bench.dj.dj.settings.WSGI_APPLICATION": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "falcon.bench.dj.dj.settings.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "falcon.bench.dj.dj.settings.utils": {
  "data": {
   "shadows": "django.core.management.utils"
  },
  "type": "import"
 },
 "falcon.bench.dj.dj.urls": {
  "data": {
   "symbols_in_volume": [
    "django.conf.urls.url",
    "hello.views.hello"
   ]
  },
  "type": "module"
 },
 "falcon.bench.dj.dj.urls.url": {
  "data": {
   "shadows": "django.conf.urls.url"
  },
  "type": "import"
 },
 "falcon.bench.dj.dj.urls.urlpatterns": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "falcon.bench.dj.dj.urls.views": {
  "data": {
   "shadows": "hello.views"
  },
  "type": "import"
 },
 "falcon.bench.dj.dj.wsgi": {
  "data": {
   "symbols_in_volume": [
    "django.core.wsgi.get_wsgi_application",
    "falcon.bench.dj.dj.wsgi.os"
   ]
  },
  "type": "module"
 },
 "falcon.bench.dj.dj.wsgi.application": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "falcon.bench.dj.dj.wsgi.get_wsgi_application": {
  "data": {
   "shadows": "django.core.wsgi.get_wsgi_application"
  },
  "type": "import"
 },
 "falcon.bench.dj.dj.wsgi.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "falcon.bench.dj.hello": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.dj.hello.admin": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.dj.hello.admin.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "falcon.bench.dj.hello.apps": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.dj.hello.apps.AppConfig": {
  "data": {
   "shadows": "django.apps.AppConfig"
  },
  "type": "import"
 },
 "falcon.bench.dj.hello.apps.HelloConfig": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "django.apps.AppConfig"
   ]
  },
  "type": "class"
 },
 "falcon.bench.dj.hello.apps.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "falcon.bench.dj.hello.migrations": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.dj.hello.models": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.dj.hello.models.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "falcon.bench.dj.hello.tests": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.dj.hello.tests.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "falcon.bench.dj.hello.views": {
  "data": {
   "symbols_in_volume": [
    "falcon.bench.dj.hello.views.django"
   ]
  },
  "type": "module"
 },
 "falcon.bench.dj.hello.views.HttpResponse": {
  "data": {
   "shadows": "django.http.HttpResponse"
  },
  "type": "import"
 },
 "falcon.bench.dj.hello.views._body": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "falcon.bench.dj.hello.views._headers": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "falcon.bench.dj.hello.views.django": {
  "data": {
   "shadows": "django"
  },
  "type": "import"
 },
 "falcon.bench.dj.hello.views.hello": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "django.http.HttpResponse",
    "falcon.bench.dj.hello.views._body",
    "falcon.bench.dj.hello.views._headers"
   ]
  },
  "type": "function"
 },
 "falcon.bench.dj.manage": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "django.core.management.execute_from_command_line",
    "falcon.bench.dj.manage.os",
    "falcon.bench.dj.manage.sys"
   ]
  },
  "type": "module"
 },
 "falcon.bench.dj.manage.django": {
  "data": {
   "shadows": "django"
  },
  "type": "import"
 },
 "falcon.bench.dj.manage.execute_from_command_line": {
  "data": {
   "shadows": "django.core.management.execute_from_command_line"
  },
  "type": "import"
 },
 "falcon.bench.dj.manage.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "falcon.bench.dj.manage.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "falcon.bench.main": {
  "data": {
   "shadows": "falcon.bench.bench.main"
  },
  "type": "import"
 },
 "falcon.bench.nuts": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.nuts.config": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.nuts.config.app": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "falcon.bench.nuts.config.logging": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "falcon.bench.nuts.config.server": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "falcon.bench.nuts.nuts": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.nuts.nuts.app": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.nuts.nuts.app.create": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "pecan.make_app"
   ]
  },
  "type": "function"
 },
 "falcon.bench.nuts.nuts.app.make_app": {
  "data": {
   "shadows": "pecan.make_app"
  },
  "type": "import"
 },
 "falcon.bench.nuts.nuts.app.setup_app": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "getattr",
    "pecan.make_app"
   ]
  },
  "type": "function"
 },
 "falcon.bench.nuts.nuts.controllers": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.nuts.nuts.controllers.root": {
  "data": {
   "symbols_in_volume": [
    "falcon.bench.nuts.nuts.controllers.root.pecan"
   ]
  },
  "type": "module"
 },
 "falcon.bench.nuts.nuts.controllers.root.HelloController": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.bench.nuts.nuts.controllers.root.HelloController._lookup": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "falcon.bench.nuts.nuts.controllers.root.TestController",
    "pecan.expose"
   ]
  },
  "type": "function"
 },
 "falcon.bench.nuts.nuts.controllers.root.RootController": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "falcon.bench.nuts.nuts.controllers.root.HelloController",
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.bench.nuts.nuts.controllers.root.RootController.index": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "falcon.bench.nuts.nuts.controllers.root._body",
    "falcon.bench.nuts.nuts.controllers.root._headers",
    "pecan.expose",
    "pecan.response.headers.update"
   ]
  },
  "type": "function"
 },
 "falcon.bench.nuts.nuts.controllers.root.TestController": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.bench.nuts.nuts.controllers.root.TestController.__init__": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "falcon.bench.nuts.nuts.controllers.root.TestController.test": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "falcon.bench.nuts.nuts.controllers.root._body",
    "falcon.bench.nuts.nuts.controllers.root._headers",
    "pecan.expose",
    "pecan.request.headers",
    "pecan.request.params.get",
    "pecan.response.headers.update"
   ]
  },
  "type": "function"
 },
 "falcon.bench.nuts.nuts.controllers.root._body": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "falcon.bench.nuts.nuts.controllers.root._headers": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "falcon.bench.nuts.nuts.controllers.root.expose": {
  "data": {
   "shadows": "pecan.expose"
  },
  "type": "import"
 },
 "falcon.bench.nuts.nuts.controllers.root.pecan": {
  "data": {
   "shadows": "pecan"
  },
  "type": "import"
 },
 "falcon.bench.nuts.nuts.controllers.root.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "falcon.bench.nuts.nuts.controllers.root.request": {
  "data": {
   "shadows": "pecan.request"
  },
  "type": "import"
 },
 "falcon.bench.nuts.nuts.controllers.root.response": {
  "data": {
   "shadows": "pecan.response"
  },
  "type": "import"
 },
 "falcon.bench.nuts.nuts.model": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.nuts.nuts.model.conf": {
  "data": {
   "shadows": "pecan.conf"
  },
  "type": "import"
 },
 "falcon.bench.nuts.nuts.model.init_model": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "falcon.bench.nuts.nuts.tests": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.nuts.nuts.tests.FunctionalTest": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "falcon.bench.nuts.nuts.tests.FunctionalTest.setUp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "falcon.bench.nuts.nuts.tests.os",
    "pecan.testing.load_test_app"
   ]
  },
  "type": "function"
 },
 "falcon.bench.nuts.nuts.tests.FunctionalTest.tearDown": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pecan.set_config"
   ]
  },
  "type": "function"
 },
 "falcon.bench.nuts.nuts.tests.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "falcon.bench.nuts.nuts.tests.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "falcon.bench.nuts.nuts.tests.config": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.nuts.nuts.tests.config.app": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "falcon.bench.nuts.nuts.tests.config.server": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "falcon.bench.nuts.nuts.tests.load_test_app": {
  "data": {
   "shadows": "pecan.testing.load_test_app"
  },
  "type": "import"
 },
 "falcon.bench.nuts.nuts.tests.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "falcon.bench.nuts.nuts.tests.set_config": {
  "data": {
   "shadows": "pecan.set_config"
  },
  "type": "import"
 },
 "falcon.bench.nuts.nuts.tests.test_functional": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.nuts.nuts.tests.test_functional.FunctionalTest": {
  "data": {
   "shadows": "nuts.tests.FunctionalTest"
  },
  "type": "import"
 },
 "falcon.bench.nuts.nuts.tests.test_functional.TestApp": {
  "data": {
   "shadows": "webtest.TestApp"
  },
  "type": "import"
 },
 "falcon.bench.nuts.nuts.tests.test_functional.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "falcon.bench.nuts.nuts.tests.test_functional.TestRootController": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "nuts.tests.FunctionalTest"
   ]
  },
  "type": "class"
 },
 "falcon.bench.nuts.nuts.tests.test_functional.TestRootController.test_get": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "falcon.bench.nuts.nuts.tests.test_functional.TestRootController.test_get_not_found": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "falcon.bench.nuts.nuts.tests.test_functional.TestRootController.test_search": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "falcon.bench.nuts.nuts.tests.test_units": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.nuts.nuts.tests.test_units.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "falcon.bench.nuts.nuts.tests.test_units.TestUnits": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "falcon.bench.nuts.nuts.tests.test_units.TestUnits.test_units": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "falcon.bench.nuts.setup": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "ez_setup.use_setuptools",
    "setuptools.find_packages",
    "setuptools.setup"
   ]
  },
  "type": "module"
 },
 "falcon.bench.nuts.setup.find_packages": {
  "data": {
   "shadows": "setuptools.find_packages"
  },
  "type": "import"
 },
 "falcon.bench.nuts.setup.setup": {
  "data": {
   "shadows": "setuptools.setup"
  },
  "type": "import"
 },
 "falcon.bench.nuts.setup.use_setuptools": {
  "data": {
   "shadows": "ez_setup.use_setuptools"
  },
  "type": "import"
 },
 "falcon.bench.queues": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.queues.api": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.queues.api.CannedResponseComponent": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.bench.queues.api.CannedResponseComponent.__init__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "falcon.bench.queues.api.CannedResponseComponent.process_response": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "falcon.bench.queues.api.falcon",
    "len"
   ]
  },
  "type": "function"
 },
 "falcon.bench.queues.api.RequestIDComponent": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.bench.queues.api.RequestIDComponent.process_request": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "falcon.bench.queues.api.RequestIDComponent.process_response": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "falcon.bench.queues.api.claims": {
  "data": {
   "shadows": "falcon.bench.queues.claims"
  },
  "type": "import"
 },
 "falcon.bench.queues.api.create": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "falcon.bench.queues.api.CannedResponseComponent",
    "falcon.bench.queues.api.RequestIDComponent",
    "falcon.bench.queues.api.falcon",
    "falcon.bench.queues.claims.CollectionResource",
    "falcon.bench.queues.claims.ItemResource",
    "falcon.bench.queues.messages.CollectionResource",
    "falcon.bench.queues.messages.ItemResource",
    "falcon.bench.queues.queues.CollectionResource",
    "falcon.bench.queues.queues.ItemResource",
    "falcon.bench.queues.stats.Resource"
   ]
  },
  "type": "function"
 },
 "falcon.bench.queues.api.falcon": {
  "data": {
   "shadows": "falcon"
  },
  "type": "import"
 },
 "falcon.bench.queues.api.messages": {
  "data": {
   "shadows": "falcon.bench.queues.messages"
  },
  "type": "import"
 },
 "falcon.bench.queues.api.queues": {
  "data": {
   "shadows": "falcon.bench.queues.queues"
  },
  "type": "import"
 },
 "falcon.bench.queues.api.stats": {
  "data": {
   "shadows": "falcon.bench.queues.stats"
  },
  "type": "import"
 },
 "falcon.bench.queues.claims": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.queues.claims.CollectionResource": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.bench.queues.claims.CollectionResource.on_post": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "falcon.bench.queues.claims.ItemResource": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.bench.queues.claims.ItemResource.on_delete": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "falcon.bench.queues.claims.ItemResource.on_get": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "falcon.bench.queues.claims.ItemResource.on_patch": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "falcon.bench.queues.messages": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.queues.messages.CollectionResource": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.bench.queues.messages.CollectionResource.on_get": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "falcon.bench.queues.messages.CollectionResource.on_post": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "falcon.bench.queues.messages.ItemResource": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.bench.queues.messages.ItemResource.on_delete": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "falcon.bench.queues.messages.ItemResource.on_get": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "falcon.bench.queues.queues": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.queues.queues.CollectionResource": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.bench.queues.queues.CollectionResource.on_get": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "falcon.bench.queues.queues.ItemResource": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.bench.queues.queues.ItemResource.on_delete": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "falcon.bench.queues.queues.ItemResource.on_get": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "falcon.bench.queues.queues.ItemResource.on_put": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "falcon.bench.queues.stats": {
  "data": {},
  "type": "module"
 },
 "falcon.bench.queues.stats.Resource": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.bench.queues.stats.Resource.on_get": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "falcon.cmd": {
  "data": {},
  "type": "module"
 },
 "falcon.cmd.bench": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "falcon.cmd.bench.main"
   ]
  },
  "type": "module"
 },
 "falcon.cmd.bench.bench": {
  "data": {
   "shadows": "falcon.bench"
  },
  "type": "import"
 },
 "falcon.cmd.bench.fail": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "falcon.cmd.bench.sys"
   ]
  },
  "type": "function"
 },
 "falcon.cmd.bench.main": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "RuntimeError",
    "falcon.bench.main",
    "falcon.cmd.bench.fail"
   ]
  },
  "type": "function"
 },
 "falcon.cmd.bench.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "falcon.cmd.print_routes": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "falcon.cmd.print_routes.main"
   ]
  },
  "type": "module"
 },
 "falcon.cmd.print_routes.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "falcon.cmd.print_routes.falcon": {
  "data": {
   "shadows": "falcon"
  },
  "type": "import"
 },
 "falcon.cmd.print_routes.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "falcon.cmd.print_routes.main": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "__import__",
    "api",
    "callable",
    "falcon.cmd.print_routes.argparse",
    "falcon.cmd.print_routes.falcon",
    "falcon.cmd.print_routes.print_routes",
    "getattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "falcon.cmd.print_routes.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "falcon.cmd.print_routes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "falcon.cmd.print_routes.print_routes": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "falcon.cmd.print_routes.traverse"
   ]
  },
  "type": "function"
 },
 "falcon.cmd.print_routes.traverse": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "TypeError",
    "falcon.cmd.print_routes.inspect",
    "functools.partial",
    "isinstance",
    "print"
   ]
  },
  "type": "function"
 },
 "falcon.constants": {
  "data": {
   "symbols_in_volume": [
    "falcon.constants.HTTP_METHODS",
    "falcon.constants.MEDIA_JSON",
    "falcon.constants.WEBDAV_METHODS"
   ]
  },
  "type": "module"
 },
 "falcon.constants.COMBINED_METHODS": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "falcon.constants.DEFAULT_MEDIA_TYPE": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "falcon.constants.HTTP_METHODS": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "falcon.constants.MEDIA_GIF": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "falcon.constants.MEDIA_HTML": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "falcon.constants.MEDIA_JPEG": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "falcon.constants.MEDIA_JS": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "falcon.constants.MEDIA_JSON": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "falcon.constants.MEDIA_MSGPACK": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "falcon.constants.MEDIA_PNG": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "falcon.constants.MEDIA_TEXT": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "falcon.constants.MEDIA_XML": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "falcon.constants.MEDIA_YAML": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "falcon.constants.WEBDAV_METHODS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "falcon.errors": {
  "data": {},
  "type": "module"
 },
 "falcon.errors.HTTPBadGateway": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPBadGateway.__init__": {
  "data": {
   "lineno": 1310,
   "symbols_in_volume": [
    "falcon.errors.HTTPBadGateway",
    "falcon.status_codes.HTTP_502",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPBadRequest": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPBadRequest.__init__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "falcon.errors.HTTPBadRequest",
    "falcon.status_codes.HTTP_400",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPConflict": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPConflict.__init__": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "falcon.errors.HTTPConflict",
    "falcon.status_codes.HTTP_409",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPError": {
  "data": {
   "shadows": "falcon.http_error.HTTPError"
  },
  "type": "import"
 },
 "falcon.errors.HTTPFailedDependency": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError",
    "falcon.http_error.OptionalRepresentation"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPFailedDependency.__init__": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "falcon.errors.HTTPFailedDependency",
    "falcon.status_codes.HTTP_424",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPForbidden": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPForbidden.__init__": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "falcon.errors.HTTPForbidden",
    "falcon.status_codes.HTTP_403",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPGatewayTimeout": {
  "data": {
   "lineno": 1383,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPGatewayTimeout.__init__": {
  "data": {
   "lineno": 1424,
   "symbols_in_volume": [
    "falcon.errors.HTTPGatewayTimeout",
    "falcon.status_codes.HTTP_504",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPGone": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError",
    "falcon.http_error.OptionalRepresentation"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPGone.__init__": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "falcon.errors.HTTPGone",
    "falcon.status_codes.HTTP_410",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPInsufficientStorage": {
  "data": {
   "lineno": 1482,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPInsufficientStorage.__init__": {
  "data": {
   "lineno": 1525,
   "symbols_in_volume": [
    "falcon.errors.HTTPInsufficientStorage",
    "falcon.status_codes.HTTP_507",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPInternalServerError": {
  "data": {
   "lineno": 1174,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPInternalServerError.__init__": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": [
    "falcon.errors.HTTPInternalServerError",
    "falcon.status_codes.HTTP_500",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPInvalidHeader": {
  "data": {
   "lineno": 1637,
   "symbols_in_volume": [
    "falcon.errors.HTTPBadRequest"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPInvalidHeader.__init__": {
  "data": {
   "lineno": 1673,
   "symbols_in_volume": [
    "falcon.errors.HTTPInvalidHeader",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPInvalidParam": {
  "data": {
   "lineno": 1727,
   "symbols_in_volume": [
    "falcon.errors.HTTPBadRequest"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPInvalidParam.__init__": {
  "data": {
   "lineno": 1765,
   "symbols_in_volume": [
    "falcon.errors.HTTPInvalidParam",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPLengthRequired": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPLengthRequired.__init__": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "falcon.errors.HTTPLengthRequired",
    "falcon.status_codes.HTTP_411",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPLocked": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError",
    "falcon.http_error.OptionalRepresentation"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPLocked.__init__": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "falcon.errors.HTTPLocked",
    "falcon.status_codes.HTTP_423",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPLoopDetected": {
  "data": {
   "lineno": 1531,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPLoopDetected.__init__": {
  "data": {
   "lineno": 1571,
   "symbols_in_volume": [
    "falcon.errors.HTTPLoopDetected",
    "falcon.status_codes.HTTP_508",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPMethodNotAllowed": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError",
    "falcon.http_error.OptionalRepresentation"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPMethodNotAllowed.__init__": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "falcon.errors.HTTPMethodNotAllowed",
    "falcon.status_codes.HTTP_405",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPMissingHeader": {
  "data": {
   "lineno": 1683,
   "symbols_in_volume": [
    "falcon.errors.HTTPBadRequest"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPMissingHeader.__init__": {
  "data": {
   "lineno": 1718,
   "symbols_in_volume": [
    "falcon.errors.HTTPMissingHeader",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPMissingParam": {
  "data": {
   "lineno": 1774,
   "symbols_in_volume": [
    "falcon.errors.HTTPBadRequest"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPMissingParam.__init__": {
  "data": {
   "lineno": 1811,
   "symbols_in_volume": [
    "falcon.errors.HTTPMissingParam",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPNetworkAuthenticationRequired": {
  "data": {
   "lineno": 1577,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPNetworkAuthenticationRequired.__init__": {
  "data": {
   "lineno": 1629,
   "symbols_in_volume": [
    "falcon.errors.HTTPNetworkAuthenticationRequired",
    "falcon.status_codes.HTTP_511",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPNotAcceptable": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPNotAcceptable.__init__": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "falcon.errors.HTTPNotAcceptable",
    "falcon.status_codes.HTTP_406",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPNotFound": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError",
    "falcon.http_error.OptionalRepresentation"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPNotFound.__init__": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "falcon.errors.HTTPNotFound",
    "falcon.status_codes.HTTP_404",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPNotImplemented": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPNotImplemented.__init__": {
  "data": {
   "lineno": 1265,
   "symbols_in_volume": [
    "falcon.errors.HTTPNotImplemented",
    "falcon.status_codes.HTTP_501",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPPayloadTooLarge": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPPayloadTooLarge.__init__": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "datetime.datetime",
    "falcon.errors.HTTPPayloadTooLarge",
    "falcon.status_codes.HTTP_413",
    "falcon.util.dt_to_http",
    "isinstance",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPPreconditionFailed": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPPreconditionFailed.__init__": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "falcon.errors.HTTPPreconditionFailed",
    "falcon.status_codes.HTTP_412",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPPreconditionRequired": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPPreconditionRequired.__init__": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "falcon.errors.HTTPPreconditionRequired",
    "falcon.status_codes.HTTP_428",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPRangeNotSatisfiable": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError",
    "falcon.http_error.NoRepresentation"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPRangeNotSatisfiable.__init__": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "falcon.errors.HTTPRangeNotSatisfiable",
    "falcon.status_codes.HTTP_416",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPRequestHeaderFieldsTooLarge": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPRequestHeaderFieldsTooLarge.__init__": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": [
    "falcon.errors.HTTPRequestHeaderFieldsTooLarge",
    "falcon.status_codes.HTTP_431",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPServiceUnavailable": {
  "data": {
   "lineno": 1316,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPServiceUnavailable.__init__": {
  "data": {
   "lineno": 1367,
   "symbols_in_volume": [
    "datetime.datetime",
    "falcon.errors.HTTPServiceUnavailable",
    "falcon.status_codes.HTTP_503",
    "falcon.util.dt_to_http",
    "isinstance",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPTooManyRequests": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPTooManyRequests.__init__": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "datetime.datetime",
    "falcon.errors.HTTPTooManyRequests",
    "falcon.status_codes.HTTP_429",
    "falcon.util.dt_to_http",
    "isinstance",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPUnauthorized": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPUnauthorized.__init__": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "falcon.errors.HTTPUnauthorized",
    "falcon.status_codes.HTTP_401",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPUnavailableForLegalReasons": {
  "data": {
   "lineno": 1114,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError",
    "falcon.http_error.OptionalRepresentation"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPUnavailableForLegalReasons.__init__": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "falcon.errors.HTTPUnavailableForLegalReasons",
    "falcon.status_codes.HTTP_451",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPUnprocessableEntity": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPUnprocessableEntity.__init__": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "falcon.errors.HTTPUnprocessableEntity",
    "falcon.status_codes.HTTP_422",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPUnsupportedMediaType": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPUnsupportedMediaType.__init__": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "falcon.errors.HTTPUnsupportedMediaType",
    "falcon.status_codes.HTTP_415",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPUriTooLong": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPUriTooLong.__init__": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "falcon.errors.HTTPUriTooLong",
    "falcon.status_codes.HTTP_414",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HTTPVersionNotSupported": {
  "data": {
   "lineno": 1430,
   "symbols_in_volume": [
    "falcon.http_error.HTTPError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.HTTPVersionNotSupported.__init__": {
  "data": {
   "lineno": 1476,
   "symbols_in_volume": [
    "falcon.errors.HTTPVersionNotSupported",
    "falcon.status_codes.HTTP_505",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.errors.HeaderNotSupported": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "falcon.errors.NoRepresentation": {
  "data": {
   "shadows": "falcon.http_error.NoRepresentation"
  },
  "type": "import"
 },
 "falcon.errors.OptionalRepresentation": {
  "data": {
   "shadows": "falcon.http_error.OptionalRepresentation"
  },
  "type": "import"
 },
 "falcon.errors.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "falcon.errors.status": {
  "data": {
   "shadows": "falcon.status_codes"
  },
  "type": "import"
 },
 "falcon.errors.util": {
  "data": {
   "shadows": "falcon.util"
  },
  "type": "import"
 },
 "falcon.falcon.uri": {
  "data": {
   "shadows": "falcon.uri"
  },
  "type": "import"
 },
 "falcon.forwarded": {
  "data": {
   "symbols_in_volume": [
    "chr",
    "falcon.forwarded._FORWARDED_PAIR",
    "falcon.forwarded._QDTEXT",
    "falcon.forwarded._QUOTED_PAIR",
    "falcon.forwarded._QUOTED_STRING",
    "falcon.forwarded._TCHAR",
    "falcon.forwarded._TOKEN",
    "falcon.forwarded.re",
    "falcon.forwarded.string",
    "range",
    "tuple"
   ]
  },
  "type": "module"
 },
 "falcon.forwarded.Forwarded": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.forwarded.Forwarded.__init__": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "falcon.forwarded._FORWARDED_PAIR": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "falcon.forwarded._FORWARDED_PAIR_RE": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "falcon.forwarded._QDTEXT": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "falcon.forwarded._QUOTED_PAIR": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "falcon.forwarded._QUOTED_PAIR_REPLACE_RE": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "falcon.forwarded._QUOTED_STRING": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "falcon.forwarded._TCHAR": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "falcon.forwarded._TOKEN": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "falcon.forwarded._parse_forwarded_header": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "falcon.forwarded.Forwarded",
    "falcon.forwarded._FORWARDED_PAIR_RE",
    "falcon.util.uri.unquote_string",
    "len"
   ]
  },
  "type": "function"
 },
 "falcon.forwarded.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "falcon.forwarded.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "falcon.forwarded.unquote_string": {
  "data": {
   "shadows": "falcon.util.uri.unquote_string"
  },
  "type": "import"
 },
 "falcon.http_error": {
  "data": {},
  "type": "module"
 },
 "falcon.http_error.HTTPError": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "falcon.http_error.HTTPError.__init__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "falcon.util.uri.encode"
   ]
  },
  "type": "function"
 },
 "falcon.http_error.HTTPError.__repr__": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "falcon.http_error.HTTPError.has_representation": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.http_error.HTTPError.to_dict": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "dict",
    "obj_type"
   ]
  },
  "type": "function"
 },
 "falcon.http_error.HTTPError.to_json": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "falcon.util.json.dumps"
   ]
  },
  "type": "function"
 },
 "falcon.http_error.HTTPError.to_xml": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "str",
    "xml.etree.ElementTree.Element",
    "xml.etree.ElementTree.SubElement",
    "xml.etree.ElementTree.tostring"
   ]
  },
  "type": "function"
 },
 "falcon.http_error.NoRepresentation": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.http_error.NoRepresentation.has_representation": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.http_error.OptionalRepresentation": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.http_error.OptionalRepresentation.has_representation": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "falcon.http_error.OptionalRepresentation",
    "property",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.http_error.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "falcon.http_error.et": {
  "data": {
   "shadows": "xml.etree.ElementTree"
  },
  "type": "import"
 },
 "falcon.http_error.json": {
  "data": {
   "shadows": "falcon.util.json"
  },
  "type": "import"
 },
 "falcon.http_error.uri": {
  "data": {
   "shadows": "falcon.util.uri"
  },
  "type": "import"
 },
 "falcon.http_status": {
  "data": {},
  "type": "module"
 },
 "falcon.http_status.HTTPStatus": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "falcon.http_status.HTTPStatus.__init__": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "falcon.media": {
  "data": {},
  "type": "module"
 },
 "falcon.media.base": {
  "data": {},
  "type": "module"
 },
 "falcon.media.base.BaseHandler": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "falcon.media.base.abc",
    "falcon.util.compat.add_metaclass",
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.media.base.BaseHandler.deserialize": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "falcon.media.base.abc"
   ]
  },
  "type": "function"
 },
 "falcon.media.base.BaseHandler.serialize": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "falcon.media.base.abc"
   ]
  },
  "type": "function"
 },
 "falcon.media.base.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "falcon.media.base.compat": {
  "data": {
   "shadows": "falcon.util.compat"
  },
  "type": "import"
 },
 "falcon.media.handlers": {
  "data": {},
  "type": "module"
 },
 "falcon.media.handlers.Handlers": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "falcon.util.compat.UserDict"
   ]
  },
  "type": "class"
 },
 "falcon.media.handlers.Handlers.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "falcon.media.JSONHandler",
    "falcon.util.compat.UserDict.__init__"
   ]
  },
  "type": "function"
 },
 "falcon.media.handlers.Handlers._resolve_media_type": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError",
    "falcon.vendor.mimeparse.best_match"
   ]
  },
  "type": "function"
 },
 "falcon.media.handlers.Handlers.find_by_media_type": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "KeyError",
    "falcon.errors.HTTPUnsupportedMediaType"
   ]
  },
  "type": "function"
 },
 "falcon.media.handlers.JSONHandler": {
  "data": {
   "shadows": "falcon.media.JSONHandler"
  },
  "type": "import"
 },
 "falcon.media.handlers.UserDict": {
  "data": {
   "shadows": "falcon.util.compat.UserDict"
  },
  "type": "import"
 },
 "falcon.media.handlers.errors": {
  "data": {
   "shadows": "falcon.errors"
  },
  "type": "import"
 },
 "falcon.media.handlers.mimeparse": {
  "data": {
   "shadows": "falcon.vendor.mimeparse"
  },
  "type": "import"
 },
 "falcon.media.json": {
  "data": {},
  "type": "module"
 },
 "falcon.media.json.BaseHandler": {
  "data": {
   "shadows": "falcon.media.BaseHandler"
  },
  "type": "import"
 },
 "falcon.media.json.JSONHandler": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "falcon.media.BaseHandler"
   ]
  },
  "type": "class"
 },
 "falcon.media.json.JSONHandler.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "falcon.util.json.dumps",
    "falcon.util.json.loads",
    "functools.partial"
   ]
  },
  "type": "function"
 },
 "falcon.media.json.JSONHandler.deserialize": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "falcon.errors.HTTPBadRequest"
   ]
  },
  "type": "function"
 },
 "falcon.media.json.JSONHandler.serialize": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "bytes",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "falcon.media.json.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "falcon.media.json.errors": {
  "data": {
   "shadows": "falcon.errors"
  },
  "type": "import"
 },
 "falcon.media.json.json": {
  "data": {
   "shadows": "falcon.util.json"
  },
  "type": "import"
 },
 "falcon.media.json.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "falcon.media.msgpack": {
  "data": {},
  "type": "module"
 },
 "falcon.media.msgpack.BaseHandler": {
  "data": {
   "shadows": "falcon.media.BaseHandler"
  },
  "type": "import"
 },
 "falcon.media.msgpack.MessagePackHandler": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "falcon.media.BaseHandler"
   ]
  },
  "type": "class"
 },
 "falcon.media.msgpack.MessagePackHandler.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "falcon.media.msgpack.msgpack"
   ]
  },
  "type": "function"
 },
 "falcon.media.msgpack.MessagePackHandler.deserialize": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "falcon.errors.HTTPBadRequest"
   ]
  },
  "type": "function"
 },
 "falcon.media.msgpack.MessagePackHandler.serialize": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "falcon.media.msgpack.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "falcon.media.msgpack.errors": {
  "data": {
   "shadows": "falcon.errors"
  },
  "type": "import"
 },
 "falcon.media.msgpack.msgpack": {
  "data": {
   "shadows": "msgpack"
  },
  "type": "import"
 },
 "falcon.media.validators": {
  "data": {},
  "type": "module"
 },
 "falcon.media.validators.jsonschema": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "falcon.media.validators.jsonschema.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "falcon.media.validators.jsonschema.falcon": {
  "data": {
   "shadows": "falcon"
  },
  "type": "import"
 },
 "falcon.media.validators.jsonschema.jsonschema": {
  "data": {
   "shadows": "jsonschema"
  },
  "type": "import"
 },
 "falcon.media.validators.jsonschema.validate": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "falcon.media.validators.jsonschema.validate.decorator": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "falcon.media.validators.jsonschema.validate.decorator.wrapper": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "falcon.media.validators.jsonschema.falcon",
    "falcon.media.validators.jsonschema.jsonschema",
    "func",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "falcon.media.validators.jsonschema.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "falcon.redirects": {
  "data": {},
  "type": "module"
 },
 "falcon.redirects.HTTPFound": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "falcon.http_status.HTTPStatus"
   ]
  },
  "type": "class"
 },
 "falcon.redirects.HTTPFound.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "falcon.redirects.HTTPFound",
    "falcon.redirects.falcon",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.redirects.HTTPMovedPermanently": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "falcon.http_status.HTTPStatus"
   ]
  },
  "type": "class"
 },
 "falcon.redirects.HTTPMovedPermanently.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "falcon.redirects.HTTPMovedPermanently",
    "falcon.redirects.falcon",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.redirects.HTTPPermanentRedirect": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "falcon.http_status.HTTPStatus"
   ]
  },
  "type": "class"
 },
 "falcon.redirects.HTTPPermanentRedirect.__init__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "falcon.redirects.HTTPPermanentRedirect",
    "falcon.redirects.falcon",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.redirects.HTTPSeeOther": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "falcon.http_status.HTTPStatus"
   ]
  },
  "type": "class"
 },
 "falcon.redirects.HTTPSeeOther.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "falcon.redirects.HTTPSeeOther",
    "falcon.redirects.falcon",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.redirects.HTTPStatus": {
  "data": {
   "shadows": "falcon.http_status.HTTPStatus"
  },
  "type": "import"
 },
 "falcon.redirects.HTTPTemporaryRedirect": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "falcon.http_status.HTTPStatus"
   ]
  },
  "type": "class"
 },
 "falcon.redirects.HTTPTemporaryRedirect.__init__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "falcon.redirects.HTTPTemporaryRedirect",
    "falcon.redirects.falcon",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.redirects.falcon": {
  "data": {
   "shadows": "falcon"
  },
  "type": "import"
 },
 "falcon.request": {
  "data": {
   "symbols_in_volume": [
    "datetime.datetime.now",
    "datetime.datetime.strptime",
    "frozenset"
   ]
  },
  "type": "module"
 },
 "falcon.request.DEFAULT_ERROR_LOG_FORMAT": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "falcon.request.DEFAULT_MEDIA_TYPE": {
  "data": {
   "shadows": "falcon.DEFAULT_MEDIA_TYPE"
  },
  "type": "import"
 },
 "falcon.request.FALSE_STRINGS": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "falcon.request.Forwarded": {
  "data": {
   "shadows": "falcon.forwarded.Forwarded"
  },
  "type": "import"
 },
 "falcon.request.Handlers": {
  "data": {
   "shadows": "falcon.media.Handlers"
  },
  "type": "import"
 },
 "falcon.request.Request": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "falcon.request_helpers.header_property",
    "falcon.util.structures.Context",
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.request.Request.__init__": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "KeyError",
    "falcon.request.RequestOptions",
    "falcon.util.compat.PY3",
    "falcon.util.uri.parse_query_string",
    "len"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.__repr__": {
  "data": {
   "lineno": 514
  },
  "type": "function"
 },
 "falcon.request.Request._get_wrapped_wsgi_input": {
  "data": {
   "lineno": 1750,
   "symbols_in_volume": [
    "falcon.errors.HTTPInvalidHeader",
    "falcon.request_helpers.BoundedStream"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request._parse_form_urlencoded": {
  "data": {
   "lineno": 1763,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "falcon.util.uri.parse_query_string"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.accept": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "KeyError",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.access_route": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "falcon.util.uri.parse_host",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.app": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "KeyError",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.bounded_stream": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.client_accepts": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "ValueError",
    "falcon.vendor.mimeparse.quality"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.client_accepts_json": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.client_accepts_msgpack": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.client_accepts_xml": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.client_prefers": {
  "data": {
   "lineno": 1009,
   "symbols_in_volume": [
    "ValueError",
    "falcon.vendor.mimeparse.best_match"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.content_length": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "falcon.errors.HTTPInvalidHeader",
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.cookies": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "falcon.request_helpers.parse_cookie_header",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.date": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.forwarded": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "KeyError",
    "falcon.forwarded._parse_forwarded_header",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.forwarded_host": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "KeyError",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.forwarded_prefix": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.forwarded_scheme": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "KeyError",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.forwarded_uri": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.get_cookie_values": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "falcon.request_helpers.parse_cookie_header"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.get_header": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "KeyError",
    "falcon.errors.HTTPMissingHeader",
    "falcon.request.WSGI_CONTENT_HEADERS"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.get_header_as_datetime": {
  "data": {
   "lineno": 1081,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "falcon.errors.HTTPInvalidHeader",
    "falcon.util.http_date_to_dt"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.get_param": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": [
    "falcon.errors.HTTPMissingParam",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.get_param_as_bool": {
  "data": {
   "lineno": 1417,
   "symbols_in_volume": [
    "falcon.errors.HTTPInvalidParam",
    "falcon.errors.HTTPMissingParam",
    "falcon.request.FALSE_STRINGS",
    "falcon.request.TRUE_STRINGS",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.get_param_as_date": {
  "data": {
   "lineno": 1613
  },
  "type": "function"
 },
 "falcon.request.Request.get_param_as_datetime": {
  "data": {
   "lineno": 1567,
   "symbols_in_volume": [
    "ValueError",
    "falcon.errors.HTTPInvalidParam",
    "falcon.request.strptime"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.get_param_as_float": {
  "data": {
   "lineno": 1280,
   "symbols_in_volume": [
    "ValueError",
    "falcon.errors.HTTPInvalidParam",
    "falcon.errors.HTTPMissingParam",
    "float",
    "isinstance",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.get_param_as_int": {
  "data": {
   "lineno": 1209,
   "symbols_in_volume": [
    "ValueError",
    "falcon.errors.HTTPInvalidParam",
    "falcon.errors.HTTPMissingParam",
    "int",
    "isinstance",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.get_param_as_json": {
  "data": {
   "lineno": 1654,
   "symbols_in_volume": [
    "ValueError",
    "falcon.errors.HTTPInvalidParam",
    "falcon.util.json.loads"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.get_param_as_list": {
  "data": {
   "lineno": 1492,
   "symbols_in_volume": [
    "ValueError",
    "falcon.errors.HTTPInvalidParam",
    "falcon.errors.HTTPMissingParam",
    "isinstance",
    "list",
    "transform"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.get_param_as_uuid": {
  "data": {
   "lineno": 1351,
   "symbols_in_volume": [
    "ValueError",
    "falcon.errors.HTTPInvalidParam",
    "falcon.errors.HTTPMissingParam",
    "isinstance",
    "list",
    "uuid.UUID"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.has_param": {
  "data": {
   "lineno": 1698
  },
  "type": "function"
 },
 "falcon.request.Request.headers": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "falcon.request.WSGI_CONTENT_HEADERS",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.host": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "KeyError",
    "falcon.util.uri.parse_host",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.if_match": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "falcon.request_helpers._parse_etags",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.if_modified_since": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.if_none_match": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "falcon.request_helpers._parse_etags",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.if_unmodified_since": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.log_error": {
  "data": {
   "lineno": 1715,
   "symbols_in_volume": [
    "falcon.request.DEFAULT_ERROR_LOG_FORMAT",
    "falcon.request.now",
    "falcon.util.compat.PY3",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.media": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.netloc": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "KeyError",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.params": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.port": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "KeyError",
    "falcon.util.uri.parse_host",
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.prefix": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.range": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "falcon.errors.HTTPInvalidHeader",
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.range_unit": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "KeyError",
    "falcon.errors.HTTPInvalidHeader",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.relative_uri": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.remote_addr": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.scheme": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.subdomain": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.Request.uri": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request.RequestOptions": {
  "data": {
   "lineno": 1793,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.request.RequestOptions.__init__": {
  "data": {
   "lineno": 1870,
   "symbols_in_volume": [
    "falcon.DEFAULT_MEDIA_TYPE",
    "falcon.media.Handlers"
   ]
  },
  "type": "function"
 },
 "falcon.request.TRUE_STRINGS": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "falcon.request.UUID": {
  "data": {
   "shadows": "uuid.UUID"
  },
  "type": "import"
 },
 "falcon.request.WSGI_CONTENT_HEADERS": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "falcon.request._parse_forwarded_header": {
  "data": {
   "shadows": "falcon.forwarded._parse_forwarded_header"
  },
  "type": "import"
 },
 "falcon.request.compat": {
  "data": {
   "shadows": "falcon.util.compat"
  },
  "type": "import"
 },
 "falcon.request.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "falcon.request.errors": {
  "data": {
   "shadows": "falcon.errors"
  },
  "type": "import"
 },
 "falcon.request.helpers": {
  "data": {
   "shadows": "falcon.request_helpers"
  },
  "type": "import"
 },
 "falcon.request.json": {
  "data": {
   "shadows": "falcon.util.json"
  },
  "type": "import"
 },
 "falcon.request.mimeparse": {
  "data": {
   "shadows": "falcon.vendor.mimeparse"
  },
  "type": "import"
 },
 "falcon.request.now": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "falcon.request.parse_host": {
  "data": {
   "shadows": "falcon.util.uri.parse_host"
  },
  "type": "import"
 },
 "falcon.request.parse_query_string": {
  "data": {
   "shadows": "falcon.util.uri.parse_query_string"
  },
  "type": "import"
 },
 "falcon.request.strptime": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "falcon.request.structures": {
  "data": {
   "shadows": "falcon.util.structures"
  },
  "type": "import"
 },
 "falcon.request.util": {
  "data": {
   "shadows": "falcon.util"
  },
  "type": "import"
 },
 "falcon.request_helpers": {
  "data": {
   "symbols_in_volume": [
    "falcon.request_helpers.BoundedStream",
    "falcon.request_helpers.re"
   ]
  },
  "type": "module"
 },
 "falcon.request_helpers.Body": {
  "data": {
   "lineno": 314
  },
  "type": "constant"
 },
 "falcon.request_helpers.BoundedStream": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "falcon.request_helpers.io",
    "next"
   ]
  },
  "type": "class"
 },
 "falcon.request_helpers.BoundedStream.__init__": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "falcon.request_helpers.BoundedStream.__iter__": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "falcon.request_helpers.BoundedStream.__next__": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "next"
   ]
  },
  "type": "function"
 },
 "falcon.request_helpers.BoundedStream._read": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "target"
   ]
  },
  "type": "function"
 },
 "falcon.request_helpers.BoundedStream.exhaust": {
  "data": {
   "lineno": 293
  },
  "type": "function"
 },
 "falcon.request_helpers.BoundedStream.is_exhausted": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request_helpers.BoundedStream.read": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "falcon.request_helpers.BoundedStream.readable": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "falcon.request_helpers.BoundedStream.readline": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "falcon.request_helpers.BoundedStream.readlines": {
  "data": {
   "lineno": 274
  },
  "type": "function"
 },
 "falcon.request_helpers.BoundedStream.seekable": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "falcon.request_helpers.BoundedStream.write": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "IOError"
   ]
  },
  "type": "function"
 },
 "falcon.request_helpers.BoundedStream.writeable": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "falcon.request_helpers.ETag": {
  "data": {
   "shadows": "falcon.util.ETag"
  },
  "type": "import"
 },
 "falcon.request_helpers._COOKIE_NAME_RESERVED_CHARS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "falcon.request_helpers._ENTITY_TAG_PATTERN": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "falcon.request_helpers._parse_etags": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "bool",
    "falcon.request_helpers._ENTITY_TAG_PATTERN",
    "falcon.util.ETag",
    "falcon.util.ETag.loads"
   ]
  },
  "type": "function"
 },
 "falcon.request_helpers.header_property": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.request_helpers.header_property.fget": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "falcon.request_helpers.http_cookies": {
  "data": {
   "shadows": "falcon.util.compat.http_cookies"
  },
  "type": "import"
 },
 "falcon.request_helpers.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "falcon.request_helpers.parse_cookie_header": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "falcon.request_helpers._COOKIE_NAME_RESERVED_CHARS",
    "falcon.util.compat.http_cookies._unquote",
    "len"
   ]
  },
  "type": "function"
 },
 "falcon.request_helpers.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "falcon.responders": {
  "data": {},
  "type": "module"
 },
 "falcon.responders.HTTPBadRequest": {
  "data": {
   "shadows": "falcon.errors.HTTPBadRequest"
  },
  "type": "import"
 },
 "falcon.responders.HTTPMethodNotAllowed": {
  "data": {
   "shadows": "falcon.errors.HTTPMethodNotAllowed"
  },
  "type": "import"
 },
 "falcon.responders.HTTPNotFound": {
  "data": {
   "shadows": "falcon.errors.HTTPNotFound"
  },
  "type": "import"
 },
 "falcon.responders.HTTP_200": {
  "data": {
   "shadows": "falcon.status_codes.HTTP_200"
  },
  "type": "import"
 },
 "falcon.responders.bad_request": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "falcon.errors.HTTPBadRequest"
   ]
  },
  "type": "function"
 },
 "falcon.responders.create_default_options": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "falcon.responders.on_options",
    "functools.partial",
    "functools.update_wrapper"
   ]
  },
  "type": "function"
 },
 "falcon.responders.create_method_not_allowed": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "falcon.responders.method_not_allowed",
    "functools.partial",
    "functools.update_wrapper"
   ]
  },
  "type": "function"
 },
 "falcon.responders.method_not_allowed": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "falcon.errors.HTTPMethodNotAllowed"
   ]
  },
  "type": "function"
 },
 "falcon.responders.on_options": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "falcon.status_codes.HTTP_200"
   ]
  },
  "type": "function"
 },
 "falcon.responders.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "falcon.responders.path_not_found": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "falcon.errors.HTTPNotFound"
   ]
  },
  "type": "function"
 },
 "falcon.responders.update_wrapper": {
  "data": {
   "shadows": "functools.update_wrapper"
  },
  "type": "import"
 },
 "falcon.response": {
  "data": {
   "symbols_in_volume": [
    "falcon.util.TimezoneGMT",
    "falcon.util.compat.http_cookies.CookieError",
    "falcon.util.compat.http_cookies.SimpleCookie"
   ]
  },
  "type": "module"
 },
 "falcon.response.CookieError": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "falcon.response.DEFAULT_MEDIA_TYPE": {
  "data": {
   "shadows": "falcon.DEFAULT_MEDIA_TYPE"
  },
  "type": "import"
 },
 "falcon.response.GMT_TIMEZONE": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "falcon.response.Handlers": {
  "data": {
   "shadows": "falcon.media.Handlers"
  },
  "type": "import"
 },
 "falcon.response.HeaderNotSupported": {
  "data": {
   "shadows": "falcon.errors.HeaderNotSupported"
  },
  "type": "import"
 },
 "falcon.response.Response": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "falcon.response_helpers.format_content_disposition",
    "falcon.response_helpers.format_etag_header",
    "falcon.response_helpers.format_header_value_list",
    "falcon.response_helpers.format_range",
    "falcon.response_helpers.header_property",
    "falcon.util.dt_to_http",
    "falcon.util.structures.Context",
    "falcon.util.uri.encode",
    "object",
    "str"
   ]
  },
  "type": "class"
 },
 "falcon.response.Response.__init__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "falcon.response.ResponseOptions"
   ]
  },
  "type": "function"
 },
 "falcon.response.Response.__repr__": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "falcon.response.Response._set_media_type": {
  "data": {
   "lineno": 968
  },
  "type": "function"
 },
 "falcon.response.Response._wsgi_headers": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "falcon.util.compat.PY2",
    "list"
   ]
  },
  "type": "function"
 },
 "falcon.response.Response.add_link": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "falcon.util.compat.string_types",
    "falcon.util.uri.encode",
    "falcon.util.uri.encode_value",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "falcon.response.Response.append_header": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "falcon.response.Response.data": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "falcon.response.Response.delete_header": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "falcon.errors.HeaderNotSupported"
   ]
  },
  "type": "function"
 },
 "falcon.response.Response.get_header": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "falcon.errors.HeaderNotSupported"
   ]
  },
  "type": "function"
 },
 "falcon.response.Response.headers": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.response.Response.media": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "falcon.response.Response.set_cookie": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "falcon.response.CookieError",
    "falcon.response.GMT_TIMEZONE",
    "falcon.response.SimpleCookie",
    "falcon.response_helpers.is_ascii_encodable",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "falcon.response.Response.set_header": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "falcon.errors.HeaderNotSupported",
    "str"
   ]
  },
  "type": "function"
 },
 "falcon.response.Response.set_headers": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "dict",
    "falcon.errors.HeaderNotSupported",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "falcon.response.Response.set_stream": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "falcon.response.Response.unset_cookie": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "falcon.response.SimpleCookie"
   ]
  },
  "type": "function"
 },
 "falcon.response.ResponseOptions": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.response.ResponseOptions.__init__": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": [
    "falcon.DEFAULT_MEDIA_TYPE",
    "falcon.media.Handlers",
    "falcon.response.mimetypes"
   ]
  },
  "type": "function"
 },
 "falcon.response.SimpleCookie": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "falcon.response.TimezoneGMT": {
  "data": {
   "shadows": "falcon.util.TimezoneGMT"
  },
  "type": "import"
 },
 "falcon.response.compat": {
  "data": {
   "shadows": "falcon.util.compat"
  },
  "type": "import"
 },
 "falcon.response.dt_to_http": {
  "data": {
   "shadows": "falcon.util.dt_to_http"
  },
  "type": "import"
 },
 "falcon.response.format_content_disposition": {
  "data": {
   "shadows": "falcon.response_helpers.format_content_disposition"
  },
  "type": "import"
 },
 "falcon.response.format_etag_header": {
  "data": {
   "shadows": "falcon.response_helpers.format_etag_header"
  },
  "type": "import"
 },
 "falcon.response.format_header_value_list": {
  "data": {
   "shadows": "falcon.response_helpers.format_header_value_list"
  },
  "type": "import"
 },
 "falcon.response.format_range": {
  "data": {
   "shadows": "falcon.response_helpers.format_range"
  },
  "type": "import"
 },
 "falcon.response.header_property": {
  "data": {
   "shadows": "falcon.response_helpers.header_property"
  },
  "type": "import"
 },
 "falcon.response.is_ascii_encodable": {
  "data": {
   "shadows": "falcon.response_helpers.is_ascii_encodable"
  },
  "type": "import"
 },
 "falcon.response.mimetypes": {
  "data": {
   "shadows": "mimetypes"
  },
  "type": "import"
 },
 "falcon.response.structures": {
  "data": {
   "shadows": "falcon.util.structures"
  },
  "type": "import"
 },
 "falcon.response.uri_encode": {
  "data": {
   "shadows": "falcon.util.uri.encode"
  },
  "type": "import"
 },
 "falcon.response.uri_encode_value": {
  "data": {
   "shadows": "falcon.util.uri.encode_value"
  },
  "type": "import"
 },
 "falcon.response_helpers": {
  "data": {
   "symbols_in_volume": [
    "falcon.util.compat.PY2"
   ]
  },
  "type": "module"
 },
 "falcon.response_helpers.compat": {
  "data": {
   "shadows": "falcon.util.compat"
  },
  "type": "import"
 },
 "falcon.response_helpers.format_content_disposition": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "falcon.response_helpers.format_etag_header": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "falcon.response_helpers.format_header_value_list": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "falcon.response_helpers.format_range": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "falcon.util.compat.PY2",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "falcon.response_helpers.header_property": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.response_helpers.header_property.fdel": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "falcon.response_helpers.header_property.fget": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "falcon.response_helpers.header_property.fset": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "KeyError",
    "transform"
   ]
  },
  "type": "function"
 },
 "falcon.response_helpers.is_ascii_encodable": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "AttributeError",
    "UnicodeDecodeError",
    "UnicodeEncodeError"
   ]
  },
  "type": "function"
 },
 "falcon.routing": {
  "data": {
   "symbols_in_volume": [
    "falcon.routing.compiled.CompiledRouter"
   ]
  },
  "type": "module"
 },
 "falcon.routing.CompiledRouter": {
  "data": {
   "shadows": "falcon.routing.compiled.CompiledRouter"
  },
  "type": "import"
 },
 "falcon.routing.CompiledRouterOptions": {
  "data": {
   "shadows": "falcon.routing.compiled.CompiledRouterOptions"
  },
  "type": "import"
 },
 "falcon.routing.DefaultRouter": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "falcon.routing.StaticRoute": {
  "data": {
   "shadows": "falcon.routing.static.StaticRoute"
  },
  "type": "import"
 },
 "falcon.routing.compile_uri_template": {
  "data": {
   "shadows": "falcon.routing.util.compile_uri_template"
  },
  "type": "import"
 },
 "falcon.routing.converters": {
  "data": {
   "symbols_in_volume": [
    "datetime.datetime.strptime",
    "falcon.routing.converters.DateTimeConverter",
    "falcon.routing.converters.IntConverter",
    "falcon.routing.converters.UUIDConverter"
   ]
  },
  "type": "module"
 },
 "falcon.routing.converters.BUILTIN": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "falcon.routing.converters.BaseConverter": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "falcon.routing.converters.abc",
    "falcon.util.compat.add_metaclass",
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.routing.converters.BaseConverter.convert": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "falcon.routing.converters.abc"
   ]
  },
  "type": "function"
 },
 "falcon.routing.converters.DateTimeConverter": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "falcon.routing.converters.BaseConverter"
   ]
  },
  "type": "class"
 },
 "falcon.routing.converters.DateTimeConverter.__init__": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "falcon.routing.converters.DateTimeConverter.convert": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ValueError",
    "falcon.routing.converters.strptime"
   ]
  },
  "type": "function"
 },
 "falcon.routing.converters.IntConverter": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "falcon.routing.converters.BaseConverter"
   ]
  },
  "type": "class"
 },
 "falcon.routing.converters.IntConverter.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "falcon.routing.converters.IntConverter.convert": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "falcon.routing.converters.UUIDConverter": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "falcon.routing.converters.BaseConverter"
   ]
  },
  "type": "class"
 },
 "falcon.routing.converters.UUIDConverter.convert": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "falcon.routing.converters.uuid"
   ]
  },
  "type": "function"
 },
 "falcon.routing.converters.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "falcon.routing.converters.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "falcon.routing.converters.compat": {
  "data": {
   "shadows": "falcon.util.compat"
  },
  "type": "import"
 },
 "falcon.routing.converters.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "falcon.routing.converters.strptime": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "falcon.routing.converters.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "falcon.routing.map_http_methods": {
  "data": {
   "shadows": "falcon.routing.util.map_http_methods"
  },
  "type": "import"
 },
 "falcon.routing.set_default_responders": {
  "data": {
   "shadows": "falcon.routing.util.set_default_responders"
  },
  "type": "import"
 },
 "falcon.routing.static": {
  "data": {},
  "type": "module"
 },
 "falcon.routing.static.StaticRoute": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "falcon.routing.static.re",
    "falcon.routing.static.sys",
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.routing.static.StaticRoute.__call__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "IOError",
    "falcon.routing.static.falcon",
    "falcon.routing.static.io",
    "falcon.routing.static.os",
    "len"
   ]
  },
  "type": "function"
 },
 "falcon.routing.static.StaticRoute.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "falcon.routing.static.os"
   ]
  },
  "type": "function"
 },
 "falcon.routing.static.StaticRoute.match": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "falcon.routing.static.falcon": {
  "data": {
   "shadows": "falcon"
  },
  "type": "import"
 },
 "falcon.routing.static.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "falcon.routing.static.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "falcon.routing.static.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "falcon.routing.static.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "falcon.routing.util": {
  "data": {},
  "type": "module"
 },
 "falcon.routing.util.COMBINED_METHODS": {
  "data": {
   "shadows": "falcon.COMBINED_METHODS"
  },
  "type": "import"
 },
 "falcon.routing.util.SuffixedMethodNotFoundError": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "falcon.routing.util.SuffixedMethodNotFoundError.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "falcon.routing.util.SuffixedMethodNotFoundError",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.routing.util.compat": {
  "data": {
   "shadows": "falcon.util.compat"
  },
  "type": "import"
 },
 "falcon.routing.util.compile_uri_template": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "falcon.routing.util.re",
    "falcon.util.compat.string_types",
    "isinstance",
    "set"
   ]
  },
  "type": "function"
 },
 "falcon.routing.util.map_http_methods": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "AttributeError",
    "callable",
    "falcon.COMBINED_METHODS",
    "falcon.routing.util.SuffixedMethodNotFoundError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "falcon.routing.util.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "falcon.routing.util.responders": {
  "data": {
   "shadows": "falcon.responders"
  },
  "type": "import"
 },
 "falcon.routing.util.set_default_responders": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "falcon.COMBINED_METHODS",
    "falcon.responders.create_default_options",
    "falcon.responders.create_method_not_allowed",
    "list",
    "sorted"
   ]
  },
  "type": "function"
 },
 "falcon.status_codes": {
  "data": {
   "symbols_in_volume": [
    "falcon.status_codes.HTTP_100",
    "falcon.status_codes.HTTP_101",
    "falcon.status_codes.HTTP_102",
    "falcon.status_codes.HTTP_200",
    "falcon.status_codes.HTTP_201",
    "falcon.status_codes.HTTP_202",
    "falcon.status_codes.HTTP_203",
    "falcon.status_codes.HTTP_204",
    "falcon.status_codes.HTTP_205",
    "falcon.status_codes.HTTP_206",
    "falcon.status_codes.HTTP_207",
    "falcon.status_codes.HTTP_208",
    "falcon.status_codes.HTTP_226",
    "falcon.status_codes.HTTP_300",
    "falcon.status_codes.HTTP_301",
    "falcon.status_codes.HTTP_302",
    "falcon.status_codes.HTTP_303",
    "falcon.status_codes.HTTP_304",
    "falcon.status_codes.HTTP_305",
    "falcon.status_codes.HTTP_307",
    "falcon.status_codes.HTTP_308",
    "falcon.status_codes.HTTP_400",
    "falcon.status_codes.HTTP_401",
    "falcon.status_codes.HTTP_402",
    "falcon.status_codes.HTTP_403",
    "falcon.status_codes.HTTP_404",
    "falcon.status_codes.HTTP_405",
    "falcon.status_codes.HTTP_406",
    "falcon.status_codes.HTTP_407",
    "falcon.status_codes.HTTP_408",
    "falcon.status_codes.HTTP_409",
    "falcon.status_codes.HTTP_410",
    "falcon.status_codes.HTTP_411",
    "falcon.status_codes.HTTP_412",
    "falcon.status_codes.HTTP_413",
    "falcon.status_codes.HTTP_414",
    "falcon.status_codes.HTTP_415",
    "falcon.status_codes.HTTP_416",
    "falcon.status_codes.HTTP_417",
    "falcon.status_codes.HTTP_418",
    "falcon.status_codes.HTTP_422",
    "falcon.status_codes.HTTP_423",
    "falcon.status_codes.HTTP_424",
    "falcon.status_codes.HTTP_426",
    "falcon.status_codes.HTTP_428",
    "falcon.status_codes.HTTP_429",
    "falcon.status_codes.HTTP_431",
    "falcon.status_codes.HTTP_451",
    "falcon.status_codes.HTTP_500",
    "falcon.status_codes.HTTP_501",
    "falcon.status_codes.HTTP_502",
    "falcon.status_codes.HTTP_503",
    "falcon.status_codes.HTTP_504",
    "falcon.status_codes.HTTP_505",
    "falcon.status_codes.HTTP_507",
    "falcon.status_codes.HTTP_508",
    "falcon.status_codes.HTTP_511"
   ]
  },
  "type": "module"
 },
 "falcon.status_codes.HTTP_100": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_101": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_102": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_200": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_201": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_202": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_203": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_204": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_205": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_206": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_207": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_208": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_226": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_300": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_301": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_302": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_303": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_304": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_305": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_307": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_308": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_400": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_401": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_402": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_403": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_404": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_405": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_406": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_407": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_408": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_409": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_410": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_411": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_412": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_413": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_414": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_415": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_416": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_417": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_418": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_422": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_423": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_424": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_426": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_428": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_429": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_431": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_451": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_500": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_501": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_502": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_503": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_504": {
  "data": {
   "lineno": 125
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_505": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_507": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_508": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_511": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_701": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_702": {
  "data": {
   "lineno": 138
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_703": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_710": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_711": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_712": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_719": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_720": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_721": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_722": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_723": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_724": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_725": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_726": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_727": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_740": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_741": {
  "data": {
   "lineno": 159
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_742": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_743": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_744": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_745": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_748": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_749": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_750": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_753": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_754": {
  "data": {
   "lineno": 171
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_755": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_759": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_771": {
  "data": {
   "lineno": 176
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_772": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_773": {
  "data": {
   "lineno": 178
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_774": {
  "data": {
   "lineno": 179
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_776": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_777": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_778": {
  "data": {
   "lineno": 182
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_779": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_780": {
  "data": {
   "lineno": 186
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_781": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_782": {
  "data": {
   "lineno": 188
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_783": {
  "data": {
   "lineno": 189
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_784": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_785": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_786": {
  "data": {
   "lineno": 192
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_791": {
  "data": {
   "lineno": 195
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_792": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_797": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_799": {
  "data": {
   "lineno": 198
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_ACCEPTED": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_ALREADY_REPORTED": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_BAD_GATEWAY": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_BAD_REQUEST": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_CONFLICT": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_CONTINUE": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_CREATED": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_EXPECTATION_FAILED": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_FAILED_DEPENDENCY": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_FORBIDDEN": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_FOUND": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_GATEWAY_TIMEOUT": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_GONE": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_HTTP_VERSION_NOT_SUPPORTED": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_IM_A_TEAPOT": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_IM_USED": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_INSUFFICIENT_STORAGE": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_INTERNAL_SERVER_ERROR": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_LENGTH_REQUIRED": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_LOCKED": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_LOOP_DETECTED": {
  "data": {
   "lineno": 132
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_METHOD_NOT_ALLOWED": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_MOVED_PERMANENTLY": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_MULTIPLE_CHOICES": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_MULTI_STATUS": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_NETWORK_AUTHENTICATION_REQUIRED": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_NON_AUTHORITATIVE_INFORMATION": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_NOT_ACCEPTABLE": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_NOT_FOUND": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_NOT_IMPLEMENTED": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_NOT_MODIFIED": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_NO_CONTENT": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_OK": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_PARTIAL_CONTENT": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_PAYMENT_REQUIRED": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_PERMANENT_REDIRECT": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_PRECONDITION_FAILED": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_PRECONDITION_REQUIRED": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_PROCESSING": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_PROXY_AUTHENTICATION_REQUIRED": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_REQUESTED_RANGE_NOT_SATISFIABLE": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_REQUEST_ENTITY_TOO_LARGE": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_REQUEST_HEADER_FIELDS_TOO_LARGE": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_REQUEST_TIMEOUT": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_REQUEST_URI_TOO_LONG": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_RESET_CONTENT": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_SEE_OTHER": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_SERVICE_UNAVAILABLE": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_SWITCHING_PROTOCOLS": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_TEMPORARY_REDIRECT": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_TOO_MANY_REQUESTS": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_UNAUTHORIZED": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_UNAVAILABLE_FOR_LEGAL_REASONS": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_UNPROCESSABLE_ENTITY": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_UNSUPPORTED_MEDIA_TYPE": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_UPGRADE_REQUIRED": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "falcon.status_codes.HTTP_USE_PROXY": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "falcon.testing": {
  "data": {},
  "type": "module"
 },
 "falcon.testing.SimpleTestResource": {
  "data": {
   "shadows": "falcon.testing.resource.SimpleTestResource"
  },
  "type": "import"
 },
 "falcon.testing.StartResponseMock": {
  "data": {
   "shadows": "falcon.testing.srmock.StartResponseMock"
  },
  "type": "import"
 },
 "falcon.testing.TestCase": {
  "data": {
   "shadows": "falcon.testing.test_case.TestCase"
  },
  "type": "import"
 },
 "falcon.testing.capture_responder_args": {
  "data": {
   "shadows": "falcon.testing.resource.capture_responder_args"
  },
  "type": "import"
 },
 "falcon.testing.client": {
  "data": {
   "symbols_in_volume": [
    "falcon.testing.client.warnings"
   ]
  },
  "type": "module"
 },
 "falcon.testing.client.CaseInsensitiveDict": {
  "data": {
   "shadows": "falcon.util.CaseInsensitiveDict"
  },
  "type": "import"
 },
 "falcon.testing.client.Cookie": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.testing.client.Cookie.__init__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "falcon.testing.client.Cookie.domain": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.testing.client.Cookie.expires": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "falcon.util.http_date_to_dt",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.testing.client.Cookie.http_only": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.testing.client.Cookie.max_age": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.testing.client.Cookie.name": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.testing.client.Cookie.path": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.testing.client.Cookie.secure": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.testing.client.Cookie.value": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.testing.client.MEDIA_JSON": {
  "data": {
   "shadows": "falcon.constants.MEDIA_JSON"
  },
  "type": "import"
 },
 "falcon.testing.client.Result": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.testing.client.Result.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "dict",
    "falcon.testing.client.Cookie",
    "falcon.testing.helpers.get_encoding_from_headers",
    "falcon.util.CaseInsensitiveDict",
    "falcon.util.compat.http_cookies.SimpleCookie",
    "int"
   ]
  },
  "type": "function"
 },
 "falcon.testing.client.Result.content": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.testing.client.Result.cookies": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.testing.client.Result.encoding": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.testing.client.Result.headers": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.testing.client.Result.json": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "falcon.util.json.loads",
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.testing.client.Result.status": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.testing.client.Result.status_code": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.testing.client.Result.text": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.testing.client.StartResponseMock": {
  "data": {
   "shadows": "falcon.testing.srmock.StartResponseMock"
  },
  "type": "import"
 },
 "falcon.testing.client.TestClient": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.testing.client.TestClient.__init__": {
  "data": {
   "lineno": 688
  },
  "type": "function"
 },
 "falcon.testing.client.TestClient.simulate_delete": {
  "data": {
   "lineno": 734
  },
  "type": "function"
 },
 "falcon.testing.client.TestClient.simulate_get": {
  "data": {
   "lineno": 692
  },
  "type": "function"
 },
 "falcon.testing.client.TestClient.simulate_head": {
  "data": {
   "lineno": 699
  },
  "type": "function"
 },
 "falcon.testing.client.TestClient.simulate_options": {
  "data": {
   "lineno": 720
  },
  "type": "function"
 },
 "falcon.testing.client.TestClient.simulate_patch": {
  "data": {
   "lineno": 727
  },
  "type": "function"
 },
 "falcon.testing.client.TestClient.simulate_post": {
  "data": {
   "lineno": 706
  },
  "type": "function"
 },
 "falcon.testing.client.TestClient.simulate_put": {
  "data": {
   "lineno": 713
  },
  "type": "function"
 },
 "falcon.testing.client.TestClient.simulate_request": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "falcon.testing.client.simulate_request",
    "falcon.util.compat.PY2",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "falcon.testing.client.compat": {
  "data": {
   "shadows": "falcon.util.compat"
  },
  "type": "import"
 },
 "falcon.testing.client.helpers": {
  "data": {
   "shadows": "falcon.testing.helpers"
  },
  "type": "import"
 },
 "falcon.testing.client.http_cookies": {
  "data": {
   "shadows": "falcon.util.compat.http_cookies"
  },
  "type": "import"
 },
 "falcon.testing.client.http_date_to_dt": {
  "data": {
   "shadows": "falcon.util.http_date_to_dt"
  },
  "type": "import"
 },
 "falcon.testing.client.simulate_delete": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "falcon.testing.client.simulate_request"
   ]
  },
  "type": "function"
 },
 "falcon.testing.client.simulate_get": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "falcon.testing.client.simulate_request"
   ]
  },
  "type": "function"
 },
 "falcon.testing.client.simulate_head": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "falcon.testing.client.simulate_request"
   ]
  },
  "type": "function"
 },
 "falcon.testing.client.simulate_options": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "falcon.testing.client.simulate_request"
   ]
  },
  "type": "function"
 },
 "falcon.testing.client.simulate_patch": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "falcon.testing.client.simulate_request"
   ]
  },
  "type": "function"
 },
 "falcon.testing.client.simulate_post": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "falcon.testing.client.simulate_request"
   ]
  },
  "type": "function"
 },
 "falcon.testing.client.simulate_put": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "falcon.testing.client.simulate_request"
   ]
  },
  "type": "function"
 },
 "falcon.testing.client.simulate_request": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "ValueError",
    "falcon.constants.MEDIA_JSON",
    "falcon.testing.client.Result",
    "falcon.testing.helpers.DEFAULT_HOST",
    "falcon.testing.helpers.closed_wsgi_iterable",
    "falcon.testing.helpers.create_environ",
    "falcon.testing.srmock.StartResponseMock",
    "falcon.util.json",
    "falcon.util.json.dumps",
    "falcon.util.to_query_str",
    "validator"
   ]
  },
  "type": "function"
 },
 "falcon.testing.client.to_query_str": {
  "data": {
   "shadows": "falcon.util.to_query_str"
  },
  "type": "import"
 },
 "falcon.testing.client.util_json": {
  "data": {
   "shadows": "falcon.util.json"
  },
  "type": "import"
 },
 "falcon.testing.client.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "falcon.testing.client.wsgiref.validate": {
  "data": {
   "shadows": "wsgiref.validate"
  },
  "type": "import"
 },
 "falcon.testing.helpers": {
  "data": {
   "symbols_in_volume": [
    "falcon.util.http_now"
   ]
  },
  "type": "module"
 },
 "falcon.testing.helpers.DEFAULT_HOST": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "falcon.testing.helpers._add_headers_to_environ": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "falcon.testing.helpers.cgi": {
  "data": {
   "shadows": "cgi"
  },
  "type": "import"
 },
 "falcon.testing.helpers.closed_wsgi_iterable": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "StopIteration",
    "falcon.testing.helpers.itertools",
    "next",
    "wrapper"
   ]
  },
  "type": "function"
 },
 "falcon.testing.helpers.closed_wsgi_iterable.wrapper": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "falcon.testing.helpers.compat": {
  "data": {
   "shadows": "falcon.util.compat"
  },
  "type": "import"
 },
 "falcon.testing.helpers.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "falcon.testing.helpers.create_environ": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ValueError",
    "falcon.testing.helpers.DEFAULT_HOST",
    "falcon.testing.helpers._add_headers_to_environ",
    "falcon.testing.helpers.io",
    "falcon.testing.helpers.sys",
    "falcon.util.compat.PY2",
    "falcon.util.compat.PY3",
    "falcon.util.compat.text_type",
    "falcon.util.uri.decode",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "falcon.testing.helpers.get_encoding_from_headers": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "falcon.testing.helpers.cgi"
   ]
  },
  "type": "function"
 },
 "falcon.testing.helpers.http_now": {
  "data": {
   "shadows": "falcon.util.http_now"
  },
  "type": "import"
 },
 "falcon.testing.helpers.httpnow": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "falcon.testing.helpers.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "falcon.testing.helpers.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "falcon.testing.helpers.rand_string": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "chr",
    "falcon.testing.helpers.random",
    "int_gen",
    "max",
    "min",
    "ord",
    "range"
   ]
  },
  "type": "function"
 },
 "falcon.testing.helpers.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "falcon.testing.helpers.redirected": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "falcon.testing.helpers.contextlib",
    "falcon.testing.helpers.sys"
   ]
  },
  "type": "function"
 },
 "falcon.testing.helpers.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "falcon.testing.helpers.uri": {
  "data": {
   "shadows": "falcon.util.uri"
  },
  "type": "import"
 },
 "falcon.testing.resource": {
  "data": {},
  "type": "module"
 },
 "falcon.testing.resource.SimpleTestResource": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.testing.resource.SimpleTestResource.__init__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ValueError",
    "json.dumps"
   ]
  },
  "type": "function"
 },
 "falcon.testing.resource.SimpleTestResource.called": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.testing.resource.SimpleTestResource.on_get": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "falcon.testing.resource.capture_responder_args",
    "falcon.testing.resource.falcon",
    "falcon.testing.resource.set_resp_defaults"
   ]
  },
  "type": "function"
 },
 "falcon.testing.resource.SimpleTestResource.on_post": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "falcon.testing.resource.capture_responder_args",
    "falcon.testing.resource.falcon",
    "falcon.testing.resource.set_resp_defaults"
   ]
  },
  "type": "function"
 },
 "falcon.testing.resource.capture_responder_args": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "falcon.testing.resource.falcon": {
  "data": {
   "shadows": "falcon"
  },
  "type": "import"
 },
 "falcon.testing.resource.json_dumps": {
  "data": {
   "shadows": "json.dumps"
  },
  "type": "import"
 },
 "falcon.testing.resource.set_resp_defaults": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "falcon.testing.set_resp_defaults": {
  "data": {
   "shadows": "falcon.testing.resource.set_resp_defaults"
  },
  "type": "import"
 },
 "falcon.testing.srmock": {
  "data": {},
  "type": "module"
 },
 "falcon.testing.srmock.StartResponseMock": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.testing.srmock.StartResponseMock.__call__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "falcon.util.CaseInsensitiveDict"
   ]
  },
  "type": "function"
 },
 "falcon.testing.srmock.StartResponseMock.__init__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "falcon.testing.srmock.StartResponseMock.call_count": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "falcon.testing.srmock.util": {
  "data": {
   "shadows": "falcon.util"
  },
  "type": "import"
 },
 "falcon.testing.test_case": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "falcon.testing.test_case.Result": {
  "data": {
   "shadows": "falcon.testing.client.Result"
  },
  "type": "import"
 },
 "falcon.testing.test_case.TestCase": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "falcon.testing.client.TestClient",
    "hasattr",
    "testtools.TestCase"
   ]
  },
  "type": "class"
 },
 "falcon.testing.test_case.TestCase.assertIn": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "falcon.testing.test_case.TestCase.setUp": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "falcon.testing.client.TestClient.__init__",
    "falcon.testing.test_case.TestCase",
    "falcon.testing.test_case.falcon",
    "super"
   ]
  },
  "type": "function"
 },
 "falcon.testing.test_case.TestClient": {
  "data": {
   "shadows": "falcon.testing.client.TestClient"
  },
  "type": "import"
 },
 "falcon.testing.test_case.falcon": {
  "data": {
   "shadows": "falcon"
  },
  "type": "import"
 },
 "falcon.testing.test_case.falcon.request": {
  "data": {
   "shadows": "falcon.request"
  },
  "type": "import"
 },
 "falcon.testing.test_case.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "falcon.uri": {
  "data": {},
  "type": "module"
 },
 "falcon.util": {
  "data": {},
  "type": "module"
 },
 "falcon.util.compat": {
  "data": {
   "symbols_in_volume": [
    "falcon.util.compat.PY3",
    "falcon.util.compat.sys",
    "falcon.util.compat.types",
    "operator.attrgetter",
    "str",
    "type"
   ]
  },
  "type": "module"
 },
 "falcon.util.compat.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "falcon.util.compat.MutableMapping": {
  "data": {
   "shadows": "collections.MutableMapping"
  },
  "type": "import"
 },
 "falcon.util.compat.PY2": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "falcon.util.compat.PY3": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "falcon.util.compat.StringIO": {
  "data": {
   "shadows": "StringIO.StringIO"
  },
  "type": "import"
 },
 "falcon.util.compat.UserDict": {
  "data": {
   "shadows": "UserDict.UserDict"
  },
  "type": "import"
 },
 "falcon.util.compat.add_metaclass": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "falcon.util.compat.add_metaclass.wrapper": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "metaclass",
    "str"
   ]
  },
  "type": "function"
 },
 "falcon.util.compat.class_types": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "falcon.util.compat.get_method_self": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "falcon.util.compat.http_cookies": {
  "data": {
   "shadows": "Cookie"
  },
  "type": "import"
 },
 "falcon.util.compat.op": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "falcon.util.compat.quote": {
  "data": {
   "shadows": "urllib.quote"
  },
  "type": "import"
 },
 "falcon.util.compat.string_types": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "falcon.util.compat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "falcon.util.compat.text_type": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "falcon.util.compat.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "falcon.util.compat.unquote_plus": {
  "data": {
   "shadows": "urllib.unquote_plus"
  },
  "type": "import"
 },
 "falcon.util.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "falcon.util.misc": {
  "data": {
   "symbols_in_volume": [
    "falcon.util.misc.datetime"
   ]
  },
  "type": "module"
 },
 "falcon.util.misc.DeprecatedWarning": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "falcon.util.misc.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "falcon.util.misc._get_argspec": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "falcon.util.misc.inspect",
    "func",
    "func.func_code",
    "func.func_defaults",
    "func.im_func"
   ]
  },
  "type": "function"
 },
 "falcon.util.misc._get_func_if_nested": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "callable",
    "callable.__call__",
    "callable.func",
    "falcon.util.misc.functools",
    "falcon.util.misc.inspect",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "falcon.util.misc.compat": {
  "data": {
   "shadows": "falcon.util.compat"
  },
  "type": "import"
 },
 "falcon.util.misc.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "falcon.util.misc.deprecated": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "falcon.util.misc.deprecated.decorator": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "falcon.util.misc.deprecated.decorator.wrapper": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "falcon.util.misc.DeprecatedWarning",
    "falcon.util.misc.functools",
    "falcon.util.misc.inspect",
    "falcon.util.misc.warnings",
    "func"
   ]
  },
  "type": "function"
 },
 "falcon.util.misc.dt_to_http": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "falcon.util.misc.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "falcon.util.misc.get_argnames": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "falcon.util.compat.PY2",
    "falcon.util.misc._get_argspec",
    "falcon.util.misc._get_func_if_nested",
    "falcon.util.misc.inspect",
    "func"
   ]
  },
  "type": "function"
 },
 "falcon.util.misc.get_bound_method": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "AttributeError",
    "falcon.util.compat.get_method_self",
    "getattr"
   ]
  },
  "type": "function"
 },
 "falcon.util.misc.get_http_status": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "falcon.status_codes",
    "float",
    "getattr",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "falcon.util.misc.http_date_to_dt": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ValueError",
    "falcon.util.misc.strptime"
   ]
  },
  "type": "function"
 },
 "falcon.util.misc.http_now": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "falcon.util.misc.dt_to_http",
    "falcon.util.misc.utcnow"
   ]
  },
  "type": "function"
 },
 "falcon.util.misc.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "falcon.util.misc.status_codes": {
  "data": {
   "shadows": "falcon.status_codes"
  },
  "type": "import"
 },
 "falcon.util.misc.strptime": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "falcon.util.misc.to_query_str": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "falcon.util.misc.utcnow": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "falcon.util.misc.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "falcon.util.structures": {
  "data": {},
  "type": "module"
 },
 "falcon.util.structures.CaseInsensitiveDict": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "falcon.util.compat.MutableMapping"
   ]
  },
  "type": "class"
 },
 "falcon.util.structures.CaseInsensitiveDict.__delitem__": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "falcon.util.structures.CaseInsensitiveDict.__eq__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "NotImplemented",
    "dict",
    "falcon.util.compat.Mapping",
    "falcon.util.structures.CaseInsensitiveDict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "falcon.util.structures.CaseInsensitiveDict.__getitem__": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "falcon.util.structures.CaseInsensitiveDict.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "falcon.util.structures.CaseInsensitiveDict.__iter__": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "falcon.util.structures.CaseInsensitiveDict.__len__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "falcon.util.structures.CaseInsensitiveDict.__repr__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "falcon.util.structures.CaseInsensitiveDict.__setitem__": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "falcon.util.structures.CaseInsensitiveDict.copy": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "falcon.util.structures.CaseInsensitiveDict"
   ]
  },
  "type": "function"
 },
 "falcon.util.structures.CaseInsensitiveDict.lower_items": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "falcon.util.structures.Context": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "falcon.util.structures.Context.__contains__": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "falcon.util.structures.Context.__delitem__": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "falcon.util.structures.Context.__eq__": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "falcon.util.structures.Context.__getitem__": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "falcon.util.structures.Context.__hash__": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "falcon.util.structures.Context.__iter__": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "falcon.util.structures.Context.__len__": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "falcon.util.structures.Context.__ne__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "falcon.util.structures.Context.__repr__": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "falcon.util.structures.Context.__setitem__": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "falcon.util.structures.Context.__str__": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "falcon.util.structures.Context.clear": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "falcon.util.structures.Context.copy": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "falcon.util.structures.Context.get": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "falcon.util.structures.Context.has_key": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "falcon.util.structures.Context.items": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "falcon.util.structures.Context.iteritems": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "falcon.util.structures.Context.iterkeys": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "falcon.util.structures.Context.itervalues": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "falcon.util.structures.Context.keys": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "falcon.util.structures.Context.pop": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "falcon.util.structures.Context.popitem": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "falcon.util.structures.Context.setdefault": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "falcon.util.structures.Context.update": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "falcon.util.structures.Context.values": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "falcon.util.structures.Context.viewitems": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "falcon.util.structures.Context.viewkeys": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "falcon.util.structures.Context.viewvalues": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "falcon.util.structures.ETag": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "class"
 },
 "falcon.util.structures.ETag.dumps": {
  "data": {
   "lineno": 295
  },
  "type": "function"
 },
 "falcon.util.structures.ETag.loads": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "falcon.util.structures.ETag.strong_compare": {
  "data": {
   "lineno": 276
  },
  "type": "function"
 },
 "falcon.util.structures.Mapping": {
  "data": {
   "shadows": "falcon.util.compat.Mapping"
  },
  "type": "import"
 },
 "falcon.util.structures.MutableMapping": {
  "data": {
   "shadows": "falcon.util.compat.MutableMapping"
  },
  "type": "import"
 },
 "falcon.util.time": {
  "data": {},
  "type": "module"
 },
 "falcon.util.time.TimezoneGMT": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "falcon.util.time.datetime"
   ]
  },
  "type": "class"
 },
 "falcon.util.time.TimezoneGMT.dst": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "falcon.util.time.TimezoneGMT.tzname": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "falcon.util.time.TimezoneGMT.utcoffset": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "falcon.util.time.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "falcon.util.uri": {
  "data": {
   "symbols_in_volume": [
    "bytes",
    "chr",
    "dict",
    "falcon.util.compat.PY2",
    "falcon.util.uri._DELIMITERS",
    "falcon.util.uri._HEX_DIGITS",
    "falcon.util.uri._UNRESERVED",
    "falcon.util.uri._create_str_encoder",
    "falcon.util.uri.encode",
    "falcon.util.uri.encode_value",
    "int"
   ]
  },
  "type": "module"
 },
 "falcon.util.uri._ALL_ALLOWED": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "falcon.util.uri._DELIMITERS": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "falcon.util.uri._HEX_DIGITS": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "falcon.util.uri._HEX_TO_BYTE": {
  "data": {
   "lineno": 241
  },
  "type": "constant"
 },
 "falcon.util.uri._UNRESERVED": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "falcon.util.uri._create_char_encoder": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "chr",
    "falcon.util.compat.PY2",
    "range"
   ]
  },
  "type": "function"
 },
 "falcon.util.uri._create_str_encoder": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "falcon.util.uri._ALL_ALLOWED",
    "falcon.util.uri._UNRESERVED",
    "falcon.util.uri._create_char_encoder"
   ]
  },
  "type": "function"
 },
 "falcon.util.uri._create_str_encoder.encoder": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "falcon.util.compat.text_type",
    "falcon.util.uri._HEX_DIGITS",
    "isinstance",
    "len",
    "map"
   ]
  },
  "type": "function"
 },
 "falcon.util.uri.compat": {
  "data": {
   "shadows": "falcon.util.compat"
  },
  "type": "import"
 },
 "falcon.util.uri.decode": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "KeyError",
    "falcon.util.uri._HEX_TO_BYTE"
   ]
  },
  "type": "function"
 },
 "falcon.util.uri.encode": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "falcon.util.uri.encode_value": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "falcon.util.uri.parse_host": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "falcon.util.uri.parse_query_string": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "falcon.util.uri.decode",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "falcon.util.uri.unquote_string": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "falcon.vendor": {
  "data": {},
  "type": "module"
 },
 "falcon.vendor.mimeparse": {
  "data": {},
  "type": "module"
 },
 "falcon.vendor.mimeparse.mimeparse": {
  "data": {},
  "type": "module"
 },
 "falcon.vendor.mimeparse.mimeparse.MimeTypeParseException": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "falcon.vendor.mimeparse.mimeparse.__author__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "falcon.vendor.mimeparse.mimeparse.__credits__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "falcon.vendor.mimeparse.mimeparse.__email__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "falcon.vendor.mimeparse.mimeparse.__license__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "falcon.vendor.mimeparse.mimeparse.__version__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "falcon.vendor.mimeparse.mimeparse._filter_blank": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "falcon.vendor.mimeparse.mimeparse.best_match": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "falcon.vendor.mimeparse.mimeparse._filter_blank",
    "falcon.vendor.mimeparse.mimeparse.parse_media_range",
    "falcon.vendor.mimeparse.mimeparse.quality_and_fitness_parsed"
   ]
  },
  "type": "function"
 },
 "falcon.vendor.mimeparse.mimeparse.cgi": {
  "data": {
   "shadows": "cgi"
  },
  "type": "import"
 },
 "falcon.vendor.mimeparse.mimeparse.parse_media_range": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "falcon.vendor.mimeparse.mimeparse.parse_mime_type",
    "float",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "falcon.vendor.mimeparse.mimeparse.parse_mime_type": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "falcon.vendor.mimeparse.mimeparse.MimeTypeParseException",
    "falcon.vendor.mimeparse.mimeparse.cgi",
    "len",
    "type",
    "type.strip"
   ]
  },
  "type": "function"
 },
 "falcon.vendor.mimeparse.mimeparse.quality": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "falcon.vendor.mimeparse.mimeparse.parse_media_range",
    "falcon.vendor.mimeparse.mimeparse.quality_parsed"
   ]
  },
  "type": "function"
 },
 "falcon.vendor.mimeparse.mimeparse.quality_and_fitness_parsed": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "falcon.vendor.mimeparse.mimeparse.parse_media_range",
    "float",
    "sum",
    "type"
   ]
  },
  "type": "function"
 },
 "falcon.vendor.mimeparse.mimeparse.quality_parsed": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "falcon.vendor.mimeparse.mimeparse.quality_and_fitness_parsed"
   ]
  },
  "type": "function"
 },
 "falcon.version": {
  "data": {},
  "type": "module"
 },
 "falcon.version.__version__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 }
}