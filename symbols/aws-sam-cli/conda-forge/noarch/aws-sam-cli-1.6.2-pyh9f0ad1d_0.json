{
 "samcli": {
  "data": {},
  "type": "module"
 },
 "samcli.__main__": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.cli.main.cli"
   ]
  },
  "type": "module"
 },
 "samcli.__main__.cli": {
  "data": {
   "shadows": "samcli.cli.main.cli"
  },
  "type": "import"
 },
 "samcli.__version__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "samcli.cli": {
  "data": {},
  "type": "module"
 },
 "samcli.cli.cli_config_file": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.cli.cli_config_file.logging"
   ]
  },
  "type": "module"
 },
 "samcli.cli.cli_config_file.ConfigException": {
  "data": {
   "shadows": "samcli.commands.exceptions.ConfigException"
  },
  "type": "import"
 },
 "samcli.cli.cli_config_file.DEFAULT_CONFIG_FILE_NAME": {
  "data": {
   "shadows": "samcli.lib.config.samconfig.DEFAULT_CONFIG_FILE_NAME"
  },
  "type": "import"
 },
 "samcli.cli.cli_config_file.DEFAULT_ENV": {
  "data": {
   "shadows": "samcli.lib.config.samconfig.DEFAULT_ENV"
  },
  "type": "import"
 },
 "samcli.cli.cli_config_file.LOG": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "samcli.cli.cli_config_file.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "samcli.cli.cli_config_file.SamConfig": {
  "data": {
   "shadows": "samcli.lib.config.samconfig.SamConfig"
  },
  "type": "import"
 },
 "samcli.cli.cli_config_file.SamConfigVersionException": {
  "data": {
   "shadows": "samcli.lib.config.exceptions.SamConfigVersionException"
  },
  "type": "import"
 },
 "samcli.cli.cli_config_file.TomlProvider": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "samcli.cli.cli_config_file.TomlProvider.__call__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "pathlib.Path",
    "samcli.cli.cli_config_file.LOG",
    "samcli.cli.cli_config_file.logging",
    "samcli.cli.cli_config_file.os",
    "samcli.commands.exceptions.ConfigException",
    "samcli.lib.config.exceptions.SamConfigVersionException",
    "samcli.lib.config.samconfig.DEFAULT_CONFIG_FILE_NAME",
    "samcli.lib.config.samconfig.SamConfig",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.cli.cli_config_file.TomlProvider.__init__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "samcli.cli.cli_config_file.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "samcli.cli.cli_config_file.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.cli.cli_config_file.configuration_callback": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "get_ctx_defaults",
    "getattr",
    "samcli.cli.cli_config_file.os",
    "samcli.lib.config.samconfig.DEFAULT_CONFIG_FILE_NAME",
    "samcli.lib.config.samconfig.DEFAULT_ENV",
    "saved_callback"
   ]
  },
  "type": "function"
 },
 "samcli.cli.cli_config_file.configuration_option": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "composed_decorator"
   ]
  },
  "type": "function"
 },
 "samcli.cli.cli_config_file.configuration_option.composed_decorator": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "samcli.cli.cli_config_file.configuration_option.composed_decorator.decorator": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "deco"
   ]
  },
  "type": "function"
 },
 "samcli.cli.cli_config_file.configuration_option.decorator_configuration_setup": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "provider",
    "samcli.cli.cli_config_file.click",
    "samcli.cli.cli_config_file.configuration_callback",
    "samcli.cli.cli_config_file.functools",
    "saved_callback"
   ]
  },
  "type": "function"
 },
 "samcli.cli.cli_config_file.decorator_customize_config_env": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "samcli.cli.cli_config_file.click"
   ]
  },
  "type": "function"
 },
 "samcli.cli.cli_config_file.decorator_customize_config_file": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "samcli.cli.cli_config_file.click"
   ]
  },
  "type": "function"
 },
 "samcli.cli.cli_config_file.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "samcli.cli.cli_config_file.get_cmd_names": {
  "data": {
   "shadows": "samcli.cli.context.get_cmd_names"
  },
  "type": "import"
 },
 "samcli.cli.cli_config_file.get_ctx_defaults": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "provider",
    "samcli.cli.context.get_cmd_names"
   ]
  },
  "type": "function"
 },
 "samcli.cli.cli_config_file.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.cli.cli_config_file.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.cli.command": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.cli.command.logging"
   ]
  },
  "type": "module"
 },
 "samcli.cli.command.BaseCommand": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "samcli.cli.command.click"
   ]
  },
  "type": "class"
 },
 "samcli.cli.command.BaseCommand.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "samcli.cli.command.BaseCommand",
    "samcli.cli.command._SAM_CLI_COMMAND_PACKAGES",
    "super"
   ]
  },
  "type": "function"
 },
 "samcli.cli.command.BaseCommand._set_commands": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.cli.command.BaseCommand.get_command": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ImportError",
    "hasattr",
    "samcli.cli.command.importlib",
    "samcli.cli.command.logger"
   ]
  },
  "type": "function"
 },
 "samcli.cli.command.BaseCommand.list_commands": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "samcli.cli.command.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "samcli.cli.command._SAM_CLI_COMMAND_PACKAGES": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "samcli.cli.command.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.cli.command.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "samcli.cli.command.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "samcli.cli.command.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.cli.context": {
  "data": {},
  "type": "module"
 },
 "samcli.cli.context.Context": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "samcli.cli.context.Context.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "samcli.cli.context.uuid",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.cli.context.Context._refresh_session": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "botocore.credentials.JSONFileCache",
    "samcli.cli.context.boto3",
    "samcli.cli.context.botocore",
    "samcli.commands.exceptions.CredentialsError",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.cli.context.Context.command_path": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "property",
    "samcli.cli.context.click"
   ]
  },
  "type": "function"
 },
 "samcli.cli.context.Context.debug": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "samcli.cli.context.logging"
   ]
  },
  "type": "function"
 },
 "samcli.cli.context.Context.get_current_context": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "samcli.cli.context.Context",
    "samcli.cli.context.click",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.cli.context.Context.profile": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "samcli.cli.context.Context.region": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "samcli.cli.context.Context.session_id": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.cli.context.Context.template_dict": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "property",
    "samcli.cli.context.click"
   ]
  },
  "type": "function"
 },
 "samcli.cli.context.CredentialsError": {
  "data": {
   "shadows": "samcli.commands.exceptions.CredentialsError"
  },
  "type": "import"
 },
 "samcli.cli.context.boto3": {
  "data": {
   "shadows": "boto3"
  },
  "type": "import"
 },
 "samcli.cli.context.botocore": {
  "data": {
   "shadows": "botocore"
  },
  "type": "import"
 },
 "samcli.cli.context.botocore.session": {
  "data": {
   "shadows": "botocore.session"
  },
  "type": "import"
 },
 "samcli.cli.context.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.cli.context.credentials": {
  "data": {
   "shadows": "botocore.credentials"
  },
  "type": "import"
 },
 "samcli.cli.context.get_cmd_names": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "samcli.cli.context.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.cli.context.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "samcli.cli.global_config": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.cli.global_config.logging"
   ]
  },
  "type": "module"
 },
 "samcli.cli.global_config.CONFIG_FILENAME": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "samcli.cli.global_config.GlobalConfig": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "samcli.cli.global_config.GlobalConfig.__init__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "samcli.cli.global_config.GlobalConfig._create_dir": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "samcli.cli.global_config.GlobalConfig._get_config_file_path": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "samcli.cli.global_config.GlobalConfig._get_or_set_uuid": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "samcli.cli.global_config.uuid",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.cli.global_config.GlobalConfig._get_value": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "open",
    "samcli.cli.global_config.CONFIG_FILENAME",
    "samcli.cli.global_config.json",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.cli.global_config.GlobalConfig._set_json_cfg": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "IOError",
    "open",
    "samcli.cli.global_config.LOG",
    "samcli.cli.global_config.json",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.cli.global_config.GlobalConfig._set_value": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "ValueError",
    "open",
    "samcli.cli.global_config.CONFIG_FILENAME",
    "samcli.cli.global_config.LOG",
    "samcli.cli.global_config.json",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.cli.global_config.GlobalConfig.config_dir": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "pathlib.Path",
    "property",
    "samcli.cli.global_config.click",
    "samcli.cli.global_config.os"
   ]
  },
  "type": "function"
 },
 "samcli.cli.global_config.GlobalConfig.installation_id": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "IOError",
    "OSError",
    "ValueError",
    "property",
    "samcli.cli.global_config.INSTALLATION_ID_KEY"
   ]
  },
  "type": "function"
 },
 "samcli.cli.global_config.GlobalConfig.telemetry_enabled": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "samcli.cli.global_config.INSTALLATION_ID_KEY": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "samcli.cli.global_config.LOG": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "samcli.cli.global_config.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "samcli.cli.global_config.TELEMETRY_ENABLED_KEY": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "samcli.cli.global_config.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.cli.global_config.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "samcli.cli.global_config.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.cli.global_config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.cli.global_config.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "samcli.cli.main": {
  "data": {
   "symbols_in_volume": [
    "GlobalConfig",
    "__name__",
    "samcli.cli.main.click",
    "samcli.cli.main.logging"
   ]
  },
  "type": "module"
 },
 "samcli.cli.main.LOG": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "samcli.cli.main.SamCliLogger": {
  "data": {
   "shadows": "samcli.lib.utils.sam_logging.SamCliLogger"
  },
  "type": "import"
 },
 "samcli.cli.main.TELEMETRY_PROMPT": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "samcli.cli.main.__version__": {
  "data": {
   "shadows": "samcli.__version__"
  },
  "type": "import"
 },
 "samcli.cli.main.aws_creds_options": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "profile_option",
    "region_option"
   ]
  },
  "type": "function"
 },
 "samcli.cli.main.cli": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "samcli.__version__",
    "samcli.cli.main.LOG",
    "samcli.cli.main.TELEMETRY_PROMPT",
    "samcli.cli.main.click",
    "samcli.cli.main.common_options",
    "samcli.cli.main.global_cfg",
    "samcli.cli.main.logging",
    "samcli.cli.main.pass_context",
    "samcli.cli.main.print_info",
    "samcli.lib.telemetry.metrics.send_installed_metric",
    "samcli.lib.utils.sam_logging.SamCliLogger.configure_logger",
    "samcli.lib.utils.sam_logging.SamCliLogger.configure_null_logger"
   ]
  },
  "type": "function"
 },
 "samcli.cli.main.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.cli.main.common_options": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "debug_option"
   ]
  },
  "type": "function"
 },
 "samcli.cli.main.global_cfg": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "samcli.cli.main.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "samcli.cli.main.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.cli.main.pass_context": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "samcli.cli.main.print_info": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "samcli.__version__",
    "samcli.cli.main.click",
    "samcli.cli.main.json"
   ]
  },
  "type": "function"
 },
 "samcli.cli.main.send_installed_metric": {
  "data": {
   "shadows": "samcli.lib.telemetry.metrics.send_installed_metric"
  },
  "type": "import"
 },
 "samcli.cli.options": {
  "data": {},
  "type": "module"
 },
 "samcli.cli.options.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.cli.options.debug_option": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "samcli.cli.options.click"
   ]
  },
  "type": "function"
 },
 "samcli.cli.options.debug_option.callback": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "samcli.cli.options.profile_option": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "samcli.cli.options.click"
   ]
  },
  "type": "function"
 },
 "samcli.cli.options.profile_option.callback": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "samcli.cli.options.region_option": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "samcli.cli.options.click"
   ]
  },
  "type": "function"
 },
 "samcli.cli.options.region_option.callback": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "samcli.cli.types": {
  "data": {},
  "type": "module"
 },
 "samcli.cli.types.CfnMetadataType": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "samcli.cli.types.PARAM_AND_METADATA_KEY_REGEX",
    "samcli.cli.types._generate_match_regex",
    "samcli.cli.types.click"
   ]
  },
  "type": "class"
 },
 "samcli.cli.types.CfnMetadataType.convert": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "json.JSONDecodeError",
    "list",
    "samcli.cli.types.json",
    "samcli.cli.types.re"
   ]
  },
  "type": "function"
 },
 "samcli.cli.types.CfnParameterOverridesType": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "samcli.cli.types.PARAM_AND_METADATA_KEY_REGEX",
    "samcli.cli.types._generate_match_regex",
    "samcli.cli.types.click"
   ]
  },
  "type": "class"
 },
 "samcli.cli.types.CfnParameterOverridesType.convert": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "StopIteration",
    "filter",
    "isinstance",
    "next",
    "samcli.cli.types._unquote_wrapped_quotes",
    "samcli.cli.types.re",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.cli.types.CfnTags": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "samcli.cli.types._generate_match_regex",
    "samcli.cli.types.click"
   ]
  },
  "type": "class"
 },
 "samcli.cli.types.CfnTags._space_separated_key_value_parser": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "samcli.cli.types.CfnTags",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.cli.types.CfnTags._standard_key_value_parser": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.cli.types.CfnTags.convert": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "isinstance",
    "samcli.cli.types._unquote_wrapped_quotes",
    "samcli.cli.types.re",
    "tuple"
   ]
  },
  "type": "function"
 },
 "samcli.cli.types.JSONDecodeError": {
  "data": {
   "shadows": "json.JSONDecodeError"
  },
  "type": "import"
 },
 "samcli.cli.types.PARAM_AND_METADATA_KEY_REGEX": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "samcli.cli.types._generate_match_regex": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "samcli.cli.types._unquote_wrapped_quotes": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "samcli.cli.types.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.cli.types.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "samcli.cli.types.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "samcli.commands": {
  "data": {},
  "type": "module"
 },
 "samcli.commands._utils": {
  "data": {},
  "type": "module"
 },
 "samcli.commands._utils.custom_options": {
  "data": {},
  "type": "module"
 },
 "samcli.commands._utils.custom_options.option_nargs": {
  "data": {},
  "type": "module"
 },
 "samcli.commands._utils.custom_options.option_nargs.OptionNargs": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "samcli.commands._utils.custom_options.option_nargs.click"
   ]
  },
  "type": "class"
 },
 "samcli.commands._utils.custom_options.option_nargs.OptionNargs.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "samcli.commands._utils.custom_options.option_nargs.OptionNargs",
    "super"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.custom_options.option_nargs.OptionNargs.add_to_parser": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "getattr",
    "samcli.commands._utils.custom_options.option_nargs.OptionNargs",
    "super"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.custom_options.option_nargs.OptionNargs.add_to_parser.parser_process": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.custom_options.option_nargs.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.commands._utils.options": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.commands._utils.options._space_separated_list_func_type",
    "samcli.commands._utils.options.logging"
   ]
  },
  "type": "module"
 },
 "samcli.commands._utils.options.CfnMetadataType": {
  "data": {
   "shadows": "samcli.cli.types.CfnMetadataType"
  },
  "type": "import"
 },
 "samcli.commands._utils.options.CfnParameterOverridesType": {
  "data": {
   "shadows": "samcli.cli.types.CfnParameterOverridesType"
  },
  "type": "import"
 },
 "samcli.commands._utils.options.CfnTags": {
  "data": {
   "shadows": "samcli.cli.types.CfnTags"
  },
  "type": "import"
 },
 "samcli.commands._utils.options.DEFAULT_STACK_NAME": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "samcli.commands._utils.options.FuncParamType": {
  "data": {
   "shadows": "click.types.FuncParamType"
  },
  "type": "import"
 },
 "samcli.commands._utils.options.LOG": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "samcli.commands._utils.options.OptionNargs": {
  "data": {
   "shadows": "samcli.commands._utils.custom_options.option_nargs.OptionNargs"
  },
  "type": "import"
 },
 "samcli.commands._utils.options.TemplateNotFoundException": {
  "data": {
   "shadows": "samcli.commands._utils.template.TemplateNotFoundException"
  },
  "type": "import"
 },
 "samcli.commands._utils.options._TEMPLATE_OPTION_DEFAULT_VALUE": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "samcli.commands._utils.options._space_separated_list_func_type": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.options.capabilities_click_option": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "click.types.FuncParamType",
    "samcli.commands._utils.custom_options.option_nargs.OptionNargs",
    "samcli.commands._utils.options.click"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.options.capabilities_override_option": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "samcli.commands._utils.options.capabilities_click_option"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.options.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.commands._utils.options.docker_click_options": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "samcli.commands._utils.options.click"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.options.docker_common_options": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "docker_click_options",
    "option",
    "reversed"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.options.get_or_default_template_file_name": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "samcli.commands._utils.options.LOG",
    "samcli.commands._utils.options._TEMPLATE_OPTION_DEFAULT_VALUE",
    "samcli.commands._utils.options.os",
    "samcli.commands._utils.template.TemplateNotFoundException",
    "samcli.commands._utils.template.get_template_data",
    "setattr"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.options.get_template_data": {
  "data": {
   "shadows": "samcli.commands._utils.template.get_template_data"
  },
  "type": "import"
 },
 "samcli.commands._utils.options.guided_deploy_stack_name": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "samcli.commands._utils.options.DEFAULT_STACK_NAME",
    "samcli.commands._utils.options.click"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.options.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.commands._utils.options.metadata_click_option": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "samcli.cli.types.CfnMetadataType",
    "samcli.commands._utils.options.click"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.options.metadata_override_option": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "samcli.commands._utils.options.metadata_click_option"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.options.no_progressbar_click_option": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "samcli.commands._utils.options.click"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.options.no_progressbar_option": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "samcli.commands._utils.options.no_progressbar_click_option"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.options.notification_arns_click_option": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "click.types.FuncParamType",
    "samcli.commands._utils.custom_options.option_nargs.OptionNargs",
    "samcli.commands._utils.options.click"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.options.notification_arns_override_option": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "samcli.commands._utils.options.notification_arns_click_option"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.options.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.commands._utils.options.parameter_override_click_option": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "samcli.cli.types.CfnParameterOverridesType",
    "samcli.commands._utils.custom_options.option_nargs.OptionNargs",
    "samcli.commands._utils.options.click"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.options.parameter_override_option": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "samcli.commands._utils.options.parameter_override_click_option"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.options.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "samcli.commands._utils.options.tags_click_option": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "samcli.cli.types.CfnTags",
    "samcli.commands._utils.custom_options.option_nargs.OptionNargs",
    "samcli.commands._utils.options.click"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.options.tags_override_option": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "samcli.commands._utils.options.tags_click_option"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.options.template_click_option": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "functools.partial",
    "samcli.commands._utils.options._TEMPLATE_OPTION_DEFAULT_VALUE",
    "samcli.commands._utils.options.click",
    "samcli.commands._utils.options.get_or_default_template_file_name"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.options.template_common_option": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "template_click_option"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.options.template_option_without_build": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "template_click_option"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.resources": {
  "data": {
   "symbols_in_volume": [
    "samcli.commands._utils.resources.AWS_APIGATEWAY_RESTAPI",
    "samcli.commands._utils.resources.AWS_APPSYNC_FUNCTIONCONFIGURATION",
    "samcli.commands._utils.resources.AWS_APPSYNC_GRAPHQLSCHEMA",
    "samcli.commands._utils.resources.AWS_APPSYNC_RESOLVER",
    "samcli.commands._utils.resources.AWS_CLOUDFORMATION_STACK",
    "samcli.commands._utils.resources.AWS_ELASTICBEANSTALK_APPLICATIONVERSION",
    "samcli.commands._utils.resources.AWS_GLUE_JOB",
    "samcli.commands._utils.resources.AWS_LAMBDA_FUNCTION",
    "samcli.commands._utils.resources.AWS_LAMBDA_LAYERVERSION",
    "samcli.commands._utils.resources.AWS_SERVERLESSREPO_APPLICATION",
    "samcli.commands._utils.resources.AWS_SERVERLESS_API",
    "samcli.commands._utils.resources.AWS_SERVERLESS_APPLICATION",
    "samcli.commands._utils.resources.AWS_SERVERLESS_FUNCTION",
    "samcli.commands._utils.resources.AWS_SERVERLESS_HTTPAPI",
    "samcli.commands._utils.resources.AWS_SERVERLESS_LAYERVERSION",
    "samcli.commands._utils.resources.AWS_SERVERLESS_STATEMACHINE",
    "samcli.commands._utils.resources.AWS_STEPFUNCTIONS_STATEMACHINE"
   ]
  },
  "type": "module"
 },
 "samcli.commands._utils.resources.AWS_APIGATEWAY_RESTAPI": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "samcli.commands._utils.resources.AWS_APPSYNC_FUNCTIONCONFIGURATION": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "samcli.commands._utils.resources.AWS_APPSYNC_GRAPHQLSCHEMA": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "samcli.commands._utils.resources.AWS_APPSYNC_RESOLVER": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "samcli.commands._utils.resources.AWS_CLOUDFORMATION_STACK": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "samcli.commands._utils.resources.AWS_ELASTICBEANSTALK_APPLICATIONVERSION": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "samcli.commands._utils.resources.AWS_GLUE_JOB": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "samcli.commands._utils.resources.AWS_LAMBDA_FUNCTION": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "samcli.commands._utils.resources.AWS_LAMBDA_LAYERVERSION": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "samcli.commands._utils.resources.AWS_SERVERLESSREPO_APPLICATION": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "samcli.commands._utils.resources.AWS_SERVERLESS_API": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "samcli.commands._utils.resources.AWS_SERVERLESS_APPLICATION": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "samcli.commands._utils.resources.AWS_SERVERLESS_FUNCTION": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "samcli.commands._utils.resources.AWS_SERVERLESS_HTTPAPI": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "samcli.commands._utils.resources.AWS_SERVERLESS_LAYERVERSION": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "samcli.commands._utils.resources.AWS_SERVERLESS_STATEMACHINE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "samcli.commands._utils.resources.AWS_STEPFUNCTIONS_STATEMACHINE": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "samcli.commands._utils.resources.METADATA_WITH_LOCAL_PATHS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "samcli.commands._utils.resources.RESOURCES_WITH_LOCAL_PATHS": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "samcli.commands._utils.resources.resources_generator": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "dict",
    "samcli.commands._utils.resources.METADATA_WITH_LOCAL_PATHS",
    "samcli.commands._utils.resources.RESOURCES_WITH_LOCAL_PATHS"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.table_print": {
  "data": {},
  "type": "module"
 },
 "samcli.commands._utils.table_print.MIN_OFFSET": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "samcli.commands._utils.table_print.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.commands._utils.table_print.count": {
  "data": {
   "shadows": "itertools.count"
  },
  "type": "import"
 },
 "samcli.commands._utils.table_print.newline_per_item": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "len",
    "samcli.commands._utils.table_print.click"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.table_print.pprint_column_names": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "samcli.commands._utils.table_print.pprint_column_names.pprint_wrap": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "max",
    "range",
    "samcli.commands._utils.table_print.click"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.table_print.pprint_column_names.pprint_wrap.wrap": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "func",
    "functools.wraps",
    "samcli.commands._utils.table_print.click"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.table_print.pprint_columns": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "itertools.count",
    "itertools.zip_longest",
    "next",
    "samcli.commands._utils.table_print.click",
    "samcli.commands._utils.table_print.wrapped_text_generator"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.table_print.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "samcli.commands._utils.table_print.wrapped_text_generator": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "samcli.commands._utils.table_print.textwrap"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.table_print.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "samcli.commands._utils.table_print.zip_longest": {
  "data": {
   "shadows": "itertools.zip_longest"
  },
  "type": "import"
 },
 "samcli.commands._utils.template": {
  "data": {},
  "type": "module"
 },
 "samcli.commands._utils.template.METADATA_WITH_LOCAL_PATHS": {
  "data": {
   "shadows": "samcli.commands._utils.resources.METADATA_WITH_LOCAL_PATHS"
  },
  "type": "import"
 },
 "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS": {
  "data": {
   "shadows": "samcli.commands._utils.resources.RESOURCES_WITH_LOCAL_PATHS"
  },
  "type": "import"
 },
 "samcli.commands._utils.template.TemplateFailedParsingException": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands._utils.template.TemplateNotFoundException": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands._utils.template.UserException": {
  "data": {
   "shadows": "samcli.commands.exceptions.UserException"
  },
  "type": "import"
 },
 "samcli.commands._utils.template._resolve_relative_to": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "isinstance",
    "samcli.commands._utils.template.os",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.template._update_aws_include_relative_path": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "_resolve_relative_to",
    "dict",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.template._update_relative_paths": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "_resolve_relative_to",
    "_update_aws_include_relative_path",
    "botocore.utils.set_value_from_jmespath",
    "samcli.commands._utils.resources.METADATA_WITH_LOCAL_PATHS",
    "samcli.commands._utils.resources.RESOURCES_WITH_LOCAL_PATHS",
    "samcli.commands._utils.template.jmespath"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.template.get_template_data": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "open",
    "samcli.commands._utils.template.TemplateFailedParsingException",
    "samcli.commands._utils.template.TemplateNotFoundException",
    "samcli.commands._utils.template.pathlib",
    "samcli.commands._utils.template.yaml",
    "samcli.yamlhelper.yaml_parse",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.template.get_template_parameters": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "dict",
    "samcli.commands._utils.template.get_template_data"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.template.jmespath": {
  "data": {
   "shadows": "jmespath"
  },
  "type": "import"
 },
 "samcli.commands._utils.template.move_template": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "_update_relative_paths",
    "open",
    "samcli.commands._utils.template.os",
    "samcli.yamlhelper.yaml_dump"
   ]
  },
  "type": "function"
 },
 "samcli.commands._utils.template.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.commands._utils.template.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "samcli.commands._utils.template.set_value_from_jmespath": {
  "data": {
   "shadows": "botocore.utils.set_value_from_jmespath"
  },
  "type": "import"
 },
 "samcli.commands._utils.template.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "samcli.commands._utils.template.yaml_dump": {
  "data": {
   "shadows": "samcli.yamlhelper.yaml_dump"
  },
  "type": "import"
 },
 "samcli.commands._utils.template.yaml_parse": {
  "data": {
   "shadows": "samcli.yamlhelper.yaml_parse"
  },
  "type": "import"
 },
 "samcli.commands.bootstrap": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.bootstrap.command": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.bootstrap.command.HELP_TEXT": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "samcli.commands.bootstrap.command.SHORT_HELP": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "samcli.commands.bootstrap.command.aws_creds_options": {
  "data": {
   "shadows": "samcli.cli.main.aws_creds_options"
  },
  "type": "import"
 },
 "samcli.commands.bootstrap.command.bootstrap": {
  "data": {
   "shadows": "samcli.lib.bootstrap.bootstrap"
  },
  "type": "import"
 },
 "samcli.commands.bootstrap.command.cli": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "dict",
    "do_cli",
    "samcli.cli.main.aws_creds_options",
    "samcli.cli.main.common_options",
    "samcli.cli.main.pass_context",
    "samcli.commands.bootstrap.command.HELP_TEXT",
    "samcli.commands.bootstrap.command.SHORT_HELP",
    "samcli.commands.bootstrap.command.click",
    "samcli.lib.telemetry.metrics.track_command"
   ]
  },
  "type": "function"
 },
 "samcli.commands.bootstrap.command.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.commands.bootstrap.command.common_options": {
  "data": {
   "shadows": "samcli.cli.main.common_options"
  },
  "type": "import"
 },
 "samcli.commands.bootstrap.command.do_cli": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "samcli.commands.bootstrap.command.click",
    "samcli.lib.bootstrap.bootstrap.manage_stack"
   ]
  },
  "type": "function"
 },
 "samcli.commands.bootstrap.command.pass_context": {
  "data": {
   "shadows": "samcli.cli.main.pass_context"
  },
  "type": "import"
 },
 "samcli.commands.bootstrap.command.track_command": {
  "data": {
   "shadows": "samcli.lib.telemetry.metrics.track_command"
  },
  "type": "import"
 },
 "samcli.commands.bootstrap.exceptions": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.bootstrap.exceptions.ManagedStackError": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.bootstrap.exceptions.ManagedStackError.__init__": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "samcli.commands.bootstrap.exceptions.ManagedStackError",
    "super"
   ]
  },
  "type": "function"
 },
 "samcli.commands.bootstrap.exceptions.UserException": {
  "data": {
   "shadows": "samcli.commands.exceptions.UserException"
  },
  "type": "import"
 },
 "samcli.commands.build": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.build.build_context": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.commands.build.build_context.logging"
   ]
  },
  "type": "module"
 },
 "samcli.commands.build.build_context.BuildContext": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "samcli.commands.build.build_context.BuildContext.__enter__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "samcli.commands._utils.template.get_template_data",
    "samcli.commands.build.build_context.pathlib",
    "samcli.lib.providers.sam_function_provider.SamFunctionProvider",
    "samcli.lib.providers.sam_layer_provider.SamLayerProvider",
    "samcli.local.docker.manager.ContainerManager",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext.__exit__": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext.__init__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext._collect_single_buildable_layer": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "samcli.commands.build.build_context.LOG",
    "samcli.commands.build.exceptions.MissingBuildMethodException"
   ]
  },
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext._collect_single_function_and_dependent_layers": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext._setup_build_dir": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "samcli.commands.build.build_context.BuildContext",
    "samcli.commands.build.build_context.os",
    "samcli.commands.build.build_context.pathlib",
    "samcli.commands.build.build_context.shutil",
    "samcli.commands.build.exceptions.InvalidBuildDirException",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext.base_dir": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext.build_dir": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext.container_manager": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext.function_provider": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext.is_building_specific_resource": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext.layer_provider": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext.manifest_path_override": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "property",
    "samcli.commands.build.build_context.os"
   ]
  },
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext.mode": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext.original_template_path": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "property",
    "samcli.commands.build.build_context.os"
   ]
  },
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext.output_template_path": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "property",
    "samcli.commands.build.build_context.os"
   ]
  },
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext.resources_to_build": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "property",
    "samcli.commands.build.build_context.LOG",
    "samcli.lib.providers.provider.ResourcesToBuildCollector",
    "samcli.local.lambdafn.exceptions.ResourceNotFound"
   ]
  },
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext.template_dict": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext.use_container": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.commands.build.build_context.ContainerManager": {
  "data": {
   "shadows": "samcli.local.docker.manager.ContainerManager"
  },
  "type": "import"
 },
 "samcli.commands.build.build_context.InvalidBuildDirException": {
  "data": {
   "shadows": "samcli.commands.build.exceptions.InvalidBuildDirException"
  },
  "type": "import"
 },
 "samcli.commands.build.build_context.LOG": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "samcli.commands.build.build_context.MissingBuildMethodException": {
  "data": {
   "shadows": "samcli.commands.build.exceptions.MissingBuildMethodException"
  },
  "type": "import"
 },
 "samcli.commands.build.build_context.ResourceNotFound": {
  "data": {
   "shadows": "samcli.local.lambdafn.exceptions.ResourceNotFound"
  },
  "type": "import"
 },
 "samcli.commands.build.build_context.ResourcesToBuildCollector": {
  "data": {
   "shadows": "samcli.lib.providers.provider.ResourcesToBuildCollector"
  },
  "type": "import"
 },
 "samcli.commands.build.build_context.SamFunctionProvider": {
  "data": {
   "shadows": "samcli.lib.providers.sam_function_provider.SamFunctionProvider"
  },
  "type": "import"
 },
 "samcli.commands.build.build_context.SamLayerProvider": {
  "data": {
   "shadows": "samcli.lib.providers.sam_layer_provider.SamLayerProvider"
  },
  "type": "import"
 },
 "samcli.commands.build.build_context.get_template_data": {
  "data": {
   "shadows": "samcli.commands._utils.template.get_template_data"
  },
  "type": "import"
 },
 "samcli.commands.build.build_context.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.commands.build.build_context.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.commands.build.build_context.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "samcli.commands.build.build_context.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "samcli.commands.build.command": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.commands.build.command.logging",
    "samcli.commands.build.command.os"
   ]
  },
  "type": "module"
 },
 "samcli.commands.build.command.ApplicationBuilder": {
  "data": {
   "shadows": "samcli.lib.build.app_builder.ApplicationBuilder"
  },
  "type": "import"
 },
 "samcli.commands.build.command.BuildContext": {
  "data": {
   "shadows": "samcli.commands.build.build_context.BuildContext"
  },
  "type": "import"
 },
 "samcli.commands.build.command.BuildError": {
  "data": {
   "shadows": "samcli.lib.build.app_builder.BuildError"
  },
  "type": "import"
 },
 "samcli.commands.build.command.BuildInsideContainerError": {
  "data": {
   "shadows": "samcli.lib.build.app_builder.BuildInsideContainerError"
  },
  "type": "import"
 },
 "samcli.commands.build.command.ContainerBuildNotSupported": {
  "data": {
   "shadows": "samcli.lib.build.app_builder.ContainerBuildNotSupported"
  },
  "type": "import"
 },
 "samcli.commands.build.command.DEFAULT_BUILD_DIR": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "samcli.commands.build.command.FunctionNotFound": {
  "data": {
   "shadows": "samcli.local.lambdafn.exceptions.FunctionNotFound"
  },
  "type": "import"
 },
 "samcli.commands.build.command.HELP_TEXT": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "samcli.commands.build.command.InvalidBuildGraphException": {
  "data": {
   "shadows": "samcli.lib.build.build_graph.InvalidBuildGraphException"
  },
  "type": "import"
 },
 "samcli.commands.build.command.LOG": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "samcli.commands.build.command.TomlProvider": {
  "data": {
   "shadows": "samcli.cli.cli_config_file.TomlProvider"
  },
  "type": "import"
 },
 "samcli.commands.build.command.UnsupportedBuilderLibraryVersionError": {
  "data": {
   "shadows": "samcli.lib.build.app_builder.UnsupportedBuilderLibraryVersionError"
  },
  "type": "import"
 },
 "samcli.commands.build.command.UnsupportedRuntimeException": {
  "data": {
   "shadows": "samcli.lib.build.workflow_config.UnsupportedRuntimeException"
  },
  "type": "import"
 },
 "samcli.commands.build.command.UserException": {
  "data": {
   "shadows": "samcli.commands.exceptions.UserException"
  },
  "type": "import"
 },
 "samcli.commands.build.command._get_mode_value_from_envvar": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "samcli.commands.build.command.click",
    "samcli.commands.build.command.os"
   ]
  },
  "type": "function"
 },
 "samcli.commands.build.command.aws_creds_options": {
  "data": {
   "shadows": "samcli.cli.main.aws_creds_options"
  },
  "type": "import"
 },
 "samcli.commands.build.command.cli": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "_get_mode_value_from_envvar",
    "do_cli",
    "samcli.cli.cli_config_file.TomlProvider",
    "samcli.cli.cli_config_file.configuration_option",
    "samcli.cli.main.aws_creds_options",
    "samcli.cli.main.common_options",
    "samcli.cli.main.pass_context",
    "samcli.commands._utils.options.docker_common_options",
    "samcli.commands._utils.options.parameter_override_option",
    "samcli.commands._utils.options.template_option_without_build",
    "samcli.commands.build.command.DEFAULT_BUILD_DIR",
    "samcli.commands.build.command.HELP_TEXT",
    "samcli.commands.build.command.click",
    "samcli.lib.telemetry.metrics.track_command"
   ]
  },
  "type": "function"
 },
 "samcli.commands.build.command.cli_framework_options": {
  "data": {
   "shadows": "samcli.cli.main.common_options"
  },
  "type": "import"
 },
 "samcli.commands.build.command.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.commands.build.command.configuration_option": {
  "data": {
   "shadows": "samcli.cli.cli_config_file.configuration_option"
  },
  "type": "import"
 },
 "samcli.commands.build.command.do_cli": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ValueError",
    "gen_success_msg",
    "getattr",
    "samcli.commands._utils.template.move_template",
    "samcli.commands.build.build_context.BuildContext",
    "samcli.commands.build.command.DEFAULT_BUILD_DIR",
    "samcli.commands.build.command.LOG",
    "samcli.commands.build.command.click",
    "samcli.commands.build.command.os",
    "samcli.commands.exceptions.UserException",
    "samcli.lib.build.app_builder.ApplicationBuilder",
    "samcli.lib.build.app_builder.BuildError",
    "samcli.lib.build.app_builder.BuildInsideContainerError",
    "samcli.lib.build.app_builder.ContainerBuildNotSupported",
    "samcli.lib.build.app_builder.UnsupportedBuilderLibraryVersionError",
    "samcli.lib.build.build_graph.InvalidBuildGraphException",
    "samcli.lib.build.workflow_config.UnsupportedRuntimeException",
    "samcli.local.lambdafn.exceptions.FunctionNotFound",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands.build.command.docker_common_options": {
  "data": {
   "shadows": "samcli.commands._utils.options.docker_common_options"
  },
  "type": "import"
 },
 "samcli.commands.build.command.gen_success_msg": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "samcli.commands.build.command.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.commands.build.command.move_template": {
  "data": {
   "shadows": "samcli.commands._utils.template.move_template"
  },
  "type": "import"
 },
 "samcli.commands.build.command.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.commands.build.command.parameter_override_option": {
  "data": {
   "shadows": "samcli.commands._utils.options.parameter_override_option"
  },
  "type": "import"
 },
 "samcli.commands.build.command.pass_context": {
  "data": {
   "shadows": "samcli.cli.main.pass_context"
  },
  "type": "import"
 },
 "samcli.commands.build.command.template_option_without_build": {
  "data": {
   "shadows": "samcli.commands._utils.options.template_option_without_build"
  },
  "type": "import"
 },
 "samcli.commands.build.command.track_command": {
  "data": {
   "shadows": "samcli.lib.telemetry.metrics.track_command"
  },
  "type": "import"
 },
 "samcli.commands.build.exceptions": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.build.exceptions.InvalidBuildDirException": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.build.exceptions.MissingBuildMethodException": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.build.exceptions.UserException": {
  "data": {
   "shadows": "samcli.commands.exceptions.UserException"
  },
  "type": "import"
 },
 "samcli.commands.deploy": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.deploy.auth_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.commands.deploy.auth_utils.logging"
   ]
  },
  "type": "module"
 },
 "samcli.commands.deploy.auth_utils.LOG": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "samcli.commands.deploy.auth_utils.SamFunctionProvider": {
  "data": {
   "shadows": "samcli.lib.providers.sam_function_provider.SamFunctionProvider"
  },
  "type": "import"
 },
 "samcli.commands.deploy.auth_utils.SwaggerReader": {
  "data": {
   "shadows": "samcli.commands.local.lib.swagger.reader.SwaggerReader"
  },
  "type": "import"
 },
 "samcli.commands.deploy.auth_utils._auth_definition_body_and_uri": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "any",
    "bool",
    "dict",
    "isinstance",
    "samcli.commands.deploy.auth_utils.LOG",
    "samcli.commands.local.lib.swagger.reader.SwaggerReader"
   ]
  },
  "type": "function"
 },
 "samcli.commands.deploy.auth_utils._auth_id": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "_auth_definition_body_and_uri",
    "any"
   ]
  },
  "type": "function"
 },
 "samcli.commands.deploy.auth_utils._auth_resource_event": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "_auth_id"
   ]
  },
  "type": "function"
 },
 "samcli.commands.deploy.auth_utils.auth_per_resource": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "_auth_resource_event",
    "samcli.lib.providers.sam_function_provider.SamFunctionProvider"
   ]
  },
  "type": "function"
 },
 "samcli.commands.deploy.auth_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.commands.deploy.command": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.commands.deploy.command.logging"
   ]
  },
  "type": "module"
 },
 "samcli.commands.deploy.command.CONFIG_SECTION": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "samcli.commands.deploy.command.DeployContext": {
  "data": {
   "shadows": "samcli.commands.deploy.deploy_context.DeployContext"
  },
  "type": "import"
 },
 "samcli.commands.deploy.command.DeployResolveS3AndS3SetError": {
  "data": {
   "shadows": "samcli.commands.deploy.exceptions.DeployResolveS3AndS3SetError"
  },
  "type": "import"
 },
 "samcli.commands.deploy.command.GuidedContext": {
  "data": {
   "shadows": "samcli.commands.deploy.guided_context.GuidedContext"
  },
  "type": "import"
 },
 "samcli.commands.deploy.command.HELP_TEXT": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "samcli.commands.deploy.command.LOG": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "samcli.commands.deploy.command.PackageContext": {
  "data": {
   "shadows": "samcli.commands.package.package_context.PackageContext"
  },
  "type": "import"
 },
 "samcli.commands.deploy.command.SHORT_HELP": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "samcli.commands.deploy.command.TomlProvider": {
  "data": {
   "shadows": "samcli.cli.cli_config_file.TomlProvider"
  },
  "type": "import"
 },
 "samcli.commands.deploy.command.aws_creds_options": {
  "data": {
   "shadows": "samcli.cli.main.aws_creds_options"
  },
  "type": "import"
 },
 "samcli.commands.deploy.command.capabilities_override_option": {
  "data": {
   "shadows": "samcli.commands._utils.options.capabilities_override_option"
  },
  "type": "import"
 },
 "samcli.commands.deploy.command.cli": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "do_cli",
    "samcli.cli.cli_config_file.TomlProvider",
    "samcli.cli.cli_config_file.configuration_option",
    "samcli.cli.main.aws_creds_options",
    "samcli.cli.main.common_options",
    "samcli.cli.main.pass_context",
    "samcli.commands._utils.options.capabilities_override_option",
    "samcli.commands._utils.options.guided_deploy_stack_name",
    "samcli.commands._utils.options.metadata_override_option",
    "samcli.commands._utils.options.no_progressbar_option",
    "samcli.commands._utils.options.notification_arns_override_option",
    "samcli.commands._utils.options.parameter_override_option",
    "samcli.commands._utils.options.tags_override_option",
    "samcli.commands._utils.options.template_click_option",
    "samcli.commands.deploy.command.CONFIG_SECTION",
    "samcli.commands.deploy.command.HELP_TEXT",
    "samcli.commands.deploy.command.SHORT_HELP",
    "samcli.commands.deploy.command.click",
    "samcli.lib.telemetry.metrics.track_command"
   ]
  },
  "type": "function"
 },
 "samcli.commands.deploy.command.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.commands.deploy.command.common_options": {
  "data": {
   "shadows": "samcli.cli.main.common_options"
  },
  "type": "import"
 },
 "samcli.commands.deploy.command.configuration_option": {
  "data": {
   "shadows": "samcli.cli.cli_config_file.configuration_option"
  },
  "type": "import"
 },
 "samcli.commands.deploy.command.do_cli": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "bool",
    "samcli.commands.deploy.command.CONFIG_SECTION",
    "samcli.commands.deploy.command.click",
    "samcli.commands.deploy.deploy_context.DeployContext",
    "samcli.commands.deploy.exceptions.DeployResolveS3AndS3SetError",
    "samcli.commands.deploy.guided_context.GuidedContext",
    "samcli.commands.deploy.utils.sanitize_parameter_overrides",
    "samcli.commands.package.package_context.PackageContext",
    "samcli.lib.bootstrap.bootstrap.manage_stack",
    "samcli.lib.utils.osutils.tempfile_platform_independent"
   ]
  },
  "type": "function"
 },
 "samcli.commands.deploy.command.guided_deploy_stack_name": {
  "data": {
   "shadows": "samcli.commands._utils.options.guided_deploy_stack_name"
  },
  "type": "import"
 },
 "samcli.commands.deploy.command.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.commands.deploy.command.manage_stack": {
  "data": {
   "shadows": "samcli.lib.bootstrap.bootstrap.manage_stack"
  },
  "type": "import"
 },
 "samcli.commands.deploy.command.metadata_override_option": {
  "data": {
   "shadows": "samcli.commands._utils.options.metadata_override_option"
  },
  "type": "import"
 },
 "samcli.commands.deploy.command.no_progressbar_option": {
  "data": {
   "shadows": "samcli.commands._utils.options.no_progressbar_option"
  },
  "type": "import"
 },
 "samcli.commands.deploy.command.notification_arns_override_option": {
  "data": {
   "shadows": "samcli.commands._utils.options.notification_arns_override_option"
  },
  "type": "import"
 },
 "samcli.commands.deploy.command.osutils": {
  "data": {
   "shadows": "samcli.lib.utils.osutils"
  },
  "type": "import"
 },
 "samcli.commands.deploy.command.parameter_override_option": {
  "data": {
   "shadows": "samcli.commands._utils.options.parameter_override_option"
  },
  "type": "import"
 },
 "samcli.commands.deploy.command.pass_context": {
  "data": {
   "shadows": "samcli.cli.main.pass_context"
  },
  "type": "import"
 },
 "samcli.commands.deploy.command.sanitize_parameter_overrides": {
  "data": {
   "shadows": "samcli.commands.deploy.utils.sanitize_parameter_overrides"
  },
  "type": "import"
 },
 "samcli.commands.deploy.command.tags_override_option": {
  "data": {
   "shadows": "samcli.commands._utils.options.tags_override_option"
  },
  "type": "import"
 },
 "samcli.commands.deploy.command.template_click_option": {
  "data": {
   "shadows": "samcli.commands._utils.options.template_click_option"
  },
  "type": "import"
 },
 "samcli.commands.deploy.command.track_command": {
  "data": {
   "shadows": "samcli.lib.telemetry.metrics.track_command"
  },
  "type": "import"
 },
 "samcli.commands.deploy.deploy_context": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.commands.deploy.deploy_context.logging"
   ]
  },
  "type": "module"
 },
 "samcli.commands.deploy.deploy_context.DeployContext": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "samcli.commands.deploy.deploy_context.DeployContext.__enter__": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "samcli.commands.deploy.deploy_context.DeployContext.__exit__": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "samcli.commands.deploy.deploy_context.DeployContext.__init__": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "samcli.commands.deploy.deploy_context.DeployContext.deploy": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "len",
    "samcli.commands._utils.template.get_template_data",
    "samcli.commands.deploy.auth_utils.auth_per_resource",
    "samcli.commands.deploy.deploy_context.click",
    "samcli.commands.deploy.exceptions.ChangeEmptyError",
    "samcli.commands.deploy.utils.sanitize_parameter_overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands.deploy.deploy_context.DeployContext.merge_parameters": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "samcli.commands.deploy.deploy_context.DeployContext.run": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "open",
    "samcli.commands.deploy.deploy_context.boto3",
    "samcli.commands.deploy.deploy_context.os",
    "samcli.commands.deploy.exceptions.DeployBucketRequiredError",
    "samcli.commands.deploy.exceptions.DeployFailedError",
    "samcli.commands.deploy.utils.print_deploy_args",
    "samcli.lib.deploy.deployer.Deployer",
    "samcli.lib.package.s3_uploader.S3Uploader",
    "samcli.lib.utils.botoconfig.get_boto_config_with_user_agent",
    "samcli.yamlhelper.yaml_parse"
   ]
  },
  "type": "function"
 },
 "samcli.commands.deploy.deploy_context.Deployer": {
  "data": {
   "shadows": "samcli.lib.deploy.deployer.Deployer"
  },
  "type": "import"
 },
 "samcli.commands.deploy.deploy_context.LOG": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "samcli.commands.deploy.deploy_context.S3Uploader": {
  "data": {
   "shadows": "samcli.lib.package.s3_uploader.S3Uploader"
  },
  "type": "import"
 },
 "samcli.commands.deploy.deploy_context.auth_per_resource": {
  "data": {
   "shadows": "samcli.commands.deploy.auth_utils.auth_per_resource"
  },
  "type": "import"
 },
 "samcli.commands.deploy.deploy_context.boto3": {
  "data": {
   "shadows": "boto3"
  },
  "type": "import"
 },
 "samcli.commands.deploy.deploy_context.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.commands.deploy.deploy_context.deploy_exceptions": {
  "data": {
   "shadows": "samcli.commands.deploy.exceptions"
  },
  "type": "import"
 },
 "samcli.commands.deploy.deploy_context.get_boto_config_with_user_agent": {
  "data": {
   "shadows": "samcli.lib.utils.botoconfig.get_boto_config_with_user_agent"
  },
  "type": "import"
 },
 "samcli.commands.deploy.deploy_context.get_template_data": {
  "data": {
   "shadows": "samcli.commands._utils.template.get_template_data"
  },
  "type": "import"
 },
 "samcli.commands.deploy.deploy_context.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.commands.deploy.deploy_context.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.commands.deploy.deploy_context.print_deploy_args": {
  "data": {
   "shadows": "samcli.commands.deploy.utils.print_deploy_args"
  },
  "type": "import"
 },
 "samcli.commands.deploy.deploy_context.sanitize_parameter_overrides": {
  "data": {
   "shadows": "samcli.commands.deploy.utils.sanitize_parameter_overrides"
  },
  "type": "import"
 },
 "samcli.commands.deploy.deploy_context.yaml_parse": {
  "data": {
   "shadows": "samcli.yamlhelper.yaml_parse"
  },
  "type": "import"
 },
 "samcli.commands.deploy.exceptions": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.deploy.exceptions.ChangeEmptyError": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.deploy.exceptions.ChangeEmptyError.__init__": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "samcli.commands.deploy.exceptions.ChangeEmptyError",
    "super"
   ]
  },
  "type": "function"
 },
 "samcli.commands.deploy.exceptions.ChangeSetError": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.deploy.exceptions.ChangeSetError.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "samcli.commands.deploy.exceptions.ChangeSetError",
    "super"
   ]
  },
  "type": "function"
 },
 "samcli.commands.deploy.exceptions.DeployBucketInDifferentRegionError": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.deploy.exceptions.DeployBucketInDifferentRegionError.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "samcli.commands.deploy.exceptions.DeployBucketInDifferentRegionError",
    "super"
   ]
  },
  "type": "function"
 },
 "samcli.commands.deploy.exceptions.DeployBucketRequiredError": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.deploy.exceptions.DeployBucketRequiredError.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "samcli.commands.deploy.exceptions.DeployBucketRequiredError",
    "super"
   ]
  },
  "type": "function"
 },
 "samcli.commands.deploy.exceptions.DeployFailedError": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.deploy.exceptions.DeployFailedError.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "samcli.commands.deploy.exceptions.DeployFailedError",
    "super"
   ]
  },
  "type": "function"
 },
 "samcli.commands.deploy.exceptions.DeployResolveS3AndS3SetError": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.deploy.exceptions.DeployResolveS3AndS3SetError.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "samcli.commands.deploy.exceptions.DeployResolveS3AndS3SetError",
    "super"
   ]
  },
  "type": "function"
 },
 "samcli.commands.deploy.exceptions.DeployStackOutPutFailedError": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.deploy.exceptions.DeployStackOutPutFailedError.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "samcli.commands.deploy.exceptions.DeployStackOutPutFailedError",
    "super"
   ]
  },
  "type": "function"
 },
 "samcli.commands.deploy.exceptions.GuidedDeployFailedError": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.deploy.exceptions.GuidedDeployFailedError.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "samcli.commands.deploy.exceptions.GuidedDeployFailedError",
    "super"
   ]
  },
  "type": "function"
 },
 "samcli.commands.deploy.exceptions.UserException": {
  "data": {
   "shadows": "samcli.commands.exceptions.UserException"
  },
  "type": "import"
 },
 "samcli.commands.deploy.guided_config": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.deploy.guided_config.DEFAULT_CONFIG_FILE_NAME": {
  "data": {
   "shadows": "samcli.lib.config.samconfig.DEFAULT_CONFIG_FILE_NAME"
  },
  "type": "import"
 },
 "samcli.commands.deploy.guided_config.DEFAULT_ENV": {
  "data": {
   "shadows": "samcli.lib.config.samconfig.DEFAULT_ENV"
  },
  "type": "import"
 },
 "samcli.commands.deploy.guided_config.GuidedConfig": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "samcli.commands.deploy.guided_config.GuidedConfig.__init__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "samcli.commands.deploy.guided_config.GuidedConfig.get_config_ctx": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "getattr",
    "samcli.commands.deploy.guided_config.click",
    "samcli.lib.config.samconfig.DEFAULT_CONFIG_FILE_NAME",
    "samcli.lib.config.samconfig.SamConfig",
    "samcli.lib.config.samconfig.SamConfig.config_dir"
   ]
  },
  "type": "function"
 },
 "samcli.commands.deploy.guided_config.GuidedConfig.quote_parameter_values": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "samcli.commands.deploy.guided_config.GuidedConfig.read_config_showcase": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "samcli.commands.deploy.exceptions.GuidedDeployFailedError",
    "samcli.commands.deploy.guided_config.click"
   ]
  },
  "type": "function"
 },
 "samcli.commands.deploy.guided_config.GuidedConfig.save_config": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "samcli.cli.context.get_cmd_names",
    "samcli.commands.deploy.guided_config.click",
    "samcli.lib.config.samconfig.DEFAULT_ENV",
    "tuple"
   ]
  },
  "type": "function"
 },
 "samcli.commands.deploy.guided_config.GuidedDeployFailedError": {
  "data": {
   "shadows": "samcli.commands.deploy.exceptions.GuidedDeployFailedError"
  },
  "type": "import"
 },
 "samcli.commands.deploy.guided_config.SamConfig": {
  "data": {
   "shadows": "samcli.lib.config.samconfig.SamConfig"
  },
  "type": "import"
 },
 "samcli.commands.deploy.guided_config.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.commands.deploy.guided_config.get_cmd_names": {
  "data": {
   "shadows": "samcli.cli.context.get_cmd_names"
  },
  "type": "import"
 },
 "samcli.commands.deploy.guided_context": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.commands.deploy.guided_context.logging"
   ]
  },
  "type": "module"
 },
 "samcli.commands.deploy.guided_context.Colored": {
  "data": {
   "shadows": "samcli.lib.utils.colors.Colored"
  },
  "type": "import"
 },
 "samcli.commands.deploy.guided_context.DEFAULT_CONFIG_FILE_NAME": {
  "data": {
   "shadows": "samcli.lib.config.samconfig.DEFAULT_CONFIG_FILE_NAME"
  },
  "type": "import"
 },
 "samcli.commands.deploy.guided_context.DEFAULT_ENV": {
  "data": {
   "shadows": "samcli.lib.config.samconfig.DEFAULT_ENV"
  },
  "type": "import"
 },
 "samcli.commands.deploy.guided_context.FuncParamType": {
  "data": {
   "shadows": "click.types.FuncParamType"
  },
  "type": "import"
 },
 "samcli.commands.deploy.guided_context.GuidedConfig": {
  "data": {
   "shadows": "samcli.commands.deploy.guided_config.GuidedConfig"
  },
  "type": "import"
 },
 "samcli.commands.deploy.guided_context.GuidedContext": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "samcli.commands.deploy.guided_context.GuidedContext.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "samcli.lib.utils.colors.Colored"
   ]
  },
  "type": "function"
 },
 "samcli.commands.deploy.guided_context.GuidedContext._get_parameter_value": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands.deploy.guided_context.GuidedContext.guided_capabilities": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.commands.deploy.guided_context.GuidedContext.guided_parameter_overrides": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.commands.deploy.guided_context.GuidedContext.guided_prompts": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "click.confirm",
    "click.prompt",
    "click.types.FuncParamType",
    "list",
    "samcli.commands._utils.options._space_separated_list_func_type",
    "samcli.commands.deploy.guided_context.click",
    "samcli.commands.deploy.utils.sanitize_parameter_overrides",
    "samcli.lib.bootstrap.bootstrap.manage_stack",
    "samcli.lib.config.samconfig.DEFAULT_CONFIG_FILE_NAME",
    "samcli.lib.config.samconfig.DEFAULT_ENV"
   ]
  },
  "type": "function"
 },
 "samcli.commands.deploy.guided_context.GuidedContext.prompt_authorization": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "click.confirm",
    "samcli.commands._utils.template.get_template_data",
    "samcli.commands.deploy.auth_utils.auth_per_resource",
    "samcli.commands.deploy.exceptions.GuidedDeployFailedError"
   ]
  },
  "type": "function"
 },
 "samcli.commands.deploy.guided_context.GuidedContext.prompt_parameters": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "click.prompt",
    "samcli.commands.deploy.guided_context.click"
   ]
  },
  "type": "function"
 },
 "samcli.commands.deploy.guided_context.GuidedContext.run": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ValueError",
    "samcli.commands._utils.template.get_template_parameters",
    "samcli.commands.deploy.exceptions.GuidedDeployFailedError",
    "samcli.commands.deploy.guided_config.GuidedConfig",
    "samcli.commands.deploy.guided_context.LOG",
    "samcli.lib.config.samconfig.DEFAULT_CONFIG_FILE_NAME",
    "samcli.lib.config.samconfig.DEFAULT_ENV",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands.deploy.guided_context.GuidedDeployFailedError": {
  "data": {
   "shadows": "samcli.commands.deploy.exceptions.GuidedDeployFailedError"
  },
  "type": "import"
 },
 "samcli.commands.deploy.guided_context.LOG": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "samcli.commands.deploy.guided_context._space_separated_list_func_type": {
  "data": {
   "shadows": "samcli.commands._utils.options._space_separated_list_func_type"
  },
  "type": "import"
 },
 "samcli.commands.deploy.guided_context.auth_per_resource": {
  "data": {
   "shadows": "samcli.commands.deploy.auth_utils.auth_per_resource"
  },
  "type": "import"
 },
 "samcli.commands.deploy.guided_context.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.commands.deploy.guided_context.confirm": {
  "data": {
   "shadows": "click.confirm"
  },
  "type": "import"
 },
 "samcli.commands.deploy.guided_context.get_template_data": {
  "data": {
   "shadows": "samcli.commands._utils.template.get_template_data"
  },
  "type": "import"
 },
 "samcli.commands.deploy.guided_context.get_template_parameters": {
  "data": {
   "shadows": "samcli.commands._utils.template.get_template_parameters"
  },
  "type": "import"
 },
 "samcli.commands.deploy.guided_context.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.commands.deploy.guided_context.manage_stack": {
  "data": {
   "shadows": "samcli.lib.bootstrap.bootstrap.manage_stack"
  },
  "type": "import"
 },
 "samcli.commands.deploy.guided_context.prompt": {
  "data": {
   "shadows": "click.prompt"
  },
  "type": "import"
 },
 "samcli.commands.deploy.guided_context.sanitize_parameter_overrides": {
  "data": {
   "shadows": "samcli.commands.deploy.utils.sanitize_parameter_overrides"
  },
  "type": "import"
 },
 "samcli.commands.deploy.utils": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.deploy.utils.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.commands.deploy.utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "samcli.commands.deploy.utils.print_deploy_args": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "samcli.commands.deploy.utils.click",
    "samcli.commands.deploy.utils.json"
   ]
  },
  "type": "function"
 },
 "samcli.commands.deploy.utils.sanitize_parameter_overrides": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "samcli.commands.exceptions": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.exceptions.AppTemplateUpdateException": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.exceptions.ConfigException": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "samcli.commands.exceptions.click"
   ]
  },
  "type": "class"
 },
 "samcli.commands.exceptions.CredentialsError": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.exceptions.RegionError": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.exceptions.SchemasApiException": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.exceptions.UserException": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "samcli.commands.exceptions.click"
   ]
  },
  "type": "class"
 },
 "samcli.commands.exceptions.UserException.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "samcli.commands.exceptions.click"
   ]
  },
  "type": "function"
 },
 "samcli.commands.exceptions.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.commands.init": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.commands.init.logging"
   ]
  },
  "type": "module"
 },
 "samcli.commands.init.Colored": {
  "data": {
   "shadows": "samcli.lib.utils.colors.Colored"
  },
  "type": "import"
 },
 "samcli.commands.init.HELP_TEXT": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "samcli.commands.init.InitTemplates": {
  "data": {
   "shadows": "samcli.commands.init.init_templates.InitTemplates"
  },
  "type": "import"
 },
 "samcli.commands.init.JSONDecodeError": {
  "data": {
   "shadows": "json.JSONDecodeError"
  },
  "type": "import"
 },
 "samcli.commands.init.LOG": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "samcli.commands.init.RUNTIMES": {
  "data": {
   "shadows": "samcli.local.common.runtime_template.RUNTIMES"
  },
  "type": "import"
 },
 "samcli.commands.init.SUPPORTED_DEP_MANAGERS": {
  "data": {
   "shadows": "samcli.local.common.runtime_template.SUPPORTED_DEP_MANAGERS"
  },
  "type": "import"
 },
 "samcli.commands.init.TomlProvider": {
  "data": {
   "shadows": "samcli.cli.cli_config_file.TomlProvider"
  },
  "type": "import"
 },
 "samcli.commands.init._deprecate_notification": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "samcli.commands.init.LOG",
    "samcli.lib.utils.colors.Colored"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init._get_cookiecutter_template_context": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "json.JSONDecodeError",
    "samcli.commands.init.click",
    "samcli.commands.init.json"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.cli": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "dict",
    "do_cli",
    "samcli.cli.cli_config_file.TomlProvider",
    "samcli.cli.cli_config_file.configuration_option",
    "samcli.cli.main.common_options",
    "samcli.cli.main.pass_context",
    "samcli.commands.init.HELP_TEXT",
    "samcli.commands.init.click",
    "samcli.lib.telemetry.metrics.track_command",
    "samcli.local.common.runtime_template.RUNTIMES",
    "samcli.local.common.runtime_template.SUPPORTED_DEP_MANAGERS"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.commands.init.common_options": {
  "data": {
   "shadows": "samcli.cli.main.common_options"
  },
  "type": "import"
 },
 "samcli.commands.init.configuration_option": {
  "data": {
   "shadows": "samcli.cli.cli_config_file.configuration_option"
  },
  "type": "import"
 },
 "samcli.commands.init.do_cli": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "_deprecate_notification",
    "_get_cookiecutter_template_context",
    "samcli.commands.init.click",
    "samcli.commands.init.init_generator.do_generate",
    "samcli.commands.init.init_templates.InitTemplates",
    "samcli.commands.init.interactive_init_flow.do_interactive"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.do_generate": {
  "data": {
   "shadows": "samcli.commands.init.init_generator.do_generate"
  },
  "type": "import"
 },
 "samcli.commands.init.do_interactive": {
  "data": {
   "shadows": "samcli.commands.init.interactive_init_flow.do_interactive"
  },
  "type": "import"
 },
 "samcli.commands.init.init_generator": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.init.init_generator.ArbitraryProjectDownloadFailed": {
  "data": {
   "shadows": "samcli.lib.init.exceptions.ArbitraryProjectDownloadFailed"
  },
  "type": "import"
 },
 "samcli.commands.init.init_generator.GenerateProjectFailedError": {
  "data": {
   "shadows": "samcli.lib.init.exceptions.GenerateProjectFailedError"
  },
  "type": "import"
 },
 "samcli.commands.init.init_generator.UserException": {
  "data": {
   "shadows": "samcli.commands.exceptions.UserException"
  },
  "type": "import"
 },
 "samcli.commands.init.init_generator.do_generate": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException",
    "samcli.lib.init.exceptions.ArbitraryProjectDownloadFailed",
    "samcli.lib.init.exceptions.GenerateProjectFailedError",
    "samcli.lib.init.generate_project",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.init_generator.generate_project": {
  "data": {
   "shadows": "samcli.lib.init.generate_project"
  },
  "type": "import"
 },
 "samcli.commands.init.init_templates": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.commands.init.init_templates.logging"
   ]
  },
  "type": "module"
 },
 "samcli.commands.init.init_templates.AppTemplateUpdateException": {
  "data": {
   "shadows": "samcli.commands.exceptions.AppTemplateUpdateException"
  },
  "type": "import"
 },
 "samcli.commands.init.init_templates.InitTemplates": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "samcli.commands.init.init_templates.InitTemplates.__init__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "samcli.commands.init.init_templates.InitTemplates._check_app_template": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "samcli.commands.init.init_templates.InitTemplates._clone_new_app_templates": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "OSError",
    "samcli.commands.init.init_templates.LOG",
    "samcli.commands.init.init_templates.click",
    "samcli.commands.init.init_templates.os",
    "samcli.commands.init.init_templates.shutil",
    "samcli.commands.init.init_templates.subprocess",
    "samcli.lib.utils.osutils.mkdir_temp"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.init_templates.InitTemplates._clone_repo": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "samcli.cli.main.global_cfg.config_dir",
    "samcli.commands.init.init_templates.os"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.init_templates.InitTemplates._git_executable": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "OSError",
    "samcli.commands.init.init_templates.LOG",
    "samcli.commands.init.init_templates.platform",
    "samcli.commands.init.init_templates.subprocess"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.init_templates.InitTemplates._init_options_from_bundle": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "any",
    "list",
    "samcli.commands.init.init_templates.InvalidInitTemplateError",
    "samcli.commands.init.init_templates.itertools",
    "samcli.local.common.runtime_template.RUNTIME_DEP_TEMPLATE_MAPPING.values"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.init_templates.InitTemplates._init_options_from_manifest": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "filter",
    "list",
    "open",
    "samcli.commands.init.init_templates.json",
    "samcli.commands.init.init_templates.os",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.init_templates.InitTemplates._overwrite_existing_templates": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "OSError",
    "samcli.commands.init.init_templates.LOG",
    "samcli.commands.init.init_templates.click",
    "samcli.commands.init.init_templates.os",
    "samcli.commands.init.init_templates.subprocess",
    "samcli.lib.utils.osutils.mkdir_temp"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.init_templates.InitTemplates._replace_app_templates": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "OSError",
    "samcli.commands.exceptions.AppTemplateUpdateException",
    "samcli.commands.init.init_templates.LOG",
    "samcli.commands.init.init_templates.shutil",
    "samcli.lib.utils.osutils.rmtree_callback",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.init_templates.InitTemplates._shared_dir_check": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "OSError",
    "samcli.commands.init.init_templates.LOG"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.init_templates.InitTemplates._template_directory_exists": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "pathlib.Path"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.init_templates.InitTemplates.init_options": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "samcli.commands.init.init_templates.InitTemplates.is_dynamic_schemas_template": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "samcli.commands.init.init_templates.InitTemplates.location_from_app_template": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "StopIteration",
    "next",
    "samcli.commands.init.init_templates.InvalidInitTemplateError",
    "samcli.commands.init.init_templates.os"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.init_templates.InitTemplates.prompt_for_location": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "map",
    "range",
    "samcli.commands.init.init_templates.InvalidInitTemplateError",
    "samcli.commands.init.init_templates.click",
    "samcli.commands.init.init_templates.os",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.init_templates.InvalidInitTemplateError": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.init.init_templates.LOG": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "samcli.commands.init.init_templates.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "samcli.commands.init.init_templates.RUNTIME_DEP_TEMPLATE_MAPPING": {
  "data": {
   "shadows": "samcli.local.common.runtime_template.RUNTIME_DEP_TEMPLATE_MAPPING"
  },
  "type": "import"
 },
 "samcli.commands.init.init_templates.UserException": {
  "data": {
   "shadows": "samcli.commands.exceptions.UserException"
  },
  "type": "import"
 },
 "samcli.commands.init.init_templates.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.commands.init.init_templates.global_cfg": {
  "data": {
   "shadows": "samcli.cli.main.global_cfg"
  },
  "type": "import"
 },
 "samcli.commands.init.init_templates.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "samcli.commands.init.init_templates.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "samcli.commands.init.init_templates.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.commands.init.init_templates.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.commands.init.init_templates.osutils": {
  "data": {
   "shadows": "samcli.lib.utils.osutils"
  },
  "type": "import"
 },
 "samcli.commands.init.init_templates.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "samcli.commands.init.init_templates.rmtree_callback": {
  "data": {
   "shadows": "samcli.lib.utils.osutils.rmtree_callback"
  },
  "type": "import"
 },
 "samcli.commands.init.init_templates.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "samcli.commands.init.init_templates.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "samcli.commands.init.interactive_event_bridge_flow": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.init.interactive_event_bridge_flow.EVENT_BRIDGE_SOURCE": {
  "data": {
   "shadows": "samcli.lib.schemas.schemas_constants.EVENT_BRIDGE_SOURCE"
  },
  "type": "import"
 },
 "samcli.commands.init.interactive_event_bridge_flow.EVENT_BRIDGE_SOURCE_DETAIL_TYPE": {
  "data": {
   "shadows": "samcli.lib.schemas.schemas_constants.EVENT_BRIDGE_SOURCE_DETAIL_TYPE"
  },
  "type": "import"
 },
 "samcli.commands.init.interactive_event_bridge_flow.PAGE_LIMIT": {
  "data": {
   "shadows": "samcli.lib.schemas.schemas_constants.PAGE_LIMIT"
  },
  "type": "import"
 },
 "samcli.commands.init.interactive_event_bridge_flow.SCHEMAS_REGISTRY": {
  "data": {
   "shadows": "samcli.lib.schemas.schemas_constants.SCHEMAS_REGISTRY"
  },
  "type": "import"
 },
 "samcli.commands.init.interactive_event_bridge_flow.SCHEMA_NAME": {
  "data": {
   "shadows": "samcli.lib.schemas.schemas_constants.SCHEMA_NAME"
  },
  "type": "import"
 },
 "samcli.commands.init.interactive_event_bridge_flow.SCHEMA_ROOT": {
  "data": {
   "shadows": "samcli.lib.schemas.schemas_constants.SCHEMA_ROOT"
  },
  "type": "import"
 },
 "samcli.commands.init.interactive_event_bridge_flow.SchemasApiCaller": {
  "data": {
   "shadows": "samcli.lib.schemas.schemas_api_caller.SchemasApiCaller"
  },
  "type": "import"
 },
 "samcli.commands.init.interactive_event_bridge_flow._construct_cli_page": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "dict",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.interactive_event_bridge_flow._fetch_available_registries": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "_construct_cli_page",
    "len",
    "range",
    "samcli.lib.schemas.schemas_constants.PAGE_LIMIT"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.interactive_event_bridge_flow._fetch_available_schemas": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "_construct_cli_page",
    "len",
    "range",
    "samcli.lib.schemas.schemas_constants.PAGE_LIMIT"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.interactive_event_bridge_flow._get_registry_cli_choice": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "_fetch_available_registries",
    "_prompt_for_registry_choice",
    "dict",
    "len",
    "samcli.commands.init.interactive_event_bridge_flow.click"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.interactive_event_bridge_flow._get_schema_cli_choice": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "_fetch_available_schemas",
    "_prompt_for_schemas_choice",
    "dict",
    "len",
    "samcli.commands.init.interactive_event_bridge_flow.click"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.interactive_event_bridge_flow._prompt_for_registry_choice": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "_fetch_available_registries",
    "samcli.lib.schemas.cli_paginator.do_paginate_cli",
    "samcli.lib.schemas.schemas_cli_message_generator.construct_cli_display_message_for_registries",
    "samcli.lib.schemas.schemas_constants.PAGE_LIMIT"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.interactive_event_bridge_flow._prompt_for_schemas_choice": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "_fetch_available_schemas",
    "samcli.lib.schemas.cli_paginator.do_paginate_cli",
    "samcli.lib.schemas.schemas_cli_message_generator.construct_cli_display_message_for_schemas",
    "samcli.lib.schemas.schemas_constants.PAGE_LIMIT"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.interactive_event_bridge_flow.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.commands.init.interactive_event_bridge_flow.construct_cli_display_message_for_registries": {
  "data": {
   "shadows": "samcli.lib.schemas.schemas_cli_message_generator.construct_cli_display_message_for_registries"
  },
  "type": "import"
 },
 "samcli.commands.init.interactive_event_bridge_flow.construct_cli_display_message_for_schemas": {
  "data": {
   "shadows": "samcli.lib.schemas.schemas_cli_message_generator.construct_cli_display_message_for_schemas"
  },
  "type": "import"
 },
 "samcli.commands.init.interactive_event_bridge_flow.do_paginate_cli": {
  "data": {
   "shadows": "samcli.lib.schemas.cli_paginator.do_paginate_cli"
  },
  "type": "import"
 },
 "samcli.commands.init.interactive_event_bridge_flow.get_aws_configuration_choice": {
  "data": {
   "shadows": "samcli.lib.schemas.schemas_aws_config.get_aws_configuration_choice"
  },
  "type": "import"
 },
 "samcli.commands.init.interactive_event_bridge_flow.get_schema_template_details": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "_get_registry_cli_choice",
    "_get_schema_cli_choice"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.interactive_event_bridge_flow.get_schemas_api_caller": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "samcli.lib.schemas.schemas_api_caller.SchemasApiCaller",
    "samcli.lib.schemas.schemas_aws_config.get_aws_configuration_choice",
    "samcli.lib.schemas.schemas_aws_config.get_schemas_client"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.interactive_event_bridge_flow.get_schemas_client": {
  "data": {
   "shadows": "samcli.lib.schemas.schemas_aws_config.get_schemas_client"
  },
  "type": "import"
 },
 "samcli.commands.init.interactive_event_bridge_flow.get_schemas_template_parameter": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "samcli.lib.schemas.schemas_constants.EVENT_BRIDGE_SOURCE",
    "samcli.lib.schemas.schemas_constants.EVENT_BRIDGE_SOURCE_DETAIL_TYPE",
    "samcli.lib.schemas.schemas_constants.SCHEMAS_REGISTRY",
    "samcli.lib.schemas.schemas_constants.SCHEMA_NAME",
    "samcli.lib.schemas.schemas_constants.SCHEMA_ROOT"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.interactive_init_flow": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.commands.init.interactive_init_flow.logging"
   ]
  },
  "type": "module"
 },
 "samcli.commands.init.interactive_init_flow.ClientError": {
  "data": {
   "shadows": "botocore.exceptions.ClientError"
  },
  "type": "import"
 },
 "samcli.commands.init.interactive_init_flow.INIT_RUNTIMES": {
  "data": {
   "shadows": "samcli.local.common.runtime_template.INIT_RUNTIMES"
  },
  "type": "import"
 },
 "samcli.commands.init.interactive_init_flow.InitTemplates": {
  "data": {
   "shadows": "samcli.commands.init.init_templates.InitTemplates"
  },
  "type": "import"
 },
 "samcli.commands.init.interactive_init_flow.LOG": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "samcli.commands.init.interactive_init_flow.RUNTIME_TO_DEPENDENCY_MANAGERS": {
  "data": {
   "shadows": "samcli.local.common.runtime_template.RUNTIME_TO_DEPENDENCY_MANAGERS"
  },
  "type": "import"
 },
 "samcli.commands.init.interactive_init_flow.SchemasApiException": {
  "data": {
   "shadows": "samcli.commands.exceptions.SchemasApiException"
  },
  "type": "import"
 },
 "samcli.commands.init.interactive_init_flow.WaiterError": {
  "data": {
   "shadows": "botocore.exceptions.WaiterError"
  },
  "type": "import"
 },
 "samcli.commands.init.interactive_init_flow._generate_from_app_template": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "_get_dependency_manager",
    "_get_runtime",
    "_get_schema_template_details",
    "_package_schemas_code",
    "samcli.commands.init.init_generator.do_generate",
    "samcli.commands.init.init_templates.InitTemplates",
    "samcli.commands.init.interactive_event_bridge_flow.get_schemas_api_caller",
    "samcli.commands.init.interactive_event_bridge_flow.get_schemas_template_parameter",
    "samcli.commands.init.interactive_init_flow.click",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.interactive_init_flow._generate_from_location": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "samcli.commands.init.init_generator.do_generate",
    "samcli.commands.init.interactive_init_flow.click",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.interactive_init_flow._get_dependency_manager": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "map",
    "range",
    "samcli.commands.init.interactive_init_flow.click",
    "samcli.local.common.runtime_template.RUNTIME_TO_DEPENDENCY_MANAGERS.get",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.interactive_init_flow._get_runtime": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "map",
    "range",
    "samcli.commands.init.interactive_init_flow.click",
    "samcli.local.common.runtime_template.INIT_RUNTIMES",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.interactive_init_flow._get_schema_template_details": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "botocore.exceptions.ClientError",
    "samcli.commands.exceptions.SchemasApiException",
    "samcli.commands.init.interactive_event_bridge_flow.get_schema_template_details"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.interactive_init_flow._package_schemas_code": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "botocore.exceptions.ClientError",
    "botocore.exceptions.WaiterError",
    "samcli.commands.exceptions.SchemasApiException",
    "samcli.commands.init.interactive_init_flow.click",
    "samcli.commands.init.interactive_init_flow.tempfile",
    "samcli.lib.schemas.schemas_code_manager.do_download_source_code_binding",
    "samcli.lib.schemas.schemas_code_manager.do_extract_and_merge_schemas_code",
    "samcli.lib.utils.osutils.remove"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.interactive_init_flow.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.commands.init.interactive_init_flow.do_download_source_code_binding": {
  "data": {
   "shadows": "samcli.lib.schemas.schemas_code_manager.do_download_source_code_binding"
  },
  "type": "import"
 },
 "samcli.commands.init.interactive_init_flow.do_extract_and_merge_schemas_code": {
  "data": {
   "shadows": "samcli.lib.schemas.schemas_code_manager.do_extract_and_merge_schemas_code"
  },
  "type": "import"
 },
 "samcli.commands.init.interactive_init_flow.do_generate": {
  "data": {
   "shadows": "samcli.commands.init.init_generator.do_generate"
  },
  "type": "import"
 },
 "samcli.commands.init.interactive_init_flow.do_interactive": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "_generate_from_app_template",
    "_generate_from_location",
    "samcli.commands.init.interactive_init_flow.click"
   ]
  },
  "type": "function"
 },
 "samcli.commands.init.interactive_init_flow.get_schema_template_details": {
  "data": {
   "shadows": "samcli.commands.init.interactive_event_bridge_flow.get_schema_template_details"
  },
  "type": "import"
 },
 "samcli.commands.init.interactive_init_flow.get_schemas_api_caller": {
  "data": {
   "shadows": "samcli.commands.init.interactive_event_bridge_flow.get_schemas_api_caller"
  },
  "type": "import"
 },
 "samcli.commands.init.interactive_init_flow.get_schemas_template_parameter": {
  "data": {
   "shadows": "samcli.commands.init.interactive_event_bridge_flow.get_schemas_template_parameter"
  },
  "type": "import"
 },
 "samcli.commands.init.interactive_init_flow.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.commands.init.interactive_init_flow.remove": {
  "data": {
   "shadows": "samcli.lib.utils.osutils.remove"
  },
  "type": "import"
 },
 "samcli.commands.init.interactive_init_flow.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "samcli.commands.init.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "samcli.commands.init.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.commands.init.pass_context": {
  "data": {
   "shadows": "samcli.cli.main.pass_context"
  },
  "type": "import"
 },
 "samcli.commands.init.track_command": {
  "data": {
   "shadows": "samcli.lib.telemetry.metrics.track_command"
  },
  "type": "import"
 },
 "samcli.commands.local": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.local.cli_common": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.local.cli_common.invoke_context": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.local.cli_common.invoke_context.ContainerManager": {
  "data": {
   "shadows": "samcli.local.docker.manager.ContainerManager"
  },
  "type": "import"
 },
 "samcli.commands.local.cli_common.invoke_context.DebugContext": {
  "data": {
   "shadows": "samcli.commands.local.lib.debug_context.DebugContext"
  },
  "type": "import"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext.__enter__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "InvokeContextException",
    "samcli.lib.providers.sam_function_provider.SamFunctionProvider"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext.__exit__": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext.__init__": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext._get_container_manager": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "samcli.local.docker.manager.ContainerManager",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext._get_debug_context": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "DebugContextException",
    "OSError",
    "pathlib.Path",
    "samcli.commands.local.cli_common.invoke_context.errno",
    "samcli.commands.local.lib.debug_context.DebugContext",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext._get_env_vars_value": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "Exception",
    "InvokeContextException",
    "open",
    "samcli.commands.local.cli_common.invoke_context.json",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext._get_template_data": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "InvokeContextException",
    "samcli.commands._utils.template.TemplateFailedParsingException",
    "samcli.commands._utils.template.TemplateNotFoundException",
    "samcli.commands._utils.template.get_template_data",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext._is_debugging": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext._setup_log_file": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "open",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext.function_name": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "InvokeContextException",
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext.get_cwd": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "samcli.commands.local.cli_common.invoke_context.os"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext.local_lambda_runner": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "property",
    "samcli.commands.local.lib.local_lambda.LocalLambdaRunner",
    "samcli.local.docker.lambda_image.LambdaImage",
    "samcli.local.lambdafn.runtime.LambdaRuntime",
    "samcli.local.layers.layer_downloader.LayerDownloader"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext.parameter_overrides": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext.stderr": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "property",
    "samcli.lib.utils.osutils.stderr",
    "samcli.lib.utils.stream_writer.StreamWriter"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext.stdout": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "property",
    "samcli.lib.utils.osutils.stdout",
    "samcli.lib.utils.stream_writer.StreamWriter"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext.template": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.LambdaImage": {
  "data": {
   "shadows": "samcli.local.docker.lambda_image.LambdaImage"
  },
  "type": "import"
 },
 "samcli.commands.local.cli_common.invoke_context.LambdaRuntime": {
  "data": {
   "shadows": "samcli.local.lambdafn.runtime.LambdaRuntime"
  },
  "type": "import"
 },
 "samcli.commands.local.cli_common.invoke_context.LayerDownloader": {
  "data": {
   "shadows": "samcli.local.layers.layer_downloader.LayerDownloader"
  },
  "type": "import"
 },
 "samcli.commands.local.cli_common.invoke_context.LocalLambdaRunner": {
  "data": {
   "shadows": "samcli.commands.local.lib.local_lambda.LocalLambdaRunner"
  },
  "type": "import"
 },
 "samcli.commands.local.cli_common.invoke_context.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "samcli.commands.local.cli_common.invoke_context.SamFunctionProvider": {
  "data": {
   "shadows": "samcli.lib.providers.sam_function_provider.SamFunctionProvider"
  },
  "type": "import"
 },
 "samcli.commands.local.cli_common.invoke_context.StreamWriter": {
  "data": {
   "shadows": "samcli.lib.utils.stream_writer.StreamWriter"
  },
  "type": "import"
 },
 "samcli.commands.local.cli_common.invoke_context.TemplateFailedParsingException": {
  "data": {
   "shadows": "samcli.commands._utils.template.TemplateFailedParsingException"
  },
  "type": "import"
 },
 "samcli.commands.local.cli_common.invoke_context.TemplateNotFoundException": {
  "data": {
   "shadows": "samcli.commands._utils.template.TemplateNotFoundException"
  },
  "type": "import"
 },
 "samcli.commands.local.cli_common.invoke_context.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "samcli.commands.local.cli_common.invoke_context.get_template_data": {
  "data": {
   "shadows": "samcli.commands._utils.template.get_template_data"
  },
  "type": "import"
 },
 "samcli.commands.local.cli_common.invoke_context.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "samcli.commands.local.cli_common.invoke_context.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.commands.local.cli_common.invoke_context.osutils": {
  "data": {
   "shadows": "samcli.lib.utils.osutils"
  },
  "type": "import"
 },
 "samcli.commands.local.cli_common.options": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.local.cli_common.options.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "samcli.commands.local.cli_common.options.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.commands.local.cli_common.options.docker_click_options": {
  "data": {
   "shadows": "samcli.commands._utils.options.docker_click_options"
  },
  "type": "import"
 },
 "samcli.commands.local.cli_common.options.get_application_dir": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pathlib.Path",
    "samcli.commands.local.cli_common.options.click"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.cli_common.options.get_default_layer_cache_dir": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "samcli.commands.local.cli_common.options.get_application_dir",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.cli_common.options.invoke_common_options": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "option",
    "reversed",
    "samcli.commands._utils.options.docker_click_options",
    "samcli.commands._utils.options.parameter_override_click_option",
    "samcli.commands._utils.options.template_click_option",
    "samcli.commands.local.cli_common.options.click",
    "samcli.commands.local.cli_common.options.get_default_layer_cache_dir"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.cli_common.options.parameter_override_click_option": {
  "data": {
   "shadows": "samcli.commands._utils.options.parameter_override_click_option"
  },
  "type": "import"
 },
 "samcli.commands.local.cli_common.options.service_common_options": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "samcli.commands.local.cli_common.options.service_common_options.construct_options": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "option",
    "reversed",
    "samcli.commands.local.cli_common.options.click",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.cli_common.options.template_click_option": {
  "data": {
   "shadows": "samcli.commands._utils.options.template_click_option"
  },
  "type": "import"
 },
 "samcli.commands.local.cli_common.user_exceptions": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.local.cli_common.user_exceptions.CredentialsRequired": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.local.cli_common.user_exceptions.DebugContextException": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.local.cli_common.user_exceptions.ImageBuildException": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.local.cli_common.user_exceptions.InvalidLayerVersionArn": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.local.cli_common.user_exceptions.InvalidSamTemplateException": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.local.cli_common.user_exceptions.InvokeContextException": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.local.cli_common.user_exceptions.NotAvailableInRegion": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.local.cli_common.user_exceptions.ResourceNotFound": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.local.cli_common.user_exceptions.SamTemplateNotFoundException": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.local.cli_common.user_exceptions.UnsupportedIntrinsic": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.local.cli_common.user_exceptions.UserException": {
  "data": {
   "shadows": "samcli.commands.exceptions.UserException"
  },
  "type": "import"
 },
 "samcli.commands.local.generate_event": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.local.generate_event.cli": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.local.generate_event.cli.GenerateEventCommand": {
  "data": {
   "shadows": "samcli.commands.local.generate_event.event_generation.GenerateEventCommand"
  },
  "type": "import"
 },
 "samcli.commands.local.generate_event.cli.HELP_TEXT": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "samcli.commands.local.generate_event.cli.cli": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "samcli.cli.main.pass_context",
    "samcli.commands.local.generate_event.cli.HELP_TEXT",
    "samcli.commands.local.generate_event.cli.click",
    "samcli.commands.local.generate_event.event_generation.GenerateEventCommand"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.generate_event.cli.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.commands.local.generate_event.cli.pass_context": {
  "data": {
   "shadows": "samcli.cli.main.pass_context"
  },
  "type": "import"
 },
 "samcli.commands.local.generate_event.event_generation": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.local.generate_event.event_generation.EventTypeSubCommand": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "samcli.commands.local.generate_event.event_generation.click"
   ]
  },
  "type": "class"
 },
 "samcli.commands.local.generate_event.event_generation.EventTypeSubCommand.__init__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "samcli.commands.local.generate_event.event_generation.EventTypeSubCommand",
    "super"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.generate_event.event_generation.EventTypeSubCommand.cmd_implementation": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "samcli.commands.local.generate_event.event_generation.click",
    "samcli.lib.telemetry.metrics.track_command"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.generate_event.event_generation.EventTypeSubCommand.get_command": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "samcli.cli.cli_config_file.TomlProvider",
    "samcli.cli.cli_config_file.configuration_option",
    "samcli.cli.options.debug_option",
    "samcli.commands.local.generate_event.event_generation.click",
    "samcli.commands.local.generate_event.event_generation.functools"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.generate_event.event_generation.EventTypeSubCommand.list_commands": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.generate_event.event_generation.GenerateEventCommand": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "samcli.commands.local.generate_event.event_generation.ServiceCommand"
   ]
  },
  "type": "class"
 },
 "samcli.commands.local.generate_event.event_generation.GenerateEventCommand.__init__": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "samcli.commands.local.generate_event.event_generation.GenerateEventCommand",
    "samcli.lib.generated_sample_events.events.Events",
    "super"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.generate_event.event_generation.ServiceCommand": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "samcli.commands.local.generate_event.event_generation.click"
   ]
  },
  "type": "class"
 },
 "samcli.commands.local.generate_event.event_generation.ServiceCommand.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "samcli.commands.local.generate_event.event_generation.ServiceCommand",
    "super"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.generate_event.event_generation.ServiceCommand.get_command": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "EventTypeSubCommand"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.generate_event.event_generation.ServiceCommand.list_commands": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.generate_event.event_generation.TomlProvider": {
  "data": {
   "shadows": "samcli.cli.cli_config_file.TomlProvider"
  },
  "type": "import"
 },
 "samcli.commands.local.generate_event.event_generation.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.commands.local.generate_event.event_generation.configuration_option": {
  "data": {
   "shadows": "samcli.cli.cli_config_file.configuration_option"
  },
  "type": "import"
 },
 "samcli.commands.local.generate_event.event_generation.debug_option": {
  "data": {
   "shadows": "samcli.cli.options.debug_option"
  },
  "type": "import"
 },
 "samcli.commands.local.generate_event.event_generation.events": {
  "data": {
   "shadows": "samcli.lib.generated_sample_events.events"
  },
  "type": "import"
 },
 "samcli.commands.local.generate_event.event_generation.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "samcli.commands.local.generate_event.event_generation.get_ctx_defaults": {
  "data": {
   "shadows": "samcli.cli.cli_config_file.get_ctx_defaults"
  },
  "type": "import"
 },
 "samcli.commands.local.generate_event.event_generation.samconfig": {
  "data": {
   "shadows": "samcli.lib.config.samconfig"
  },
  "type": "import"
 },
 "samcli.commands.local.generate_event.event_generation.track_command": {
  "data": {
   "shadows": "samcli.lib.telemetry.metrics.track_command"
  },
  "type": "import"
 },
 "samcli.commands.local.invoke": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.local.invoke.cli": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.commands.local.invoke.cli.logging"
   ]
  },
  "type": "module"
 },
 "samcli.commands.local.invoke.cli.DebuggingNotSupported": {
  "data": {
   "shadows": "samcli.local.docker.lambda_debug_settings.DebuggingNotSupported"
  },
  "type": "import"
 },
 "samcli.commands.local.invoke.cli.DockerImagePullFailedException": {
  "data": {
   "shadows": "samcli.local.docker.manager.DockerImagePullFailedException"
  },
  "type": "import"
 },
 "samcli.commands.local.invoke.cli.FunctionNotFound": {
  "data": {
   "shadows": "samcli.local.lambdafn.exceptions.FunctionNotFound"
  },
  "type": "import"
 },
 "samcli.commands.local.invoke.cli.HELP_TEXT": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "samcli.commands.local.invoke.cli.InvalidLayerReference": {
  "data": {
   "shadows": "samcli.lib.providers.exceptions.InvalidLayerReference"
  },
  "type": "import"
 },
 "samcli.commands.local.invoke.cli.InvalidSamDocumentException": {
  "data": {
   "shadows": "samcli.commands.validate.lib.exceptions.InvalidSamDocumentException"
  },
  "type": "import"
 },
 "samcli.commands.local.invoke.cli.InvokeContext": {
  "data": {
   "shadows": "samcli.commands.local.cli_common.invoke_context.InvokeContext"
  },
  "type": "import"
 },
 "samcli.commands.local.invoke.cli.LOG": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "samcli.commands.local.invoke.cli.NoPrivilegeException": {
  "data": {
   "shadows": "samcli.commands.local.lib.exceptions.NoPrivilegeException"
  },
  "type": "import"
 },
 "samcli.commands.local.invoke.cli.OverridesNotWellDefinedError": {
  "data": {
   "shadows": "samcli.commands.local.lib.exceptions.OverridesNotWellDefinedError"
  },
  "type": "import"
 },
 "samcli.commands.local.invoke.cli.STDIN_FILE_NAME": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "samcli.commands.local.invoke.cli.TomlProvider": {
  "data": {
   "shadows": "samcli.cli.cli_config_file.TomlProvider"
  },
  "type": "import"
 },
 "samcli.commands.local.invoke.cli.UserException": {
  "data": {
   "shadows": "samcli.commands.exceptions.UserException"
  },
  "type": "import"
 },
 "samcli.commands.local.invoke.cli._get_event": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "samcli.commands.local.invoke.cli.LOG",
    "samcli.commands.local.invoke.cli.STDIN_FILE_NAME",
    "samcli.commands.local.invoke.cli.click"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.invoke.cli.aws_creds_options": {
  "data": {
   "shadows": "samcli.cli.main.aws_creds_options"
  },
  "type": "import"
 },
 "samcli.commands.local.invoke.cli.cli": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "do_cli",
    "samcli.cli.cli_config_file.TomlProvider",
    "samcli.cli.cli_config_file.configuration_option",
    "samcli.cli.main.aws_creds_options",
    "samcli.cli.main.common_options",
    "samcli.cli.main.pass_context",
    "samcli.commands.local.cli_common.options.invoke_common_options",
    "samcli.commands.local.invoke.cli.HELP_TEXT",
    "samcli.commands.local.invoke.cli.click",
    "samcli.lib.telemetry.metrics.track_command"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.invoke.cli.cli_framework_options": {
  "data": {
   "shadows": "samcli.cli.main.common_options"
  },
  "type": "import"
 },
 "samcli.commands.local.invoke.cli.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.commands.local.invoke.cli.configuration_option": {
  "data": {
   "shadows": "samcli.cli.cli_config_file.configuration_option"
  },
  "type": "import"
 },
 "samcli.commands.local.invoke.cli.do_cli": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "_get_event",
    "samcli.commands.exceptions.UserException",
    "samcli.commands.local.cli_common.invoke_context.InvokeContext",
    "samcli.commands.local.invoke.cli.LOG",
    "samcli.commands.local.lib.exceptions.NoPrivilegeException",
    "samcli.commands.local.lib.exceptions.OverridesNotWellDefinedError",
    "samcli.commands.validate.lib.exceptions.InvalidSamDocumentException",
    "samcli.lib.providers.exceptions.InvalidLayerReference",
    "samcli.local.docker.lambda_debug_settings.DebuggingNotSupported",
    "samcli.local.docker.manager.DockerImagePullFailedException",
    "samcli.local.lambdafn.exceptions.FunctionNotFound",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.invoke.cli.invoke_common_options": {
  "data": {
   "shadows": "samcli.commands.local.cli_common.options.invoke_common_options"
  },
  "type": "import"
 },
 "samcli.commands.local.invoke.cli.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.commands.local.invoke.cli.pass_context": {
  "data": {
   "shadows": "samcli.cli.main.pass_context"
  },
  "type": "import"
 },
 "samcli.commands.local.invoke.cli.track_command": {
  "data": {
   "shadows": "samcli.lib.telemetry.metrics.track_command"
  },
  "type": "import"
 },
 "samcli.commands.local.lib": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.local.lib.debug_context": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.local.lib.debug_context.DebugContext": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "samcli.commands.local.lib.debug_context.DebugContext.__bool__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.lib.debug_context.DebugContext.__init__": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "samcli.commands.local.lib.debug_context.DebugContext.__nonzero__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "samcli.commands.local.lib.exceptions": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.local.lib.exceptions.NoApisDefined": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "samcli.commands.local.lib.exceptions.NoPrivilegeException": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "samcli.commands.local.lib.exceptions.OverridesNotWellDefinedError": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "samcli.commands.local.lib.local_api_service": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.commands.local.lib.local_api_service.logging"
   ]
  },
  "type": "module"
 },
 "samcli.commands.local.lib.local_api_service.ApiProvider": {
  "data": {
   "shadows": "samcli.lib.providers.api_provider.ApiProvider"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.local_api_service.LOG": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "samcli.commands.local.lib.local_api_service.LocalApiService": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "samcli.commands.local.lib.local_api_service.LocalApiService.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "samcli.lib.providers.api_provider.ApiProvider"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.lib.local_api_service.LocalApiService._make_static_dir_path": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "samcli.commands.local.lib.local_api_service.LOG",
    "samcli.commands.local.lib.local_api_service.os",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.lib.local_api_service.LocalApiService._print_routes": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "samcli.commands.local.lib.local_api_service.LOG",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.lib.local_api_service.LocalApiService.start": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "samcli.commands.local.lib.exceptions.NoApisDefined",
    "samcli.commands.local.lib.local_api_service.LOG",
    "samcli.local.apigw.local_apigw_service.LocalApigwService"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.lib.local_api_service.LocalApigwService": {
  "data": {
   "shadows": "samcli.local.apigw.local_apigw_service.LocalApigwService"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.local_api_service.NoApisDefined": {
  "data": {
   "shadows": "samcli.commands.local.lib.exceptions.NoApisDefined"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.local_api_service.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.local_api_service.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.local_lambda": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.commands.local.lib.local_lambda.logging"
   ]
  },
  "type": "module"
 },
 "samcli.commands.local.lib.local_lambda.ContainerResponseException": {
  "data": {
   "shadows": "samcli.local.docker.container.ContainerResponseException"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.local_lambda.EnvironmentVariables": {
  "data": {
   "shadows": "samcli.local.lambdafn.env_vars.EnvironmentVariables"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.local_lambda.FunctionConfig": {
  "data": {
   "shadows": "samcli.local.lambdafn.config.FunctionConfig"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.local_lambda.FunctionNotFound": {
  "data": {
   "shadows": "samcli.local.lambdafn.exceptions.FunctionNotFound"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.local_lambda.InvokeContextException": {
  "data": {
   "shadows": "samcli.commands.local.cli_common.user_exceptions.InvokeContextException"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.local_lambda.LOG": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "samcli.commands.local.lib.local_lambda.LocalLambdaRunner": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "samcli.commands.local.lib.local_lambda.LocalLambdaRunner.__init__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "samcli.commands.local.lib.local_lambda.LocalLambdaRunner._get_invoke_config": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "samcli.commands.local.lib.local_lambda.LOG",
    "samcli.lib.utils.codeuri.resolve_code_path",
    "samcli.local.lambdafn.config.FunctionConfig"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.lib.local_lambda.LocalLambdaRunner._get_session_creds": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "hasattr",
    "samcli.commands.local.lib.local_lambda.LOG",
    "samcli.commands.local.lib.local_lambda.boto3"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.lib.local_lambda.LocalLambdaRunner._make_env_vars": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "samcli.commands.local.lib.exceptions.OverridesNotWellDefinedError",
    "samcli.commands.local.lib.local_lambda.LOG",
    "samcli.commands.local.lib.local_lambda.os",
    "samcli.local.lambdafn.env_vars.EnvironmentVariables"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.lib.local_lambda.LocalLambdaRunner.get_aws_creds": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.lib.local_lambda.LocalLambdaRunner.invoke": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "OSError",
    "hasattr",
    "samcli.commands.local.cli_common.user_exceptions.InvokeContextException",
    "samcli.commands.local.lib.exceptions.NoPrivilegeException",
    "samcli.commands.local.lib.local_lambda.LOG",
    "samcli.local.docker.container.ContainerResponseException",
    "samcli.local.lambdafn.exceptions.FunctionNotFound"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.lib.local_lambda.LocalLambdaRunner.is_debugging": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.lib.local_lambda.NoPrivilegeException": {
  "data": {
   "shadows": "samcli.commands.local.lib.exceptions.NoPrivilegeException"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.local_lambda.OverridesNotWellDefinedError": {
  "data": {
   "shadows": "samcli.commands.local.lib.exceptions.OverridesNotWellDefinedError"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.local_lambda.boto3": {
  "data": {
   "shadows": "boto3"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.local_lambda.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.local_lambda.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.local_lambda.resolve_code_path": {
  "data": {
   "shadows": "samcli.lib.utils.codeuri.resolve_code_path"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.local_lambda_service": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.commands.local.lib.local_lambda_service.logging"
   ]
  },
  "type": "module"
 },
 "samcli.commands.local.lib.local_lambda_service.LOG": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "samcli.commands.local.lib.local_lambda_service.LocalLambdaInvokeService": {
  "data": {
   "shadows": "samcli.local.lambda_service.local_lambda_invoke_service.LocalLambdaInvokeService"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.local_lambda_service.LocalLambdaService": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "samcli.commands.local.lib.local_lambda_service.LocalLambdaService.__init__": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "samcli.commands.local.lib.local_lambda_service.LocalLambdaService.start": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "samcli.commands.local.lib.local_lambda_service.LOG",
    "samcli.local.lambda_service.local_lambda_invoke_service.LocalLambdaInvokeService"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.lib.local_lambda_service.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.swagger": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.local.lib.swagger.integration_uri": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.commands.local.lib.swagger.integration_uri.logging"
   ]
  },
  "type": "module"
 },
 "samcli.commands.local.lib.swagger.integration_uri.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.swagger.integration_uri.IntegrationType": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "samcli.commands.local.lib.swagger.integration_uri.LOG": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "samcli.commands.local.lib.swagger.integration_uri.LambdaUri": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "samcli.commands.local.lib.swagger.integration_uri.LambdaUri._get_function_arn": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "isinstance",
    "samcli.commands.local.lib.swagger.integration_uri.LOG",
    "samcli.commands.local.lib.swagger.integration_uri.LambdaUri",
    "samcli.commands.local.lib.swagger.integration_uri.re",
    "six.string_types",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.integration_uri.LambdaUri._get_function_name_from_arn": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "samcli.commands.local.lib.swagger.integration_uri.LOG",
    "samcli.commands.local.lib.swagger.integration_uri.LambdaUri",
    "samcli.commands.local.lib.swagger.integration_uri.re",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.integration_uri.LambdaUri._is_sub_intrinsic": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "samcli.commands.local.lib.swagger.integration_uri.LambdaUri",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.integration_uri.LambdaUri._resolve_fn_sub": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "samcli.commands.local.lib.swagger.integration_uri.LOG",
    "samcli.commands.local.lib.swagger.integration_uri.LambdaUri",
    "samcli.commands.local.lib.swagger.integration_uri.re",
    "six.string_types",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.integration_uri.LambdaUri.get_function_name": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "samcli.commands.local.lib.swagger.integration_uri.LOG",
    "samcli.commands.local.lib.swagger.integration_uri.LambdaUri",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.integration_uri.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.swagger.integration_uri.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.swagger.integration_uri.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.swagger.parser": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.commands.local.lib.swagger.parser.logging"
   ]
  },
  "type": "module"
 },
 "samcli.commands.local.lib.swagger.parser.IntegrationType": {
  "data": {
   "shadows": "samcli.commands.local.lib.swagger.integration_uri.IntegrationType"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.swagger.parser.LOG": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "samcli.commands.local.lib.swagger.parser.LambdaUri": {
  "data": {
   "shadows": "samcli.commands.local.lib.swagger.integration_uri.LambdaUri"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.swagger.parser.Route": {
  "data": {
   "shadows": "samcli.local.apigw.local_apigw_service.Route"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.swagger.parser.SwaggerParser": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "samcli.commands.local.lib.swagger.parser.SwaggerParser.__init__": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.parser.SwaggerParser._get_integration_function_name": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "samcli.commands.local.lib.swagger.integration_uri.IntegrationType.aws_proxy.value",
    "samcli.commands.local.lib.swagger.integration_uri.LambdaUri.get_function_name"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.parser.SwaggerParser.get_binary_media_types": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.parser.SwaggerParser.get_routes": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "samcli.commands.local.lib.swagger.parser.LOG",
    "samcli.local.apigw.local_apigw_service.Route"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.parser.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.swagger.reader": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.commands.local.lib.swagger.reader.logging"
   ]
  },
  "type": "module"
 },
 "samcli.commands.local.lib.swagger.reader.LOG": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "samcli.commands.local.lib.swagger.reader.SwaggerReader": {
  "data": {
   "lineno": 62
  },
  "type": "class"
 },
 "samcli.commands.local.lib.swagger.reader.SwaggerReader.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.reader.SwaggerReader._download_from_s3": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "samcli.commands.local.lib.swagger.reader.LOG",
    "samcli.commands.local.lib.swagger.reader.boto3",
    "samcli.commands.local.lib.swagger.reader.botocore",
    "samcli.commands.local.lib.swagger.reader.tempfile",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.reader.SwaggerReader._download_swagger": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "isinstance",
    "open",
    "samcli.commands.local.lib.swagger.reader.LOG",
    "samcli.commands.local.lib.swagger.reader.os",
    "samcli.yamlhelper.yaml_parse",
    "six.string_types"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.reader.SwaggerReader._parse_s3_location": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "six.moves.urllib.parse.parse_qs",
    "six.moves.urllib.parse.urlparse",
    "six.string_types",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.reader.SwaggerReader._read_from_definition_body": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "samcli.commands.local.lib.swagger.reader.LOG",
    "samcli.commands.local.lib.swagger.reader.parse_aws_include_transform"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.reader.SwaggerReader.read": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.reader._FN_TRANSFORM": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "samcli.commands.local.lib.swagger.reader.boto3": {
  "data": {
   "shadows": "boto3"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.swagger.reader.botocore": {
  "data": {
   "shadows": "botocore"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.swagger.reader.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.swagger.reader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.swagger.reader.parse_aws_include_transform": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "samcli.commands.local.lib.swagger.reader.LOG",
    "samcli.commands.local.lib.swagger.reader._FN_TRANSFORM"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.reader.parse_qs": {
  "data": {
   "shadows": "six.moves.urllib.parse.parse_qs"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.swagger.reader.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.swagger.reader.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.swagger.reader.urlparse": {
  "data": {
   "shadows": "six.moves.urllib.parse.urlparse"
  },
  "type": "import"
 },
 "samcli.commands.local.lib.swagger.reader.yaml_parse": {
  "data": {
   "shadows": "samcli.yamlhelper.yaml_parse"
  },
  "type": "import"
 },
 "samcli.commands.local.local": {
  "data": {
   "symbols_in_volume": [
    "samcli.commands.local.local.cli"
   ]
  },
  "type": "module"
 },
 "samcli.commands.local.local.cli": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "samcli.commands.local.local.click"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.local.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.commands.local.local.generate_event_cli": {
  "data": {
   "shadows": "cli"
  },
  "type": "import"
 },
 "samcli.commands.local.local.invoke_cli": {
  "data": {
   "shadows": "cli"
  },
  "type": "import"
 },
 "samcli.commands.local.local.start_api_cli": {
  "data": {
   "shadows": "cli"
  },
  "type": "import"
 },
 "samcli.commands.local.local.start_lambda_cli": {
  "data": {
   "shadows": "cli"
  },
  "type": "import"
 },
 "samcli.commands.local.start_api": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.local.start_api.cli": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.commands.local.start_api.cli.logging"
   ]
  },
  "type": "module"
 },
 "samcli.commands.local.start_api.cli.DebuggingNotSupported": {
  "data": {
   "shadows": "samcli.local.docker.lambda_debug_settings.DebuggingNotSupported"
  },
  "type": "import"
 },
 "samcli.commands.local.start_api.cli.HELP_TEXT": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "samcli.commands.local.start_api.cli.InvalidLayerReference": {
  "data": {
   "shadows": "samcli.lib.providers.exceptions.InvalidLayerReference"
  },
  "type": "import"
 },
 "samcli.commands.local.start_api.cli.InvalidSamDocumentException": {
  "data": {
   "shadows": "samcli.commands.validate.lib.exceptions.InvalidSamDocumentException"
  },
  "type": "import"
 },
 "samcli.commands.local.start_api.cli.InvokeContext": {
  "data": {
   "shadows": "samcli.commands.local.cli_common.invoke_context.InvokeContext"
  },
  "type": "import"
 },
 "samcli.commands.local.start_api.cli.LOG": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "samcli.commands.local.start_api.cli.LocalApiService": {
  "data": {
   "shadows": "samcli.commands.local.lib.local_api_service.LocalApiService"
  },
  "type": "import"
 },
 "samcli.commands.local.start_api.cli.NoApisDefined": {
  "data": {
   "shadows": "samcli.commands.local.lib.exceptions.NoApisDefined"
  },
  "type": "import"
 },
 "samcli.commands.local.start_api.cli.OverridesNotWellDefinedError": {
  "data": {
   "shadows": "samcli.commands.local.lib.exceptions.OverridesNotWellDefinedError"
  },
  "type": "import"
 },
 "samcli.commands.local.start_api.cli.TomlProvider": {
  "data": {
   "shadows": "samcli.cli.cli_config_file.TomlProvider"
  },
  "type": "import"
 },
 "samcli.commands.local.start_api.cli.UserException": {
  "data": {
   "shadows": "samcli.commands.exceptions.UserException"
  },
  "type": "import"
 },
 "samcli.commands.local.start_api.cli.aws_creds_options": {
  "data": {
   "shadows": "samcli.cli.main.aws_creds_options"
  },
  "type": "import"
 },
 "samcli.commands.local.start_api.cli.cli": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "do_cli",
    "samcli.cli.cli_config_file.TomlProvider",
    "samcli.cli.cli_config_file.configuration_option",
    "samcli.cli.main.aws_creds_options",
    "samcli.cli.main.common_options",
    "samcli.cli.main.pass_context",
    "samcli.commands.local.cli_common.options.invoke_common_options",
    "samcli.commands.local.cli_common.options.service_common_options",
    "samcli.commands.local.start_api.cli.HELP_TEXT",
    "samcli.commands.local.start_api.cli.click",
    "samcli.lib.telemetry.metrics.track_command"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.start_api.cli.cli_framework_options": {
  "data": {
   "shadows": "samcli.cli.main.common_options"
  },
  "type": "import"
 },
 "samcli.commands.local.start_api.cli.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.commands.local.start_api.cli.configuration_option": {
  "data": {
   "shadows": "samcli.cli.cli_config_file.configuration_option"
  },
  "type": "import"
 },
 "samcli.commands.local.start_api.cli.do_cli": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException",
    "samcli.commands.local.cli_common.invoke_context.InvokeContext",
    "samcli.commands.local.lib.exceptions.NoApisDefined",
    "samcli.commands.local.lib.exceptions.OverridesNotWellDefinedError",
    "samcli.commands.local.lib.local_api_service.LocalApiService",
    "samcli.commands.local.start_api.cli.LOG",
    "samcli.commands.validate.lib.exceptions.InvalidSamDocumentException",
    "samcli.lib.providers.exceptions.InvalidLayerReference",
    "samcli.local.docker.lambda_debug_settings.DebuggingNotSupported",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.start_api.cli.invoke_common_options": {
  "data": {
   "shadows": "samcli.commands.local.cli_common.options.invoke_common_options"
  },
  "type": "import"
 },
 "samcli.commands.local.start_api.cli.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.commands.local.start_api.cli.pass_context": {
  "data": {
   "shadows": "samcli.cli.main.pass_context"
  },
  "type": "import"
 },
 "samcli.commands.local.start_api.cli.service_common_options": {
  "data": {
   "shadows": "samcli.commands.local.cli_common.options.service_common_options"
  },
  "type": "import"
 },
 "samcli.commands.local.start_api.cli.track_command": {
  "data": {
   "shadows": "samcli.lib.telemetry.metrics.track_command"
  },
  "type": "import"
 },
 "samcli.commands.local.start_lambda": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.local.start_lambda.cli": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.commands.local.start_lambda.cli.logging"
   ]
  },
  "type": "module"
 },
 "samcli.commands.local.start_lambda.cli.DebuggingNotSupported": {
  "data": {
   "shadows": "samcli.local.docker.lambda_debug_settings.DebuggingNotSupported"
  },
  "type": "import"
 },
 "samcli.commands.local.start_lambda.cli.HELP_TEXT": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "samcli.commands.local.start_lambda.cli.InvalidLayerReference": {
  "data": {
   "shadows": "samcli.lib.providers.exceptions.InvalidLayerReference"
  },
  "type": "import"
 },
 "samcli.commands.local.start_lambda.cli.InvalidSamDocumentException": {
  "data": {
   "shadows": "samcli.commands.validate.lib.exceptions.InvalidSamDocumentException"
  },
  "type": "import"
 },
 "samcli.commands.local.start_lambda.cli.InvokeContext": {
  "data": {
   "shadows": "samcli.commands.local.cli_common.invoke_context.InvokeContext"
  },
  "type": "import"
 },
 "samcli.commands.local.start_lambda.cli.LOG": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "samcli.commands.local.start_lambda.cli.LocalLambdaService": {
  "data": {
   "shadows": "samcli.commands.local.lib.local_lambda_service.LocalLambdaService"
  },
  "type": "import"
 },
 "samcli.commands.local.start_lambda.cli.OverridesNotWellDefinedError": {
  "data": {
   "shadows": "samcli.commands.local.lib.exceptions.OverridesNotWellDefinedError"
  },
  "type": "import"
 },
 "samcli.commands.local.start_lambda.cli.TomlProvider": {
  "data": {
   "shadows": "samcli.cli.cli_config_file.TomlProvider"
  },
  "type": "import"
 },
 "samcli.commands.local.start_lambda.cli.UserException": {
  "data": {
   "shadows": "samcli.commands.local.cli_common.user_exceptions.UserException"
  },
  "type": "import"
 },
 "samcli.commands.local.start_lambda.cli.aws_creds_options": {
  "data": {
   "shadows": "samcli.cli.main.aws_creds_options"
  },
  "type": "import"
 },
 "samcli.commands.local.start_lambda.cli.cli": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "do_cli",
    "samcli.cli.cli_config_file.TomlProvider",
    "samcli.cli.cli_config_file.configuration_option",
    "samcli.cli.main.aws_creds_options",
    "samcli.cli.main.common_options",
    "samcli.cli.main.pass_context",
    "samcli.commands.local.cli_common.options.invoke_common_options",
    "samcli.commands.local.cli_common.options.service_common_options",
    "samcli.commands.local.start_lambda.cli.HELP_TEXT",
    "samcli.commands.local.start_lambda.cli.click",
    "samcli.lib.telemetry.metrics.track_command"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.start_lambda.cli.cli_framework_options": {
  "data": {
   "shadows": "samcli.cli.main.common_options"
  },
  "type": "import"
 },
 "samcli.commands.local.start_lambda.cli.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.commands.local.start_lambda.cli.configuration_option": {
  "data": {
   "shadows": "samcli.cli.cli_config_file.configuration_option"
  },
  "type": "import"
 },
 "samcli.commands.local.start_lambda.cli.do_cli": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "samcli.commands.local.cli_common.invoke_context.InvokeContext",
    "samcli.commands.local.cli_common.user_exceptions.UserException",
    "samcli.commands.local.lib.exceptions.OverridesNotWellDefinedError",
    "samcli.commands.local.lib.local_lambda_service.LocalLambdaService",
    "samcli.commands.local.start_lambda.cli.LOG",
    "samcli.commands.validate.lib.exceptions.InvalidSamDocumentException",
    "samcli.lib.providers.exceptions.InvalidLayerReference",
    "samcli.local.docker.lambda_debug_settings.DebuggingNotSupported",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands.local.start_lambda.cli.invoke_common_options": {
  "data": {
   "shadows": "samcli.commands.local.cli_common.options.invoke_common_options"
  },
  "type": "import"
 },
 "samcli.commands.local.start_lambda.cli.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.commands.local.start_lambda.cli.pass_context": {
  "data": {
   "shadows": "samcli.cli.main.pass_context"
  },
  "type": "import"
 },
 "samcli.commands.local.start_lambda.cli.service_common_options": {
  "data": {
   "shadows": "samcli.commands.local.cli_common.options.service_common_options"
  },
  "type": "import"
 },
 "samcli.commands.local.start_lambda.cli.track_command": {
  "data": {
   "shadows": "samcli.lib.telemetry.metrics.track_command"
  },
  "type": "import"
 },
 "samcli.commands.logs": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.logs.command": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.commands.logs.command.logging"
   ]
  },
  "type": "module"
 },
 "samcli.commands.logs.command.HELP_TEXT": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "samcli.commands.logs.command.LOG": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "samcli.commands.logs.command.TomlProvider": {
  "data": {
   "shadows": "samcli.cli.cli_config_file.TomlProvider"
  },
  "type": "import"
 },
 "samcli.commands.logs.command.aws_creds_options": {
  "data": {
   "shadows": "samcli.cli.main.aws_creds_options"
  },
  "type": "import"
 },
 "samcli.commands.logs.command.cli": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "do_cli",
    "filter",
    "samcli.cli.cli_config_file.TomlProvider",
    "samcli.cli.cli_config_file.configuration_option",
    "samcli.cli.main.aws_creds_options",
    "samcli.cli.main.common_options",
    "samcli.cli.main.pass_context",
    "samcli.commands.logs.command.HELP_TEXT",
    "samcli.commands.logs.command.click",
    "samcli.lib.telemetry.metrics.track_command"
   ]
  },
  "type": "function"
 },
 "samcli.commands.logs.command.cli_framework_options": {
  "data": {
   "shadows": "samcli.cli.main.common_options"
  },
  "type": "import"
 },
 "samcli.commands.logs.command.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.commands.logs.command.configuration_option": {
  "data": {
   "shadows": "samcli.cli.cli_config_file.configuration_option"
  },
  "type": "import"
 },
 "samcli.commands.logs.command.do_cli": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "LogsCommandContext",
    "samcli.commands.logs.command.LOG",
    "samcli.commands.logs.command.click"
   ]
  },
  "type": "function"
 },
 "samcli.commands.logs.command.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.commands.logs.command.pass_context": {
  "data": {
   "shadows": "samcli.cli.main.pass_context"
  },
  "type": "import"
 },
 "samcli.commands.logs.command.track_command": {
  "data": {
   "shadows": "samcli.lib.telemetry.metrics.track_command"
  },
  "type": "import"
 },
 "samcli.commands.logs.logs_context": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.commands.logs.logs_context.logging"
   ]
  },
  "type": "module"
 },
 "samcli.commands.logs.logs_context.Colored": {
  "data": {
   "shadows": "samcli.lib.utils.colors.Colored"
  },
  "type": "import"
 },
 "samcli.commands.logs.logs_context.InvalidTimestampError": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.logs.logs_context.JSONMsgFormatter": {
  "data": {
   "shadows": "samcli.lib.logs.formatter.JSONMsgFormatter"
  },
  "type": "import"
 },
 "samcli.commands.logs.logs_context.KeywordHighlighter": {
  "data": {
   "shadows": "samcli.lib.logs.formatter.KeywordHighlighter"
  },
  "type": "import"
 },
 "samcli.commands.logs.logs_context.LOG": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "samcli.commands.logs.logs_context.LambdaLogMsgFormatters": {
  "data": {
   "shadows": "samcli.lib.logs.formatter.LambdaLogMsgFormatters"
  },
  "type": "import"
 },
 "samcli.commands.logs.logs_context.LogGroupProvider": {
  "data": {
   "shadows": "samcli.lib.logs.provider.LogGroupProvider"
  },
  "type": "import"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext.__enter__": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext.__exit__": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "samcli.commands.logs.logs_context.boto3"
   ]
  },
  "type": "function"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext._get_resource_id_from_stack": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException",
    "samcli.commands.logs.logs_context.LOG",
    "samcli.commands.logs.logs_context.botocore",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext._parse_time": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "samcli.commands.logs.logs_context.InvalidTimestampError",
    "samcli.lib.utils.time.parse_date",
    "samcli.lib.utils.time.to_utc",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext._setup_output_file": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "open",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext.colored": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "property",
    "samcli.lib.utils.colors.Colored"
   ]
  },
  "type": "function"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext.end_time": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext.fetcher": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "property",
    "samcli.lib.logs.fetcher.LogsFetcher"
   ]
  },
  "type": "function"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext.filter_pattern": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext.formatter": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "property",
    "samcli.lib.logs.formatter.JSONMsgFormatter.format_json",
    "samcli.lib.logs.formatter.KeywordHighlighter",
    "samcli.lib.logs.formatter.LambdaLogMsgFormatters.colorize_errors",
    "samcli.lib.logs.formatter.LogsFormatter"
   ]
  },
  "type": "function"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext.log_group_name": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "property",
    "samcli.commands.logs.logs_context.LOG",
    "samcli.lib.logs.provider.LogGroupProvider.for_lambda_function"
   ]
  },
  "type": "function"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext.output_file_handle": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext.start_time": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.commands.logs.logs_context.LogsFetcher": {
  "data": {
   "shadows": "samcli.lib.logs.fetcher.LogsFetcher"
  },
  "type": "import"
 },
 "samcli.commands.logs.logs_context.LogsFormatter": {
  "data": {
   "shadows": "samcli.lib.logs.formatter.LogsFormatter"
  },
  "type": "import"
 },
 "samcli.commands.logs.logs_context.UserException": {
  "data": {
   "shadows": "samcli.commands.exceptions.UserException"
  },
  "type": "import"
 },
 "samcli.commands.logs.logs_context.boto3": {
  "data": {
   "shadows": "boto3"
  },
  "type": "import"
 },
 "samcli.commands.logs.logs_context.botocore": {
  "data": {
   "shadows": "botocore"
  },
  "type": "import"
 },
 "samcli.commands.logs.logs_context.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.commands.logs.logs_context.parse_date": {
  "data": {
   "shadows": "samcli.lib.utils.time.parse_date"
  },
  "type": "import"
 },
 "samcli.commands.logs.logs_context.to_utc": {
  "data": {
   "shadows": "samcli.lib.utils.time.to_utc"
  },
  "type": "import"
 },
 "samcli.commands.package": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.package.command": {
  "data": {
   "symbols_in_volume": [
    "samcli.commands.package.command.resources_and_properties_help_string"
   ]
  },
  "type": "module"
 },
 "samcli.commands.package.command.CodeDeployConditionWarning": {
  "data": {
   "shadows": "samcli.lib.warnings.sam_cli_warning.CodeDeployConditionWarning"
  },
  "type": "import"
 },
 "samcli.commands.package.command.CodeDeployWarning": {
  "data": {
   "shadows": "samcli.lib.warnings.sam_cli_warning.CodeDeployWarning"
  },
  "type": "import"
 },
 "samcli.commands.package.command.HELP_TEXT": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "samcli.commands.package.command.PackageContext": {
  "data": {
   "shadows": "samcli.commands.package.package_context.PackageContext"
  },
  "type": "import"
 },
 "samcli.commands.package.command.PackageResolveS3AndS3NotSetError": {
  "data": {
   "shadows": "samcli.commands.package.exceptions.PackageResolveS3AndS3NotSetError"
  },
  "type": "import"
 },
 "samcli.commands.package.command.PackageResolveS3AndS3SetError": {
  "data": {
   "shadows": "samcli.commands.package.exceptions.PackageResolveS3AndS3SetError"
  },
  "type": "import"
 },
 "samcli.commands.package.command.SHORT_HELP": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "samcli.commands.package.command.TomlProvider": {
  "data": {
   "shadows": "samcli.cli.cli_config_file.TomlProvider"
  },
  "type": "import"
 },
 "samcli.commands.package.command.aws_creds_options": {
  "data": {
   "shadows": "samcli.cli.main.aws_creds_options"
  },
  "type": "import"
 },
 "samcli.commands.package.command.cli": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "dict",
    "do_cli",
    "samcli.cli.cli_config_file.TomlProvider",
    "samcli.cli.cli_config_file.configuration_option",
    "samcli.cli.main.aws_creds_options",
    "samcli.cli.main.common_options",
    "samcli.cli.main.pass_context",
    "samcli.commands._utils.options.metadata_override_option",
    "samcli.commands._utils.options.no_progressbar_option",
    "samcli.commands._utils.options.template_click_option",
    "samcli.commands.package.command.HELP_TEXT",
    "samcli.commands.package.command.SHORT_HELP",
    "samcli.commands.package.command.click",
    "samcli.lib.telemetry.metrics.track_command",
    "samcli.lib.telemetry.metrics.track_template_warnings",
    "samcli.lib.warnings.sam_cli_warning.CodeDeployConditionWarning.__name__",
    "samcli.lib.warnings.sam_cli_warning.CodeDeployWarning.__name__"
   ]
  },
  "type": "function"
 },
 "samcli.commands.package.command.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.commands.package.command.common_options": {
  "data": {
   "shadows": "samcli.cli.main.common_options"
  },
  "type": "import"
 },
 "samcli.commands.package.command.configuration_option": {
  "data": {
   "shadows": "samcli.cli.cli_config_file.configuration_option"
  },
  "type": "import"
 },
 "samcli.commands.package.command.do_cli": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "bool",
    "samcli.commands.package.command.click",
    "samcli.commands.package.exceptions.PackageResolveS3AndS3NotSetError",
    "samcli.commands.package.exceptions.PackageResolveS3AndS3SetError",
    "samcli.commands.package.package_context.PackageContext",
    "samcli.lib.bootstrap.bootstrap.manage_stack"
   ]
  },
  "type": "function"
 },
 "samcli.commands.package.command.manage_stack": {
  "data": {
   "shadows": "samcli.lib.bootstrap.bootstrap.manage_stack"
  },
  "type": "import"
 },
 "samcli.commands.package.command.metadata_override_option": {
  "data": {
   "shadows": "samcli.commands._utils.options.metadata_override_option"
  },
  "type": "import"
 },
 "samcli.commands.package.command.no_progressbar_option": {
  "data": {
   "shadows": "samcli.commands._utils.options.no_progressbar_option"
  },
  "type": "import"
 },
 "samcli.commands.package.command.pass_context": {
  "data": {
   "shadows": "samcli.cli.main.pass_context"
  },
  "type": "import"
 },
 "samcli.commands.package.command.resources_and_properties_help_string": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "samcli.commands._utils.resources.resources_generator"
   ]
  },
  "type": "function"
 },
 "samcli.commands.package.command.resources_generator": {
  "data": {
   "shadows": "samcli.commands._utils.resources.resources_generator"
  },
  "type": "import"
 },
 "samcli.commands.package.command.template_click_option": {
  "data": {
   "shadows": "samcli.commands._utils.options.template_click_option"
  },
  "type": "import"
 },
 "samcli.commands.package.command.track_command": {
  "data": {
   "shadows": "samcli.lib.telemetry.metrics.track_command"
  },
  "type": "import"
 },
 "samcli.commands.package.command.track_template_warnings": {
  "data": {
   "shadows": "samcli.lib.telemetry.metrics.track_template_warnings"
  },
  "type": "import"
 },
 "samcli.commands.package.exceptions": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.package.exceptions.BucketNotSpecifiedError": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.package.exceptions.BucketNotSpecifiedError.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "samcli.commands.package.exceptions.BucketNotSpecifiedError",
    "super"
   ]
  },
  "type": "function"
 },
 "samcli.commands.package.exceptions.ExportFailedError": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.package.exceptions.ExportFailedError.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "samcli.commands.package.exceptions.ExportFailedError",
    "super"
   ]
  },
  "type": "function"
 },
 "samcli.commands.package.exceptions.InvalidLocalPathError": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.package.exceptions.InvalidLocalPathError.__init__": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "samcli.commands.package.exceptions.InvalidLocalPathError",
    "super"
   ]
  },
  "type": "function"
 },
 "samcli.commands.package.exceptions.InvalidTemplateUrlParameterError": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.package.exceptions.InvalidTemplateUrlParameterError.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "samcli.commands.package.exceptions.InvalidTemplateUrlParameterError",
    "super"
   ]
  },
  "type": "function"
 },
 "samcli.commands.package.exceptions.NoSuchBucketError": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.package.exceptions.NoSuchBucketError.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "samcli.commands.package.exceptions.NoSuchBucketError",
    "super"
   ]
  },
  "type": "function"
 },
 "samcli.commands.package.exceptions.PackageFailedError": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.package.exceptions.PackageFailedError.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "samcli.commands.package.exceptions.PackageFailedError",
    "super"
   ]
  },
  "type": "function"
 },
 "samcli.commands.package.exceptions.PackageResolveS3AndS3NotSetError": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.package.exceptions.PackageResolveS3AndS3NotSetError.__init__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "samcli.commands.package.exceptions.PackageResolveS3AndS3NotSetError",
    "super"
   ]
  },
  "type": "function"
 },
 "samcli.commands.package.exceptions.PackageResolveS3AndS3SetError": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "samcli.commands.exceptions.UserException"
   ]
  },
  "type": "class"
 },
 "samcli.commands.package.exceptions.PackageResolveS3AndS3SetError.__init__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "samcli.commands.package.exceptions.PackageResolveS3AndS3SetError",
    "super"
   ]
  },
  "type": "function"
 },
 "samcli.commands.package.exceptions.UserException": {
  "data": {
   "shadows": "samcli.commands.exceptions.UserException"
  },
  "type": "import"
 },
 "samcli.commands.package.package_context": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.commands.package.package_context.logging"
   ]
  },
  "type": "module"
 },
 "samcli.commands.package.package_context.Config": {
  "data": {
   "shadows": "botocore.config.Config"
  },
  "type": "import"
 },
 "samcli.commands.package.package_context.LOG": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "samcli.commands.package.package_context.PackageContext": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "samcli.commands.package.package_context.PackageContext.__enter__": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "samcli.commands.package.package_context.PackageContext.__exit__": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "samcli.commands.package.package_context.PackageContext.__init__": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "samcli.commands.package.package_context.PackageContext._export": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "samcli.commands.package.package_context.json",
    "samcli.commands.package.package_context.os",
    "samcli.lib.package.artifact_exporter.Template",
    "samcli.yamlhelper.yaml_dump"
   ]
  },
  "type": "function"
 },
 "samcli.commands.package.package_context.PackageContext.run": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "OSError",
    "samcli.commands.package.exceptions.PackageFailedError",
    "samcli.commands.package.package_context.boto3",
    "samcli.commands.package.package_context.click",
    "samcli.commands.package.package_context.os",
    "samcli.lib.package.s3_uploader.S3Uploader",
    "samcli.lib.utils.botoconfig.get_boto_config_with_user_agent",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands.package.package_context.PackageContext.write_output": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "open",
    "samcli.commands.package.package_context.click"
   ]
  },
  "type": "function"
 },
 "samcli.commands.package.package_context.PackageFailedError": {
  "data": {
   "shadows": "samcli.commands.package.exceptions.PackageFailedError"
  },
  "type": "import"
 },
 "samcli.commands.package.package_context.S3Uploader": {
  "data": {
   "shadows": "samcli.lib.package.s3_uploader.S3Uploader"
  },
  "type": "import"
 },
 "samcli.commands.package.package_context.Template": {
  "data": {
   "shadows": "samcli.lib.package.artifact_exporter.Template"
  },
  "type": "import"
 },
 "samcli.commands.package.package_context.boto3": {
  "data": {
   "shadows": "boto3"
  },
  "type": "import"
 },
 "samcli.commands.package.package_context.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.commands.package.package_context.get_boto_config_with_user_agent": {
  "data": {
   "shadows": "samcli.lib.utils.botoconfig.get_boto_config_with_user_agent"
  },
  "type": "import"
 },
 "samcli.commands.package.package_context.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "samcli.commands.package.package_context.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.commands.package.package_context.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.commands.package.package_context.yaml_dump": {
  "data": {
   "shadows": "samcli.yamlhelper.yaml_dump"
  },
  "type": "import"
 },
 "samcli.commands.publish": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.publish.command": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.commands.publish.command.SAM_PUBLISH_DOC",
    "samcli.commands.publish.command.logging"
   ]
  },
  "type": "module"
 },
 "samcli.commands.publish.command.CREATE_APPLICATION": {
  "data": {
   "shadows": "serverlessrepo.publish.CREATE_APPLICATION"
  },
  "type": "import"
 },
 "samcli.commands.publish.command.HELP_TEXT": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "samcli.commands.publish.command.InvalidS3UriError": {
  "data": {
   "shadows": "serverlessrepo.exceptions.InvalidS3UriError"
  },
  "type": "import"
 },
 "samcli.commands.publish.command.LOG": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "samcli.commands.publish.command.METADATA": {
  "data": {
   "shadows": "serverlessrepo.parser.METADATA"
  },
  "type": "import"
 },
 "samcli.commands.publish.command.SAM_PACKAGE_DOC": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "samcli.commands.publish.command.SAM_PUBLISH_DOC": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "samcli.commands.publish.command.SEMANTIC_VERSION": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "samcli.commands.publish.command.SEMANTIC_VERSION_HELP": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "samcli.commands.publish.command.SERVERLESSREPO_CONSOLE_URL": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "samcli.commands.publish.command.SERVERLESS_REPO_APPLICATION": {
  "data": {
   "shadows": "serverlessrepo.parser.SERVERLESS_REPO_APPLICATION"
  },
  "type": "import"
 },
 "samcli.commands.publish.command.SHORT_HELP": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "samcli.commands.publish.command.ServerlessRepoError": {
  "data": {
   "shadows": "serverlessrepo.exceptions.ServerlessRepoError"
  },
  "type": "import"
 },
 "samcli.commands.publish.command.TemplateFailedParsingException": {
  "data": {
   "shadows": "samcli.commands._utils.template.TemplateFailedParsingException"
  },
  "type": "import"
 },
 "samcli.commands.publish.command.TemplateNotFoundException": {
  "data": {
   "shadows": "samcli.commands._utils.template.TemplateNotFoundException"
  },
  "type": "import"
 },
 "samcli.commands.publish.command.TomlProvider": {
  "data": {
   "shadows": "samcli.cli.cli_config_file.TomlProvider"
  },
  "type": "import"
 },
 "samcli.commands.publish.command.UserException": {
  "data": {
   "shadows": "samcli.commands.exceptions.UserException"
  },
  "type": "import"
 },
 "samcli.commands.publish.command._gen_success_message": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "samcli.commands.publish.command.json",
    "serverlessrepo.publish.CREATE_APPLICATION"
   ]
  },
  "type": "function"
 },
 "samcli.commands.publish.command._print_console_link": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "samcli.commands.publish.command.SERVERLESSREPO_CONSOLE_URL",
    "samcli.commands.publish.command.boto3",
    "samcli.commands.publish.command.click"
   ]
  },
  "type": "function"
 },
 "samcli.commands.publish.command.aws_creds_options": {
  "data": {
   "shadows": "samcli.cli.main.aws_creds_options"
  },
  "type": "import"
 },
 "samcli.commands.publish.command.boto3": {
  "data": {
   "shadows": "boto3"
  },
  "type": "import"
 },
 "samcli.commands.publish.command.cli": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "do_cli",
    "samcli.cli.cli_config_file.TomlProvider",
    "samcli.cli.cli_config_file.configuration_option",
    "samcli.cli.main.aws_creds_options",
    "samcli.cli.main.common_options",
    "samcli.cli.main.pass_context",
    "samcli.commands._utils.options.template_common_option",
    "samcli.commands.publish.command.HELP_TEXT",
    "samcli.commands.publish.command.SEMANTIC_VERSION_HELP",
    "samcli.commands.publish.command.SHORT_HELP",
    "samcli.commands.publish.command.click",
    "samcli.lib.telemetry.metrics.track_command"
   ]
  },
  "type": "function"
 },
 "samcli.commands.publish.command.cli_framework_options": {
  "data": {
   "shadows": "samcli.cli.main.common_options"
  },
  "type": "import"
 },
 "samcli.commands.publish.command.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.commands.publish.command.configuration_option": {
  "data": {
   "shadows": "samcli.cli.cli_config_file.configuration_option"
  },
  "type": "import"
 },
 "samcli.commands.publish.command.do_cli": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "_gen_success_message",
    "_print_console_link",
    "samcli.commands._utils.template.TemplateFailedParsingException",
    "samcli.commands._utils.template.TemplateNotFoundException",
    "samcli.commands._utils.template.get_template_data",
    "samcli.commands.exceptions.UserException",
    "samcli.commands.publish.command.LOG",
    "samcli.commands.publish.command.SAM_PACKAGE_DOC",
    "samcli.commands.publish.command.SAM_PUBLISH_DOC",
    "samcli.commands.publish.command.SEMANTIC_VERSION",
    "samcli.commands.publish.command.click",
    "serverlessrepo.exceptions.InvalidS3UriError",
    "serverlessrepo.exceptions.ServerlessRepoError",
    "serverlessrepo.parser.METADATA",
    "serverlessrepo.parser.SERVERLESS_REPO_APPLICATION",
    "serverlessrepo.publish_application",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands.publish.command.get_template_data": {
  "data": {
   "shadows": "samcli.commands._utils.template.get_template_data"
  },
  "type": "import"
 },
 "samcli.commands.publish.command.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "samcli.commands.publish.command.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.commands.publish.command.pass_context": {
  "data": {
   "shadows": "samcli.cli.main.pass_context"
  },
  "type": "import"
 },
 "samcli.commands.publish.command.publish_application": {
  "data": {
   "shadows": "serverlessrepo.publish_application"
  },
  "type": "import"
 },
 "samcli.commands.publish.command.template_common_option": {
  "data": {
   "shadows": "samcli.commands._utils.options.template_common_option"
  },
  "type": "import"
 },
 "samcli.commands.publish.command.track_command": {
  "data": {
   "shadows": "samcli.lib.telemetry.metrics.track_command"
  },
  "type": "import"
 },
 "samcli.commands.validate": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.validate.lib": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.validate.lib.exceptions": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.validate.lib.exceptions.InvalidSamDocumentException": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "samcli.commands.validate.lib.sam_template_validator": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.commands.validate.lib.sam_template_validator.logging"
   ]
  },
  "type": "module"
 },
 "samcli.commands.validate.lib.sam_template_validator.InvalidDocumentException": {
  "data": {
   "shadows": "samtranslator.public.exceptions.InvalidDocumentException"
  },
  "type": "import"
 },
 "samcli.commands.validate.lib.sam_template_validator.LOG": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "samcli.commands.validate.lib.sam_template_validator.SamTemplateValidator": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "samcli.commands.validate.lib.sam_template_validator.SamTemplateValidator.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "samtranslator.parser.parser.Parser"
   ]
  },
  "type": "function"
 },
 "samcli.commands.validate.lib.sam_template_validator.SamTemplateValidator._replace_local_codeuri": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "samcli.commands.validate.lib.sam_template_validator.SamTemplateValidator"
   ]
  },
  "type": "function"
 },
 "samcli.commands.validate.lib.sam_template_validator.SamTemplateValidator._update_to_s3_uri": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "samcli.commands.validate.lib.sam_template_validator.SamTemplateValidator",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.commands.validate.lib.sam_template_validator.SamTemplateValidator.is_s3_uri": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "isinstance",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands.validate.lib.sam_template_validator.SamTemplateValidator.is_valid": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "InvalidSamDocumentException",
    "samcli.commands.validate.lib.sam_template_validator.LOG",
    "samcli.commands.validate.lib.sam_template_validator.functools",
    "samcli.yamlhelper.yaml_dump",
    "samtranslator.public.exceptions.InvalidDocumentException",
    "samtranslator.translator.translator.Translator",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands.validate.lib.sam_template_validator.Translator": {
  "data": {
   "shadows": "samtranslator.translator.translator.Translator"
  },
  "type": "import"
 },
 "samcli.commands.validate.lib.sam_template_validator.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "samcli.commands.validate.lib.sam_template_validator.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.commands.validate.lib.sam_template_validator.parser": {
  "data": {
   "shadows": "samtranslator.parser.parser"
  },
  "type": "import"
 },
 "samcli.commands.validate.lib.sam_template_validator.yaml_dump": {
  "data": {
   "shadows": "samcli.yamlhelper.yaml_dump"
  },
  "type": "import"
 },
 "samcli.commands.validate.validate": {
  "data": {},
  "type": "module"
 },
 "samcli.commands.validate.validate.InvalidSamTemplateException": {
  "data": {
   "shadows": "samcli.commands.local.cli_common.user_exceptions.InvalidSamTemplateException"
  },
  "type": "import"
 },
 "samcli.commands.validate.validate.ManagedPolicyLoader": {
  "data": {
   "shadows": "samtranslator.translator.managed_policy_translator.ManagedPolicyLoader"
  },
  "type": "import"
 },
 "samcli.commands.validate.validate.NoCredentialsError": {
  "data": {
   "shadows": "botocore.exceptions.NoCredentialsError"
  },
  "type": "import"
 },
 "samcli.commands.validate.validate.SamTemplateNotFoundException": {
  "data": {
   "shadows": "samcli.commands.local.cli_common.user_exceptions.SamTemplateNotFoundException"
  },
  "type": "import"
 },
 "samcli.commands.validate.validate.TomlProvider": {
  "data": {
   "shadows": "samcli.cli.cli_config_file.TomlProvider"
  },
  "type": "import"
 },
 "samcli.commands.validate.validate.UserException": {
  "data": {
   "shadows": "samcli.commands.exceptions.UserException"
  },
  "type": "import"
 },
 "samcli.commands.validate.validate._read_sam_file": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "samcli.commands.local.cli_common.user_exceptions.SamTemplateNotFoundException",
    "samcli.commands.validate.validate.click",
    "samcli.commands.validate.validate.os",
    "samcli.yamlhelper.yaml_parse"
   ]
  },
  "type": "function"
 },
 "samcli.commands.validate.validate.aws_creds_options": {
  "data": {
   "shadows": "samcli.cli.main.aws_creds_options"
  },
  "type": "import"
 },
 "samcli.commands.validate.validate.boto3": {
  "data": {
   "shadows": "boto3"
  },
  "type": "import"
 },
 "samcli.commands.validate.validate.cli": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "do_cli",
    "samcli.cli.cli_config_file.TomlProvider",
    "samcli.cli.cli_config_file.configuration_option",
    "samcli.cli.main.aws_creds_options",
    "samcli.cli.main.common_options",
    "samcli.cli.main.pass_context",
    "samcli.commands._utils.options.template_option_without_build",
    "samcli.commands.validate.validate.click",
    "samcli.lib.telemetry.metrics.track_command"
   ]
  },
  "type": "function"
 },
 "samcli.commands.validate.validate.cli_framework_options": {
  "data": {
   "shadows": "samcli.cli.main.common_options"
  },
  "type": "import"
 },
 "samcli.commands.validate.validate.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.commands.validate.validate.configuration_option": {
  "data": {
   "shadows": "samcli.cli.cli_config_file.configuration_option"
  },
  "type": "import"
 },
 "samcli.commands.validate.validate.do_cli": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "SamTemplateValidator",
    "_read_sam_file",
    "botocore.exceptions.NoCredentialsError",
    "samcli.commands.exceptions.UserException",
    "samcli.commands.local.cli_common.user_exceptions.InvalidSamTemplateException",
    "samcli.commands.validate.validate.boto3",
    "samcli.commands.validate.validate.click",
    "samtranslator.translator.managed_policy_translator.ManagedPolicyLoader",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.commands.validate.validate.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.commands.validate.validate.pass_context": {
  "data": {
   "shadows": "samcli.cli.main.pass_context"
  },
  "type": "import"
 },
 "samcli.commands.validate.validate.template_option_without_build": {
  "data": {
   "shadows": "samcli.commands._utils.options.template_option_without_build"
  },
  "type": "import"
 },
 "samcli.commands.validate.validate.track_command": {
  "data": {
   "shadows": "samcli.lib.telemetry.metrics.track_command"
  },
  "type": "import"
 },
 "samcli.commands.validate.validate.yaml_parse": {
  "data": {
   "shadows": "samcli.yamlhelper.yaml_parse"
  },
  "type": "import"
 },
 "samcli.lib": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.bootstrap": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.bootstrap.bootstrap": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.lib.bootstrap.bootstrap.logging"
   ]
  },
  "type": "module"
 },
 "samcli.lib.bootstrap.bootstrap.BotoCoreError": {
  "data": {
   "shadows": "botocore.exceptions.BotoCoreError"
  },
  "type": "import"
 },
 "samcli.lib.bootstrap.bootstrap.ClientError": {
  "data": {
   "shadows": "botocore.exceptions.ClientError"
  },
  "type": "import"
 },
 "samcli.lib.bootstrap.bootstrap.Config": {
  "data": {
   "shadows": "botocore.config.Config"
  },
  "type": "import"
 },
 "samcli.lib.bootstrap.bootstrap.CredentialsError": {
  "data": {
   "shadows": "samcli.commands.exceptions.CredentialsError"
  },
  "type": "import"
 },
 "samcli.lib.bootstrap.bootstrap.GlobalConfig": {
  "data": {
   "shadows": "samcli.cli.global_config.GlobalConfig"
  },
  "type": "import"
 },
 "samcli.lib.bootstrap.bootstrap.LOG": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "samcli.lib.bootstrap.bootstrap.ManagedStackError": {
  "data": {
   "shadows": "samcli.commands.bootstrap.exceptions.ManagedStackError"
  },
  "type": "import"
 },
 "samcli.lib.bootstrap.bootstrap.NoCredentialsError": {
  "data": {
   "shadows": "botocore.exceptions.NoCredentialsError"
  },
  "type": "import"
 },
 "samcli.lib.bootstrap.bootstrap.NoRegionError": {
  "data": {
   "shadows": "botocore.exceptions.NoRegionError"
  },
  "type": "import"
 },
 "samcli.lib.bootstrap.bootstrap.RegionError": {
  "data": {
   "shadows": "samcli.commands.exceptions.RegionError"
  },
  "type": "import"
 },
 "samcli.lib.bootstrap.bootstrap.SAM_CLI_STACK_NAME": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "samcli.lib.bootstrap.bootstrap.UserException": {
  "data": {
   "shadows": "samcli.commands.exceptions.UserException"
  },
  "type": "import"
 },
 "samcli.lib.bootstrap.bootstrap.__version__": {
  "data": {
   "shadows": "samcli.__version__"
  },
  "type": "import"
 },
 "samcli.lib.bootstrap.bootstrap._check_sanity_of_stack": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "StopIteration",
    "next",
    "samcli.commands.exceptions.UserException",
    "samcli.lib.bootstrap.bootstrap.SAM_CLI_STACK_NAME"
   ]
  },
  "type": "function"
 },
 "samcli.lib.bootstrap.bootstrap._create_or_get_stack": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "StopIteration",
    "_check_sanity_of_stack",
    "_create_stack",
    "botocore.exceptions.BotoCoreError",
    "botocore.exceptions.ClientError",
    "next",
    "samcli.commands.bootstrap.exceptions.ManagedStackError",
    "samcli.commands.exceptions.UserException",
    "samcli.lib.bootstrap.bootstrap.LOG",
    "samcli.lib.bootstrap.bootstrap.SAM_CLI_STACK_NAME",
    "samcli.lib.bootstrap.bootstrap.click",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.bootstrap.bootstrap._create_stack": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "_get_stack_template",
    "samcli.lib.bootstrap.bootstrap.SAM_CLI_STACK_NAME",
    "samcli.lib.bootstrap.bootstrap.click"
   ]
  },
  "type": "function"
 },
 "samcli.lib.bootstrap.bootstrap._get_stack_template": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "samcli.__version__",
    "samcli.cli.global_config.GlobalConfig",
    "samcli.lib.bootstrap.bootstrap.json"
   ]
  },
  "type": "function"
 },
 "samcli.lib.bootstrap.bootstrap.boto3": {
  "data": {
   "shadows": "boto3"
  },
  "type": "import"
 },
 "samcli.lib.bootstrap.bootstrap.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.lib.bootstrap.bootstrap.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "samcli.lib.bootstrap.bootstrap.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.lib.bootstrap.bootstrap.manage_stack": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "_create_or_get_stack",
    "botocore.config.Config",
    "botocore.exceptions.NoCredentialsError",
    "botocore.exceptions.NoRegionError",
    "samcli.commands.exceptions.CredentialsError",
    "samcli.commands.exceptions.RegionError",
    "samcli.lib.bootstrap.bootstrap.boto3"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.build.app_builder": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.lib.build.app_builder.logging"
   ]
  },
  "type": "module"
 },
 "samcli.lib.build.app_builder.ApplicationBuilder": {
  "data": {
   "lineno": 50
  },
  "type": "class"
 },
 "samcli.lib.build.app_builder.ApplicationBuilder.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "samcli.lib.utils.colors.Colored"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.app_builder.ApplicationBuilder._build_function": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "build_method",
    "get_workflow_config",
    "samcli.lib.build.app_builder.ApplicationBuilder",
    "samcli.lib.build.app_builder.LOG",
    "samcli.lib.build.app_builder.os",
    "samcli.lib.build.app_builder.pathlib",
    "samcli.lib.utils.osutils.mkdir_temp",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.app_builder.ApplicationBuilder._build_function_in_process": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "aws_lambda_builders.builder.LambdaBuilder",
    "aws_lambda_builders.exceptions.LambdaBuilderError",
    "samcli.lib.build.app_builder.BuildError",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.app_builder.ApplicationBuilder._build_function_on_container": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "aws_lambda_builders.RPC_PROTOCOL_VERSION",
    "samcli.lib.build.app_builder.BuildInsideContainerError",
    "samcli.lib.build.app_builder.ContainerBuildNotSupported",
    "samcli.lib.build.app_builder.LOG",
    "samcli.lib.build.app_builder.UnsupportedBuilderLibraryVersionError",
    "samcli.lib.build.app_builder.docker",
    "samcli.lib.build.app_builder.io",
    "samcli.lib.utils.osutils.stderr",
    "samcli.local.docker.lambda_build_container.LambdaBuildContainer",
    "str",
    "supports_build_in_container"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.app_builder.ApplicationBuilder._build_functions": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "samcli.lib.build.app_builder.LOG",
    "samcli.lib.build.app_builder.pathlib",
    "samcli.lib.utils.osutils.copytree",
    "samcli.lib.utils.osutils.mkdir_temp",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.app_builder.ApplicationBuilder._build_layer": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "build_method",
    "get_layer_subfolder",
    "get_workflow_config",
    "samcli.lib.build.app_builder.ApplicationBuilder",
    "samcli.lib.build.app_builder.LOG",
    "samcli.lib.build.app_builder.os",
    "samcli.lib.build.app_builder.pathlib",
    "samcli.lib.utils.osutils.mkdir_temp",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.app_builder.ApplicationBuilder._get_build_graph": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "samcli.lib.build.build_graph.BuildDefinition",
    "samcli.lib.build.build_graph.BuildGraph"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.app_builder.ApplicationBuilder._get_build_options": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.app_builder.ApplicationBuilder._parse_builder_response": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "samcli.lib.build.app_builder.BuildInsideContainerError",
    "samcli.lib.build.app_builder.LOG",
    "samcli.lib.build.app_builder.UnsupportedBuilderLibraryVersionError",
    "samcli.lib.build.app_builder.json",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.app_builder.ApplicationBuilder.build": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "samcli.commands.build.exceptions.MissingBuildMethodException",
    "samcli.lib.build.app_builder.LOG"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.app_builder.ApplicationBuilder.update_template": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "samcli.lib.build.app_builder.os",
    "samcli.lib.providers.sam_base_provider.SamBaseProvider.LAMBDA_FUNCTION",
    "samcli.lib.providers.sam_base_provider.SamBaseProvider.LAMBDA_LAYER",
    "samcli.lib.providers.sam_base_provider.SamBaseProvider.SERVERLESS_FUNCTION",
    "samcli.lib.providers.sam_base_provider.SamBaseProvider.SERVERLESS_LAYER"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.app_builder.BuildDefinition": {
  "data": {
   "shadows": "samcli.lib.build.build_graph.BuildDefinition"
  },
  "type": "import"
 },
 "samcli.lib.build.app_builder.BuildError": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "samcli.lib.build.app_builder.BuildError.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "Exception.__init__"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.app_builder.BuildGraph": {
  "data": {
   "shadows": "samcli.lib.build.build_graph.BuildGraph"
  },
  "type": "import"
 },
 "samcli.lib.build.app_builder.BuildInsideContainerError": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "samcli.lib.build.app_builder.Colored": {
  "data": {
   "shadows": "samcli.lib.utils.colors.Colored"
  },
  "type": "import"
 },
 "samcli.lib.build.app_builder.ContainerBuildNotSupported": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "samcli.lib.build.app_builder.LOG": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "samcli.lib.build.app_builder.LambdaBuildContainer": {
  "data": {
   "shadows": "samcli.local.docker.lambda_build_container.LambdaBuildContainer"
  },
  "type": "import"
 },
 "samcli.lib.build.app_builder.LambdaBuilder": {
  "data": {
   "shadows": "aws_lambda_builders.builder.LambdaBuilder"
  },
  "type": "import"
 },
 "samcli.lib.build.app_builder.LambdaBuilderError": {
  "data": {
   "shadows": "aws_lambda_builders.exceptions.LambdaBuilderError"
  },
  "type": "import"
 },
 "samcli.lib.build.app_builder.MissingBuildMethodException": {
  "data": {
   "shadows": "samcli.commands.build.exceptions.MissingBuildMethodException"
  },
  "type": "import"
 },
 "samcli.lib.build.app_builder.SamBaseProvider": {
  "data": {
   "shadows": "samcli.lib.providers.sam_base_provider.SamBaseProvider"
  },
  "type": "import"
 },
 "samcli.lib.build.app_builder.UnsupportedBuilderLibraryVersionError": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "samcli.lib.build.app_builder.UnsupportedBuilderLibraryVersionError.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "Exception.__init__"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.app_builder.docker": {
  "data": {
   "shadows": "docker"
  },
  "type": "import"
 },
 "samcli.lib.build.app_builder.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "samcli.lib.build.app_builder.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "samcli.lib.build.app_builder.lambda_builders_protocol_version": {
  "data": {
   "shadows": "aws_lambda_builders.RPC_PROTOCOL_VERSION"
  },
  "type": "import"
 },
 "samcli.lib.build.app_builder.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.lib.build.app_builder.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.lib.build.app_builder.osutils": {
  "data": {
   "shadows": "samcli.lib.utils.osutils"
  },
  "type": "import"
 },
 "samcli.lib.build.app_builder.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "samcli.lib.build.build_graph": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.lib.build.build_graph.logging"
   ]
  },
  "type": "module"
 },
 "samcli.lib.build.build_graph.BuildDefinition": {
  "data": {
   "lineno": 156
  },
  "type": "class"
 },
 "samcli.lib.build.build_graph.BuildDefinition.__eq__": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "isinstance",
    "samcli.lib.build.build_graph.BuildDefinition"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.build_graph.BuildDefinition.__init__": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "str",
    "uuid.uuid4"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.build_graph.BuildDefinition.__str__": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "samcli.lib.build.build_graph.BuildDefinition._validate_functions": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "samcli.lib.build.build_graph.InvalidBuildGraphException"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.build_graph.BuildDefinition.add_function": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "samcli.lib.build.build_graph.BuildDefinition.get_function_name": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "samcli.lib.build.build_graph.BuildDefinition.get_handler_name": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "samcli.lib.build.build_graph.BuildGraph": {
  "data": {
   "lineno": 62
  },
  "type": "class"
 },
 "samcli.lib.build.build_graph.BuildGraph.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "pathlib.Path",
    "samcli.lib.build.build_graph.DEFAULT_BUILD_GRAPH_FILE_NAME"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.build_graph.BuildGraph._read": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "OSError",
    "samcli.lib.build.build_graph.BuildGraph",
    "samcli.lib.build.build_graph.LOG",
    "samcli.lib.build.build_graph._toml_table_to_build_definition",
    "samcli.lib.build.build_graph.tomlkit"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.build_graph.BuildGraph._write": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "open",
    "samcli.lib.build.build_graph.BuildGraph",
    "samcli.lib.build.build_graph._build_definition_to_toml_table",
    "samcli.lib.build.build_graph.tomlkit"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.build_graph.BuildGraph.clean_redundant_functions_and_update": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.build_graph.BuildGraph.get_build_definitions": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.build_graph.BuildGraph.put_build_definition": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "samcli.lib.build.build_graph.LOG"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.build_graph.CODE_URI_FIELD": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "samcli.lib.build.build_graph.DEFAULT_BUILD_GRAPH_FILE_NAME": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "samcli.lib.build.build_graph.FUNCTIONS_FIELD": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "samcli.lib.build.build_graph.InvalidBuildGraphException": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "samcli.lib.build.build_graph.InvalidBuildGraphException.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "Exception.__init__"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.build_graph.LOG": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "samcli.lib.build.build_graph.METADATA_FIELD": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "samcli.lib.build.build_graph.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "samcli.lib.build.build_graph.RUNTIME_FIELD": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "samcli.lib.build.build_graph._build_definition_to_toml_table": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "list",
    "map",
    "samcli.lib.build.build_graph.CODE_URI_FIELD",
    "samcli.lib.build.build_graph.FUNCTIONS_FIELD",
    "samcli.lib.build.build_graph.METADATA_FIELD",
    "samcli.lib.build.build_graph.RUNTIME_FIELD",
    "samcli.lib.build.build_graph.tomlkit"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.build_graph._toml_table_to_build_definition": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "BuildDefinition",
    "dict",
    "samcli.lib.build.build_graph.CODE_URI_FIELD",
    "samcli.lib.build.build_graph.METADATA_FIELD",
    "samcli.lib.build.build_graph.RUNTIME_FIELD"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.build_graph.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.lib.build.build_graph.tomlkit": {
  "data": {
   "shadows": "tomlkit"
  },
  "type": "import"
 },
 "samcli.lib.build.build_graph.uuid4": {
  "data": {
   "shadows": "uuid.uuid4"
  },
  "type": "import"
 },
 "samcli.lib.build.workflow_config": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "collections.namedtuple",
    "samcli.lib.build.workflow_config.CONFIG",
    "samcli.lib.build.workflow_config.logging"
   ]
  },
  "type": "module"
 },
 "samcli.lib.build.workflow_config.BasicWorkflowSelector": {
  "data": {
   "lineno": 280
  },
  "type": "class"
 },
 "samcli.lib.build.workflow_config.BasicWorkflowSelector.__init__": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.workflow_config.BasicWorkflowSelector.get_config": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "samcli.lib.build.workflow_config.CONFIG": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "samcli.lib.build.workflow_config.DOTNET_CLIPACKAGE_CONFIG": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "samcli.lib.build.workflow_config.GO_MOD_CONFIG": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "samcli.lib.build.workflow_config.JAVA_GRADLE_CONFIG": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "samcli.lib.build.workflow_config.JAVA_KOTLIN_GRADLE_CONFIG": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "samcli.lib.build.workflow_config.JAVA_MAVEN_CONFIG": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "samcli.lib.build.workflow_config.LOG": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "samcli.lib.build.workflow_config.ManifestWorkflowSelector": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "samcli.lib.build.workflow_config.BasicWorkflowSelector"
   ]
  },
  "type": "class"
 },
 "samcli.lib.build.workflow_config.ManifestWorkflowSelector._has_manifest": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "samcli.lib.build.workflow_config.os",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.workflow_config.ManifestWorkflowSelector.get_config": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "samcli.lib.build.workflow_config.LOG"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.workflow_config.NODEJS_NPM_CONFIG": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "samcli.lib.build.workflow_config.PROVIDED_MAKE_CONFIG": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "samcli.lib.build.workflow_config.PYTHON_PIP_CONFIG": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "samcli.lib.build.workflow_config.RUBY_BUNDLER_CONFIG": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "samcli.lib.build.workflow_config.UnsupportedBuilderException": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "samcli.lib.build.workflow_config.UnsupportedRuntimeException": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "samcli.lib.build.workflow_config.get_layer_subfolder": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "samcli.lib.build.workflow_config.UnsupportedRuntimeException"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.workflow_config.get_selector": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "StopIteration",
    "next",
    "samcli.lib.build.workflow_config.UnsupportedBuilderException"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.workflow_config.get_workflow_config": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "BasicWorkflowSelector",
    "ManifestWorkflowSelector",
    "ValueError",
    "samcli.lib.build.workflow_config.DOTNET_CLIPACKAGE_CONFIG",
    "samcli.lib.build.workflow_config.GO_MOD_CONFIG",
    "samcli.lib.build.workflow_config.JAVA_GRADLE_CONFIG",
    "samcli.lib.build.workflow_config.JAVA_KOTLIN_GRADLE_CONFIG",
    "samcli.lib.build.workflow_config.JAVA_MAVEN_CONFIG",
    "samcli.lib.build.workflow_config.NODEJS_NPM_CONFIG",
    "samcli.lib.build.workflow_config.PROVIDED_MAKE_CONFIG",
    "samcli.lib.build.workflow_config.PYTHON_PIP_CONFIG",
    "samcli.lib.build.workflow_config.RUBY_BUNDLER_CONFIG",
    "samcli.lib.build.workflow_config.UnsupportedRuntimeException",
    "samcli.lib.build.workflow_config.get_selector",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.workflow_config.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.lib.build.workflow_config.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "samcli.lib.build.workflow_config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.lib.build.workflow_config.supports_build_in_container": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "_key",
    "samcli.lib.build.workflow_config.DOTNET_CLIPACKAGE_CONFIG",
    "samcli.lib.build.workflow_config.GO_MOD_CONFIG"
   ]
  },
  "type": "function"
 },
 "samcli.lib.build.workflow_config.supports_build_in_container._key": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.config": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.config.exceptions": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.config.exceptions.SamConfigVersionException": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "samcli.lib.config.samconfig": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.lib.config.samconfig.logging"
   ]
  },
  "type": "module"
 },
 "samcli.lib.config.samconfig.DEFAULT_CONFIG_FILE_NAME": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "samcli.lib.config.samconfig.DEFAULT_ENV": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "samcli.lib.config.samconfig.LOG": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "samcli.lib.config.samconfig.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "samcli.lib.config.samconfig.SAM_CONFIG_VERSION": {
  "data": {
   "shadows": "samcli.lib.config.version.SAM_CONFIG_VERSION"
  },
  "type": "import"
 },
 "samcli.lib.config.samconfig.SamConfig": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "samcli.lib.config.samconfig.SamConfig.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pathlib.Path",
    "samcli.lib.config.samconfig.DEFAULT_CONFIG_FILE_NAME"
   ]
  },
  "type": "function"
 },
 "samcli.lib.config.samconfig.SamConfig._read": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "OSError",
    "samcli.lib.config.samconfig.tomlkit"
   ]
  },
  "type": "function"
 },
 "samcli.lib.config.samconfig.SamConfig._to_key": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.config.samconfig.SamConfig._version": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "samcli.lib.config.version.VERSION_KEY"
   ]
  },
  "type": "function"
 },
 "samcli.lib.config.samconfig.SamConfig._version_sanity_check": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "samcli.lib.config.exceptions.SamConfigVersionException",
    "samcli.lib.config.version.VERSION_KEY"
   ]
  },
  "type": "function"
 },
 "samcli.lib.config.samconfig.SamConfig._write": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "open",
    "samcli.lib.config.samconfig.tomlkit",
    "samcli.lib.config.version.SAM_CONFIG_VERSION",
    "samcli.lib.config.version.VERSION_KEY"
   ]
  },
  "type": "function"
 },
 "samcli.lib.config.samconfig.SamConfig.config_dir": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "samcli.lib.config.samconfig.os",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.config.samconfig.SamConfig.exists": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "samcli.lib.config.samconfig.SamConfig.flush": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "samcli.lib.config.samconfig.SamConfig.get_all": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "samcli.lib.config.samconfig.DEFAULT_ENV"
   ]
  },
  "type": "function"
 },
 "samcli.lib.config.samconfig.SamConfig.path": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.config.samconfig.SamConfig.put": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "samcli.lib.config.samconfig.DEFAULT_ENV"
   ]
  },
  "type": "function"
 },
 "samcli.lib.config.samconfig.SamConfig.sanity_check": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "samcli.lib.config.samconfig.tomlkit"
   ]
  },
  "type": "function"
 },
 "samcli.lib.config.samconfig.SamConfigVersionException": {
  "data": {
   "shadows": "samcli.lib.config.exceptions.SamConfigVersionException"
  },
  "type": "import"
 },
 "samcli.lib.config.samconfig.VERSION_KEY": {
  "data": {
   "shadows": "samcli.lib.config.version.VERSION_KEY"
  },
  "type": "import"
 },
 "samcli.lib.config.samconfig.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.lib.config.samconfig.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.lib.config.samconfig.tomlkit": {
  "data": {
   "shadows": "tomlkit"
  },
  "type": "import"
 },
 "samcli.lib.config.version": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.config.version.SAM_CONFIG_VERSION": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "samcli.lib.config.version.VERSION_KEY": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "samcli.lib.deploy": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.deploy.deployer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "collections.OrderedDict",
    "samcli.lib.deploy.deployer.logging"
   ]
  },
  "type": "module"
 },
 "samcli.lib.deploy.deployer.ChangeSetError": {
  "data": {
   "shadows": "samcli.commands.deploy.exceptions.ChangeSetError"
  },
  "type": "import"
 },
 "samcli.lib.deploy.deployer.DESCRIBE_CHANGESET_DEFAULT_ARGS": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "samcli.lib.deploy.deployer.DESCRIBE_CHANGESET_FORMAT_STRING": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "samcli.lib.deploy.deployer.DESCRIBE_CHANGESET_TABLE_HEADER_NAME": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "samcli.lib.deploy.deployer.DESCRIBE_STACK_EVENTS_DEFAULT_ARGS": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "samcli.lib.deploy.deployer.DESCRIBE_STACK_EVENTS_FORMAT_STRING": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "samcli.lib.deploy.deployer.DESCRIBE_STACK_EVENTS_TABLE_HEADER_NAME": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "samcli.lib.deploy.deployer.DeployBucketInDifferentRegionError": {
  "data": {
   "shadows": "samcli.commands.deploy.exceptions.DeployBucketInDifferentRegionError"
  },
  "type": "import"
 },
 "samcli.lib.deploy.deployer.DeployColor": {
  "data": {
   "shadows": "samcli.lib.deploy.utils.DeployColor"
  },
  "type": "import"
 },
 "samcli.lib.deploy.deployer.DeployFailedError": {
  "data": {
   "shadows": "samcli.commands.deploy.exceptions.DeployFailedError"
  },
  "type": "import"
 },
 "samcli.lib.deploy.deployer.DeployStackOutPutFailedError": {
  "data": {
   "shadows": "samcli.commands.deploy.exceptions.DeployStackOutPutFailedError"
  },
  "type": "import"
 },
 "samcli.lib.deploy.deployer.Deployer": {
  "data": {
   "lineno": 73
  },
  "type": "class"
 },
 "samcli.lib.deploy.deployer.Deployer.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "samcli.lib.deploy.utils.DeployColor"
   ]
  },
  "type": "function"
 },
 "samcli.lib.deploy.deployer.Deployer._check_stack_complete": {
  "data": {
   "lineno": 397
  },
  "type": "function"
 },
 "samcli.lib.deploy.deployer.Deployer._create_change_set": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "Exception",
    "samcli.commands.deploy.exceptions.ChangeSetError",
    "samcli.commands.deploy.exceptions.DeployBucketInDifferentRegionError",
    "samcli.lib.deploy.deployer.LOG",
    "samcli.lib.deploy.deployer.botocore",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.deploy.deployer.Deployer._display_stack_outputs": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "enumerate",
    "samcli.commands._utils.table_print.MIN_OFFSET",
    "samcli.commands._utils.table_print.newline_per_item",
    "samcli.commands._utils.table_print.pprint_column_names",
    "samcli.commands._utils.table_print.pprint_columns",
    "samcli.lib.deploy.deployer.OUTPUTS_DEFAULTS_ARGS",
    "samcli.lib.deploy.deployer.OUTPUTS_FORMAT_STRING",
    "samcli.lib.deploy.deployer.OUTPUTS_TABLE_HEADER_NAME"
   ]
  },
  "type": "function"
 },
 "samcli.lib.deploy.deployer.Deployer.create_and_wait_for_changeset": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "samcli.commands.deploy.exceptions.DeployFailedError",
    "samcli.lib.deploy.deployer.botocore",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.deploy.deployer.Deployer.create_changeset": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "datetime.datetime.utcnow",
    "int",
    "samcli.lib.deploy.deployer.time",
    "samcli.lib.package.artifact_exporter.mktempfile",
    "samcli.lib.package.artifact_exporter.parse_s3_url",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.deploy.deployer.Deployer.describe_changeset": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "samcli.commands._utils.table_print.pprint_column_names",
    "samcli.commands._utils.table_print.pprint_columns",
    "samcli.lib.deploy.deployer.DESCRIBE_CHANGESET_DEFAULT_ARGS",
    "samcli.lib.deploy.deployer.DESCRIBE_CHANGESET_FORMAT_STRING",
    "samcli.lib.deploy.deployer.DESCRIBE_CHANGESET_TABLE_HEADER_NAME"
   ]
  },
  "type": "function"
 },
 "samcli.lib.deploy.deployer.Deployer.describe_stack_events": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "events",
    "events.add",
    "max",
    "samcli.commands._utils.table_print.pprint_column_names",
    "samcli.commands._utils.table_print.pprint_columns",
    "samcli.lib.deploy.deployer.DESCRIBE_STACK_EVENTS_DEFAULT_ARGS",
    "samcli.lib.deploy.deployer.DESCRIBE_STACK_EVENTS_FORMAT_STRING",
    "samcli.lib.deploy.deployer.DESCRIBE_STACK_EVENTS_TABLE_HEADER_NAME",
    "samcli.lib.deploy.deployer.LOG",
    "samcli.lib.deploy.deployer.botocore",
    "samcli.lib.deploy.deployer.math",
    "samcli.lib.deploy.deployer.time",
    "samcli.lib.utils.time.utc_to_timestamp",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.deploy.deployer.Deployer.execute_changeset": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "samcli.commands.deploy.exceptions.DeployFailedError",
    "samcli.lib.deploy.deployer.botocore",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.deploy.deployer.Deployer.get_last_event_time": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "KeyError",
    "samcli.lib.deploy.deployer.time",
    "samcli.lib.utils.time.utc_to_timestamp"
   ]
  },
  "type": "function"
 },
 "samcli.lib.deploy.deployer.Deployer.get_stack_outputs": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "KeyError",
    "samcli.commands.deploy.exceptions.DeployStackOutPutFailedError",
    "samcli.lib.deploy.deployer.botocore",
    "samcli.lib.deploy.deployer.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.deploy.deployer.Deployer.has_stack": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "Exception",
    "samcli.commands.deploy.exceptions.DeployFailedError",
    "samcli.lib.deploy.deployer.LOG",
    "samcli.lib.deploy.deployer.botocore",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.deploy.deployer.Deployer.wait_for_changeset": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "samcli.commands.deploy.exceptions.ChangeEmptyError",
    "samcli.commands.deploy.exceptions.ChangeSetError",
    "samcli.lib.deploy.deployer.botocore",
    "samcli.lib.deploy.deployer.sys"
   ]
  },
  "type": "function"
 },
 "samcli.lib.deploy.deployer.Deployer.wait_for_execute": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "RuntimeError",
    "datetime.datetime.now",
    "samcli.commands.deploy.exceptions.DeployFailedError",
    "samcli.lib.deploy.deployer.LOG",
    "samcli.lib.deploy.deployer.botocore",
    "samcli.lib.deploy.deployer.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.deploy.deployer.LOG": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "samcli.lib.deploy.deployer.MIN_OFFSET": {
  "data": {
   "shadows": "samcli.commands._utils.table_print.MIN_OFFSET"
  },
  "type": "import"
 },
 "samcli.lib.deploy.deployer.OUTPUTS_DEFAULTS_ARGS": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "samcli.lib.deploy.deployer.OUTPUTS_FORMAT_STRING": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "samcli.lib.deploy.deployer.OUTPUTS_TABLE_HEADER_NAME": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "samcli.lib.deploy.deployer.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "samcli.lib.deploy.deployer.botocore": {
  "data": {
   "shadows": "botocore"
  },
  "type": "import"
 },
 "samcli.lib.deploy.deployer.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "samcli.lib.deploy.deployer.deploy_exceptions": {
  "data": {
   "shadows": "samcli.commands.deploy.exceptions"
  },
  "type": "import"
 },
 "samcli.lib.deploy.deployer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.lib.deploy.deployer.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "samcli.lib.deploy.deployer.mktempfile": {
  "data": {
   "shadows": "samcli.lib.package.artifact_exporter.mktempfile"
  },
  "type": "import"
 },
 "samcli.lib.deploy.deployer.newline_per_item": {
  "data": {
   "shadows": "samcli.commands._utils.table_print.newline_per_item"
  },
  "type": "import"
 },
 "samcli.lib.deploy.deployer.parse_s3_url": {
  "data": {
   "shadows": "samcli.lib.package.artifact_exporter.parse_s3_url"
  },
  "type": "import"
 },
 "samcli.lib.deploy.deployer.pprint_column_names": {
  "data": {
   "shadows": "samcli.commands._utils.table_print.pprint_column_names"
  },
  "type": "import"
 },
 "samcli.lib.deploy.deployer.pprint_columns": {
  "data": {
   "shadows": "samcli.commands._utils.table_print.pprint_columns"
  },
  "type": "import"
 },
 "samcli.lib.deploy.deployer.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "samcli.lib.deploy.deployer.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "samcli.lib.deploy.deployer.utc_to_timestamp": {
  "data": {
   "shadows": "samcli.lib.utils.time.utc_to_timestamp"
  },
  "type": "import"
 },
 "samcli.lib.deploy.utils": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.deploy.utils.Colored": {
  "data": {
   "shadows": "samcli.lib.utils.colors.Colored"
  },
  "type": "import"
 },
 "samcli.lib.deploy.utils.DeployColor": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "samcli.lib.deploy.utils.DeployColor.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "samcli.lib.utils.colors.Colored"
   ]
  },
  "type": "function"
 },
 "samcli.lib.deploy.utils.DeployColor.get_changeset_action_color": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "samcli.lib.deploy.utils.DeployColor.get_stack_events_status_color": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "samcli.lib.generated_sample_events": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.generated_sample_events.events": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.generated_sample_events.events.Events": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "samcli.lib.generated_sample_events.events.Events.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "open",
    "samcli.lib.generated_sample_events.events.json",
    "samcli.lib.generated_sample_events.events.os"
   ]
  },
  "type": "function"
 },
 "samcli.lib.generated_sample_events.events.Events.encode": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "requests.utils.quote",
    "samcli.lib.generated_sample_events.events.base64"
   ]
  },
  "type": "function"
 },
 "samcli.lib.generated_sample_events.events.Events.generate_event": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "chevron.renderer.render",
    "open",
    "samcli.lib.generated_sample_events.events.json",
    "samcli.lib.generated_sample_events.events.os"
   ]
  },
  "type": "function"
 },
 "samcli.lib.generated_sample_events.events.Events.hash": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ValueError",
    "samcli.lib.utils.hash.str_checksum"
   ]
  },
  "type": "function"
 },
 "samcli.lib.generated_sample_events.events.Events.transform": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "samcli.lib.generated_sample_events.events.Events.transform_val": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "samcli.lib.generated_sample_events.events.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "samcli.lib.generated_sample_events.events.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "samcli.lib.generated_sample_events.events.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.lib.generated_sample_events.events.renderer": {
  "data": {
   "shadows": "chevron.renderer"
  },
  "type": "import"
 },
 "samcli.lib.generated_sample_events.events.str_checksum": {
  "data": {
   "shadows": "samcli.lib.utils.hash.str_checksum"
  },
  "type": "import"
 },
 "samcli.lib.generated_sample_events.events.url_quote": {
  "data": {
   "shadows": "requests.utils.quote"
  },
  "type": "import"
 },
 "samcli.lib.init": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.lib.init.logging"
   ]
  },
  "type": "module"
 },
 "samcli.lib.init.CookiecutterException": {
  "data": {
   "shadows": "cookiecutter.exceptions.CookiecutterException"
  },
  "type": "import"
 },
 "samcli.lib.init.LOG": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "samcli.lib.init.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "samcli.lib.init.RUNTIME_DEP_TEMPLATE_MAPPING": {
  "data": {
   "shadows": "samcli.local.common.runtime_template.RUNTIME_DEP_TEMPLATE_MAPPING"
  },
  "type": "import"
 },
 "samcli.lib.init.RepositoryNotFound": {
  "data": {
   "shadows": "cookiecutter.exceptions.RepositoryNotFound"
  },
  "type": "import"
 },
 "samcli.lib.init.arbitrary_project": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.lib.init.arbitrary_project.logging"
   ]
  },
  "type": "module"
 },
 "samcli.lib.init.arbitrary_project.BAD_LOCATION_ERROR_MSG": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "samcli.lib.init.arbitrary_project.LOG": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "samcli.lib.init.arbitrary_project._download_and_copy": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "download_fn",
    "samcli.lib.init.arbitrary_project.shutil",
    "samcli.lib.utils.osutils.copytree",
    "samcli.lib.utils.osutils.mkdir_temp"
   ]
  },
  "type": "function"
 },
 "samcli.lib.init.arbitrary_project.config": {
  "data": {
   "shadows": "cookiecutter.config"
  },
  "type": "import"
 },
 "samcli.lib.init.arbitrary_project.exceptions": {
  "data": {
   "shadows": "cookiecutter.exceptions"
  },
  "type": "import"
 },
 "samcli.lib.init.arbitrary_project.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "samcli.lib.init.arbitrary_project.generate_non_cookiecutter_project": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ArbitraryProjectDownloadFailed",
    "_download_and_copy",
    "cookiecutter.config.BUILTIN_ABBREVIATIONS",
    "cookiecutter.exceptions.RepositoryNotFound",
    "cookiecutter.repository.clone",
    "cookiecutter.repository.expand_abbreviations",
    "cookiecutter.repository.is_repo_url",
    "cookiecutter.repository.is_zip_file",
    "cookiecutter.repository.unzip",
    "samcli.lib.init.arbitrary_project.BAD_LOCATION_ERROR_MSG",
    "samcli.lib.init.arbitrary_project.LOG",
    "samcli.lib.init.arbitrary_project.functools"
   ]
  },
  "type": "function"
 },
 "samcli.lib.init.arbitrary_project.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.lib.init.arbitrary_project.osutils": {
  "data": {
   "shadows": "samcli.lib.utils.osutils"
  },
  "type": "import"
 },
 "samcli.lib.init.arbitrary_project.repository": {
  "data": {
   "shadows": "cookiecutter.repository"
  },
  "type": "import"
 },
 "samcli.lib.init.arbitrary_project.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "samcli.lib.init.cookiecutter": {
  "data": {
   "shadows": "cookiecutter.main.cookiecutter"
  },
  "type": "import"
 },
 "samcli.lib.init.exceptions": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.init.exceptions.ArbitraryProjectDownloadFailed": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "samcli.lib.init.exceptions.InitErrorException"
   ]
  },
  "type": "class"
 },
 "samcli.lib.init.exceptions.GenerateProjectFailedError": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "samcli.lib.init.exceptions.InitErrorException"
   ]
  },
  "type": "class"
 },
 "samcli.lib.init.exceptions.InitErrorException": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "samcli.lib.init.exceptions.InitErrorException.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "Exception.__init__"
   ]
  },
  "type": "function"
 },
 "samcli.lib.init.generate_project": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "GenerateProjectFailedError",
    "any",
    "cookiecutter.exceptions.CookiecutterException",
    "cookiecutter.exceptions.RepositoryNotFound",
    "cookiecutter.main.cookiecutter",
    "generate_non_cookiecutter_project",
    "list",
    "pathlib.Path",
    "samcli.lib.init.LOG",
    "samcli.lib.init.itertools",
    "samcli.local.common.runtime_template.RUNTIME_DEP_TEMPLATE_MAPPING.values",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.init.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "samcli.lib.init.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-dotnet.tests.test_cookiecutter": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-dotnet.tests.test_cookiecutter.test_app_content": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-dotnet.tests.test_cookiecutter.test_project_tree": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-golang.tests.test_bake_project": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-golang.tests.test_bake_project.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-golang.tests.test_bake_project.inside_dir": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "samcli.lib.init.templates.cookiecutter-aws-sam-hello-golang.tests.test_bake_project.os"
   ]
  },
  "type": "function"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-golang.tests.test_bake_project.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-golang.tests.test_bake_project.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-golang.tests.test_bake_project.test_app_content": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-golang.tests.test_bake_project.test_app_template_content": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-golang.tests.test_bake_project.test_app_test_content": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-golang.tests.test_bake_project.test_project_tree": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-java-gradle.tests.test_cookiecutter": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-java-gradle.tests.test_cookiecutter.test_app_content": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-java-gradle.tests.test_cookiecutter.test_project_tree": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-java-maven.tests.test_cookiecutter": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-java-maven.tests.test_cookiecutter.test_app_content": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-java-maven.tests.test_cookiecutter.test_project_tree": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-python.{{cookiecutter.project_name}}.hello_world": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-python.{{cookiecutter.project_name}}.hello_world.app": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-python.{{cookiecutter.project_name}}.hello_world.app.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-python.{{cookiecutter.project_name}}.hello_world.app.lambda_handler": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "samcli.lib.init.templates.cookiecutter-aws-sam-hello-python.{{cookiecutter.project_name}}.hello_world.app.json"
   ]
  },
  "type": "function"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-python.{{cookiecutter.project_name}}.tests.unit": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-python.{{cookiecutter.project_name}}.tests.unit.test_handler": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-python.{{cookiecutter.project_name}}.tests.unit.test_handler.apigw_event": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "samcli.lib.init.templates.cookiecutter-aws-sam-hello-python.{{cookiecutter.project_name}}.tests.unit.test_handler.pytest"
   ]
  },
  "type": "function"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-python.{{cookiecutter.project_name}}.tests.unit.test_handler.app": {
  "data": {
   "shadows": "hello_world.app"
  },
  "type": "import"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-python.{{cookiecutter.project_name}}.tests.unit.test_handler.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-python.{{cookiecutter.project_name}}.tests.unit.test_handler.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-python.{{cookiecutter.project_name}}.tests.unit.test_handler.test_lambda_handler": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "hello_world.app.lambda_handler",
    "samcli.lib.init.templates.cookiecutter-aws-sam-hello-python.{{cookiecutter.project_name}}.tests.unit.test_handler.apigw_event",
    "samcli.lib.init.templates.cookiecutter-aws-sam-hello-python.{{cookiecutter.project_name}}.tests.unit.test_handler.json"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.logging"
   ]
  },
  "type": "module"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.__init__": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.default_conditional_key_map": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.default_intrinsic_function_map": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.get_prefix_position_in_list": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_find_in_map": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_dict",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_list",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_number_arguments"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_and": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "isinstance",
    "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_bool",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_list",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_non_null"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_base64": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver",
    "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.base64",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_equals": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_list",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_number_arguments"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_get_azs": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidIntrinsicException",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_getatt": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_list",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_number_arguments"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_if": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_bool",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_dict",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_list",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_number_arguments"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_import_value": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidIntrinsicException"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_join": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_all_list_intrinsic_type",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_list",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_not": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_bool",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_list",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_non_null",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_number_arguments"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_or": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "isinstance",
    "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_bool",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_list",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_non_null"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_ref": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_select": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_in_bounds",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_int",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_list"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_split": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_list",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_sub": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "isinstance",
    "resolve_sub_attribute",
    "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver",
    "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.re",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_dict",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_list",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_number_arguments",
    "six.string_types",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_sub.resolve_sub_attribute": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_transform": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "samcli.commands._utils.template.get_template_data",
    "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidIntrinsicException",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_dict"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.init_template": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.copy"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.intrinsic_property_resolver": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "isinstance",
    "list",
    "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.LOG",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidIntrinsicException",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.resolve_attribute": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.LOG",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidIntrinsicException",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidSymbolException",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.resolve_template": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.set_conditional_function_map": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.set_intrinsic_key_function_map": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.InvalidIntrinsicException": {
  "data": {
   "shadows": "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidIntrinsicException"
  },
  "type": "import"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.InvalidSymbolException": {
  "data": {
   "shadows": "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidSymbolException"
  },
  "type": "import"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.LOG": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.get_template_data": {
  "data": {
   "shadows": "samcli.commands._utils.template.get_template_data"
  },
  "type": "import"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.verify_all_list_intrinsic_type": {
  "data": {
   "shadows": "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_all_list_intrinsic_type"
  },
  "type": "import"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.verify_in_bounds": {
  "data": {
   "shadows": "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_in_bounds"
  },
  "type": "import"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.verify_intrinsic_type_bool": {
  "data": {
   "shadows": "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_bool"
  },
  "type": "import"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.verify_intrinsic_type_dict": {
  "data": {
   "shadows": "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_dict"
  },
  "type": "import"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.verify_intrinsic_type_int": {
  "data": {
   "shadows": "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_int"
  },
  "type": "import"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.verify_intrinsic_type_list": {
  "data": {
   "shadows": "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_list"
  },
  "type": "import"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.verify_intrinsic_type_str": {
  "data": {
   "shadows": "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str"
  },
  "type": "import"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.verify_non_null": {
  "data": {
   "shadows": "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_non_null"
  },
  "type": "import"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.verify_number_arguments": {
  "data": {
   "shadows": "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_number_arguments"
  },
  "type": "import"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.logging"
   ]
  },
  "type": "module"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicResolver": {
  "data": {
   "shadows": "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver"
  },
  "type": "import"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.__init__": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable._get_function_name": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.arn_resolver": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.get_availability_zone": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.get_default_attribute_resolver": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.get_default_pseudo_resolver": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.get_default_type_resolver": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.REF",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.get_translation": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "any",
    "bool",
    "int",
    "isinstance",
    "list",
    "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.REF",
    "six.string_types"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.handle_pseudo_account_id": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.handle_pseudo_no_value": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.handle_pseudo_partition": {
  "data": {
   "lineno": 386
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.handle_pseudo_region": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable",
    "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.os"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.handle_pseudo_stack_id": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.handle_pseudo_stack_name": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.handle_pseudo_url_prefix": {
  "data": {
   "lineno": 372
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.resolve_symbols": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "attribute_resolver",
    "callable",
    "resolver",
    "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidSymbolException"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.InvalidSymbolException": {
  "data": {
   "shadows": "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidSymbolException"
  },
  "type": "import"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.LOG": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidIntrinsicException": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidSymbolException": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.InvalidIntrinsicException": {
  "data": {
   "shadows": "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidIntrinsicException"
  },
  "type": "import"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_all_list_intrinsic_type": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "verification_func"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_in_bounds": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "len",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidIntrinsicException"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "isinstance",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidIntrinsicException",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_non_null",
    "six.string_types"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_bool": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "bool",
    "verify_intrinsic_type"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_dict": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "dict",
    "verify_intrinsic_type"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_int": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "bool",
    "int",
    "isinstance",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidIntrinsicException",
    "verify_intrinsic_type"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_list": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "list",
    "verify_intrinsic_type"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "six.string_types",
    "verify_intrinsic_type"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_non_null": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidIntrinsicException"
   ]
  },
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_number_arguments": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "len",
    "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidIntrinsicException"
   ]
  },
  "type": "function"
 },
 "samcli.lib.logs": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.logs.event": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.lib.logs.event.logging"
   ]
  },
  "type": "module"
 },
 "samcli.lib.logs.event.LOG": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "samcli.lib.logs.event.LogEvent": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "samcli.lib.logs.event.LogEvent.__eq__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "isinstance",
    "samcli.lib.logs.event.LogEvent"
   ]
  },
  "type": "function"
 },
 "samcli.lib.logs.event.LogEvent.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "int",
    "samcli.lib.utils.time.timestamp_to_iso"
   ]
  },
  "type": "function"
 },
 "samcli.lib.logs.event.LogEvent.__repr__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.logs.event.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.lib.logs.event.timestamp_to_iso": {
  "data": {
   "shadows": "samcli.lib.utils.time.timestamp_to_iso"
  },
  "type": "import"
 },
 "samcli.lib.logs.fetcher": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.lib.logs.fetcher.logging"
   ]
  },
  "type": "module"
 },
 "samcli.lib.logs.fetcher.LOG": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "samcli.lib.logs.fetcher.LogsFetcher": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "samcli.lib.logs.fetcher.LogsFetcher.__init__": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "samcli.lib.logs.fetcher.LogsFetcher.fetch": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "LogEvent",
    "samcli.lib.logs.fetcher.LOG",
    "samcli.lib.utils.time.to_timestamp"
   ]
  },
  "type": "function"
 },
 "samcli.lib.logs.fetcher.LogsFetcher.tail": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "samcli.lib.logs.fetcher.LOG",
    "samcli.lib.logs.fetcher.time",
    "samcli.lib.utils.time.to_datetime",
    "samcli.lib.utils.time.to_timestamp",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.logs.fetcher.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.lib.logs.fetcher.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "samcli.lib.logs.fetcher.to_datetime": {
  "data": {
   "shadows": "samcli.lib.utils.time.to_datetime"
  },
  "type": "import"
 },
 "samcli.lib.logs.fetcher.to_timestamp": {
  "data": {
   "shadows": "samcli.lib.utils.time.to_timestamp"
  },
  "type": "import"
 },
 "samcli.lib.logs.formatter": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "samcli.lib.logs.formatter.JSONMsgFormatter": {
  "data": {
   "lineno": 167
  },
  "type": "class"
 },
 "samcli.lib.logs.formatter.JSONMsgFormatter.format_json": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "Exception",
    "samcli.lib.logs.formatter.json",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.logs.formatter.KeywordHighlighter": {
  "data": {
   "lineno": 148
  },
  "type": "class"
 },
 "samcli.lib.logs.formatter.KeywordHighlighter.__init__": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "samcli.lib.logs.formatter.KeywordHighlighter.highlight_keywords": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "samcli.lib.logs.formatter.LambdaLogMsgFormatters": {
  "data": {
   "lineno": 124
  },
  "type": "class"
 },
 "samcli.lib.logs.formatter.LambdaLogMsgFormatters.colorize_errors": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.logs.formatter.LogsFormatter": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "samcli.lib.logs.formatter.LogsFormatter.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "samcli.lib.logs.formatter.LogsFormatter"
   ]
  },
  "type": "function"
 },
 "samcli.lib.logs.formatter.LogsFormatter._pretty_print_event": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.logs.formatter.LogsFormatter.do_format": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "builtins.map",
    "samcli.lib.logs.formatter.functools"
   ]
  },
  "type": "function"
 },
 "samcli.lib.logs.formatter.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "samcli.lib.logs.formatter.imap": {
  "data": {
   "shadows": "builtins.map"
  },
  "type": "import"
 },
 "samcli.lib.logs.formatter.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "samcli.lib.logs.provider": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.logs.provider.LogGroupProvider": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "samcli.lib.logs.provider.LogGroupProvider.for_lambda_function": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.package.artifact_exporter": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.lib.package.artifact_exporter.ApiGatewayRestApiResource",
    "samcli.lib.package.artifact_exporter.AppSyncFunctionConfigurationRequestTemplateResource",
    "samcli.lib.package.artifact_exporter.AppSyncFunctionConfigurationResponseTemplateResource",
    "samcli.lib.package.artifact_exporter.AppSyncResolverRequestTemplateResource",
    "samcli.lib.package.artifact_exporter.AppSyncResolverResponseTemplateResource",
    "samcli.lib.package.artifact_exporter.CloudFormationStackResource",
    "samcli.lib.package.artifact_exporter.ElasticBeanstalkApplicationVersion",
    "samcli.lib.package.artifact_exporter.GlueJobCommandScriptLocationResource",
    "samcli.lib.package.artifact_exporter.GraphQLSchemaResource",
    "samcli.lib.package.artifact_exporter.LambdaFunctionResource",
    "samcli.lib.package.artifact_exporter.LambdaLayerVersionResource",
    "samcli.lib.package.artifact_exporter.ServerlessApiResource",
    "samcli.lib.package.artifact_exporter.ServerlessApplicationResource",
    "samcli.lib.package.artifact_exporter.ServerlessFunctionResource",
    "samcli.lib.package.artifact_exporter.ServerlessHttpApiResource",
    "samcli.lib.package.artifact_exporter.ServerlessLayerVersionResource",
    "samcli.lib.package.artifact_exporter.ServerlessRepoApplicationLicense",
    "samcli.lib.package.artifact_exporter.ServerlessRepoApplicationReadme",
    "samcli.lib.package.artifact_exporter.ServerlessStateMachineResource",
    "samcli.lib.package.artifact_exporter.StepFunctionsStateMachineResource",
    "samcli.lib.package.artifact_exporter.include_transform_export_handler",
    "samcli.lib.package.artifact_exporter.logging"
   ]
  },
  "type": "module"
 },
 "samcli.lib.package.artifact_exporter.AWS_APIGATEWAY_RESTAPI": {
  "data": {
   "shadows": "samcli.commands._utils.resources.AWS_APIGATEWAY_RESTAPI"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.AWS_APPSYNC_FUNCTIONCONFIGURATION": {
  "data": {
   "shadows": "samcli.commands._utils.resources.AWS_APPSYNC_FUNCTIONCONFIGURATION"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.AWS_APPSYNC_GRAPHQLSCHEMA": {
  "data": {
   "shadows": "samcli.commands._utils.resources.AWS_APPSYNC_GRAPHQLSCHEMA"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.AWS_APPSYNC_RESOLVER": {
  "data": {
   "shadows": "samcli.commands._utils.resources.AWS_APPSYNC_RESOLVER"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.AWS_CLOUDFORMATION_STACK": {
  "data": {
   "shadows": "samcli.commands._utils.resources.AWS_CLOUDFORMATION_STACK"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.AWS_ELASTICBEANSTALK_APPLICATIONVERSION": {
  "data": {
   "shadows": "samcli.commands._utils.resources.AWS_ELASTICBEANSTALK_APPLICATIONVERSION"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.AWS_GLUE_JOB": {
  "data": {
   "shadows": "samcli.commands._utils.resources.AWS_GLUE_JOB"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.AWS_LAMBDA_FUNCTION": {
  "data": {
   "shadows": "samcli.commands._utils.resources.AWS_LAMBDA_FUNCTION"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.AWS_LAMBDA_LAYERVERSION": {
  "data": {
   "shadows": "samcli.commands._utils.resources.AWS_LAMBDA_LAYERVERSION"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.AWS_SERVERLESSREPO_APPLICATION": {
  "data": {
   "shadows": "samcli.commands._utils.resources.AWS_SERVERLESSREPO_APPLICATION"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.AWS_SERVERLESS_API": {
  "data": {
   "shadows": "samcli.commands._utils.resources.AWS_SERVERLESS_API"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.AWS_SERVERLESS_APPLICATION": {
  "data": {
   "shadows": "samcli.commands._utils.resources.AWS_SERVERLESS_APPLICATION"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.AWS_SERVERLESS_FUNCTION": {
  "data": {
   "shadows": "samcli.commands._utils.resources.AWS_SERVERLESS_FUNCTION"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.AWS_SERVERLESS_HTTPAPI": {
  "data": {
   "shadows": "samcli.commands._utils.resources.AWS_SERVERLESS_HTTPAPI"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.AWS_SERVERLESS_LAYERVERSION": {
  "data": {
   "shadows": "samcli.commands._utils.resources.AWS_SERVERLESS_LAYERVERSION"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.AWS_SERVERLESS_STATEMACHINE": {
  "data": {
   "shadows": "samcli.commands._utils.resources.AWS_SERVERLESS_STATEMACHINE"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.AWS_STEPFUNCTIONS_STATEMACHINE": {
  "data": {
   "shadows": "samcli.commands._utils.resources.AWS_STEPFUNCTIONS_STATEMACHINE"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.ApiGatewayRestApiResource": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "samcli.commands._utils.resources.AWS_APIGATEWAY_RESTAPI",
    "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS",
    "samcli.lib.package.artifact_exporter.ResourceWithS3UrlDict"
   ]
  },
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.AppSyncFunctionConfigurationRequestTemplateResource": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "samcli.commands._utils.resources.AWS_APPSYNC_FUNCTIONCONFIGURATION",
    "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS",
    "samcli.lib.package.artifact_exporter.Resource"
   ]
  },
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.AppSyncFunctionConfigurationResponseTemplateResource": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "samcli.commands._utils.resources.AWS_APPSYNC_FUNCTIONCONFIGURATION",
    "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS",
    "samcli.lib.package.artifact_exporter.Resource"
   ]
  },
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.AppSyncResolverRequestTemplateResource": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "samcli.commands._utils.resources.AWS_APPSYNC_RESOLVER",
    "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS",
    "samcli.lib.package.artifact_exporter.Resource"
   ]
  },
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.AppSyncResolverResponseTemplateResource": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "samcli.commands._utils.resources.AWS_APPSYNC_RESOLVER",
    "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS",
    "samcli.lib.package.artifact_exporter.Resource"
   ]
  },
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.CloudFormationStackResource": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "samcli.commands._utils.resources.AWS_CLOUDFORMATION_STACK",
    "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS",
    "samcli.lib.package.artifact_exporter.Resource"
   ]
  },
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.CloudFormationStackResource.do_export": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "Template",
    "botocore.utils.set_value_from_jmespath",
    "samcli.commands.package.exceptions.InvalidTemplateUrlParameterError",
    "samcli.lib.package.artifact_exporter.is_local_file",
    "samcli.lib.package.artifact_exporter.is_s3_url",
    "samcli.lib.package.artifact_exporter.make_abs_path",
    "samcli.lib.package.artifact_exporter.mktempfile",
    "samcli.lib.package.artifact_exporter.parse_s3_url",
    "samcli.yamlhelper.yaml_dump"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.ElasticBeanstalkApplicationVersion": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "samcli.commands._utils.resources.AWS_ELASTICBEANSTALK_APPLICATIONVERSION",
    "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS",
    "samcli.lib.package.artifact_exporter.ResourceWithS3UrlDict"
   ]
  },
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.GLOBAL_EXPORT_DICT": {
  "data": {
   "lineno": 566
  },
  "type": "constant"
 },
 "samcli.lib.package.artifact_exporter.GlueJobCommandScriptLocationResource": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "samcli.commands._utils.resources.AWS_GLUE_JOB",
    "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS",
    "samcli.lib.package.artifact_exporter.Resource"
   ]
  },
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.GraphQLSchemaResource": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "samcli.commands._utils.resources.AWS_APPSYNC_GRAPHQLSCHEMA",
    "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS",
    "samcli.lib.package.artifact_exporter.Resource"
   ]
  },
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.LOG": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "samcli.lib.package.artifact_exporter.LambdaFunctionResource": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "samcli.commands._utils.resources.AWS_LAMBDA_FUNCTION",
    "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS",
    "samcli.lib.package.artifact_exporter.ResourceWithS3UrlDict"
   ]
  },
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.LambdaLayerVersionResource": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "samcli.commands._utils.resources.AWS_LAMBDA_LAYERVERSION",
    "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS",
    "samcli.lib.package.artifact_exporter.ResourceWithS3UrlDict"
   ]
  },
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.METADATA_EXPORT_LIST": {
  "data": {
   "lineno": 542
  },
  "type": "constant"
 },
 "samcli.lib.package.artifact_exporter.METADATA_WITH_LOCAL_PATHS": {
  "data": {
   "shadows": "samcli.commands._utils.template.METADATA_WITH_LOCAL_PATHS"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.RESOURCES_EXPORT_LIST": {
  "data": {
   "lineno": 521
  },
  "type": "constant"
 },
 "samcli.lib.package.artifact_exporter.RESOURCES_WITH_LOCAL_PATHS": {
  "data": {
   "shadows": "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.Resource": {
  "data": {
   "lineno": 231
  },
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.Resource.__init__": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.Resource.do_export": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "botocore.utils.set_value_from_jmespath",
    "samcli.lib.package.artifact_exporter.upload_local_artifacts"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.Resource.export": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "Exception",
    "botocore.utils.set_value_from_jmespath",
    "dict",
    "isinstance",
    "samcli.commands.package.exceptions.ExportFailedError",
    "samcli.lib.package.artifact_exporter.LOG",
    "samcli.lib.package.artifact_exporter.copy_to_temp_dir",
    "samcli.lib.package.artifact_exporter.is_local_file",
    "samcli.lib.package.artifact_exporter.is_zip_file",
    "samcli.lib.package.artifact_exporter.jmespath",
    "samcli.lib.package.artifact_exporter.resource_not_packageable",
    "samcli.lib.package.artifact_exporter.shutil"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.ResourceWithS3UrlDict": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "samcli.lib.package.artifact_exporter.Resource"
   ]
  },
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.ResourceWithS3UrlDict.do_export": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "botocore.utils.set_value_from_jmespath",
    "samcli.lib.package.artifact_exporter.parse_s3_url",
    "samcli.lib.package.artifact_exporter.upload_local_artifacts"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.ServerlessApiResource": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "samcli.commands._utils.resources.AWS_SERVERLESS_API",
    "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS",
    "samcli.lib.package.artifact_exporter.Resource"
   ]
  },
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.ServerlessApplicationResource": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "samcli.commands._utils.resources.AWS_SERVERLESS_APPLICATION",
    "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS",
    "samcli.lib.package.artifact_exporter.CloudFormationStackResource"
   ]
  },
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.ServerlessFunctionResource": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "samcli.commands._utils.resources.AWS_SERVERLESS_FUNCTION",
    "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS",
    "samcli.lib.package.artifact_exporter.Resource"
   ]
  },
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.ServerlessHttpApiResource": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "samcli.commands._utils.resources.AWS_SERVERLESS_HTTPAPI",
    "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS",
    "samcli.lib.package.artifact_exporter.Resource"
   ]
  },
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.ServerlessLayerVersionResource": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "samcli.commands._utils.resources.AWS_SERVERLESS_LAYERVERSION",
    "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS",
    "samcli.lib.package.artifact_exporter.Resource"
   ]
  },
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.ServerlessRepoApplicationLicense": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "samcli.commands._utils.resources.AWS_SERVERLESSREPO_APPLICATION",
    "samcli.commands._utils.template.METADATA_WITH_LOCAL_PATHS",
    "samcli.lib.package.artifact_exporter.Resource"
   ]
  },
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.ServerlessRepoApplicationReadme": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "samcli.commands._utils.resources.AWS_SERVERLESSREPO_APPLICATION",
    "samcli.commands._utils.template.METADATA_WITH_LOCAL_PATHS",
    "samcli.lib.package.artifact_exporter.Resource"
   ]
  },
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.ServerlessStateMachineResource": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "samcli.commands._utils.resources.AWS_SERVERLESS_STATEMACHINE",
    "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS",
    "samcli.lib.package.artifact_exporter.ResourceWithS3UrlDict"
   ]
  },
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.StepFunctionsStateMachineResource": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "samcli.commands._utils.resources.AWS_STEPFUNCTIONS_STATEMACHINE",
    "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS",
    "samcli.lib.package.artifact_exporter.ResourceWithS3UrlDict"
   ]
  },
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.Template": {
  "data": {
   "lineno": 569
  },
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.Template.__init__": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "ValueError",
    "frozenset",
    "open",
    "samcli.lib.package.artifact_exporter.METADATA_EXPORT_LIST",
    "samcli.lib.package.artifact_exporter.RESOURCES_EXPORT_LIST",
    "samcli.lib.package.artifact_exporter.is_local_folder",
    "samcli.lib.package.artifact_exporter.make_abs_path",
    "samcli.lib.package.artifact_exporter.os",
    "samcli.yamlhelper.yaml_parse"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.Template.apply_global_values": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "samcli.commands._utils.resources.AWS_SERVERLESS_FUNCTION"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.Template.export": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "exporter_class",
    "exporter_class.RESOURCE_TYPE"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.Template.export_global_artifacts": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "samcli.lib.package.artifact_exporter.GLOBAL_EXPORT_DICT"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.Template.export_metadata": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "exporter_class"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.copy_to_temp_dir": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "samcli.lib.package.artifact_exporter.os",
    "samcli.lib.package.artifact_exporter.shutil",
    "samcli.lib.package.artifact_exporter.tempfile"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.dir_checksum": {
  "data": {
   "shadows": "samcli.lib.utils.hash.dir_checksum"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.exceptions": {
  "data": {
   "shadows": "samcli.commands.package.exceptions"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.include_transform_export_handler": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "samcli.commands.package.exceptions.InvalidLocalPathError",
    "samcli.lib.package.artifact_exporter.is_local_file",
    "samcli.lib.package.artifact_exporter.is_path_value_valid",
    "samcli.lib.package.artifact_exporter.is_s3_url",
    "samcli.lib.package.artifact_exporter.os"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.is_local_file": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "samcli.lib.package.artifact_exporter.is_path_value_valid",
    "samcli.lib.package.artifact_exporter.os"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.is_local_folder": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "samcli.lib.package.artifact_exporter.is_path_value_valid",
    "samcli.lib.package.artifact_exporter.os"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.is_path_value_valid": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.is_s3_url": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "parse_s3_url"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.is_zip_file": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "samcli.lib.package.artifact_exporter.is_path_value_valid",
    "samcli.lib.package.artifact_exporter.zipfile"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.jmespath": {
  "data": {
   "shadows": "jmespath"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.make_abs_path": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "samcli.lib.package.artifact_exporter.is_path_value_valid",
    "samcli.lib.package.artifact_exporter.os"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.make_zip": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "open",
    "samcli.lib.package.artifact_exporter.contextlib",
    "samcli.lib.package.artifact_exporter.os",
    "samcli.lib.package.artifact_exporter.zipfile"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.mktempfile": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "open",
    "samcli.lib.package.artifact_exporter.os",
    "samcli.lib.package.artifact_exporter.tempfile",
    "samcli.lib.package.artifact_exporter.uuid"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.parse_qs": {
  "data": {
   "shadows": "urllib.parse.parse_qs"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.parse_s3_url": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "str",
    "urllib.parse.parse_qs",
    "urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.resource_not_packageable": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "samcli.lib.package.artifact_exporter.jmespath"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.set_value_from_jmespath": {
  "data": {
   "shadows": "botocore.utils.set_value_from_jmespath"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.upload_local_artifacts": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "samcli.commands.package.exceptions.InvalidLocalPathError",
    "samcli.lib.package.artifact_exporter.LOG",
    "samcli.lib.package.artifact_exporter.is_local_file",
    "samcli.lib.package.artifact_exporter.is_local_folder",
    "samcli.lib.package.artifact_exporter.is_s3_url",
    "samcli.lib.package.artifact_exporter.jmespath",
    "samcli.lib.package.artifact_exporter.make_abs_path",
    "zip_and_upload"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.urlparse": {
  "data": {
   "shadows": "urllib.parse.urlparse"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.yaml_dump": {
  "data": {
   "shadows": "samcli.yamlhelper.yaml_dump"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.yaml_parse": {
  "data": {
   "shadows": "samcli.yamlhelper.yaml_parse"
  },
  "type": "import"
 },
 "samcli.lib.package.artifact_exporter.zip_and_upload": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "zip_folder"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.zip_folder": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "make_zip",
    "samcli.lib.package.artifact_exporter.os",
    "samcli.lib.package.artifact_exporter.tempfile",
    "samcli.lib.utils.hash.dir_checksum"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "samcli.lib.package.s3_uploader": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.lib.package.s3_uploader.logging"
   ]
  },
  "type": "module"
 },
 "samcli.lib.package.s3_uploader.BucketNotSpecifiedError": {
  "data": {
   "shadows": "samcli.commands.package.exceptions.BucketNotSpecifiedError"
  },
  "type": "import"
 },
 "samcli.lib.package.s3_uploader.LOG": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "samcli.lib.package.s3_uploader.NoSuchBucketError": {
  "data": {
   "shadows": "samcli.commands.package.exceptions.NoSuchBucketError"
  },
  "type": "import"
 },
 "samcli.lib.package.s3_uploader.ProgressPercentage": {
  "data": {
   "lineno": 173
  },
  "type": "class"
 },
 "samcli.lib.package.s3_uploader.ProgressPercentage.__init__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "float",
    "samcli.lib.package.s3_uploader.os",
    "samcli.lib.package.s3_uploader.threading"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.s3_uploader.ProgressPercentage.on_progress": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "int",
    "samcli.lib.package.s3_uploader.sys"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.s3_uploader.S3Uploader": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "samcli.lib.package.s3_uploader.S3Uploader.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "boto3.s3.transfer.TransferConfig",
    "boto3.s3.transfer.create_transfer_manager"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.s3_uploader.S3Uploader.artifact_metadata": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "TypeError",
    "collections.abc.Mapping",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.s3_uploader.S3Uploader.file_exists": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "samcli.commands.package.exceptions.BucketNotSpecifiedError",
    "samcli.lib.package.s3_uploader.botocore"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.s3_uploader.S3Uploader.make_url": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "samcli.commands.package.exceptions.BucketNotSpecifiedError"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.s3_uploader.S3Uploader.to_path_style_s3_url": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "samcli.lib.package.s3_uploader.S3Uploader.upload": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ProgressPercentage",
    "samcli.commands.package.exceptions.BucketNotSpecifiedError",
    "samcli.commands.package.exceptions.NoSuchBucketError",
    "samcli.lib.package.s3_uploader.LOG",
    "samcli.lib.package.s3_uploader.botocore"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.s3_uploader.S3Uploader.upload_with_dedup": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "samcli.lib.utils.hash.file_checksum"
   ]
  },
  "type": "function"
 },
 "samcli.lib.package.s3_uploader.abc": {
  "data": {
   "shadows": "collections.abc"
  },
  "type": "import"
 },
 "samcli.lib.package.s3_uploader.botocore": {
  "data": {
   "shadows": "botocore"
  },
  "type": "import"
 },
 "samcli.lib.package.s3_uploader.botocore.exceptions": {
  "data": {
   "shadows": "botocore.exceptions"
  },
  "type": "import"
 },
 "samcli.lib.package.s3_uploader.file_checksum": {
  "data": {
   "shadows": "samcli.lib.utils.hash.file_checksum"
  },
  "type": "import"
 },
 "samcli.lib.package.s3_uploader.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "samcli.lib.package.s3_uploader.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.lib.package.s3_uploader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.lib.package.s3_uploader.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "samcli.lib.package.s3_uploader.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "samcli.lib.package.s3_uploader.transfer": {
  "data": {
   "shadows": "boto3.s3.transfer"
  },
  "type": "import"
 },
 "samcli.lib.providers": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.providers.api_collector": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.lib.providers.api_collector.logging"
   ]
  },
  "type": "module"
 },
 "samcli.lib.providers.api_collector.Api": {
  "data": {
   "shadows": "samcli.lib.providers.provider.Api"
  },
  "type": "import"
 },
 "samcli.lib.providers.api_collector.ApiCollector": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "samcli.lib.providers.api_collector.ApiCollector.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "collections.defaultdict",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.api_collector.ApiCollector.__iter__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "samcli.lib.providers.api_collector.ApiCollector._get_routes": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "samcli.lib.providers.api_collector.ApiCollector.add_binary_media_types": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "samcli.lib.providers.api_collector.LOG"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.api_collector.ApiCollector.add_routes": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "samcli.lib.providers.api_collector.ApiCollector.all_routes": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "samcli.lib.providers.api_collector.ApiCollector.dedupe_function_routes": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "list",
    "samcli.local.apigw.local_apigw_service.Route",
    "sorted",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.api_collector.ApiCollector.get_api": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "samcli.lib.providers.provider.Api"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.api_collector.ApiCollector.normalize_binary_media_type": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "isinstance",
    "six.string_types",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.api_collector.ApiCollector.normalize_cors_methods": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "add_options_to_route",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.api_collector.ApiCollector.normalize_cors_methods.add_options_to_route": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "samcli.lib.providers.api_collector.ApiCollector.routes": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "samcli.lib.providers.api_collector.LOG": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "samcli.lib.providers.api_collector.Route": {
  "data": {
   "shadows": "samcli.local.apigw.local_apigw_service.Route"
  },
  "type": "import"
 },
 "samcli.lib.providers.api_collector.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "samcli.lib.providers.api_collector.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.lib.providers.api_collector.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "samcli.lib.providers.api_provider": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.lib.providers.api_provider.logging"
   ]
  },
  "type": "module"
 },
 "samcli.lib.providers.api_provider.AbstractApiProvider": {
  "data": {
   "shadows": "samcli.lib.providers.provider.AbstractApiProvider"
  },
  "type": "import"
 },
 "samcli.lib.providers.api_provider.ApiCollector": {
  "data": {
   "shadows": "samcli.lib.providers.api_collector.ApiCollector"
  },
  "type": "import"
 },
 "samcli.lib.providers.api_provider.ApiProvider": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "samcli.lib.providers.provider.AbstractApiProvider"
   ]
  },
  "type": "class"
 },
 "samcli.lib.providers.api_provider.ApiProvider.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "len",
    "samcli.lib.providers.api_provider.LOG",
    "samcli.lib.providers.sam_base_provider.SamBaseProvider.get_template"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.api_provider.ApiProvider._extract_api": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "samcli.lib.providers.api_collector.ApiCollector"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.api_provider.ApiProvider.find_api_provider": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "samcli.lib.providers.cfn_api_provider.CfnApiProvider",
    "samcli.lib.providers.cfn_api_provider.CfnApiProvider.TYPES",
    "samcli.lib.providers.cfn_base_api_provider.CfnBaseApiProvider.RESOURCE_TYPE",
    "samcli.lib.providers.sam_api_provider.SamApiProvider",
    "samcli.lib.providers.sam_api_provider.SamApiProvider.TYPES",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.api_provider.ApiProvider.get_all": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "samcli.lib.providers.api_provider.CfnApiProvider": {
  "data": {
   "shadows": "samcli.lib.providers.cfn_api_provider.CfnApiProvider"
  },
  "type": "import"
 },
 "samcli.lib.providers.api_provider.CfnBaseApiProvider": {
  "data": {
   "shadows": "samcli.lib.providers.cfn_base_api_provider.CfnBaseApiProvider"
  },
  "type": "import"
 },
 "samcli.lib.providers.api_provider.LOG": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "samcli.lib.providers.api_provider.SamApiProvider": {
  "data": {
   "shadows": "samcli.lib.providers.sam_api_provider.SamApiProvider"
  },
  "type": "import"
 },
 "samcli.lib.providers.api_provider.SamBaseProvider": {
  "data": {
   "shadows": "samcli.lib.providers.sam_base_provider.SamBaseProvider"
  },
  "type": "import"
 },
 "samcli.lib.providers.api_provider.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.lib.providers.cfn_api_provider": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.lib.providers.cfn_api_provider.logging"
   ]
  },
  "type": "module"
 },
 "samcli.lib.providers.cfn_api_provider.CfnApiProvider": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "samcli.lib.providers.cfn_base_api_provider.CfnBaseApiProvider"
   ]
  },
  "type": "class"
 },
 "samcli.lib.providers.cfn_api_provider.CfnApiProvider._extract_cloud_formation_method": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "isinstance",
    "samcli.lib.providers.cfn_api_provider.CfnApiProvider",
    "samcli.local.apigw.local_apigw_service.Route",
    "six.string_types"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.cfn_api_provider.CfnApiProvider._extract_cloud_formation_route": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "samcli.lib.providers.cfn_api_provider.LOG"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.cfn_api_provider.CfnApiProvider._extract_cloud_formation_stage": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "samcli.commands.local.cli_common.user_exceptions.InvalidSamTemplateException",
    "samcli.lib.providers.cfn_api_provider.CfnApiProvider",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.cfn_api_provider.CfnApiProvider._get_integration_function_name": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "samcli.commands.local.lib.swagger.integration_uri.LambdaUri.get_function_name",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.cfn_api_provider.CfnApiProvider.extract_resources": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "samcli.lib.providers.cfn_api_provider.CfnApiProvider",
    "samcli.lib.providers.cfn_base_api_provider.CfnBaseApiProvider.RESOURCE_TYPE"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.cfn_api_provider.CfnApiProvider.resolve_resource_path": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "samcli.lib.providers.cfn_api_provider.CfnBaseApiProvider": {
  "data": {
   "shadows": "samcli.lib.providers.cfn_base_api_provider.CfnBaseApiProvider"
  },
  "type": "import"
 },
 "samcli.lib.providers.cfn_api_provider.InvalidSamTemplateException": {
  "data": {
   "shadows": "samcli.commands.local.cli_common.user_exceptions.InvalidSamTemplateException"
  },
  "type": "import"
 },
 "samcli.lib.providers.cfn_api_provider.LOG": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "samcli.lib.providers.cfn_api_provider.LambdaUri": {
  "data": {
   "shadows": "samcli.commands.local.lib.swagger.integration_uri.LambdaUri"
  },
  "type": "import"
 },
 "samcli.lib.providers.cfn_api_provider.Route": {
  "data": {
   "shadows": "samcli.local.apigw.local_apigw_service.Route"
  },
  "type": "import"
 },
 "samcli.lib.providers.cfn_api_provider.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.lib.providers.cfn_api_provider.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "samcli.lib.providers.cfn_base_api_provider": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.lib.providers.cfn_base_api_provider.logging"
   ]
  },
  "type": "module"
 },
 "samcli.lib.providers.cfn_base_api_provider.CfnBaseApiProvider": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "samcli.lib.providers.cfn_base_api_provider.CfnBaseApiProvider.extract_resources": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.cfn_base_api_provider.CfnBaseApiProvider.extract_swagger_route": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "len",
    "samcli.commands.local.lib.swagger.parser.SwaggerParser",
    "samcli.commands.local.lib.swagger.reader.SwaggerReader",
    "samcli.lib.providers.cfn_base_api_provider.LOG"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.cfn_base_api_provider.LOG": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "samcli.lib.providers.cfn_base_api_provider.SwaggerParser": {
  "data": {
   "shadows": "samcli.commands.local.lib.swagger.parser.SwaggerParser"
  },
  "type": "import"
 },
 "samcli.lib.providers.cfn_base_api_provider.SwaggerReader": {
  "data": {
   "shadows": "samcli.commands.local.lib.swagger.reader.SwaggerReader"
  },
  "type": "import"
 },
 "samcli.lib.providers.cfn_base_api_provider.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.lib.providers.exceptions": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.providers.exceptions.InvalidLayerReference": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "samcli.lib.providers.exceptions.InvalidLayerReference.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "samcli.lib.providers.exceptions.InvalidLayerReference",
    "super"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.provider": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "collections.namedtuple",
    "samcli.lib.providers.provider._CorsTuple",
    "samcli.lib.providers.provider.logging"
   ]
  },
  "type": "module"
 },
 "samcli.lib.providers.provider.AbstractApiProvider": {
  "data": {
   "lineno": 288
  },
  "type": "class"
 },
 "samcli.lib.providers.provider.AbstractApiProvider.get_all": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.provider.Api": {
  "data": {
   "lineno": 224
  },
  "type": "class"
 },
 "samcli.lib.providers.provider.Api.__hash__": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.provider.Api.__init__": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.provider.Api.binary_media_types": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "list",
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.provider.Cors": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "samcli.lib.providers.provider._CorsTuple"
   ]
  },
  "type": "class"
 },
 "samcli.lib.providers.provider.Cors.cors_to_headers": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.provider.Function": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "samcli.lib.providers.provider.InvalidLayerVersionArn": {
  "data": {
   "shadows": "samcli.commands.local.cli_common.user_exceptions.InvalidLayerVersionArn"
  },
  "type": "import"
 },
 "samcli.lib.providers.provider.LOG": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "samcli.lib.providers.provider.LayerVersion": {
  "data": {
   "lineno": 78
  },
  "type": "class"
 },
 "samcli.lib.providers.provider.LayerVersion.__eq__": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.provider.LayerVersion.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "samcli.commands.local.cli_common.user_exceptions.UnsupportedIntrinsic",
    "samcli.lib.providers.provider.LayerVersion",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.provider.LayerVersion._compute_layer_name": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ValueError",
    "samcli.commands.local.cli_common.user_exceptions.InvalidLayerVersionArn",
    "samcli.lib.providers.provider.LayerVersion",
    "samcli.lib.providers.provider.hashlib",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.provider.LayerVersion._compute_layer_version": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "samcli.commands.local.cli_common.user_exceptions.InvalidLayerVersionArn",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.provider.LayerVersion.arn": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.provider.LayerVersion.build_method": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.provider.LayerVersion.codeuri": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "samcli.lib.providers.provider.LayerVersion.compatible_runtimes": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.provider.LayerVersion.layer_arn": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.provider.LayerVersion.name": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.provider.LayerVersion.version": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.provider.ResourcesToBuildCollector": {
  "data": {
   "lineno": 47
  },
  "type": "class"
 },
 "samcli.lib.providers.provider.ResourcesToBuildCollector.__eq__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.provider.ResourcesToBuildCollector.__init__": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "samcli.lib.providers.provider.ResourcesToBuildCollector.add_function": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "samcli.lib.providers.provider.ResourcesToBuildCollector.add_functions": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "samcli.lib.providers.provider.ResourcesToBuildCollector.add_layer": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "samcli.lib.providers.provider.ResourcesToBuildCollector.add_layers": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "samcli.lib.providers.provider.ResourcesToBuildCollector.functions": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.provider.ResourcesToBuildCollector.layers": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.provider.UnsupportedIntrinsic": {
  "data": {
   "shadows": "samcli.commands.local.cli_common.user_exceptions.UnsupportedIntrinsic"
  },
  "type": "import"
 },
 "samcli.lib.providers.provider._CorsTuple": {
  "data": {
   "lineno": 252
  },
  "type": "constant"
 },
 "samcli.lib.providers.provider.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "samcli.lib.providers.provider.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.lib.providers.provider.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "samcli.lib.providers.sam_api_provider": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.lib.providers.sam_api_provider.logging"
   ]
  },
  "type": "module"
 },
 "samcli.lib.providers.sam_api_provider.CfnBaseApiProvider": {
  "data": {
   "shadows": "samcli.lib.providers.cfn_base_api_provider.CfnBaseApiProvider"
  },
  "type": "import"
 },
 "samcli.lib.providers.sam_api_provider.Cors": {
  "data": {
   "shadows": "samcli.lib.providers.provider.Cors"
  },
  "type": "import"
 },
 "samcli.lib.providers.sam_api_provider.InvalidSamDocumentException": {
  "data": {
   "shadows": "samcli.commands.validate.lib.exceptions.InvalidSamDocumentException"
  },
  "type": "import"
 },
 "samcli.lib.providers.sam_api_provider.LOG": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "samcli.lib.providers.sam_api_provider.Route": {
  "data": {
   "shadows": "samcli.local.apigw.local_apigw_service.Route"
  },
  "type": "import"
 },
 "samcli.lib.providers.sam_api_provider.SamApiProvider": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "samcli.lib.providers.cfn_base_api_provider.CfnBaseApiProvider"
   ]
  },
  "type": "class"
 },
 "samcli.lib.providers.sam_api_provider.SamApiProvider._convert_event_route": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "samcli.commands.validate.lib.exceptions.InvalidSamDocumentException",
    "samcli.lib.providers.sam_api_provider.LOG",
    "samcli.lib.providers.sam_api_provider.SamApiProvider",
    "samcli.local.apigw.local_apigw_service.Route",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_api_provider.SamApiProvider._extract_from_serverless_api": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "samcli.lib.providers.sam_api_provider.LOG"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_api_provider.SamApiProvider._extract_routes_from_function": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_api_provider.SamApiProvider._get_cors_prop": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "isinstance",
    "samcli.commands.validate.lib.exceptions.InvalidSamDocumentException",
    "samcli.lib.providers.sam_api_provider.LOG",
    "six.string_types",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_api_provider.SamApiProvider.extract_cors": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "samcli.commands.validate.lib.exceptions.InvalidSamDocumentException",
    "samcli.lib.providers.provider.Cors",
    "samcli.local.apigw.local_apigw_service.Route.ANY_HTTP_METHODS",
    "six.string_types",
    "sorted"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_api_provider.SamApiProvider.extract_resources": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "samcli.lib.providers.cfn_base_api_provider.CfnBaseApiProvider.RESOURCE_TYPE",
    "samcli.lib.providers.sam_api_provider.SamApiProvider"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_api_provider.SamApiProvider.extract_routes_from_events": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "samcli.lib.providers.sam_api_provider.LOG"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_api_provider.SamApiProvider.merge_routes": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "len",
    "list",
    "samcli.lib.providers.sam_api_provider.LOG",
    "samcli.lib.providers.sam_api_provider.SamApiProvider",
    "set",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_api_provider.SamApiProvider.normalize_cors_allow_methods": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "samcli.commands.validate.lib.exceptions.InvalidSamDocumentException",
    "samcli.local.apigw.local_apigw_service.Route.ANY_HTTP_METHODS",
    "sorted",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_api_provider.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.lib.providers.sam_api_provider.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "samcli.lib.providers.sam_base_provider": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.lib.providers.sam_base_provider.logging"
   ]
  },
  "type": "module"
 },
 "samcli.lib.providers.sam_base_provider.IntrinsicResolver": {
  "data": {
   "shadows": "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver"
  },
  "type": "import"
 },
 "samcli.lib.providers.sam_base_provider.IntrinsicsSymbolTable": {
  "data": {
   "shadows": "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable"
  },
  "type": "import"
 },
 "samcli.lib.providers.sam_base_provider.LOG": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "samcli.lib.providers.sam_base_provider.ResourceMetadataNormalizer": {
  "data": {
   "shadows": "samcli.lib.samlib.resource_metadata_normalizer.ResourceMetadataNormalizer"
  },
  "type": "import"
 },
 "samcli.lib.providers.sam_base_provider.SamBaseProvider": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "samcli.lib.providers.sam_base_provider.SamBaseProvider._extract_lambda_function_code": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "samcli.lib.providers.sam_base_provider.SamBaseProvider",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_base_provider.SamBaseProvider._extract_sam_function_codeuri": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "samcli.lib.providers.sam_base_provider.LOG",
    "samcli.lib.providers.sam_base_provider.SamBaseProvider",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_base_provider.SamBaseProvider._get_default_parameter_values": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "samcli.lib.providers.sam_base_provider.LOG",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_base_provider.SamBaseProvider._get_parameter_values": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.DEFAULT_PSEUDO_PARAM_VALUES",
    "samcli.lib.providers.sam_base_provider.SamBaseProvider",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_base_provider.SamBaseProvider.get": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_base_provider.SamBaseProvider.get_all": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_base_provider.SamBaseProvider.get_template": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver",
    "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable",
    "samcli.lib.providers.sam_base_provider.SamBaseProvider",
    "samcli.lib.samlib.resource_metadata_normalizer.ResourceMetadataNormalizer.normalize",
    "samcli.lib.samlib.wrapper.SamTranslatorWrapper",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_base_provider.SamTranslatorWrapper": {
  "data": {
   "shadows": "samcli.lib.samlib.wrapper.SamTranslatorWrapper"
  },
  "type": "import"
 },
 "samcli.lib.providers.sam_base_provider.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.lib.providers.sam_function_provider": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.lib.providers.sam_function_provider.logging"
   ]
  },
  "type": "module"
 },
 "samcli.lib.providers.sam_function_provider.Colored": {
  "data": {
   "shadows": "samcli.lib.utils.colors.Colored"
  },
  "type": "import"
 },
 "samcli.lib.providers.sam_function_provider.InvalidLayerReference": {
  "data": {
   "shadows": "samcli.lib.providers.exceptions.InvalidLayerReference"
  },
  "type": "import"
 },
 "samcli.lib.providers.sam_function_provider.InvalidLayerVersionArn": {
  "data": {
   "shadows": "samcli.commands.local.cli_common.user_exceptions.InvalidLayerVersionArn"
  },
  "type": "import"
 },
 "samcli.lib.providers.sam_function_provider.LOG": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "samcli.lib.providers.sam_function_provider.SamFunctionProvider": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "samcli.lib.providers.sam_function_provider.SamFunctionProvider.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "len",
    "samcli.lib.providers.sam_function_provider.LOG",
    "samcli.lib.providers.sam_function_provider.SamFunctionProvider",
    "samcli.lib.utils.colors.Colored"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_function_provider.SamFunctionProvider._build_function_configuration": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "Function",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_function_provider.SamFunctionProvider._convert_lambda_function_resource": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "samcli.lib.providers.sam_function_provider.LOG",
    "samcli.lib.providers.sam_function_provider.SamFunctionProvider",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_function_provider.SamFunctionProvider._convert_sam_function_resource": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "samcli.lib.providers.sam_function_provider.LOG",
    "samcli.lib.providers.sam_function_provider.SamFunctionProvider",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_function_provider.SamFunctionProvider._deprecate_notification": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "samcli.lib.providers.sam_function_provider.LOG"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_function_provider.SamFunctionProvider._extract_functions": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "samcli.lib.providers.sam_function_provider.SamFunctionProvider",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_function_provider.SamFunctionProvider._parse_layer_info": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "LayerVersion",
    "dict",
    "isinstance",
    "samcli.commands.local.cli_common.user_exceptions.InvalidLayerVersionArn",
    "samcli.lib.providers.exceptions.InvalidLayerReference",
    "samcli.lib.providers.sam_function_provider.LOG",
    "samcli.lib.providers.sam_function_provider.SamFunctionProvider",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_function_provider.SamFunctionProvider.get": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_function_provider.SamFunctionProvider.get_all": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_function_provider.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.lib.providers.sam_layer_provider": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.lib.providers.sam_layer_provider.logging"
   ]
  },
  "type": "module"
 },
 "samcli.lib.providers.sam_layer_provider.LOG": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "samcli.lib.providers.sam_layer_provider.SamLayerProvider": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "samcli.lib.providers.sam_layer_provider.SamLayerProvider.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "samcli.lib.providers.sam_layer_provider.SamLayerProvider"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_layer_provider.SamLayerProvider._convert_lambda_layer_resource": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "LayerVersion",
    "samcli.lib.providers.sam_layer_provider.SamLayerProvider"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_layer_provider.SamLayerProvider._extract_layers": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_layer_provider.SamLayerProvider.get": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_layer_provider.SamLayerProvider.get_all": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "samcli.lib.providers.sam_layer_provider.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.lib.samlib": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.samlib.local_uri_plugin": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.samlib.local_uri_plugin.BasePlugin": {
  "data": {
   "shadows": "samtranslator.public.plugins.BasePlugin"
  },
  "type": "import"
 },
 "samcli.lib.samlib.local_uri_plugin.SupportLocalUriPlugin": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "samtranslator.public.plugins.BasePlugin"
   ]
  },
  "type": "class"
 },
 "samcli.lib.samlib.local_uri_plugin.SupportLocalUriPlugin.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "samcli.lib.samlib.local_uri_plugin.SupportLocalUriPlugin",
    "super"
   ]
  },
  "type": "function"
 },
 "samcli.lib.samlib.local_uri_plugin.SupportLocalUriPlugin.on_before_transform_resource": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "samcli.lib.samlib.resource_metadata_normalizer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.lib.samlib.resource_metadata_normalizer.logging"
   ]
  },
  "type": "module"
 },
 "samcli.lib.samlib.resource_metadata_normalizer.ASSET_PATH_METADATA_KEY": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "samcli.lib.samlib.resource_metadata_normalizer.ASSET_PROPERTY_METADATA_KEY": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "samcli.lib.samlib.resource_metadata_normalizer.LOG": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "samcli.lib.samlib.resource_metadata_normalizer.METADATA_KEY": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "samcli.lib.samlib.resource_metadata_normalizer.PROPERTIES_KEY": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "samcli.lib.samlib.resource_metadata_normalizer.RESOURCES_KEY": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "samcli.lib.samlib.resource_metadata_normalizer.ResourceMetadataNormalizer": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "samcli.lib.samlib.resource_metadata_normalizer.ResourceMetadataNormalizer._replace_property": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "samcli.lib.samlib.resource_metadata_normalizer.LOG",
    "samcli.lib.samlib.resource_metadata_normalizer.PROPERTIES_KEY",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.samlib.resource_metadata_normalizer.ResourceMetadataNormalizer.normalize": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "samcli.lib.samlib.resource_metadata_normalizer.ASSET_PATH_METADATA_KEY",
    "samcli.lib.samlib.resource_metadata_normalizer.ASSET_PROPERTY_METADATA_KEY",
    "samcli.lib.samlib.resource_metadata_normalizer.METADATA_KEY",
    "samcli.lib.samlib.resource_metadata_normalizer.RESOURCES_KEY",
    "samcli.lib.samlib.resource_metadata_normalizer.ResourceMetadataNormalizer",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.samlib.resource_metadata_normalizer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.lib.samlib.wrapper": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.samlib.wrapper.InvalidDocumentException": {
  "data": {
   "shadows": "samtranslator.model.exceptions.InvalidDocumentException"
  },
  "type": "import"
 },
 "samcli.lib.samlib.wrapper.InvalidEventException": {
  "data": {
   "shadows": "samtranslator.model.exceptions.InvalidEventException"
  },
  "type": "import"
 },
 "samcli.lib.samlib.wrapper.InvalidResourceException": {
  "data": {
   "shadows": "samtranslator.model.exceptions.InvalidResourceException"
  },
  "type": "import"
 },
 "samcli.lib.samlib.wrapper.InvalidSamDocumentException": {
  "data": {
   "shadows": "samcli.commands.validate.lib.exceptions.InvalidSamDocumentException"
  },
  "type": "import"
 },
 "samcli.lib.samlib.wrapper.InvalidTemplateException": {
  "data": {
   "shadows": "samtranslator.model.exceptions.InvalidTemplateException"
  },
  "type": "import"
 },
 "samcli.lib.samlib.wrapper.LifeCycleEvents": {
  "data": {
   "shadows": "samtranslator.plugins.LifeCycleEvents"
  },
  "type": "import"
 },
 "samcli.lib.samlib.wrapper.ManagedPolicyLoader": {
  "data": {
   "shadows": "samtranslator.translator.managed_policy_translator.ManagedPolicyLoader"
  },
  "type": "import"
 },
 "samcli.lib.samlib.wrapper.Parser": {
  "data": {
   "shadows": "samtranslator.parser.parser.Parser"
  },
  "type": "import"
 },
 "samcli.lib.samlib.wrapper.ResourceTypeResolver": {
  "data": {
   "shadows": "samtranslator.model.ResourceTypeResolver"
  },
  "type": "import"
 },
 "samcli.lib.samlib.wrapper.SamTemplateValidator": {
  "data": {
   "shadows": "samtranslator.validator.validator.SamTemplateValidator"
  },
  "type": "import"
 },
 "samcli.lib.samlib.wrapper.SamTranslatorWrapper": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "samcli.lib.samlib.wrapper.os"
   ]
  },
  "type": "class"
 },
 "samcli.lib.samlib.wrapper.SamTranslatorWrapper.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "SupportLocalUriPlugin"
   ]
  },
  "type": "function"
 },
 "samcli.lib.samlib.wrapper.SamTranslatorWrapper.__managed_policy_map": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "Exception",
    "open",
    "samcli.lib.samlib.wrapper.boto3",
    "samcli.lib.samlib.wrapper.json",
    "samtranslator.translator.managed_policy_translator.ManagedPolicyLoader"
   ]
  },
  "type": "function"
 },
 "samcli.lib.samlib.wrapper.SamTranslatorWrapper.__translate": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "samtranslator.parser.parser.Parser",
    "samtranslator.translator.translator.Translator"
   ]
  },
  "type": "function"
 },
 "samcli.lib.samlib.wrapper.SamTranslatorWrapper.run_plugins": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "_SamParserReimplemented",
    "samcli.commands.validate.lib.exceptions.InvalidSamDocumentException",
    "samcli.lib.samlib.wrapper.functools",
    "samtranslator.model.exceptions.InvalidDocumentException",
    "samtranslator.translator.translator.prepare_plugins",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.samlib.wrapper.SamTranslatorWrapper.template": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "property",
    "samcli.lib.samlib.wrapper.copy"
   ]
  },
  "type": "function"
 },
 "samcli.lib.samlib.wrapper.Translator": {
  "data": {
   "shadows": "samtranslator.translator.translator.Translator"
  },
  "type": "import"
 },
 "samcli.lib.samlib.wrapper._SamParserReimplemented": {
  "data": {
   "lineno": 124
  },
  "type": "class"
 },
 "samcli.lib.samlib.wrapper._SamParserReimplemented._validate": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "samtranslator.model.exceptions.InvalidDocumentException",
    "samtranslator.model.exceptions.InvalidTemplateException",
    "samtranslator.validator.validator.SamTemplateValidator.validate"
   ]
  },
  "type": "function"
 },
 "samcli.lib.samlib.wrapper._SamParserReimplemented.parse": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "samtranslator.model.ResourceTypeResolver",
    "samtranslator.model.exceptions.InvalidDocumentException",
    "samtranslator.model.exceptions.InvalidEventException",
    "samtranslator.model.exceptions.InvalidResourceException",
    "samtranslator.model.sam_resources",
    "samtranslator.plugins.LifeCycleEvents.before_transform_template"
   ]
  },
  "type": "function"
 },
 "samcli.lib.samlib.wrapper.boto3": {
  "data": {
   "shadows": "boto3"
  },
  "type": "import"
 },
 "samcli.lib.samlib.wrapper.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "samcli.lib.samlib.wrapper.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "samcli.lib.samlib.wrapper.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "samcli.lib.samlib.wrapper.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.lib.samlib.wrapper.prepare_plugins": {
  "data": {
   "shadows": "samtranslator.translator.translator.prepare_plugins"
  },
  "type": "import"
 },
 "samcli.lib.samlib.wrapper.sam_resources": {
  "data": {
   "shadows": "samtranslator.model.sam_resources"
  },
  "type": "import"
 },
 "samcli.lib.schemas": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.schemas.cli_paginator": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.schemas.cli_paginator.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.lib.schemas.cli_paginator.do_paginate_cli": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "map",
    "samcli.lib.schemas.cli_paginator.click",
    "str",
    "str.format"
   ]
  },
  "type": "function"
 },
 "samcli.lib.schemas.schemas_api_caller": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.schemas.schemas_api_caller.ClientError": {
  "data": {
   "shadows": "botocore.exceptions.ClientError"
  },
  "type": "import"
 },
 "samcli.lib.schemas.schemas_api_caller.DEFAULT_EVENT_DETAIL_TYPE": {
  "data": {
   "shadows": "samcli.lib.schemas.schemas_constants.DEFAULT_EVENT_DETAIL_TYPE"
  },
  "type": "import"
 },
 "samcli.lib.schemas.schemas_api_caller.DEFAULT_EVENT_SOURCE": {
  "data": {
   "shadows": "samcli.lib.schemas.schemas_constants.DEFAULT_EVENT_SOURCE"
  },
  "type": "import"
 },
 "samcli.lib.schemas.schemas_api_caller.EndpointConnectionError": {
  "data": {
   "shadows": "botocore.exceptions.EndpointConnectionError"
  },
  "type": "import"
 },
 "samcli.lib.schemas.schemas_api_caller.JSONDecodeError": {
  "data": {
   "shadows": "json.JSONDecodeError"
  },
  "type": "import"
 },
 "samcli.lib.schemas.schemas_api_caller.NotAvailableInRegion": {
  "data": {
   "shadows": "samcli.commands.local.cli_common.user_exceptions.NotAvailableInRegion"
  },
  "type": "import"
 },
 "samcli.lib.schemas.schemas_api_caller.ResourceNotFound": {
  "data": {
   "shadows": "samcli.commands.local.cli_common.user_exceptions.ResourceNotFound"
  },
  "type": "import"
 },
 "samcli.lib.schemas.schemas_api_caller.SCHEMAS_NOT_AVAILABLE_IN_REGION_ERROR": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "samcli.lib.schemas.schemas_api_caller.SchemasApiCaller": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "samcli.lib.schemas.schemas_api_caller.SchemasApiCaller.__init__": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "samcli.lib.schemas.schemas_api_caller.SchemasApiCaller.download_source_code_binding": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "botocore.exceptions.EndpointConnectionError",
    "samcli.commands.local.cli_common.user_exceptions.NotAvailableInRegion",
    "samcli.lib.schemas.schemas_api_caller.SCHEMAS_NOT_AVAILABLE_IN_REGION_ERROR"
   ]
  },
  "type": "function"
 },
 "samcli.lib.schemas.schemas_api_caller.SchemasApiCaller.get_latest_schema_version": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "botocore.exceptions.EndpointConnectionError",
    "samcli.commands.local.cli_common.user_exceptions.NotAvailableInRegion",
    "samcli.lib.schemas.schemas_api_caller.SCHEMAS_NOT_AVAILABLE_IN_REGION_ERROR"
   ]
  },
  "type": "function"
 },
 "samcli.lib.schemas.schemas_api_caller.SchemasApiCaller.get_schema_metadata": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "botocore.exceptions.EndpointConnectionError",
    "json.JSONDecodeError",
    "len",
    "list",
    "samcli.commands.exceptions.SchemasApiException",
    "samcli.commands.local.cli_common.user_exceptions.NotAvailableInRegion",
    "samcli.lib.schemas.schemas_api_caller.SCHEMAS_NOT_AVAILABLE_IN_REGION_ERROR",
    "samcli.lib.schemas.schemas_api_caller.json",
    "samcli.lib.schemas.schemas_constants.DEFAULT_EVENT_DETAIL_TYPE",
    "samcli.lib.schemas.schemas_constants.DEFAULT_EVENT_SOURCE",
    "samcli.lib.schemas.schemas_directory_hierarchy_builder.get_package_hierarchy",
    "samcli.lib.schemas.schemas_directory_hierarchy_builder.sanitize_name"
   ]
  },
  "type": "function"
 },
 "samcli.lib.schemas.schemas_api_caller.SchemasApiCaller.list_registries": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "botocore.exceptions.EndpointConnectionError",
    "samcli.commands.local.cli_common.user_exceptions.NotAvailableInRegion",
    "samcli.commands.local.cli_common.user_exceptions.ResourceNotFound",
    "samcli.lib.schemas.schemas_api_caller.SCHEMAS_NOT_AVAILABLE_IN_REGION_ERROR"
   ]
  },
  "type": "function"
 },
 "samcli.lib.schemas.schemas_api_caller.SchemasApiCaller.list_schemas": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "botocore.exceptions.EndpointConnectionError",
    "samcli.commands.local.cli_common.user_exceptions.NotAvailableInRegion",
    "samcli.commands.local.cli_common.user_exceptions.ResourceNotFound",
    "samcli.lib.schemas.schemas_api_caller.SCHEMAS_NOT_AVAILABLE_IN_REGION_ERROR"
   ]
  },
  "type": "function"
 },
 "samcli.lib.schemas.schemas_api_caller.SchemasApiCaller.poll_for_code_binding_status": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "botocore.exceptions.EndpointConnectionError",
    "samcli.commands.local.cli_common.user_exceptions.NotAvailableInRegion",
    "samcli.lib.schemas.schemas_api_caller.SCHEMAS_NOT_AVAILABLE_IN_REGION_ERROR"
   ]
  },
  "type": "function"
 },
 "samcli.lib.schemas.schemas_api_caller.SchemasApiCaller.put_code_binding": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "botocore.exceptions.ClientError",
    "botocore.exceptions.EndpointConnectionError",
    "samcli.commands.local.cli_common.user_exceptions.NotAvailableInRegion"
   ]
  },
  "type": "function"
 },
 "samcli.lib.schemas.schemas_api_caller.SchemasApiException": {
  "data": {
   "shadows": "samcli.commands.exceptions.SchemasApiException"
  },
  "type": "import"
 },
 "samcli.lib.schemas.schemas_api_caller.get_package_hierarchy": {
  "data": {
   "shadows": "samcli.lib.schemas.schemas_directory_hierarchy_builder.get_package_hierarchy"
  },
  "type": "import"
 },
 "samcli.lib.schemas.schemas_api_caller.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "samcli.lib.schemas.schemas_api_caller.sanitize_name": {
  "data": {
   "shadows": "samcli.lib.schemas.schemas_directory_hierarchy_builder.sanitize_name"
  },
  "type": "import"
 },
 "samcli.lib.schemas.schemas_aws_config": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.schemas.schemas_aws_config.ResourceNotFound": {
  "data": {
   "shadows": "samcli.commands.local.cli_common.user_exceptions.ResourceNotFound"
  },
  "type": "import"
 },
 "samcli.lib.schemas.schemas_aws_config.Session": {
  "data": {
   "shadows": "boto3.Session"
  },
  "type": "import"
 },
 "samcli.lib.schemas.schemas_aws_config._get_aws_profile_choice": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "map",
    "range",
    "samcli.commands.local.cli_common.user_exceptions.ResourceNotFound",
    "samcli.lib.schemas.schemas_aws_config.click",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.schemas.schemas_aws_config._get_aws_region_choice": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "dict",
    "samcli.commands.local.cli_common.user_exceptions.ResourceNotFound",
    "samcli.lib.schemas.schemas_aws_config.click",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.schemas.schemas_aws_config.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.lib.schemas.schemas_aws_config.get_aws_configuration_choice": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "_get_aws_profile_choice",
    "_get_aws_region_choice",
    "boto3.Session",
    "samcli.lib.schemas.schemas_aws_config.click"
   ]
  },
  "type": "function"
 },
 "samcli.lib.schemas.schemas_aws_config.get_schemas_client": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "boto3.Session"
   ]
  },
  "type": "function"
 },
 "samcli.lib.schemas.schemas_cli_message_generator": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.schemas.schemas_cli_message_generator.construct_cli_display_message_for_registries": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "samcli.lib.schemas.schemas_cli_message_generator.construct_cli_display_message_for_schemas": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "samcli.lib.schemas.schemas_code_manager": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.schemas.schemas_code_manager.ClientError": {
  "data": {
   "shadows": "botocore.exceptions.ClientError"
  },
  "type": "import"
 },
 "samcli.lib.schemas.schemas_code_manager.SAM_RUNTIME_TO_SCHEMAS_CODE_LANG_MAPPING": {
  "data": {
   "shadows": "samcli.local.common.runtime_template.SAM_RUNTIME_TO_SCHEMAS_CODE_LANG_MAPPING"
  },
  "type": "import"
 },
 "samcli.lib.schemas.schemas_code_manager.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.lib.schemas.schemas_code_manager.do_download_source_code_binding": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "botocore.exceptions.ClientError",
    "samcli.lib.schemas.schemas_code_manager.click",
    "samcli.local.common.runtime_template.SAM_RUNTIME_TO_SCHEMAS_CODE_LANG_MAPPING.get"
   ]
  },
  "type": "function"
 },
 "samcli.lib.schemas.schemas_code_manager.do_extract_and_merge_schemas_code": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "open",
    "samcli.lib.schemas.schemas_code_manager.click",
    "samcli.lib.schemas.schemas_code_manager.json",
    "samcli.lib.schemas.schemas_code_manager.os",
    "samcli.local.lambdafn.zip.unzip"
   ]
  },
  "type": "function"
 },
 "samcli.lib.schemas.schemas_code_manager.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "samcli.lib.schemas.schemas_code_manager.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.lib.schemas.schemas_code_manager.unzip": {
  "data": {
   "shadows": "samcli.local.lambdafn.zip.unzip"
  },
  "type": "import"
 },
 "samcli.lib.schemas.schemas_constants": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.schemas.schemas_constants.DEFAULT_EVENT_DETAIL_TYPE": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "samcli.lib.schemas.schemas_constants.DEFAULT_EVENT_SOURCE": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "samcli.lib.schemas.schemas_constants.EVENT_BRIDGE_SOURCE": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "samcli.lib.schemas.schemas_constants.EVENT_BRIDGE_SOURCE_DETAIL_TYPE": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "samcli.lib.schemas.schemas_constants.PAGE_LIMIT": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "samcli.lib.schemas.schemas_constants.SCHEMAS_REGISTRY": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "samcli.lib.schemas.schemas_constants.SCHEMA_NAME": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "samcli.lib.schemas.schemas_constants.SCHEMA_ROOT": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "samcli.lib.schemas.schemas_directory_hierarchy_builder": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.schemas.schemas_directory_hierarchy_builder.CHARACTER_TO_SANITIZE": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "samcli.lib.schemas.schemas_directory_hierarchy_builder.POTENTIAL_PACKAGE_SEPARATOR": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "samcli.lib.schemas.schemas_directory_hierarchy_builder.get_package_hierarchy": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "len",
    "sanitize_name"
   ]
  },
  "type": "function"
 },
 "samcli.lib.schemas.schemas_directory_hierarchy_builder.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "samcli.lib.schemas.schemas_directory_hierarchy_builder.sanitize_name": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "samcli.lib.schemas.schemas_directory_hierarchy_builder.CHARACTER_TO_SANITIZE",
    "samcli.lib.schemas.schemas_directory_hierarchy_builder.POTENTIAL_PACKAGE_SEPARATOR",
    "samcli.lib.schemas.schemas_directory_hierarchy_builder.re"
   ]
  },
  "type": "function"
 },
 "samcli.lib.telemetry": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.telemetry.metrics": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.lib.telemetry.metrics.logging"
   ]
  },
  "type": "module"
 },
 "samcli.lib.telemetry.metrics.Context": {
  "data": {
   "shadows": "samcli.cli.context.Context"
  },
  "type": "import"
 },
 "samcli.lib.telemetry.metrics.GlobalConfig": {
  "data": {
   "shadows": "samcli.cli.global_config.GlobalConfig"
  },
  "type": "import"
 },
 "samcli.lib.telemetry.metrics.LOG": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "samcli.lib.telemetry.metrics.TemplateWarningsChecker": {
  "data": {
   "shadows": "samcli.lib.warnings.sam_cli_warning.TemplateWarningsChecker"
  },
  "type": "import"
 },
 "samcli.lib.telemetry.metrics.UserException": {
  "data": {
   "shadows": "samcli.commands.exceptions.UserException"
  },
  "type": "import"
 },
 "samcli.lib.telemetry.metrics.WARNING_ANNOUNCEMENT": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "samcli.lib.telemetry.metrics._build_warning_metric": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "samcli.lib.telemetry.metrics._telemetry_enabled": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "bool",
    "samcli.cli.global_config.GlobalConfig"
   ]
  },
  "type": "function"
 },
 "samcli.lib.telemetry.metrics._timer": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "timeit.default_timer"
   ]
  },
  "type": "function"
 },
 "samcli.lib.telemetry.metrics._timer.end": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "int",
    "max",
    "timeit.default_timer"
   ]
  },
  "type": "function"
 },
 "samcli.lib.telemetry.metrics.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.lib.telemetry.metrics.default_timer": {
  "data": {
   "shadows": "timeit.default_timer"
  },
  "type": "import"
 },
 "samcli.lib.telemetry.metrics.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.lib.telemetry.metrics.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "samcli.lib.telemetry.metrics.send_installed_metric": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "Telemetry",
    "_telemetry_enabled",
    "samcli.lib.telemetry.metrics.LOG",
    "samcli.lib.telemetry.metrics.platform"
   ]
  },
  "type": "function"
 },
 "samcli.lib.telemetry.metrics.track_command": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "samcli.lib.telemetry.metrics.track_command.wrapped": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "Exception",
    "Telemetry",
    "_telemetry_enabled",
    "_timer",
    "bool",
    "duration_fn",
    "func",
    "samcli.cli.context.Context.get_current_context",
    "samcli.commands.exceptions.UserException",
    "type"
   ]
  },
  "type": "function"
 },
 "samcli.lib.telemetry.metrics.track_template_warnings": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "samcli.lib.telemetry.metrics.track_template_warnings.decorator": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "samcli.lib.telemetry.metrics.track_template_warnings.decorator.wrapped": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "AttributeError",
    "Telemetry",
    "_build_warning_metric",
    "_telemetry_enabled",
    "func",
    "samcli.cli.context.Context.get_current_context",
    "samcli.lib.telemetry.metrics.LOG",
    "samcli.lib.telemetry.metrics.WARNING_ANNOUNCEMENT",
    "samcli.lib.telemetry.metrics.click",
    "samcli.lib.warnings.sam_cli_warning.TemplateWarningsChecker"
   ]
  },
  "type": "function"
 },
 "samcli.lib.telemetry.telemetry": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.lib.telemetry.telemetry.logging"
   ]
  },
  "type": "module"
 },
 "samcli.lib.telemetry.telemetry.Context": {
  "data": {
   "shadows": "samcli.cli.context.Context"
  },
  "type": "import"
 },
 "samcli.lib.telemetry.telemetry.DEFAULT_ENDPOINT_URL": {
  "data": {
   "shadows": "samcli.settings.telemetry_endpoint_url"
  },
  "type": "import"
 },
 "samcli.lib.telemetry.telemetry.GlobalConfig": {
  "data": {
   "shadows": "samcli.cli.global_config.GlobalConfig"
  },
  "type": "import"
 },
 "samcli.lib.telemetry.telemetry.LOG": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "samcli.lib.telemetry.telemetry.Telemetry": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "samcli.lib.telemetry.telemetry.Telemetry.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "RuntimeError",
    "samcli.cli.global_config.GlobalConfig",
    "samcli.lib.telemetry.telemetry.LOG",
    "samcli.settings.telemetry_endpoint_url"
   ]
  },
  "type": "function"
 },
 "samcli.lib.telemetry.telemetry.Telemetry._add_common_metric_attributes": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "samcli.__version__",
    "samcli.lib.telemetry.telemetry.platform",
    "samcli.lib.telemetry.telemetry.uuid",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.telemetry.telemetry.Telemetry._default_session_id": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "samcli.cli.context.Context.get_current_context"
   ]
  },
  "type": "function"
 },
 "samcli.lib.telemetry.telemetry.Telemetry._get_execution_environment": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "samcli.lib.telemetry.telemetry.Telemetry._send": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "samcli.lib.telemetry.telemetry.LOG",
    "samcli.lib.telemetry.telemetry.requests",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.lib.telemetry.telemetry.Telemetry.emit": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "samcli.lib.telemetry.telemetry.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.lib.telemetry.telemetry.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "samcli.lib.telemetry.telemetry.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "samcli.lib.telemetry.telemetry.samcli_version": {
  "data": {
   "shadows": "samcli.__version__"
  },
  "type": "import"
 },
 "samcli.lib.telemetry.telemetry.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "samcli.lib.utils": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.utils.botoconfig": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.utils.botoconfig.Config": {
  "data": {
   "shadows": "botocore.config.Config"
  },
  "type": "import"
 },
 "samcli.lib.utils.botoconfig.GlobalConfig": {
  "data": {
   "shadows": "samcli.cli.global_config.GlobalConfig"
  },
  "type": "import"
 },
 "samcli.lib.utils.botoconfig.__version__": {
  "data": {
   "shadows": "samcli.__version__"
  },
  "type": "import"
 },
 "samcli.lib.utils.botoconfig.get_boto_config_with_user_agent": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "botocore.config.Config",
    "samcli.__version__",
    "samcli.cli.global_config.GlobalConfig"
   ]
  },
  "type": "function"
 },
 "samcli.lib.utils.codeuri": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.lib.utils.codeuri.logging"
   ]
  },
  "type": "module"
 },
 "samcli.lib.utils.codeuri.LOG": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "samcli.lib.utils.codeuri.PRESENT_DIR": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "samcli.lib.utils.codeuri.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.lib.utils.codeuri.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.lib.utils.codeuri.resolve_code_path": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "samcli.lib.utils.codeuri.LOG",
    "samcli.lib.utils.codeuri.PRESENT_DIR",
    "samcli.lib.utils.codeuri.os"
   ]
  },
  "type": "function"
 },
 "samcli.lib.utils.colors": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.utils.colors.Colored": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "samcli.lib.utils.colors.Colored.__init__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "samcli.lib.utils.colors.Colored._color": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "samcli.lib.utils.colors.click"
   ]
  },
  "type": "function"
 },
 "samcli.lib.utils.colors.Colored.cyan": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "samcli.lib.utils.colors.Colored.green": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "samcli.lib.utils.colors.Colored.red": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "samcli.lib.utils.colors.Colored.underline": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "samcli.lib.utils.colors.click"
   ]
  },
  "type": "function"
 },
 "samcli.lib.utils.colors.Colored.white": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "samcli.lib.utils.colors.Colored.yellow": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "samcli.lib.utils.colors.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.lib.utils.feature_flag": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.utils.feature_flag.EXTENSIONS_PREVIEW_ENV": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "samcli.lib.utils.feature_flag.extensions_preview_enabled": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "os.getenv",
    "samcli.lib.utils.feature_flag.EXTENSIONS_PREVIEW_ENV"
   ]
  },
  "type": "function"
 },
 "samcli.lib.utils.feature_flag.getenv": {
  "data": {
   "shadows": "os.getenv"
  },
  "type": "import"
 },
 "samcli.lib.utils.hash": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.utils.hash.BLOCK_SIZE": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "samcli.lib.utils.hash.dir_checksum": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "list",
    "samcli.lib.utils.hash.file_checksum",
    "samcli.lib.utils.hash.hashlib",
    "samcli.lib.utils.hash.os"
   ]
  },
  "type": "function"
 },
 "samcli.lib.utils.hash.file_checksum": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "open",
    "samcli.lib.utils.hash.BLOCK_SIZE",
    "samcli.lib.utils.hash.hashlib"
   ]
  },
  "type": "function"
 },
 "samcli.lib.utils.hash.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "samcli.lib.utils.hash.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.lib.utils.hash.str_checksum": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "samcli.lib.utils.hash.hashlib"
   ]
  },
  "type": "function"
 },
 "samcli.lib.utils.osutils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.lib.utils.osutils.logging"
   ]
  },
  "type": "module"
 },
 "samcli.lib.utils.osutils.LOG": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "samcli.lib.utils.osutils.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "samcli.lib.utils.osutils.copytree": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "OSError",
    "ignore",
    "samcli.lib.utils.osutils.LOG",
    "samcli.lib.utils.osutils.os",
    "samcli.lib.utils.osutils.shutil",
    "set"
   ]
  },
  "type": "function"
 },
 "samcli.lib.utils.osutils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.lib.utils.osutils.mkdir_temp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "samcli.lib.utils.osutils.os",
    "samcli.lib.utils.osutils.shutil",
    "samcli.lib.utils.osutils.tempfile"
   ]
  },
  "type": "function"
 },
 "samcli.lib.utils.osutils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.lib.utils.osutils.remove": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "OSError",
    "samcli.lib.utils.osutils.os"
   ]
  },
  "type": "function"
 },
 "samcli.lib.utils.osutils.rmtree_callback": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "OSError",
    "samcli.lib.utils.osutils.LOG",
    "samcli.lib.utils.osutils.os",
    "samcli.lib.utils.osutils.stat"
   ]
  },
  "type": "function"
 },
 "samcli.lib.utils.osutils.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "samcli.lib.utils.osutils.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "samcli.lib.utils.osutils.stderr": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "samcli.lib.utils.osutils.sys"
   ]
  },
  "type": "function"
 },
 "samcli.lib.utils.osutils.stdout": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "samcli.lib.utils.osutils.sys"
   ]
  },
  "type": "function"
 },
 "samcli.lib.utils.osutils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "samcli.lib.utils.osutils.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "samcli.lib.utils.osutils.tempfile_platform_independent": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "samcli.lib.utils.osutils.remove",
    "samcli.lib.utils.osutils.tempfile"
   ]
  },
  "type": "function"
 },
 "samcli.lib.utils.progressbar": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.utils.progressbar.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "samcli.lib.utils.progressbar.progressbar": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "samcli.lib.utils.progressbar.click"
   ]
  },
  "type": "function"
 },
 "samcli.lib.utils.retry": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.utils.retry.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "samcli.lib.utils.retry.retry": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "samcli.lib.utils.retry.retry.retry_wrapper": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "samcli.lib.utils.retry.retry.retry_wrapper.wrapper": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "exc_raise",
    "func",
    "functools.wraps",
    "samcli.lib.utils.retry.math",
    "samcli.lib.utils.retry.time"
   ]
  },
  "type": "function"
 },
 "samcli.lib.utils.retry.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "samcli.lib.utils.retry.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "samcli.lib.utils.sam_logging": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.utils.sam_logging.SamCliLogger": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "samcli.lib.utils.sam_logging.SamCliLogger.configure_logger": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "samcli.lib.utils.sam_logging.logging",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.utils.sam_logging.SamCliLogger.configure_null_logger": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "samcli.lib.utils.sam_logging.logging",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.lib.utils.sam_logging.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.lib.utils.stream_writer": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.utils.stream_writer.StreamWriter": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "samcli.lib.utils.stream_writer.StreamWriter.__init__": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "samcli.lib.utils.stream_writer.StreamWriter.flush": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "samcli.lib.utils.stream_writer.StreamWriter.write": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "samcli.lib.utils.tar": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.utils.tar.TemporaryFile": {
  "data": {
   "shadows": "tempfile.TemporaryFile"
  },
  "type": "import"
 },
 "samcli.lib.utils.tar.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "samcli.lib.utils.tar.create_tarball": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "samcli.lib.utils.tar.tarfile",
    "tempfile.TemporaryFile"
   ]
  },
  "type": "function"
 },
 "samcli.lib.utils.tar.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "samcli.lib.utils.temp_file_utils": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.utils.temp_file_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.lib.utils.temp_file_utils.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "samcli.lib.utils.time": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.utils.time.dateparser": {
  "data": {
   "shadows": "dateparser"
  },
  "type": "import"
 },
 "samcli.lib.utils.time.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "samcli.lib.utils.time.parse_date": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "samcli.lib.utils.time.dateparser",
    "samcli.lib.utils.time.datetime"
   ]
  },
  "type": "function"
 },
 "samcli.lib.utils.time.timestamp_to_iso": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "to_datetime"
   ]
  },
  "type": "function"
 },
 "samcli.lib.utils.time.to_datetime": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "int",
    "samcli.lib.utils.time.datetime"
   ]
  },
  "type": "function"
 },
 "samcli.lib.utils.time.to_timestamp": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "int",
    "samcli.lib.utils.time.datetime"
   ]
  },
  "type": "function"
 },
 "samcli.lib.utils.time.to_utc": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "dateutil.tz.tzutc"
   ]
  },
  "type": "function"
 },
 "samcli.lib.utils.time.tzutc": {
  "data": {
   "shadows": "dateutil.tz.tzutc"
  },
  "type": "import"
 },
 "samcli.lib.utils.time.utc_to_timestamp": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "samcli.lib.utils.time.to_timestamp"
   ]
  },
  "type": "function"
 },
 "samcli.lib.warnings": {
  "data": {},
  "type": "module"
 },
 "samcli.lib.warnings.sam_cli_warning": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.lib.warnings.sam_cli_warning.logging"
   ]
  },
  "type": "module"
 },
 "samcli.lib.warnings.sam_cli_warning.CodeDeployConditionWarning": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "samcli.lib.warnings.sam_cli_warning.TemplateWarning"
   ]
  },
  "type": "class"
 },
 "samcli.lib.warnings.sam_cli_warning.CodeDeployConditionWarning._have_condition": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "samcli.lib.warnings.sam_cli_warning.CodeDeployConditionWarning._have_deployment_preferences": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "samcli.lib.warnings.sam_cli_warning.CodeDeployConditionWarning.check": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "samcli.lib.warnings.sam_cli_warning.CodeDeployWarning": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "samcli.lib.warnings.sam_cli_warning.TemplateWarning"
   ]
  },
  "type": "class"
 },
 "samcli.lib.warnings.sam_cli_warning.CodeDeployWarning.check": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "samcli.lib.warnings.sam_cli_warning._get_deployment_preferences_status",
    "sum"
   ]
  },
  "type": "function"
 },
 "samcli.lib.warnings.sam_cli_warning.LOG": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "samcli.lib.warnings.sam_cli_warning.TemplateWarning": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "samcli.lib.warnings.sam_cli_warning.TemplateWarning.check": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "samcli.lib.warnings.sam_cli_warning.TemplateWarningsChecker": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "samcli.lib.warnings.sam_cli_warning.TemplateWarningsChecker.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "CodeDeployConditionWarning",
    "CodeDeployWarning"
   ]
  },
  "type": "function"
 },
 "samcli.lib.warnings.sam_cli_warning.TemplateWarningsChecker.check_template_for_warning": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "samcli.lib.warnings.sam_cli_warning.LOG"
   ]
  },
  "type": "function"
 },
 "samcli.lib.warnings.sam_cli_warning._get_deployment_preferences_status": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "samcli.lib.warnings.sam_cli_warning.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.local": {
  "data": {},
  "type": "module"
 },
 "samcli.local.apigw": {
  "data": {},
  "type": "module"
 },
 "samcli.local.apigw.local_apigw_service": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.local.apigw.local_apigw_service.logging"
   ]
  },
  "type": "module"
 },
 "samcli.local.apigw.local_apigw_service.ApiGatewayLambdaEvent": {
  "data": {
   "shadows": "samcli.local.events.api_event.ApiGatewayLambdaEvent"
  },
  "type": "import"
 },
 "samcli.local.apigw.local_apigw_service.BaseLocalService": {
  "data": {
   "shadows": "samcli.local.services.base_local_service.BaseLocalService"
  },
  "type": "import"
 },
 "samcli.local.apigw.local_apigw_service.ContextIdentity": {
  "data": {
   "shadows": "samcli.local.events.api_event.ContextIdentity"
  },
  "type": "import"
 },
 "samcli.local.apigw.local_apigw_service.Cors": {
  "data": {
   "shadows": "samcli.lib.providers.provider.Cors"
  },
  "type": "import"
 },
 "samcli.local.apigw.local_apigw_service.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "samcli.local.apigw.local_apigw_service.FunctionNotFound": {
  "data": {
   "shadows": "samcli.local.lambdafn.exceptions.FunctionNotFound"
  },
  "type": "import"
 },
 "samcli.local.apigw.local_apigw_service.Headers": {
  "data": {
   "shadows": "werkzeug.datastructures.Headers"
  },
  "type": "import"
 },
 "samcli.local.apigw.local_apigw_service.LOG": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "samcli.local.apigw.local_apigw_service.LambdaOutputParser": {
  "data": {
   "shadows": "samcli.local.services.base_local_service.LambdaOutputParser"
  },
  "type": "import"
 },
 "samcli.local.apigw.local_apigw_service.LambdaResponseParseException": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "samcli.local.services.base_local_service.BaseLocalService"
   ]
  },
  "type": "class"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "samcli.local.apigw.local_apigw_service.LocalApigwService",
    "super"
   ]
  },
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService._construct_error_handling": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService._construct_event": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "samcli.local.apigw.local_apigw_service.LOG",
    "samcli.local.apigw.local_apigw_service.LocalApigwService",
    "samcli.local.apigw.local_apigw_service.base64",
    "samcli.local.apigw.local_apigw_service.json",
    "samcli.local.events.api_event.ApiGatewayLambdaEvent",
    "samcli.local.events.api_event.ContextIdentity",
    "samcli.local.events.api_event.RequestContext",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService._event_headers": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService._generate_route_keys": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService._get_current_route": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "KeyError",
    "samcli.local.apigw.local_apigw_service.LOG"
   ]
  },
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService._invalid_apig_response_keys": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService._merge_response_headers": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "staticmethod",
    "werkzeug.datastructures.Headers"
   ]
  },
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService._parse_lambda_output": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "dict",
    "int",
    "isinstance",
    "samcli.local.apigw.local_apigw_service.LOG",
    "samcli.local.apigw.local_apigw_service.LambdaResponseParseException",
    "samcli.local.apigw.local_apigw_service.LocalApigwService",
    "samcli.local.apigw.local_apigw_service.base64",
    "samcli.local.apigw.local_apigw_service.json",
    "staticmethod",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService._query_string_params": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService._request_handler": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "flask.request",
    "samcli.lib.providers.provider.Cors.cors_to_headers",
    "samcli.lib.utils.stream_writer.StreamWriter",
    "samcli.local.apigw.local_apigw_service.LOG",
    "samcli.local.apigw.local_apigw_service.LambdaResponseParseException",
    "samcli.local.apigw.local_apigw_service.io",
    "samcli.local.lambdafn.exceptions.FunctionNotFound",
    "samcli.local.services.base_local_service.LambdaOutputParser.get_lambda_output",
    "werkzeug.datastructures.Headers"
   ]
  },
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService._route_key": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService._should_base64_decode_body": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService._should_base64_encode": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService.create": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "__name__",
    "flask.Flask"
   ]
  },
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService.get_request_methods_endpoints": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.RequestContext": {
  "data": {
   "shadows": "samcli.local.events.api_event.RequestContext"
  },
  "type": "import"
 },
 "samcli.local.apigw.local_apigw_service.Route": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "samcli.local.apigw.local_apigw_service.Route.__eq__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "isinstance",
    "samcli.local.apigw.local_apigw_service.Route",
    "sorted"
   ]
  },
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.Route.__hash__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "hash",
    "sorted"
   ]
  },
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.Route.__init__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.Route.normalize_method": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.StreamWriter": {
  "data": {
   "shadows": "samcli.lib.utils.stream_writer.StreamWriter"
  },
  "type": "import"
 },
 "samcli.local.apigw.local_apigw_service.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "samcli.local.apigw.local_apigw_service.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "samcli.local.apigw.local_apigw_service.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "samcli.local.apigw.local_apigw_service.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.local.apigw.local_apigw_service.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "samcli.local.apigw.path_converter": {
  "data": {
   "symbols_in_volume": [
    "samcli.local.apigw.path_converter.FLASK_CAPTURE_ALL_PATH_REGEX",
    "samcli.local.apigw.path_converter.PROXY_PATH_PARAMS_ESCAPED",
    "samcli.local.apigw.path_converter.re"
   ]
  },
  "type": "module"
 },
 "samcli.local.apigw.path_converter.APIGW_TO_FLASK_REGEX": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "samcli.local.apigw.path_converter.FLASK_CAPTURE_ALL_PATH": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "samcli.local.apigw.path_converter.FLASK_CAPTURE_ALL_PATH_REGEX": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "samcli.local.apigw.path_converter.FLASK_TO_APIGW_REGEX": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "samcli.local.apigw.path_converter.LEFT_ANGLE_BRACKET": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "samcli.local.apigw.path_converter.LEFT_BRACKET": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "samcli.local.apigw.path_converter.PROXY_PATH_PARAMS": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "samcli.local.apigw.path_converter.PROXY_PATH_PARAMS_ESCAPED": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "samcli.local.apigw.path_converter.PathConverter": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "samcli.local.apigw.path_converter.PathConverter.convert_path_to_api_gateway": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "samcli.local.apigw.path_converter.FLASK_TO_APIGW_REGEX",
    "samcli.local.apigw.path_converter.LEFT_ANGLE_BRACKET",
    "samcli.local.apigw.path_converter.LEFT_BRACKET",
    "samcli.local.apigw.path_converter.PROXY_PATH_PARAMS",
    "samcli.local.apigw.path_converter.RIGHT_ANGLE_BRACKET",
    "samcli.local.apigw.path_converter.RIGHT_BRACKET",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.apigw.path_converter.PathConverter.convert_path_to_flask": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "samcli.local.apigw.path_converter.APIGW_TO_FLASK_REGEX",
    "samcli.local.apigw.path_converter.FLASK_CAPTURE_ALL_PATH",
    "samcli.local.apigw.path_converter.LEFT_ANGLE_BRACKET",
    "samcli.local.apigw.path_converter.LEFT_BRACKET",
    "samcli.local.apigw.path_converter.RIGHT_ANGLE_BRACKET",
    "samcli.local.apigw.path_converter.RIGHT_BRACKET",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.apigw.path_converter.RIGHT_ANGLE_BRACKET": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "samcli.local.apigw.path_converter.RIGHT_BRACKET": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "samcli.local.apigw.path_converter.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "samcli.local.apigw.service_error_responses": {
  "data": {},
  "type": "module"
 },
 "samcli.local.apigw.service_error_responses.ServiceErrorResponses": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "samcli.local.apigw.service_error_responses.ServiceErrorResponses.lambda_failure_response": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "flask.jsonify",
    "flask.make_response",
    "samcli.local.apigw.service_error_responses.ServiceErrorResponses",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.apigw.service_error_responses.ServiceErrorResponses.lambda_not_found_response": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "flask.jsonify",
    "flask.make_response",
    "samcli.local.apigw.service_error_responses.ServiceErrorResponses",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.apigw.service_error_responses.ServiceErrorResponses.route_not_found": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "flask.jsonify",
    "flask.make_response",
    "samcli.local.apigw.service_error_responses.ServiceErrorResponses",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.apigw.service_error_responses.jsonify": {
  "data": {
   "shadows": "flask.jsonify"
  },
  "type": "import"
 },
 "samcli.local.apigw.service_error_responses.make_response": {
  "data": {
   "shadows": "flask.make_response"
  },
  "type": "import"
 },
 "samcli.local.common": {
  "data": {},
  "type": "module"
 },
 "samcli.local.common.runtime_template": {
  "data": {
   "symbols_in_volume": [
    "list",
    "samcli.local.common.runtime_template.RUNTIME_DEP_TEMPLATE_MAPPING",
    "samcli.local.common.runtime_template._init_path",
    "samcli.local.common.runtime_template._templates",
    "samcli.local.common.runtime_template.itertools",
    "samcli.local.common.runtime_template.os",
    "samcli.local.common.runtime_template.pathlib",
    "set",
    "str"
   ]
  },
  "type": "module"
 },
 "samcli.local.common.runtime_template.INIT_RUNTIMES": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "samcli.local.common.runtime_template.RUNTIMES": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "samcli.local.common.runtime_template.RUNTIME_DEP_TEMPLATE_MAPPING": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "samcli.local.common.runtime_template.RUNTIME_TO_DEPENDENCY_MANAGERS": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "samcli.local.common.runtime_template.SAM_RUNTIME_TO_SCHEMAS_CODE_LANG_MAPPING": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "samcli.local.common.runtime_template.SUPPORTED_DEP_MANAGERS": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "samcli.local.common.runtime_template._init_path": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "samcli.local.common.runtime_template._templates": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "samcli.local.common.runtime_template.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "samcli.local.common.runtime_template.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.local.common.runtime_template.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "samcli.local.docker": {
  "data": {},
  "type": "module"
 },
 "samcli.local.docker.container": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.local.docker.container.logging"
   ]
  },
  "type": "module"
 },
 "samcli.local.docker.container.Container": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "samcli.local.docker.container.Container.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "samcli.lib.utils.feature_flag.extensions_preview_enabled",
    "samcli.local.docker.container.docker",
    "samcli.local.docker.container.socket"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.container.Container._write_container_output": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.container.Container.copy": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "RuntimeError",
    "samcli.local.docker.container.LOG",
    "samcli.local.docker.container.tarfile",
    "samcli.local.docker.container.tempfile"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.container.Container.create": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "RuntimeError",
    "samcli.local.docker.container.LOG",
    "to_posix_path"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.container.Container.delete": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "samcli.local.docker.container.LOG",
    "samcli.local.docker.container.docker",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.container.Container.image": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.container.Container.is_created": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "samcli.local.docker.container.Container.network_id": {
  "data": {
   "lineno": 308
  },
  "type": "function"
 },
 "samcli.local.docker.container.Container.start": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.container.Container.wait_for_http_response": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "samcli.lib.utils.retry.retry",
    "samcli.local.docker.container.ContainerResponseException",
    "samcli.local.docker.container.requests"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.container.Container.wait_for_logs": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.container.Container.wait_for_result": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "samcli.local.docker.container.threading"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.container.ContainerResponseException": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "samcli.local.docker.container.LOG": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "samcli.local.docker.container.docker": {
  "data": {
   "shadows": "docker"
  },
  "type": "import"
 },
 "samcli.local.docker.container.extensions_preview_enabled": {
  "data": {
   "shadows": "samcli.lib.utils.feature_flag.extensions_preview_enabled"
  },
  "type": "import"
 },
 "samcli.local.docker.container.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.local.docker.container.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "samcli.local.docker.container.retry": {
  "data": {
   "shadows": "samcli.lib.utils.retry.retry"
  },
  "type": "import"
 },
 "samcli.local.docker.container.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "samcli.local.docker.container.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "samcli.local.docker.container.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "samcli.local.docker.container.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "samcli.local.docker.lambda_build_container": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.local.docker.lambda_build_container.logging"
   ]
  },
  "type": "module"
 },
 "samcli.local.docker.lambda_build_container.LOG": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "samcli.local.docker.lambda_build_container.LambdaBuildContainer": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "samcli.local.docker.lambda_build_container.LambdaBuildContainer.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "samcli.local.docker.lambda_build_container.LambdaBuildContainer",
    "samcli.local.docker.lambda_build_container.pathlib",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.lambda_build_container.LambdaBuildContainer._convert_to_container_dirs": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "samcli.local.docker.lambda_build_container.LOG",
    "samcli.local.docker.lambda_build_container.pathlib",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.lambda_build_container.LambdaBuildContainer._get_container_dirs": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "samcli.local.docker.lambda_build_container.pathlib",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.lambda_build_container.LambdaBuildContainer._get_entrypoint": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "samcli.local.docker.lambda_build_container.LambdaBuildContainer",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.lambda_build_container.LambdaBuildContainer._get_image": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "samcli.local.docker.lambda_build_container.LambdaBuildContainer",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.lambda_build_container.LambdaBuildContainer._make_request": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "samcli.local.docker.lambda_build_container.json",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.lambda_build_container.LambdaBuildContainer.executable_name": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "property",
    "samcli.local.docker.lambda_build_container.LambdaBuildContainer"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.lambda_build_container.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "samcli.local.docker.lambda_build_container.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.local.docker.lambda_build_container.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "samcli.local.docker.lambda_container": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.local.docker.lambda_container.logging"
   ]
  },
  "type": "module"
 },
 "samcli.local.docker.lambda_container.LOG": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "samcli.local.docker.lambda_container.LambdaContainer": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "samcli.local.docker.lambda_container.LambdaContainer.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "samcli.lib.utils.feature_flag.extensions_preview_enabled",
    "samcli.local.docker.lambda_container.LambdaContainer",
    "super"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.lambda_container.LambdaContainer._get_additional_options": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.lambda_container.LambdaContainer._get_additional_volumes": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "samcli.local.docker.lambda_container.LambdaContainer",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.lambda_container.LambdaContainer._get_debug_settings": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "samcli.local.docker.lambda_container.LambdaContainer",
    "samcli.local.docker.lambda_debug_settings.LambdaDebugSettings.get_debug_settings",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.lambda_container.LambdaContainer._get_exposed_ports": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.lambda_container.LambdaContainer._get_image": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "bool",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.lambda_container.LambdaDebugSettings": {
  "data": {
   "shadows": "samcli.local.docker.lambda_debug_settings.LambdaDebugSettings"
  },
  "type": "import"
 },
 "samcli.local.docker.lambda_container.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "samcli.local.docker.lambda_container.extensions_preview_enabled": {
  "data": {
   "shadows": "samcli.lib.utils.feature_flag.extensions_preview_enabled"
  },
  "type": "import"
 },
 "samcli.local.docker.lambda_container.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.local.docker.lambda_debug_settings": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "samcli.local.docker.lambda_debug_settings.DebugSettings": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "samcli.local.docker.lambda_debug_settings.DebuggingNotSupported": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "samcli.local.docker.lambda_debug_settings.LambdaDebugSettings": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "samcli.local.docker.lambda_debug_settings.LambdaDebugSettings.get_debug_settings": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "KeyError",
    "samcli.lib.utils.feature_flag.extensions_preview_enabled",
    "samcli.local.docker.lambda_debug_settings.DebugSettings",
    "samcli.local.docker.lambda_debug_settings.DebuggingNotSupported",
    "samcli.local.docker.lambda_debug_settings.json",
    "samcli.local.docker.lambda_image.Runtime.dotnetcore21.value",
    "samcli.local.docker.lambda_image.Runtime.dotnetcore31.value",
    "samcli.local.docker.lambda_image.Runtime.go1x.value",
    "samcli.local.docker.lambda_image.Runtime.java11.value",
    "samcli.local.docker.lambda_image.Runtime.java8.value",
    "samcli.local.docker.lambda_image.Runtime.java8al2.value",
    "samcli.local.docker.lambda_image.Runtime.nodejs10x.value",
    "samcli.local.docker.lambda_image.Runtime.nodejs12x.value",
    "samcli.local.docker.lambda_image.Runtime.python27.value",
    "samcli.local.docker.lambda_image.Runtime.python36.value",
    "samcli.local.docker.lambda_image.Runtime.python37.value",
    "samcli.local.docker.lambda_image.Runtime.python38.value",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.lambda_debug_settings.Runtime": {
  "data": {
   "shadows": "samcli.local.docker.lambda_image.Runtime"
  },
  "type": "import"
 },
 "samcli.local.docker.lambda_debug_settings.extensions_preview_enabled": {
  "data": {
   "shadows": "samcli.lib.utils.feature_flag.extensions_preview_enabled"
  },
  "type": "import"
 },
 "samcli.local.docker.lambda_debug_settings.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "samcli.local.docker.lambda_debug_settings.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "samcli.local.docker.lambda_image": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.local.docker.lambda_image.logging"
   ]
  },
  "type": "module"
 },
 "samcli.local.docker.lambda_image.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "samcli.local.docker.lambda_image.ImageBuildException": {
  "data": {
   "shadows": "samcli.commands.local.cli_common.user_exceptions.ImageBuildException"
  },
  "type": "import"
 },
 "samcli.local.docker.lambda_image.LOG": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "samcli.local.docker.lambda_image.LambdaImage": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pathlib.Path"
   ]
  },
  "type": "class"
 },
 "samcli.local.docker.lambda_image.LambdaImage.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "samcli.lib.utils.feature_flag.extensions_preview_enabled",
    "samcli.local.docker.lambda_image.docker"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.lambda_image.LambdaImage._build_image": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "open",
    "pathlib.Path",
    "samcli.commands.local.cli_common.user_exceptions.ImageBuildException",
    "samcli.lib.utils.stream_writer.StreamWriter",
    "samcli.lib.utils.tar.create_tarball",
    "samcli.local.docker.lambda_image.LOG",
    "samcli.local.docker.lambda_image.docker",
    "samcli.local.docker.lambda_image.platform",
    "samcli.local.docker.lambda_image.sys",
    "samcli.local.docker.lambda_image.uuid",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.lambda_image.LambdaImage._build_image.set_item_permission": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "samcli.local.docker.lambda_image.LambdaImage._generate_docker_image_version": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "samcli.local.docker.lambda_image.hashlib",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.lambda_image.LambdaImage._generate_dockerfile": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "samcli.local.docker.lambda_image.LambdaImage",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.lambda_image.LambdaImage.build": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "any",
    "samcli.__version__",
    "samcli.lib.utils.stream_writer.StreamWriter",
    "samcli.local.docker.lambda_image.LOG",
    "samcli.local.docker.lambda_image.docker",
    "samcli.local.docker.lambda_image.sys"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.lambda_image.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "samcli.local.docker.lambda_image.Runtime": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "samcli.local.docker.lambda_image.Runtime.has_value": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "any",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.lambda_image.StreamWriter": {
  "data": {
   "shadows": "samcli.lib.utils.stream_writer.StreamWriter"
  },
  "type": "import"
 },
 "samcli.local.docker.lambda_image.create_tarball": {
  "data": {
   "shadows": "samcli.lib.utils.tar.create_tarball"
  },
  "type": "import"
 },
 "samcli.local.docker.lambda_image.docker": {
  "data": {
   "shadows": "docker"
  },
  "type": "import"
 },
 "samcli.local.docker.lambda_image.extensions_preview_enabled": {
  "data": {
   "shadows": "samcli.lib.utils.feature_flag.extensions_preview_enabled"
  },
  "type": "import"
 },
 "samcli.local.docker.lambda_image.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "samcli.local.docker.lambda_image.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.local.docker.lambda_image.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "samcli.local.docker.lambda_image.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "samcli.local.docker.lambda_image.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "samcli.local.docker.lambda_image.version": {
  "data": {
   "shadows": "samcli.__version__"
  },
  "type": "import"
 },
 "samcli.local.docker.manager": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.local.docker.manager.logging"
   ]
  },
  "type": "module"
 },
 "samcli.local.docker.manager.ContainerManager": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "samcli.local.docker.manager.ContainerManager.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "samcli.local.docker.manager.docker"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.manager.ContainerManager._is_rapid_image": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "samcli.local.docker.manager.re"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.manager.ContainerManager.has_image": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "samcli.local.docker.manager.docker"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.manager.ContainerManager.is_docker_reachable": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "property",
    "samcli.local.docker.manager.LOG",
    "samcli.local.docker.manager.docker",
    "samcli.local.docker.manager.platform",
    "samcli.local.docker.manager.pywintypes",
    "samcli.local.docker.manager.requests"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.manager.ContainerManager.pull_image": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "DockerImagePullFailedException",
    "samcli.lib.utils.stream_writer.StreamWriter",
    "samcli.local.docker.manager.LOG",
    "samcli.local.docker.manager.docker",
    "samcli.local.docker.manager.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.manager.ContainerManager.run": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "DockerImagePullFailedException",
    "ValueError",
    "samcli.local.docker.manager.LOG"
   ]
  },
  "type": "function"
 },
 "samcli.local.docker.manager.ContainerManager.stop": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "samcli.local.docker.manager.DockerImagePullFailedException": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "samcli.local.docker.manager.LOG": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "samcli.local.docker.manager.StreamWriter": {
  "data": {
   "shadows": "samcli.lib.utils.stream_writer.StreamWriter"
  },
  "type": "import"
 },
 "samcli.local.docker.manager.docker": {
  "data": {
   "shadows": "docker"
  },
  "type": "import"
 },
 "samcli.local.docker.manager.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.local.docker.manager.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "samcli.local.docker.manager.pywintypes": {
  "data": {
   "shadows": "pywintypes"
  },
  "type": "import"
 },
 "samcli.local.docker.manager.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "samcli.local.docker.manager.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "samcli.local.docker.manager.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "samcli.local.docker.utils": {
  "data": {},
  "type": "module"
 },
 "samcli.local.docker.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.local.docker.utils.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "samcli.local.docker.utils.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "samcli.local.docker.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "samcli.local.docker.utils.to_posix_path": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "samcli.local.docker.utils.os",
    "samcli.local.docker.utils.pathlib",
    "samcli.local.docker.utils.posixpath",
    "samcli.local.docker.utils.re"
   ]
  },
  "type": "function"
 },
 "samcli.local.events": {
  "data": {},
  "type": "module"
 },
 "samcli.local.events.api_event": {
  "data": {},
  "type": "module"
 },
 "samcli.local.events.api_event.ApiGatewayLambdaEvent": {
  "data": {
   "lineno": 145
  },
  "type": "class"
 },
 "samcli.local.events.api_event.ApiGatewayLambdaEvent.__init__": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "samcli.local.events.api_event.ApiGatewayLambdaEvent.to_dict": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "samcli.local.events.api_event.ContextIdentity": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "samcli.local.events.api_event.ContextIdentity.__init__": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "samcli.local.events.api_event.ContextIdentity.to_dict": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "samcli.local.events.api_event.RequestContext": {
  "data": {
   "lineno": 67
  },
  "type": "class"
 },
 "samcli.local.events.api_event.RequestContext.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "datetime.datetime.utcnow",
    "int",
    "time.time"
   ]
  },
  "type": "function"
 },
 "samcli.local.events.api_event.RequestContext.to_dict": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "samcli.local.events.api_event.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "samcli.local.events.api_event.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "samcli.local.lambda_service": {
  "data": {},
  "type": "module"
 },
 "samcli.local.lambda_service.lambda_error_responses": {
  "data": {},
  "type": "module"
 },
 "samcli.local.lambda_service.lambda_error_responses.BaseLocalService": {
  "data": {
   "shadows": "samcli.local.services.base_local_service.BaseLocalService"
  },
  "type": "import"
 },
 "samcli.local.lambda_service.lambda_error_responses.LambdaErrorResponses": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "samcli.local.lambda_service.lambda_error_responses.LambdaErrorResponses._construct_error_response_body": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "samcli.local.lambda_service.lambda_error_responses.json",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.lambda_service.lambda_error_responses.LambdaErrorResponses._construct_headers": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.lambda_service.lambda_error_responses.LambdaErrorResponses.generic_method_not_allowed": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "samcli.local.lambda_service.lambda_error_responses.LambdaErrorResponses",
    "samcli.local.services.base_local_service.BaseLocalService.service_response",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.lambda_service.lambda_error_responses.LambdaErrorResponses.generic_path_not_found": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "samcli.local.lambda_service.lambda_error_responses.LambdaErrorResponses",
    "samcli.local.services.base_local_service.BaseLocalService.service_response",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.lambda_service.lambda_error_responses.LambdaErrorResponses.generic_service_exception": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "samcli.local.lambda_service.lambda_error_responses.LambdaErrorResponses",
    "samcli.local.services.base_local_service.BaseLocalService.service_response",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.lambda_service.lambda_error_responses.LambdaErrorResponses.invalid_request_content": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "samcli.local.lambda_service.lambda_error_responses.LambdaErrorResponses",
    "samcli.local.services.base_local_service.BaseLocalService.service_response",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.lambda_service.lambda_error_responses.LambdaErrorResponses.not_implemented_locally": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "samcli.local.lambda_service.lambda_error_responses.LambdaErrorResponses",
    "samcli.local.services.base_local_service.BaseLocalService.service_response",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.lambda_service.lambda_error_responses.LambdaErrorResponses.resource_not_found": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "samcli.local.lambda_service.lambda_error_responses.LambdaErrorResponses",
    "samcli.local.services.base_local_service.BaseLocalService.service_response",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.lambda_service.lambda_error_responses.LambdaErrorResponses.unsupported_media_type": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "samcli.local.lambda_service.lambda_error_responses.LambdaErrorResponses",
    "samcli.local.services.base_local_service.BaseLocalService.service_response",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.lambda_service.lambda_error_responses.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "samcli.local.lambda_service.lambda_error_responses.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "samcli.local.lambda_service.local_lambda_invoke_service": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.local.lambda_service.local_lambda_invoke_service.logging"
   ]
  },
  "type": "module"
 },
 "samcli.local.lambda_service.local_lambda_invoke_service.BaseLocalService": {
  "data": {
   "shadows": "samcli.local.services.base_local_service.BaseLocalService"
  },
  "type": "import"
 },
 "samcli.local.lambda_service.local_lambda_invoke_service.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "samcli.local.lambda_service.local_lambda_invoke_service.FunctionNotFound": {
  "data": {
   "shadows": "samcli.local.lambdafn.exceptions.FunctionNotFound"
  },
  "type": "import"
 },
 "samcli.local.lambda_service.local_lambda_invoke_service.LOG": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "samcli.local.lambda_service.local_lambda_invoke_service.LambdaOutputParser": {
  "data": {
   "shadows": "samcli.local.services.base_local_service.LambdaOutputParser"
  },
  "type": "import"
 },
 "samcli.local.lambda_service.local_lambda_invoke_service.LocalLambdaInvokeService": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "samcli.local.services.base_local_service.BaseLocalService"
   ]
  },
  "type": "class"
 },
 "samcli.local.lambda_service.local_lambda_invoke_service.LocalLambdaInvokeService.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "samcli.local.lambda_service.local_lambda_invoke_service.LocalLambdaInvokeService",
    "super"
   ]
  },
  "type": "function"
 },
 "samcli.local.lambda_service.local_lambda_invoke_service.LocalLambdaInvokeService._construct_error_handling": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "samcli.local.lambda_service.local_lambda_invoke_service.LocalLambdaInvokeService._invoke_request_handler": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "flask.request",
    "samcli.lib.utils.stream_writer.StreamWriter",
    "samcli.local.lambda_service.local_lambda_invoke_service.LOG",
    "samcli.local.lambda_service.local_lambda_invoke_service.io",
    "samcli.local.lambdafn.exceptions.FunctionNotFound",
    "samcli.local.services.base_local_service.LambdaOutputParser.get_lambda_output"
   ]
  },
  "type": "function"
 },
 "samcli.local.lambda_service.local_lambda_invoke_service.LocalLambdaInvokeService.create": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "__name__",
    "flask.Flask",
    "samcli.local.lambda_service.local_lambda_invoke_service.LocalLambdaInvokeService"
   ]
  },
  "type": "function"
 },
 "samcli.local.lambda_service.local_lambda_invoke_service.LocalLambdaInvokeService.validate_request": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "flask.request",
    "samcli.local.lambda_service.local_lambda_invoke_service.LOG",
    "samcli.local.lambda_service.local_lambda_invoke_service.json",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.local.lambda_service.local_lambda_invoke_service.StreamWriter": {
  "data": {
   "shadows": "samcli.lib.utils.stream_writer.StreamWriter"
  },
  "type": "import"
 },
 "samcli.local.lambda_service.local_lambda_invoke_service.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "samcli.local.lambda_service.local_lambda_invoke_service.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "samcli.local.lambda_service.local_lambda_invoke_service.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.local.lambda_service.local_lambda_invoke_service.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "samcli.local.lambdafn": {
  "data": {},
  "type": "module"
 },
 "samcli.local.lambdafn.config": {
  "data": {},
  "type": "module"
 },
 "samcli.local.lambdafn.config.FunctionConfig": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "samcli.local.lambdafn.config.FunctionConfig.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "EnvironmentVariables",
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "samcli.commands.local.cli_common.user_exceptions.InvalidSamTemplateException"
   ]
  },
  "type": "function"
 },
 "samcli.local.lambdafn.config.InvalidSamTemplateException": {
  "data": {
   "shadows": "samcli.commands.local.cli_common.user_exceptions.InvalidSamTemplateException"
  },
  "type": "import"
 },
 "samcli.local.lambdafn.env_vars": {
  "data": {},
  "type": "module"
 },
 "samcli.local.lambdafn.env_vars.EnvironmentVariables": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "samcli.local.lambdafn.env_vars.EnvironmentVariables.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "samcli.lib.utils.feature_flag.extensions_preview_enabled"
   ]
  },
  "type": "function"
 },
 "samcli.local.lambdafn.env_vars.EnvironmentVariables._get_aws_variables": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.local.lambdafn.env_vars.EnvironmentVariables._stringify_value": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "samcli.local.lambdafn.env_vars.sys",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "samcli.local.lambdafn.env_vars.EnvironmentVariables.add_lambda_event_body": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "samcli.local.lambdafn.env_vars.EnvironmentVariables.handler": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "samcli.local.lambdafn.env_vars.EnvironmentVariables.memory": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "samcli.local.lambdafn.env_vars.EnvironmentVariables.name": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "samcli.local.lambdafn.env_vars.EnvironmentVariables.resolve": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "samcli.local.lambdafn.env_vars.EnvironmentVariables.timeout": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "samcli.local.lambdafn.env_vars.extensions_preview_enabled": {
  "data": {
   "shadows": "samcli.lib.utils.feature_flag.extensions_preview_enabled"
  },
  "type": "import"
 },
 "samcli.local.lambdafn.env_vars.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "samcli.local.lambdafn.exceptions": {
  "data": {},
  "type": "module"
 },
 "samcli.local.lambdafn.exceptions.FunctionNotFound": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "samcli.local.lambdafn.exceptions.ResourceNotFound": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "samcli.local.lambdafn.runtime": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.local.lambdafn.runtime.logging"
   ]
  },
  "type": "module"
 },
 "samcli.local.lambdafn.runtime.LOG": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "samcli.local.lambdafn.runtime.LambdaContainer": {
  "data": {
   "shadows": "samcli.local.docker.lambda_container.LambdaContainer"
  },
  "type": "import"
 },
 "samcli.local.lambdafn.runtime.LambdaRuntime": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "samcli.local.lambdafn.runtime.LambdaRuntime.__init__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "samcli.local.lambdafn.runtime.LambdaRuntime._configure_interrupt": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "samcli.local.lambdafn.runtime.LOG",
    "samcli.local.lambdafn.runtime.signal",
    "samcli.local.lambdafn.runtime.threading"
   ]
  },
  "type": "function"
 },
 "samcli.local.lambdafn.runtime.LambdaRuntime._configure_interrupt.signal_handler": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "samcli.local.lambdafn.runtime.LOG"
   ]
  },
  "type": "function"
 },
 "samcli.local.lambdafn.runtime.LambdaRuntime._configure_interrupt.timer_handler": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "samcli.local.lambdafn.runtime.LOG"
   ]
  },
  "type": "function"
 },
 "samcli.local.lambdafn.runtime.LambdaRuntime._get_code_dir": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "_unzip_file",
    "contextlib.contextmanager",
    "samcli.local.lambdafn.runtime.LOG",
    "samcli.local.lambdafn.runtime.os",
    "samcli.local.lambdafn.runtime.shutil"
   ]
  },
  "type": "function"
 },
 "samcli.local.lambdafn.runtime.LambdaRuntime.invoke": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "bool",
    "samcli.lib.utils.feature_flag.extensions_preview_enabled",
    "samcli.local.docker.lambda_container.LambdaContainer",
    "samcli.local.lambdafn.runtime.LOG"
   ]
  },
  "type": "function"
 },
 "samcli.local.lambdafn.runtime._unzip_file": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "samcli.local.lambdafn.runtime.LOG",
    "samcli.local.lambdafn.runtime.os",
    "samcli.local.lambdafn.runtime.tempfile",
    "unzip"
   ]
  },
  "type": "function"
 },
 "samcli.local.lambdafn.runtime.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "samcli.local.lambdafn.runtime.extensions_preview_enabled": {
  "data": {
   "shadows": "samcli.lib.utils.feature_flag.extensions_preview_enabled"
  },
  "type": "import"
 },
 "samcli.local.lambdafn.runtime.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.local.lambdafn.runtime.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.local.lambdafn.runtime.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "samcli.local.lambdafn.runtime.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "samcli.local.lambdafn.runtime.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "samcli.local.lambdafn.runtime.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "samcli.local.lambdafn.zip": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.local.lambdafn.zip.logging"
   ]
  },
  "type": "module"
 },
 "samcli.local.lambdafn.zip.LOG": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "samcli.local.lambdafn.zip.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "samcli.local.lambdafn.zip.S_IFLNK": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "samcli.local.lambdafn.zip._extract": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "samcli.local.lambdafn.zip._is_symlink",
    "samcli.local.lambdafn.zip.os"
   ]
  },
  "type": "function"
 },
 "samcli.local.lambdafn.zip._is_symlink": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "samcli.local.lambdafn.zip._override_permissions": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "samcli.local.lambdafn.zip.os"
   ]
  },
  "type": "function"
 },
 "samcli.local.lambdafn.zip._set_permissions": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "samcli.local.lambdafn.zip.LOG",
    "samcli.local.lambdafn.zip.os"
   ]
  },
  "type": "function"
 },
 "samcli.local.lambdafn.zip.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.local.lambdafn.zip.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.local.lambdafn.zip.progressbar": {
  "data": {
   "shadows": "samcli.lib.utils.progressbar.progressbar"
  },
  "type": "import"
 },
 "samcli.local.lambdafn.zip.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "samcli.local.lambdafn.zip.unzip": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "_override_permissions",
    "_set_permissions",
    "samcli.local.lambdafn.zip._extract",
    "samcli.local.lambdafn.zip.os",
    "samcli.local.lambdafn.zip.zipfile"
   ]
  },
  "type": "function"
 },
 "samcli.local.lambdafn.zip.unzip_from_uri": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "int",
    "len",
    "open",
    "pathlib.Path",
    "samcli.lib.utils.progressbar.progressbar",
    "samcli.local.lambdafn.zip.os",
    "samcli.local.lambdafn.zip.requests",
    "samcli.local.lambdafn.zip.unzip"
   ]
  },
  "type": "function"
 },
 "samcli.local.lambdafn.zip.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "samcli.local.layers": {
  "data": {},
  "type": "module"
 },
 "samcli.local.layers.layer_downloader": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.local.layers.layer_downloader.logging"
   ]
  },
  "type": "module"
 },
 "samcli.local.layers.layer_downloader.ClientError": {
  "data": {
   "shadows": "botocore.exceptions.ClientError"
  },
  "type": "import"
 },
 "samcli.local.layers.layer_downloader.CredentialsRequired": {
  "data": {
   "shadows": "samcli.commands.local.cli_common.user_exceptions.CredentialsRequired"
  },
  "type": "import"
 },
 "samcli.local.layers.layer_downloader.LOG": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "samcli.local.layers.layer_downloader.LayerDownloader": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "samcli.local.layers.layer_downloader.LayerDownloader.__init__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "samcli.local.layers.layer_downloader.LayerDownloader._create_cache": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "pathlib.Path",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.layers.layer_downloader.LayerDownloader._fetch_layer_uri": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "botocore.exceptions.ClientError",
    "botocore.exceptions.NoCredentialsError",
    "samcli.commands.local.cli_common.user_exceptions.CredentialsRequired",
    "samcli.commands.local.cli_common.user_exceptions.ResourceNotFound"
   ]
  },
  "type": "function"
 },
 "samcli.local.layers.layer_downloader.LayerDownloader._is_layer_cached": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "samcli.local.layers.layer_downloader.LayerDownloader.download": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "pathlib.Path",
    "samcli.lib.utils.codeuri.resolve_code_path",
    "samcli.local.lambdafn.zip.unzip_from_uri",
    "samcli.local.layers.layer_downloader.LOG",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.local.layers.layer_downloader.LayerDownloader.download_all": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "samcli.local.layers.layer_downloader.LayerDownloader.lambda_client": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "property",
    "samcli.local.layers.layer_downloader.boto3"
   ]
  },
  "type": "function"
 },
 "samcli.local.layers.layer_downloader.LayerDownloader.layer_cache": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "samcli.local.layers.layer_downloader.NoCredentialsError": {
  "data": {
   "shadows": "botocore.exceptions.NoCredentialsError"
  },
  "type": "import"
 },
 "samcli.local.layers.layer_downloader.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "samcli.local.layers.layer_downloader.ResourceNotFound": {
  "data": {
   "shadows": "samcli.commands.local.cli_common.user_exceptions.ResourceNotFound"
  },
  "type": "import"
 },
 "samcli.local.layers.layer_downloader.boto3": {
  "data": {
   "shadows": "boto3"
  },
  "type": "import"
 },
 "samcli.local.layers.layer_downloader.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.local.layers.layer_downloader.resolve_code_path": {
  "data": {
   "shadows": "samcli.lib.utils.codeuri.resolve_code_path"
  },
  "type": "import"
 },
 "samcli.local.layers.layer_downloader.unzip_from_uri": {
  "data": {
   "shadows": "samcli.local.lambdafn.zip.unzip_from_uri"
  },
  "type": "import"
 },
 "samcli.local.services": {
  "data": {},
  "type": "module"
 },
 "samcli.local.services.base_local_service": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "samcli.local.services.base_local_service.logging"
   ]
  },
  "type": "module"
 },
 "samcli.local.services.base_local_service.BaseLocalService": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "samcli.local.services.base_local_service.BaseLocalService.__init__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "samcli.local.services.base_local_service.BaseLocalService.create": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "samcli.local.services.base_local_service.BaseLocalService.run": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "RuntimeError",
    "samcli.local.services.base_local_service.LOG",
    "samcli.local.services.base_local_service.os"
   ]
  },
  "type": "function"
 },
 "samcli.local.services.base_local_service.BaseLocalService.service_response": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "flask.Response",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.services.base_local_service.LOG": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "samcli.local.services.base_local_service.LambdaOutputParser": {
  "data": {
   "lineno": 81
  },
  "type": "class"
 },
 "samcli.local.services.base_local_service.LambdaOutputParser.get_lambda_output": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "samcli.local.services.base_local_service.LambdaOutputParser",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.services.base_local_service.LambdaOutputParser.is_lambda_error_response": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "samcli.local.services.base_local_service.json",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "samcli.local.services.base_local_service.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "samcli.local.services.base_local_service.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "samcli.local.services.base_local_service.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "samcli.local.services.base_local_service.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.settings": {
  "data": {
   "symbols_in_volume": [
    "samcli.settings.os"
   ]
  },
  "type": "module"
 },
 "samcli.settings.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "samcli.settings.telemetry_endpoint_url": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "samcli.yamlhelper": {
  "data": {},
  "type": "module"
 },
 "samcli.yamlhelper.CfnDumper": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "samcli.yamlhelper.yaml"
   ]
  },
  "type": "class"
 },
 "samcli.yamlhelper.CfnDumper.ignore_aliases": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "samcli.yamlhelper.OrderedDict": {
  "data": {
   "shadows": "botocore.compat.OrderedDict"
  },
  "type": "import"
 },
 "samcli.yamlhelper.ScalarNode": {
  "data": {
   "shadows": "yaml.resolver.ScalarNode"
  },
  "type": "import"
 },
 "samcli.yamlhelper.SequenceNode": {
  "data": {
   "shadows": "yaml.resolver.SequenceNode"
  },
  "type": "import"
 },
 "samcli.yamlhelper.TAG_STR": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "samcli.yamlhelper._dict_constructor": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "botocore.compat.OrderedDict"
   ]
  },
  "type": "function"
 },
 "samcli.yamlhelper._dict_representer": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "samcli.yamlhelper.intrinsics_multi_constructor": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "yaml.resolver.ScalarNode",
    "yaml.resolver.SequenceNode"
   ]
  },
  "type": "function"
 },
 "samcli.yamlhelper.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "samcli.yamlhelper.string_representer": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "samcli.yamlhelper.TAG_STR"
   ]
  },
  "type": "function"
 },
 "samcli.yamlhelper.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "samcli.yamlhelper.yaml_dump": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "botocore.compat.OrderedDict",
    "samcli.yamlhelper._dict_representer",
    "samcli.yamlhelper.string_representer",
    "samcli.yamlhelper.yaml",
    "str"
   ]
  },
  "type": "function"
 },
 "samcli.yamlhelper.yaml_parse": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "botocore.compat.OrderedDict",
    "samcli.yamlhelper._dict_constructor",
    "samcli.yamlhelper.intrinsics_multi_constructor",
    "samcli.yamlhelper.json",
    "samcli.yamlhelper.yaml"
   ]
  },
  "type": "function"
 }
}