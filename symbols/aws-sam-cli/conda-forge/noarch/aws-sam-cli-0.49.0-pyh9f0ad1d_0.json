{
 "samcli": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.__main__": {
  "lineno": null,
  "symbols_in_volume": [
   "samcli.cli.main.cli"
  ],
  "type": "module"
 },
 "samcli.cli": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.cli.cli_config_file": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.cli.cli_config_file.TomlProvider": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.cli.cli_config_file.TomlProvider.__call__": {
  "lineno": 34,
  "symbols_in_volume": [
   "samcli.commands.exceptions.ConfigException",
   "samcli.lib.config.exceptions.SamConfigVersionException",
   "samcli.lib.config.samconfig.SamConfig"
  ],
  "type": "function"
 },
 "samcli.cli.cli_config_file.TomlProvider.__init__": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.cli.cli_config_file.configuration_callback": {
  "lineno": 83,
  "symbols_in_volume": [
   "samcli.lib.config.samconfig.DEFAULT_ENV"
  ],
  "type": "function"
 },
 "samcli.cli.cli_config_file.configuration_option": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.cli.cli_config_file.configuration_option.decorator": {
  "lineno": 167,
  "symbols_in_volume": [
   "click.STRING",
   "click.option",
   "functools.partial",
   "samcli.lib.config.samconfig.DEFAULT_ENV"
  ],
  "type": "function"
 },
 "samcli.cli.cli_config_file.get_ctx_defaults": {
  "lineno": 114,
  "symbols_in_volume": [
   "os.getcwd",
   "samcli.cli.context.get_cmd_names"
  ],
  "type": "function"
 },
 "samcli.cli.command": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.cli.command.BaseCommand": {
  "lineno": 29,
  "symbols_in_volume": [
   "click.MultiCommand"
  ],
  "type": "class"
 },
 "samcli.cli.command.BaseCommand.__init__": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.cli.command.BaseCommand._set_commands": {
  "lineno": 66,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "samcli.cli.command.BaseCommand.get_command": {
  "lineno": 93,
  "symbols_in_volume": [
   "importlib.import_module"
  ],
  "type": "function"
 },
 "samcli.cli.command.BaseCommand.list_commands": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.cli.context": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.cli.context.Context": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.cli.context.Context.__init__": {
  "lineno": 30,
  "symbols_in_volume": [
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "samcli.cli.context.Context._refresh_session": {
  "lineno": 142,
  "symbols_in_volume": [
   "boto3.setup_default_session",
   "botocore.credentials.JSONFileCache",
   "botocore.exceptions.ProfileNotFound",
   "botocore.session.get_session",
   "samcli.commands.exceptions.CredentialsError"
  ],
  "type": "function"
 },
 "samcli.cli.context.Context.command_path": {
  "lineno": 89,
  "symbols_in_volume": [
   "click.get_current_context"
  ],
  "type": "function"
 },
 "samcli.cli.context.Context.debug": {
  "lineno": 43,
  "symbols_in_volume": [
   "logging.DEBUG",
   "logging.getLogger"
  ],
  "type": "function"
 },
 "samcli.cli.context.Context.get_current_context": {
  "lineno": 109,
  "symbols_in_volume": [
   "click.get_current_context"
  ],
  "type": "function"
 },
 "samcli.cli.context.Context.profile": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.cli.context.Context.region": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.cli.context.Context.session_id": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.cli.context.get_cmd_names": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.cli.global_config": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.cli.global_config.GlobalConfig": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.cli.global_config.GlobalConfig.__init__": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.cli.global_config.GlobalConfig._create_dir": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.cli.global_config.GlobalConfig._get_config_file_path": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.cli.global_config.GlobalConfig._get_or_set_uuid": {
  "lineno": 174,
  "symbols_in_volume": [
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "samcli.cli.global_config.GlobalConfig._get_value": {
  "lineno": 140,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "samcli.cli.global_config.GlobalConfig._set_json_cfg": {
  "lineno": 189,
  "symbols_in_volume": [
   "json.dumps"
  ],
  "type": "function"
 },
 "samcli.cli.global_config.GlobalConfig._set_value": {
  "lineno": 149,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "samcli.cli.global_config.GlobalConfig.config_dir": {
  "lineno": 41,
  "symbols_in_volume": [
   "click.get_app_dir",
   "os.getenv",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "samcli.cli.global_config.GlobalConfig.installation_id": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.cli.global_config.GlobalConfig.telemetry_enabled": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.cli.main": {
  "lineno": null,
  "symbols_in_volume": [
   "click.make_pass_decorator",
   "logging.INFO",
   "logging.basicConfig",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.cli.main.aws_creds_options": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.cli.main.cli": {
  "lineno": 67,
  "symbols_in_volume": [
   "click.command",
   "click.option",
   "click.secho",
   "click.version_option",
   "logging.Formatter",
   "logging.INFO",
   "logging.getLogger",
   "samcli.__version__",
   "samcli.lib.telemetry.metrics.send_installed_metric",
   "samcli.lib.utils.sam_logging.SamCliLogger.configure_logger",
   "samcli.lib.utils.sam_logging.SamCliLogger.configure_null_logger"
  ],
  "type": "function"
 },
 "samcli.cli.main.common_options": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.cli.main.print_info": {
  "lineno": 46,
  "symbols_in_volume": [
   "click.echo",
   "json.dumps",
   "samcli.__version__"
  ],
  "type": "function"
 },
 "samcli.cli.options": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.cli.options.debug_option": {
  "lineno": 11,
  "symbols_in_volume": [
   "click.option"
  ],
  "type": "function"
 },
 "samcli.cli.options.debug_option.callback": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.cli.options.profile_option": {
  "lineno": 50,
  "symbols_in_volume": [
   "click.option"
  ],
  "type": "function"
 },
 "samcli.cli.options.profile_option.callback": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.cli.options.region_option": {
  "lineno": 33,
  "symbols_in_volume": [
   "click.option"
  ],
  "type": "function"
 },
 "samcli.cli.options.region_option.callback": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.cli.types": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.cli.types.CfnMetadataType": {
  "lineno": 133,
  "symbols_in_volume": [
   "click.ParamType"
  ],
  "type": "class"
 },
 "samcli.cli.types.CfnMetadataType.convert": {
  "lineno": 148,
  "symbols_in_volume": [
   "json.JSONDecodeError",
   "json.loads",
   "re.findall"
  ],
  "type": "function"
 },
 "samcli.cli.types.CfnParameterOverridesType": {
  "lineno": 64,
  "symbols_in_volume": [
   "click.ParamType"
  ],
  "type": "class"
 },
 "samcli.cli.types.CfnParameterOverridesType.convert": {
  "lineno": 92,
  "symbols_in_volume": [
   "re.findall"
  ],
  "type": "function"
 },
 "samcli.cli.types.CfnTags": {
  "lineno": 181,
  "symbols_in_volume": [
   "click.ParamType"
  ],
  "type": "class"
 },
 "samcli.cli.types.CfnTags._standard_key_value_parser": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.cli.types.CfnTags.convert": {
  "lineno": 196,
  "symbols_in_volume": [
   "re.findall"
  ],
  "type": "function"
 },
 "samcli.cli.types._generate_match_regex": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.cli.types._unquote_wrapped_quotes": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands._utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands._utils.custom_options": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands._utils.custom_options.option_nargs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands._utils.custom_options.option_nargs.OptionNargs": {
  "lineno": 8,
  "symbols_in_volume": [
   "click.Option"
  ],
  "type": "class"
 },
 "samcli.commands._utils.custom_options.option_nargs.OptionNargs.__init__": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands._utils.custom_options.option_nargs.OptionNargs.add_to_parser": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands._utils.custom_options.option_nargs.OptionNargs.add_to_parser.parser_process": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands._utils.options": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.commands._utils.options._space_separated_list_func_type": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands._utils.options.capabilities_click_option": {
  "lineno": 177,
  "symbols_in_volume": [
   "click.option",
   "click.types.FuncParamType",
   "samcli.commands._utils.custom_options.option_nargs.OptionNargs"
  ],
  "type": "function"
 },
 "samcli.commands._utils.options.capabilities_override_option": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands._utils.options.docker_click_options": {
  "lineno": 129,
  "symbols_in_volume": [
   "click.option"
  ],
  "type": "function"
 },
 "samcli.commands._utils.options.docker_common_options": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands._utils.options.get_or_default_template_file_name": {
  "lineno": 22,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.dirname",
   "os.path.exists",
   "os.path.join"
  ],
  "type": "function"
 },
 "samcli.commands._utils.options.guided_deploy_stack_name": {
  "lineno": 60,
  "symbols_in_volume": [
   "click.BadOptionUsage"
  ],
  "type": "function"
 },
 "samcli.commands._utils.options.metadata_click_option": {
  "lineno": 165,
  "symbols_in_volume": [
   "click.option",
   "samcli.cli.types.CfnMetadataType"
  ],
  "type": "function"
 },
 "samcli.commands._utils.options.metadata_override_option": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands._utils.options.notification_arns_click_option": {
  "lineno": 216,
  "symbols_in_volume": [
   "click.option",
   "click.types.FuncParamType",
   "samcli.commands._utils.custom_options.option_nargs.OptionNargs"
  ],
  "type": "function"
 },
 "samcli.commands._utils.options.notification_arns_override_option": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands._utils.options.parameter_override_click_option": {
  "lineno": 149,
  "symbols_in_volume": [
   "click.option",
   "samcli.cli.types.CfnParameterOverridesType",
   "samcli.commands._utils.custom_options.option_nargs.OptionNargs"
  ],
  "type": "function"
 },
 "samcli.commands._utils.options.parameter_override_option": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands._utils.options.tags_click_option": {
  "lineno": 200,
  "symbols_in_volume": [
   "click.option",
   "samcli.cli.types.CfnTags",
   "samcli.commands._utils.custom_options.option_nargs.OptionNargs"
  ],
  "type": "function"
 },
 "samcli.commands._utils.options.tags_override_option": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands._utils.options.template_click_option": {
  "lineno": 102,
  "symbols_in_volume": [
   "click.Path",
   "click.option",
   "functools.partial"
  ],
  "type": "function"
 },
 "samcli.commands._utils.options.template_common_option": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands._utils.options.template_option_without_build": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands._utils.resources": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands._utils.resources.resources_generator": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands._utils.table_print": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands._utils.table_print.newline_per_item": {
  "lineno": 119,
  "symbols_in_volume": [
   "click.echo"
  ],
  "type": "function"
 },
 "samcli.commands._utils.table_print.pprint_column_names": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands._utils.table_print.pprint_column_names.pprint_wrap": {
  "lineno": 27,
  "symbols_in_volume": [
   "click.get_terminal_size"
  ],
  "type": "function"
 },
 "samcli.commands._utils.table_print.pprint_column_names.pprint_wrap.wrap": {
  "lineno": 57,
  "symbols_in_volume": [
   "click.secho",
   "functools.wraps"
  ],
  "type": "function"
 },
 "samcli.commands._utils.table_print.pprint_columns": {
  "lineno": 95,
  "symbols_in_volume": [
   "click.secho",
   "itertools.count",
   "itertools.zip_longest"
  ],
  "type": "function"
 },
 "samcli.commands._utils.table_print.wrapped_text_generator": {
  "lineno": 80,
  "symbols_in_volume": [
   "textwrap.wrap"
  ],
  "type": "function"
 },
 "samcli.commands._utils.template": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands._utils.template.TemplateFailedParsingException": {
  "lineno": 21,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException"
  ],
  "type": "class"
 },
 "samcli.commands._utils.template.TemplateNotFoundException": {
  "lineno": 17,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException"
  ],
  "type": "class"
 },
 "samcli.commands._utils.template._resolve_relative_to": {
  "lineno": 192,
  "symbols_in_volume": [
   "os.path.isabs",
   "os.path.join",
   "os.path.normpath",
   "os.path.relpath"
  ],
  "type": "function"
 },
 "samcli.commands._utils.template._update_aws_include_relative_path": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands._utils.template._update_relative_paths": {
  "lineno": 88,
  "symbols_in_volume": [
   "botocore.utils.set_value_from_jmespath",
   "jmespath.search",
   "samcli.commands._utils.resources.METADATA_WITH_LOCAL_PATHS",
   "samcli.commands._utils.resources.RESOURCES_WITH_LOCAL_PATHS"
  ],
  "type": "function"
 },
 "samcli.commands._utils.template.get_template_data": {
  "lineno": 25,
  "symbols_in_volume": [
   "pathlib.Path",
   "samcli.yamlhelper.yaml_parse",
   "yaml.YAMLError"
  ],
  "type": "function"
 },
 "samcli.commands._utils.template.get_template_parameters": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands._utils.template.move_template": {
  "lineno": 49,
  "symbols_in_volume": [
   "os.path.dirname",
   "samcli.yamlhelper.yaml_dump"
  ],
  "type": "function"
 },
 "samcli.commands.bootstrap": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.bootstrap.command": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.bootstrap.command.cli": {
  "lineno": 19,
  "symbols_in_volume": [
   "click.command",
   "samcli.cli.main.aws_creds_options",
   "samcli.cli.main.common_options",
   "samcli.cli.main.pass_context",
   "samcli.lib.telemetry.metrics.track_command"
  ],
  "type": "function"
 },
 "samcli.commands.bootstrap.command.do_cli": {
  "lineno": 28,
  "symbols_in_volume": [
   "click.echo",
   "samcli.lib.bootstrap.bootstrap.manage_stack"
  ],
  "type": "function"
 },
 "samcli.commands.bootstrap.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.bootstrap.exceptions.ManagedStackError": {
  "lineno": 7,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException"
  ],
  "type": "class"
 },
 "samcli.commands.bootstrap.exceptions.ManagedStackError.__init__": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.build": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.build.build_context": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.commands.build.build_context.BuildContext": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.commands.build.build_context.BuildContext.__enter__": {
  "lineno": 58,
  "symbols_in_volume": [
   "pathlib.Path",
   "samcli.commands._utils.template.get_template_data",
   "samcli.lib.providers.sam_function_provider.SamFunctionProvider",
   "samcli.local.docker.manager.ContainerManager"
  ],
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext.__exit__": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext.__init__": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext._setup_build_dir": {
  "lineno": 79,
  "symbols_in_volume": [
   "os.listdir",
   "os.path.abspath",
   "pathlib.Path",
   "pathlib.Path.cwd",
   "samcli.commands.build.exceptions.InvalidBuildDirException",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext.base_dir": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext.build_dir": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext.container_manager": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext.function_provider": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext.functions_to_build": {
  "lineno": 139,
  "symbols_in_volume": [
   "samcli.local.lambdafn.exceptions.FunctionNotFound"
  ],
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext.manifest_path_override": {
  "lineno": 128,
  "symbols_in_volume": [
   "os.path.abspath"
  ],
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext.mode": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext.original_template_path": {
  "lineno": 124,
  "symbols_in_volume": [
   "os.path.abspath"
  ],
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext.output_template_path": {
  "lineno": 120,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext.template_dict": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.build.build_context.BuildContext.use_container": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.build.command": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "os.path.join"
  ],
  "type": "module"
 },
 "samcli.commands.build.command._get_mode_value_from_envvar": {
  "lineno": 260,
  "symbols_in_volume": [
   "click.UsageError",
   "os.environ.get"
  ],
  "type": "function"
 },
 "samcli.commands.build.command.cli": {
  "lineno": 62,
  "symbols_in_volume": [
   "click.Path",
   "click.argument",
   "click.command",
   "click.option",
   "samcli.cli.cli_config_file.TomlProvider",
   "samcli.cli.cli_config_file.configuration_option",
   "samcli.cli.main.aws_creds_options",
   "samcli.cli.main.common_options",
   "samcli.cli.main.pass_context",
   "samcli.commands._utils.options.docker_common_options",
   "samcli.commands._utils.options.parameter_override_option",
   "samcli.commands._utils.options.template_option_without_build",
   "samcli.lib.telemetry.metrics.track_command"
  ],
  "type": "function"
 },
 "samcli.commands.build.command.do_cli": {
  "lineno": 133,
  "symbols_in_volume": [
   "click.secho",
   "os.path.abspath",
   "os.path.relpath",
   "samcli.commands._utils.template.move_template",
   "samcli.commands.build.build_context.BuildContext",
   "samcli.commands.exceptions.UserException",
   "samcli.lib.build.app_builder.ApplicationBuilder",
   "samcli.lib.build.app_builder.BuildError",
   "samcli.lib.build.app_builder.BuildInsideContainerError",
   "samcli.lib.build.app_builder.ContainerBuildNotSupported",
   "samcli.lib.build.app_builder.UnsupportedBuilderLibraryVersionError",
   "samcli.lib.build.workflow_config.UnsupportedRuntimeException",
   "samcli.local.lambdafn.exceptions.FunctionNotFound"
  ],
  "type": "function"
 },
 "samcli.commands.build.command.gen_success_msg": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.build.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.build.exceptions.InvalidBuildDirException": {
  "lineno": 6,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException"
  ],
  "type": "class"
 },
 "samcli.commands.deploy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.deploy.auth_utils": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.commands.deploy.auth_utils._auth_definition_body_and_uri": {
  "lineno": 105,
  "symbols_in_volume": [
   "samcli.commands.local.lib.swagger.reader.SwaggerReader"
  ],
  "type": "function"
 },
 "samcli.commands.deploy.auth_utils._auth_id": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.deploy.auth_utils._auth_resource_event": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.deploy.auth_utils.auth_per_resource": {
  "lineno": 12,
  "symbols_in_volume": [
   "samcli.lib.providers.sam_function_provider.SamFunctionProvider"
  ],
  "type": "function"
 },
 "samcli.commands.deploy.command": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.commands.deploy.command.cli": {
  "lineno": 38,
  "symbols_in_volume": [
   "click.command",
   "click.option",
   "samcli.cli.cli_config_file.TomlProvider",
   "samcli.cli.cli_config_file.configuration_option",
   "samcli.cli.main.aws_creds_options",
   "samcli.cli.main.common_options",
   "samcli.cli.main.pass_context",
   "samcli.commands._utils.options.capabilities_override_option",
   "samcli.commands._utils.options.guided_deploy_stack_name",
   "samcli.commands._utils.options.metadata_override_option",
   "samcli.commands._utils.options.notification_arns_override_option",
   "samcli.commands._utils.options.parameter_override_option",
   "samcli.commands._utils.options.tags_override_option",
   "samcli.commands._utils.options.template_click_option",
   "samcli.lib.telemetry.metrics.track_command"
  ],
  "type": "function"
 },
 "samcli.commands.deploy.command.do_cli": {
  "lineno": 184,
  "symbols_in_volume": [
   "samcli.commands.deploy.deploy_context.DeployContext",
   "samcli.commands.deploy.guided_context.GuidedContext",
   "samcli.commands.deploy.utils.print_deploy_args",
   "samcli.commands.deploy.utils.sanitize_parameter_overrides",
   "samcli.commands.package.package_context.PackageContext",
   "samcli.lib.utils.osutils.tempfile_platform_independent"
  ],
  "type": "function"
 },
 "samcli.commands.deploy.deploy_context": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.commands.deploy.deploy_context.DeployContext": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.commands.deploy.deploy_context.DeployContext.__enter__": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.deploy.deploy_context.DeployContext.__exit__": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.deploy.deploy_context.DeployContext.__init__": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.deploy.deploy_context.DeployContext.deploy": {
  "lineno": 137,
  "symbols_in_volume": [
   "click.confirm",
   "click.echo",
   "click.secho",
   "samcli.commands._utils.template.get_template_data",
   "samcli.commands.deploy.auth_utils.auth_per_resource",
   "samcli.commands.deploy.exceptions.ChangeEmptyError",
   "samcli.commands.deploy.utils.sanitize_parameter_overrides"
  ],
  "type": "function"
 },
 "samcli.commands.deploy.deploy_context.DeployContext.merge_parameters": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.deploy.deploy_context.DeployContext.run": {
  "lineno": 89,
  "symbols_in_volume": [
   "boto3.client",
   "os.path.getsize",
   "samcli.commands.deploy.exceptions.DeployBucketRequiredError",
   "samcli.commands.deploy.exceptions.DeployFailedError",
   "samcli.lib.deploy.deployer.Deployer",
   "samcli.lib.package.s3_uploader.S3Uploader",
   "samcli.lib.utils.botoconfig.get_boto_config_with_user_agent",
   "samcli.yamlhelper.yaml_parse"
  ],
  "type": "function"
 },
 "samcli.commands.deploy.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.deploy.exceptions.ChangeEmptyError": {
  "lineno": 7,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException"
  ],
  "type": "class"
 },
 "samcli.commands.deploy.exceptions.ChangeEmptyError.__init__": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.deploy.exceptions.ChangeSetError": {
  "lineno": 14,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException"
  ],
  "type": "class"
 },
 "samcli.commands.deploy.exceptions.ChangeSetError.__init__": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.deploy.exceptions.DeployBucketInDifferentRegionError": {
  "lineno": 50,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException"
  ],
  "type": "class"
 },
 "samcli.commands.deploy.exceptions.DeployBucketInDifferentRegionError.__init__": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.deploy.exceptions.DeployBucketRequiredError": {
  "lineno": 59,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException"
  ],
  "type": "class"
 },
 "samcli.commands.deploy.exceptions.DeployBucketRequiredError.__init__": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.deploy.exceptions.DeployFailedError": {
  "lineno": 22,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException"
  ],
  "type": "class"
 },
 "samcli.commands.deploy.exceptions.DeployFailedError.__init__": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.deploy.exceptions.DeployStackOutPutFailedError": {
  "lineno": 38,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException"
  ],
  "type": "class"
 },
 "samcli.commands.deploy.exceptions.DeployStackOutPutFailedError.__init__": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.deploy.exceptions.GuidedDeployFailedError": {
  "lineno": 32,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException"
  ],
  "type": "class"
 },
 "samcli.commands.deploy.exceptions.GuidedDeployFailedError.__init__": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.deploy.guided_config": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.deploy.guided_config.GuidedConfig": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.commands.deploy.guided_config.GuidedConfig.__init__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.deploy.guided_config.GuidedConfig.get_config_ctx": {
  "lineno": 17,
  "symbols_in_volume": [
   "click.get_current_context",
   "samcli.lib.config.samconfig.SamConfig",
   "samcli.lib.config.samconfig.SamConfig.config_dir"
  ],
  "type": "function"
 },
 "samcli.commands.deploy.guided_config.GuidedConfig.quote_parameter_values": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.deploy.guided_config.GuidedConfig.read_config_showcase": {
  "lineno": 26,
  "symbols_in_volume": [
   "click.echo",
   "click.secho",
   "samcli.commands.deploy.exceptions.GuidedDeployFailedError"
  ],
  "type": "function"
 },
 "samcli.commands.deploy.guided_config.GuidedConfig.save_config": {
  "lineno": 43,
  "symbols_in_volume": [
   "click.echo",
   "samcli.cli.context.get_cmd_names"
  ],
  "type": "function"
 },
 "samcli.commands.deploy.guided_context": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.commands.deploy.guided_context.GuidedContext": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.commands.deploy.guided_context.GuidedContext.__init__": {
  "lineno": 25,
  "symbols_in_volume": [
   "samcli.lib.utils.colors.Colored"
  ],
  "type": "function"
 },
 "samcli.commands.deploy.guided_context.GuidedContext.guided_capabilities": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.deploy.guided_context.GuidedContext.guided_parameter_overrides": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.deploy.guided_context.GuidedContext.guided_prompts": {
  "lineno": 69,
  "symbols_in_volume": [
   "click.STRING",
   "click.confirm",
   "click.echo",
   "click.prompt",
   "click.secho",
   "click.types.FuncParamType",
   "samcli.commands._utils.options._space_separated_list_func_type",
   "samcli.commands.deploy.utils.sanitize_parameter_overrides",
   "samcli.lib.bootstrap.bootstrap.manage_stack"
  ],
  "type": "function"
 },
 "samcli.commands.deploy.guided_context.GuidedContext.prompt_authorization": {
  "lineno": 121,
  "symbols_in_volume": [
   "click.confirm",
   "samcli.commands._utils.template.get_template_data",
   "samcli.commands.deploy.auth_utils.auth_per_resource",
   "samcli.commands.deploy.exceptions.GuidedDeployFailedError"
  ],
  "type": "function"
 },
 "samcli.commands.deploy.guided_context.GuidedContext.prompt_parameters": {
  "lineno": 133,
  "symbols_in_volume": [
   "click.STRING",
   "click.prompt"
  ],
  "type": "function"
 },
 "samcli.commands.deploy.guided_context.GuidedContext.run": {
  "lineno": 155,
  "symbols_in_volume": [
   "samcli.commands._utils.template.get_template_parameters",
   "samcli.commands.deploy.exceptions.GuidedDeployFailedError",
   "samcli.commands.deploy.guided_config.GuidedConfig"
  ],
  "type": "function"
 },
 "samcli.commands.deploy.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.deploy.utils.print_deploy_args": {
  "lineno": 9,
  "symbols_in_volume": [
   "click.echo",
   "click.secho",
   "json.dumps"
  ],
  "type": "function"
 },
 "samcli.commands.deploy.utils.sanitize_parameter_overrides": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.exceptions.AppTemplateUpdateException": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.commands.exceptions.ConfigException": {
  "lineno": 8,
  "symbols_in_volume": [
   "click.ClickException"
  ],
  "type": "class"
 },
 "samcli.commands.exceptions.CredentialsError": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.commands.exceptions.RegionError": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.commands.exceptions.SchemasApiException": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.commands.exceptions.UserException": {
  "lineno": 14,
  "symbols_in_volume": [
   "click.ClickException"
  ],
  "type": "class"
 },
 "samcli.commands.exceptions.UserException.__init__": {
  "lineno": 22,
  "symbols_in_volume": [
   "click.ClickException.__init__"
  ],
  "type": "function"
 },
 "samcli.commands.init": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.commands.init._deprecate_notification": {
  "lineno": 180,
  "symbols_in_volume": [
   "samcli.lib.utils.colors.Colored"
  ],
  "type": "function"
 },
 "samcli.commands.init._get_cookiecutter_template_context": {
  "lineno": 193,
  "symbols_in_volume": [
   "click.UsageError",
   "json.JSONDecodeError",
   "json.loads"
  ],
  "type": "function"
 },
 "samcli.commands.init.cli": {
  "lineno": 58,
  "symbols_in_volume": [
   "click.Choice",
   "click.Path",
   "click.command",
   "click.option",
   "samcli.cli.cli_config_file.TomlProvider",
   "samcli.cli.cli_config_file.configuration_option",
   "samcli.cli.main.common_options",
   "samcli.cli.main.pass_context",
   "samcli.lib.telemetry.metrics.track_command",
   "samcli.local.common.runtime_template.RUNTIMES",
   "samcli.local.common.runtime_template.SUPPORTED_DEP_MANAGERS"
  ],
  "type": "function"
 },
 "samcli.commands.init.do_cli": {
  "lineno": 123,
  "symbols_in_volume": [
   "click.UsageError",
   "samcli.commands.init.init_generator.do_generate",
   "samcli.commands.init.init_templates.InitTemplates",
   "samcli.commands.init.interactive_init_flow.do_interactive"
  ],
  "type": "function"
 },
 "samcli.commands.init.init_generator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.init.init_generator.do_generate": {
  "lineno": 10,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException",
   "samcli.lib.init.exceptions.ArbitraryProjectDownloadFailed",
   "samcli.lib.init.exceptions.GenerateProjectFailedError",
   "samcli.lib.init.generate_project"
  ],
  "type": "function"
 },
 "samcli.commands.init.init_templates": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.commands.init.init_templates.InitTemplates": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.commands.init.init_templates.InitTemplates.__init__": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.init.init_templates.InitTemplates._check_app_template": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.init.init_templates.InitTemplates._clone_new_app_templates": {
  "lineno": 177,
  "symbols_in_volume": [
   "click.echo",
   "os.path.join",
   "os.path.normpath",
   "samcli.lib.utils.osutils.mkdir_temp",
   "shutil.copytree",
   "shutil.ignore_patterns",
   "subprocess.CalledProcessError",
   "subprocess.STDOUT",
   "subprocess.check_output"
  ],
  "type": "function"
 },
 "samcli.commands.init.init_templates.InitTemplates._clone_repo": {
  "lineno": 127,
  "symbols_in_volume": [
   "os.path.join",
   "os.path.normpath",
   "samcli.cli.main.global_cfg.config_dir"
  ],
  "type": "function"
 },
 "samcli.commands.init.init_templates.InitTemplates._git_executable": {
  "lineno": 198,
  "symbols_in_volume": [
   "platform.system",
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "samcli.commands.init.init_templates.InitTemplates._init_options_from_bundle": {
  "lineno": 108,
  "symbols_in_volume": [
   "itertools.chain",
   "samcli.local.common.runtime_template.RUNTIME_DEP_TEMPLATE_MAPPING.values"
  ],
  "type": "function"
 },
 "samcli.commands.init.init_templates.InitTemplates._init_options_from_manifest": {
  "lineno": 94,
  "symbols_in_volume": [
   "json.loads",
   "os.path.join"
  ],
  "type": "function"
 },
 "samcli.commands.init.init_templates.InitTemplates._overwrite_existing_templates": {
  "lineno": 143,
  "symbols_in_volume": [
   "click.echo",
   "os.path.join",
   "os.path.normpath",
   "samcli.lib.utils.osutils.mkdir_temp",
   "subprocess.CalledProcessError",
   "subprocess.STDOUT",
   "subprocess.check_output"
  ],
  "type": "function"
 },
 "samcli.commands.init.init_templates.InitTemplates._replace_app_templates": {
  "lineno": 165,
  "symbols_in_volume": [
   "samcli.commands.exceptions.AppTemplateUpdateException",
   "samcli.lib.utils.osutils.rmtree_callback",
   "shutil.Error",
   "shutil.copytree",
   "shutil.ignore_patterns",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "samcli.commands.init.init_templates.InitTemplates._shared_dir_check": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.init.init_templates.InitTemplates._template_directory_exists": {
  "lineno": 194,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "samcli.commands.init.init_templates.InitTemplates.init_options": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.init.init_templates.InitTemplates.is_dynamic_schemas_template": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.init.init_templates.InitTemplates.location_from_app_template": {
  "lineno": 71,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "samcli.commands.init.init_templates.InitTemplates.prompt_for_location": {
  "lineno": 40,
  "symbols_in_volume": [
   "click.Choice",
   "click.echo",
   "click.prompt",
   "os.path.join"
  ],
  "type": "function"
 },
 "samcli.commands.init.init_templates.InvalidInitTemplateError": {
  "lineno": 26,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException"
  ],
  "type": "class"
 },
 "samcli.commands.init.interactive_event_bridge_flow": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.init.interactive_event_bridge_flow._construct_cli_page": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.init.interactive_event_bridge_flow._fetch_available_registries": {
  "lineno": 146,
  "symbols_in_volume": [
   "samcli.lib.schemas.schemas_constants.PAGE_LIMIT"
  ],
  "type": "function"
 },
 "samcli.commands.init.interactive_event_bridge_flow._fetch_available_schemas": {
  "lineno": 133,
  "symbols_in_volume": [
   "samcli.lib.schemas.schemas_constants.PAGE_LIMIT"
  ],
  "type": "function"
 },
 "samcli.commands.init.interactive_event_bridge_flow._get_registry_cli_choice": {
  "lineno": 45,
  "symbols_in_volume": [
   "click.echo"
  ],
  "type": "function"
 },
 "samcli.commands.init.interactive_event_bridge_flow._get_schema_cli_choice": {
  "lineno": 89,
  "symbols_in_volume": [
   "click.echo"
  ],
  "type": "function"
 },
 "samcli.commands.init.interactive_event_bridge_flow._prompt_for_registry_choice": {
  "lineno": 62,
  "symbols_in_volume": [
   "samcli.lib.schemas.cli_paginator.do_paginate_cli",
   "samcli.lib.schemas.schemas_cli_message_generator.construct_cli_display_message_for_registries",
   "samcli.lib.schemas.schemas_constants.PAGE_LIMIT"
  ],
  "type": "function"
 },
 "samcli.commands.init.interactive_event_bridge_flow._prompt_for_schemas_choice": {
  "lineno": 106,
  "symbols_in_volume": [
   "samcli.lib.schemas.cli_paginator.do_paginate_cli",
   "samcli.lib.schemas.schemas_cli_message_generator.construct_cli_display_message_for_schemas",
   "samcli.lib.schemas.schemas_constants.PAGE_LIMIT"
  ],
  "type": "function"
 },
 "samcli.commands.init.interactive_event_bridge_flow.get_schema_template_details": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.init.interactive_event_bridge_flow.get_schemas_api_caller": {
  "lineno": 189,
  "symbols_in_volume": [
   "samcli.lib.schemas.schemas_api_caller.SchemasApiCaller",
   "samcli.lib.schemas.schemas_aws_config.get_aws_configuration_choice",
   "samcli.lib.schemas.schemas_aws_config.get_schemas_client"
  ],
  "type": "function"
 },
 "samcli.commands.init.interactive_event_bridge_flow.get_schemas_template_parameter": {
  "lineno": 178,
  "symbols_in_volume": [
   "samcli.lib.schemas.schemas_constants.EVENT_BRIDGE_SOURCE",
   "samcli.lib.schemas.schemas_constants.EVENT_BRIDGE_SOURCE_DETAIL_TYPE",
   "samcli.lib.schemas.schemas_constants.SCHEMAS_REGISTRY",
   "samcli.lib.schemas.schemas_constants.SCHEMA_NAME",
   "samcli.lib.schemas.schemas_constants.SCHEMA_ROOT"
  ],
  "type": "function"
 },
 "samcli.commands.init.interactive_init_flow": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.commands.init.interactive_init_flow._generate_from_app_template": {
  "lineno": 54,
  "symbols_in_volume": [
   "click.echo",
   "click.prompt",
   "samcli.commands.init.init_generator.do_generate",
   "samcli.commands.init.init_templates.InitTemplates",
   "samcli.commands.init.interactive_event_bridge_flow.get_schemas_api_caller",
   "samcli.commands.init.interactive_event_bridge_flow.get_schemas_template_parameter"
  ],
  "type": "function"
 },
 "samcli.commands.init.interactive_init_flow._generate_from_location": {
  "lineno": 38,
  "symbols_in_volume": [
   "click.echo",
   "click.prompt",
   "samcli.commands.init.init_generator.do_generate"
  ],
  "type": "function"
 },
 "samcli.commands.init.interactive_init_flow._get_dependency_manager": {
  "lineno": 116,
  "symbols_in_volume": [
   "click.Choice",
   "click.echo",
   "click.prompt",
   "samcli.local.common.runtime_template.RUNTIME_TO_DEPENDENCY_MANAGERS.get"
  ],
  "type": "function"
 },
 "samcli.commands.init.interactive_init_flow._get_runtime": {
  "lineno": 102,
  "symbols_in_volume": [
   "click.Choice",
   "click.echo",
   "click.prompt",
   "samcli.local.common.runtime_template.INIT_RUNTIMES"
  ],
  "type": "function"
 },
 "samcli.commands.init.interactive_init_flow._get_schema_template_details": {
  "lineno": 136,
  "symbols_in_volume": [
   "botocore.exceptions.ClientError",
   "samcli.commands.exceptions.SchemasApiException",
   "samcli.commands.init.interactive_event_bridge_flow.get_schema_template_details"
  ],
  "type": "function"
 },
 "samcli.commands.init.interactive_init_flow._package_schemas_code": {
  "lineno": 145,
  "symbols_in_volume": [
   "botocore.exceptions.ClientError",
   "botocore.exceptions.WaiterError",
   "click.echo",
   "samcli.commands.exceptions.SchemasApiException",
   "samcli.lib.schemas.schemas_code_manager.do_download_source_code_binding",
   "samcli.lib.schemas.schemas_code_manager.do_extract_and_merge_schemas_code",
   "samcli.lib.utils.osutils.remove",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "samcli.commands.init.interactive_init_flow.do_interactive": {
  "lineno": 25,
  "symbols_in_volume": [
   "click.Choice",
   "click.echo",
   "click.prompt"
  ],
  "type": "function"
 },
 "samcli.commands.local": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.local.cli_common": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.local.cli_common.invoke_context": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext.__enter__": {
  "lineno": 118,
  "symbols_in_volume": [
   "samcli.lib.providers.sam_function_provider.SamFunctionProvider"
  ],
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext.__exit__": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext.__init__": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext._get_container_manager": {
  "lineno": 355,
  "symbols_in_volume": [
   "samcli.local.docker.manager.ContainerManager"
  ],
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext._get_debug_context": {
  "lineno": 316,
  "symbols_in_volume": [
   "errno.ENOENT",
   "pathlib.Path",
   "samcli.commands.local.lib.debug_context.DebugContext"
  ],
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext._get_env_vars_value": {
  "lineno": 279,
  "symbols_in_volume": [
   "json.load"
  ],
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext._get_template_data": {
  "lineno": 264,
  "symbols_in_volume": [
   "samcli.commands._utils.template.TemplateFailedParsingException",
   "samcli.commands._utils.template.TemplateNotFoundException",
   "samcli.commands._utils.template.get_template_data"
  ],
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext._is_debugging": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext._setup_log_file": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext.function_name": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext.get_cwd": {
  "lineno": 236,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.dirname"
  ],
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext.local_lambda_runner": {
  "lineno": 178,
  "symbols_in_volume": [
   "samcli.commands.local.lib.local_lambda.LocalLambdaRunner",
   "samcli.local.docker.lambda_image.LambdaImage",
   "samcli.local.lambdafn.runtime.LambdaRuntime",
   "samcli.local.layers.layer_downloader.LayerDownloader"
  ],
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext.parameter_overrides": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext.stderr": {
  "lineno": 214,
  "symbols_in_volume": [
   "samcli.lib.utils.osutils.stderr",
   "samcli.lib.utils.stream_writer.StreamWriter"
  ],
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext.stdout": {
  "lineno": 201,
  "symbols_in_volume": [
   "samcli.lib.utils.osutils.stdout",
   "samcli.lib.utils.stream_writer.StreamWriter"
  ],
  "type": "function"
 },
 "samcli.commands.local.cli_common.invoke_context.InvokeContext.template": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.cli_common.options": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.local.cli_common.options.get_application_dir": {
  "lineno": 11,
  "symbols_in_volume": [
   "click.get_app_dir",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "samcli.commands.local.cli_common.options.get_default_layer_cache_dir": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.cli_common.options.invoke_common_options": {
  "lineno": 72,
  "symbols_in_volume": [
   "click.INT",
   "click.Path",
   "click.option",
   "samcli.commands._utils.options.docker_click_options",
   "samcli.commands._utils.options.parameter_override_click_option",
   "samcli.commands._utils.options.template_click_option"
  ],
  "type": "function"
 },
 "samcli.commands.local.cli_common.options.service_common_options": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.cli_common.options.service_common_options.construct_options": {
  "lineno": 38,
  "symbols_in_volume": [
   "click.option"
  ],
  "type": "function"
 },
 "samcli.commands.local.cli_common.user_exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.local.cli_common.user_exceptions.CredentialsRequired": {
  "lineno": 38,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException"
  ],
  "type": "class"
 },
 "samcli.commands.local.cli_common.user_exceptions.DebugContextException": {
  "lineno": 26,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException"
  ],
  "type": "class"
 },
 "samcli.commands.local.cli_common.user_exceptions.ImageBuildException": {
  "lineno": 32,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException"
  ],
  "type": "class"
 },
 "samcli.commands.local.cli_common.user_exceptions.InvalidLayerVersionArn": {
  "lineno": 50,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException"
  ],
  "type": "class"
 },
 "samcli.commands.local.cli_common.user_exceptions.InvalidSamTemplateException": {
  "lineno": 14,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException"
  ],
  "type": "class"
 },
 "samcli.commands.local.cli_common.user_exceptions.InvokeContextException": {
  "lineno": 8,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException"
  ],
  "type": "class"
 },
 "samcli.commands.local.cli_common.user_exceptions.NotAvailableInRegion": {
  "lineno": 62,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException"
  ],
  "type": "class"
 },
 "samcli.commands.local.cli_common.user_exceptions.ResourceNotFound": {
  "lineno": 44,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException"
  ],
  "type": "class"
 },
 "samcli.commands.local.cli_common.user_exceptions.SamTemplateNotFoundException": {
  "lineno": 20,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException"
  ],
  "type": "class"
 },
 "samcli.commands.local.cli_common.user_exceptions.UnsupportedIntrinsic": {
  "lineno": 56,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException"
  ],
  "type": "class"
 },
 "samcli.commands.local.generate_event": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.local.generate_event.cli": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.local.generate_event.cli.cli": {
  "lineno": 29,
  "symbols_in_volume": [
   "click.command",
   "samcli.cli.main.pass_context",
   "samcli.commands.local.generate_event.event_generation.GenerateEventCommand"
  ],
  "type": "function"
 },
 "samcli.commands.local.generate_event.event_generation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.local.generate_event.event_generation.EventTypeSubCommand": {
  "lineno": 86,
  "symbols_in_volume": [
   "click.MultiCommand"
  ],
  "type": "class"
 },
 "samcli.commands.local.generate_event.event_generation.EventTypeSubCommand.__init__": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.generate_event.event_generation.EventTypeSubCommand.cmd_implementation": {
  "lineno": 189,
  "symbols_in_volume": [
   "click.echo",
   "samcli.lib.telemetry.metrics.track_command"
  ],
  "type": "function"
 },
 "samcli.commands.local.generate_event.event_generation.EventTypeSubCommand.get_command": {
  "lineno": 123,
  "symbols_in_volume": [
   "click.Command",
   "click.Option",
   "functools.partial",
   "samcli.cli.cli_config_file.TomlProvider",
   "samcli.cli.cli_config_file.get_ctx_defaults",
   "samcli.cli.options.debug_option",
   "samcli.lib.config.samconfig.DEFAULT_ENV"
  ],
  "type": "function"
 },
 "samcli.commands.local.generate_event.event_generation.EventTypeSubCommand.list_commands": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.generate_event.event_generation.GenerateEventCommand": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.commands.local.generate_event.event_generation.GenerateEventCommand.__init__": {
  "lineno": 221,
  "symbols_in_volume": [
   "samcli.lib.generated_sample_events.events.Events"
  ],
  "type": "function"
 },
 "samcli.commands.local.generate_event.event_generation.ServiceCommand": {
  "lineno": 16,
  "symbols_in_volume": [
   "click.MultiCommand"
  ],
  "type": "class"
 },
 "samcli.commands.local.generate_event.event_generation.ServiceCommand.__init__": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.generate_event.event_generation.ServiceCommand.get_command": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.generate_event.event_generation.ServiceCommand.list_commands": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.invoke": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.local.invoke.cli": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.commands.local.invoke.cli._get_event": {
  "lineno": 169,
  "symbols_in_volume": [
   "click.open_file"
  ],
  "type": "function"
 },
 "samcli.commands.local.invoke.cli.cli": {
  "lineno": 33,
  "symbols_in_volume": [
   "click.Path",
   "click.argument",
   "click.command",
   "click.option",
   "samcli.cli.cli_config_file.TomlProvider",
   "samcli.cli.cli_config_file.configuration_option",
   "samcli.cli.main.aws_creds_options",
   "samcli.cli.main.common_options",
   "samcli.cli.main.pass_context",
   "samcli.commands.local.cli_common.options.invoke_common_options",
   "samcli.lib.telemetry.metrics.track_command"
  ],
  "type": "function"
 },
 "samcli.commands.local.invoke.cli.do_cli": {
  "lineno": 90,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException",
   "samcli.commands.local.cli_common.invoke_context.InvokeContext",
   "samcli.commands.local.lib.exceptions.OverridesNotWellDefinedError",
   "samcli.commands.validate.lib.exceptions.InvalidSamDocumentException",
   "samcli.lib.providers.exceptions.InvalidLayerReference",
   "samcli.local.docker.lambda_debug_settings.DebuggingNotSupported",
   "samcli.local.docker.manager.DockerImagePullFailedException",
   "samcli.local.lambdafn.exceptions.FunctionNotFound"
  ],
  "type": "function"
 },
 "samcli.commands.local.lib": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.local.lib.debug_context": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.local.lib.debug_context.DebugContext": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.commands.local.lib.debug_context.DebugContext.__bool__": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.lib.debug_context.DebugContext.__init__": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.lib.debug_context.DebugContext.__nonzero__": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.lib.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.local.lib.exceptions.NoApisDefined": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.commands.local.lib.exceptions.OverridesNotWellDefinedError": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.commands.local.lib.local_api_service": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.commands.local.lib.local_api_service.LocalApiService": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.commands.local.lib.local_api_service.LocalApiService.__init__": {
  "lineno": 21,
  "symbols_in_volume": [
   "samcli.lib.providers.api_provider.ApiProvider"
  ],
  "type": "function"
 },
 "samcli.commands.local.lib.local_api_service.LocalApiService._make_static_dir_path": {
  "lineno": 114,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join"
  ],
  "type": "function"
 },
 "samcli.commands.local.lib.local_api_service.LocalApiService._print_routes": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.lib.local_api_service.LocalApiService.start": {
  "lineno": 43,
  "symbols_in_volume": [
   "samcli.commands.local.lib.exceptions.NoApisDefined",
   "samcli.local.apigw.local_apigw_service.LocalApigwService"
  ],
  "type": "function"
 },
 "samcli.commands.local.lib.local_lambda": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.commands.local.lib.local_lambda.LocalLambdaRunner": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.commands.local.lib.local_lambda.LocalLambdaRunner.__init__": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.lib.local_lambda.LocalLambdaRunner._get_invoke_config": {
  "lineno": 114,
  "symbols_in_volume": [
   "samcli.lib.utils.codeuri.resolve_code_path",
   "samcli.local.lambdafn.config.FunctionConfig"
  ],
  "type": "function"
 },
 "samcli.commands.local.lib.local_lambda.LocalLambdaRunner._get_session_creds": {
  "lineno": 210,
  "symbols_in_volume": [
   "boto3.session.Session"
  ],
  "type": "function"
 },
 "samcli.commands.local.lib.local_lambda.LocalLambdaRunner._make_env_vars": {
  "lineno": 146,
  "symbols_in_volume": [
   "os.environ",
   "samcli.commands.local.lib.exceptions.OverridesNotWellDefinedError",
   "samcli.local.lambdafn.env_vars.EnvironmentVariables"
  ],
  "type": "function"
 },
 "samcli.commands.local.lib.local_lambda.LocalLambdaRunner.get_aws_creds": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.lib.local_lambda.LocalLambdaRunner.invoke": {
  "lineno": 59,
  "symbols_in_volume": [
   "samcli.local.lambdafn.exceptions.FunctionNotFound"
  ],
  "type": "function"
 },
 "samcli.commands.local.lib.local_lambda.LocalLambdaRunner.is_debugging": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.lib.local_lambda_service": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.commands.local.lib.local_lambda_service.LocalLambdaService": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.commands.local.lib.local_lambda_service.LocalLambdaService.__init__": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.lib.local_lambda_service.LocalLambdaService.start": {
  "lineno": 32,
  "symbols_in_volume": [
   "samcli.local.lambda_service.local_lambda_invoke_service.LocalLambdaInvokeService"
  ],
  "type": "function"
 },
 "samcli.commands.local.lib.swagger": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.local.lib.swagger.integration_uri": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.commands.local.lib.swagger.integration_uri.IntegrationType": {
  "lineno": 272,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "samcli.commands.local.lib.swagger.integration_uri.LambdaUri": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.commands.local.lib.swagger.integration_uri.LambdaUri._get_function_arn": {
  "lineno": 66,
  "symbols_in_volume": [
   "re.match",
   "six.string_types"
  ],
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.integration_uri.LambdaUri._get_function_name_from_arn": {
  "lineno": 130,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.integration_uri.LambdaUri._is_sub_intrinsic": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.integration_uri.LambdaUri._resolve_fn_sub": {
  "lineno": 172,
  "symbols_in_volume": [
   "re.sub",
   "six.string_types"
  ],
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.integration_uri.LambdaUri.get_function_name": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.parser": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.commands.local.lib.swagger.parser.SwaggerParser": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.commands.local.lib.swagger.parser.SwaggerParser.__init__": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.parser.SwaggerParser._get_integration_function_name": {
  "lineno": 91,
  "symbols_in_volume": [
   "samcli.commands.local.lib.swagger.integration_uri.IntegrationType.aws_proxy.value",
   "samcli.commands.local.lib.swagger.integration_uri.LambdaUri.get_function_name"
  ],
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.parser.SwaggerParser.get_binary_media_types": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.parser.SwaggerParser.get_routes": {
  "lineno": 37,
  "symbols_in_volume": [
   "samcli.local.apigw.local_apigw_service.Route"
  ],
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.reader": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.commands.local.lib.swagger.reader.SwaggerReader": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.commands.local.lib.swagger.reader.SwaggerReader.__init__": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.reader.SwaggerReader._download_from_s3": {
  "lineno": 184,
  "symbols_in_volume": [
   "boto3.client",
   "botocore.exceptions.ClientError",
   "tempfile.TemporaryFile"
  ],
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.reader.SwaggerReader._download_swagger": {
  "lineno": 140,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join",
   "samcli.yamlhelper.yaml_parse",
   "six.string_types"
  ],
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.reader.SwaggerReader._parse_s3_location": {
  "lineno": 232,
  "symbols_in_volume": [
   "six.moves.urllib.parse.parse_qs",
   "six.moves.urllib.parse.urlparse",
   "six.string_types"
  ],
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.reader.SwaggerReader._read_from_definition_body": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.reader.SwaggerReader.read": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.lib.swagger.reader.parse_aws_include_transform": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.local.local": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.local.local.cli": {
  "lineno": 14,
  "symbols_in_volume": [
   "click.group"
  ],
  "type": "function"
 },
 "samcli.commands.local.start_api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.local.start_api.cli": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.commands.local.start_api.cli.cli": {
  "lineno": 29,
  "symbols_in_volume": [
   "click.command",
   "click.option",
   "samcli.cli.cli_config_file.TomlProvider",
   "samcli.cli.cli_config_file.configuration_option",
   "samcli.cli.main.aws_creds_options",
   "samcli.cli.main.common_options",
   "samcli.cli.main.pass_context",
   "samcli.commands.local.cli_common.options.invoke_common_options",
   "samcli.commands.local.cli_common.options.service_common_options",
   "samcli.lib.telemetry.metrics.track_command"
  ],
  "type": "function"
 },
 "samcli.commands.local.start_api.cli.do_cli": {
  "lineno": 90,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException",
   "samcli.commands.local.cli_common.invoke_context.InvokeContext",
   "samcli.commands.local.lib.exceptions.NoApisDefined",
   "samcli.commands.local.lib.exceptions.OverridesNotWellDefinedError",
   "samcli.commands.local.lib.local_api_service.LocalApiService",
   "samcli.commands.validate.lib.exceptions.InvalidSamDocumentException",
   "samcli.lib.providers.exceptions.InvalidLayerReference",
   "samcli.local.docker.lambda_debug_settings.DebuggingNotSupported"
  ],
  "type": "function"
 },
 "samcli.commands.local.start_lambda": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.local.start_lambda.cli": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.commands.local.start_lambda.cli.cli": {
  "lineno": 48,
  "symbols_in_volume": [
   "click.command",
   "samcli.cli.cli_config_file.TomlProvider",
   "samcli.cli.cli_config_file.configuration_option",
   "samcli.cli.main.aws_creds_options",
   "samcli.cli.main.common_options",
   "samcli.cli.main.pass_context",
   "samcli.commands.local.cli_common.options.invoke_common_options",
   "samcli.commands.local.cli_common.options.service_common_options",
   "samcli.lib.telemetry.metrics.track_command"
  ],
  "type": "function"
 },
 "samcli.commands.local.start_lambda.cli.do_cli": {
  "lineno": 100,
  "symbols_in_volume": [
   "samcli.commands.local.cli_common.invoke_context.InvokeContext",
   "samcli.commands.local.cli_common.user_exceptions.UserException",
   "samcli.commands.local.lib.exceptions.OverridesNotWellDefinedError",
   "samcli.commands.local.lib.local_lambda_service.LocalLambdaService",
   "samcli.commands.validate.lib.exceptions.InvalidSamDocumentException",
   "samcli.lib.providers.exceptions.InvalidLayerReference",
   "samcli.local.docker.lambda_debug_settings.DebuggingNotSupported"
  ],
  "type": "function"
 },
 "samcli.commands.logs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.logs.command": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.commands.logs.command.cli": {
  "lineno": 35,
  "symbols_in_volume": [
   "click.command",
   "click.option",
   "samcli.cli.cli_config_file.TomlProvider",
   "samcli.cli.cli_config_file.configuration_option",
   "samcli.cli.main.aws_creds_options",
   "samcli.cli.main.common_options",
   "samcli.cli.main.pass_context",
   "samcli.lib.telemetry.metrics.track_command"
  ],
  "type": "function"
 },
 "samcli.commands.logs.command.do_cli": {
  "lineno": 84,
  "symbols_in_volume": [
   "click.echo"
  ],
  "type": "function"
 },
 "samcli.commands.logs.logs_context": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.commands.logs.logs_context.InvalidTimestampError": {
  "lineno": 19,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException"
  ],
  "type": "class"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext.__enter__": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext.__exit__": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext.__init__": {
  "lineno": 34,
  "symbols_in_volume": [
   "boto3.client"
  ],
  "type": "function"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext._get_resource_id_from_stack": {
  "lineno": 224,
  "symbols_in_volume": [
   "botocore.exceptions.ClientError",
   "samcli.commands.exceptions.UserException"
  ],
  "type": "function"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext._parse_time": {
  "lineno": 192,
  "symbols_in_volume": [
   "samcli.lib.utils.time.parse_date",
   "samcli.lib.utils.time.to_utc"
  ],
  "type": "function"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext._setup_output_file": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext.colored": {
  "lineno": 153,
  "symbols_in_volume": [
   "samcli.lib.utils.colors.Colored"
  ],
  "type": "function"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext.end_time": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext.fetcher": {
  "lineno": 98,
  "symbols_in_volume": [
   "samcli.lib.logs.fetcher.LogsFetcher"
  ],
  "type": "function"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext.filter_pattern": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext.formatter": {
  "lineno": 102,
  "symbols_in_volume": [
   "samcli.lib.logs.formatter.JSONMsgFormatter.format_json",
   "samcli.lib.logs.formatter.KeywordHighlighter",
   "samcli.lib.logs.formatter.LambdaLogMsgFormatters.colorize_errors",
   "samcli.lib.logs.formatter.LogsFormatter"
  ],
  "type": "function"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext.log_group_name": {
  "lineno": 129,
  "symbols_in_volume": [
   "samcli.lib.logs.provider.LogGroupProvider.for_lambda_function"
  ],
  "type": "function"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext.output_file_handle": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.logs.logs_context.LogsCommandContext.start_time": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.package": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.package.command": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.package.command.cli": {
  "lineno": 38,
  "symbols_in_volume": [
   "click.Path",
   "click.command",
   "click.option",
   "samcli.cli.cli_config_file.TomlProvider",
   "samcli.cli.cli_config_file.configuration_option",
   "samcli.cli.main.aws_creds_options",
   "samcli.cli.main.common_options",
   "samcli.cli.main.pass_context",
   "samcli.commands._utils.options.metadata_override_option",
   "samcli.commands._utils.options.template_click_option",
   "samcli.lib.telemetry.metrics.track_command"
  ],
  "type": "function"
 },
 "samcli.commands.package.command.do_cli": {
  "lineno": 104,
  "symbols_in_volume": [
   "samcli.commands.package.package_context.PackageContext"
  ],
  "type": "function"
 },
 "samcli.commands.package.command.resources_and_properties_help_string": {
  "lineno": 16,
  "symbols_in_volume": [
   "samcli.commands._utils.resources.resources_generator"
  ],
  "type": "function"
 },
 "samcli.commands.package.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.package.exceptions.BucketNotSpecifiedError": {
  "lineno": 86,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException"
  ],
  "type": "class"
 },
 "samcli.commands.package.exceptions.BucketNotSpecifiedError.__init__": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.package.exceptions.ExportFailedError": {
  "lineno": 41,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException"
  ],
  "type": "class"
 },
 "samcli.commands.package.exceptions.ExportFailedError.__init__": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.package.exceptions.InvalidLocalPathError": {
  "lineno": 7,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException"
  ],
  "type": "class"
 },
 "samcli.commands.package.exceptions.InvalidLocalPathError.__init__": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.package.exceptions.InvalidTemplateUrlParameterError": {
  "lineno": 23,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException"
  ],
  "type": "class"
 },
 "samcli.commands.package.exceptions.InvalidTemplateUrlParameterError.__init__": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.package.exceptions.NoSuchBucketError": {
  "lineno": 77,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException"
  ],
  "type": "class"
 },
 "samcli.commands.package.exceptions.NoSuchBucketError.__init__": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.package.exceptions.PackageFailedError": {
  "lineno": 65,
  "symbols_in_volume": [
   "samcli.commands.exceptions.UserException"
  ],
  "type": "class"
 },
 "samcli.commands.package.exceptions.PackageFailedError.__init__": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.package.package_context": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.commands.package.package_context.PackageContext": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.commands.package.package_context.PackageContext.__enter__": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.package.package_context.PackageContext.__exit__": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.package.package_context.PackageContext.__init__": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.package.package_context.PackageContext._export": {
  "lineno": 108,
  "symbols_in_volume": [
   "json.dumps",
   "os.getcwd",
   "samcli.lib.package.artifact_exporter.Template",
   "samcli.yamlhelper.yaml_dump"
  ],
  "type": "function"
 },
 "samcli.commands.package.package_context.PackageContext.run": {
  "lineno": 81,
  "symbols_in_volume": [
   "boto3.client",
   "click.echo",
   "os.path.abspath",
   "samcli.commands.package.exceptions.PackageFailedError",
   "samcli.lib.package.s3_uploader.S3Uploader",
   "samcli.lib.utils.botoconfig.get_boto_config_with_user_agent"
  ],
  "type": "function"
 },
 "samcli.commands.package.package_context.PackageContext.write_output": {
  "lineno": 119,
  "symbols_in_volume": [
   "click.echo"
  ],
  "type": "function"
 },
 "samcli.commands.publish": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.publish.command": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.commands.publish.command._gen_success_message": {
  "lineno": 97,
  "symbols_in_volume": [
   "json.dumps",
   "serverlessrepo.publish.CREATE_APPLICATION"
  ],
  "type": "function"
 },
 "samcli.commands.publish.command._print_console_link": {
  "lineno": 120,
  "symbols_in_volume": [
   "boto3.Session",
   "click.secho"
  ],
  "type": "function"
 },
 "samcli.commands.publish.command.cli": {
  "lineno": 43,
  "symbols_in_volume": [
   "click.command",
   "click.option",
   "samcli.cli.cli_config_file.TomlProvider",
   "samcli.cli.cli_config_file.configuration_option",
   "samcli.cli.main.aws_creds_options",
   "samcli.cli.main.common_options",
   "samcli.cli.main.pass_context",
   "samcli.commands._utils.options.template_common_option",
   "samcli.lib.telemetry.metrics.track_command"
  ],
  "type": "function"
 },
 "samcli.commands.publish.command.do_cli": {
  "lineno": 57,
  "symbols_in_volume": [
   "click.secho",
   "samcli.commands._utils.template.TemplateFailedParsingException",
   "samcli.commands._utils.template.TemplateNotFoundException",
   "samcli.commands._utils.template.get_template_data",
   "samcli.commands.exceptions.UserException",
   "serverlessrepo.exceptions.InvalidS3UriError",
   "serverlessrepo.exceptions.ServerlessRepoError",
   "serverlessrepo.parser.METADATA",
   "serverlessrepo.parser.SERVERLESS_REPO_APPLICATION",
   "serverlessrepo.publish_application"
  ],
  "type": "function"
 },
 "samcli.commands.validate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.validate.lib": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.validate.lib.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.validate.lib.exceptions.InvalidSamDocumentException": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.commands.validate.lib.sam_template_validator": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.commands.validate.lib.sam_template_validator.SamTemplateValidator": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.commands.validate.lib.sam_template_validator.SamTemplateValidator.__init__": {
  "lineno": 18,
  "symbols_in_volume": [
   "samtranslator.parser.parser.Parser"
  ],
  "type": "function"
 },
 "samcli.commands.validate.lib.sam_template_validator.SamTemplateValidator._replace_local_codeuri": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.validate.lib.sam_template_validator.SamTemplateValidator._update_to_s3_uri": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.validate.lib.sam_template_validator.SamTemplateValidator.is_s3_uri": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.commands.validate.lib.sam_template_validator.SamTemplateValidator.is_valid": {
  "lineno": 43,
  "symbols_in_volume": [
   "functools.reduce",
   "samcli.yamlhelper.yaml_dump",
   "samtranslator.public.exceptions.InvalidDocumentException",
   "samtranslator.translator.translator.Translator"
  ],
  "type": "function"
 },
 "samcli.commands.validate.validate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.commands.validate.validate._read_sam_file": {
  "lineno": 59,
  "symbols_in_volume": [
   "click.open_file",
   "click.secho",
   "os.path.exists",
   "samcli.commands.local.cli_common.user_exceptions.SamTemplateNotFoundException",
   "samcli.yamlhelper.yaml_parse"
  ],
  "type": "function"
 },
 "samcli.commands.validate.validate.cli": {
  "lineno": 16,
  "symbols_in_volume": [
   "click.command",
   "samcli.cli.cli_config_file.TomlProvider",
   "samcli.cli.cli_config_file.configuration_option",
   "samcli.cli.main.aws_creds_options",
   "samcli.cli.main.common_options",
   "samcli.cli.main.pass_context",
   "samcli.commands._utils.options.template_option_without_build",
   "samcli.lib.telemetry.metrics.track_command"
  ],
  "type": "function"
 },
 "samcli.commands.validate.validate.do_cli": {
  "lineno": 30,
  "symbols_in_volume": [
   "boto3.client",
   "botocore.exceptions.NoCredentialsError",
   "click.secho",
   "samcli.commands.exceptions.UserException",
   "samcli.commands.local.cli_common.user_exceptions.InvalidSamTemplateException",
   "samtranslator.translator.managed_policy_translator.ManagedPolicyLoader"
  ],
  "type": "function"
 },
 "samcli.lib": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.bootstrap": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.bootstrap.bootstrap": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.lib.bootstrap.bootstrap._create_or_get_stack": {
  "lineno": 39,
  "symbols_in_volume": [
   "botocore.exceptions.BotoCoreError",
   "botocore.exceptions.ClientError",
   "click.echo",
   "samcli.commands.bootstrap.exceptions.ManagedStackError",
   "samcli.commands.exceptions.UserException"
  ],
  "type": "function"
 },
 "samcli.lib.bootstrap.bootstrap._create_stack": {
  "lineno": 86,
  "symbols_in_volume": [
   "click.echo"
  ],
  "type": "function"
 },
 "samcli.lib.bootstrap.bootstrap._get_stack_template": {
  "lineno": 110,
  "symbols_in_volume": [
   "json.dumps",
   "samcli.__version__",
   "samcli.cli.global_config.GlobalConfig"
  ],
  "type": "function"
 },
 "samcli.lib.bootstrap.bootstrap.manage_stack": {
  "lineno": 25,
  "symbols_in_volume": [
   "boto3.client",
   "botocore.config.Config",
   "botocore.exceptions.NoCredentialsError",
   "botocore.exceptions.NoRegionError",
   "samcli.commands.exceptions.CredentialsError",
   "samcli.commands.exceptions.RegionError"
  ],
  "type": "function"
 },
 "samcli.lib.build": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.build.app_builder": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.lib.build.app_builder.ApplicationBuilder": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.build.app_builder.ApplicationBuilder.__init__": {
  "lineno": 54,
  "symbols_in_volume": [
   "samcli.lib.utils.colors.Colored"
  ],
  "type": "function"
 },
 "samcli.lib.build.app_builder.ApplicationBuilder._build_function": {
  "lineno": 162,
  "symbols_in_volume": [
   "os.path.join",
   "pathlib.Path",
   "samcli.lib.utils.osutils.mkdir_temp"
  ],
  "type": "function"
 },
 "samcli.lib.build.app_builder.ApplicationBuilder._build_function_in_process": {
  "lineno": 233,
  "symbols_in_volume": [
   "aws_lambda_builders.builder.LambdaBuilder",
   "aws_lambda_builders.exceptions.LambdaBuilderError"
  ],
  "type": "function"
 },
 "samcli.lib.build.app_builder.ApplicationBuilder._build_function_on_container": {
  "lineno": 260,
  "symbols_in_volume": [
   "aws_lambda_builders.RPC_PROTOCOL_VERSION",
   "docker.errors.APIError",
   "io.BytesIO",
   "samcli.lib.utils.osutils.stderr",
   "samcli.local.docker.lambda_build_container.LambdaBuildContainer"
  ],
  "type": "function"
 },
 "samcli.lib.build.app_builder.ApplicationBuilder._get_build_options": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.build.app_builder.ApplicationBuilder._parse_builder_response": {
  "lineno": 325,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "samcli.lib.build.app_builder.ApplicationBuilder.build": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.build.app_builder.ApplicationBuilder.update_template": {
  "lineno": 119,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.relpath"
  ],
  "type": "function"
 },
 "samcli.lib.build.app_builder.BuildError": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.build.app_builder.BuildError.__init__": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.build.app_builder.BuildInsideContainerError": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.build.app_builder.ContainerBuildNotSupported": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.build.app_builder.UnsupportedBuilderLibraryVersionError": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.build.app_builder.UnsupportedBuilderLibraryVersionError.__init__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.build.workflow_config": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.lib.build.workflow_config.BasicWorkflowSelector": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.build.workflow_config.BasicWorkflowSelector.__init__": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.build.workflow_config.BasicWorkflowSelector.get_config": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.build.workflow_config.ManifestWorkflowSelector": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.build.workflow_config.ManifestWorkflowSelector._has_manifest": {
  "lineno": 240,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join"
  ],
  "type": "function"
 },
 "samcli.lib.build.workflow_config.ManifestWorkflowSelector.get_config": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.build.workflow_config.UnsupportedRuntimeException": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.build.workflow_config.get_workflow_config": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.build.workflow_config.supports_build_in_container": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.build.workflow_config.supports_build_in_container._key": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.config": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.config.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.config.exceptions.SamConfigVersionException": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.config.samconfig": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.lib.config.samconfig.SamConfig": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.config.samconfig.SamConfig.__init__": {
  "lineno": 28,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "samcli.lib.config.samconfig.SamConfig._read": {
  "lineno": 153,
  "symbols_in_volume": [
   "tomlkit.document",
   "tomlkit.loads"
  ],
  "type": "function"
 },
 "samcli.lib.config.samconfig.SamConfig._to_key": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.config.samconfig.SamConfig._version": {
  "lineno": 180,
  "symbols_in_volume": [
   "samcli.lib.config.version.VERSION_KEY"
  ],
  "type": "function"
 },
 "samcli.lib.config.samconfig.SamConfig._version_sanity_check": {
  "lineno": 183,
  "symbols_in_volume": [
   "samcli.lib.config.exceptions.SamConfigVersionException",
   "samcli.lib.config.version.VERSION_KEY"
  ],
  "type": "function"
 },
 "samcli.lib.config.samconfig.SamConfig._write": {
  "lineno": 166,
  "symbols_in_volume": [
   "samcli.lib.config.version.SAM_CONFIG_VERSION",
   "samcli.lib.config.version.VERSION_KEY",
   "tomlkit.dumps",
   "tomlkit.exceptions.KeyAlreadyPresent"
  ],
  "type": "function"
 },
 "samcli.lib.config.samconfig.SamConfig.config_dir": {
  "lineno": 142,
  "symbols_in_volume": [
   "os.getcwd",
   "os.path.dirname"
  ],
  "type": "function"
 },
 "samcli.lib.config.samconfig.SamConfig.exists": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.config.samconfig.SamConfig.flush": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.config.samconfig.SamConfig.get_all": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.config.samconfig.SamConfig.path": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.config.samconfig.SamConfig.put": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.config.samconfig.SamConfig.sanity_check": {
  "lineno": 125,
  "symbols_in_volume": [
   "tomlkit.exceptions.TOMLKitError"
  ],
  "type": "function"
 },
 "samcli.lib.config.version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.deploy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.deploy.deployer": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.lib.deploy.deployer.Deployer": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.deploy.deployer.Deployer.__init__": {
  "lineno": 69,
  "symbols_in_volume": [
   "samcli.lib.deploy.utils.DeployColor"
  ],
  "type": "function"
 },
 "samcli.lib.deploy.deployer.Deployer._check_stack_complete": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.deploy.deployer.Deployer._create_change_set": {
  "lineno": 184,
  "symbols_in_volume": [
   "botocore.exceptions.ClientError",
   "samcli.commands.deploy.exceptions.ChangeSetError",
   "samcli.commands.deploy.exceptions.DeployBucketInDifferentRegionError"
  ],
  "type": "function"
 },
 "samcli.lib.deploy.deployer.Deployer._display_stack_outputs": {
  "lineno": 432,
  "symbols_in_volume": [
   "samcli.commands._utils.table_print.MIN_OFFSET",
   "samcli.commands._utils.table_print.newline_per_item",
   "samcli.commands._utils.table_print.pprint_column_names",
   "samcli.commands._utils.table_print.pprint_columns"
  ],
  "type": "function"
 },
 "samcli.lib.deploy.deployer.Deployer.create_and_wait_for_changeset": {
  "lineno": 419,
  "symbols_in_volume": [
   "botocore.exceptions.ClientError",
   "samcli.commands.deploy.exceptions.DeployFailedError"
  ],
  "type": "function"
 },
 "samcli.lib.deploy.deployer.Deployer.create_changeset": {
  "lineno": 121,
  "symbols_in_volume": [
   "datetime.datetime.utcnow",
   "samcli.lib.package.artifact_exporter.mktempfile",
   "samcli.lib.package.artifact_exporter.parse_s3_url",
   "time.time"
  ],
  "type": "function"
 },
 "samcli.lib.deploy.deployer.Deployer.describe_changeset": {
  "lineno": 197,
  "symbols_in_volume": [
   "samcli.commands._utils.table_print.pprint_column_names",
   "samcli.commands._utils.table_print.pprint_columns"
  ],
  "type": "function"
 },
 "samcli.lib.deploy.deployer.Deployer.describe_stack_events": {
  "lineno": 315,
  "symbols_in_volume": [
   "botocore.exceptions.ClientError",
   "math.pow",
   "samcli.commands._utils.table_print.pprint_column_names",
   "samcli.commands._utils.table_print.pprint_columns",
   "samcli.lib.utils.time.utc_to_timestamp",
   "time.sleep"
  ],
  "type": "function"
 },
 "samcli.lib.deploy.deployer.Deployer.execute_changeset": {
  "lineno": 289,
  "symbols_in_volume": [
   "botocore.exceptions.ClientError",
   "samcli.commands.deploy.exceptions.DeployFailedError"
  ],
  "type": "function"
 },
 "samcli.lib.deploy.deployer.Deployer.get_last_event_time": {
  "lineno": 302,
  "symbols_in_volume": [
   "samcli.lib.utils.time.utc_to_timestamp",
   "time.time"
  ],
  "type": "function"
 },
 "samcli.lib.deploy.deployer.Deployer.get_stack_outputs": {
  "lineno": 456,
  "symbols_in_volume": [
   "botocore.exceptions.ClientError",
   "samcli.commands.deploy.exceptions.DeployStackOutPutFailedError",
   "sys.stdout.flush",
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "samcli.lib.deploy.deployer.Deployer.has_stack": {
  "lineno": 80,
  "symbols_in_volume": [
   "botocore.exceptions.BotoCoreError",
   "botocore.exceptions.ClientError",
   "samcli.commands.deploy.exceptions.DeployFailedError"
  ],
  "type": "function"
 },
 "samcli.lib.deploy.deployer.Deployer.wait_for_changeset": {
  "lineno": 255,
  "symbols_in_volume": [
   "botocore.exceptions.WaiterError",
   "samcli.commands.deploy.exceptions.ChangeEmptyError",
   "samcli.commands.deploy.exceptions.ChangeSetError",
   "sys.stdout.flush",
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "samcli.lib.deploy.deployer.Deployer.wait_for_execute": {
  "lineno": 387,
  "symbols_in_volume": [
   "botocore.exceptions.WaiterError",
   "datetime.datetime.now",
   "samcli.commands.deploy.exceptions.DeployFailedError",
   "sys.stdout.flush",
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "samcli.lib.deploy.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.deploy.utils.DeployColor": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.deploy.utils.DeployColor.__init__": {
  "lineno": 9,
  "symbols_in_volume": [
   "samcli.lib.utils.colors.Colored"
  ],
  "type": "function"
 },
 "samcli.lib.deploy.utils.DeployColor.get_changeset_action_color": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.deploy.utils.DeployColor.get_stack_events_status_color": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.generated_sample_events": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.generated_sample_events.events": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.generated_sample_events.events.Events": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.generated_sample_events.events.Events.__init__": {
  "lineno": 26,
  "symbols_in_volume": [
   "json.load",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "samcli.lib.generated_sample_events.events.Events.base64_utf_encode": {
  "lineno": 79,
  "symbols_in_volume": [
   "base64.b64encode"
  ],
  "type": "function"
 },
 "samcli.lib.generated_sample_events.events.Events.encode": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.generated_sample_events.events.Events.generate_event": {
  "lineno": 94,
  "symbols_in_volume": [
   "chevron.renderer.render",
   "json.dumps",
   "json.load",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "samcli.lib.generated_sample_events.events.Events.url_encode": {
  "lineno": 64,
  "symbols_in_volume": [
   "requests.utils.quote"
  ],
  "type": "function"
 },
 "samcli.lib.init": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.lib.init.arbitrary_project": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.lib.init.arbitrary_project._download_and_copy": {
  "lineno": 87,
  "symbols_in_volume": [
   "samcli.lib.utils.osutils.copytree",
   "samcli.lib.utils.osutils.mkdir_temp",
   "shutil.ignore_patterns"
  ],
  "type": "function"
 },
 "samcli.lib.init.arbitrary_project.generate_non_cookiecutter_project": {
  "lineno": 30,
  "symbols_in_volume": [
   "cookiecutter.config.BUILTIN_ABBREVIATIONS",
   "cookiecutter.exceptions.RepositoryNotFound",
   "cookiecutter.repository.clone",
   "cookiecutter.repository.expand_abbreviations",
   "cookiecutter.repository.is_repo_url",
   "cookiecutter.repository.is_zip_file",
   "cookiecutter.repository.unzip",
   "functools.partial"
  ],
  "type": "function"
 },
 "samcli.lib.init.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.init.exceptions.ArbitraryProjectDownloadFailed": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.init.exceptions.GenerateProjectFailedError": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.init.exceptions.InitErrorException": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.init.exceptions.InitErrorException.__init__": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.init.generate_project": {
  "lineno": 19,
  "symbols_in_volume": [
   "cookiecutter.exceptions.CookiecutterException",
   "cookiecutter.exceptions.RepositoryNotFound",
   "cookiecutter.main.cookiecutter",
   "itertools.chain",
   "pathlib.Path",
   "samcli.local.common.runtime_template.RUNTIME_DEP_TEMPLATE_MAPPING.values"
  ],
  "type": "function"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-dotnet.tests.test_cookiecutter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-dotnet.tests.test_cookiecutter.test_app_content": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-dotnet.tests.test_cookiecutter.test_project_tree": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-golang.tests.test_bake_project": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-golang.tests.test_bake_project.inside_dir": {
  "lineno": 7,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "os.chdir",
   "os.getcwd"
  ],
  "type": "function"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-golang.tests.test_bake_project.test_app_content": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-golang.tests.test_bake_project.test_app_template_content": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-golang.tests.test_bake_project.test_app_test_content": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-golang.tests.test_bake_project.test_project_tree": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-java-gradle.tests.test_cookiecutter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-java-gradle.tests.test_cookiecutter.test_app_content": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-java-gradle.tests.test_cookiecutter.test_project_tree": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-java-maven.tests.test_cookiecutter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-java-maven.tests.test_cookiecutter.test_app_content": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-java-maven.tests.test_cookiecutter.test_project_tree": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-python.{{cookiecutter.project_name}}.hello_world": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-python.{{cookiecutter.project_name}}.hello_world.app": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-python.{{cookiecutter.project_name}}.hello_world.app.lambda_handler": {
  "lineno": 6,
  "symbols_in_volume": [
   "json.dumps"
  ],
  "type": "function"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-python.{{cookiecutter.project_name}}.tests.unit": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-python.{{cookiecutter.project_name}}.tests.unit.test_handler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-python.{{cookiecutter.project_name}}.tests.unit.test_handler.apigw_event": {
  "lineno": 8,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "samcli.lib.init.templates.cookiecutter-aws-sam-hello-python.{{cookiecutter.project_name}}.tests.unit.test_handler.test_lambda_handler": {
  "lineno": 65,
  "symbols_in_volume": [
   "hello_world.app.lambda_handler",
   "json.loads"
  ],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.__init__": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.default_conditional_key_map": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.default_intrinsic_function_map": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.get_prefix_position_in_list": {
  "lineno": 823,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_find_in_map": {
  "lineno": 430,
  "symbols_in_volume": [
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_dict",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_list",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_number_arguments"
  ],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_and": {
  "lineno": 839,
  "symbols_in_volume": [
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_bool",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_list",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_non_null"
  ],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_base64": {
  "lineno": 367,
  "symbols_in_volume": [
   "base64.b64encode",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str"
  ],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_equals": {
  "lineno": 753,
  "symbols_in_volume": [
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_list",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_number_arguments"
  ],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_get_azs": {
  "lineno": 503,
  "symbols_in_volume": [
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidIntrinsicException",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str"
  ],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_getatt": {
  "lineno": 583,
  "symbols_in_volume": [
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_list",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_number_arguments"
  ],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_if": {
  "lineno": 694,
  "symbols_in_volume": [
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_bool",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_dict",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_list",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_number_arguments"
  ],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_import_value": {
  "lineno": 571,
  "symbols_in_volume": [
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidIntrinsicException"
  ],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_join": {
  "lineno": 288,
  "symbols_in_volume": [
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_all_list_intrinsic_type",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_list",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str"
  ],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_not": {
  "lineno": 782,
  "symbols_in_volume": [
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_bool",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_list",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_non_null",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_number_arguments"
  ],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_or": {
  "lineno": 896,
  "symbols_in_volume": [
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_bool",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_list",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_non_null"
  ],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_ref": {
  "lineno": 618,
  "symbols_in_volume": [
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str"
  ],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_select": {
  "lineno": 390,
  "symbols_in_volume": [
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_in_bounds",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_int",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_list"
  ],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_split": {
  "lineno": 334,
  "symbols_in_volume": [
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_list",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str"
  ],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_sub": {
  "lineno": 642,
  "symbols_in_volume": [
   "re.findall",
   "re.sub",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_dict",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_list",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_number_arguments",
   "six.string_types"
  ],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_sub.resolve_sub_attribute": {
  "lineno": 659,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.handle_fn_transform": {
  "lineno": 536,
  "symbols_in_volume": [
   "samcli.commands._utils.template.get_template_data",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidIntrinsicException",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_dict"
  ],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.init_template": {
  "lineno": 92,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.intrinsic_property_resolver": {
  "lineno": 168,
  "symbols_in_volume": [
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidIntrinsicException",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str"
  ],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.resolve_attribute": {
  "lineno": 256,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidIntrinsicException",
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidSymbolException"
  ],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.resolve_template": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.set_conditional_function_map": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.set_intrinsic_key_function_map": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.__init__": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable._get_function_name": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.arn_resolver": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.get_availability_zone": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.get_default_attribute_resolver": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.get_default_pseudo_resolver": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.get_default_type_resolver": {
  "lineno": 160,
  "symbols_in_volume": [
   "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.REF"
  ],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.get_translation": {
  "lineno": 306,
  "symbols_in_volume": [
   "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.REF",
   "six.string_types"
  ],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.handle_pseudo_account_id": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.handle_pseudo_no_value": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.handle_pseudo_partition": {
  "lineno": 386,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.handle_pseudo_region": {
  "lineno": 356,
  "symbols_in_volume": [
   "os.getenv"
  ],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.handle_pseudo_stack_id": {
  "lineno": 403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.handle_pseudo_stack_name": {
  "lineno": 416,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.handle_pseudo_url_prefix": {
  "lineno": 372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.resolve_symbols": {
  "lineno": 174,
  "symbols_in_volume": [
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidSymbolException"
  ],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidIntrinsicException": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidSymbolException": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_all_list_intrinsic_type": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_in_bounds": {
  "lineno": 51,
  "symbols_in_volume": [
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidIntrinsicException"
  ],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type": {
  "lineno": 42,
  "symbols_in_volume": [
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidIntrinsicException",
   "six.string_types"
  ],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_bool": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_dict": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_int": {
  "lineno": 21,
  "symbols_in_volume": [
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidIntrinsicException"
  ],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_list": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str": {
  "lineno": 30,
  "symbols_in_volume": [
   "six.string_types"
  ],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_non_null": {
  "lineno": 34,
  "symbols_in_volume": [
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidIntrinsicException"
  ],
  "type": "function"
 },
 "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_number_arguments": {
  "lineno": 58,
  "symbols_in_volume": [
   "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidIntrinsicException"
  ],
  "type": "function"
 },
 "samcli.lib.logs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.logs.event": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.lib.logs.event.LogEvent": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.logs.event.LogEvent.__eq__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.logs.event.LogEvent.__init__": {
  "lineno": 22,
  "symbols_in_volume": [
   "samcli.lib.utils.time.timestamp_to_iso"
  ],
  "type": "function"
 },
 "samcli.lib.logs.event.LogEvent.__repr__": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.logs.fetcher": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.lib.logs.fetcher.LogsFetcher": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.logs.fetcher.LogsFetcher.__init__": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.logs.fetcher.LogsFetcher.fetch": {
  "lineno": 32,
  "symbols_in_volume": [
   "samcli.lib.utils.time.to_timestamp"
  ],
  "type": "function"
 },
 "samcli.lib.logs.fetcher.LogsFetcher.tail": {
  "lineno": 84,
  "symbols_in_volume": [
   "samcli.lib.utils.time.to_datetime",
   "samcli.lib.utils.time.to_timestamp",
   "time.sleep"
  ],
  "type": "function"
 },
 "samcli.lib.logs.formatter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.logs.formatter.JSONMsgFormatter": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.logs.formatter.JSONMsgFormatter.format_json": {
  "lineno": 172,
  "symbols_in_volume": [
   "json.dumps",
   "json.loads"
  ],
  "type": "function"
 },
 "samcli.lib.logs.formatter.KeywordHighlighter": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.logs.formatter.KeywordHighlighter.__init__": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.logs.formatter.KeywordHighlighter.highlight_keywords": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.logs.formatter.LambdaLogMsgFormatters": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.logs.formatter.LambdaLogMsgFormatters.colorize_errors": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.logs.formatter.LogsFormatter": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.logs.formatter.LogsFormatter.__init__": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.logs.formatter.LogsFormatter._pretty_print_event": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.logs.formatter.LogsFormatter.do_format": {
  "lineno": 83,
  "symbols_in_volume": [
   "builtins.map",
   "functools.partial"
  ],
  "type": "function"
 },
 "samcli.lib.logs.provider": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.logs.provider.LogGroupProvider": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.logs.provider.LogGroupProvider.for_lambda_function": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.package": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.package.artifact_exporter": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.lib.package.artifact_exporter.ApiGatewayRestApiResource": {
  "lineno": 379,
  "symbols_in_volume": [
   "samcli.commands._utils.resources.AWS_APIGATEWAY_RESTAPI",
   "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS"
  ],
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.AppSyncFunctionConfigurationRequestTemplateResource": {
  "lineno": 354,
  "symbols_in_volume": [
   "samcli.commands._utils.resources.AWS_APPSYNC_FUNCTIONCONFIGURATION",
   "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS"
  ],
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.AppSyncFunctionConfigurationResponseTemplateResource": {
  "lineno": 362,
  "symbols_in_volume": [
   "samcli.commands._utils.resources.AWS_APPSYNC_FUNCTIONCONFIGURATION",
   "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS"
  ],
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.AppSyncResolverRequestTemplateResource": {
  "lineno": 338,
  "symbols_in_volume": [
   "samcli.commands._utils.resources.AWS_APPSYNC_RESOLVER",
   "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS"
  ],
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.AppSyncResolverResponseTemplateResource": {
  "lineno": 346,
  "symbols_in_volume": [
   "samcli.commands._utils.resources.AWS_APPSYNC_RESOLVER",
   "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS"
  ],
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.CloudFormationStackResource": {
  "lineno": 423,
  "symbols_in_volume": [
   "samcli.commands._utils.resources.AWS_CLOUDFORMATION_STACK",
   "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS"
  ],
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.CloudFormationStackResource.do_export": {
  "lineno": 432,
  "symbols_in_volume": [
   "botocore.utils.set_value_from_jmespath",
   "samcli.commands.package.exceptions.InvalidTemplateUrlParameterError",
   "samcli.yamlhelper.yaml_dump"
  ],
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.ElasticBeanstalkApplicationVersion": {
  "lineno": 388,
  "symbols_in_volume": [
   "samcli.commands._utils.resources.AWS_ELASTICBEANSTALK_APPLICATIONVERSION",
   "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS"
  ],
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.GlueJobCommandScriptLocationResource": {
  "lineno": 482,
  "symbols_in_volume": [
   "samcli.commands._utils.resources.AWS_GLUE_JOB",
   "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS"
  ],
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.GraphQLSchemaResource": {
  "lineno": 330,
  "symbols_in_volume": [
   "samcli.commands._utils.resources.AWS_APPSYNC_GRAPHQLSCHEMA",
   "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS"
  ],
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.LambdaFunctionResource": {
  "lineno": 370,
  "symbols_in_volume": [
   "samcli.commands._utils.resources.AWS_LAMBDA_FUNCTION",
   "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS"
  ],
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.LambdaLayerVersionResource": {
  "lineno": 396,
  "symbols_in_volume": [
   "samcli.commands._utils.resources.AWS_LAMBDA_LAYERVERSION",
   "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS"
  ],
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.Resource": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.Resource.__init__": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.Resource.do_export": {
  "lineno": 278,
  "symbols_in_volume": [
   "botocore.utils.set_value_from_jmespath"
  ],
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.Resource.export": {
  "lineno": 243,
  "symbols_in_volume": [
   "botocore.utils.set_value_from_jmespath",
   "jmespath.search",
   "samcli.commands.package.exceptions.ExportFailedError",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.ResourceWithS3UrlDict": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.ResourceWithS3UrlDict.do_export": {
  "lineno": 297,
  "symbols_in_volume": [
   "botocore.utils.set_value_from_jmespath"
  ],
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.ServerlessApiResource": {
  "lineno": 322,
  "symbols_in_volume": [
   "samcli.commands._utils.resources.AWS_SERVERLESS_API",
   "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS"
  ],
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.ServerlessApplicationResource": {
  "lineno": 472,
  "symbols_in_volume": [
   "samcli.commands._utils.resources.AWS_SERVERLESS_APPLICATION",
   "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS"
  ],
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.ServerlessFunctionResource": {
  "lineno": 316,
  "symbols_in_volume": [
   "samcli.commands._utils.resources.AWS_SERVERLESS_FUNCTION",
   "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS"
  ],
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.ServerlessLayerVersionResource": {
  "lineno": 405,
  "symbols_in_volume": [
   "samcli.commands._utils.resources.AWS_SERVERLESS_LAYERVERSION",
   "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS"
  ],
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.ServerlessRepoApplicationLicense": {
  "lineno": 411,
  "symbols_in_volume": [
   "samcli.commands._utils.resources.AWS_SERVERLESSREPO_APPLICATION",
   "samcli.commands._utils.template.METADATA_WITH_LOCAL_PATHS"
  ],
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.ServerlessRepoApplicationReadme": {
  "lineno": 417,
  "symbols_in_volume": [
   "samcli.commands._utils.resources.AWS_SERVERLESSREPO_APPLICATION",
   "samcli.commands._utils.template.METADATA_WITH_LOCAL_PATHS"
  ],
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.Template": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.package.artifact_exporter.Template.__init__": {
  "lineno": 542,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.isabs",
   "samcli.yamlhelper.yaml_parse"
  ],
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.Template.apply_global_values": {
  "lineno": 607,
  "symbols_in_volume": [
   "samcli.commands._utils.resources.AWS_SERVERLESS_FUNCTION"
  ],
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.Template.export": {
  "lineno": 631,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.Template.export_global_artifacts": {
  "lineno": 568,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.Template.export_metadata": {
  "lineno": 586,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.copy_to_temp_dir": {
  "lineno": 221,
  "symbols_in_volume": [
   "os.path.basename",
   "os.path.join",
   "shutil.copyfile",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.include_transform_export_handler": {
  "lineno": 513,
  "symbols_in_volume": [
   "os.path.join",
   "samcli.commands.package.exceptions.InvalidLocalPathError"
  ],
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.is_local_file": {
  "lineno": 79,
  "symbols_in_volume": [
   "os.path.isfile"
  ],
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.is_local_folder": {
  "lineno": 75,
  "symbols_in_volume": [
   "os.path.isdir"
  ],
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.is_path_value_valid": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.is_s3_url": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.is_zip_file": {
  "lineno": 83,
  "symbols_in_volume": [
   "zipfile.is_zipfile"
  ],
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.make_abs_path": {
  "lineno": 61,
  "symbols_in_volume": [
   "os.path.isabs",
   "os.path.join",
   "os.path.normpath"
  ],
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.make_zip": {
  "lineno": 193,
  "symbols_in_volume": [
   "contextlib.closing",
   "os.path.abspath",
   "os.path.join",
   "os.path.relpath",
   "os.walk",
   "zipfile.ZIP_DEFLATED",
   "zipfile.ZipFile"
  ],
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.mktempfile": {
  "lineno": 208,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "os.path.exists",
   "os.path.join",
   "os.remove",
   "tempfile.gettempdir",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.parse_s3_url": {
  "lineno": 87,
  "symbols_in_volume": [
   "urllib.parse.parse_qs",
   "urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.resource_not_packageable": {
  "lineno": 161,
  "symbols_in_volume": [
   "jmespath.search"
  ],
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.upload_local_artifacts": {
  "lineno": 109,
  "symbols_in_volume": [
   "jmespath.search",
   "samcli.commands.package.exceptions.InvalidLocalPathError"
  ],
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.zip_and_upload": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.package.artifact_exporter.zip_folder": {
  "lineno": 173,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "os.path.exists",
   "os.path.join",
   "os.remove",
   "samcli.lib.utils.hash.dir_checksum",
   "tempfile.gettempdir"
  ],
  "type": "function"
 },
 "samcli.lib.package.s3_uploader": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.lib.package.s3_uploader.ProgressPercentage": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.package.s3_uploader.ProgressPercentage.__init__": {
  "lineno": 171,
  "symbols_in_volume": [
   "os.path.getsize",
   "threading.Lock"
  ],
  "type": "function"
 },
 "samcli.lib.package.s3_uploader.ProgressPercentage.on_progress": {
  "lineno": 178,
  "symbols_in_volume": [
   "sys.stderr.flush",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "samcli.lib.package.s3_uploader.S3Uploader": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.package.s3_uploader.S3Uploader.__init__": {
  "lineno": 55,
  "symbols_in_volume": [
   "boto3.s3.transfer.TransferConfig",
   "boto3.s3.transfer.create_transfer_manager"
  ],
  "type": "function"
 },
 "samcli.lib.package.s3_uploader.S3Uploader.artifact_metadata": {
  "lineno": 49,
  "symbols_in_volume": [
   "collections.abc.Mapping"
  ],
  "type": "function"
 },
 "samcli.lib.package.s3_uploader.S3Uploader.file_exists": {
  "lineno": 131,
  "symbols_in_volume": [
   "botocore.exceptions.ClientError",
   "samcli.commands.package.exceptions.BucketNotSpecifiedError"
  ],
  "type": "function"
 },
 "samcli.lib.package.s3_uploader.S3Uploader.make_url": {
  "lineno": 150,
  "symbols_in_volume": [
   "samcli.commands.package.exceptions.BucketNotSpecifiedError"
  ],
  "type": "function"
 },
 "samcli.lib.package.s3_uploader.S3Uploader.to_path_style_s3_url": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.package.s3_uploader.S3Uploader.upload": {
  "lineno": 65,
  "symbols_in_volume": [
   "botocore.exceptions.ClientError",
   "samcli.commands.package.exceptions.BucketNotSpecifiedError",
   "samcli.commands.package.exceptions.NoSuchBucketError"
  ],
  "type": "function"
 },
 "samcli.lib.package.s3_uploader.S3Uploader.upload_with_dedup": {
  "lineno": 110,
  "symbols_in_volume": [
   "samcli.lib.utils.hash.file_checksum"
  ],
  "type": "function"
 },
 "samcli.lib.providers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.providers.api_collector": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.lib.providers.api_collector.ApiCollector": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.providers.api_collector.ApiCollector.__init__": {
  "lineno": 18,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "samcli.lib.providers.api_collector.ApiCollector.__iter__": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.api_collector.ApiCollector._get_routes": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.api_collector.ApiCollector.add_binary_media_types": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.api_collector.ApiCollector.add_routes": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.api_collector.ApiCollector.all_routes": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.api_collector.ApiCollector.dedupe_function_routes": {
  "lineno": 140,
  "symbols_in_volume": [
   "samcli.local.apigw.local_apigw_service.Route"
  ],
  "type": "function"
 },
 "samcli.lib.providers.api_collector.ApiCollector.get_api": {
  "lineno": 93,
  "symbols_in_volume": [
   "samcli.lib.providers.provider.Api"
  ],
  "type": "function"
 },
 "samcli.lib.providers.api_collector.ApiCollector.normalize_binary_media_type": {
  "lineno": 190,
  "symbols_in_volume": [
   "six.string_types"
  ],
  "type": "function"
 },
 "samcli.lib.providers.api_collector.ApiCollector.normalize_cors_methods": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.api_collector.ApiCollector.normalize_cors_methods.add_options_to_route": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.api_collector.ApiCollector.routes": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.api_provider": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.lib.providers.api_provider.ApiProvider": {
  "lineno": 15,
  "symbols_in_volume": [
   "samcli.lib.providers.provider.AbstractApiProvider"
  ],
  "type": "class"
 },
 "samcli.lib.providers.api_provider.ApiProvider.__init__": {
  "lineno": 16,
  "symbols_in_volume": [
   "samcli.lib.providers.sam_base_provider.SamBaseProvider.get_template"
  ],
  "type": "function"
 },
 "samcli.lib.providers.api_provider.ApiProvider._extract_api": {
  "lineno": 54,
  "symbols_in_volume": [
   "samcli.lib.providers.api_collector.ApiCollector"
  ],
  "type": "function"
 },
 "samcli.lib.providers.api_provider.ApiProvider.find_api_provider": {
  "lineno": 73,
  "symbols_in_volume": [
   "samcli.lib.providers.cfn_api_provider.CfnApiProvider",
   "samcli.lib.providers.cfn_api_provider.CfnApiProvider.TYPES",
   "samcli.lib.providers.cfn_base_api_provider.CfnBaseApiProvider.RESOURCE_TYPE",
   "samcli.lib.providers.sam_api_provider.SamApiProvider",
   "samcli.lib.providers.sam_api_provider.SamApiProvider.TYPES"
  ],
  "type": "function"
 },
 "samcli.lib.providers.api_provider.ApiProvider.get_all": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.cfn_api_provider": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.lib.providers.cfn_api_provider.CfnApiProvider": {
  "lineno": 14,
  "symbols_in_volume": [
   "samcli.lib.providers.cfn_base_api_provider.CfnBaseApiProvider"
  ],
  "type": "class"
 },
 "samcli.lib.providers.cfn_api_provider.CfnApiProvider._extract_cloud_formation_method": {
  "lineno": 118,
  "symbols_in_volume": [
   "samcli.local.apigw.local_apigw_service.Route",
   "six.string_types"
  ],
  "type": "function"
 },
 "samcli.lib.providers.cfn_api_provider.CfnApiProvider._extract_cloud_formation_route": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.cfn_api_provider.CfnApiProvider._extract_cloud_formation_stage": {
  "lineno": 85,
  "symbols_in_volume": [
   "samcli.commands.local.cli_common.user_exceptions.InvalidSamTemplateException"
  ],
  "type": "function"
 },
 "samcli.lib.providers.cfn_api_provider.CfnApiProvider._get_integration_function_name": {
  "lineno": 192,
  "symbols_in_volume": [
   "samcli.commands.local.lib.swagger.integration_uri.LambdaUri.get_function_name"
  ],
  "type": "function"
 },
 "samcli.lib.providers.cfn_api_provider.CfnApiProvider.extract_resources": {
  "lineno": 22,
  "symbols_in_volume": [
   "samcli.lib.providers.cfn_base_api_provider.CfnBaseApiProvider.RESOURCE_TYPE"
  ],
  "type": "function"
 },
 "samcli.lib.providers.cfn_api_provider.CfnApiProvider.resolve_resource_path": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.cfn_base_api_provider": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.lib.providers.cfn_base_api_provider.CfnBaseApiProvider": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.providers.cfn_base_api_provider.CfnBaseApiProvider.extract_resources": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.cfn_base_api_provider.CfnBaseApiProvider.extract_swagger_route": {
  "lineno": 34,
  "symbols_in_volume": [
   "samcli.commands.local.lib.swagger.parser.SwaggerParser",
   "samcli.commands.local.lib.swagger.reader.SwaggerReader"
  ],
  "type": "function"
 },
 "samcli.lib.providers.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.providers.exceptions.InvalidLayerReference": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.providers.exceptions.InvalidLayerReference.__init__": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.provider": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "samcli.lib.providers.provider.AbstractApiProvider": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.providers.provider.AbstractApiProvider.get_all": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.provider.Api": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.providers.provider.Api.__hash__": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.provider.Api.__init__": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.provider.Api.binary_media_types": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.provider.Cors": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.providers.provider.Cors.cors_to_headers": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.provider.FunctionProvider": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.providers.provider.FunctionProvider.get": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.provider.FunctionProvider.get_all": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.provider.LayerVersion": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.providers.provider.LayerVersion.__eq__": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.provider.LayerVersion.__init__": {
  "lineno": 49,
  "symbols_in_volume": [
   "samcli.commands.local.cli_common.user_exceptions.UnsupportedIntrinsic"
  ],
  "type": "function"
 },
 "samcli.lib.providers.provider.LayerVersion._compute_layer_name": {
  "lineno": 98,
  "symbols_in_volume": [
   "hashlib.sha256",
   "samcli.commands.local.cli_common.user_exceptions.InvalidLayerVersionArn"
  ],
  "type": "function"
 },
 "samcli.lib.providers.provider.LayerVersion._compute_layer_version": {
  "lineno": 68,
  "symbols_in_volume": [
   "samcli.commands.local.cli_common.user_exceptions.InvalidLayerVersionArn"
  ],
  "type": "function"
 },
 "samcli.lib.providers.provider.LayerVersion.arn": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.provider.LayerVersion.codeuri": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.provider.LayerVersion.layer_arn": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.provider.LayerVersion.name": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.provider.LayerVersion.version": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.sam_api_provider": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.lib.providers.sam_api_provider.SamApiProvider": {
  "lineno": 15,
  "symbols_in_volume": [
   "samcli.lib.providers.cfn_base_api_provider.CfnBaseApiProvider"
  ],
  "type": "class"
 },
 "samcli.lib.providers.sam_api_provider.SamApiProvider._convert_event_route": {
  "lineno": 240,
  "symbols_in_volume": [
   "samcli.commands.validate.lib.exceptions.InvalidSamDocumentException",
   "samcli.local.apigw.local_apigw_service.Route"
  ],
  "type": "function"
 },
 "samcli.lib.providers.sam_api_provider.SamApiProvider._extract_from_serverless_api": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.sam_api_provider.SamApiProvider._extract_routes_from_function": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.sam_api_provider.SamApiProvider._get_cors_prop": {
  "lineno": 135,
  "symbols_in_volume": [
   "samcli.commands.validate.lib.exceptions.InvalidSamDocumentException",
   "six.string_types"
  ],
  "type": "function"
 },
 "samcli.lib.providers.sam_api_provider.SamApiProvider.extract_cors": {
  "lineno": 94,
  "symbols_in_volume": [
   "samcli.commands.validate.lib.exceptions.InvalidSamDocumentException",
   "samcli.lib.providers.provider.Cors",
   "samcli.local.apigw.local_apigw_service.Route.ANY_HTTP_METHODS",
   "six.string_types"
  ],
  "type": "function"
 },
 "samcli.lib.providers.sam_api_provider.SamApiProvider.extract_resources": {
  "lineno": 26,
  "symbols_in_volume": [
   "samcli.lib.providers.cfn_base_api_provider.CfnBaseApiProvider.RESOURCE_TYPE"
  ],
  "type": "function"
 },
 "samcli.lib.providers.sam_api_provider.SamApiProvider.extract_routes_from_events": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.sam_api_provider.SamApiProvider.merge_routes": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.sam_api_provider.SamApiProvider.normalize_cors_allow_methods": {
  "lineno": 165,
  "symbols_in_volume": [
   "samcli.commands.validate.lib.exceptions.InvalidSamDocumentException",
   "samcli.local.apigw.local_apigw_service.Route.ANY_HTTP_METHODS"
  ],
  "type": "function"
 },
 "samcli.lib.providers.sam_base_provider": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.lib.providers.sam_base_provider.SamBaseProvider": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.providers.sam_base_provider.SamBaseProvider._get_default_parameter_values": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.sam_base_provider.SamBaseProvider._get_parameter_values": {
  "lineno": 52,
  "symbols_in_volume": [
   "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.DEFAULT_PSEUDO_PARAM_VALUES"
  ],
  "type": "function"
 },
 "samcli.lib.providers.sam_base_provider.SamBaseProvider.get_template": {
  "lineno": 20,
  "symbols_in_volume": [
   "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver",
   "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable",
   "samcli.lib.samlib.resource_metadata_normalizer.ResourceMetadataNormalizer.normalize",
   "samcli.lib.samlib.wrapper.SamTranslatorWrapper"
  ],
  "type": "function"
 },
 "samcli.lib.providers.sam_function_provider": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.lib.providers.sam_function_provider.SamFunctionProvider": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.providers.sam_function_provider.SamFunctionProvider.__init__": {
  "lineno": 29,
  "symbols_in_volume": [
   "samcli.lib.utils.colors.Colored"
  ],
  "type": "function"
 },
 "samcli.lib.providers.sam_function_provider.SamFunctionProvider._build_function_configuration": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.sam_function_provider.SamFunctionProvider._convert_lambda_function_resource": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.sam_function_provider.SamFunctionProvider._convert_sam_function_resource": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.sam_function_provider.SamFunctionProvider._deprecate_notification": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.sam_function_provider.SamFunctionProvider._extract_functions": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.sam_function_provider.SamFunctionProvider._extract_lambda_function_code": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.sam_function_provider.SamFunctionProvider._extract_sam_function_codeuri": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.sam_function_provider.SamFunctionProvider._parse_layer_info": {
  "lineno": 296,
  "symbols_in_volume": [
   "samcli.commands.local.cli_common.user_exceptions.InvalidLayerVersionArn",
   "samcli.lib.providers.exceptions.InvalidLayerReference"
  ],
  "type": "function"
 },
 "samcli.lib.providers.sam_function_provider.SamFunctionProvider.get": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.providers.sam_function_provider.SamFunctionProvider.get_all": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.samlib": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.samlib.local_uri_plugin": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.samlib.local_uri_plugin.SupportLocalUriPlugin": {
  "lineno": 9,
  "symbols_in_volume": [
   "samtranslator.public.plugins.BasePlugin"
  ],
  "type": "class"
 },
 "samcli.lib.samlib.local_uri_plugin.SupportLocalUriPlugin.__init__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.samlib.local_uri_plugin.SupportLocalUriPlugin.on_before_transform_resource": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.samlib.resource_metadata_normalizer": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.lib.samlib.resource_metadata_normalizer.ResourceMetadataNormalizer": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.samlib.resource_metadata_normalizer.ResourceMetadataNormalizer._replace_property": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.samlib.resource_metadata_normalizer.ResourceMetadataNormalizer.normalize": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.samlib.wrapper": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.samlib.wrapper.SamTranslatorWrapper": {
  "lineno": 35,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "class"
 },
 "samcli.lib.samlib.wrapper.SamTranslatorWrapper.__init__": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.samlib.wrapper.SamTranslatorWrapper.__managed_policy_map": {
  "lineno": 105,
  "symbols_in_volume": [
   "boto3.client",
   "json.load",
   "samtranslator.translator.managed_policy_translator.ManagedPolicyLoader"
  ],
  "type": "function"
 },
 "samcli.lib.samlib.wrapper.SamTranslatorWrapper.__translate": {
  "lineno": 84,
  "symbols_in_volume": [
   "samtranslator.parser.parser.Parser",
   "samtranslator.translator.translator.Translator"
  ],
  "type": "function"
 },
 "samcli.lib.samlib.wrapper.SamTranslatorWrapper.run_plugins": {
  "lineno": 62,
  "symbols_in_volume": [
   "functools.reduce",
   "samcli.commands.validate.lib.exceptions.InvalidSamDocumentException",
   "samtranslator.model.exceptions.InvalidDocumentException",
   "samtranslator.translator.translator.prepare_plugins"
  ],
  "type": "function"
 },
 "samcli.lib.samlib.wrapper.SamTranslatorWrapper.template": {
  "lineno": 101,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "samcli.lib.samlib.wrapper._SamParserReimplemented": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.samlib.wrapper._SamParserReimplemented._validate": {
  "lineno": 147,
  "symbols_in_volume": [
   "samtranslator.model.exceptions.InvalidDocumentException",
   "samtranslator.model.exceptions.InvalidTemplateException",
   "samtranslator.validator.validator.SamTemplateValidator.validate"
  ],
  "type": "function"
 },
 "samcli.lib.samlib.wrapper._SamParserReimplemented.parse": {
  "lineno": 129,
  "symbols_in_volume": [
   "samtranslator.model.ResourceTypeResolver",
   "samtranslator.model.exceptions.InvalidDocumentException",
   "samtranslator.model.exceptions.InvalidEventException",
   "samtranslator.model.exceptions.InvalidResourceException",
   "samtranslator.model.sam_resources",
   "samtranslator.plugins.LifeCycleEvents.before_transform_template"
  ],
  "type": "function"
 },
 "samcli.lib.schemas": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.schemas.cli_paginator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.schemas.cli_paginator.do_paginate_cli": {
  "lineno": 8,
  "symbols_in_volume": [
   "click.Choice",
   "click.echo",
   "click.prompt"
  ],
  "type": "function"
 },
 "samcli.lib.schemas.schemas_api_caller": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.schemas.schemas_api_caller.SchemasApiCaller": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.schemas.schemas_api_caller.SchemasApiCaller.__init__": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.schemas.schemas_api_caller.SchemasApiCaller.download_source_code_binding": {
  "lineno": 176,
  "symbols_in_volume": [
   "botocore.exceptions.EndpointConnectionError",
   "samcli.commands.local.cli_common.user_exceptions.NotAvailableInRegion"
  ],
  "type": "function"
 },
 "samcli.lib.schemas.schemas_api_caller.SchemasApiCaller.get_latest_schema_version": {
  "lineno": 91,
  "symbols_in_volume": [
   "botocore.exceptions.EndpointConnectionError",
   "samcli.commands.local.cli_common.user_exceptions.NotAvailableInRegion"
  ],
  "type": "function"
 },
 "samcli.lib.schemas.schemas_api_caller.SchemasApiCaller.get_schema_metadata": {
  "lineno": 127,
  "symbols_in_volume": [
   "botocore.exceptions.EndpointConnectionError",
   "json.JSONDecodeError",
   "json.loads",
   "samcli.commands.exceptions.SchemasApiException",
   "samcli.commands.local.cli_common.user_exceptions.NotAvailableInRegion",
   "samcli.lib.schemas.schemas_constants.DEFAULT_EVENT_DETAIL_TYPE",
   "samcli.lib.schemas.schemas_constants.DEFAULT_EVENT_SOURCE",
   "samcli.lib.schemas.schemas_directory_hierarchy_builder.get_package_hierarchy",
   "samcli.lib.schemas.schemas_directory_hierarchy_builder.sanitize_name"
  ],
  "type": "function"
 },
 "samcli.lib.schemas.schemas_api_caller.SchemasApiCaller.list_registries": {
  "lineno": 22,
  "symbols_in_volume": [
   "botocore.exceptions.EndpointConnectionError",
   "samcli.commands.local.cli_common.user_exceptions.NotAvailableInRegion",
   "samcli.commands.local.cli_common.user_exceptions.ResourceNotFound"
  ],
  "type": "function"
 },
 "samcli.lib.schemas.schemas_api_caller.SchemasApiCaller.list_schemas": {
  "lineno": 56,
  "symbols_in_volume": [
   "botocore.exceptions.EndpointConnectionError",
   "samcli.commands.local.cli_common.user_exceptions.NotAvailableInRegion",
   "samcli.commands.local.cli_common.user_exceptions.ResourceNotFound"
  ],
  "type": "function"
 },
 "samcli.lib.schemas.schemas_api_caller.SchemasApiCaller.poll_for_code_binding_status": {
  "lineno": 231,
  "symbols_in_volume": [
   "botocore.exceptions.EndpointConnectionError",
   "samcli.commands.local.cli_common.user_exceptions.NotAvailableInRegion"
  ],
  "type": "function"
 },
 "samcli.lib.schemas.schemas_api_caller.SchemasApiCaller.put_code_binding": {
  "lineno": 203,
  "symbols_in_volume": [
   "botocore.exceptions.ClientError",
   "botocore.exceptions.EndpointConnectionError",
   "samcli.commands.local.cli_common.user_exceptions.NotAvailableInRegion"
  ],
  "type": "function"
 },
 "samcli.lib.schemas.schemas_aws_config": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.schemas.schemas_aws_config._get_aws_profile_choice": {
  "lineno": 35,
  "symbols_in_volume": [
   "click.Choice",
   "click.echo",
   "click.prompt",
   "samcli.commands.local.cli_common.user_exceptions.ResourceNotFound"
  ],
  "type": "function"
 },
 "samcli.lib.schemas.schemas_aws_config._get_aws_region_choice": {
  "lineno": 55,
  "symbols_in_volume": [
   "click.echo",
   "click.prompt",
   "samcli.commands.local.cli_common.user_exceptions.ResourceNotFound"
  ],
  "type": "function"
 },
 "samcli.lib.schemas.schemas_aws_config.get_aws_configuration_choice": {
  "lineno": 9,
  "symbols_in_volume": [
   "boto3.Session",
   "click.confirm"
  ],
  "type": "function"
 },
 "samcli.lib.schemas.schemas_aws_config.get_schemas_client": {
  "lineno": 81,
  "symbols_in_volume": [
   "boto3.Session"
  ],
  "type": "function"
 },
 "samcli.lib.schemas.schemas_cli_message_generator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.schemas.schemas_cli_message_generator.construct_cli_display_message_for_registries": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.schemas.schemas_cli_message_generator.construct_cli_display_message_for_schemas": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.schemas.schemas_code_manager": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.schemas.schemas_code_manager.do_download_source_code_binding": {
  "lineno": 13,
  "symbols_in_volume": [
   "botocore.exceptions.ClientError",
   "click.echo",
   "samcli.local.common.runtime_template.SAM_RUNTIME_TO_SCHEMAS_CODE_LANG_MAPPING.get"
  ],
  "type": "function"
 },
 "samcli.lib.schemas.schemas_code_manager.do_extract_and_merge_schemas_code": {
  "lineno": 49,
  "symbols_in_volume": [
   "click.echo",
   "json.loads",
   "os.path.join",
   "samcli.local.lambdafn.zip.unzip"
  ],
  "type": "function"
 },
 "samcli.lib.schemas.schemas_constants": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.schemas.schemas_directory_hierarchy_builder": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.schemas.schemas_directory_hierarchy_builder.get_package_hierarchy": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.schemas.schemas_directory_hierarchy_builder.sanitize_name": {
  "lineno": 28,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "samcli.lib.telemetry": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.telemetry.metrics": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.lib.telemetry.metrics._telemetry_enabled": {
  "lineno": 132,
  "symbols_in_volume": [
   "samcli.cli.global_config.GlobalConfig"
  ],
  "type": "function"
 },
 "samcli.lib.telemetry.metrics._timer": {
  "lineno": 103,
  "symbols_in_volume": [
   "timeit.default_timer"
  ],
  "type": "function"
 },
 "samcli.lib.telemetry.metrics._timer.end": {
  "lineno": 125,
  "symbols_in_volume": [
   "timeit.default_timer"
  ],
  "type": "function"
 },
 "samcli.lib.telemetry.metrics.send_installed_metric": {
  "lineno": 20,
  "symbols_in_volume": [
   "platform.system"
  ],
  "type": "function"
 },
 "samcli.lib.telemetry.metrics.track_command": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.telemetry.metrics.track_command.wrapped": {
  "lineno": 44,
  "symbols_in_volume": [
   "samcli.cli.context.Context.get_current_context",
   "samcli.commands.exceptions.UserException"
  ],
  "type": "function"
 },
 "samcli.lib.telemetry.telemetry": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.lib.telemetry.telemetry.Telemetry": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.telemetry.telemetry.Telemetry.__init__": {
  "lineno": 21,
  "symbols_in_volume": [
   "samcli.cli.global_config.GlobalConfig",
   "samcli.settings.telemetry_endpoint_url"
  ],
  "type": "function"
 },
 "samcli.lib.telemetry.telemetry.Telemetry._add_common_metric_attributes": {
  "lineno": 94,
  "symbols_in_volume": [
   "platform.python_version",
   "samcli.__version__",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "samcli.lib.telemetry.telemetry.Telemetry._default_session_id": {
  "lineno": 104,
  "symbols_in_volume": [
   "samcli.cli.context.Context.get_current_context"
  ],
  "type": "function"
 },
 "samcli.lib.telemetry.telemetry.Telemetry._get_execution_environment": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.telemetry.telemetry.Telemetry._send": {
  "lineno": 57,
  "symbols_in_volume": [
   "requests.exceptions.ConnectionError",
   "requests.exceptions.Timeout",
   "requests.post"
  ],
  "type": "function"
 },
 "samcli.lib.telemetry.telemetry.Telemetry.emit": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.utils.botoconfig": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.utils.botoconfig.get_boto_config_with_user_agent": {
  "lineno": 10,
  "symbols_in_volume": [
   "botocore.config.Config",
   "samcli.__version__",
   "samcli.cli.global_config.GlobalConfig"
  ],
  "type": "function"
 },
 "samcli.lib.utils.codeuri": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.lib.utils.codeuri.resolve_code_path": {
  "lineno": 13,
  "symbols_in_volume": [
   "os.getcwd",
   "os.path.abspath",
   "os.path.isabs",
   "os.path.join",
   "os.path.normpath"
  ],
  "type": "function"
 },
 "samcli.lib.utils.colors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.utils.colors.Colored": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.utils.colors.Colored.__init__": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.utils.colors.Colored._color": {
  "lineno": 61,
  "symbols_in_volume": [
   "click.style"
  ],
  "type": "function"
 },
 "samcli.lib.utils.colors.Colored.cyan": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.utils.colors.Colored.green": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.utils.colors.Colored.red": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.utils.colors.Colored.underline": {
  "lineno": 57,
  "symbols_in_volume": [
   "click.style"
  ],
  "type": "function"
 },
 "samcli.lib.utils.colors.Colored.white": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.utils.colors.Colored.yellow": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.utils.hash": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.utils.hash.dir_checksum": {
  "lineno": 40,
  "symbols_in_volume": [
   "hashlib.md5",
   "os.path.join",
   "os.walk"
  ],
  "type": "function"
 },
 "samcli.lib.utils.hash.file_checksum": {
  "lineno": 10,
  "symbols_in_volume": [
   "hashlib.md5"
  ],
  "type": "function"
 },
 "samcli.lib.utils.osutils": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.lib.utils.osutils.copytree": {
  "lineno": 114,
  "symbols_in_volume": [
   "os.listdir",
   "os.makedirs",
   "os.path.exists",
   "os.path.isdir",
   "os.path.join",
   "shutil.copy2",
   "shutil.copystat"
  ],
  "type": "function"
 },
 "samcli.lib.utils.osutils.mkdir_temp": {
  "lineno": 15,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "os.chmod",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "samcli.lib.utils.osutils.remove": {
  "lineno": 92,
  "symbols_in_volume": [
   "os.remove"
  ],
  "type": "function"
 },
 "samcli.lib.utils.osutils.rmtree_callback": {
  "lineno": 52,
  "symbols_in_volume": [
   "os.chmod",
   "os.remove",
   "stat.S_IWRITE"
  ],
  "type": "function"
 },
 "samcli.lib.utils.osutils.stderr": {
  "lineno": 80,
  "symbols_in_volume": [
   "sys.stderr.buffer"
  ],
  "type": "function"
 },
 "samcli.lib.utils.osutils.stdout": {
  "lineno": 68,
  "symbols_in_volume": [
   "sys.stdout.buffer"
  ],
  "type": "function"
 },
 "samcli.lib.utils.osutils.tempfile_platform_independent": {
  "lineno": 100,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "samcli.lib.utils.progressbar": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.utils.progressbar.progressbar": {
  "lineno": 8,
  "symbols_in_volume": [
   "click.progressbar"
  ],
  "type": "function"
 },
 "samcli.lib.utils.sam_logging": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.utils.sam_logging.SamCliLogger": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.utils.sam_logging.SamCliLogger.configure_logger": {
  "lineno": 8,
  "symbols_in_volume": [
   "logging.DEBUG",
   "logging.StreamHandler"
  ],
  "type": "function"
 },
 "samcli.lib.utils.sam_logging.SamCliLogger.configure_null_logger": {
  "lineno": 32,
  "symbols_in_volume": [
   "logging.NullHandler"
  ],
  "type": "function"
 },
 "samcli.lib.utils.stream_writer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.utils.stream_writer.StreamWriter": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.lib.utils.stream_writer.StreamWriter.__init__": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.utils.stream_writer.StreamWriter.flush": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.utils.stream_writer.StreamWriter.write": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.utils.tar": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.utils.tar.create_tarball": {
  "lineno": 10,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "tarfile.open",
   "tempfile.TemporaryFile"
  ],
  "type": "function"
 },
 "samcli.lib.utils.temp_file_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.utils.time": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.lib.utils.time.parse_date": {
  "lineno": 101,
  "symbols_in_volume": [
   "dateparser.parse",
   "datetime.datetime.utcnow"
  ],
  "type": "function"
 },
 "samcli.lib.utils.time.timestamp_to_iso": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.lib.utils.time.to_datetime": {
  "lineno": 30,
  "symbols_in_volume": [
   "datetime.datetime.utcfromtimestamp"
  ],
  "type": "function"
 },
 "samcli.lib.utils.time.to_timestamp": {
  "lineno": 49,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "samcli.lib.utils.time.to_utc": {
  "lineno": 78,
  "symbols_in_volume": [
   "dateutil.tz.tzutc"
  ],
  "type": "function"
 },
 "samcli.lib.utils.time.utc_to_timestamp": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.local.apigw": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.local.apigw.local_apigw_service": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.local.apigw.local_apigw_service.LambdaResponseParseException": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService": {
  "lineno": 70,
  "symbols_in_volume": [
   "samcli.local.services.base_local_service.BaseLocalService"
  ],
  "type": "class"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService.__init__": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService._construct_error_handling": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService._construct_event": {
  "lineno": 385,
  "symbols_in_volume": [
   "base64.b64encode",
   "json.dumps",
   "samcli.local.events.api_event.ApiGatewayLambdaEvent",
   "samcli.local.events.api_event.ContextIdentity",
   "samcli.local.events.api_event.RequestContext"
  ],
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService._event_headers": {
  "lineno": 474,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService._generate_route_keys": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService._get_current_route": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService._invalid_apig_response_keys": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService._merge_response_headers": {
  "lineno": 352,
  "symbols_in_volume": [
   "werkzeug.datastructures.Headers"
  ],
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService._parse_lambda_output": {
  "lineno": 256,
  "symbols_in_volume": [
   "base64.b64decode",
   "json.loads"
  ],
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService._query_string_params": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService._request_handler": {
  "lineno": 157,
  "symbols_in_volume": [
   "flask.request",
   "io.BytesIO",
   "samcli.lib.providers.provider.Cors.cors_to_headers",
   "samcli.lib.utils.stream_writer.StreamWriter",
   "samcli.local.lambdafn.exceptions.FunctionNotFound",
   "samcli.local.services.base_local_service.LambdaOutputParser.get_lambda_output",
   "werkzeug.datastructures.Headers"
  ],
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService._route_key": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService._should_base64_decode_body": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService._should_base64_encode": {
  "lineno": 509,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService.create": {
  "lineno": 102,
  "symbols_in_volume": [
   "flask.Flask"
  ],
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.LocalApigwService.get_request_methods_endpoints": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.Route": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.local.apigw.local_apigw_service.Route.__eq__": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.Route.__hash__": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.Route.__init__": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.apigw.local_apigw_service.Route.normalize_method": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.apigw.path_converter": {
  "lineno": null,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "module"
 },
 "samcli.local.apigw.path_converter.PathConverter": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.local.apigw.path_converter.PathConverter.convert_path_to_api_gateway": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.apigw.path_converter.PathConverter.convert_path_to_flask": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.apigw.service_error_responses": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.local.apigw.service_error_responses.ServiceErrorResponses": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.local.apigw.service_error_responses.ServiceErrorResponses.lambda_failure_response": {
  "lineno": 15,
  "symbols_in_volume": [
   "flask.jsonify",
   "flask.make_response"
  ],
  "type": "function"
 },
 "samcli.local.apigw.service_error_responses.ServiceErrorResponses.lambda_not_found_response": {
  "lineno": 25,
  "symbols_in_volume": [
   "flask.jsonify",
   "flask.make_response"
  ],
  "type": "function"
 },
 "samcli.local.apigw.service_error_responses.ServiceErrorResponses.route_not_found": {
  "lineno": 35,
  "symbols_in_volume": [
   "flask.jsonify",
   "flask.make_response"
  ],
  "type": "function"
 },
 "samcli.local.common": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.local.common.runtime_template": {
  "lineno": null,
  "symbols_in_volume": [
   "itertools.chain",
   "os.path.dirname",
   "os.path.join",
   "pathlib.Path"
  ],
  "type": "module"
 },
 "samcli.local.docker": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.local.docker.container": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.local.docker.container.Container": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.local.docker.container.Container.__init__": {
  "lineno": 30,
  "symbols_in_volume": [
   "docker.from_env"
  ],
  "type": "function"
 },
 "samcli.local.docker.container.Container._write_container_output": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.docker.container.Container.copy": {
  "lineno": 206,
  "symbols_in_volume": [
   "tarfile.open",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "samcli.local.docker.container.Container.create": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.docker.container.Container.delete": {
  "lineno": 142,
  "symbols_in_volume": [
   "docker.errors.APIError",
   "docker.errors.NotFound"
  ],
  "type": "function"
 },
 "samcli.local.docker.container.Container.image": {
  "lineno": 265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.docker.container.Container.is_created": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.docker.container.Container.network_id": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.docker.container.Container.start": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.docker.container.Container.wait_for_logs": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.docker.lambda_build_container": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.local.docker.lambda_build_container.LambdaBuildContainer": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.local.docker.lambda_build_container.LambdaBuildContainer.__init__": {
  "lineno": 24,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "samcli.local.docker.lambda_build_container.LambdaBuildContainer._convert_to_container_dirs": {
  "lineno": 181,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "samcli.local.docker.lambda_build_container.LambdaBuildContainer._get_container_dirs": {
  "lineno": 148,
  "symbols_in_volume": [
   "pathlib.PurePath"
  ],
  "type": "function"
 },
 "samcli.local.docker.lambda_build_container.LambdaBuildContainer._get_entrypoint": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.docker.lambda_build_container.LambdaBuildContainer._get_image": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.docker.lambda_build_container.LambdaBuildContainer._make_request": {
  "lineno": 103,
  "symbols_in_volume": [
   "json.dumps"
  ],
  "type": "function"
 },
 "samcli.local.docker.lambda_build_container.LambdaBuildContainer.executable_name": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.docker.lambda_container": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.local.docker.lambda_container.LambdaContainer": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.local.docker.lambda_container.LambdaContainer.__init__": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.docker.lambda_container.LambdaContainer._get_additional_options": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.docker.lambda_container.LambdaContainer._get_additional_volumes": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.docker.lambda_container.LambdaContainer._get_debug_settings": {
  "lineno": 175,
  "symbols_in_volume": [
   "samcli.local.docker.lambda_debug_settings.LambdaDebugSettings.get_debug_settings"
  ],
  "type": "function"
 },
 "samcli.local.docker.lambda_container.LambdaContainer._get_exposed_ports": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.docker.lambda_container.LambdaContainer._get_image": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.docker.lambda_debug_settings": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "samcli.local.docker.lambda_debug_settings.DebuggingNotSupported": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.local.docker.lambda_debug_settings.LambdaDebugSettings": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.local.docker.lambda_debug_settings.LambdaDebugSettings.get_debug_settings": {
  "lineno": 19,
  "symbols_in_volume": [
   "json.dumps",
   "samcli.local.docker.lambda_image.Runtime.dotnetcore21.value",
   "samcli.local.docker.lambda_image.Runtime.go1x.value",
   "samcli.local.docker.lambda_image.Runtime.java11.value",
   "samcli.local.docker.lambda_image.Runtime.java8.value",
   "samcli.local.docker.lambda_image.Runtime.nodejs10x.value",
   "samcli.local.docker.lambda_image.Runtime.nodejs12x.value",
   "samcli.local.docker.lambda_image.Runtime.python27.value",
   "samcli.local.docker.lambda_image.Runtime.python36.value",
   "samcli.local.docker.lambda_image.Runtime.python37.value",
   "samcli.local.docker.lambda_image.Runtime.python38.value"
  ],
  "type": "function"
 },
 "samcli.local.docker.lambda_image": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.local.docker.lambda_image.LambdaImage": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.local.docker.lambda_image.LambdaImage.__init__": {
  "lineno": 51,
  "symbols_in_volume": [
   "docker.from_env"
  ],
  "type": "function"
 },
 "samcli.local.docker.lambda_image.LambdaImage._build_image": {
  "lineno": 144,
  "symbols_in_volume": [
   "docker.errors.APIError",
   "docker.errors.BuildError",
   "pathlib.Path",
   "samcli.commands.local.cli_common.user_exceptions.ImageBuildException",
   "samcli.lib.utils.tar.create_tarball",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "samcli.local.docker.lambda_image.LambdaImage._generate_docker_image_version": {
  "lineno": 116,
  "symbols_in_volume": [
   "hashlib.sha256"
  ],
  "type": "function"
 },
 "samcli.local.docker.lambda_image.LambdaImage._generate_dockerfile": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.docker.lambda_image.LambdaImage.build": {
  "lineno": 70,
  "symbols_in_volume": [
   "docker.errors.ImageNotFound"
  ],
  "type": "function"
 },
 "samcli.local.docker.lambda_image.Runtime": {
  "lineno": 19,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "samcli.local.docker.lambda_image.Runtime.has_value": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.docker.manager": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.local.docker.manager.ContainerManager": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.local.docker.manager.ContainerManager.__init__": {
  "lineno": 23,
  "symbols_in_volume": [
   "docker.from_env"
  ],
  "type": "function"
 },
 "samcli.local.docker.manager.ContainerManager.has_image": {
  "lineno": 141,
  "symbols_in_volume": [
   "docker.errors.ImageNotFound"
  ],
  "type": "function"
 },
 "samcli.local.docker.manager.ContainerManager.is_docker_reachable": {
  "lineno": 36,
  "symbols_in_volume": [
   "docker.errors.APIError",
   "requests.exceptions.ConnectionError"
  ],
  "type": "function"
 },
 "samcli.local.docker.manager.ContainerManager.pull_image": {
  "lineno": 105,
  "symbols_in_volume": [
   "docker.errors.APIError",
   "samcli.lib.utils.stream_writer.StreamWriter",
   "sys.stderr"
  ],
  "type": "function"
 },
 "samcli.local.docker.manager.ContainerManager.run": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.docker.manager.ContainerManager.stop": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.docker.manager.DockerImagePullFailedException": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.local.docker.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.local.docker.utils.to_posix_path": {
  "lineno": 11,
  "symbols_in_volume": [
   "os.name",
   "pathlib.PureWindowsPath",
   "posixpath.sep",
   "re.sub"
  ],
  "type": "function"
 },
 "samcli.local.events": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.local.events.api_event": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.local.events.api_event.ApiGatewayLambdaEvent": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.local.events.api_event.ApiGatewayLambdaEvent.__init__": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.events.api_event.ApiGatewayLambdaEvent.to_dict": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.events.api_event.ContextIdentity": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.local.events.api_event.ContextIdentity.__init__": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.events.api_event.ContextIdentity.to_dict": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.events.api_event.RequestContext": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.local.events.api_event.RequestContext.__init__": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.events.api_event.RequestContext.to_dict": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.lambda_service": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.local.lambda_service.lambda_error_responses": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.local.lambda_service.lambda_error_responses.LambdaErrorResponses": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.local.lambda_service.lambda_error_responses.LambdaErrorResponses._construct_error_response_body": {
  "lineno": 208,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "json.dumps"
  ],
  "type": "function"
 },
 "samcli.local.lambda_service.lambda_error_responses.LambdaErrorResponses._construct_headers": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.lambda_service.lambda_error_responses.LambdaErrorResponses.generic_method_not_allowed": {
  "lineno": 183,
  "symbols_in_volume": [
   "samcli.local.services.base_local_service.BaseLocalService.service_response"
  ],
  "type": "function"
 },
 "samcli.local.lambda_service.lambda_error_responses.LambdaErrorResponses.generic_path_not_found": {
  "lineno": 158,
  "symbols_in_volume": [
   "samcli.local.services.base_local_service.BaseLocalService.service_response"
  ],
  "type": "function"
 },
 "samcli.local.lambda_service.lambda_error_responses.LambdaErrorResponses.generic_service_exception": {
  "lineno": 112,
  "symbols_in_volume": [
   "samcli.local.services.base_local_service.BaseLocalService.service_response"
  ],
  "type": "function"
 },
 "samcli.local.lambda_service.lambda_error_responses.LambdaErrorResponses.invalid_request_content": {
  "lineno": 64,
  "symbols_in_volume": [
   "samcli.local.services.base_local_service.BaseLocalService.service_response"
  ],
  "type": "function"
 },
 "samcli.local.lambda_service.lambda_error_responses.LambdaErrorResponses.not_implemented_locally": {
  "lineno": 135,
  "symbols_in_volume": [
   "samcli.local.services.base_local_service.BaseLocalService.service_response"
  ],
  "type": "function"
 },
 "samcli.local.lambda_service.lambda_error_responses.LambdaErrorResponses.resource_not_found": {
  "lineno": 38,
  "symbols_in_volume": [
   "samcli.local.services.base_local_service.BaseLocalService.service_response"
  ],
  "type": "function"
 },
 "samcli.local.lambda_service.lambda_error_responses.LambdaErrorResponses.unsupported_media_type": {
  "lineno": 87,
  "symbols_in_volume": [
   "samcli.local.services.base_local_service.BaseLocalService.service_response"
  ],
  "type": "function"
 },
 "samcli.local.lambda_service.local_lambda_invoke_service": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.local.lambda_service.local_lambda_invoke_service.LocalLambdaInvokeService": {
  "lineno": 17,
  "symbols_in_volume": [
   "samcli.local.services.base_local_service.BaseLocalService"
  ],
  "type": "class"
 },
 "samcli.local.lambda_service.local_lambda_invoke_service.LocalLambdaInvokeService.__init__": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.lambda_service.local_lambda_invoke_service.LocalLambdaInvokeService._construct_error_handling": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.lambda_service.local_lambda_invoke_service.LocalLambdaInvokeService._invoke_request_handler": {
  "lineno": 124,
  "symbols_in_volume": [
   "flask.request",
   "io.BytesIO",
   "samcli.lib.utils.stream_writer.StreamWriter",
   "samcli.local.lambdafn.exceptions.FunctionNotFound",
   "samcli.local.services.base_local_service.LambdaOutputParser.get_lambda_output"
  ],
  "type": "function"
 },
 "samcli.local.lambda_service.local_lambda_invoke_service.LocalLambdaInvokeService.create": {
  "lineno": 37,
  "symbols_in_volume": [
   "flask.Flask"
  ],
  "type": "function"
 },
 "samcli.local.lambda_service.local_lambda_invoke_service.LocalLambdaInvokeService.validate_request": {
  "lineno": 57,
  "symbols_in_volume": [
   "flask.request",
   "json.loads"
  ],
  "type": "function"
 },
 "samcli.local.lambdafn": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.local.lambdafn.config": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.local.lambdafn.config.FunctionConfig": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.local.lambdafn.config.FunctionConfig.__init__": {
  "lineno": 17,
  "symbols_in_volume": [
   "samcli.commands.local.cli_common.user_exceptions.InvalidSamTemplateException"
  ],
  "type": "function"
 },
 "samcli.local.lambdafn.env_vars": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.local.lambdafn.env_vars.EnvironmentVariables": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.local.lambdafn.env_vars.EnvironmentVariables.__init__": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.lambdafn.env_vars.EnvironmentVariables._get_aws_variables": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.lambdafn.env_vars.EnvironmentVariables._stringify_value": {
  "lineno": 163,
  "symbols_in_volume": [
   "sys.version_info.major"
  ],
  "type": "function"
 },
 "samcli.local.lambdafn.env_vars.EnvironmentVariables.add_lambda_event_body": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.lambdafn.env_vars.EnvironmentVariables.handler": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.lambdafn.env_vars.EnvironmentVariables.memory": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.lambdafn.env_vars.EnvironmentVariables.resolve": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.lambdafn.env_vars.EnvironmentVariables.timeout": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.lambdafn.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.local.lambdafn.exceptions.FunctionNotFound": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.local.lambdafn.runtime": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.local.lambdafn.runtime.LambdaRuntime": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.local.lambdafn.runtime.LambdaRuntime.__init__": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.lambdafn.runtime.LambdaRuntime._configure_interrupt": {
  "lineno": 114,
  "symbols_in_volume": [
   "signal.SIGTERM",
   "signal.signal",
   "threading.Timer"
  ],
  "type": "function"
 },
 "samcli.local.lambdafn.runtime.LambdaRuntime._configure_interrupt.signal_handler": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.lambdafn.runtime.LambdaRuntime._configure_interrupt.timer_handler": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.lambdafn.runtime.LambdaRuntime._get_code_dir": {
  "lineno": 148,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "os.path.isfile",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "samcli.local.lambdafn.runtime.LambdaRuntime.invoke": {
  "lineno": 42,
  "symbols_in_volume": [
   "samcli.local.docker.lambda_container.LambdaContainer"
  ],
  "type": "function"
 },
 "samcli.local.lambdafn.runtime._unzip_file": {
  "lineno": 181,
  "symbols_in_volume": [
   "os.chmod",
   "os.name",
   "os.path.realpath",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "samcli.local.lambdafn.zip": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.local.lambdafn.zip._extract": {
  "lineno": 40,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.dirname",
   "os.path.exists",
   "os.path.join",
   "os.path.lexists",
   "os.path.normpath",
   "os.remove",
   "os.symlink"
  ],
  "type": "function"
 },
 "samcli.local.lambdafn.zip._is_symlink": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.lambdafn.zip._override_permissions": {
  "lineno": 115,
  "symbols_in_volume": [
   "os.chmod"
  ],
  "type": "function"
 },
 "samcli.local.lambdafn.zip._set_permissions": {
  "lineno": 131,
  "symbols_in_volume": [
   "os.chmod"
  ],
  "type": "function"
 },
 "samcli.local.lambdafn.zip.unzip": {
  "lineno": 83,
  "symbols_in_volume": [
   "os.path.islink",
   "zipfile.ZipFile"
  ],
  "type": "function"
 },
 "samcli.local.lambdafn.zip.unzip_from_uri": {
  "lineno": 155,
  "symbols_in_volume": [
   "os.environ.get",
   "pathlib.Path",
   "requests.get",
   "samcli.lib.utils.progressbar.progressbar"
  ],
  "type": "function"
 },
 "samcli.local.layers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.local.layers.layer_downloader": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.local.layers.layer_downloader.LayerDownloader": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.local.layers.layer_downloader.LayerDownloader.__init__": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.layers.layer_downloader.LayerDownloader._create_cache": {
  "lineno": 176,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "samcli.local.layers.layer_downloader.LayerDownloader._fetch_layer_uri": {
  "lineno": 116,
  "symbols_in_volume": [
   "botocore.exceptions.ClientError",
   "botocore.exceptions.NoCredentialsError",
   "samcli.commands.local.cli_common.user_exceptions.CredentialsRequired",
   "samcli.commands.local.cli_common.user_exceptions.ResourceNotFound"
  ],
  "type": "function"
 },
 "samcli.local.layers.layer_downloader.LayerDownloader._is_layer_cached": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.layers.layer_downloader.LayerDownloader.download": {
  "lineno": 76,
  "symbols_in_volume": [
   "pathlib.Path",
   "samcli.lib.utils.codeuri.resolve_code_path",
   "samcli.local.lambdafn.zip.unzip_from_uri"
  ],
  "type": "function"
 },
 "samcli.local.layers.layer_downloader.LayerDownloader.download_all": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.layers.layer_downloader.LayerDownloader.lambda_client": {
  "lineno": 36,
  "symbols_in_volume": [
   "boto3.client"
  ],
  "type": "function"
 },
 "samcli.local.layers.layer_downloader.LayerDownloader.layer_cache": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.services": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.local.services.base_local_service": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "samcli.local.services.base_local_service.BaseLocalService": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.local.services.base_local_service.BaseLocalService.__init__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.services.base_local_service.BaseLocalService.create": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.services.base_local_service.BaseLocalService.run": {
  "lineno": 37,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "function"
 },
 "samcli.local.services.base_local_service.BaseLocalService.service_response": {
  "lineno": 65,
  "symbols_in_volume": [
   "flask.Response"
  ],
  "type": "function"
 },
 "samcli.local.services.base_local_service.LambdaOutputParser": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "class"
 },
 "samcli.local.services.base_local_service.LambdaOutputParser.get_lambda_output": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.local.services.base_local_service.LambdaOutputParser.is_lambda_error_response": {
  "lineno": 132,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "samcli.settings": {
  "lineno": null,
  "symbols_in_volume": [
   "os.environ",
   "os.getenv"
  ],
  "type": "module"
 },
 "samcli.yamlhelper": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "samcli.yamlhelper.FlattenAliasDumper": {
  "lineno": 97,
  "symbols_in_volume": [
   "yaml.SafeDumper"
  ],
  "type": "class"
 },
 "samcli.yamlhelper.FlattenAliasDumper.ignore_aliases": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.yamlhelper._dict_constructor": {
  "lineno": 78,
  "symbols_in_volume": [
   "botocore.compat.OrderedDict"
  ],
  "type": "function"
 },
 "samcli.yamlhelper._dict_representer": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "samcli.yamlhelper.intrinsics_multi_constructor": {
  "lineno": 27,
  "symbols_in_volume": [
   "yaml.resolver.ScalarNode",
   "yaml.resolver.SequenceNode"
  ],
  "type": "function"
 },
 "samcli.yamlhelper.yaml_dump": {
  "lineno": 68,
  "symbols_in_volume": [
   "botocore.compat.OrderedDict",
   "yaml.dump"
  ],
  "type": "function"
 },
 "samcli.yamlhelper.yaml_parse": {
  "lineno": 84,
  "symbols_in_volume": [
   "botocore.compat.OrderedDict",
   "json.loads",
   "yaml.SafeLoader.add_constructor",
   "yaml.SafeLoader.add_multi_constructor",
   "yaml.resolver.BaseResolver.DEFAULT_MAPPING_TAG",
   "yaml.safe_load"
  ],
  "type": "function"
 }
}