{
 "xgcm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xgcm._version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xgcm._version.get_versions": {
  "lineno": 20,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "xgcm.autogenerate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xgcm.autogenerate._fill_attrs": {
  "lineno": 271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.autogenerate._parse_boundary_params": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.autogenerate._parse_position": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.autogenerate._position_to_relative": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.autogenerate.generate_axis": {
  "lineno": 7,
  "symbols_in_volume": [
   "xarray.Dataset",
   "xgcm.grid.Axis",
   "xgcm.grid.raw_interp_function"
  ],
  "type": "function"
 },
 "xgcm.autogenerate.generate_grid_ds": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.comodo": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xgcm.comodo._assert_data_on_grid": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.comodo.assert_valid_comodo": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.comodo.get_all_axes": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.comodo.get_axis_coords": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.comodo.get_axis_positions_and_coords": {
  "lineno": 50,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "xgcm.comodo.get_axis_positions_and_coords._maybe_fix_type": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.duck_array_ops": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xgcm.duck_array_ops._apply_boundary_condition": {
  "lineno": 43,
  "symbols_in_volume": [
   "dask.array.Array",
   "dask.array.full",
   "numpy.full"
  ],
  "type": "function"
 },
 "xgcm.duck_array_ops._dask_or_eager_func": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy"
  ],
  "type": "function"
 },
 "xgcm.duck_array_ops._dask_or_eager_func.f": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.duck_array_ops._pad_array": {
  "lineno": 109,
  "symbols_in_volume": [
   "dask.array.Array",
   "dask.array.full",
   "numpy.full"
  ],
  "type": "function"
 },
 "xgcm.grid": {
  "lineno": null,
  "symbols_in_volume": [
   "docrep.DocstringProcessor",
   "numba"
  ],
  "type": "module"
 },
 "xgcm.grid.Axis": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "class"
 },
 "xgcm.grid.Axis.__init__": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Axis.__repr__": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Axis._coord_desc": {
  "lineno": 222,
  "symbols_in_volume": [
   "future.utils.iteritems"
  ],
  "type": "function"
 },
 "xgcm.grid.Axis._extend_left": {
  "lineno": 456,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Axis._extend_right": {
  "lineno": 478,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Axis._get_axis_coord": {
  "lineno": 1008,
  "symbols_in_volume": [
   "future.utils.iteritems"
  ],
  "type": "function"
 },
 "xgcm.grid.Axis._get_axis_dim_num": {
  "lineno": 1020,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Axis._get_edge_data": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Axis._get_edge_data.face_edge_data": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Axis._get_neighbor_data_pairs": {
  "lineno": 499,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Axis._neighbor_binary_func": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Axis._neighbor_binary_func_raw": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Axis._wrap_and_replace_coords": {
  "lineno": 971,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "xgcm.grid.Axis.cumsum": {
  "lineno": 651,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Axis.diff": {
  "lineno": 616,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Axis.interp": {
  "lineno": 578,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Axis.max": {
  "lineno": 734,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Axis.min": {
  "lineno": 699,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Axis.transform": {
  "lineno": 769,
  "symbols_in_volume": [
   "numba",
   "warnings.warn"
  ],
  "type": "function"
 },
 "xgcm.grid.Axis.transform._check_other_dims": {
  "lineno": 872,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Axis.transform._parse_target": {
  "lineno": 889,
  "symbols_in_volume": [
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "xgcm.grid.Axis.transform._target_data_name_handling": {
  "lineno": 864,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "xgcm.grid.Grid": {
  "lineno": 1026,
  "symbols_in_volume": [],
  "type": "class"
 },
 "xgcm.grid.Grid.__init__": {
  "lineno": 1032,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "xgcm.grid.Grid.__repr__": {
  "lineno": 1349,
  "symbols_in_volume": [
   "future.utils.iteritems"
  ],
  "type": "function"
 },
 "xgcm.grid.Grid._apply_vector_function": {
  "lineno": 1575,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Grid._assign_face_connections": {
  "lineno": 1167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Grid._assign_face_connections.check_neighbor": {
  "lineno": 1192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Grid._assign_metrics": {
  "lineno": 1241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Grid._get_dims_from_axis": {
  "lineno": 1270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Grid._grid_func": {
  "lineno": 1359,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Grid._parse_axes_kwargs": {
  "lineno": 1152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Grid.average": {
  "lineno": 1718,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Grid.cumint": {
  "lineno": 1694,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Grid.cumsum": {
  "lineno": 1545,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Grid.derivative": {
  "lineno": 1643,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Grid.diff": {
  "lineno": 1459,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Grid.diff_2d_vector": {
  "lineno": 1821,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Grid.get_metric": {
  "lineno": 1284,
  "symbols_in_volume": [
   "functools.reduce",
   "itertools.product",
   "operator.mul"
  ],
  "type": "function"
 },
 "xgcm.grid.Grid.get_metric.iterate_axis_combinations": {
  "lineno": 1304,
  "symbols_in_volume": [
   "itertools.combinations",
   "itertools.product"
  ],
  "type": "function"
 },
 "xgcm.grid.Grid.integrate": {
  "lineno": 1665,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Grid.interp": {
  "lineno": 1429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Grid.interp_2d_vector": {
  "lineno": 1620,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Grid.max": {
  "lineno": 1516,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Grid.min": {
  "lineno": 1487,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.Grid.transform": {
  "lineno": 1744,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid._maybe_promote_str_to_list": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.raw_diff_function": {
  "lineno": 1851,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.raw_interp_function": {
  "lineno": 1845,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.grid.raw_max_function": {
  "lineno": 1859,
  "symbols_in_volume": [
   "numpy.maximum"
  ],
  "type": "function"
 },
 "xgcm.grid.raw_min_function": {
  "lineno": 1855,
  "symbols_in_volume": [
   "numpy.minimum"
  ],
  "type": "function"
 },
 "xgcm.gridops": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xgcm.gridops.GCMDataset": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "xgcm.gridops.GCMDataset.__init__": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.gridops.GCMDataset._get_coords_from_dims": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.gridops.GCMDataset._get_hfac_for_array": {
  "lineno": 71,
  "symbols_in_volume": [
   "dask.array.dims"
  ],
  "type": "function"
 },
 "xgcm.gridops.GCMDataset.derivative_z_to_zp1": {
  "lineno": 244,
  "symbols_in_volume": [
   "dask.array"
  ],
  "type": "function"
 },
 "xgcm.gridops.GCMDataset.derivative_zl_to_z": {
  "lineno": 221,
  "symbols_in_volume": [
   "dask.array"
  ],
  "type": "function"
 },
 "xgcm.gridops.GCMDataset.derivative_zp1_to_z": {
  "lineno": 203,
  "symbols_in_volume": [
   "dask.array"
  ],
  "type": "function"
 },
 "xgcm.gridops.GCMDataset.diff_xp1_to_x": {
  "lineno": 307,
  "symbols_in_volume": [
   "dask.array",
   "dask.array.chunks",
   "dask.array.dims",
   "xray.DataArray"
  ],
  "type": "function"
 },
 "xgcm.gridops.GCMDataset.diff_yp1_to_y": {
  "lineno": 320,
  "symbols_in_volume": [
   "dask.array",
   "dask.array.chunks",
   "dask.array.dims",
   "xray.DataArray"
  ],
  "type": "function"
 },
 "xgcm.gridops.GCMDataset.diff_z_to_zp1": {
  "lineno": 178,
  "symbols_in_volume": [
   "dask.array",
   "dask.array.dims",
   "dask.array.isel",
   "xray.DataArray"
  ],
  "type": "function"
 },
 "xgcm.gridops.GCMDataset.diff_zl_to_z": {
  "lineno": 156,
  "symbols_in_volume": [
   "dask.array"
  ],
  "type": "function"
 },
 "xgcm.gridops.GCMDataset.diff_zp1_to_z": {
  "lineno": 129,
  "symbols_in_volume": [
   "dask.array",
   "dask.array.dims",
   "dask.array.isel",
   "xray.DataArray"
  ],
  "type": "function"
 },
 "xgcm.gridops.GCMDataset.integrate_z": {
  "lineno": 267,
  "symbols_in_volume": [
   "dask.array",
   "dask.array.dims",
   "dask.array.sum"
  ],
  "type": "function"
 },
 "xgcm.gridops.GCMDataset.pad_zl_to_zp1": {
  "lineno": 84,
  "symbols_in_volume": [
   "dask.array",
   "dask.array.chunks",
   "dask.array.data.chunks",
   "dask.array.dims",
   "dask.array.dtype",
   "dask.array.ones",
   "dask.array.shape",
   "numpy.atleast_1d",
   "numpy.zeros",
   "xray.DataArray",
   "xray.concat"
  ],
  "type": "function"
 },
 "xgcm.gridops.GCMDataset.roll": {
  "lineno": 301,
  "symbols_in_volume": [
   "dask.array.isel",
   "xray.concat"
  ],
  "type": "function"
 },
 "xgcm.gridops._append_to_name": {
  "lineno": 10,
  "symbols_in_volume": [
   "dask.array.name"
  ],
  "type": "function"
 },
 "xgcm.regridding": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xgcm.regridding._regrid_vertical": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.bincount",
   "numpy.digitize",
   "numpy.prod",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "xgcm.regridding.regrid_vertical": {
  "lineno": 10,
  "symbols_in_volume": [
   "xray.DataArray"
  ],
  "type": "function"
 },
 "xgcm.test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xgcm.test.datasets": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.pi",
   "numpy.random.rand",
   "xarray.Dataset"
  ],
  "type": "module"
 },
 "xgcm.test.datasets.all_2d": {
  "lineno": 214,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "xgcm.test.datasets.all_datasets": {
  "lineno": 188,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "xgcm.test.datasets.datasets_grid_metric": {
  "lineno": 243,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ones",
   "numpy.random.rand",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "xgcm.test.datasets.datasets_grid_metric._add_metrics": {
  "lineno": 343,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.test.datasets.datasets_grid_metric.data_generator": {
  "lineno": 254,
  "symbols_in_volume": [
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "xgcm.test.datasets.nonperiodic_1d": {
  "lineno": 194,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "xgcm.test.datasets.nonperiodic_2d": {
  "lineno": 234,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "xgcm.test.datasets.periodic_1d": {
  "lineno": 208,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "xgcm.test.datasets.periodic_2d": {
  "lineno": 228,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "xgcm.test.test_autogenerate": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.hstack",
   "numpy.meshgrid",
   "numpy.random.rand",
   "xarray.Dataset"
  ],
  "type": "module"
 },
 "xgcm.test.test_autogenerate.test_fill_attrs": {
  "lineno": 379,
  "symbols_in_volume": [
   "xgcm.autogenerate._fill_attrs"
  ],
  "type": "function"
 },
 "xgcm.test.test_autogenerate.test_generate_axis": {
  "lineno": 179,
  "symbols_in_volume": [
   "pytest.raises",
   "xarray.testing.assert_allclose",
   "xgcm.autogenerate.generate_axis"
  ],
  "type": "function"
 },
 "xgcm.test.test_autogenerate.test_generate_grid_ds": {
  "lineno": 319,
  "symbols_in_volume": [
   "xarray.testing.assert_equal",
   "xgcm.autogenerate.generate_grid_ds"
  ],
  "type": "function"
 },
 "xgcm.test.test_autogenerate.test_parse_boundary_params": {
  "lineno": 332,
  "symbols_in_volume": [
   "xgcm.autogenerate._parse_boundary_params"
  ],
  "type": "function"
 },
 "xgcm.test.test_autogenerate.test_parse_position": {
  "lineno": 338,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "xgcm.autogenerate._parse_position"
  ],
  "type": "function"
 },
 "xgcm.test.test_autogenerate.test_position_to_relative": {
  "lineno": 351,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "xgcm.autogenerate._position_to_relative"
  ],
  "type": "function"
 },
 "xgcm.test.test_duck_array_ops": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xgcm.test.test_duck_array_ops.test_concatenate": {
  "lineno": 8,
  "symbols_in_volume": [
   "dask.array.Array",
   "dask.array.from_array",
   "numpy.array",
   "numpy.ndarray",
   "xgcm.duck_array_ops.concatenate"
  ],
  "type": "function"
 },
 "xgcm.test.test_exchange": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xgcm.test.test_exchange.cs": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.rand",
   "pytest.fixture",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "xgcm.test.test_exchange.cubed_sphere_connections": {
  "lineno": 89,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "xgcm.test.test_exchange.ds": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.rand",
   "pytest.fixture",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "xgcm.test.test_exchange.ds_face_connections_x_to_x": {
  "lineno": 48,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "xgcm.test.test_exchange.ds_face_connections_x_to_y": {
  "lineno": 55,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "xgcm.test.test_exchange.test_connection_errors": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.test.test_exchange.test_create_connected_grid": {
  "lineno": 157,
  "symbols_in_volume": [
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_exchange.test_create_cubed_sphere_grid": {
  "lineno": 258,
  "symbols_in_volume": [
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_exchange.test_create_periodic_grid": {
  "lineno": 121,
  "symbols_in_volume": [
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_exchange.test_diff_interp_connected_grid_x_to_x": {
  "lineno": 174,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_exchange.test_diff_interp_connected_grid_x_to_y": {
  "lineno": 193,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_exchange.test_diff_interp_cubed_sphere": {
  "lineno": 262,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "xarray.broadcast",
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_exchange.test_get_periodic_grid_edge": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_exchange.test_vector_diff_interp_connected_grid_x_to_y": {
  "lineno": 218,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pytest.raises",
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_gcm_dataset": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.xfail"
  ],
  "type": "module"
 },
 "xgcm.test.test_gcm_dataset.test_create_gcm_dataset": {
  "lineno": 72,
  "symbols_in_volume": [
   "pytest.raises",
   "xgcm.GCMDataset"
  ],
  "type": "function"
 },
 "xgcm.test.test_gcm_dataset.test_dataset": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.full",
   "numpy.hstack",
   "numpy.meshgrid",
   "pytest.fixture",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "xgcm.test.test_gcm_dataset.test_horizontal_derivatives": {
  "lineno": 137,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.pi",
   "numpy.roll",
   "numpy.sin",
   "xgcm.GCMDataset"
  ],
  "type": "function"
 },
 "xgcm.test.test_gcm_dataset.test_vertical_derivatives": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.diff",
   "numpy.hstack",
   "numpy.pi",
   "numpy.sin",
   "xarray.DataArray",
   "xgcm.GCMDataset"
  ],
  "type": "function"
 },
 "xgcm.test.test_gcm_dataset.test_vertical_integral": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.pi",
   "numpy.sin",
   "xgcm.GCMDataset"
  ],
  "type": "function"
 },
 "xgcm.test.test_grid": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xgcm.test.test_grid._assert_axes_equal": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.test.test_grid._get_axes": {
  "lineno": 23,
  "symbols_in_volume": [
   "xgcm.grid.Axis"
  ],
  "type": "function"
 },
 "xgcm.test.test_grid._pad_left": {
  "lineno": 220,
  "symbols_in_volume": [
   "numpy.hstack"
  ],
  "type": "function"
 },
 "xgcm.test.test_grid._pad_right": {
  "lineno": 225,
  "symbols_in_volume": [
   "numpy.hstack"
  ],
  "type": "function"
 },
 "xgcm.test.test_grid.test_axis_cumsum": {
  "lineno": 286,
  "symbols_in_volume": [
   "numpy.cumsum",
   "numpy.hstack",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pytest.mark.xfail",
   "pytest.param",
   "xgcm.grid.Axis"
  ],
  "type": "function"
 },
 "xgcm.test.test_grid.test_axis_diff_and_interp_nonperiodic_1d": {
  "lineno": 362,
  "symbols_in_volume": [
   "numpy.maximum",
   "numpy.minimum",
   "pytest.mark.parametrize",
   "pytest.mark.xfail",
   "pytest.param",
   "xarray.DataArray",
   "xgcm.grid.Axis"
  ],
  "type": "function"
 },
 "xgcm.test.test_grid.test_axis_diff_and_interp_nonperiodic_2d": {
  "lineno": 443,
  "symbols_in_volume": [
   "numpy.pad",
   "numpy.roll",
   "pytest.mark.parametrize",
   "pytest.mark.xfail",
   "pytest.param",
   "xarray.DataArray",
   "xgcm.grid.Axis"
  ],
  "type": "function"
 },
 "xgcm.test.test_grid.test_axis_errors": {
  "lineno": 538,
  "symbols_in_volume": [
   "pytest.raises",
   "xgcm.grid.Axis"
  ],
  "type": "function"
 },
 "xgcm.test.test_grid.test_axis_neighbor_pairs_2d": {
  "lineno": 338,
  "symbols_in_volume": [
   "numpy.roll",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "xgcm.grid.Axis"
  ],
  "type": "function"
 },
 "xgcm.test.test_grid.test_axis_neighbor_pairs_nonperiodic_1d": {
  "lineno": 230,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pytest.mark.xfail",
   "pytest.param",
   "pytest.raises",
   "xgcm.grid.Axis"
  ],
  "type": "function"
 },
 "xgcm.test.test_grid.test_axis_repr": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.test.test_grid.test_axis_wrap_and_replace_2d": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.test.test_grid.test_axis_wrap_and_replace_nonperiodic": {
  "lineno": 201,
  "symbols_in_volume": [
   "xgcm.grid.Axis"
  ],
  "type": "function"
 },
 "xgcm.test.test_grid.test_boundary_kwarg_same_as_grid_constructor_kwarg": {
  "lineno": 782,
  "symbols_in_volume": [
   "xarray.testing.assert_identical",
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_grid.test_create_axis": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.test.test_grid.test_create_axis_no_comodo": {
  "lineno": 119,
  "symbols_in_volume": [
   "xgcm.grid.Axis"
  ],
  "type": "function"
 },
 "xgcm.test.test_grid.test_create_axis_no_coords": {
  "lineno": 143,
  "symbols_in_volume": [
   "xgcm.grid.Axis"
  ],
  "type": "function"
 },
 "xgcm.test.test_grid.test_create_grid_no_comodo": {
  "lineno": 614,
  "symbols_in_volume": [
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_grid.test_extend_right_left": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pytest.mark.parametrize",
   "xgcm.grid.Axis"
  ],
  "type": "function"
 },
 "xgcm.test.test_grid.test_get_axis_coord": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.test.test_grid.test_get_edge_data": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.diff",
   "pytest.mark.parametrize",
   "xgcm.grid.Axis"
  ],
  "type": "function"
 },
 "xgcm.test.test_grid.test_grid_create": {
  "lineno": 587,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_grid.test_grid_dict_input_boundary_fill": {
  "lineno": 710,
  "symbols_in_volume": [
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_grid.test_grid_no_coords": {
  "lineno": 631,
  "symbols_in_volume": [
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_grid.test_grid_ops": {
  "lineno": 654,
  "symbols_in_volume": [
   "xgcm.grid.Axis",
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_grid.test_grid_repr": {
  "lineno": 647,
  "symbols_in_volume": [
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_grid.test_invalid_boundary_error": {
  "lineno": 719,
  "symbols_in_volume": [
   "pytest.raises",
   "xgcm.grid.Axis",
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_grid.test_invalid_fill_value_error": {
  "lineno": 733,
  "symbols_in_volume": [
   "pytest.raises",
   "xgcm.grid.Axis",
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_grid.test_keep_coords": {
  "lineno": 743,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_grid.test_multi_axis_input": {
  "lineno": 683,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "xarray.testing.assert_allclose",
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_metric_ops_multi_axis": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xgcm.test.test_metric_ops_multi_axis.TestParametrized": {
  "lineno": 23,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "class"
 },
 "xgcm.test.test_metric_ops_multi_axis.TestParametrized.test_bgrid": {
  "lineno": 32,
  "symbols_in_volume": [
   "xarray.testing.assert_allclose",
   "xgcm.grid.Grid",
   "xgcm.test.datasets.datasets_grid_metric"
  ],
  "type": "function"
 },
 "xgcm.test.test_metric_ops_multi_axis.TestParametrized.test_cgrid": {
  "lineno": 86,
  "symbols_in_volume": [
   "xarray.testing.assert_allclose",
   "xgcm.grid.Grid",
   "xgcm.test.datasets.datasets_grid_metric"
  ],
  "type": "function"
 },
 "xgcm.test.test_metric_ops_multi_axis.TestParametrized.test_missingaxis": {
  "lineno": 139,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "xgcm.grid.Grid",
   "xgcm.test.datasets.datasets_grid_metric"
  ],
  "type": "function"
 },
 "xgcm.test.test_metric_ops_multi_axis.TestParametrized.test_missingdim": {
  "lineno": 201,
  "symbols_in_volume": [
   "pytest.raises",
   "xgcm.grid.Grid",
   "xgcm.test.datasets.datasets_grid_metric"
  ],
  "type": "function"
 },
 "xgcm.test.test_metric_ops_multi_axis._expected_result": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.test.test_metrics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xgcm.test.test_metrics.test_assign_metric": {
  "lineno": 80,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "xgcm.grid.Grid",
   "xgcm.test.datasets.datasets_grid_metric"
  ],
  "type": "function"
 },
 "xgcm.test.test_metrics.test_get_metric": {
  "lineno": 99,
  "symbols_in_volume": [
   "functools.reduce",
   "operator.mul",
   "pytest.mark.parametrize",
   "pytest.raises",
   "xgcm.grid.Grid",
   "xgcm.test.datasets.datasets_grid_metric"
  ],
  "type": "function"
 },
 "xgcm.test.test_metrics.test_metrics_2d_grid": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.full",
   "numpy.ones",
   "xarray.Dataset",
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_metrics.test_multiple_metrics_per_axis": {
  "lineno": 12,
  "symbols_in_volume": [
   "xarray.Dataset",
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_metrics_ops_single_axis": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xgcm.test.test_metrics_ops_single_axis.TestParametrized": {
  "lineno": 10,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "class"
 },
 "xgcm.test.test_metrics_ops_single_axis.TestParametrized.test_weighted_metric": {
  "lineno": 14,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "xgcm.grid.Grid",
   "xgcm.test.datasets.datasets_grid_metric"
  ],
  "type": "function"
 },
 "xgcm.test.test_metrics_ops_single_axis.TestParametrized.test_weighted_metric.test_weighted_metric_multi_axis": {
  "lineno": 40,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "xgcm.grid.Grid",
   "xgcm.test.datasets.datasets_grid_metric"
  ],
  "type": "function"
 },
 "xgcm.test.test_metrics_ops_single_axis._run_single_derivative_test": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.test.test_metrics_ops_single_axis.test_average_unmatched_missing": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "numpy.ones",
   "xarray.DataArray",
   "xarray.Dataset",
   "xarray.testing.assert_allclose",
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_metrics_ops_single_axis.test_boundary_global_input": {
  "lineno": 74,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "xarray.testing.assert_allclose",
   "xgcm.grid.Grid",
   "xgcm.test.datasets.datasets_grid_metric"
  ],
  "type": "function"
 },
 "xgcm.test.test_metrics_ops_single_axis.test_derivative_b_grid": {
  "lineno": 210,
  "symbols_in_volume": [
   "xgcm.grid.Grid",
   "xgcm.test.datasets.datasets_grid_metric"
  ],
  "type": "function"
 },
 "xgcm.test.test_metrics_ops_single_axis.test_derivative_c_grid": {
  "lineno": 178,
  "symbols_in_volume": [
   "xgcm.grid.Grid",
   "xgcm.test.datasets.datasets_grid_metric"
  ],
  "type": "function"
 },
 "xgcm.test.test_metrics_ops_single_axis.test_derivative_uniform_grid": {
  "lineno": 132,
  "symbols_in_volume": [
   "xarray.Dataset",
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_transform": {
  "lineno": null,
  "symbols_in_volume": [
   "numba",
   "numpy.interp",
   "numpy.nan"
  ],
  "type": "module"
 },
 "xgcm.test.test_transform._parse_dim": {
  "lineno": 552,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.test.test_transform.all_cases": {
  "lineno": 512,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "xgcm.test.test_transform.conservative_cases": {
  "lineno": 528,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "xgcm.test.test_transform.construct_test_source_data": {
  "lineno": 438,
  "symbols_in_volume": [
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "xgcm.test.test_transform.construct_test_source_data._construct_ds": {
  "lineno": 443,
  "symbols_in_volume": [
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "xgcm.test.test_transform.distributed_client": {
  "lineno": 901,
  "symbols_in_volume": [
   "dask.distributed.Client",
   "dask.distributed.LocalCluster",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "xgcm.test.test_transform.linear_cases": {
  "lineno": 520,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "xgcm.test.test_transform.multidim_cases": {
  "lineno": 536,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "xgcm.test.test_transform.no_client": {
  "lineno": 884,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "xgcm.test.test_transform.processes_client": {
  "lineno": 895,
  "symbols_in_volume": [
   "dask.config.set",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "xgcm.test.test_transform.test_chunking_dim_error": {
  "lineno": 981,
  "symbols_in_volume": [
   "numba",
   "pytest.mark.skipif",
   "pytest.raises",
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_transform.test_conservative_interp_warn": {
  "lineno": 776,
  "symbols_in_volume": [
   "numba",
   "pytest.mark.skipif",
   "pytest.warns",
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_transform.test_conservative_nonmonotonic_target_error": {
  "lineno": 602,
  "symbols_in_volume": [
   "numba",
   "numpy.arange",
   "numpy.array",
   "numpy.concatenate",
   "numpy.cos",
   "numpy.cumsum",
   "numpy.linspace",
   "numpy.pi",
   "numpy.tile",
   "pytest.mark.skipif",
   "pytest.raises"
  ],
  "type": "function"
 },
 "xgcm.test.test_transform.test_grid_transform": {
  "lineno": 759,
  "symbols_in_volume": [
   "numba",
   "pytest.mark.skipif",
   "xarray.testing.assert_allclose",
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_transform.test_grid_transform_auto_naming": {
  "lineno": 853,
  "symbols_in_volume": [
   "numba",
   "pytest.mark.skipif",
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_transform.test_grid_transform_multidim": {
  "lineno": 918,
  "symbols_in_volume": [
   "numba",
   "pytest.mark.parametrize",
   "pytest.mark.skipif",
   "xarray.broadcast",
   "xarray.testing.assert_allclose",
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_transform.test_grid_transform_multidim_other_dims_error": {
  "lineno": 952,
  "symbols_in_volume": [
   "numba",
   "numpy.ones",
   "pytest.mark.skipif",
   "pytest.raises",
   "pytest.skip",
   "xarray.DataArray",
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_transform.test_grid_transform_noname_data": {
  "lineno": 794,
  "symbols_in_volume": [
   "numba",
   "pytest.mark.skipif",
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_transform.test_grid_transform_noname_targetdata": {
  "lineno": 811,
  "symbols_in_volume": [
   "numba",
   "pytest.mark.skipif",
   "pytest.warns",
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_transform.test_interp_1d_conservative": {
  "lineno": 579,
  "symbols_in_volume": [
   "numba",
   "numpy.arange",
   "numpy.concatenate",
   "numpy.cos",
   "numpy.cumsum",
   "numpy.linspace",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "numpy.tile",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "xgcm.test.test_transform.test_interp_1d_linear": {
  "lineno": 561,
  "symbols_in_volume": [
   "numba",
   "numpy.arange",
   "numpy.cos",
   "numpy.linspace",
   "numpy.pi",
   "numpy.sin",
   "numpy.testing.assert_allclose",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "xgcm.test.test_transform.test_linear_interpolation_target_value_error": {
  "lineno": 626,
  "symbols_in_volume": [
   "numba",
   "pytest.mark.skipif",
   "pytest.raises"
  ],
  "type": "function"
 },
 "xgcm.test.test_transform.test_mid_level_conservative": {
  "lineno": 702,
  "symbols_in_volume": [
   "numba",
   "pytest.mark.skipif",
   "pytest.xfail",
   "xarray.testing.assert_allclose"
  ],
  "type": "function"
 },
 "xgcm.test.test_transform.test_mid_level_linear": {
  "lineno": 657,
  "symbols_in_volume": [
   "numba",
   "pytest.mark.skipif",
   "pytest.xfail",
   "xarray.testing.assert_allclose"
  ],
  "type": "function"
 },
 "xgcm.test.test_transform.test_transform_error_periodic": {
  "lineno": 841,
  "symbols_in_volume": [
   "numba",
   "pytest.mark.skipif",
   "pytest.raises",
   "xgcm.grid.Grid"
  ],
  "type": "function"
 },
 "xgcm.test.test_transform.threaded_client": {
  "lineno": 889,
  "symbols_in_volume": [
   "dask.config.set",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "xgcm.transform": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xgcm.transform._interp_1d_conservative": {
  "lineno": 63,
  "symbols_in_volume": [
   "numba.float32",
   "numba.float64",
   "numba.guvectorize",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "xgcm.transform._interp_1d_linear": {
  "lineno": 12,
  "symbols_in_volume": [
   "numba.boolean",
   "numba.float32",
   "numba.float64",
   "numba.guvectorize",
   "numpy.interp",
   "numpy.nan",
   "numpy.nanmax",
   "numpy.nanmin"
  ],
  "type": "function"
 },
 "xgcm.transform.conservative_interpolation": {
  "lineno": 222,
  "symbols_in_volume": [
   "xarray.apply_ufunc"
  ],
  "type": "function"
 },
 "xgcm.transform.input_handling": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.transform.input_handling.wrapper_input_handling": {
  "lineno": 164,
  "symbols_in_volume": [
   "functools.wraps",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "xgcm.transform.interp_1d_conservative": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.diff"
  ],
  "type": "function"
 },
 "xgcm.transform.interp_1d_linear": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xgcm.transform.linear_interpolation": {
  "lineno": 203,
  "symbols_in_volume": [
   "xarray.apply_ufunc"
  ],
  "type": "function"
 }
}