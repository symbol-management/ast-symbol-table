{
 "boolean": {
  "data": {},
  "type": "module"
 },
 "boolean.AND": {
  "data": {
   "shadows": "boolean.boolean.AND"
  },
  "type": "import"
 },
 "boolean.BooleanAlgebra": {
  "data": {
   "shadows": "boolean.boolean.BooleanAlgebra"
  },
  "type": "import"
 },
 "boolean.Expression": {
  "data": {
   "shadows": "boolean.boolean.Expression"
  },
  "type": "import"
 },
 "boolean.NOT": {
  "data": {
   "shadows": "boolean.boolean.NOT"
  },
  "type": "import"
 },
 "boolean.OR": {
  "data": {
   "shadows": "boolean.boolean.OR"
  },
  "type": "import"
 },
 "boolean.PARSE_ERRORS": {
  "data": {
   "shadows": "boolean.boolean.PARSE_ERRORS"
  },
  "type": "import"
 },
 "boolean.ParseError": {
  "data": {
   "shadows": "boolean.boolean.ParseError"
  },
  "type": "import"
 },
 "boolean.Symbol": {
  "data": {
   "shadows": "boolean.boolean.Symbol"
  },
  "type": "import"
 },
 "boolean.TOKEN_AND": {
  "data": {
   "shadows": "boolean.boolean.TOKEN_AND"
  },
  "type": "import"
 },
 "boolean.TOKEN_FALSE": {
  "data": {
   "shadows": "boolean.boolean.TOKEN_FALSE"
  },
  "type": "import"
 },
 "boolean.TOKEN_LPAR": {
  "data": {
   "shadows": "boolean.boolean.TOKEN_LPAR"
  },
  "type": "import"
 },
 "boolean.TOKEN_NOT": {
  "data": {
   "shadows": "boolean.boolean.TOKEN_NOT"
  },
  "type": "import"
 },
 "boolean.TOKEN_OR": {
  "data": {
   "shadows": "boolean.boolean.TOKEN_OR"
  },
  "type": "import"
 },
 "boolean.TOKEN_RPAR": {
  "data": {
   "shadows": "boolean.boolean.TOKEN_RPAR"
  },
  "type": "import"
 },
 "boolean.TOKEN_SYMBOL": {
  "data": {
   "shadows": "boolean.boolean.TOKEN_SYMBOL"
  },
  "type": "import"
 },
 "boolean.TOKEN_TRUE": {
  "data": {
   "shadows": "boolean.boolean.TOKEN_TRUE"
  },
  "type": "import"
 },
 "boolean.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "boolean.boolean": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "boolean.boolean.PARSE_INVALID_EXPRESSION",
    "boolean.boolean.PARSE_INVALID_NESTING",
    "boolean.boolean.PARSE_INVALID_OPERATOR_SEQUENCE",
    "boolean.boolean.PARSE_INVALID_SYMBOL_SEQUENCE",
    "boolean.boolean.PARSE_UNBALANCED_CLOSING_PARENS",
    "boolean.boolean.PARSE_UNKNOWN_TOKEN",
    "boolean.boolean.TOKEN_AND",
    "boolean.boolean.TOKEN_FALSE",
    "boolean.boolean.TOKEN_LPAR",
    "boolean.boolean.TOKEN_NOT",
    "boolean.boolean.TOKEN_OR",
    "boolean.boolean.TOKEN_RPAR",
    "boolean.boolean.TOKEN_SYMBOL",
    "boolean.boolean.TOKEN_TRUE",
    "str"
   ]
  },
  "type": "module"
 },
 "boolean.boolean.AND": {
  "data": {
   "lineno": 1423,
   "symbols_in_volume": [
    "boolean.boolean.DualBase"
   ]
  },
  "type": "class"
 },
 "boolean.boolean.AND.__init__": {
  "data": {
   "lineno": 1439,
   "symbols_in_volume": [
    "boolean.boolean.AND",
    "super"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.BaseElement": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "boolean.boolean.Expression"
   ]
  },
  "type": "class"
 },
 "boolean.boolean.BaseElement.__init__": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "boolean.boolean.BaseElement",
    "super"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.BaseElement.__lt__": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "NotImplemented",
    "boolean.boolean.BaseElement",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.BaseElement.pretty": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.BooleanAlgebra": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "boolean.boolean.BooleanAlgebra.__init__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.BooleanAlgebra._rdistributive": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "expr_class",
    "isinstance",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.BooleanAlgebra._start_operation": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "boolean.boolean.PARSE_INVALID_NESTING",
    "boolean.boolean.ParseError",
    "boolean.boolean.TRACE_PARSE",
    "boolean.boolean.inspect",
    "issubclass",
    "print",
    "repr"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.BooleanAlgebra.cnf": {
  "data": {
   "lineno": 533
  },
  "type": "function"
 },
 "boolean.boolean.BooleanAlgebra.definition": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "boolean.boolean.BooleanAlgebra.dnf": {
  "data": {
   "lineno": 539
  },
  "type": "function"
 },
 "boolean.boolean.BooleanAlgebra.normalize": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "operation"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.BooleanAlgebra.parse": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "TypeError",
    "boolean.boolean.PARSE_INVALID_EXPRESSION",
    "boolean.boolean.PARSE_INVALID_NESTING",
    "boolean.boolean.PARSE_INVALID_OPERATOR_SEQUENCE",
    "boolean.boolean.PARSE_INVALID_SYMBOL_SEQUENCE",
    "boolean.boolean.PARSE_UNBALANCED_CLOSING_PARENS",
    "boolean.boolean.PARSE_UNKNOWN_TOKEN",
    "boolean.boolean.ParseError",
    "boolean.boolean.TOKEN_AND",
    "boolean.boolean.TOKEN_FALSE",
    "boolean.boolean.TOKEN_LPAR",
    "boolean.boolean.TOKEN_NOT",
    "boolean.boolean.TOKEN_OR",
    "boolean.boolean.TOKEN_RPAR",
    "boolean.boolean.TOKEN_SYMBOL",
    "boolean.boolean.TOKEN_TRUE",
    "boolean.boolean.TRACE_PARSE",
    "boolean.boolean.basestring",
    "boolean.boolean.inspect",
    "int",
    "is_operator",
    "is_sym",
    "isinstance",
    "issubclass",
    "iter",
    "len",
    "list",
    "map",
    "print",
    "repr"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.BooleanAlgebra.parse.is_operator": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "boolean.boolean.TOKEN_AND",
    "boolean.boolean.TOKEN_OR"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.BooleanAlgebra.parse.is_sym": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "boolean.boolean.TOKEN_FALSE",
    "boolean.boolean.TOKEN_SYMBOL",
    "boolean.boolean.TOKEN_TRUE",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.BooleanAlgebra.symbols": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "map",
    "tuple"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.BooleanAlgebra.tokenize": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "boolean.boolean.PARSE_UNKNOWN_TOKEN",
    "boolean.boolean.ParseError",
    "boolean.boolean.TOKEN_AND",
    "boolean.boolean.TOKEN_FALSE",
    "boolean.boolean.TOKEN_LPAR",
    "boolean.boolean.TOKEN_NOT",
    "boolean.boolean.TOKEN_OR",
    "boolean.boolean.TOKEN_RPAR",
    "boolean.boolean.TOKEN_SYMBOL",
    "boolean.boolean.TOKEN_TRUE",
    "boolean.boolean.basestring",
    "isinstance",
    "len",
    "type"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.DualBase": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "boolean.boolean.Function"
   ]
  },
  "type": "class"
 },
 "boolean.boolean.DualBase.__contains__": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "all",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.DualBase.__init__": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "boolean.boolean.DualBase",
    "super"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.DualBase.__lt__": {
  "data": {
   "lineno": 1402,
   "symbols_in_volume": [
    "NotImplemented",
    "boolean.boolean.Expression",
    "isinstance",
    "len",
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.DualBase.absorb": {
  "data": {
   "lineno": 1287,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.DualBase.distributive": {
  "data": {
   "lineno": 1378,
   "symbols_in_volume": [
    "boolean.boolean.itertools",
    "dual",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.DualBase.flatten": {
  "data": {
   "lineno": 1269,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.DualBase.simplify": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.DualBase.subtract": {
  "data": {
   "lineno": 1356,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.Expression": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "object",
    "tuple"
   ]
  },
  "type": "class"
 },
 "boolean.boolean.Expression.__and__": {
  "data": {
   "lineno": 765
  },
  "type": "function"
 },
 "boolean.boolean.Expression.__bool__": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.Expression.__eq__": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "NotImplemented",
    "frozenset",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.Expression.__gt__": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.Expression.__hash__": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "frozenset",
    "hash",
    "id",
    "map"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.Expression.__invert__": {
  "data": {
   "lineno": 770
  },
  "type": "function"
 },
 "boolean.boolean.Expression.__lt__": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.Expression.__ne__": {
  "data": {
   "lineno": 749
  },
  "type": "function"
 },
 "boolean.boolean.Expression.__or__": {
  "data": {
   "lineno": 773
  },
  "type": "function"
 },
 "boolean.boolean.Expression._subs": {
  "data": {
   "lineno": 650
  },
  "type": "function"
 },
 "boolean.boolean.Expression.get_literals": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "boolean.boolean.itertools",
    "list"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.Expression.get_symbols": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.Expression.literalize": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "all",
    "enumerate",
    "tuple"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.Expression.literals": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "property",
    "set"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.Expression.objects": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "property",
    "set"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.Expression.simplify": {
  "data": {
   "lineno": 704
  },
  "type": "function"
 },
 "boolean.boolean.Expression.subs": {
  "data": {
   "lineno": 630
  },
  "type": "function"
 },
 "boolean.boolean.Expression.symbols": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "property",
    "set"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.Function": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "boolean.boolean.Expression"
   ]
  },
  "type": "class"
 },
 "boolean.boolean.Function.__init__": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "all",
    "boolean.boolean.Expression",
    "boolean.boolean.Function",
    "isinstance",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.Function.__repr__": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "map",
    "repr"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.Function.__str__": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.Function.pretty": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": [
    "getattr",
    "locals"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.NOT": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "boolean.boolean.Function"
   ]
  },
  "type": "class"
 },
 "boolean.boolean.NOT.__init__": {
  "data": {
   "lineno": 1030,
   "symbols_in_volume": [
    "boolean.boolean.NOT",
    "boolean.boolean.Symbol",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.NOT.__lt__": {
  "data": {
   "lineno": 1090
  },
  "type": "function"
 },
 "boolean.boolean.NOT.cancel": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.NOT.demorgan": {
  "data": {
   "lineno": 1079,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.NOT.literalize": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.NOT.pretty": {
  "data": {
   "lineno": 1093,
   "symbols_in_volume": [
    "boolean.boolean.NOT",
    "super"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.NOT.simplify": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.OR": {
  "data": {
   "lineno": 1447,
   "symbols_in_volume": [
    "boolean.boolean.DualBase"
   ]
  },
  "type": "class"
 },
 "boolean.boolean.OR.__init__": {
  "data": {
   "lineno": 1463,
   "symbols_in_volume": [
    "boolean.boolean.OR",
    "super"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.PARSE_ERRORS": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "boolean.boolean.PARSE_INVALID_EXPRESSION": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "boolean.boolean.PARSE_INVALID_NESTING": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "boolean.boolean.PARSE_INVALID_OPERATOR_SEQUENCE": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "boolean.boolean.PARSE_INVALID_SYMBOL_SEQUENCE": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "boolean.boolean.PARSE_UNBALANCED_CLOSING_PARENS": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "boolean.boolean.PARSE_UNKNOWN_TOKEN": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "boolean.boolean.ParseError": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "boolean.boolean.ParseError.__init__": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "boolean.boolean.ParseError.__str__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "boolean.boolean.PARSE_ERRORS",
    "locals"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.Symbol": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "boolean.boolean.Expression"
   ]
  },
  "type": "class"
 },
 "boolean.boolean.Symbol.__eq__": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.Symbol.__hash__": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "hash",
    "id"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.Symbol.__init__": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "boolean.boolean.Symbol",
    "super"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.Symbol.__lt__": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "NotImplemented",
    "boolean.boolean.Expression",
    "boolean.boolean.Symbol",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.Symbol.__repr__": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "boolean.boolean.basestring",
    "isinstance",
    "repr"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.Symbol.__str__": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.Symbol.pretty": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "boolean.boolean.basestring",
    "isinstance",
    "repr"
   ]
  },
  "type": "function"
 },
 "boolean.boolean.TOKEN_AND": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "boolean.boolean.TOKEN_FALSE": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "boolean.boolean.TOKEN_LPAR": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "boolean.boolean.TOKEN_NOT": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "boolean.boolean.TOKEN_OR": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "boolean.boolean.TOKEN_RPAR": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "boolean.boolean.TOKEN_SYMBOL": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "boolean.boolean.TOKEN_TRUE": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "boolean.boolean.TOKEN_TYPES": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "boolean.boolean.TRACE_PARSE": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "boolean.boolean._FALSE": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "boolean.boolean.BaseElement"
   ]
  },
  "type": "class"
 },
 "boolean.boolean._FALSE.__eq__": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "boolean.boolean._FALSE",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "boolean.boolean._FALSE.__hash__": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "boolean.boolean._FALSE.__init__": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "boolean.boolean._FALSE",
    "super"
   ]
  },
  "type": "function"
 },
 "boolean.boolean._FALSE.__repr__": {
  "data": {
   "lineno": 858
  },
  "type": "function"
 },
 "boolean.boolean._FALSE.__str__": {
  "data": {
   "lineno": 855
  },
  "type": "function"
 },
 "boolean.boolean._TRUE": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "boolean.boolean.BaseElement"
   ]
  },
  "type": "class"
 },
 "boolean.boolean._TRUE.__eq__": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "boolean.boolean._TRUE",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "boolean.boolean._TRUE.__hash__": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "boolean.boolean._TRUE.__init__": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "boolean.boolean._TRUE",
    "super"
   ]
  },
  "type": "function"
 },
 "boolean.boolean._TRUE.__repr__": {
  "data": {
   "lineno": 833
  },
  "type": "function"
 },
 "boolean.boolean._TRUE.__str__": {
  "data": {
   "lineno": 830
  },
  "type": "function"
 },
 "boolean.boolean.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "boolean.boolean.basestring": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "boolean.boolean.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "boolean.boolean.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "boolean.boolean.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "boolean.boolean.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "boolean.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "boolean.test_boolean": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "__name__",
    "boolean.test_boolean.unittest",
    "str"
   ]
  },
  "type": "module"
 },
 "boolean.test_boolean.BaseElement": {
  "data": {
   "shadows": "boolean.boolean.BaseElement"
  },
  "type": "import"
 },
 "boolean.test_boolean.BaseElementTestCase": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "boolean.test_boolean.unittest"
   ]
  },
  "type": "class"
 },
 "boolean.test_boolean.BaseElementTestCase.test_creation": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "boolean.BooleanAlgebra",
    "boolean.boolean.BaseElement"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BaseElementTestCase.test_dual": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BaseElementTestCase.test_equality": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BaseElementTestCase.test_literalize": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BaseElementTestCase.test_literals": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "set"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BaseElementTestCase.test_order": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BaseElementTestCase.test_printing": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BaseElementTestCase.test_simplify": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BaseElementTestCase.test_simplify_two_algebra": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BooleanAlgebra": {
  "data": {
   "shadows": "boolean.BooleanAlgebra"
  },
  "type": "import"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "boolean.test_boolean.unittest"
   ]
  },
  "type": "class"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase.test_allowing_additional_characters_in_tokens": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase.test_creation": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "str"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase.test_parse_can_use_iterable_from_alternative_tokenizer": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "CustomAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase.test_parse_can_use_iterable_from_alternative_tokenizer.CustomAlgebra": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "class"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase.test_parse_can_use_iterable_from_alternative_tokenizer.CustomAlgebra.__init__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase.test_parse_can_use_iterable_from_alternative_tokenizer.CustomAlgebra.tokenize": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "boolean.TOKEN_AND",
    "boolean.TOKEN_LPAR",
    "boolean.TOKEN_NOT",
    "boolean.TOKEN_OR",
    "boolean.TOKEN_RPAR",
    "boolean.TOKEN_SYMBOL",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase.test_parse_can_use_iterable_from_alternative_tokenizer.CustomSymbol": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "boolean.Symbol"
   ]
  },
  "type": "class"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase.test_parse_raise_ParseError1": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "boolean.ParseError",
    "boolean.boolean.PARSE_UNKNOWN_TOKEN"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase.test_parse_raise_ParseError2": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "boolean.ParseError",
    "boolean.boolean.PARSE_UNKNOWN_TOKEN"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase.test_parse_raise_ParseError3": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "boolean.ParseError",
    "boolean.boolean.PARSE_UNKNOWN_TOKEN"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase.test_parse_raise_ParseError4": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "boolean.ParseError",
    "boolean.boolean.PARSE_UNKNOWN_TOKEN"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase.test_parse_raise_ParseError5": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "boolean.ParseError",
    "boolean.boolean.PARSE_UNKNOWN_TOKEN"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase.test_parse_raise_ParseError6": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "boolean.ParseError",
    "boolean.boolean.PARSE_UNKNOWN_TOKEN"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase.test_parse_raise_ParseError7": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "boolean.ParseError",
    "boolean.boolean.PARSE_UNKNOWN_TOKEN"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase.test_parse_raise_ParseError8": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "boolean.ParseError",
    "boolean.boolean.PARSE_INVALID_OPERATOR_SEQUENCE"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase.test_parse_raise_ParseError9": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "boolean.ParseError",
    "boolean.boolean.PARSE_INVALID_OPERATOR_SEQUENCE"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase.test_parse_recognizes_trueish_and_falsish_symbol_tokens": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase.test_parse_side_by_side_symbols_raise_exception": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "boolean.ParseError",
    "boolean.boolean.PARSE_INVALID_SYMBOL_SEQUENCE"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase.test_parse_side_by_side_symbols_should_raise_exception_but_not": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "boolean.ParseError",
    "boolean.boolean.PARSE_INVALID_SYMBOL_SEQUENCE"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase.test_parse_side_by_side_symbols_should_raise_exception_but_not2": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "boolean.ParseError",
    "boolean.boolean.PARSE_INVALID_EXPRESSION"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase.test_parse_side_by_side_symbols_with_parens_raise_exception": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "boolean.ParseError",
    "boolean.boolean.PARSE_INVALID_NESTING"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase.test_parse_with_advanced_tokenizer_example": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "AdvancedAlgebra",
    "ColonDotVar",
    "ImportError",
    "PlainVar"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase.test_parse_with_advanced_tokenizer_example.AdvancedAlgebra": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "class"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase.test_parse_with_advanced_tokenizer_example.AdvancedAlgebra.tokenize": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "StringIO.StringIO",
    "TypeError",
    "boolean.TOKEN_AND",
    "boolean.TOKEN_FALSE",
    "boolean.TOKEN_LPAR",
    "boolean.TOKEN_NOT",
    "boolean.TOKEN_OR",
    "boolean.TOKEN_RPAR",
    "boolean.TOKEN_TRUE",
    "boolean.test_boolean.basestring",
    "boolean.test_boolean.tokenize",
    "build_symbol",
    "isinstance",
    "locals",
    "type"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase.test_parse_with_advanced_tokenizer_example.AdvancedAlgebra.tokenize.build_symbol": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "ColonDotVar",
    "PlainVar",
    "any"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase.test_parse_with_advanced_tokenizer_example.ColonDotVar": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "boolean.Symbol"
   ]
  },
  "type": "class"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase.test_parse_with_advanced_tokenizer_example.PlainVar": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "boolean.Symbol"
   ]
  },
  "type": "class"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase.test_parse_with_mixed_operators_multilines_and_custom_symbol": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.BooleanAlgebraTestCase.test_parse_with_mixed_operators_multilines_and_custom_symbol.MySymbol": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "boolean.Symbol"
   ]
  },
  "type": "class"
 },
 "boolean.test_boolean.BooleanBoolTestCase": {
  "data": {
   "lineno": 1161,
   "symbols_in_volume": [
    "boolean.test_boolean.unittest"
   ]
  },
  "type": "class"
 },
 "boolean.test_boolean.BooleanBoolTestCase.test_bool": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.CustomSymbolTestCase": {
  "data": {
   "lineno": 1180,
   "symbols_in_volume": [
    "boolean.test_boolean.unittest"
   ]
  },
  "type": "class"
 },
 "boolean.test_boolean.CustomSymbolTestCase.test_custom_symbol": {
  "data": {
   "lineno": 1182,
   "symbols_in_volume": [
    "CustomSymbol",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.CustomSymbolTestCase.test_custom_symbol.CustomSymbol": {
  "data": {
   "lineno": 1183,
   "symbols_in_volume": [
    "boolean.Symbol"
   ]
  },
  "type": "class"
 },
 "boolean.test_boolean.CustomSymbolTestCase.test_custom_symbol.CustomSymbol.__init__": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.DualBase": {
  "data": {
   "shadows": "boolean.boolean.DualBase"
  },
  "type": "import"
 },
 "boolean.test_boolean.DualBaseTestCase": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "boolean.test_boolean.unittest"
   ]
  },
  "type": "class"
 },
 "boolean.test_boolean.DualBaseTestCase.test_annihilator": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.DualBaseTestCase.test_complex_expression_without_parens_parsed_or_built_in_python_should_be_identical": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "unittest.case.expectedFailure"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.DualBaseTestCase.test_distributive": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.DualBaseTestCase.test_dual": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.DualBaseTestCase.test_equal": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "boolean.Symbol",
    "boolean.boolean.DualBase"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.DualBaseTestCase.test_flatten": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "parse"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.DualBaseTestCase.test_identity": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.DualBaseTestCase.test_init": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "TypeError",
    "boolean.Symbol",
    "boolean.boolean.DualBase",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.DualBaseTestCase.test_isliteral": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "boolean.Symbol",
    "boolean.boolean.DualBase"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.DualBaseTestCase.test_literalize": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "parse"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.DualBaseTestCase.test_literals": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "boolean.Symbol",
    "boolean.boolean.DualBase"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.DualBaseTestCase.test_order": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.DualBaseTestCase.test_parse_complex_expression_should_create_same_expression_as_python": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "unittest.case.expectedFailure"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.DualBaseTestCase.test_parse_invalid_nested_and_should_raise_a_proper_exception": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "boolean.ParseError",
    "boolean.boolean.PARSE_INVALID_NESTING"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.DualBaseTestCase.test_printing": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "parse",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.DualBaseTestCase.test_simplify": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.DualBaseTestCase.test_simplify_complex_expression_parsed_then_simplified": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "parse",
    "str",
    "unittest.case.expectedFailure"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.DualBaseTestCase.test_simplify_complex_expression_parsed_with_simplify": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "unittest.case.expectedFailure"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.DualBaseTestCase.test_subtract": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "parse"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.NOTTestCase": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "boolean.test_boolean.unittest"
   ]
  },
  "type": "class"
 },
 "boolean.test_boolean.NOTTestCase.test_cancel": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.NOTTestCase.test_demorgan": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.NOTTestCase.test_init": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "TypeError",
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.NOTTestCase.test_isliteral": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.NOTTestCase.test_literalize": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "parse"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.NOTTestCase.test_literals": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "len"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.NOTTestCase.test_order": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.NOTTestCase.test_printing": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.NOTTestCase.test_simplify": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.OtherTestCase": {
  "data": {
   "lineno": 1030,
   "symbols_in_volume": [
    "boolean.test_boolean.unittest"
   ]
  },
  "type": "class"
 },
 "boolean.test_boolean.OtherTestCase.test_class_order": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "enumerate",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.OtherTestCase.test_get_literals_return_all_literals_in_original_order": {
  "data": {
   "lineno": 1130,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.OtherTestCase.test_get_symbols_return_all_symbols_in_original_order": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.OtherTestCase.test_literals_and_negation": {
  "data": {
   "lineno": 1145,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "set"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.OtherTestCase.test_literals_return_set_of_unique_literals": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "set"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.OtherTestCase.test_normalize": {
  "data": {
   "lineno": 1102,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.OtherTestCase.test_objects_return_set_of_unique_Symbol_objs": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "set"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.OtherTestCase.test_parse": {
  "data": {
   "lineno": 1049,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.OtherTestCase.test_subs": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.OtherTestCase.test_subs_default": {
  "data": {
   "lineno": 1093,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.OtherTestCase.test_symbols_and_negation": {
  "data": {
   "lineno": 1150,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra",
    "set"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.PARSE_INVALID_EXPRESSION": {
  "data": {
   "shadows": "boolean.boolean.PARSE_INVALID_EXPRESSION"
  },
  "type": "import"
 },
 "boolean.test_boolean.PARSE_INVALID_NESTING": {
  "data": {
   "shadows": "boolean.boolean.PARSE_INVALID_NESTING"
  },
  "type": "import"
 },
 "boolean.test_boolean.PARSE_INVALID_OPERATOR_SEQUENCE": {
  "data": {
   "shadows": "boolean.boolean.PARSE_INVALID_OPERATOR_SEQUENCE"
  },
  "type": "import"
 },
 "boolean.test_boolean.PARSE_INVALID_SYMBOL_SEQUENCE": {
  "data": {
   "shadows": "boolean.boolean.PARSE_INVALID_SYMBOL_SEQUENCE"
  },
  "type": "import"
 },
 "boolean.test_boolean.PARSE_UNKNOWN_TOKEN": {
  "data": {
   "shadows": "boolean.boolean.PARSE_UNKNOWN_TOKEN"
  },
  "type": "import"
 },
 "boolean.test_boolean.ParseError": {
  "data": {
   "shadows": "boolean.ParseError"
  },
  "type": "import"
 },
 "boolean.test_boolean.StringIO": {
  "data": {
   "shadows": "StringIO.StringIO"
  },
  "type": "import"
 },
 "boolean.test_boolean.Symbol": {
  "data": {
   "shadows": "boolean.Symbol"
  },
  "type": "import"
 },
 "boolean.test_boolean.SymbolTestCase": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "boolean.test_boolean.unittest"
   ]
  },
  "type": "class"
 },
 "boolean.test_boolean.SymbolTestCase.test_equal_symbols": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "boolean.BooleanAlgebra"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.SymbolTestCase.test_init": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "boolean.Symbol",
    "sum"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.SymbolTestCase.test_isliteral": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "boolean.Symbol"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.SymbolTestCase.test_literalize": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "boolean.Symbol"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.SymbolTestCase.test_literals": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "AttributeError",
    "boolean.Symbol",
    "setattr"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.SymbolTestCase.test_order": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "S",
    "boolean.Symbol"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.SymbolTestCase.test_printing": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "boolean.Symbol",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.SymbolTestCase.test_simplify": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "boolean.Symbol"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.SymbolTestCase.test_simplify_different_instances": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "boolean.Symbol"
   ]
  },
  "type": "function"
 },
 "boolean.test_boolean.TOKEN_AND": {
  "data": {
   "shadows": "boolean.TOKEN_AND"
  },
  "type": "import"
 },
 "boolean.test_boolean.TOKEN_FALSE": {
  "data": {
   "shadows": "boolean.TOKEN_FALSE"
  },
  "type": "import"
 },
 "boolean.test_boolean.TOKEN_LPAR": {
  "data": {
   "shadows": "boolean.TOKEN_LPAR"
  },
  "type": "import"
 },
 "boolean.test_boolean.TOKEN_NOT": {
  "data": {
   "shadows": "boolean.TOKEN_NOT"
  },
  "type": "import"
 },
 "boolean.test_boolean.TOKEN_OR": {
  "data": {
   "shadows": "boolean.TOKEN_OR"
  },
  "type": "import"
 },
 "boolean.test_boolean.TOKEN_RPAR": {
  "data": {
   "shadows": "boolean.TOKEN_RPAR"
  },
  "type": "import"
 },
 "boolean.test_boolean.TOKEN_SYMBOL": {
  "data": {
   "shadows": "boolean.TOKEN_SYMBOL"
  },
  "type": "import"
 },
 "boolean.test_boolean.TOKEN_TRUE": {
  "data": {
   "shadows": "boolean.TOKEN_TRUE"
  },
  "type": "import"
 },
 "boolean.test_boolean.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "boolean.test_boolean.basestring": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "boolean.test_boolean.expectedFailure": {
  "data": {
   "shadows": "unittest.case.expectedFailure"
  },
  "type": "import"
 },
 "boolean.test_boolean.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "boolean.test_boolean.tokenize": {
  "data": {
   "shadows": "tokenize"
  },
  "type": "import"
 },
 "boolean.test_boolean.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "boolean.test_boolean.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "boolean.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 }
}