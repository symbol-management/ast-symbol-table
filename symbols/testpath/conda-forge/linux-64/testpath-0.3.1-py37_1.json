{
 "testpath": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "testpath.asserts": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "testpath.asserts.Path": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "testpath.asserts._stat_for_assert": {
  "lineno": 27,
  "symbols_in_volume": [
   "os.lstat",
   "os.stat",
   "stat"
  ],
  "type": "function"
 },
 "testpath.asserts._strpath": {
  "lineno": 22,
  "symbols_in_volume": [
   "pathlib2.Path"
  ],
  "type": "function"
 },
 "testpath.asserts.assert_isdir": {
  "lineno": 76,
  "symbols_in_volume": [
   "stat.S_ISDIR"
  ],
  "type": "function"
 },
 "testpath.asserts.assert_isfile": {
  "lineno": 50,
  "symbols_in_volume": [
   "stat.S_ISREG"
  ],
  "type": "function"
 },
 "testpath.asserts.assert_islink": {
  "lineno": 110,
  "symbols_in_volume": [
   "os.readlink",
   "stat.S_ISLNK"
  ],
  "type": "function"
 },
 "testpath.asserts.assert_not_isdir": {
  "lineno": 89,
  "symbols_in_volume": [
   "stat.S_ISDIR"
  ],
  "type": "function"
 },
 "testpath.asserts.assert_not_isfile": {
  "lineno": 63,
  "symbols_in_volume": [
   "stat.S_ISREG"
  ],
  "type": "function"
 },
 "testpath.asserts.assert_not_islink": {
  "lineno": 131,
  "symbols_in_volume": [
   "stat.S_ISLNK"
  ],
  "type": "function"
 },
 "testpath.asserts.assert_not_path_exists": {
  "lineno": 41,
  "symbols_in_volume": [
   "os.path.exists"
  ],
  "type": "function"
 },
 "testpath.asserts.assert_path_exists": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "testpath.commands": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.dirname"
  ],
  "type": "module"
 },
 "testpath.commands.MockCommand": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "class"
 },
 "testpath.commands.MockCommand.__enter__": {
  "lineno": 76,
  "symbols_in_volume": [
   "os.chmod",
   "os.environ.split",
   "os.name",
   "os.path.isfile",
   "os.pathsep",
   "sys.executable",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "testpath.commands.MockCommand.__exit__": {
  "lineno": 102,
  "symbols_in_volume": [
   "os.listdir",
   "os.name",
   "os.path.join",
   "os.remove"
  ],
  "type": "function"
 },
 "testpath.commands.MockCommand.__init__": {
  "lineno": 51,
  "symbols_in_volume": [
   "os.close",
   "tempfile.mkdtemp",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "testpath.commands.MockCommand._cmd_path": {
  "lineno": 68,
  "symbols_in_volume": [
   "os.name",
   "os.path.join"
  ],
  "type": "function"
 },
 "testpath.commands.MockCommand._copy_exe": {
  "lineno": 62,
  "symbols_in_volume": [
   "os.path.join",
   "shutil.copy",
   "sys.maxsize"
  ],
  "type": "function"
 },
 "testpath.commands.MockCommand.get_calls": {
  "lineno": 109,
  "symbols_in_volume": [
   "json.loads",
   "os.path.isfile"
  ],
  "type": "function"
 },
 "testpath.commands.assert_calls": {
  "lineno": 130,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "testpath.commands.prepend_to_path": {
  "lineno": 15,
  "symbols_in_volume": [
   "os.environ",
   "os.pathsep"
  ],
  "type": "function"
 },
 "testpath.commands.remove_from_path": {
  "lineno": 18,
  "symbols_in_volume": [
   "os.environ",
   "os.environ.split",
   "os.pathsep",
   "os.pathsep.join"
  ],
  "type": "function"
 },
 "testpath.env": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "testpath.env.make_env_restorer": {
  "lineno": 65,
  "symbols_in_volume": [
   "os.environ.copy"
  ],
  "type": "function"
 },
 "testpath.env.make_env_restorer.restore": {
  "lineno": 79,
  "symbols_in_volume": [
   "os.environ.clear",
   "os.environ.update"
  ],
  "type": "function"
 },
 "testpath.env.modified_env": {
  "lineno": 22,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "os.environ.clear",
   "os.environ.copy",
   "os.environ.get",
   "os.environ.update"
  ],
  "type": "function"
 },
 "testpath.env.modified_env.update_del": {
  "lineno": 40,
  "symbols_in_volume": [
   "os.environ",
   "os.environ.pop"
  ],
  "type": "function"
 },
 "testpath.env.temporary_env": {
  "lineno": 4,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "os.environ.clear",
   "os.environ.copy",
   "os.environ.update"
  ],
  "type": "function"
 },
 "testpath.tempdir": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "testpath.tempdir.NamedFileInTemporaryDirectory": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "class"
 },
 "testpath.tempdir.NamedFileInTemporaryDirectory.__enter__": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "testpath.tempdir.NamedFileInTemporaryDirectory.__exit__": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "testpath.tempdir.NamedFileInTemporaryDirectory.__init__": {
  "lineno": 118,
  "symbols_in_volume": [
   "os.path.join",
   "tempfile.TemporaryDirectory"
  ],
  "type": "function"
 },
 "testpath.tempdir.NamedFileInTemporaryDirectory.cleanup": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "testpath.tempdir.TemporaryDirectory": {
  "lineno": 20,
  "symbols_in_volume": [
   "os.error",
   "os.listdir",
   "os.path.isdir",
   "os.path.join",
   "os.remove",
   "os.rmdir",
   "warnings.warn"
  ],
  "type": "class"
 },
 "testpath.tempdir.TemporaryDirectory.__del__": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "testpath.tempdir.TemporaryDirectory.__enter__": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "testpath.tempdir.TemporaryDirectory.__exit__": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "testpath.tempdir.TemporaryDirectory.__init__": {
  "lineno": 32,
  "symbols_in_volume": [
   "tempfile.mkdtemp",
   "tempfile.template"
  ],
  "type": "function"
 },
 "testpath.tempdir.TemporaryDirectory._rmtree": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "testpath.tempdir.TemporaryDirectory.cleanup": {
  "lineno": 39,
  "symbols_in_volume": [
   "sys.stderr"
  ],
  "type": "function"
 },
 "testpath.tempdir.TemporaryWorkingDirectory": {
  "lineno": 136,
  "symbols_in_volume": [
   "tempfile.TemporaryDirectory"
  ],
  "type": "class"
 },
 "testpath.tempdir.TemporaryWorkingDirectory.__enter__": {
  "lineno": 146,
  "symbols_in_volume": [
   "os.chdir",
   "os.getcwd"
  ],
  "type": "function"
 },
 "testpath.tempdir.TemporaryWorkingDirectory.__exit__": {
  "lineno": 151,
  "symbols_in_volume": [
   "os.chdir"
  ],
  "type": "function"
 }
}