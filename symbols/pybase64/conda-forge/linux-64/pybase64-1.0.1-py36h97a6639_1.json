{
 "pybase64": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "NameError",
    "pybase64.__PYBASE64_SETUP__"
   ]
  },
  "type": "module"
 },
 "pybase64.__PYBASE64_SETUP__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "pybase64.__main__": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pybase64.__main__.main"
   ]
  },
  "type": "module"
 },
 "pybase64.__main__.LicenseAction": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "pybase64.__main__.argparse"
   ]
  },
  "type": "class"
 },
 "pybase64.__main__.LicenseAction.__call__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "pybase64.__main__.LicenseAction.__init__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "help",
    "license",
    "pybase64.__main__.LicenseAction",
    "pybase64.__main__.argparse",
    "super"
   ]
  },
  "type": "function"
 },
 "pybase64.__main__.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "pybase64.__main__.b64decodeValidate": {
  "data": {
   "shadows": "base64.b64decode"
  },
  "type": "import"
 },
 "pybase64.__main__.b64encodebytes": {
  "data": {
   "shadows": "base64.encodebytes"
  },
  "type": "import"
 },
 "pybase64.__main__.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "pybase64.__main__.bench_one": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "dec",
    "dec.__module__",
    "dec.__name__",
    "enc",
    "enc.__module__",
    "enc.__name__",
    "encbytes",
    "encbytes.__module__",
    "encbytes.__name__",
    "iter",
    "len",
    "print",
    "timeit.default_timer"
   ]
  },
  "type": "function"
 },
 "pybase64.__main__.benchmark": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "__package__",
    "base64.b64decode",
    "base64.encodebytes",
    "print",
    "pybase64.__main__.base64",
    "pybase64.__main__.bench_one",
    "pybase64.__main__.pybase64",
    "pybase64.__main__.readall",
    "repr"
   ]
  },
  "type": "function"
 },
 "pybase64.__main__.decode": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "pybase64.__main__.pybase64",
    "pybase64.__main__.readall",
    "pybase64.__main__.writeall"
   ]
  },
  "type": "function"
 },
 "pybase64.__main__.encode": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "pybase64.__main__.pybase64",
    "pybase64.__main__.readall",
    "pybase64.__main__.writeall"
   ]
  },
  "type": "function"
 },
 "pybase64.__main__.main": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "__package__",
    "float",
    "len",
    "pybase64.__main__.LicenseAction",
    "pybase64.__main__.argparse",
    "pybase64.__main__.benchmark",
    "pybase64.__main__.decode",
    "pybase64.__main__.encode",
    "pybase64.__main__.pybase64",
    "pybase64.__main__.sys"
   ]
  },
  "type": "function"
 },
 "pybase64.__main__.pybase64": {
  "data": {
   "shadows": "pybase64"
  },
  "type": "import"
 },
 "pybase64.__main__.readall": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "hasattr",
    "pybase64.__main__.sys"
   ]
  },
  "type": "function"
 },
 "pybase64.__main__.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pybase64.__main__.timer": {
  "data": {
   "shadows": "timeit.default_timer"
  },
  "type": "import"
 },
 "pybase64.__main__.writeall": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "hasattr",
    "pybase64.__main__.sys"
   ]
  },
  "type": "function"
 },
 "pybase64._fallback": {
  "data": {
   "symbols_in_volume": [
    "bytearray",
    "bytes"
   ]
  },
  "type": "module"
 },
 "pybase64._fallback.BinAsciiError": {
  "data": {
   "shadows": "binascii.Error"
  },
  "type": "import"
 },
 "pybase64._fallback.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "pybase64._fallback._bytes_types": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pybase64._fallback._get_bytes": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "TypeError",
    "UnicodeEncodeError",
    "ValueError",
    "isinstance",
    "memoryview",
    "pybase64._fallback._bytes_types",
    "str"
   ]
  },
  "type": "function"
 },
 "pybase64._fallback.b64decode": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "TypeError",
    "base64.b64decode",
    "binascii.Error",
    "bytes.maketrans",
    "len",
    "map",
    "pybase64._fallback._get_bytes",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pybase64._fallback.b64encode": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "base64.b64encode",
    "len",
    "pybase64._fallback._get_bytes",
    "repr"
   ]
  },
  "type": "function"
 },
 "pybase64._fallback.builtin_decode": {
  "data": {
   "shadows": "base64.b64decode"
  },
  "type": "import"
 },
 "pybase64._fallback.builtin_encode": {
  "data": {
   "shadows": "base64.b64encode"
  },
  "type": "import"
 },
 "pybase64._fallback.builtin_encodebytes": {
  "data": {
   "shadows": "base64.encodebytes"
  },
  "type": "import"
 },
 "pybase64._fallback.encodebytes": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "base64.encodebytes"
   ]
  },
  "type": "function"
 },
 "pybase64._has_extension": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pybase64._license": {
  "data": {},
  "type": "module"
 },
 "pybase64._license._license": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pybase64._version": {
  "data": {},
  "type": "module"
 },
 "pybase64._version.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pybase64.distutils": {
  "data": {},
  "type": "module"
 },
 "pybase64.distutils.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pybase64.distutils.ccompilercapabilities": {
  "data": {},
  "type": "module"
 },
 "pybase64.distutils.ccompilercapabilities.CCompilerCapabilities": {
  "data": {
   "lineno": 52
  },
  "type": "class"
 },
 "pybase64.distutils.ccompilercapabilities.CCompilerCapabilities.__get_capabilities": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "distutils.log.info",
    "pybase64.distutils.ccompilercapabilities.CCompilerCapabilities",
    "str"
   ]
  },
  "type": "function"
 },
 "pybase64.distutils.ccompilercapabilities.CCompilerCapabilities.__has_simd_support": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "TypeError",
    "distutils.errors.CompileError",
    "distutils.errors.LinkError",
    "len",
    "open",
    "pybase64.distutils.ccompilercapabilities.mkdtemp",
    "pybase64.distutils.ccompilercapabilities.os",
    "pybase64.distutils.ccompilercapabilities.output"
   ]
  },
  "type": "function"
 },
 "pybase64.distutils.ccompilercapabilities.CCompilerCapabilities.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "pybase64.distutils.ccompilercapabilities.CCompilerCapabilities.flags": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "pybase64.distutils.ccompilercapabilities.CCompilerCapabilities.has": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "pybase64.distutils.ccompilercapabilities.CompileError": {
  "data": {
   "shadows": "distutils.errors.CompileError"
  },
  "type": "import"
 },
 "pybase64.distutils.ccompilercapabilities.LinkError": {
  "data": {
   "shadows": "distutils.errors.LinkError"
  },
  "type": "import"
 },
 "pybase64.distutils.ccompilercapabilities.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pybase64.distutils.ccompilercapabilities.chdir": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "pybase64.distutils.ccompilercapabilities.os"
   ]
  },
  "type": "function"
 },
 "pybase64.distutils.ccompilercapabilities.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "pybase64.distutils.ccompilercapabilities.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "pybase64.distutils.ccompilercapabilities.mkdtemp": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "pybase64.distutils.ccompilercapabilities.chdir",
    "pybase64.distutils.ccompilercapabilities.shutil",
    "pybase64.distutils.ccompilercapabilities.tempfile"
   ]
  },
  "type": "function"
 },
 "pybase64.distutils.ccompilercapabilities.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pybase64.distutils.ccompilercapabilities.output": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "open",
    "pybase64.distutils.ccompilercapabilities.os",
    "pybase64.distutils.ccompilercapabilities.sys"
   ]
  },
  "type": "function"
 },
 "pybase64.distutils.ccompilercapabilities.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pybase64.distutils.ccompilercapabilities.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pybase64.distutils.ccompilercapabilities.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pybase64.get_license_text": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "pybase64.get_version": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "_get_simd_path",
    "pybase64._has_extension"
   ]
  },
  "type": "function"
 },
 "pybase64.standard_b64decode": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "b64decode"
   ]
  },
  "type": "function"
 },
 "pybase64.standard_b64encode": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "b64encode"
   ]
  },
  "type": "function"
 },
 "pybase64.tests": {
  "data": {},
  "type": "module"
 },
 "pybase64.tests.test_main": {
  "data": {},
  "type": "module"
 },
 "pybase64.tests.test_main.emptyfile": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "open",
    "pybase64.tests.test_main.os",
    "pybase64.tests.test_main.pytest"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_main.hellofile": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "open",
    "pybase64.tests.test_main.os",
    "pybase64.tests.test_main.pytest"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_main.idfn_test_help": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_main.main": {
  "data": {
   "shadows": "pybase64.__main__.main"
  },
  "type": "import"
 },
 "pybase64.tests.test_main.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pybase64.tests.test_main.pybase64": {
  "data": {
   "shadows": "pybase64"
  },
  "type": "import"
 },
 "pybase64.tests.test_main.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pybase64.tests.test_main.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pybase64.tests.test_main.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pybase64.tests.test_main.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pybase64.tests.test_main.test_benchmark": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "pybase64.__main__.main",
    "pybase64.tests.test_main.emptyfile"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_main.test_decode": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "open",
    "pybase64.__main__.main",
    "pybase64.tests.test_main.os",
    "pybase64.tests.test_main.pytest"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_main.test_encode": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "pybase64.__main__.main",
    "pybase64.tests.test_main.hellofile",
    "pybase64.tests.test_main.pytest"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_main.test_encode_ouputfile": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "open",
    "pybase64.__main__.main",
    "pybase64.tests.test_main.emptyfile",
    "pybase64.tests.test_main.hellofile"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_main.test_help": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "SystemExit",
    "len",
    "pybase64.__main__.main",
    "pybase64.tests.test_main.idfn_test_help",
    "pybase64.tests.test_main.pytest"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_main.test_license": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "SystemExit",
    "pybase64.__main__.main",
    "pybase64.tests.test_main.pytest",
    "pybase64.tests.test_main.re"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_main.test_subprocess": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "pybase64.tests.test_main.subprocess",
    "pybase64.tests.test_main.sys"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_main.test_version": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "SystemExit",
    "pybase64.__main__.main",
    "pybase64.tests.test_main.pybase64",
    "pybase64.tests.test_main.pytest"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_pybase64": {
  "data": {
   "symbols_in_volume": [
    "AssertionError",
    "ImportError",
    "TypeError",
    "ValueError",
    "binascii.Error",
    "bytes.maketrans",
    "len",
    "pybase64._pybase64._get_simd_flags_compile",
    "pybase64._pybase64._get_simd_flags_runtime",
    "pybase64.tests.test_pybase64.ALT1",
    "pybase64.tests.test_pybase64.ALT2",
    "pybase64.tests.test_pybase64.ALT3",
    "pybase64.tests.test_pybase64.STD",
    "pybase64.tests.test_pybase64.URL",
    "pybase64.tests.test_pybase64._has_extension",
    "pybase64.tests.test_pybase64.altchars_lut",
    "pybase64.tests.test_pybase64.base64",
    "pybase64.tests.test_pybase64.compile_flags",
    "pybase64.tests.test_pybase64.flags",
    "pybase64.tests.test_pybase64.get_simd_name",
    "pybase64.tests.test_pybase64.name_lut",
    "pybase64.tests.test_pybase64.params_invalid_data_novalidate",
    "pybase64.tests.test_pybase64.params_invalid_data_validate",
    "pybase64.tests.test_pybase64.pybase64",
    "pybase64.tests.test_pybase64.pytest",
    "pybase64.tests.test_pybase64.std",
    "pybase64.tests.test_pybase64.test_vectors_b64",
    "pybase64.tests.test_pybase64.test_vectors_b64_list",
    "pybase64.tests.test_pybase64.test_vectors_bin",
    "pybase64.tests.test_pybase64.trans",
    "range",
    "str"
   ]
  },
  "type": "module"
 },
 "pybase64.tests.test_pybase64.ALT1": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pybase64.tests.test_pybase64.ALT2": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pybase64.tests.test_pybase64.ALT3": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pybase64.tests.test_pybase64.BinAsciiError": {
  "data": {
   "shadows": "binascii.Error"
  },
  "type": "import"
 },
 "pybase64.tests.test_pybase64.STD": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pybase64.tests.test_pybase64.URL": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pybase64.tests.test_pybase64._get_simd_flags_compile": {
  "data": {
   "shadows": "pybase64._pybase64._get_simd_flags_compile"
  },
  "type": "import"
 },
 "pybase64.tests.test_pybase64._get_simd_flags_runtime": {
  "data": {
   "shadows": "pybase64._pybase64._get_simd_flags_runtime"
  },
  "type": "import"
 },
 "pybase64.tests.test_pybase64._get_simd_path": {
  "data": {
   "shadows": "pybase64._pybase64._get_simd_path"
  },
  "type": "import"
 },
 "pybase64.tests.test_pybase64._has_extension": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pybase64.tests.test_pybase64._set_simd_path": {
  "data": {
   "shadows": "pybase64._pybase64._set_simd_path"
  },
  "type": "import"
 },
 "pybase64.tests.test_pybase64.altchars_lut": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pybase64.tests.test_pybase64.b64encodebytes": {
  "data": {
   "shadows": "base64.encodebytes"
  },
  "type": "import"
 },
 "pybase64.tests.test_pybase64.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "pybase64.tests.test_pybase64.compile_flags": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "pybase64.tests.test_pybase64.dec_helper_lut": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pybase64.tests.test_pybase64.enc_helper_lut": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pybase64.tests.test_pybase64.flags": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "pybase64.tests.test_pybase64.get_simd_name": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "pybase64.tests.test_pybase64._has_extension",
    "pybase64.tests.test_pybase64.compile_flags"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_pybase64.name_lut": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pybase64.tests.test_pybase64.param_altchars": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "pybase64.tests.test_pybase64.param_altchars_helper": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "pybase64.tests.test_pybase64.param_simd": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "pybase64.tests.test_pybase64.param_validate": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "pybase64.tests.test_pybase64.param_vector": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "pybase64.tests.test_pybase64.params_invalid_altchars": {
  "data": {
   "lineno": 323
  },
  "type": "constant"
 },
 "pybase64.tests.test_pybase64.params_invalid_data_all": {
  "data": {
   "lineno": 366
  },
  "type": "constant"
 },
 "pybase64.tests.test_pybase64.params_invalid_data_novalidate": {
  "data": {
   "lineno": 372
  },
  "type": "constant"
 },
 "pybase64.tests.test_pybase64.params_invalid_data_validate": {
  "data": {
   "lineno": 377
  },
  "type": "constant"
 },
 "pybase64.tests.test_pybase64.pybase64": {
  "data": {
   "shadows": "pybase64"
  },
  "type": "import"
 },
 "pybase64.tests.test_pybase64.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pybase64.tests.test_pybase64.ref_dec_helper_lut": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pybase64.tests.test_pybase64.ref_enc_helper_lut": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pybase64.tests.test_pybase64.runtime_flags": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "pybase64.tests.test_pybase64.simd": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "pybase64.tests.test_pybase64.pytest",
    "pybase64.tests.test_pybase64.simd_setup"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_pybase64.simd_setup": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "pybase64._pybase64._get_simd_path",
    "pybase64._pybase64._set_simd_path",
    "pybase64.tests.test_pybase64._has_extension",
    "pybase64.tests.test_pybase64.compile_flags",
    "pybase64.tests.test_pybase64.pytest",
    "pybase64.tests.test_pybase64.runtime_flags"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_pybase64.std": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "pybase64.tests.test_pybase64.test_dec": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "pybase64.tests.test_pybase64.altchars_lut",
    "pybase64.tests.test_pybase64.base64",
    "pybase64.tests.test_pybase64.param_altchars",
    "pybase64.tests.test_pybase64.param_simd",
    "pybase64.tests.test_pybase64.param_validate",
    "pybase64.tests.test_pybase64.param_vector",
    "pybase64.tests.test_pybase64.pybase64",
    "pybase64.tests.test_pybase64.test_vectors_b64"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_pybase64.test_dec_helper": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "pybase64.tests.test_pybase64.dec_helper_lut",
    "pybase64.tests.test_pybase64.param_altchars_helper",
    "pybase64.tests.test_pybase64.param_simd",
    "pybase64.tests.test_pybase64.param_vector",
    "pybase64.tests.test_pybase64.ref_dec_helper_lut",
    "pybase64.tests.test_pybase64.test_vectors_b64"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_pybase64.test_dec_helper_unicode": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "pybase64.tests.test_pybase64.dec_helper_lut",
    "pybase64.tests.test_pybase64.param_altchars_helper",
    "pybase64.tests.test_pybase64.param_simd",
    "pybase64.tests.test_pybase64.param_vector",
    "pybase64.tests.test_pybase64.ref_dec_helper_lut",
    "pybase64.tests.test_pybase64.test_vectors_b64",
    "str"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_pybase64.test_dec_unicode": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "pybase64.tests.test_pybase64.STD",
    "pybase64.tests.test_pybase64.altchars_lut",
    "pybase64.tests.test_pybase64.base64",
    "pybase64.tests.test_pybase64.param_altchars",
    "pybase64.tests.test_pybase64.param_simd",
    "pybase64.tests.test_pybase64.param_validate",
    "pybase64.tests.test_pybase64.param_vector",
    "pybase64.tests.test_pybase64.pybase64",
    "pybase64.tests.test_pybase64.test_vectors_b64",
    "str"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_pybase64.test_enc": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "pybase64.tests.test_pybase64.altchars_lut",
    "pybase64.tests.test_pybase64.base64",
    "pybase64.tests.test_pybase64.param_altchars",
    "pybase64.tests.test_pybase64.param_simd",
    "pybase64.tests.test_pybase64.param_vector",
    "pybase64.tests.test_pybase64.pybase64",
    "pybase64.tests.test_pybase64.test_vectors_bin"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_pybase64.test_enc_helper": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "pybase64.tests.test_pybase64.enc_helper_lut",
    "pybase64.tests.test_pybase64.param_altchars_helper",
    "pybase64.tests.test_pybase64.param_simd",
    "pybase64.tests.test_pybase64.param_vector",
    "pybase64.tests.test_pybase64.ref_enc_helper_lut",
    "pybase64.tests.test_pybase64.test_vectors_bin"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_pybase64.test_encbytes": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "base64.encodebytes",
    "pybase64.tests.test_pybase64.STD",
    "pybase64.tests.test_pybase64.param_simd",
    "pybase64.tests.test_pybase64.param_vector",
    "pybase64.tests.test_pybase64.pybase64",
    "pybase64.tests.test_pybase64.test_vectors_bin"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_pybase64.test_invalid_altchars_dec": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "pybase64.tests.test_pybase64.param_simd",
    "pybase64.tests.test_pybase64.params_invalid_altchars",
    "pybase64.tests.test_pybase64.pybase64",
    "pybase64.tests.test_pybase64.pytest"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_pybase64.test_invalid_altchars_dec_validate": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "pybase64.tests.test_pybase64.param_simd",
    "pybase64.tests.test_pybase64.params_invalid_altchars",
    "pybase64.tests.test_pybase64.pybase64",
    "pybase64.tests.test_pybase64.pytest"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_pybase64.test_invalid_altchars_enc": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "pybase64.tests.test_pybase64.param_simd",
    "pybase64.tests.test_pybase64.params_invalid_altchars",
    "pybase64.tests.test_pybase64.pybase64",
    "pybase64.tests.test_pybase64.pytest"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_pybase64.test_invalid_args_dec_0": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "TypeError",
    "pybase64.tests.test_pybase64.pybase64",
    "pybase64.tests.test_pybase64.pytest"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_pybase64.test_invalid_args_enc_0": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "TypeError",
    "pybase64.tests.test_pybase64.pybase64",
    "pybase64.tests.test_pybase64.pytest"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_pybase64.test_invalid_data_dec": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "pybase64.tests.test_pybase64.param_simd",
    "pybase64.tests.test_pybase64.params_invalid_data_novalidate",
    "pybase64.tests.test_pybase64.pybase64",
    "pybase64.tests.test_pybase64.pytest"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_pybase64.test_invalid_data_dec_skip": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "pybase64.tests.test_pybase64.base64",
    "pybase64.tests.test_pybase64.param_simd",
    "pybase64.tests.test_pybase64.params_invalid_data_validate",
    "pybase64.tests.test_pybase64.pybase64"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_pybase64.test_invalid_data_dec_validate": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "pybase64.tests.test_pybase64.param_simd",
    "pybase64.tests.test_pybase64.params_invalid_data_all",
    "pybase64.tests.test_pybase64.pybase64",
    "pybase64.tests.test_pybase64.pytest"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_pybase64.test_invalid_data_enc_0": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "TypeError",
    "pybase64.tests.test_pybase64.pybase64",
    "pybase64.tests.test_pybase64.pytest"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_pybase64.test_invalid_padding_dec": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "binascii.Error",
    "len",
    "pybase64.tests.test_pybase64.altchars_lut",
    "pybase64.tests.test_pybase64.param_altchars",
    "pybase64.tests.test_pybase64.param_simd",
    "pybase64.tests.test_pybase64.param_validate",
    "pybase64.tests.test_pybase64.param_vector",
    "pybase64.tests.test_pybase64.pybase64",
    "pybase64.tests.test_pybase64.pytest",
    "pybase64.tests.test_pybase64.test_vectors_b64"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_pybase64.test_rnd": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "pybase64.tests.test_pybase64.altchars_lut",
    "pybase64.tests.test_pybase64.param_altchars",
    "pybase64.tests.test_pybase64.param_simd",
    "pybase64.tests.test_pybase64.param_validate",
    "pybase64.tests.test_pybase64.param_vector",
    "pybase64.tests.test_pybase64.pybase64",
    "pybase64.tests.test_pybase64.test_vectors_b64"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_pybase64.test_rnd_helper": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "pybase64.tests.test_pybase64.dec_helper_lut",
    "pybase64.tests.test_pybase64.enc_helper_lut",
    "pybase64.tests.test_pybase64.param_altchars_helper",
    "pybase64.tests.test_pybase64.param_simd",
    "pybase64.tests.test_pybase64.param_vector",
    "pybase64.tests.test_pybase64.test_vectors_b64"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_pybase64.test_rnd_helper_unicode": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "pybase64.tests.test_pybase64.dec_helper_lut",
    "pybase64.tests.test_pybase64.enc_helper_lut",
    "pybase64.tests.test_pybase64.param_altchars_helper",
    "pybase64.tests.test_pybase64.param_simd",
    "pybase64.tests.test_pybase64.param_vector",
    "pybase64.tests.test_pybase64.test_vectors_b64",
    "str"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_pybase64.test_rnd_unicode": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "pybase64.tests.test_pybase64.altchars_lut",
    "pybase64.tests.test_pybase64.param_altchars",
    "pybase64.tests.test_pybase64.param_simd",
    "pybase64.tests.test_pybase64.param_validate",
    "pybase64.tests.test_pybase64.param_vector",
    "pybase64.tests.test_pybase64.pybase64",
    "pybase64.tests.test_pybase64.test_vectors_b64",
    "str"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_pybase64.test_vectors_b64": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "pybase64.tests.test_pybase64.test_vectors_b64_list": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "pybase64.tests.test_pybase64.test_vectors_bin": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "pybase64.tests.test_pybase64.test_version": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "pybase64.tests.test_pybase64.param_simd",
    "pybase64.tests.test_pybase64.pybase64"
   ]
  },
  "type": "function"
 },
 "pybase64.tests.test_pybase64.trans": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "pybase64.urlsafe_b64decode": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "b64decode"
   ]
  },
  "type": "function"
 },
 "pybase64.urlsafe_b64encode": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "b64encode"
   ]
  },
  "type": "function"
 }
}