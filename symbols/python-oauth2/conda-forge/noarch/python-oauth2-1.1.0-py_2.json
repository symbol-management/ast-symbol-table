{
 "oauth2": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "oauth2.Provider": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.Provider.__init__": {
  "lineno": 69,
  "symbols_in_volume": [
   "oauth2.client_authenticator.ClientAuthenticator",
   "oauth2.client_authenticator.request_body",
   "oauth2.web.Response"
  ],
  "type": "function"
 },
 "oauth2.Provider._determine_grant_type": {
  "lineno": 175,
  "symbols_in_volume": [
   "oauth2.error.UnsupportedGrantError"
  ],
  "type": "function"
 },
 "oauth2.Provider.add_grant": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.Provider.dispatch": {
  "lineno": 99,
  "symbols_in_volume": [
   "json.dumps",
   "oauth2.error.OAuthInvalidError",
   "oauth2.error.OAuthInvalidNoRedirectError",
   "oauth2.error.UnsupportedGrantError",
   "oauth2.log.app_log.error"
  ],
  "type": "function"
 },
 "oauth2.Provider.enable_unique_tokens": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.Provider.scope_separator": {
  "lineno": 158,
  "symbols_in_volume": [
   "oauth2.grant.Scope.separator"
  ],
  "type": "function"
 },
 "oauth2.client_authenticator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "oauth2.client_authenticator.ClientAuthenticator": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.client_authenticator.ClientAuthenticator.__init__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.client_authenticator.ClientAuthenticator.by_identifier": {
  "lineno": 29,
  "symbols_in_volume": [
   "oauth2.error.ClientNotFoundError",
   "oauth2.error.OAuthInvalidNoRedirectError",
   "oauth2.error.RedirectUriUnknown"
  ],
  "type": "function"
 },
 "oauth2.client_authenticator.ClientAuthenticator.by_identifier_secret": {
  "lineno": 61,
  "symbols_in_volume": [
   "oauth2.error.ClientNotFoundError",
   "oauth2.error.OAuthInvalidError"
  ],
  "type": "function"
 },
 "oauth2.client_authenticator.http_basic_auth": {
  "lineno": 123,
  "symbols_in_volume": [
   "base64.b64decode",
   "oauth2.error.OAuthInvalidError"
  ],
  "type": "function"
 },
 "oauth2.client_authenticator.request_body": {
  "lineno": 96,
  "symbols_in_volume": [
   "oauth2.error.OAuthInvalidError"
  ],
  "type": "function"
 },
 "oauth2.compatibility": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "oauth2.datatype": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "oauth2.datatype.AccessToken": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.datatype.AccessToken.__init__": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.datatype.AccessToken.expires_in": {
  "lineno": 27,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "oauth2.datatype.AccessToken.is_expired": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.datatype.AuthorizationCode": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.datatype.AuthorizationCode.__init__": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.datatype.AuthorizationCode.is_expired": {
  "lineno": 70,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "oauth2.datatype.Client": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.datatype.Client.__init__": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.datatype.Client.grant_type_supported": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.datatype.Client.redirect_uri": {
  "lineno": 116,
  "symbols_in_volume": [
   "oauth2.error.RedirectUriUnknown"
  ],
  "type": "function"
 },
 "oauth2.datatype.Client.response_type_supported": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.error": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "oauth2.error.AccessTokenNotFound": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.error.AuthCodeNotFound": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.error.ClientNotFoundError": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.error.InvalidSiteAdapter": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.error.OAuthBaseError": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.error.OAuthBaseError.__init__": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.error.OAuthInvalidError": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.error.OAuthInvalidNoRedirectError": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.error.RedirectUriUnknown": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.error.UnsupportedGrantError": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.error.UserIdentifierMissingError": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.error.UserNotAuthenticated": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.grant": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "oauth2.grant.AccessTokenMixin": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.grant.AccessTokenMixin.__init__": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.AccessTokenMixin.create_token": {
  "lineno": 340,
  "symbols_in_volume": [
   "oauth2.datatype.AccessToken",
   "oauth2.error.AccessTokenNotFound",
   "oauth2.error.UserIdentifierMissingError",
   "time.time"
  ],
  "type": "function"
 },
 "oauth2.grant.AuthRequestMixin": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.grant.AuthRequestMixin.__init__": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.AuthRequestMixin.read_validate_params": {
  "lineno": 262,
  "symbols_in_volume": [
   "oauth2.error.OAuthInvalidError"
  ],
  "type": "function"
 },
 "oauth2.grant.AuthorizationCodeAuthHandler": {
  "lineno": 407,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.grant.AuthorizationCodeAuthHandler.__init__": {
  "lineno": 416,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.AuthorizationCodeAuthHandler._generate_location": {
  "lineno": 467,
  "symbols_in_volume": [
   "oauth2.compatibility.quote"
  ],
  "type": "function"
 },
 "oauth2.grant.AuthorizationCodeAuthHandler.handle_error": {
  "lineno": 451,
  "symbols_in_volume": [
   "oauth2.compatibility.urlencode"
  ],
  "type": "function"
 },
 "oauth2.grant.AuthorizationCodeAuthHandler.process": {
  "lineno": 421,
  "symbols_in_volume": [
   "oauth2.datatype.AuthorizationCode",
   "oauth2.web.Response",
   "time.time"
  ],
  "type": "function"
 },
 "oauth2.grant.AuthorizationCodeGrant": {
  "lineno": 584,
  "symbols_in_volume": [
   "oauth2.web.AuthorizationCodeGrantSiteAdapter"
  ],
  "type": "class"
 },
 "oauth2.grant.AuthorizationCodeGrant.__call__": {
  "lineno": 612,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.AuthorizationCodeGrant.__init__": {
  "lineno": 606,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.AuthorizationCodeTokenHandler": {
  "lineno": 476,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.grant.AuthorizationCodeTokenHandler.__init__": {
  "lineno": 482,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.AuthorizationCodeTokenHandler._read_params": {
  "lineno": 539,
  "symbols_in_volume": [
   "oauth2.error.OAuthInvalidError",
   "oauth2.error.RedirectUriUnknown"
  ],
  "type": "function"
 },
 "oauth2.grant.AuthorizationCodeTokenHandler._validate_code": {
  "lineno": 556,
  "symbols_in_volume": [
   "oauth2.error.AuthCodeNotFound",
   "oauth2.error.OAuthInvalidError"
  ],
  "type": "function"
 },
 "oauth2.grant.AuthorizationCodeTokenHandler.handle_error": {
  "lineno": 536,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.AuthorizationCodeTokenHandler.process": {
  "lineno": 512,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.AuthorizationCodeTokenHandler.read_validate_params": {
  "lineno": 495,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.AuthorizeMixin": {
  "lineno": 282,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.grant.AuthorizeMixin.__init__": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.AuthorizeMixin.authorize": {
  "lineno": 292,
  "symbols_in_volume": [
   "oauth2.error.OAuthInvalidError",
   "oauth2.error.UserNotAuthenticated"
  ],
  "type": "function"
 },
 "oauth2.grant.AuthorizeMixin.sanitize_return_value": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.ClientCredentialsGrant": {
  "lineno": 1021,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.grant.ClientCredentialsGrant.__call__": {
  "lineno": 1024,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.ClientCredentialsHandler": {
  "lineno": 1037,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.grant.ClientCredentialsHandler.__init__": {
  "lineno": 1038,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.ClientCredentialsHandler.handle_error": {
  "lineno": 1082,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.ClientCredentialsHandler.process": {
  "lineno": 1047,
  "symbols_in_volume": [
   "oauth2.datatype.AccessToken",
   "time.time"
  ],
  "type": "function"
 },
 "oauth2.grant.ClientCredentialsHandler.read_validate_params": {
  "lineno": 1077,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.GrantHandler": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.grant.GrantHandler.handle_error": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.GrantHandler.process": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.GrantHandler.read_validate_params": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.GrantHandlerFactory": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.grant.GrantHandlerFactory.__call__": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.ImplicitGrant": {
  "lineno": 648,
  "symbols_in_volume": [
   "oauth2.web.ImplicitGrantSiteAdapter"
  ],
  "type": "class"
 },
 "oauth2.grant.ImplicitGrant.__call__": {
  "lineno": 669,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.ImplicitGrantHandler": {
  "lineno": 683,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.grant.ImplicitGrantHandler.__init__": {
  "lineno": 684,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.ImplicitGrantHandler._redirect_access_token": {
  "lineno": 717,
  "symbols_in_volume": [
   "oauth2.compatibility.quote"
  ],
  "type": "function"
 },
 "oauth2.grant.ImplicitGrantHandler.handle_error": {
  "lineno": 707,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.ImplicitGrantHandler.process": {
  "lineno": 689,
  "symbols_in_volume": [
   "oauth2.datatype.AccessToken",
   "oauth2.web.Response"
  ],
  "type": "function"
 },
 "oauth2.grant.RefreshToken": {
  "lineno": 866,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.grant.RefreshToken.__call__": {
  "lineno": 894,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.RefreshToken.__init__": {
  "lineno": 887,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.RefreshTokenHandler": {
  "lineno": 915,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.grant.RefreshTokenHandler.__init__": {
  "lineno": 920,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.RefreshTokenHandler.handle_error": {
  "lineno": 1017,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.RefreshTokenHandler.process": {
  "lineno": 936,
  "symbols_in_volume": [
   "oauth2.datatype.AccessToken",
   "time.time"
  ],
  "type": "function"
 },
 "oauth2.grant.RefreshTokenHandler.read_validate_params": {
  "lineno": 973,
  "symbols_in_volume": [
   "oauth2.error.AccessTokenNotFound",
   "oauth2.error.OAuthInvalidError",
   "time.time"
  ],
  "type": "function"
 },
 "oauth2.grant.ResourceOwnerGrant": {
  "lineno": 736,
  "symbols_in_volume": [
   "oauth2.web.ResourceOwnerGrantSiteAdapter"
  ],
  "type": "class"
 },
 "oauth2.grant.ResourceOwnerGrant.__call__": {
  "lineno": 765,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.ResourceOwnerGrant.__init__": {
  "lineno": 759,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.ResourceOwnerGrantHandler": {
  "lineno": 782,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.grant.ResourceOwnerGrantHandler.__init__": {
  "lineno": 791,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.ResourceOwnerGrantHandler.handle_error": {
  "lineno": 858,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.ResourceOwnerGrantHandler.process": {
  "lineno": 813,
  "symbols_in_volume": [
   "oauth2.error.OAuthInvalidError",
   "oauth2.error.UserNotAuthenticated",
   "oauth2.web.Response"
  ],
  "type": "function"
 },
 "oauth2.grant.ResourceOwnerGrantHandler.read_validate_params": {
  "lineno": 845,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.ResponseTypeGrant": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.grant.ResponseTypeGrant.error_response": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.Scope": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.grant.Scope.__init__": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.Scope.compare": {
  "lineno": 113,
  "symbols_in_volume": [
   "oauth2.error.OAuthInvalidError"
  ],
  "type": "function"
 },
 "oauth2.grant.Scope.parse": {
  "lineno": 128,
  "symbols_in_volume": [
   "oauth2.error.OAuthInvalidError"
  ],
  "type": "function"
 },
 "oauth2.grant.ScopeGrant": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.grant.ScopeGrant.__init__": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.ScopeGrant._create_scope_handler": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.grant.SiteAdapterMixin": {
  "lineno": 386,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.grant.SiteAdapterMixin.__init__": {
  "lineno": 395,
  "symbols_in_volume": [
   "oauth2.error.InvalidSiteAdapter"
  ],
  "type": "function"
 },
 "oauth2.grant.encode_scopes": {
  "lineno": 41,
  "symbols_in_volume": [
   "oauth2.compatibility.quote"
  ],
  "type": "function"
 },
 "oauth2.grant.json_error_response": {
  "lineno": 56,
  "symbols_in_volume": [
   "json.dumps"
  ],
  "type": "function"
 },
 "oauth2.grant.json_success_response": {
  "lineno": 69,
  "symbols_in_volume": [
   "json.dumps"
  ],
  "type": "function"
 },
 "oauth2.log": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "oauth2.store": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "oauth2.store.AccessTokenStore": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.store.AccessTokenStore.delete_refresh_token": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.AccessTokenStore.fetch_by_refresh_token": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.AccessTokenStore.fetch_existing_token_of_user": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.AccessTokenStore.save_token": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.AuthCodeStore": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.store.AuthCodeStore.delete_code": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.AuthCodeStore.fetch_by_code": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.AuthCodeStore.save_code": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.ClientStore": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.store.ClientStore.fetch_by_client_id": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.dbapi": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "oauth2.store.dbapi.DatabaseStore": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.store.dbapi.DatabaseStore.__init__": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.dbapi.DatabaseStore.execute": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.dbapi.DatabaseStore.fetchall": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.dbapi.DatabaseStore.fetchone": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.dbapi.DbApiAccessTokenStore": {
  "lineno": 84,
  "symbols_in_volume": [
   "oauth2.store.AccessTokenStore"
  ],
  "type": "class"
 },
 "oauth2.store.dbapi.DbApiAccessTokenStore._fetch_data": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.dbapi.DbApiAccessTokenStore._fetch_scopes": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.dbapi.DbApiAccessTokenStore._row_to_token": {
  "lineno": 213,
  "symbols_in_volume": [
   "oauth2.datatype.AccessToken"
  ],
  "type": "function"
 },
 "oauth2.store.dbapi.DbApiAccessTokenStore.delete_refresh_token": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.dbapi.DbApiAccessTokenStore.fetch_by_refresh_token": {
  "lineno": 118,
  "symbols_in_volume": [
   "oauth2.error.AccessTokenNotFound"
  ],
  "type": "function"
 },
 "oauth2.store.dbapi.DbApiAccessTokenStore.fetch_existing_token_of_user": {
  "lineno": 140,
  "symbols_in_volume": [
   "oauth2.error.AccessTokenNotFound"
  ],
  "type": "function"
 },
 "oauth2.store.dbapi.DbApiAccessTokenStore.save_token": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.dbapi.DbApiAuthCodeStore": {
  "lineno": 220,
  "symbols_in_volume": [
   "oauth2.store.AuthCodeStore"
  ],
  "type": "class"
 },
 "oauth2.store.dbapi.DbApiAuthCodeStore.delete_code": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.dbapi.DbApiAuthCodeStore.fetch_by_code": {
  "lineno": 250,
  "symbols_in_volume": [
   "oauth2.datatype.AuthorizationCode",
   "oauth2.error.AuthCodeNotFound"
  ],
  "type": "function"
 },
 "oauth2.store.dbapi.DbApiAuthCodeStore.save_code": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.dbapi.DbApiClientStore": {
  "lineno": 311,
  "symbols_in_volume": [
   "oauth2.store.ClientStore"
  ],
  "type": "class"
 },
 "oauth2.store.dbapi.DbApiClientStore.fetch_by_client_id": {
  "lineno": 327,
  "symbols_in_volume": [
   "oauth2.datatype.Client",
   "oauth2.error.ClientNotFoundError"
  ],
  "type": "function"
 },
 "oauth2.store.dbapi.mysql": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "oauth2.store.dbapi.mysql.MysqlAccessTokenStore": {
  "lineno": 101,
  "symbols_in_volume": [
   "oauth2.store.dbapi.DbApiAccessTokenStore"
  ],
  "type": "class"
 },
 "oauth2.store.dbapi.mysql.MysqlAuthCodeStore": {
  "lineno": 175,
  "symbols_in_volume": [
   "oauth2.store.dbapi.DbApiAuthCodeStore"
  ],
  "type": "class"
 },
 "oauth2.store.dbapi.mysql.MysqlClientStore": {
  "lineno": 226,
  "symbols_in_volume": [
   "oauth2.store.dbapi.DbApiClientStore"
  ],
  "type": "class"
 },
 "oauth2.store.memcache": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "oauth2.store.memcache.TokenStore": {
  "lineno": 9,
  "symbols_in_volume": [
   "oauth2.store.AccessTokenStore",
   "oauth2.store.AuthCodeStore"
  ],
  "type": "class"
 },
 "oauth2.store.memcache.TokenStore.__init__": {
  "lineno": 31,
  "symbols_in_volume": [
   "memcache.Client"
  ],
  "type": "function"
 },
 "oauth2.store.memcache.TokenStore._generate_cache_key": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.memcache.TokenStore._unique_token_key": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.memcache.TokenStore.delete_code": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.memcache.TokenStore.delete_refresh_token": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.memcache.TokenStore.fetch_by_code": {
  "lineno": 39,
  "symbols_in_volume": [
   "oauth2.datatype.AuthorizationCode",
   "oauth2.error.AuthCodeNotFound"
  ],
  "type": "function"
 },
 "oauth2.store.memcache.TokenStore.fetch_by_refresh_token": {
  "lineno": 107,
  "symbols_in_volume": [
   "oauth2.datatype.AccessToken",
   "oauth2.error.AccessTokenNotFound"
  ],
  "type": "function"
 },
 "oauth2.store.memcache.TokenStore.fetch_existing_token_of_user": {
  "lineno": 115,
  "symbols_in_volume": [
   "oauth2.datatype.AccessToken",
   "oauth2.error.AccessTokenNotFound"
  ],
  "type": "function"
 },
 "oauth2.store.memcache.TokenStore.save_code": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.memcache.TokenStore.save_token": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.memory": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "oauth2.store.memory.ClientStore": {
  "lineno": 14,
  "symbols_in_volume": [
   "oauth2.store.ClientStore"
  ],
  "type": "class"
 },
 "oauth2.store.memory.ClientStore.__init__": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.memory.ClientStore.add_client": {
  "lineno": 21,
  "symbols_in_volume": [
   "oauth2.datatype.Client"
  ],
  "type": "function"
 },
 "oauth2.store.memory.ClientStore.fetch_by_client_id": {
  "lineno": 41,
  "symbols_in_volume": [
   "oauth2.error.ClientNotFoundError"
  ],
  "type": "function"
 },
 "oauth2.store.memory.TokenStore": {
  "lineno": 56,
  "symbols_in_volume": [
   "oauth2.store.AccessTokenStore",
   "oauth2.store.AuthCodeStore"
  ],
  "type": "class"
 },
 "oauth2.store.memory.TokenStore.__init__": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.memory.TokenStore._unique_token_key": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.memory.TokenStore.delete_code": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.memory.TokenStore.delete_refresh_token": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.memory.TokenStore.fetch_by_code": {
  "lineno": 69,
  "symbols_in_volume": [
   "oauth2.error.AuthCodeNotFound"
  ],
  "type": "function"
 },
 "oauth2.store.memory.TokenStore.fetch_by_refresh_token": {
  "lineno": 131,
  "symbols_in_volume": [
   "oauth2.error.AccessTokenNotFound"
  ],
  "type": "function"
 },
 "oauth2.store.memory.TokenStore.fetch_by_token": {
  "lineno": 145,
  "symbols_in_volume": [
   "oauth2.error.AccessTokenNotFound"
  ],
  "type": "function"
 },
 "oauth2.store.memory.TokenStore.fetch_existing_token_of_user": {
  "lineno": 161,
  "symbols_in_volume": [
   "oauth2.error.AccessTokenNotFound"
  ],
  "type": "function"
 },
 "oauth2.store.memory.TokenStore.save_code": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.memory.TokenStore.save_token": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.mongodb": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "oauth2.store.mongodb.AccessTokenStore": {
  "lineno": 21,
  "symbols_in_volume": [
   "oauth2.store.AccessTokenStore"
  ],
  "type": "class"
 },
 "oauth2.store.mongodb.AccessTokenStore.delete_refresh_token": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.mongodb.AccessTokenStore.fetch_by_refresh_token": {
  "lineno": 35,
  "symbols_in_volume": [
   "oauth2.datatype.AccessToken",
   "oauth2.error.AccessTokenNotFound"
  ],
  "type": "function"
 },
 "oauth2.store.mongodb.AccessTokenStore.fetch_existing_token_of_user": {
  "lineno": 57,
  "symbols_in_volume": [
   "oauth2.datatype.AccessToken",
   "oauth2.error.AccessTokenNotFound",
   "pymongo.DESCENDING"
  ],
  "type": "function"
 },
 "oauth2.store.mongodb.AccessTokenStore.save_token": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.mongodb.AuthCodeStore": {
  "lineno": 92,
  "symbols_in_volume": [
   "oauth2.store.AuthCodeStore"
  ],
  "type": "class"
 },
 "oauth2.store.mongodb.AuthCodeStore.delete_code": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.mongodb.AuthCodeStore.fetch_by_code": {
  "lineno": 106,
  "symbols_in_volume": [
   "oauth2.datatype.AuthorizationCode",
   "oauth2.error.AuthCodeNotFound"
  ],
  "type": "function"
 },
 "oauth2.store.mongodb.AuthCodeStore.save_code": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.mongodb.ClientStore": {
  "lineno": 140,
  "symbols_in_volume": [
   "oauth2.store.ClientStore"
  ],
  "type": "class"
 },
 "oauth2.store.mongodb.ClientStore.fetch_by_client_id": {
  "lineno": 154,
  "symbols_in_volume": [
   "oauth2.datatype.Client",
   "oauth2.error.ClientNotFoundError"
  ],
  "type": "function"
 },
 "oauth2.store.mongodb.MongodbStore": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.store.mongodb.MongodbStore.__init__": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.redisdb": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "oauth2.store.redisdb.ClientStore": {
  "lineno": 148,
  "symbols_in_volume": [
   "oauth2.store.ClientStore"
  ],
  "type": "class"
 },
 "oauth2.store.redisdb.ClientStore.add_client": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.redisdb.ClientStore.fetch_by_client_id": {
  "lineno": 169,
  "symbols_in_volume": [
   "oauth2.datatype.Client",
   "oauth2.error.ClientNotFoundError"
  ],
  "type": "function"
 },
 "oauth2.store.redisdb.RedisStore": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.store.redisdb.RedisStore.__init__": {
  "lineno": 28,
  "symbols_in_volume": [
   "redis.StrictRedis"
  ],
  "type": "function"
 },
 "oauth2.store.redisdb.RedisStore._generate_cache_key": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.redisdb.RedisStore.delete": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.redisdb.RedisStore.read": {
  "lineno": 46,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "oauth2.store.redisdb.RedisStore.write": {
  "lineno": 41,
  "symbols_in_volume": [
   "json.dumps"
  ],
  "type": "function"
 },
 "oauth2.store.redisdb.TokenStore": {
  "lineno": 60,
  "symbols_in_volume": [
   "oauth2.store.AccessTokenStore",
   "oauth2.store.AuthCodeStore"
  ],
  "type": "class"
 },
 "oauth2.store.redisdb.TokenStore._unique_token_key": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.redisdb.TokenStore.delete_code": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.redisdb.TokenStore.delete_refresh_token": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.redisdb.TokenStore.fetch_by_code": {
  "lineno": 61,
  "symbols_in_volume": [
   "oauth2.datatype.AuthorizationCode",
   "oauth2.error.AuthCodeNotFound"
  ],
  "type": "function"
 },
 "oauth2.store.redisdb.TokenStore.fetch_by_refresh_token": {
  "lineno": 125,
  "symbols_in_volume": [
   "oauth2.datatype.AccessToken",
   "oauth2.error.AccessTokenNotFound"
  ],
  "type": "function"
 },
 "oauth2.store.redisdb.TokenStore.fetch_existing_token_of_user": {
  "lineno": 133,
  "symbols_in_volume": [
   "oauth2.datatype.AccessToken",
   "oauth2.error.AccessTokenNotFound"
  ],
  "type": "function"
 },
 "oauth2.store.redisdb.TokenStore.save_code": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.store.redisdb.TokenStore.save_token": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "oauth2.test.functional": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "oauth2.test.functional.MemoryStoreCreator": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.test.functional.MemoryStoreCreator.after_create": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.MemoryStoreCreator.create_access_token_store": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.MemoryStoreCreator.create_auth_code_store": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.MemoryStoreCreator.create_client_store": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.MemoryStoreCreator.initialize": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.MongoDbStoreCreator": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.test.functional.MongoDbStoreCreator.after_create": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.MongoDbStoreCreator.create_access_token_store": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.MongoDbStoreCreator.create_auth_code_store": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.MongoDbStoreCreator.create_client_store": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.MongoDbStoreCreator.initialize": {
  "lineno": 96,
  "symbols_in_volume": [
   "pymongo.MongoClient"
  ],
  "type": "function"
 },
 "oauth2.test.functional.MysqlStoreCreator": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.test.functional.MysqlStoreCreator.after_create": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.MysqlStoreCreator.before_create": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.MysqlStoreCreator.create_access_token_store": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.MysqlStoreCreator.create_auth_code_store": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.MysqlStoreCreator.create_client_store": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.MysqlStoreCreator.initialize": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.NoLoggingHandler": {
  "lineno": 12,
  "symbols_in_volume": [
   "wsgiref.simple_server.WSGIRequestHandler"
  ],
  "type": "class"
 },
 "oauth2.test.functional.NoLoggingHandler.log_message": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.RedisStoreCreator": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.test.functional.RedisStoreCreator.after_create": {
  "lineno": 293,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.RedisStoreCreator.create_access_token_store": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.RedisStoreCreator.create_auth_code_store": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.RedisStoreCreator.create_client_store": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.RedisStoreCreator.initialize": {
  "lineno": 278,
  "symbols_in_volume": [
   "redis.StrictRedis"
  ],
  "type": "function"
 },
 "oauth2.test.functional.StoreCreator": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.test.functional.StoreCreator.__init__": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.StoreCreator.after_create": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.StoreCreator.before_create": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.StoreCreator.create_access_token_store": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.StoreCreator.create_auth_code_store": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.StoreCreator.create_client_store": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.StoreCreator.initialize": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.store_factory": {
  "lineno": 20,
  "symbols_in_volume": [
   "os.environ.get"
  ],
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "oauth2.test.functional.test_authorization_code.AuthorizationCodeTestCase": {
  "lineno": 76,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.functional.test_authorization_code.AuthorizationCodeTestCase.access_token": {
  "lineno": 192,
  "symbols_in_volume": [
   "json.loads",
   "urllib.urlencode",
   "urllib2.HTTPError",
   "urllib2.urlopen"
  ],
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.AuthorizationCodeTestCase.setUp": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.AuthorizationCodeTestCase.tearDown": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.AuthorizationCodeTestCase.test_tornado": {
  "lineno": 81,
  "symbols_in_volume": [
   "multiprocessing.Process",
   "multiprocessing.Queue"
  ],
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.AuthorizationCodeTestCase.test_tornado.run_provider": {
  "lineno": 82,
  "symbols_in_volume": [
   "tornado.ioloop.IOLoop.current",
   "tornado.web.Application",
   "tornado.web.url"
  ],
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.AuthorizationCodeTestCase.test_wsgi": {
  "lineno": 121,
  "symbols_in_volume": [
   "multiprocessing.Process",
   "multiprocessing.Queue"
  ],
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.AuthorizationCodeTestCase.test_wsgi.run_provider": {
  "lineno": 122,
  "symbols_in_volume": [
   "oauth2.test.functional.NoLoggingHandler",
   "tornado.web.Application",
   "wsgiref.simple_server.make_server"
  ],
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.AuthorizationCodeTestCase.test_wsgi_404": {
  "lineno": 160,
  "symbols_in_volume": [
   "multiprocessing.Process",
   "multiprocessing.Queue",
   "urllib2.HTTPError",
   "urllib2.urlopen"
  ],
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.AuthorizationCodeTestCase.test_wsgi_404.run_provider": {
  "lineno": 161,
  "symbols_in_volume": [
   "oauth2.test.functional.NoLoggingHandler",
   "tornado.web.Application",
   "wsgiref.simple_server.make_server"
  ],
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.ClientApplication": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.test.functional.test_authorization_code.ClientApplication.__call__": {
  "lineno": 256,
  "symbols_in_volume": [
   "urllib2.HTTPError"
  ],
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.ClientApplication.__init__": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.ClientApplication._read_auth_token": {
  "lineno": 291,
  "symbols_in_volume": [
   "urlparse.parse_qs"
  ],
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.ClientApplication._request_access_token": {
  "lineno": 275,
  "symbols_in_volume": [
   "json.loads",
   "urllib.urlencode",
   "urllib2.urlopen"
  ],
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.ClientApplication._request_auth_token": {
  "lineno": 297,
  "symbols_in_volume": [
   "urllib.urlencode"
  ],
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.ClientApplication._serve_application": {
  "lineno": 307,
  "symbols_in_volume": [
   "json.dumps"
  ],
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.TestSiteAdapter": {
  "lineno": 237,
  "symbols_in_volume": [
   "oauth2.web.AuthorizationCodeGrantSiteAdapter"
  ],
  "type": "class"
 },
 "oauth2.test.functional.test_authorization_code.TestSiteAdapter.authenticate": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.TestSiteAdapter.user_has_denied_access": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.create_provider": {
  "lineno": 34,
  "symbols_in_volume": [
   "oauth2.Provider",
   "oauth2.grant.AuthorizationCodeGrant",
   "oauth2.grant.RefreshToken",
   "oauth2.tokengenerator.Uuid4"
  ],
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.run_client": {
  "lineno": 58,
  "symbols_in_volume": [
   "oauth2.test.functional.NoLoggingHandler",
   "wsgiref.simple_server.make_server"
  ],
  "type": "function"
 },
 "oauth2.test.store": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "oauth2.test.store.test_dbapi": {
  "lineno": null,
  "symbols_in_volume": [
   "oauth2.store.dbapi.mysql.MysqlAccessTokenStore",
   "oauth2.store.dbapi.mysql.MysqlAuthCodeStore",
   "oauth2.store.dbapi.mysql.MysqlClientStore"
  ],
  "type": "module"
 },
 "oauth2.test.store.test_dbapi.AccessTokenStoreTestCase": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.test.store.test_dbapi.AccessTokenStoreTestCase.test_delete_refresh_token": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.AccessTokenStoreTestCase.test_fetch_by_refresh_token": {
  "lineno": 66,
  "symbols_in_volume": [
   "oauth2.datatype.AccessToken"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.AccessTokenStoreTestCase.test_fetch_by_refresh_token_data_not_found": {
  "lineno": 123,
  "symbols_in_volume": [
   "oauth2.error.AccessTokenNotFound"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.AccessTokenStoreTestCase.test_fetch_existing_token_of_user": {
  "lineno": 135,
  "symbols_in_volume": [
   "oauth2.datatype.AccessToken"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.AccessTokenStoreTestCase.test_fetch_existing_token_of_user_no_token_found": {
  "lineno": 196,
  "symbols_in_volume": [
   "oauth2.error.AccessTokenNotFound"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.AccessTokenStoreTestCase.test_save_token": {
  "lineno": 211,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.datatype.AccessToken"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.AuthCodeStoreTestCase": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.test.store.test_dbapi.AuthCodeStoreTestCase.test_delete_code": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.AuthCodeStoreTestCase.test_fetch_by_code": {
  "lineno": 278,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.datatype.AuthorizationCode"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.AuthCodeStoreTestCase.test_fetch_by_code_no_data_found": {
  "lineno": 328,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.error.AuthCodeNotFound"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.AuthCodeStoreTestCase.test_save_code": {
  "lineno": 340,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.datatype.AuthorizationCode"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.MysqlClientStoreTestCase": {
  "lineno": 394,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.test.store.test_dbapi.MysqlClientStoreTestCase.test_fetch_by_client_id": {
  "lineno": 395,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.datatype.Client"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.MysqlClientStoreTestCase.test_fetch_by_client_id_client_not_found": {
  "lineno": 451,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.error.ClientNotFoundError"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.StoreTestCase": {
  "lineno": 31,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.store.test_dbapi.StoreTestCase._con_mock": {
  "lineno": 32,
  "symbols_in_volume": [
   "mock.Mock"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.StoreTestCase._cursor_mock": {
  "lineno": 40,
  "symbols_in_volume": [
   "mock.Mock"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.with_classes": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.test.store.test_dbapi.with_classes.__call__": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.with_classes.__call__.wrapper": {
  "lineno": 23,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.with_classes.__init__": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.store.test_memcache": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "oauth2.test.store.test_memcache.MemcacheTokenStoreTestCase": {
  "lineno": 7,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.store.test_memcache.MemcacheTokenStoreTestCase._generate_test_cache_key": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.store.test_memcache.MemcacheTokenStoreTestCase.setUp": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.store.test_memcache.MemcacheTokenStoreTestCase.test_fetch_by_code": {
  "lineno": 14,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.store.memcache.TokenStore"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_memcache.MemcacheTokenStoreTestCase.test_fetch_by_code_no_data": {
  "lineno": 36,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.error.AuthCodeNotFound",
   "oauth2.store.memcache.TokenStore"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_memcache.MemcacheTokenStoreTestCase.test_fetch_existing_token_of_user": {
  "lineno": 91,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.datatype.AccessToken",
   "oauth2.store.memcache.TokenStore"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_memcache.MemcacheTokenStoreTestCase.test_fetch_existing_token_of_user_no_data": {
  "lineno": 110,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.error.AccessTokenNotFound",
   "oauth2.store.memcache.TokenStore"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_memcache.MemcacheTokenStoreTestCase.test_save_code": {
  "lineno": 45,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.datatype.AuthorizationCode",
   "oauth2.store.memcache.TokenStore"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_memcache.MemcacheTokenStoreTestCase.test_save_token": {
  "lineno": 63,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.call",
   "oauth2.datatype.AccessToken",
   "oauth2.store.memcache.TokenStore"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_memory": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "oauth2.test.store.test_memory.MemoryClientStoreTestCase": {
  "lineno": 6,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.store.test_memory.MemoryClientStoreTestCase.test_add_client_and_fetch_by_client_id": {
  "lineno": 7,
  "symbols_in_volume": [
   "oauth2.store.memory.ClientStore"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_memory.MemoryClientStoreTestCase.test_fetch_by_client_id_no_client": {
  "lineno": 24,
  "symbols_in_volume": [
   "oauth2.error.ClientNotFoundError",
   "oauth2.store.memory.ClientStore"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_memory.MemoryTokenStoreTestCase": {
  "lineno": 30,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.store.test_memory.MemoryTokenStoreTestCase.setUp": {
  "lineno": 31,
  "symbols_in_volume": [
   "oauth2.datatype.AuthorizationCode",
   "oauth2.store.memory.TokenStore"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_memory.MemoryTokenStoreTestCase.test_fetch_by_code": {
  "lineno": 44,
  "symbols_in_volume": [
   "oauth2.error.AuthCodeNotFound"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_memory.MemoryTokenStoreTestCase.test_save_code_and_fetch_by_code": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.store.test_memory.MemoryTokenStoreTestCase.test_save_token_and_fetch_by_token": {
  "lineno": 56,
  "symbols_in_volume": [
   "oauth2.datatype.AccessToken"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_mongodb": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "oauth2.test.store.test_mongodb.MongodbAccessTokenStoreTestCase": {
  "lineno": 10,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.store.test_mongodb.MongodbAccessTokenStoreTestCase.setUp": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.store.test_mongodb.MongodbAccessTokenStoreTestCase.test_fetch_by_refresh_token": {
  "lineno": 22,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.datatype.AccessToken",
   "oauth2.store.mongodb.AccessTokenStore"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_mongodb.MongodbAccessTokenStoreTestCase.test_fetch_by_refresh_token_no_data": {
  "lineno": 38,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.error.AccessTokenNotFound",
   "oauth2.store.mongodb.AccessTokenStore"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_mongodb.MongodbAccessTokenStoreTestCase.test_fetch_existing_token_of_user": {
  "lineno": 47,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.datatype.AccessToken",
   "oauth2.store.mongodb.AccessTokenStore"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_mongodb.MongodbAccessTokenStoreTestCase.test_fetch_existing_token_of_user_no_data": {
  "lineno": 74,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.error.AccessTokenNotFound",
   "oauth2.store.mongodb.AccessTokenStore"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_mongodb.MongodbAccessTokenStoreTestCase.test_save_token": {
  "lineno": 85,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.datatype.AccessToken",
   "oauth2.store.mongodb.AccessTokenStore"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_mongodb.MongodbAuthCodeStoreTestCase": {
  "lineno": 95,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.store.test_mongodb.MongodbAuthCodeStoreTestCase.setUp": {
  "lineno": 96,
  "symbols_in_volume": [
   "mock.Mock"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_mongodb.MongodbAuthCodeStoreTestCase.test_fetch_by_code": {
  "lineno": 104,
  "symbols_in_volume": [
   "oauth2.datatype.AuthorizationCode",
   "oauth2.store.mongodb.AuthCodeStore"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_mongodb.MongodbAuthCodeStoreTestCase.test_fetch_by_code_no_data": {
  "lineno": 118,
  "symbols_in_volume": [
   "oauth2.error.AuthCodeNotFound",
   "oauth2.store.mongodb.AuthCodeStore"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_mongodb.MongodbAuthCodeStoreTestCase.test_save_code": {
  "lineno": 126,
  "symbols_in_volume": [
   "oauth2.datatype.AuthorizationCode",
   "oauth2.store.mongodb.AuthCodeStore"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_mongodb.MongodbClientStoreTestCase": {
  "lineno": 136,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.store.test_mongodb.MongodbClientStoreTestCase.test_fetch_by_client_id": {
  "lineno": 137,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.datatype.Client",
   "oauth2.store.mongodb.ClientStore"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_mongodb.MongodbClientStoreTestCase.test_fetch_by_client_id_no_data": {
  "lineno": 153,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.error.ClientNotFoundError",
   "oauth2.store.mongodb.ClientStore"
  ],
  "type": "function"
 },
 "oauth2.test.store.test_redisdb": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "oauth2.test.store.test_redisdb.TokenStoreTestCase": {
  "lineno": 11,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.store.test_redisdb.TokenStoreTestCase.test_delete_refresh_token": {
  "lineno": 12,
  "symbols_in_volume": [
   "json.dumps",
   "mock.Mock",
   "oauth2.datatype.AccessToken",
   "oauth2.store.redisdb.TokenStore"
  ],
  "type": "function"
 },
 "oauth2.test.test_client_authenticator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "oauth2.test.test_client_authenticator.ClientAuthenticatorTestCase": {
  "lineno": 14,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.test_client_authenticator.ClientAuthenticatorTestCase.setUp": {
  "lineno": 15,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.client_authenticator.ClientAuthenticator",
   "oauth2.datatype.Client",
   "oauth2.store.ClientStore"
  ],
  "type": "function"
 },
 "oauth2.test.test_client_authenticator.ClientAuthenticatorTestCase.test_by_identifier": {
  "lineno": 28,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_client_authenticator.ClientAuthenticatorTestCase.test_by_identifier_client_id_not_set": {
  "lineno": 43,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.error.OAuthInvalidNoRedirectError",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_client_authenticator.ClientAuthenticatorTestCase.test_by_identifier_secret": {
  "lineno": 80,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_client_authenticator.ClientAuthenticatorTestCase.test_by_identifier_secret_client_not_authorized": {
  "lineno": 112,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.error.OAuthInvalidError",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_client_authenticator.ClientAuthenticatorTestCase.test_by_identifier_secret_unknown_client": {
  "lineno": 96,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.error.ClientNotFoundError",
   "oauth2.error.OAuthInvalidError",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_client_authenticator.ClientAuthenticatorTestCase.test_by_identifier_secret_wrong_secret": {
  "lineno": 129,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.error.OAuthInvalidError",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_client_authenticator.ClientAuthenticatorTestCase.test_by_identifier_unknown_client": {
  "lineno": 52,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.error.ClientNotFoundError",
   "oauth2.error.OAuthInvalidNoRedirectError",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_client_authenticator.ClientAuthenticatorTestCase.test_by_identifier_unknown_redirect_uri": {
  "lineno": 64,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.error.OAuthInvalidNoRedirectError",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_client_authenticator.HttpBasicAuthTestCase": {
  "lineno": 179,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.test_client_authenticator.HttpBasicAuthTestCase.test_header_not_present": {
  "lineno": 199,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.client_authenticator.http_basic_auth",
   "oauth2.error.OAuthInvalidError",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_client_authenticator.HttpBasicAuthTestCase.test_invalid_authorization_header": {
  "lineno": 208,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.client_authenticator.http_basic_auth",
   "oauth2.error.OAuthInvalidError",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_client_authenticator.HttpBasicAuthTestCase.test_valid": {
  "lineno": 180,
  "symbols_in_volume": [
   "base64.b64encode",
   "mock.Mock",
   "oauth2.client_authenticator.http_basic_auth",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_client_authenticator.RequestBodyTestCase": {
  "lineno": 147,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.test_client_authenticator.RequestBodyTestCase.test_no_client_id": {
  "lineno": 160,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.client_authenticator.request_body",
   "oauth2.error.OAuthInvalidError",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_client_authenticator.RequestBodyTestCase.test_no_client_secret": {
  "lineno": 169,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.client_authenticator.request_body",
   "oauth2.error.OAuthInvalidError",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_client_authenticator.RequestBodyTestCase.test_valid": {
  "lineno": 148,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.client_authenticator.request_body",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_datatype": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "oauth2.test.test_datatype.AccessTokenTestCase": {
  "lineno": 11,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.test_datatype.AccessTokenTestCase.test_expires_in_expired": {
  "lineno": 12,
  "symbols_in_volume": [
   "mock.patch",
   "oauth2.datatype.AccessToken"
  ],
  "type": "function"
 },
 "oauth2.test.test_datatype.AccessTokenTestCase.test_expires_in_not_expired": {
  "lineno": 20,
  "symbols_in_volume": [
   "mock.patch",
   "oauth2.datatype.AccessToken"
  ],
  "type": "function"
 },
 "oauth2.test.test_datatype.AccessTokenTestCase.test_is_expired_expired_at_not_set": {
  "lineno": 28,
  "symbols_in_volume": [
   "oauth2.datatype.AccessToken"
  ],
  "type": "function"
 },
 "oauth2.test.test_datatype.ClientTestCase": {
  "lineno": 36,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.test_datatype.ClientTestCase.test_redirect_uri": {
  "lineno": 37,
  "symbols_in_volume": [
   "oauth2.datatype.Client",
   "oauth2.error.RedirectUriUnknown"
  ],
  "type": "function"
 },
 "oauth2.test.test_datatype.ClientTestCase.test_response_type_supported": {
  "lineno": 55,
  "symbols_in_volume": [
   "oauth2.datatype.Client"
  ],
  "type": "function"
 },
 "oauth2.test.test_datatype.mock_time": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.test_grant": {
  "lineno": null,
  "symbols_in_volume": [
   "oauth2.test.unittest.main"
  ],
  "type": "module"
 },
 "oauth2.test.test_grant.AuthRequestMixinTestCase": {
  "lineno": 102,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.test_grant.AuthRequestMixinTestCase.test_read_validate_params_all_valid": {
  "lineno": 103,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.call",
   "oauth2.client_authenticator.ClientAuthenticator",
   "oauth2.datatype.Client",
   "oauth2.grant.AuthRequestMixin",
   "oauth2.grant.Scope",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeAuthHandlerTestCase": {
  "lineno": 208,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.test_grant.AuthorizationCodeAuthHandlerTestCase.test_process": {
  "lineno": 209,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.compatibility.quote",
   "oauth2.datatype.Client",
   "oauth2.grant.AuthorizationCodeAuthHandler",
   "oauth2.grant.Scope",
   "oauth2.store.AuthCodeStore",
   "oauth2.web.AuthorizationCodeGrantSiteAdapter",
   "oauth2.web.Response",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeAuthHandlerTestCase.test_process_not_confirmed": {
  "lineno": 259,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.datatype.Client",
   "oauth2.error.UserNotAuthenticated",
   "oauth2.grant.AuthorizationCodeAuthHandler",
   "oauth2.grant.Scope",
   "oauth2.web.AuthorizationCodeGrantSiteAdapter",
   "oauth2.web.Response",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeAuthHandlerTestCase.test_redirect_oauth_error": {
  "lineno": 293,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.datatype.Client",
   "oauth2.error.OAuthInvalidError",
   "oauth2.grant.AuthorizationCodeAuthHandler",
   "oauth2.web.Response"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeGrantTestCase": {
  "lineno": 27,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.test_grant.AuthorizationCodeGrantTestCase.test_create_auth_handler": {
  "lineno": 28,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.grant.AuthorizationCodeAuthHandler",
   "oauth2.grant.AuthorizationCodeGrant",
   "oauth2.grant.Scope",
   "oauth2.web.AuthorizationCodeGrantSiteAdapter",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeGrantTestCase.test_create_no_match": {
  "lineno": 87,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.grant.AuthorizationCodeGrant",
   "oauth2.web.AuthorizationCodeGrantSiteAdapter",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeGrantTestCase.test_create_token_handler": {
  "lineno": 62,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.grant.AuthorizationCodeGrant",
   "oauth2.grant.AuthorizationCodeTokenHandler",
   "oauth2.store.AccessTokenStore",
   "oauth2.web.AuthorizationCodeGrantSiteAdapter",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeTokenHandlerTestCase": {
  "lineno": 318,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.test_grant.AuthorizationCodeTokenHandlerTestCase.test_process_no_refresh_token": {
  "lineno": 540,
  "symbols_in_volume": [
   "copy.copy",
   "json.dumps",
   "mock.Mock",
   "mock.call",
   "oauth2.datatype.AccessToken",
   "oauth2.datatype.Client",
   "oauth2.grant.AuthorizationCodeTokenHandler",
   "oauth2.store.AccessTokenStore",
   "oauth2.store.AuthCodeStore",
   "oauth2.store.ClientStore",
   "oauth2.tokengenerator.TokenGenerator",
   "oauth2.web.Response",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeTokenHandlerTestCase.test_process_with_refresh_token": {
  "lineno": 583,
  "symbols_in_volume": [
   "json.dumps",
   "mock.Mock",
   "mock.call",
   "mock.patch",
   "oauth2.client_authenticator.ClientAuthenticator",
   "oauth2.datatype.AccessToken",
   "oauth2.datatype.Client",
   "oauth2.grant.AuthorizationCodeTokenHandler",
   "oauth2.store.AccessTokenStore",
   "oauth2.store.AuthCodeStore",
   "oauth2.tokengenerator.TokenGenerator",
   "oauth2.web.Response",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeTokenHandlerTestCase.test_process_with_unique_access_token": {
  "lineno": 629,
  "symbols_in_volume": [
   "json.loads",
   "mock.Mock",
   "mock.patch",
   "oauth2.client_authenticator.ClientAuthenticator",
   "oauth2.datatype.AccessToken",
   "oauth2.datatype.Client",
   "oauth2.grant.AuthorizationCodeTokenHandler",
   "oauth2.store.AccessTokenStore",
   "oauth2.store.AuthCodeStore",
   "oauth2.web.Response",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeTokenHandlerTestCase.test_process_with_unique_access_token_different_scope": {
  "lineno": 696,
  "symbols_in_volume": [
   "copy.copy",
   "json.loads",
   "mock.Mock",
   "oauth2.client_authenticator.ClientAuthenticator",
   "oauth2.datatype.AccessToken",
   "oauth2.datatype.Client",
   "oauth2.grant.AuthorizationCodeTokenHandler",
   "oauth2.store.AccessTokenStore",
   "oauth2.store.AuthCodeStore",
   "oauth2.tokengenerator.TokenGenerator",
   "oauth2.web.Response"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeTokenHandlerTestCase.test_process_with_unique_access_token_expired_token": {
  "lineno": 733,
  "symbols_in_volume": [
   "copy.copy",
   "json.loads",
   "mock.Mock",
   "mock.patch",
   "oauth2.client_authenticator.ClientAuthenticator",
   "oauth2.datatype.AccessToken",
   "oauth2.datatype.Client",
   "oauth2.grant.AuthorizationCodeTokenHandler",
   "oauth2.store.AccessTokenStore",
   "oauth2.store.AuthCodeStore",
   "oauth2.tokengenerator.TokenGenerator",
   "oauth2.web.Response"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeTokenHandlerTestCase.test_process_with_unique_access_token_no_user_id": {
  "lineno": 771,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.client_authenticator.ClientAuthenticator",
   "oauth2.datatype.Client",
   "oauth2.error.UserIdentifierMissingError",
   "oauth2.grant.AuthorizationCodeTokenHandler",
   "oauth2.store.AccessTokenStore",
   "oauth2.store.AuthCodeStore",
   "oauth2.tokengenerator.TokenGenerator"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeTokenHandlerTestCase.test_process_with_unique_access_token_not_found": {
  "lineno": 664,
  "symbols_in_volume": [
   "copy.copy",
   "json.loads",
   "mock.Mock",
   "mock.patch",
   "oauth2.client_authenticator.ClientAuthenticator",
   "oauth2.datatype.Client",
   "oauth2.error.AccessTokenNotFound",
   "oauth2.grant.AuthorizationCodeTokenHandler",
   "oauth2.store.AccessTokenStore",
   "oauth2.store.AuthCodeStore",
   "oauth2.tokengenerator.TokenGenerator",
   "oauth2.web.Response"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeTokenHandlerTestCase.test_read_validate_params": {
  "lineno": 319,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.call",
   "oauth2.client_authenticator.ClientAuthenticator",
   "oauth2.datatype.AuthorizationCode",
   "oauth2.datatype.Client",
   "oauth2.grant.AuthorizationCodeTokenHandler",
   "oauth2.store.AccessTokenStore",
   "oauth2.store.AuthCodeStore",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeTokenHandlerTestCase.test_read_validate_params_missing_code": {
  "lineno": 367,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.client_authenticator.ClientAuthenticator",
   "oauth2.datatype.Client",
   "oauth2.error.OAuthInvalidError",
   "oauth2.grant.AuthorizationCodeTokenHandler",
   "oauth2.store.AccessTokenStore",
   "oauth2.store.AuthCodeStore",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeTokenHandlerTestCase.test_read_validate_params_no_auth_code_found": {
  "lineno": 434,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.client_authenticator.ClientAuthenticator",
   "oauth2.datatype.Client",
   "oauth2.error.AuthCodeNotFound",
   "oauth2.error.OAuthInvalidError",
   "oauth2.grant.AuthorizationCodeTokenHandler",
   "oauth2.store.AccessTokenStore",
   "oauth2.store.AuthCodeStore",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeTokenHandlerTestCase.test_read_validate_params_token_expired": {
  "lineno": 503,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.client_authenticator.ClientAuthenticator",
   "oauth2.datatype.AuthorizationCode",
   "oauth2.datatype.Client",
   "oauth2.error.OAuthInvalidError",
   "oauth2.grant.AuthorizationCodeTokenHandler",
   "oauth2.store.AccessTokenStore",
   "oauth2.store.AuthCodeStore",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeTokenHandlerTestCase.test_read_validate_params_unknown_code": {
  "lineno": 397,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.client_authenticator.ClientAuthenticator",
   "oauth2.datatype.AuthorizationCode",
   "oauth2.datatype.Client",
   "oauth2.error.OAuthInvalidError",
   "oauth2.grant.AuthorizationCodeTokenHandler",
   "oauth2.store.AccessTokenStore",
   "oauth2.store.AuthCodeStore",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeTokenHandlerTestCase.test_read_validate_params_wrong_redirect_uri_in_code_data": {
  "lineno": 467,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.client_authenticator.ClientAuthenticator",
   "oauth2.datatype.AuthorizationCode",
   "oauth2.datatype.Client",
   "oauth2.error.OAuthInvalidError",
   "oauth2.grant.AuthorizationCodeTokenHandler",
   "oauth2.store.AccessTokenStore",
   "oauth2.store.AuthCodeStore",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizeMixinTestCase": {
  "lineno": 135,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.test_grant.AuthorizeMixinTestCase.test_authorize_dict_return": {
  "lineno": 148,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.datatype.Client",
   "oauth2.grant.AuthorizeMixin",
   "oauth2.web.ImplicitGrantSiteAdapter",
   "oauth2.web.Response",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizeMixinTestCase.test_authorize_tuple_return": {
  "lineno": 169,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.datatype.Client",
   "oauth2.grant.AuthorizeMixin",
   "oauth2.web.ImplicitGrantSiteAdapter",
   "oauth2.web.Response",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizeMixinTestCase.test_authorize_user_denied_access": {
  "lineno": 136,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.error.OAuthInvalidError",
   "oauth2.grant.AuthorizeMixin",
   "oauth2.web.ImplicitGrantSiteAdapter",
   "oauth2.web.Response",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizeMixinTestCase.test_authorize_user_not_authenticated": {
  "lineno": 190,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.datatype.Client",
   "oauth2.error.UserNotAuthenticated",
   "oauth2.grant.AuthorizeMixin",
   "oauth2.web.ImplicitGrantSiteAdapter",
   "oauth2.web.Response",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ClientCredentialsGrantTestCase": {
  "lineno": 1754,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.test_grant.ClientCredentialsGrantTestCase.test_call": {
  "lineno": 1755,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.grant.ClientCredentialsGrant",
   "oauth2.grant.ClientCredentialsHandler",
   "oauth2.grant.Scope",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ClientCredentialsGrantTestCase.test_call_other_grant_type": {
  "lineno": 1797,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.grant.ClientCredentialsGrant",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ClientCredentialsGrantTestCase.test_call_wrong_request_path": {
  "lineno": 1785,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.grant.ClientCredentialsGrant",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ClientCredentialsHandlerTestCase": {
  "lineno": 1813,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.test_grant.ClientCredentialsHandlerTestCase.test_process": {
  "lineno": 1814,
  "symbols_in_volume": [
   "json.loads",
   "mock.Mock",
   "oauth2.datatype.Client",
   "oauth2.grant.ClientCredentialsHandler",
   "oauth2.grant.Scope",
   "oauth2.store.AccessTokenStore",
   "oauth2.tokengenerator.TokenGenerator",
   "oauth2.web.Response"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ClientCredentialsHandlerTestCase.test_process_with_refresh_token": {
  "lineno": 1844,
  "symbols_in_volume": [
   "json.loads",
   "mock.Mock",
   "mock.call",
   "mock.patch",
   "oauth2.datatype.AccessToken",
   "oauth2.datatype.Client",
   "oauth2.grant.ClientCredentialsGrant.grant_type",
   "oauth2.grant.ClientCredentialsHandler",
   "oauth2.grant.Scope",
   "oauth2.store.AccessTokenStore",
   "oauth2.tokengenerator.TokenGenerator",
   "oauth2.web.Response"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ClientCredentialsHandlerTestCase.test_read_validate_params": {
  "lineno": 1895,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.client_authenticator.ClientAuthenticator",
   "oauth2.datatype.Client",
   "oauth2.grant.ClientCredentialsHandler",
   "oauth2.grant.Scope",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ImplicitGrantHandlerTestCase": {
  "lineno": 819,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.test_grant.ImplicitGrantHandlerTestCase.test_process_redirect_with_state": {
  "lineno": 870,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.compatibility.quote",
   "oauth2.datatype.Client",
   "oauth2.grant.ImplicitGrantHandler",
   "oauth2.grant.Scope",
   "oauth2.store.AccessTokenStore",
   "oauth2.web.ImplicitGrantSiteAdapter",
   "oauth2.web.Response",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ImplicitGrantHandlerTestCase.test_process_redirect_with_token": {
  "lineno": 820,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.datatype.AccessToken",
   "oauth2.datatype.Client",
   "oauth2.grant.ImplicitGrantHandler",
   "oauth2.grant.Scope",
   "oauth2.store.AccessTokenStore",
   "oauth2.web.ImplicitGrantSiteAdapter",
   "oauth2.web.Response",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ImplicitGrantHandlerTestCase.test_process_unconfirmed": {
  "lineno": 952,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.datatype.Client",
   "oauth2.error.UserNotAuthenticated",
   "oauth2.grant.ImplicitGrantHandler",
   "oauth2.grant.Scope",
   "oauth2.store.AccessTokenStore",
   "oauth2.web.ImplicitGrantSiteAdapter",
   "oauth2.web.Response",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ImplicitGrantHandlerTestCase.test_process_user_denied_access": {
  "lineno": 987,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.error.OAuthInvalidError",
   "oauth2.grant.ImplicitGrantHandler",
   "oauth2.grant.Scope",
   "oauth2.store.AccessTokenStore",
   "oauth2.web.ImplicitGrantSiteAdapter",
   "oauth2.web.Response",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ImplicitGrantHandlerTestCase.test_process_with_scope": {
  "lineno": 911,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.datatype.Client",
   "oauth2.grant.ImplicitGrantHandler",
   "oauth2.grant.Scope",
   "oauth2.store.AccessTokenStore",
   "oauth2.web.ImplicitGrantSiteAdapter",
   "oauth2.web.Response",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ImplicitGrantHandlerTestCase.test_redirect_oauth_error": {
  "lineno": 1015,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.datatype.Client",
   "oauth2.error.OAuthInvalidError",
   "oauth2.grant.ImplicitGrantHandler",
   "oauth2.grant.Scope",
   "oauth2.store.AccessTokenStore",
   "oauth2.web.Response",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ImplicitGrantTestCase": {
  "lineno": 785,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.test_grant.ImplicitGrantTestCase.test_create_matching_response_type": {
  "lineno": 786,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.grant.ImplicitGrant",
   "oauth2.grant.ImplicitGrantHandler",
   "oauth2.web.ImplicitGrantSiteAdapter",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ImplicitGrantTestCase.test_create_not_matching_response_type": {
  "lineno": 806,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.grant.ImplicitGrant",
   "oauth2.web.ImplicitGrantSiteAdapter",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.RefreshTokenHandlerTestCase": {
  "lineno": 1521,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.test_grant.RefreshTokenHandlerTestCase.test_process_no_reissue": {
  "lineno": 1522,
  "symbols_in_volume": [
   "json.dumps",
   "mock.Mock",
   "mock.patch",
   "oauth2.client_authenticator.ClientAuthenticator",
   "oauth2.datatype.Client",
   "oauth2.grant.RefreshTokenHandler",
   "oauth2.grant.Scope",
   "oauth2.store.AccessTokenStore",
   "oauth2.tokengenerator.TokenGenerator",
   "oauth2.web.Response",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.RefreshTokenHandlerTestCase.test_process_with_reissue": {
  "lineno": 1571,
  "symbols_in_volume": [
   "json.loads",
   "mock.Mock",
   "mock.patch",
   "oauth2.client_authenticator.ClientAuthenticator",
   "oauth2.datatype.Client",
   "oauth2.grant.RefreshTokenHandler",
   "oauth2.grant.Scope",
   "oauth2.store.AccessTokenStore",
   "oauth2.tokengenerator.TokenGenerator",
   "oauth2.web.Response",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.RefreshTokenHandlerTestCase.test_read_validate_params": {
  "lineno": 1624,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.patch",
   "oauth2.client_authenticator.ClientAuthenticator",
   "oauth2.datatype.AccessToken",
   "oauth2.datatype.Client",
   "oauth2.grant.RefreshTokenHandler",
   "oauth2.grant.Scope",
   "oauth2.store.AccessTokenStore",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.RefreshTokenHandlerTestCase.test_read_validate_params_expired_refresh_token": {
  "lineno": 1719,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.patch",
   "oauth2.client_authenticator.ClientAuthenticator",
   "oauth2.datatype.AccessToken",
   "oauth2.datatype.Client",
   "oauth2.error.OAuthInvalidError",
   "oauth2.grant.RefreshTokenHandler",
   "oauth2.store.AccessTokenStore",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.RefreshTokenHandlerTestCase.test_read_validate_params_invalid_refresh_token": {
  "lineno": 1691,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.client_authenticator.ClientAuthenticator",
   "oauth2.datatype.Client",
   "oauth2.error.AccessTokenNotFound",
   "oauth2.error.OAuthInvalidError",
   "oauth2.grant.RefreshTokenHandler",
   "oauth2.store.AccessTokenStore",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.RefreshTokenHandlerTestCase.test_read_validate_params_no_refresh_token": {
  "lineno": 1673,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.error.OAuthInvalidError",
   "oauth2.grant.RefreshTokenHandler",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.RefreshTokenTestCase": {
  "lineno": 1447,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.test_grant.RefreshTokenTestCase.test_call": {
  "lineno": 1448,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.Provider",
   "oauth2.grant.RefreshToken",
   "oauth2.grant.RefreshTokenHandler",
   "oauth2.grant.Scope",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.RefreshTokenTestCase.test_call_other_grant_type": {
  "lineno": 1501,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.Provider",
   "oauth2.grant.RefreshToken",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.RefreshTokenTestCase.test_call_wrong_path": {
  "lineno": 1485,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.Provider",
   "oauth2.grant.RefreshToken",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ResourceOwnerGrantHandlerTestCase": {
  "lineno": 1081,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.test_grant.ResourceOwnerGrantHandlerTestCase.test_handle_error_owner_not_authenticated": {
  "lineno": 1285,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.error.OAuthInvalidError",
   "oauth2.grant.ResourceOwnerGrantHandler",
   "oauth2.grant.ResourceOwnerGrantHandler.OWNER_NOT_AUTHENTICATED",
   "oauth2.store.AccessTokenStore",
   "oauth2.web.Response"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ResourceOwnerGrantHandlerTestCase.test_process": {
  "lineno": 1082,
  "symbols_in_volume": [
   "json.loads",
   "mock.Mock",
   "mock.call",
   "oauth2.client_authenticator.ClientAuthenticator",
   "oauth2.datatype.AccessToken",
   "oauth2.datatype.Client",
   "oauth2.grant.ResourceOwnerGrant.grant_type",
   "oauth2.grant.ResourceOwnerGrantHandler",
   "oauth2.grant.Scope",
   "oauth2.store.AccessTokenStore",
   "oauth2.tokengenerator.TokenGenerator",
   "oauth2.web.ResourceOwnerGrantSiteAdapter",
   "oauth2.web.Response",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ResourceOwnerGrantHandlerTestCase.test_process_invalid_user": {
  "lineno": 1226,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.client_authenticator.ClientAuthenticator",
   "oauth2.datatype.Client",
   "oauth2.error.OAuthInvalidError",
   "oauth2.error.UserNotAuthenticated",
   "oauth2.grant.ResourceOwnerGrantHandler",
   "oauth2.grant.ResourceOwnerGrantHandler.OWNER_NOT_AUTHENTICATED",
   "oauth2.grant.Scope",
   "oauth2.store.AccessTokenStore",
   "oauth2.tokengenerator.TokenGenerator",
   "oauth2.web.ResourceOwnerGrantSiteAdapter",
   "oauth2.web.Response",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ResourceOwnerGrantHandlerTestCase.test_process_redirect_with_scope": {
  "lineno": 1187,
  "symbols_in_volume": [
   "json.loads",
   "mock.Mock",
   "mock.call",
   "oauth2.client_authenticator.ClientAuthenticator",
   "oauth2.datatype.Client",
   "oauth2.grant.ResourceOwnerGrant.grant_type",
   "oauth2.grant.ResourceOwnerGrantHandler",
   "oauth2.grant.Scope",
   "oauth2.store.AccessTokenStore",
   "oauth2.tokengenerator.TokenGenerator",
   "oauth2.web.ResourceOwnerGrantSiteAdapter",
   "oauth2.web.Response",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ResourceOwnerGrantHandlerTestCase.test_process_with_refresh_token": {
  "lineno": 1132,
  "symbols_in_volume": [
   "json.loads",
   "mock.Mock",
   "mock.call",
   "mock.patch",
   "oauth2.client_authenticator.ClientAuthenticator",
   "oauth2.datatype.AccessToken",
   "oauth2.datatype.Client",
   "oauth2.grant.ResourceOwnerGrant.grant_type",
   "oauth2.grant.ResourceOwnerGrantHandler",
   "oauth2.grant.Scope",
   "oauth2.store.AccessTokenStore",
   "oauth2.tokengenerator.TokenGenerator",
   "oauth2.web.ResourceOwnerGrantSiteAdapter",
   "oauth2.web.Response",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ResourceOwnerGrantHandlerTestCase.test_read_validate_params": {
  "lineno": 1254,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.client_authenticator.ClientAuthenticator",
   "oauth2.datatype.Client",
   "oauth2.grant.ResourceOwnerGrantHandler",
   "oauth2.grant.Scope",
   "oauth2.store.AccessTokenStore",
   "oauth2.web.ResourceOwnerGrantSiteAdapter",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ResourceOwnerGrantTestCase": {
  "lineno": 1043,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.test_grant.ResourceOwnerGrantTestCase.test_call": {
  "lineno": 1044,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.Provider",
   "oauth2.client_authenticator.ClientAuthenticator",
   "oauth2.grant.ResourceOwnerGrant",
   "oauth2.grant.ResourceOwnerGrantHandler",
   "oauth2.store.AccessTokenStore",
   "oauth2.web.ResourceOwnerGrantSiteAdapter",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ResourceOwnerGrantTestCase.test_call_no_resource_request": {
  "lineno": 1065,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.Provider",
   "oauth2.grant.ResourceOwnerGrant",
   "oauth2.web.ResourceOwnerGrantSiteAdapter",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ScopeTestCase": {
  "lineno": 1304,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.test_grant.ScopeTestCase.test_compare_invalid_scope_requested": {
  "lineno": 1431,
  "symbols_in_volume": [
   "oauth2.error.OAuthInvalidError",
   "oauth2.grant.Scope"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ScopeTestCase.test_compare_scopes_equal": {
  "lineno": 1405,
  "symbols_in_volume": [
   "oauth2.grant.Scope"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ScopeTestCase.test_compare_valid_scope_subset": {
  "lineno": 1418,
  "symbols_in_volume": [
   "oauth2.grant.Scope"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ScopeTestCase.test_parse_scope_default_on_no_matching_scopes": {
  "lineno": 1352,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.grant.Scope",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ScopeTestCase.test_parse_scope_default_on_no_scope": {
  "lineno": 1333,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.grant.Scope",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ScopeTestCase.test_parse_scope_exception_on_available_scopes_no_scope_given": {
  "lineno": 1389,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.error.OAuthInvalidError",
   "oauth2.grant.Scope",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ScopeTestCase.test_parse_scope_no_value_on_no_scope_no_default": {
  "lineno": 1371,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.grant.Scope",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ScopeTestCase.test_parse_scope_scope_present_in_body": {
  "lineno": 1323,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.grant.Scope",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.ScopeTestCase.test_parse_scope_scope_present_in_query": {
  "lineno": 1305,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.grant.Scope",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_grant.mock_time": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.test_oauth2": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "oauth2.test.test_oauth2.ProviderTestCase": {
  "lineno": 14,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.test_oauth2.ProviderTestCase.setUp": {
  "lineno": 15,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.Provider",
   "oauth2.store.ClientStore",
   "oauth2.web.Response"
  ],
  "type": "function"
 },
 "oauth2.test.test_oauth2.ProviderTestCase.test_add_grant_set_expire_time": {
  "lineno": 32,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.grant.AuthorizationCodeGrant",
   "oauth2.grant.AuthorizationCodeGrant.grant_type",
   "oauth2.grant.RefreshToken",
   "oauth2.grant.ResourceOwnerGrant",
   "oauth2.grant.ResourceOwnerGrant.grant_type",
   "oauth2.web.AuthorizationCodeGrantSiteAdapter",
   "oauth2.web.ResourceOwnerGrantSiteAdapter"
  ],
  "type": "function"
 },
 "oauth2.test.test_oauth2.ProviderTestCase.test_dispatch": {
  "lineno": 54,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.web.AuthorizationCodeGrantSiteAdapter",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_oauth2.ProviderTestCase.test_dispatch_general_exception": {
  "lineno": 112,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.grant.GrantHandler",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_oauth2.ProviderTestCase.test_dispatch_no_client_found": {
  "lineno": 95,
  "symbols_in_volume": [
   "json.loads",
   "mock.Mock",
   "oauth2.error.OAuthInvalidNoRedirectError",
   "oauth2.grant.GrantHandler",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_oauth2.ProviderTestCase.test_dispatch_no_grant_type_found": {
  "lineno": 79,
  "symbols_in_volume": [
   "json.dumps",
   "mock.Mock",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_tokengenerator": {
  "lineno": null,
  "symbols_in_volume": [
   "oauth2.test.unittest.main"
  ],
  "type": "module"
 },
 "oauth2.test.test_tokengenerator.URandomTokenGeneratorTestCase": {
  "lineno": 5,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.test_tokengenerator.URandomTokenGeneratorTestCase.test_generate": {
  "lineno": 6,
  "symbols_in_volume": [
   "oauth2.tokengenerator.URandomTokenGenerator"
  ],
  "type": "function"
 },
 "oauth2.test.test_tokengenerator.Uuid4TestCase": {
  "lineno": 16,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.test_tokengenerator.Uuid4TestCase.setUp": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.test.test_tokengenerator.Uuid4TestCase.test_create_access_token_data_no_expiration": {
  "lineno": 20,
  "symbols_in_volume": [
   "oauth2.tokengenerator.Uuid4"
  ],
  "type": "function"
 },
 "oauth2.test.test_tokengenerator.Uuid4TestCase.test_create_access_token_data_with_expiration": {
  "lineno": 28,
  "symbols_in_volume": [
   "oauth2.tokengenerator.Uuid4"
  ],
  "type": "function"
 },
 "oauth2.test.test_tokengenerator.Uuid4TestCase.test_generate": {
  "lineno": 39,
  "symbols_in_volume": [
   "oauth2.tokengenerator.Uuid4",
   "re.compile"
  ],
  "type": "function"
 },
 "oauth2.test.test_web": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "oauth2.test.test_web.RequestTestCase": {
  "lineno": 8,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.test_web.RequestTestCase.test_get_param": {
  "lineno": 48,
  "symbols_in_volume": [
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_web.RequestTestCase.test_header": {
  "lineno": 94,
  "symbols_in_volume": [
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_web.RequestTestCase.test_initialization_no_post_data": {
  "lineno": 9,
  "symbols_in_volume": [
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_web.RequestTestCase.test_initialization_with_post_data": {
  "lineno": 24,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_web.RequestTestCase.test_post_param": {
  "lineno": 66,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.test.test_web.ServerTestCase": {
  "lineno": 107,
  "symbols_in_volume": [
   "oauth2.test.unittest.TestCase"
  ],
  "type": "class"
 },
 "oauth2.test.test_web.ServerTestCase.test_call": {
  "lineno": 108,
  "symbols_in_volume": [
   "mock.Mock",
   "oauth2.Provider",
   "oauth2.web.Response",
   "oauth2.web.wsgi.Application",
   "oauth2.web.wsgi.Request"
  ],
  "type": "function"
 },
 "oauth2.tokengenerator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "oauth2.tokengenerator.TokenGenerator": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.tokengenerator.TokenGenerator.__init__": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.tokengenerator.TokenGenerator.create_access_token_data": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.tokengenerator.TokenGenerator.generate": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.tokengenerator.URandomTokenGenerator": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.tokengenerator.URandomTokenGenerator.__init__": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.tokengenerator.URandomTokenGenerator.generate": {
  "lineno": 60,
  "symbols_in_volume": [
   "hashlib.new",
   "os.urandom"
  ],
  "type": "function"
 },
 "oauth2.tokengenerator.Uuid4": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.tokengenerator.Uuid4.generate": {
  "lineno": 77,
  "symbols_in_volume": [
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "oauth2.web": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "oauth2.web.AuthenticatingSiteAdapter": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.web.AuthenticatingSiteAdapter.authenticate": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.web.AuthorizationCodeGrantSiteAdapter": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.web.ImplicitGrantSiteAdapter": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.web.Request": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.web.Request.get_param": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.web.Request.header": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.web.Request.method": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.web.Request.path": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.web.Request.post_param": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.web.ResourceOwnerGrantSiteAdapter": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.web.Response": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.web.Response.__init__": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.web.Response.add_header": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.web.Response.headers": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.web.UserFacingSiteAdapter": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.web.UserFacingSiteAdapter.render_auth_page": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.web.UserFacingSiteAdapter.user_has_denied_access": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.web.tornado": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "oauth2.web.tornado.OAuth2Handler": {
  "lineno": 49,
  "symbols_in_volume": [
   "tornado.web.RequestHandler"
  ],
  "type": "class"
 },
 "oauth2.web.tornado.OAuth2Handler._dispatch_request": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.web.tornado.OAuth2Handler._map_response": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.web.tornado.OAuth2Handler.get": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.web.tornado.OAuth2Handler.initialize": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.web.tornado.OAuth2Handler.post": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.web.tornado.Request": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.web.tornado.Request.__init__": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.web.tornado.Request.get_param": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.web.tornado.Request.header": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.web.tornado.Request.method": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.web.tornado.Request.path": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.web.tornado.Request.post_param": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.web.tornado.Request.query_string": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.web.wsgi": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "oauth2.web.wsgi.Application": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.web.wsgi.Application.__call__": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.web.wsgi.Application.__init__": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.web.wsgi.Request": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "oauth2.web.wsgi.Request.__init__": {
  "lineno": 18,
  "symbols_in_volume": [
   "oauth2.compatibility.parse_qs"
  ],
  "type": "function"
 },
 "oauth2.web.wsgi.Request.get_param": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.web.wsgi.Request.header": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "oauth2.web.wsgi.Request.post_param": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 }
}