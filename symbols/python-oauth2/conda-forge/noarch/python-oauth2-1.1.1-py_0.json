{
 "oauth2": {
  "data": {},
  "type": "module"
 },
 "oauth2.AuthorizationCodeGrant": {
  "data": {
   "shadows": "oauth2.grant.AuthorizationCodeGrant"
  },
  "type": "import"
 },
 "oauth2.ClientAuthenticator": {
  "data": {
   "shadows": "oauth2.client_authenticator.ClientAuthenticator"
  },
  "type": "import"
 },
 "oauth2.ClientCredentialsGrant": {
  "data": {
   "shadows": "oauth2.grant.ClientCredentialsGrant"
  },
  "type": "import"
 },
 "oauth2.ClientNotFoundError": {
  "data": {
   "shadows": "oauth2.error.ClientNotFoundError"
  },
  "type": "import"
 },
 "oauth2.ImplicitGrant": {
  "data": {
   "shadows": "oauth2.grant.ImplicitGrant"
  },
  "type": "import"
 },
 "oauth2.OAuthInvalidError": {
  "data": {
   "shadows": "oauth2.error.OAuthInvalidError"
  },
  "type": "import"
 },
 "oauth2.OAuthInvalidNoRedirectError": {
  "data": {
   "shadows": "oauth2.error.OAuthInvalidNoRedirectError"
  },
  "type": "import"
 },
 "oauth2.Provider": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.Provider.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "oauth2.client_authenticator.ClientAuthenticator",
    "oauth2.client_authenticator.request_body",
    "oauth2.web.Response"
   ]
  },
  "type": "function"
 },
 "oauth2.Provider._determine_grant_type": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "grant",
    "oauth2.error.UnsupportedGrantError"
   ]
  },
  "type": "function"
 },
 "oauth2.Provider.add_grant": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "oauth2.Provider.dispatch": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "oauth2.error.OAuthInvalidError",
    "oauth2.error.OAuthInvalidNoRedirectError",
    "oauth2.error.UnsupportedGrantError",
    "oauth2.json",
    "oauth2.log.app_log.error"
   ]
  },
  "type": "function"
 },
 "oauth2.Provider.enable_unique_tokens": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "oauth2.Provider.scope_separator": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "oauth2.grant.Scope.separator",
    "property"
   ]
  },
  "type": "function"
 },
 "oauth2.RefreshToken": {
  "data": {
   "shadows": "oauth2.grant.RefreshToken"
  },
  "type": "import"
 },
 "oauth2.ResourceOwnerGrant": {
  "data": {
   "shadows": "oauth2.grant.ResourceOwnerGrant"
  },
  "type": "import"
 },
 "oauth2.Response": {
  "data": {
   "shadows": "oauth2.web.Response"
  },
  "type": "import"
 },
 "oauth2.Scope": {
  "data": {
   "shadows": "oauth2.grant.Scope"
  },
  "type": "import"
 },
 "oauth2.UnsupportedGrantError": {
  "data": {
   "shadows": "oauth2.error.UnsupportedGrantError"
  },
  "type": "import"
 },
 "oauth2.Uuid4": {
  "data": {
   "shadows": "oauth2.tokengenerator.Uuid4"
  },
  "type": "import"
 },
 "oauth2.VERSION": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "oauth2.app_log": {
  "data": {
   "shadows": "oauth2.log.app_log"
  },
  "type": "import"
 },
 "oauth2.client_authenticator": {
  "data": {},
  "type": "module"
 },
 "oauth2.client_authenticator.ClientAuthenticator": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.client_authenticator.ClientAuthenticator.__init__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "oauth2.client_authenticator.ClientAuthenticator.by_identifier": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "oauth2.error.ClientNotFoundError",
    "oauth2.error.OAuthInvalidNoRedirectError",
    "oauth2.error.RedirectUriUnknown"
   ]
  },
  "type": "function"
 },
 "oauth2.client_authenticator.ClientAuthenticator.by_identifier_secret": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "oauth2.error.ClientNotFoundError",
    "oauth2.error.OAuthInvalidError"
   ]
  },
  "type": "function"
 },
 "oauth2.client_authenticator.ClientNotFoundError": {
  "data": {
   "shadows": "oauth2.error.ClientNotFoundError"
  },
  "type": "import"
 },
 "oauth2.client_authenticator.OAuthInvalidError": {
  "data": {
   "shadows": "oauth2.error.OAuthInvalidError"
  },
  "type": "import"
 },
 "oauth2.client_authenticator.OAuthInvalidNoRedirectError": {
  "data": {
   "shadows": "oauth2.error.OAuthInvalidNoRedirectError"
  },
  "type": "import"
 },
 "oauth2.client_authenticator.RedirectUriUnknown": {
  "data": {
   "shadows": "oauth2.error.RedirectUriUnknown"
  },
  "type": "import"
 },
 "oauth2.client_authenticator.b64decode": {
  "data": {
   "shadows": "base64.b64decode"
  },
  "type": "import"
 },
 "oauth2.client_authenticator.http_basic_auth": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "base64.b64decode",
    "oauth2.error.OAuthInvalidError"
   ]
  },
  "type": "function"
 },
 "oauth2.client_authenticator.request_body": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "oauth2.error.OAuthInvalidError"
   ]
  },
  "type": "function"
 },
 "oauth2.compatibility": {
  "data": {
   "symbols_in_volume": [
    "oauth2.compatibility.sys"
   ]
  },
  "type": "module"
 },
 "oauth2.compatibility.parse_qs": {
  "data": {
   "shadows": "urlparse.parse_qs"
  },
  "type": "import"
 },
 "oauth2.compatibility.quote": {
  "data": {
   "shadows": "urllib.quote"
  },
  "type": "import"
 },
 "oauth2.compatibility.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "oauth2.compatibility.urlencode": {
  "data": {
   "shadows": "urllib.urlencode"
  },
  "type": "import"
 },
 "oauth2.datatype": {
  "data": {},
  "type": "module"
 },
 "oauth2.datatype.AccessToken": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.datatype.AccessToken.__init__": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "oauth2.datatype.AccessToken.expires_in": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "int",
    "oauth2.datatype.time",
    "property"
   ]
  },
  "type": "function"
 },
 "oauth2.datatype.AccessToken.is_expired": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "oauth2.datatype.AuthorizationCode": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.datatype.AuthorizationCode.__init__": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "oauth2.datatype.AuthorizationCode.is_expired": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "int",
    "oauth2.datatype.time"
   ]
  },
  "type": "function"
 },
 "oauth2.datatype.Client": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.datatype.Client.__init__": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "oauth2.datatype.Client.grant_type_supported": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "oauth2.datatype.Client.redirect_uri": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "oauth2.error.RedirectUriUnknown"
   ]
  },
  "type": "function"
 },
 "oauth2.datatype.Client.response_type_supported": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "oauth2.datatype.RedirectUriUnknown": {
  "data": {
   "shadows": "oauth2.error.RedirectUriUnknown"
  },
  "type": "import"
 },
 "oauth2.datatype.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "oauth2.error": {
  "data": {},
  "type": "module"
 },
 "oauth2.error.AccessTokenNotFound": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "oauth2.error.AuthCodeNotFound": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "oauth2.error.ClientNotFoundError": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "oauth2.error.InvalidSiteAdapter": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "oauth2.error.OAuthBaseError": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "oauth2.error.OAuthBaseError.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "oauth2.error.OAuthBaseError",
    "super"
   ]
  },
  "type": "function"
 },
 "oauth2.error.OAuthInvalidError": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "oauth2.error.OAuthBaseError"
   ]
  },
  "type": "class"
 },
 "oauth2.error.OAuthInvalidNoRedirectError": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "oauth2.error.OAuthInvalidError"
   ]
  },
  "type": "class"
 },
 "oauth2.error.RedirectUriUnknown": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "oauth2.error.UnsupportedGrantError": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "oauth2.error.UserIdentifierMissingError": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "oauth2.error.UserNotAuthenticated": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "oauth2.grant": {
  "data": {},
  "type": "module"
 },
 "oauth2.grant.AccessToken": {
  "data": {
   "shadows": "oauth2.datatype.AccessToken"
  },
  "type": "import"
 },
 "oauth2.grant.AccessTokenMixin": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.grant.AccessTokenMixin.__init__": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "oauth2.grant.AccessTokenMixin",
    "super"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.AccessTokenMixin.create_token": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "int",
    "oauth2.datatype.AccessToken",
    "oauth2.error.AccessTokenNotFound",
    "oauth2.error.UserIdentifierMissingError",
    "oauth2.grant.time"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.AccessTokenNotFound": {
  "data": {
   "shadows": "oauth2.error.AccessTokenNotFound"
  },
  "type": "import"
 },
 "oauth2.grant.AuthCodeNotFound": {
  "data": {
   "shadows": "oauth2.error.AuthCodeNotFound"
  },
  "type": "import"
 },
 "oauth2.grant.AuthRequestMixin": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.grant.AuthRequestMixin.__init__": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "oauth2.grant.AuthRequestMixin",
    "super"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.AuthRequestMixin.read_validate_params": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "oauth2.error.OAuthInvalidError"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.AuthorizationCode": {
  "data": {
   "shadows": "oauth2.datatype.AuthorizationCode"
  },
  "type": "import"
 },
 "oauth2.grant.AuthorizationCodeAuthHandler": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "oauth2.grant.AuthRequestMixin",
    "oauth2.grant.AuthorizeMixin",
    "oauth2.grant.GrantHandler"
   ]
  },
  "type": "class"
 },
 "oauth2.grant.AuthorizationCodeAuthHandler.__init__": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "oauth2.grant.AuthorizationCodeAuthHandler",
    "super"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.AuthorizationCodeAuthHandler._generate_location": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "oauth2.compatibility.quote"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.AuthorizationCodeAuthHandler.handle_error": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "oauth2.compatibility.urlencode"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.AuthorizationCodeAuthHandler.process": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "oauth2.datatype.AuthorizationCode",
    "oauth2.grant.time",
    "oauth2.web.Response"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.AuthorizationCodeGrant": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "oauth2.grant.GrantHandlerFactory",
    "oauth2.grant.ScopeGrant",
    "oauth2.grant.SiteAdapterMixin",
    "oauth2.web.AuthorizationCodeGrantSiteAdapter"
   ]
  },
  "type": "class"
 },
 "oauth2.grant.AuthorizationCodeGrant.__call__": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "oauth2.grant.AuthorizationCodeAuthHandler",
    "oauth2.grant.AuthorizationCodeTokenHandler"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.AuthorizationCodeGrant.__init__": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "oauth2.grant.AuthorizationCodeGrant",
    "super"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.AuthorizationCodeGrantSiteAdapter": {
  "data": {
   "shadows": "oauth2.web.AuthorizationCodeGrantSiteAdapter"
  },
  "type": "import"
 },
 "oauth2.grant.AuthorizationCodeTokenHandler": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "oauth2.grant.AccessTokenMixin",
    "oauth2.grant.GrantHandler"
   ]
  },
  "type": "class"
 },
 "oauth2.grant.AuthorizationCodeTokenHandler.__init__": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "oauth2.grant.AuthorizationCodeTokenHandler",
    "super"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.AuthorizationCodeTokenHandler._read_params": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "oauth2.error.OAuthInvalidError",
    "oauth2.error.RedirectUriUnknown"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.AuthorizationCodeTokenHandler._validate_code": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "oauth2.error.AuthCodeNotFound",
    "oauth2.error.OAuthInvalidError"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.AuthorizationCodeTokenHandler.handle_error": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "oauth2.grant.json_error_response"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.AuthorizationCodeTokenHandler.process": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "oauth2.grant.encode_scopes",
    "oauth2.grant.json_success_response"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.AuthorizationCodeTokenHandler.read_validate_params": {
  "data": {
   "lineno": 495
  },
  "type": "function"
 },
 "oauth2.grant.AuthorizeMixin": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.grant.AuthorizeMixin.__init__": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "oauth2.grant.AuthorizeMixin",
    "super"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.AuthorizeMixin.authorize": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "oauth2.error.OAuthInvalidError",
    "oauth2.error.UserNotAuthenticated"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.AuthorizeMixin.sanitize_return_value": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "staticmethod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.ClientCredentialsGrant": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "oauth2.grant.GrantHandlerFactory",
    "oauth2.grant.ScopeGrant"
   ]
  },
  "type": "class"
 },
 "oauth2.grant.ClientCredentialsGrant.__call__": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "oauth2.grant.ClientCredentialsHandler"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.ClientCredentialsHandler": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "oauth2.grant.GrantHandler"
   ]
  },
  "type": "class"
 },
 "oauth2.grant.ClientCredentialsHandler.__init__": {
  "data": {
   "lineno": 1038
  },
  "type": "function"
 },
 "oauth2.grant.ClientCredentialsHandler.handle_error": {
  "data": {
   "lineno": 1082,
   "symbols_in_volume": [
    "oauth2.grant.json_error_response"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.ClientCredentialsHandler.process": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "int",
    "oauth2.datatype.AccessToken",
    "oauth2.grant.ClientCredentialsGrant",
    "oauth2.grant.encode_scopes",
    "oauth2.grant.json_success_response",
    "oauth2.grant.time"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.ClientCredentialsHandler.read_validate_params": {
  "data": {
   "lineno": 1077
  },
  "type": "function"
 },
 "oauth2.grant.GrantHandler": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.grant.GrantHandler.handle_error": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.GrantHandler.process": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.GrantHandler.read_validate_params": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.GrantHandlerFactory": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.grant.GrantHandlerFactory.__call__": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.ImplicitGrant": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "oauth2.grant.GrantHandlerFactory",
    "oauth2.grant.ScopeGrant",
    "oauth2.grant.SiteAdapterMixin",
    "oauth2.web.ImplicitGrantSiteAdapter"
   ]
  },
  "type": "class"
 },
 "oauth2.grant.ImplicitGrant.__call__": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "oauth2.grant.ImplicitGrantHandler"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.ImplicitGrantHandler": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "oauth2.grant.AuthRequestMixin",
    "oauth2.grant.AuthorizeMixin",
    "oauth2.grant.GrantHandler"
   ]
  },
  "type": "class"
 },
 "oauth2.grant.ImplicitGrantHandler.__init__": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "oauth2.grant.ImplicitGrantHandler",
    "super"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.ImplicitGrantHandler._redirect_access_token": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "oauth2.compatibility.quote",
    "oauth2.grant.encode_scopes"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.ImplicitGrantHandler.handle_error": {
  "data": {
   "lineno": 707
  },
  "type": "function"
 },
 "oauth2.grant.ImplicitGrantHandler.process": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "isinstance",
    "oauth2.datatype.AccessToken",
    "oauth2.grant.ImplicitGrant",
    "oauth2.web.Response"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.ImplicitGrantSiteAdapter": {
  "data": {
   "shadows": "oauth2.web.ImplicitGrantSiteAdapter"
  },
  "type": "import"
 },
 "oauth2.grant.InvalidSiteAdapter": {
  "data": {
   "shadows": "oauth2.error.InvalidSiteAdapter"
  },
  "type": "import"
 },
 "oauth2.grant.OAuthInvalidError": {
  "data": {
   "shadows": "oauth2.error.OAuthInvalidError"
  },
  "type": "import"
 },
 "oauth2.grant.RedirectUriUnknown": {
  "data": {
   "shadows": "oauth2.error.RedirectUriUnknown"
  },
  "type": "import"
 },
 "oauth2.grant.RefreshToken": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "oauth2.grant.GrantHandlerFactory",
    "oauth2.grant.ScopeGrant"
   ]
  },
  "type": "class"
 },
 "oauth2.grant.RefreshToken.__call__": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "oauth2.grant.RefreshTokenHandler"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.RefreshToken.__init__": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "oauth2.grant.RefreshToken",
    "super"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.RefreshTokenHandler": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "oauth2.grant.GrantHandler"
   ]
  },
  "type": "class"
 },
 "oauth2.grant.RefreshTokenHandler.__init__": {
  "data": {
   "lineno": 920
  },
  "type": "function"
 },
 "oauth2.grant.RefreshTokenHandler.handle_error": {
  "data": {
   "lineno": 1017,
   "symbols_in_volume": [
    "oauth2.grant.json_error_response"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.RefreshTokenHandler.process": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "int",
    "oauth2.datatype.AccessToken",
    "oauth2.grant.json_success_response",
    "oauth2.grant.time"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.RefreshTokenHandler.read_validate_params": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "int",
    "oauth2.error.AccessTokenNotFound",
    "oauth2.error.OAuthInvalidError",
    "oauth2.grant.time"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.ResourceOwnerGrant": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "oauth2.grant.GrantHandlerFactory",
    "oauth2.grant.ScopeGrant",
    "oauth2.grant.SiteAdapterMixin",
    "oauth2.web.ResourceOwnerGrantSiteAdapter"
   ]
  },
  "type": "class"
 },
 "oauth2.grant.ResourceOwnerGrant.__call__": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "oauth2.grant.ResourceOwnerGrantHandler"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.ResourceOwnerGrant.__init__": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "oauth2.grant.ResourceOwnerGrant",
    "super"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.ResourceOwnerGrantHandler": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "oauth2.grant.AccessTokenMixin",
    "oauth2.grant.GrantHandler"
   ]
  },
  "type": "class"
 },
 "oauth2.grant.ResourceOwnerGrantHandler.__init__": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "oauth2.grant.ResourceOwnerGrantHandler",
    "super"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.ResourceOwnerGrantHandler.handle_error": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "oauth2.grant.json_error_response"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.ResourceOwnerGrantHandler.process": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "isinstance",
    "oauth2.error.OAuthInvalidError",
    "oauth2.error.UserNotAuthenticated",
    "oauth2.grant.AuthorizeMixin",
    "oauth2.grant.ResourceOwnerGrant",
    "oauth2.grant.encode_scopes",
    "oauth2.grant.json_success_response",
    "oauth2.web.Response"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.ResourceOwnerGrantHandler.read_validate_params": {
  "data": {
   "lineno": 845
  },
  "type": "function"
 },
 "oauth2.grant.ResourceOwnerGrantSiteAdapter": {
  "data": {
   "shadows": "oauth2.web.ResourceOwnerGrantSiteAdapter"
  },
  "type": "import"
 },
 "oauth2.grant.Response": {
  "data": {
   "shadows": "oauth2.web.Response"
  },
  "type": "import"
 },
 "oauth2.grant.ResponseTypeGrant": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.grant.ResponseTypeGrant.error_response": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "oauth2.grant.Scope": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.grant.Scope.__init__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.Scope.compare": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "oauth2.error.OAuthInvalidError"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.Scope.parse": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "oauth2.error.OAuthInvalidError"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.ScopeGrant": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.grant.ScopeGrant.__init__": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "oauth2.grant.Scope",
    "oauth2.grant.ScopeGrant",
    "super"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.ScopeGrant._create_scope_handler": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "oauth2.grant.SiteAdapterMixin": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.grant.SiteAdapterMixin.__init__": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "isinstance",
    "oauth2.error.InvalidSiteAdapter",
    "oauth2.grant.SiteAdapterMixin",
    "super"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.UserIdentifierMissingError": {
  "data": {
   "shadows": "oauth2.error.UserIdentifierMissingError"
  },
  "type": "import"
 },
 "oauth2.grant.UserNotAuthenticated": {
  "data": {
   "shadows": "oauth2.error.UserNotAuthenticated"
  },
  "type": "import"
 },
 "oauth2.grant.encode_scopes": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "oauth2.compatibility.quote"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "oauth2.grant.json_error_response": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "oauth2.grant.json"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.json_success_response": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "oauth2.grant.json"
   ]
  },
  "type": "function"
 },
 "oauth2.grant.quote": {
  "data": {
   "shadows": "oauth2.compatibility.quote"
  },
  "type": "import"
 },
 "oauth2.grant.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "oauth2.grant.urlencode": {
  "data": {
   "shadows": "oauth2.compatibility.urlencode"
  },
  "type": "import"
 },
 "oauth2.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "oauth2.log": {
  "data": {
   "symbols_in_volume": [
    "oauth2.log.logging"
   ]
  },
  "type": "module"
 },
 "oauth2.log.app_log": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "oauth2.log.gen_log": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "oauth2.log.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "oauth2.request_body": {
  "data": {
   "shadows": "oauth2.client_authenticator.request_body"
  },
  "type": "import"
 },
 "oauth2.store": {
  "data": {},
  "type": "module"
 },
 "oauth2.store.AccessTokenStore": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.store.AccessTokenStore.delete_refresh_token": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "oauth2.store.AccessTokenStore.fetch_by_refresh_token": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "oauth2.store.AccessTokenStore.fetch_existing_token_of_user": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "oauth2.store.AccessTokenStore.save_token": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "oauth2.store.AuthCodeStore": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.store.AuthCodeStore.delete_code": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "oauth2.store.AuthCodeStore.fetch_by_code": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "oauth2.store.AuthCodeStore.save_code": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "oauth2.store.ClientStore": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.store.ClientStore.fetch_by_client_id": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "oauth2.store.dbapi": {
  "data": {},
  "type": "module"
 },
 "oauth2.store.dbapi.AccessToken": {
  "data": {
   "shadows": "oauth2.datatype.AccessToken"
  },
  "type": "import"
 },
 "oauth2.store.dbapi.AccessTokenNotFound": {
  "data": {
   "shadows": "oauth2.error.AccessTokenNotFound"
  },
  "type": "import"
 },
 "oauth2.store.dbapi.AccessTokenStore": {
  "data": {
   "shadows": "oauth2.store.AccessTokenStore"
  },
  "type": "import"
 },
 "oauth2.store.dbapi.AuthCodeNotFound": {
  "data": {
   "shadows": "oauth2.error.AuthCodeNotFound"
  },
  "type": "import"
 },
 "oauth2.store.dbapi.AuthCodeStore": {
  "data": {
   "shadows": "oauth2.store.AuthCodeStore"
  },
  "type": "import"
 },
 "oauth2.store.dbapi.AuthorizationCode": {
  "data": {
   "shadows": "oauth2.datatype.AuthorizationCode"
  },
  "type": "import"
 },
 "oauth2.store.dbapi.Client": {
  "data": {
   "shadows": "oauth2.datatype.Client"
  },
  "type": "import"
 },
 "oauth2.store.dbapi.ClientNotFoundError": {
  "data": {
   "shadows": "oauth2.error.ClientNotFoundError"
  },
  "type": "import"
 },
 "oauth2.store.dbapi.ClientStore": {
  "data": {
   "shadows": "oauth2.store.ClientStore"
  },
  "type": "import"
 },
 "oauth2.store.dbapi.DatabaseStore": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.store.dbapi.DatabaseStore.__init__": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "oauth2.store.dbapi.DatabaseStore.execute": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "oauth2.store.dbapi.DatabaseStore.fetchall": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "oauth2.store.dbapi.DatabaseStore.fetchone": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "oauth2.store.dbapi.DbApiAccessTokenStore": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "oauth2.store.AccessTokenStore",
    "oauth2.store.dbapi.DatabaseStore"
   ]
  },
  "type": "class"
 },
 "oauth2.store.dbapi.DbApiAccessTokenStore._fetch_data": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "oauth2.store.dbapi.DbApiAccessTokenStore._fetch_scopes": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "oauth2.store.dbapi.DbApiAccessTokenStore._row_to_token": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "oauth2.datatype.AccessToken"
   ]
  },
  "type": "function"
 },
 "oauth2.store.dbapi.DbApiAccessTokenStore.delete_refresh_token": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "oauth2.store.dbapi.DbApiAccessTokenStore.fetch_by_refresh_token": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "oauth2.error.AccessTokenNotFound"
   ]
  },
  "type": "function"
 },
 "oauth2.store.dbapi.DbApiAccessTokenStore.fetch_existing_token_of_user": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "oauth2.error.AccessTokenNotFound"
   ]
  },
  "type": "function"
 },
 "oauth2.store.dbapi.DbApiAccessTokenStore.save_token": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "oauth2.store.dbapi.DbApiAuthCodeStore": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "oauth2.store.AuthCodeStore",
    "oauth2.store.dbapi.DatabaseStore"
   ]
  },
  "type": "class"
 },
 "oauth2.store.dbapi.DbApiAuthCodeStore.delete_code": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "oauth2.store.dbapi.DbApiAuthCodeStore.fetch_by_code": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "dict",
    "oauth2.datatype.AuthorizationCode",
    "oauth2.error.AuthCodeNotFound"
   ]
  },
  "type": "function"
 },
 "oauth2.store.dbapi.DbApiAuthCodeStore.save_code": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "oauth2.store.dbapi.DbApiClientStore": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "oauth2.store.ClientStore",
    "oauth2.store.dbapi.DatabaseStore"
   ]
  },
  "type": "class"
 },
 "oauth2.store.dbapi.DbApiClientStore.fetch_by_client_id": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "oauth2.datatype.Client",
    "oauth2.error.ClientNotFoundError"
   ]
  },
  "type": "function"
 },
 "oauth2.store.dbapi.mysql": {
  "data": {},
  "type": "module"
 },
 "oauth2.store.dbapi.mysql.DbApiAccessTokenStore": {
  "data": {
   "shadows": "oauth2.store.dbapi.DbApiAccessTokenStore"
  },
  "type": "import"
 },
 "oauth2.store.dbapi.mysql.DbApiAuthCodeStore": {
  "data": {
   "shadows": "oauth2.store.dbapi.DbApiAuthCodeStore"
  },
  "type": "import"
 },
 "oauth2.store.dbapi.mysql.DbApiClientStore": {
  "data": {
   "shadows": "oauth2.store.dbapi.DbApiClientStore"
  },
  "type": "import"
 },
 "oauth2.store.dbapi.mysql.MysqlAccessTokenStore": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "oauth2.store.dbapi.DbApiAccessTokenStore"
   ]
  },
  "type": "class"
 },
 "oauth2.store.dbapi.mysql.MysqlAuthCodeStore": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "oauth2.store.dbapi.DbApiAuthCodeStore"
   ]
  },
  "type": "class"
 },
 "oauth2.store.dbapi.mysql.MysqlClientStore": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "oauth2.store.dbapi.DbApiClientStore"
   ]
  },
  "type": "class"
 },
 "oauth2.store.memcache": {
  "data": {},
  "type": "module"
 },
 "oauth2.store.memcache.AccessToken": {
  "data": {
   "shadows": "oauth2.datatype.AccessToken"
  },
  "type": "import"
 },
 "oauth2.store.memcache.AccessTokenNotFound": {
  "data": {
   "shadows": "oauth2.error.AccessTokenNotFound"
  },
  "type": "import"
 },
 "oauth2.store.memcache.AccessTokenStore": {
  "data": {
   "shadows": "oauth2.store.AccessTokenStore"
  },
  "type": "import"
 },
 "oauth2.store.memcache.AuthCodeNotFound": {
  "data": {
   "shadows": "oauth2.error.AuthCodeNotFound"
  },
  "type": "import"
 },
 "oauth2.store.memcache.AuthCodeStore": {
  "data": {
   "shadows": "oauth2.store.AuthCodeStore"
  },
  "type": "import"
 },
 "oauth2.store.memcache.AuthorizationCode": {
  "data": {
   "shadows": "oauth2.datatype.AuthorizationCode"
  },
  "type": "import"
 },
 "oauth2.store.memcache.TokenStore": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "oauth2.store.AccessTokenStore",
    "oauth2.store.AuthCodeStore"
   ]
  },
  "type": "class"
 },
 "oauth2.store.memcache.TokenStore.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "oauth2.store.memcache.memcache"
   ]
  },
  "type": "function"
 },
 "oauth2.store.memcache.TokenStore._generate_cache_key": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "oauth2.store.memcache.TokenStore._unique_token_key": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "oauth2.store.memcache.TokenStore.delete_code": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "oauth2.store.memcache.TokenStore.delete_refresh_token": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "oauth2.store.memcache.TokenStore.fetch_by_code": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "oauth2.datatype.AuthorizationCode",
    "oauth2.error.AuthCodeNotFound"
   ]
  },
  "type": "function"
 },
 "oauth2.store.memcache.TokenStore.fetch_by_refresh_token": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "oauth2.datatype.AccessToken",
    "oauth2.error.AccessTokenNotFound"
   ]
  },
  "type": "function"
 },
 "oauth2.store.memcache.TokenStore.fetch_existing_token_of_user": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "oauth2.datatype.AccessToken",
    "oauth2.error.AccessTokenNotFound"
   ]
  },
  "type": "function"
 },
 "oauth2.store.memcache.TokenStore.save_code": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "oauth2.store.memcache.TokenStore.save_token": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "oauth2.store.memcache.memcache": {
  "data": {
   "shadows": "memcache"
  },
  "type": "import"
 },
 "oauth2.store.memory": {
  "data": {},
  "type": "module"
 },
 "oauth2.store.memory.AccessTokenNotFound": {
  "data": {
   "shadows": "oauth2.error.AccessTokenNotFound"
  },
  "type": "import"
 },
 "oauth2.store.memory.AccessTokenStore": {
  "data": {
   "shadows": "oauth2.store.AccessTokenStore"
  },
  "type": "import"
 },
 "oauth2.store.memory.AuthCodeNotFound": {
  "data": {
   "shadows": "oauth2.error.AuthCodeNotFound"
  },
  "type": "import"
 },
 "oauth2.store.memory.AuthCodeStore": {
  "data": {
   "shadows": "oauth2.store.AuthCodeStore"
  },
  "type": "import"
 },
 "oauth2.store.memory.Client": {
  "data": {
   "shadows": "oauth2.datatype.Client"
  },
  "type": "import"
 },
 "oauth2.store.memory.ClientNotFoundError": {
  "data": {
   "shadows": "oauth2.error.ClientNotFoundError"
  },
  "type": "import"
 },
 "oauth2.store.memory.ClientStore": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "oauth2.store.ClientStore"
   ]
  },
  "type": "class"
 },
 "oauth2.store.memory.ClientStore.__init__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "oauth2.store.memory.ClientStore.add_client": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "oauth2.datatype.Client"
   ]
  },
  "type": "function"
 },
 "oauth2.store.memory.ClientStore.fetch_by_client_id": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "oauth2.error.ClientNotFoundError"
   ]
  },
  "type": "function"
 },
 "oauth2.store.memory.TokenStore": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "oauth2.store.AccessTokenStore",
    "oauth2.store.AuthCodeStore"
   ]
  },
  "type": "class"
 },
 "oauth2.store.memory.TokenStore.__init__": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "oauth2.store.memory.TokenStore._unique_token_key": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "oauth2.store.memory.TokenStore.delete_code": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "oauth2.store.memory.TokenStore.delete_refresh_token": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "oauth2.store.memory.TokenStore.fetch_by_code": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "oauth2.error.AuthCodeNotFound"
   ]
  },
  "type": "function"
 },
 "oauth2.store.memory.TokenStore.fetch_by_refresh_token": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "oauth2.error.AccessTokenNotFound"
   ]
  },
  "type": "function"
 },
 "oauth2.store.memory.TokenStore.fetch_by_token": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "oauth2.error.AccessTokenNotFound"
   ]
  },
  "type": "function"
 },
 "oauth2.store.memory.TokenStore.fetch_existing_token_of_user": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "KeyError",
    "oauth2.error.AccessTokenNotFound"
   ]
  },
  "type": "function"
 },
 "oauth2.store.memory.TokenStore.save_code": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "oauth2.store.memory.TokenStore.save_token": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "oauth2.store.mongodb": {
  "data": {},
  "type": "module"
 },
 "oauth2.store.mongodb.AccessToken": {
  "data": {
   "shadows": "oauth2.datatype.AccessToken"
  },
  "type": "import"
 },
 "oauth2.store.mongodb.AccessTokenNotFound": {
  "data": {
   "shadows": "oauth2.error.AccessTokenNotFound"
  },
  "type": "import"
 },
 "oauth2.store.mongodb.AccessTokenStore": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "oauth2.store.AccessTokenStore",
    "oauth2.store.mongodb.MongodbStore"
   ]
  },
  "type": "class"
 },
 "oauth2.store.mongodb.AccessTokenStore.delete_refresh_token": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "oauth2.store.mongodb.AccessTokenStore.fetch_by_refresh_token": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "oauth2.datatype.AccessToken",
    "oauth2.error.AccessTokenNotFound"
   ]
  },
  "type": "function"
 },
 "oauth2.store.mongodb.AccessTokenStore.fetch_existing_token_of_user": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "oauth2.datatype.AccessToken",
    "oauth2.error.AccessTokenNotFound",
    "oauth2.store.mongodb.pymongo"
   ]
  },
  "type": "function"
 },
 "oauth2.store.mongodb.AccessTokenStore.save_token": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "oauth2.store.mongodb.AuthCodeNotFound": {
  "data": {
   "shadows": "oauth2.error.AuthCodeNotFound"
  },
  "type": "import"
 },
 "oauth2.store.mongodb.AuthCodeStore": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "oauth2.store.AuthCodeStore",
    "oauth2.store.mongodb.MongodbStore"
   ]
  },
  "type": "class"
 },
 "oauth2.store.mongodb.AuthCodeStore.delete_code": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "oauth2.store.mongodb.AuthCodeStore.fetch_by_code": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "oauth2.datatype.AuthorizationCode",
    "oauth2.error.AuthCodeNotFound"
   ]
  },
  "type": "function"
 },
 "oauth2.store.mongodb.AuthCodeStore.save_code": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "oauth2.store.mongodb.AuthorizationCode": {
  "data": {
   "shadows": "oauth2.datatype.AuthorizationCode"
  },
  "type": "import"
 },
 "oauth2.store.mongodb.Client": {
  "data": {
   "shadows": "oauth2.datatype.Client"
  },
  "type": "import"
 },
 "oauth2.store.mongodb.ClientNotFoundError": {
  "data": {
   "shadows": "oauth2.error.ClientNotFoundError"
  },
  "type": "import"
 },
 "oauth2.store.mongodb.ClientStore": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "oauth2.store.ClientStore",
    "oauth2.store.mongodb.MongodbStore"
   ]
  },
  "type": "class"
 },
 "oauth2.store.mongodb.ClientStore.fetch_by_client_id": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "oauth2.datatype.Client",
    "oauth2.error.ClientNotFoundError"
   ]
  },
  "type": "function"
 },
 "oauth2.store.mongodb.MongodbStore": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.store.mongodb.MongodbStore.__init__": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "oauth2.store.mongodb.pymongo": {
  "data": {
   "shadows": "pymongo"
  },
  "type": "import"
 },
 "oauth2.store.redisdb": {
  "data": {},
  "type": "module"
 },
 "oauth2.store.redisdb.AccessToken": {
  "data": {
   "shadows": "oauth2.datatype.AccessToken"
  },
  "type": "import"
 },
 "oauth2.store.redisdb.AccessTokenNotFound": {
  "data": {
   "shadows": "oauth2.error.AccessTokenNotFound"
  },
  "type": "import"
 },
 "oauth2.store.redisdb.AccessTokenStore": {
  "data": {
   "shadows": "oauth2.store.AccessTokenStore"
  },
  "type": "import"
 },
 "oauth2.store.redisdb.AuthCodeNotFound": {
  "data": {
   "shadows": "oauth2.error.AuthCodeNotFound"
  },
  "type": "import"
 },
 "oauth2.store.redisdb.AuthCodeStore": {
  "data": {
   "shadows": "oauth2.store.AuthCodeStore"
  },
  "type": "import"
 },
 "oauth2.store.redisdb.AuthorizationCode": {
  "data": {
   "shadows": "oauth2.datatype.AuthorizationCode"
  },
  "type": "import"
 },
 "oauth2.store.redisdb.Client": {
  "data": {
   "shadows": "oauth2.datatype.Client"
  },
  "type": "import"
 },
 "oauth2.store.redisdb.ClientNotFoundError": {
  "data": {
   "shadows": "oauth2.error.ClientNotFoundError"
  },
  "type": "import"
 },
 "oauth2.store.redisdb.ClientStore": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "oauth2.store.ClientStore",
    "oauth2.store.redisdb.RedisStore"
   ]
  },
  "type": "class"
 },
 "oauth2.store.redisdb.ClientStore.add_client": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "oauth2.store.redisdb.ClientStore.fetch_by_client_id": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "oauth2.datatype.Client",
    "oauth2.error.ClientNotFoundError"
   ]
  },
  "type": "function"
 },
 "oauth2.store.redisdb.RedisStore": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.store.redisdb.RedisStore.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "oauth2.store.redisdb.redis"
   ]
  },
  "type": "function"
 },
 "oauth2.store.redisdb.RedisStore._generate_cache_key": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "oauth2.store.redisdb.RedisStore.delete": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "oauth2.store.redisdb.RedisStore.read": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "oauth2.store.redisdb.json"
   ]
  },
  "type": "function"
 },
 "oauth2.store.redisdb.RedisStore.write": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "oauth2.store.redisdb.json"
   ]
  },
  "type": "function"
 },
 "oauth2.store.redisdb.TokenStore": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "oauth2.store.AccessTokenStore",
    "oauth2.store.AuthCodeStore",
    "oauth2.store.redisdb.RedisStore"
   ]
  },
  "type": "class"
 },
 "oauth2.store.redisdb.TokenStore._unique_token_key": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "oauth2.store.redisdb.TokenStore.delete_code": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "oauth2.store.redisdb.TokenStore.delete_refresh_token": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "oauth2.store.redisdb.TokenStore.fetch_by_code": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "oauth2.datatype.AuthorizationCode",
    "oauth2.error.AuthCodeNotFound"
   ]
  },
  "type": "function"
 },
 "oauth2.store.redisdb.TokenStore.fetch_by_refresh_token": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "oauth2.datatype.AccessToken",
    "oauth2.error.AccessTokenNotFound"
   ]
  },
  "type": "function"
 },
 "oauth2.store.redisdb.TokenStore.fetch_existing_token_of_user": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "oauth2.datatype.AccessToken",
    "oauth2.error.AccessTokenNotFound"
   ]
  },
  "type": "function"
 },
 "oauth2.store.redisdb.TokenStore.save_code": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "oauth2.store.redisdb.TokenStore.save_token": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "oauth2.store.redisdb.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "oauth2.store.redisdb.redis": {
  "data": {
   "shadows": "redis"
  },
  "type": "import"
 },
 "oauth2.test": {
  "data": {
   "symbols_in_volume": [
    "oauth2.test.sys"
   ]
  },
  "type": "module"
 },
 "oauth2.test.functional": {
  "data": {},
  "type": "module"
 },
 "oauth2.test.functional.MemoryStoreCreator": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "oauth2.test.functional.StoreCreator"
   ]
  },
  "type": "class"
 },
 "oauth2.test.functional.MemoryStoreCreator.after_create": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "oauth2.test.functional.MemoryStoreCreator.create_access_token_store": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "oauth2.test.functional.MemoryStoreCreator.create_auth_code_store": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "oauth2.test.functional.MemoryStoreCreator.create_client_store": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "oauth2.test.functional.MemoryStoreCreator.initialize": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "oauth2.test.functional.MongoClient": {
  "data": {
   "shadows": "pymongo.MongoClient"
  },
  "type": "import"
 },
 "oauth2.test.functional.MongoDbStoreCreator": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "oauth2.test.functional.StoreCreator"
   ]
  },
  "type": "class"
 },
 "oauth2.test.functional.MongoDbStoreCreator.after_create": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "oauth2.test.functional.MongoDbStoreCreator.create_access_token_store": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "oauth2.test.functional.MongoDbStoreCreator.create_auth_code_store": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "oauth2.test.functional.MongoDbStoreCreator.create_client_store": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "oauth2.test.functional.MongoDbStoreCreator.initialize": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "pymongo.MongoClient"
   ]
  },
  "type": "function"
 },
 "oauth2.test.functional.MysqlStoreCreator": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "oauth2.test.functional.StoreCreator"
   ]
  },
  "type": "class"
 },
 "oauth2.test.functional.MysqlStoreCreator.after_create": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "oauth2.test.functional.MysqlStoreCreator.before_create": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "oauth2.test.functional.MysqlStoreCreator.create_access_token_store": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "oauth2.test.functional.MysqlStoreCreator.create_auth_code_store": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "oauth2.test.functional.MysqlStoreCreator.create_client_store": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "oauth2.test.functional.MysqlStoreCreator.initialize": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "oauth2.test.functional.NoLoggingHandler": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "wsgiref.simple_server.WSGIRequestHandler"
   ]
  },
  "type": "class"
 },
 "oauth2.test.functional.NoLoggingHandler.log_message": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "oauth2.test.functional.RedisStoreCreator": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "oauth2.test.functional.StoreCreator"
   ]
  },
  "type": "class"
 },
 "oauth2.test.functional.RedisStoreCreator.after_create": {
  "data": {
   "lineno": 293
  },
  "type": "function"
 },
 "oauth2.test.functional.RedisStoreCreator.create_access_token_store": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "oauth2.test.functional.RedisStoreCreator.create_auth_code_store": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "oauth2.test.functional.RedisStoreCreator.create_client_store": {
  "data": {
   "lineno": 290
  },
  "type": "function"
 },
 "oauth2.test.functional.RedisStoreCreator.initialize": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "oauth2.test.functional.redis"
   ]
  },
  "type": "function"
 },
 "oauth2.test.functional.StoreCreator": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.test.functional.StoreCreator.__init__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "oauth2.test.functional.StoreCreator.after_create": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "oauth2.test.functional.StoreCreator.before_create": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "oauth2.test.functional.StoreCreator.create_access_token_store": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "oauth2.test.functional.StoreCreator.create_auth_code_store": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "oauth2.test.functional.StoreCreator.create_client_store": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "oauth2.test.functional.StoreCreator.initialize": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "oauth2.test.functional.WSGIRequestHandler": {
  "data": {
   "shadows": "wsgiref.simple_server.WSGIRequestHandler"
  },
  "type": "import"
 },
 "oauth2.test.functional.mysql.connector": {
  "data": {
   "shadows": "mysql.connector"
  },
  "type": "import"
 },
 "oauth2.test.functional.oauth2.store.dbapi.mysql": {
  "data": {
   "shadows": "oauth2.store.dbapi.mysql"
  },
  "type": "import"
 },
 "oauth2.test.functional.oauth2.store.memory": {
  "data": {
   "shadows": "oauth2.store.memory"
  },
  "type": "import"
 },
 "oauth2.test.functional.oauth2.store.mongodb": {
  "data": {
   "shadows": "oauth2.store.mongodb"
  },
  "type": "import"
 },
 "oauth2.test.functional.oauth2.store.redisdb": {
  "data": {
   "shadows": "oauth2.store.redisdb"
  },
  "type": "import"
 },
 "oauth2.test.functional.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "oauth2.test.functional.redis": {
  "data": {
   "shadows": "redis"
  },
  "type": "import"
 },
 "oauth2.test.functional.store_factory": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "creator_class",
    "oauth2.test.functional.os"
   ]
  },
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "oauth2.test.functional.test_authorization_code.Application": {
  "data": {
   "shadows": "oauth2.web.wsgi.Application"
  },
  "type": "import"
 },
 "oauth2.test.functional.test_authorization_code.AuthorizationCodeGrant": {
  "data": {
   "shadows": "oauth2.grant.AuthorizationCodeGrant"
  },
  "type": "import"
 },
 "oauth2.test.functional.test_authorization_code.AuthorizationCodeGrantSiteAdapter": {
  "data": {
   "shadows": "oauth2.web.AuthorizationCodeGrantSiteAdapter"
  },
  "type": "import"
 },
 "oauth2.test.functional.test_authorization_code.AuthorizationCodeTestCase": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.functional.test_authorization_code.AuthorizationCodeTestCase.access_token": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "exit",
    "oauth2.test.functional.test_authorization_code.json",
    "print",
    "urllib.urlencode",
    "urllib2.HTTPError",
    "urllib2.urlopen"
   ]
  },
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.AuthorizationCodeTestCase.setUp": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.AuthorizationCodeTestCase.tearDown": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.AuthorizationCodeTestCase.test_tornado": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "Exception",
    "multiprocessing.Process",
    "multiprocessing.Queue",
    "oauth2.test.functional.test_authorization_code.run_client"
   ]
  },
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.AuthorizationCodeTestCase.test_tornado.run_provider": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "oauth2.test.functional.test_authorization_code.create_provider",
    "str",
    "tornado.ioloop.IOLoop.current",
    "tornado.web.Application",
    "tornado.web.url"
   ]
  },
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.AuthorizationCodeTestCase.test_wsgi": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "Exception",
    "multiprocessing.Process",
    "multiprocessing.Queue",
    "oauth2.test.functional.test_authorization_code.run_client"
   ]
  },
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.AuthorizationCodeTestCase.test_wsgi.run_provider": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "Exception",
    "oauth2.test.functional.NoLoggingHandler",
    "oauth2.test.functional.test_authorization_code.create_provider",
    "str",
    "tornado.web.Application",
    "wsgiref.simple_server.make_server"
   ]
  },
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.AuthorizationCodeTestCase.test_wsgi_404": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "Exception",
    "multiprocessing.Process",
    "multiprocessing.Queue",
    "urllib2.HTTPError",
    "urllib2.urlopen"
   ]
  },
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.AuthorizationCodeTestCase.test_wsgi_404.run_provider": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "Exception",
    "oauth2.test.functional.NoLoggingHandler",
    "oauth2.test.functional.test_authorization_code.create_provider",
    "str",
    "tornado.web.Application",
    "wsgiref.simple_server.make_server"
   ]
  },
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.ClientApplication": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.test.functional.test_authorization_code.ClientApplication.__call__": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "list",
    "print",
    "start_response",
    "urllib2.HTTPError"
   ]
  },
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.ClientApplication.__init__": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.ClientApplication._read_auth_token": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "urlparse.parse_qs"
   ]
  },
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.ClientApplication._request_access_token": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "oauth2.test.functional.test_authorization_code.json",
    "urllib.urlencode",
    "urllib2.urlopen"
   ]
  },
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.ClientApplication._request_auth_token": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "urllib.urlencode"
   ]
  },
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.ClientApplication._serve_application": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "oauth2.test.functional.test_authorization_code.json"
   ]
  },
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.HTTPError": {
  "data": {
   "shadows": "urllib2.HTTPError"
  },
  "type": "import"
 },
 "oauth2.test.functional.test_authorization_code.IOLoop": {
  "data": {
   "shadows": "tornado.ioloop.IOLoop"
  },
  "type": "import"
 },
 "oauth2.test.functional.test_authorization_code.NoLoggingHandler": {
  "data": {
   "shadows": "oauth2.test.functional.NoLoggingHandler"
  },
  "type": "import"
 },
 "oauth2.test.functional.test_authorization_code.Process": {
  "data": {
   "shadows": "multiprocessing.Process"
  },
  "type": "import"
 },
 "oauth2.test.functional.test_authorization_code.Provider": {
  "data": {
   "shadows": "oauth2.Provider"
  },
  "type": "import"
 },
 "oauth2.test.functional.test_authorization_code.Queue": {
  "data": {
   "shadows": "multiprocessing.Queue"
  },
  "type": "import"
 },
 "oauth2.test.functional.test_authorization_code.RefreshToken": {
  "data": {
   "shadows": "oauth2.grant.RefreshToken"
  },
  "type": "import"
 },
 "oauth2.test.functional.test_authorization_code.TestSiteAdapter": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "oauth2.web.AuthorizationCodeGrantSiteAdapter"
   ]
  },
  "type": "class"
 },
 "oauth2.test.functional.test_authorization_code.TestSiteAdapter.authenticate": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.TestSiteAdapter.user_has_denied_access": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.TornadoApplication": {
  "data": {
   "shadows": "tornado.web.Application"
  },
  "type": "import"
 },
 "oauth2.test.functional.test_authorization_code.Uuid4": {
  "data": {
   "shadows": "oauth2.tokengenerator.Uuid4"
  },
  "type": "import"
 },
 "oauth2.test.functional.test_authorization_code.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "oauth2.test.functional.test_authorization_code.create_provider": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "oauth2.Provider",
    "oauth2.grant.AuthorizationCodeGrant",
    "oauth2.grant.RefreshToken",
    "oauth2.test.functional.test_authorization_code.TestSiteAdapter",
    "oauth2.tokengenerator.Uuid4",
    "store_factory"
   ]
  },
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "oauth2.test.functional.test_authorization_code.make_server": {
  "data": {
   "shadows": "wsgiref.simple_server.make_server"
  },
  "type": "import"
 },
 "oauth2.test.functional.test_authorization_code.parse_qs": {
  "data": {
   "shadows": "urlparse.parse_qs"
  },
  "type": "import"
 },
 "oauth2.test.functional.test_authorization_code.run_client": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "Exception",
    "oauth2.test.functional.NoLoggingHandler",
    "oauth2.test.functional.test_authorization_code.ClientApplication",
    "str",
    "wsgiref.simple_server.make_server"
   ]
  },
  "type": "function"
 },
 "oauth2.test.functional.test_authorization_code.unittest": {
  "data": {
   "shadows": "oauth2.test.unittest"
  },
  "type": "import"
 },
 "oauth2.test.functional.test_authorization_code.url": {
  "data": {
   "shadows": "tornado.web.url"
  },
  "type": "import"
 },
 "oauth2.test.functional.test_authorization_code.urlencode": {
  "data": {
   "shadows": "urllib.urlencode"
  },
  "type": "import"
 },
 "oauth2.test.functional.test_authorization_code.urlopen": {
  "data": {
   "shadows": "urllib2.urlopen"
  },
  "type": "import"
 },
 "oauth2.test.store": {
  "data": {},
  "type": "module"
 },
 "oauth2.test.store.test_dbapi": {
  "data": {
   "symbols_in_volume": [
    "oauth2.store.dbapi.mysql.MysqlAccessTokenStore",
    "oauth2.store.dbapi.mysql.MysqlAuthCodeStore",
    "oauth2.store.dbapi.mysql.MysqlClientStore"
   ]
  },
  "type": "module"
 },
 "oauth2.test.store.test_dbapi.AccessToken": {
  "data": {
   "shadows": "oauth2.datatype.AccessToken"
  },
  "type": "import"
 },
 "oauth2.test.store.test_dbapi.AccessTokenNotFound": {
  "data": {
   "shadows": "oauth2.error.AccessTokenNotFound"
  },
  "type": "import"
 },
 "oauth2.test.store.test_dbapi.AccessTokenStoreTestCase": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "oauth2.test.store.test_dbapi.StoreTestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.store.test_dbapi.AccessTokenStoreTestCase.test_delete_refresh_token": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "oauth2.test.store.test_dbapi.access_token_stores",
    "oauth2.test.store.test_dbapi.with_classes",
    "store_class",
    "store_class.delete_refresh_token_query"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.AccessTokenStoreTestCase.test_fetch_by_refresh_token": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "isinstance",
    "oauth2.datatype.AccessToken",
    "oauth2.test.store.test_dbapi.access_token_stores",
    "oauth2.test.store.test_dbapi.with_classes",
    "store_class",
    "store_class.fetch_by_refresh_token_query",
    "store_class.fetch_data_by_access_token_query",
    "store_class.fetch_scopes_by_access_token_query"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.AccessTokenStoreTestCase.test_fetch_by_refresh_token_data_not_found": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "oauth2.error.AccessTokenNotFound",
    "oauth2.test.store.test_dbapi.access_token_stores",
    "oauth2.test.store.test_dbapi.with_classes",
    "store_class"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.AccessTokenStoreTestCase.test_fetch_existing_token_of_user": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "isinstance",
    "oauth2.datatype.AccessToken",
    "oauth2.test.store.test_dbapi.access_token_stores",
    "oauth2.test.store.test_dbapi.with_classes",
    "store_class",
    "store_class.fetch_data_by_access_token_query",
    "store_class.fetch_existing_token_of_user_query",
    "store_class.fetch_scopes_by_access_token_query"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.AccessTokenStoreTestCase.test_fetch_existing_token_of_user_no_token_found": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "oauth2.error.AccessTokenNotFound",
    "oauth2.test.store.test_dbapi.access_token_stores",
    "oauth2.test.store.test_dbapi.with_classes",
    "store_class"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.AccessTokenStoreTestCase.test_save_token": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.datatype.AccessToken",
    "oauth2.test.store.test_dbapi.access_token_stores",
    "oauth2.test.store.test_dbapi.with_classes",
    "store_class",
    "store_class.create_access_token_query",
    "store_class.create_data_query",
    "store_class.create_scope_query"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.AuthCodeNotFound": {
  "data": {
   "shadows": "oauth2.error.AuthCodeNotFound"
  },
  "type": "import"
 },
 "oauth2.test.store.test_dbapi.AuthCodeStoreTestCase": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "oauth2.test.store.test_dbapi.StoreTestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.store.test_dbapi.AuthCodeStoreTestCase.test_delete_code": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "oauth2.test.store.test_dbapi.auth_code_stores",
    "oauth2.test.store.test_dbapi.with_classes",
    "store_class",
    "store_class.delete_code_query"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.AuthCodeStoreTestCase.test_fetch_by_code": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "isinstance",
    "mock.Mock",
    "oauth2.datatype.AuthorizationCode",
    "oauth2.test.store.test_dbapi.auth_code_stores",
    "oauth2.test.store.test_dbapi.with_classes",
    "store_class",
    "store_class.fetch_code_query",
    "store_class.fetch_data_query",
    "store_class.fetch_scopes_query"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.AuthCodeStoreTestCase.test_fetch_by_code_no_data_found": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.error.AuthCodeNotFound",
    "oauth2.test.store.test_dbapi.auth_code_stores",
    "oauth2.test.store.test_dbapi.with_classes",
    "store_class"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.AuthCodeStoreTestCase.test_save_code": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.datatype.AuthorizationCode",
    "oauth2.test.store.test_dbapi.auth_code_stores",
    "oauth2.test.store.test_dbapi.with_classes",
    "store_class",
    "store_class.create_auth_code_query",
    "store_class.create_data_query",
    "store_class.create_scope_query"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.AuthorizationCode": {
  "data": {
   "shadows": "oauth2.datatype.AuthorizationCode"
  },
  "type": "import"
 },
 "oauth2.test.store.test_dbapi.Client": {
  "data": {
   "shadows": "oauth2.datatype.Client"
  },
  "type": "import"
 },
 "oauth2.test.store.test_dbapi.ClientNotFoundError": {
  "data": {
   "shadows": "oauth2.error.ClientNotFoundError"
  },
  "type": "import"
 },
 "oauth2.test.store.test_dbapi.Mock": {
  "data": {
   "shadows": "mock.Mock"
  },
  "type": "import"
 },
 "oauth2.test.store.test_dbapi.MysqlAccessTokenStore": {
  "data": {
   "shadows": "oauth2.store.dbapi.mysql.MysqlAccessTokenStore"
  },
  "type": "import"
 },
 "oauth2.test.store.test_dbapi.MysqlAuthCodeStore": {
  "data": {
   "shadows": "oauth2.store.dbapi.mysql.MysqlAuthCodeStore"
  },
  "type": "import"
 },
 "oauth2.test.store.test_dbapi.MysqlClientStore": {
  "data": {
   "shadows": "oauth2.store.dbapi.mysql.MysqlClientStore"
  },
  "type": "import"
 },
 "oauth2.test.store.test_dbapi.MysqlClientStoreTestCase": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "oauth2.test.store.test_dbapi.StoreTestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.store.test_dbapi.MysqlClientStoreTestCase.test_fetch_by_client_id": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "isinstance",
    "mock.Mock",
    "oauth2.datatype.Client",
    "oauth2.test.store.test_dbapi.client_stores",
    "oauth2.test.store.test_dbapi.with_classes",
    "store_class",
    "store_class.fetch_client_query",
    "store_class.fetch_grants_query",
    "store_class.fetch_redirect_uris_query",
    "store_class.fetch_response_types_query"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.MysqlClientStoreTestCase.test_fetch_by_client_id_client_not_found": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.error.ClientNotFoundError",
    "oauth2.test.store.test_dbapi.client_stores",
    "oauth2.test.store.test_dbapi.with_classes",
    "store_class"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.StoreTestCase": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.store.test_dbapi.StoreTestCase._con_mock": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "mock.Mock"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.StoreTestCase._cursor_mock": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "mock.Mock"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.access_token_stores": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "oauth2.test.store.test_dbapi.auth_code_stores": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "oauth2.test.store.test_dbapi.call": {
  "data": {
   "shadows": "mock.call"
  },
  "type": "import"
 },
 "oauth2.test.store.test_dbapi.client_stores": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "oauth2.test.store.test_dbapi.unittest": {
  "data": {
   "shadows": "oauth2.test.unittest"
  },
  "type": "import"
 },
 "oauth2.test.store.test_dbapi.with_classes": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.test.store.test_dbapi.with_classes.__call__": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.with_classes.__call__.wrapper": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "func",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.with_classes.__init__": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "oauth2.test.store.test_dbapi.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "oauth2.test.store.test_memcache": {
  "data": {},
  "type": "module"
 },
 "oauth2.test.store.test_memcache.AccessToken": {
  "data": {
   "shadows": "oauth2.datatype.AccessToken"
  },
  "type": "import"
 },
 "oauth2.test.store.test_memcache.AccessTokenNotFound": {
  "data": {
   "shadows": "oauth2.error.AccessTokenNotFound"
  },
  "type": "import"
 },
 "oauth2.test.store.test_memcache.AuthCodeNotFound": {
  "data": {
   "shadows": "oauth2.error.AuthCodeNotFound"
  },
  "type": "import"
 },
 "oauth2.test.store.test_memcache.AuthorizationCode": {
  "data": {
   "shadows": "oauth2.datatype.AuthorizationCode"
  },
  "type": "import"
 },
 "oauth2.test.store.test_memcache.MemcacheTokenStoreTestCase": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.store.test_memcache.MemcacheTokenStoreTestCase._generate_test_cache_key": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "oauth2.test.store.test_memcache.MemcacheTokenStoreTestCase.setUp": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "oauth2.test.store.test_memcache.MemcacheTokenStoreTestCase.test_fetch_by_code": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.store.memcache.TokenStore"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_memcache.MemcacheTokenStoreTestCase.test_fetch_by_code_no_data": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.error.AuthCodeNotFound",
    "oauth2.store.memcache.TokenStore"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_memcache.MemcacheTokenStoreTestCase.test_fetch_existing_token_of_user": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "isinstance",
    "mock.Mock",
    "oauth2.datatype.AccessToken",
    "oauth2.store.memcache.TokenStore"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_memcache.MemcacheTokenStoreTestCase.test_fetch_existing_token_of_user_no_data": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.error.AccessTokenNotFound",
    "oauth2.store.memcache.TokenStore"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_memcache.MemcacheTokenStoreTestCase.test_save_code": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.datatype.AuthorizationCode",
    "oauth2.store.memcache.TokenStore"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_memcache.MemcacheTokenStoreTestCase.test_save_token": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "mock.Mock",
    "mock.call",
    "oauth2.datatype.AccessToken",
    "oauth2.store.memcache.TokenStore"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_memcache.Mock": {
  "data": {
   "shadows": "mock.Mock"
  },
  "type": "import"
 },
 "oauth2.test.store.test_memcache.TokenStore": {
  "data": {
   "shadows": "oauth2.store.memcache.TokenStore"
  },
  "type": "import"
 },
 "oauth2.test.store.test_memcache.call": {
  "data": {
   "shadows": "mock.call"
  },
  "type": "import"
 },
 "oauth2.test.store.test_memcache.unittest": {
  "data": {
   "shadows": "oauth2.test.unittest"
  },
  "type": "import"
 },
 "oauth2.test.store.test_memory": {
  "data": {},
  "type": "module"
 },
 "oauth2.test.store.test_memory.AccessToken": {
  "data": {
   "shadows": "oauth2.datatype.AccessToken"
  },
  "type": "import"
 },
 "oauth2.test.store.test_memory.AuthCodeNotFound": {
  "data": {
   "shadows": "oauth2.error.AuthCodeNotFound"
  },
  "type": "import"
 },
 "oauth2.test.store.test_memory.AuthorizationCode": {
  "data": {
   "shadows": "oauth2.datatype.AuthorizationCode"
  },
  "type": "import"
 },
 "oauth2.test.store.test_memory.ClientNotFoundError": {
  "data": {
   "shadows": "oauth2.error.ClientNotFoundError"
  },
  "type": "import"
 },
 "oauth2.test.store.test_memory.ClientStore": {
  "data": {
   "shadows": "oauth2.store.memory.ClientStore"
  },
  "type": "import"
 },
 "oauth2.test.store.test_memory.MemoryClientStoreTestCase": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.store.test_memory.MemoryClientStoreTestCase.test_add_client_and_fetch_by_client_id": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "oauth2.store.memory.ClientStore"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_memory.MemoryClientStoreTestCase.test_fetch_by_client_id_no_client": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "oauth2.error.ClientNotFoundError",
    "oauth2.store.memory.ClientStore"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_memory.MemoryTokenStoreTestCase": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.store.test_memory.MemoryTokenStoreTestCase.setUp": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "oauth2.datatype.AuthorizationCode",
    "oauth2.store.memory.TokenStore"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_memory.MemoryTokenStoreTestCase.test_fetch_by_code": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "oauth2.error.AuthCodeNotFound"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_memory.MemoryTokenStoreTestCase.test_save_code_and_fetch_by_code": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "oauth2.test.store.test_memory.MemoryTokenStoreTestCase.test_save_token_and_fetch_by_token": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "oauth2.datatype.AccessToken"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_memory.TokenStore": {
  "data": {
   "shadows": "oauth2.store.memory.TokenStore"
  },
  "type": "import"
 },
 "oauth2.test.store.test_memory.unittest": {
  "data": {
   "shadows": "oauth2.test.unittest"
  },
  "type": "import"
 },
 "oauth2.test.store.test_mongodb": {
  "data": {},
  "type": "module"
 },
 "oauth2.test.store.test_mongodb.AccessToken": {
  "data": {
   "shadows": "oauth2.datatype.AccessToken"
  },
  "type": "import"
 },
 "oauth2.test.store.test_mongodb.AccessTokenNotFound": {
  "data": {
   "shadows": "oauth2.error.AccessTokenNotFound"
  },
  "type": "import"
 },
 "oauth2.test.store.test_mongodb.AccessTokenStore": {
  "data": {
   "shadows": "oauth2.store.mongodb.AccessTokenStore"
  },
  "type": "import"
 },
 "oauth2.test.store.test_mongodb.AuthCodeNotFound": {
  "data": {
   "shadows": "oauth2.error.AuthCodeNotFound"
  },
  "type": "import"
 },
 "oauth2.test.store.test_mongodb.AuthCodeStore": {
  "data": {
   "shadows": "oauth2.store.mongodb.AuthCodeStore"
  },
  "type": "import"
 },
 "oauth2.test.store.test_mongodb.AuthorizationCode": {
  "data": {
   "shadows": "oauth2.datatype.AuthorizationCode"
  },
  "type": "import"
 },
 "oauth2.test.store.test_mongodb.Client": {
  "data": {
   "shadows": "oauth2.datatype.Client"
  },
  "type": "import"
 },
 "oauth2.test.store.test_mongodb.ClientNotFoundError": {
  "data": {
   "shadows": "oauth2.error.ClientNotFoundError"
  },
  "type": "import"
 },
 "oauth2.test.store.test_mongodb.ClientStore": {
  "data": {
   "shadows": "oauth2.store.mongodb.ClientStore"
  },
  "type": "import"
 },
 "oauth2.test.store.test_mongodb.Mock": {
  "data": {
   "shadows": "mock.Mock"
  },
  "type": "import"
 },
 "oauth2.test.store.test_mongodb.MongodbAccessTokenStoreTestCase": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.store.test_mongodb.MongodbAccessTokenStoreTestCase.setUp": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "oauth2.test.store.test_mongodb.MongodbAccessTokenStoreTestCase.test_fetch_by_refresh_token": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "isinstance",
    "mock.Mock",
    "oauth2.datatype.AccessToken",
    "oauth2.store.mongodb.AccessTokenStore"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_mongodb.MongodbAccessTokenStoreTestCase.test_fetch_by_refresh_token_no_data": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.error.AccessTokenNotFound",
    "oauth2.store.mongodb.AccessTokenStore"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_mongodb.MongodbAccessTokenStoreTestCase.test_fetch_existing_token_of_user": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "isinstance",
    "mock.Mock",
    "oauth2.datatype.AccessToken",
    "oauth2.store.mongodb.AccessTokenStore"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_mongodb.MongodbAccessTokenStoreTestCase.test_fetch_existing_token_of_user_no_data": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.error.AccessTokenNotFound",
    "oauth2.store.mongodb.AccessTokenStore"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_mongodb.MongodbAccessTokenStoreTestCase.test_save_token": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.datatype.AccessToken",
    "oauth2.store.mongodb.AccessTokenStore"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_mongodb.MongodbAuthCodeStoreTestCase": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.store.test_mongodb.MongodbAuthCodeStoreTestCase.setUp": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "mock.Mock"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_mongodb.MongodbAuthCodeStoreTestCase.test_fetch_by_code": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "isinstance",
    "oauth2.datatype.AuthorizationCode",
    "oauth2.store.mongodb.AuthCodeStore"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_mongodb.MongodbAuthCodeStoreTestCase.test_fetch_by_code_no_data": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "oauth2.error.AuthCodeNotFound",
    "oauth2.store.mongodb.AuthCodeStore"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_mongodb.MongodbAuthCodeStoreTestCase.test_save_code": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "oauth2.datatype.AuthorizationCode",
    "oauth2.store.mongodb.AuthCodeStore"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_mongodb.MongodbClientStoreTestCase": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.store.test_mongodb.MongodbClientStoreTestCase.test_fetch_by_client_id": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "isinstance",
    "mock.Mock",
    "oauth2.datatype.Client",
    "oauth2.store.mongodb.ClientStore"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_mongodb.MongodbClientStoreTestCase.test_fetch_by_client_id_no_data": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.error.ClientNotFoundError",
    "oauth2.store.mongodb.ClientStore"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_mongodb.unittest": {
  "data": {
   "shadows": "oauth2.test.unittest"
  },
  "type": "import"
 },
 "oauth2.test.store.test_redisdb": {
  "data": {},
  "type": "module"
 },
 "oauth2.test.store.test_redisdb.AccessToken": {
  "data": {
   "shadows": "oauth2.datatype.AccessToken"
  },
  "type": "import"
 },
 "oauth2.test.store.test_redisdb.Mock": {
  "data": {
   "shadows": "mock.Mock"
  },
  "type": "import"
 },
 "oauth2.test.store.test_redisdb.TokenStore": {
  "data": {
   "shadows": "oauth2.store.redisdb.TokenStore"
  },
  "type": "import"
 },
 "oauth2.test.store.test_redisdb.TokenStoreTestCase": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.store.test_redisdb.TokenStoreTestCase.test_delete_refresh_token": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "bytes",
    "mock.Mock",
    "oauth2.datatype.AccessToken",
    "oauth2.store.redisdb.TokenStore",
    "oauth2.test.store.test_redisdb.json"
   ]
  },
  "type": "function"
 },
 "oauth2.test.store.test_redisdb.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "oauth2.test.store.test_redisdb.unittest": {
  "data": {
   "shadows": "oauth2.test.unittest"
  },
  "type": "import"
 },
 "oauth2.test.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "oauth2.test.test_client_authenticator": {
  "data": {},
  "type": "module"
 },
 "oauth2.test.test_client_authenticator.Client": {
  "data": {
   "shadows": "oauth2.datatype.Client"
  },
  "type": "import"
 },
 "oauth2.test.test_client_authenticator.ClientAuthenticator": {
  "data": {
   "shadows": "oauth2.client_authenticator.ClientAuthenticator"
  },
  "type": "import"
 },
 "oauth2.test.test_client_authenticator.ClientAuthenticatorTestCase": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.test_client_authenticator.ClientAuthenticatorTestCase.setUp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.client_authenticator.ClientAuthenticator",
    "oauth2.datatype.Client",
    "oauth2.store.ClientStore"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_client_authenticator.ClientAuthenticatorTestCase.test_by_identifier": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_client_authenticator.ClientAuthenticatorTestCase.test_by_identifier_client_id_not_set": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.error.OAuthInvalidNoRedirectError",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_client_authenticator.ClientAuthenticatorTestCase.test_by_identifier_secret": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_client_authenticator.ClientAuthenticatorTestCase.test_by_identifier_secret_client_not_authorized": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.error.OAuthInvalidError",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_client_authenticator.ClientAuthenticatorTestCase.test_by_identifier_secret_unknown_client": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.error.ClientNotFoundError",
    "oauth2.error.OAuthInvalidError",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_client_authenticator.ClientAuthenticatorTestCase.test_by_identifier_secret_wrong_secret": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.error.OAuthInvalidError",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_client_authenticator.ClientAuthenticatorTestCase.test_by_identifier_unknown_client": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.error.ClientNotFoundError",
    "oauth2.error.OAuthInvalidNoRedirectError",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_client_authenticator.ClientAuthenticatorTestCase.test_by_identifier_unknown_redirect_uri": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.error.OAuthInvalidNoRedirectError",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_client_authenticator.ClientNotFoundError": {
  "data": {
   "shadows": "oauth2.error.ClientNotFoundError"
  },
  "type": "import"
 },
 "oauth2.test.test_client_authenticator.ClientStore": {
  "data": {
   "shadows": "oauth2.store.ClientStore"
  },
  "type": "import"
 },
 "oauth2.test.test_client_authenticator.HttpBasicAuthTestCase": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.test_client_authenticator.HttpBasicAuthTestCase.test_header_not_present": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.client_authenticator.http_basic_auth",
    "oauth2.error.OAuthInvalidError",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_client_authenticator.HttpBasicAuthTestCase.test_invalid_authorization_header": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.client_authenticator.http_basic_auth",
    "oauth2.error.OAuthInvalidError",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_client_authenticator.HttpBasicAuthTestCase.test_valid": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "base64.b64encode",
    "mock.Mock",
    "oauth2.client_authenticator.http_basic_auth",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_client_authenticator.Mock": {
  "data": {
   "shadows": "mock.Mock"
  },
  "type": "import"
 },
 "oauth2.test.test_client_authenticator.OAuthInvalidError": {
  "data": {
   "shadows": "oauth2.error.OAuthInvalidError"
  },
  "type": "import"
 },
 "oauth2.test.test_client_authenticator.OAuthInvalidNoRedirectError": {
  "data": {
   "shadows": "oauth2.error.OAuthInvalidNoRedirectError"
  },
  "type": "import"
 },
 "oauth2.test.test_client_authenticator.Request": {
  "data": {
   "shadows": "oauth2.web.wsgi.Request"
  },
  "type": "import"
 },
 "oauth2.test.test_client_authenticator.RequestBodyTestCase": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.test_client_authenticator.RequestBodyTestCase.test_no_client_id": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.client_authenticator.request_body",
    "oauth2.error.OAuthInvalidError",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_client_authenticator.RequestBodyTestCase.test_no_client_secret": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.client_authenticator.request_body",
    "oauth2.error.OAuthInvalidError",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_client_authenticator.RequestBodyTestCase.test_valid": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.client_authenticator.request_body",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_client_authenticator.b64encode": {
  "data": {
   "shadows": "base64.b64encode"
  },
  "type": "import"
 },
 "oauth2.test.test_client_authenticator.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "oauth2.test.test_client_authenticator.http_basic_auth": {
  "data": {
   "shadows": "oauth2.client_authenticator.http_basic_auth"
  },
  "type": "import"
 },
 "oauth2.test.test_client_authenticator.request_body": {
  "data": {
   "shadows": "oauth2.client_authenticator.request_body"
  },
  "type": "import"
 },
 "oauth2.test.test_client_authenticator.unittest": {
  "data": {
   "shadows": "oauth2.test.unittest"
  },
  "type": "import"
 },
 "oauth2.test.test_datatype": {
  "data": {},
  "type": "module"
 },
 "oauth2.test.test_datatype.AccessToken": {
  "data": {
   "shadows": "oauth2.datatype.AccessToken"
  },
  "type": "import"
 },
 "oauth2.test.test_datatype.AccessTokenTestCase": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.test_datatype.AccessTokenTestCase.test_expires_in_expired": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "mock.patch",
    "oauth2.datatype.AccessToken",
    "oauth2.test.test_datatype.mock_time"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_datatype.AccessTokenTestCase.test_expires_in_not_expired": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "mock.patch",
    "oauth2.datatype.AccessToken",
    "oauth2.test.test_datatype.mock_time"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_datatype.AccessTokenTestCase.test_is_expired_expired_at_not_set": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "oauth2.datatype.AccessToken"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_datatype.Client": {
  "data": {
   "shadows": "oauth2.datatype.Client"
  },
  "type": "import"
 },
 "oauth2.test.test_datatype.ClientTestCase": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.test_datatype.ClientTestCase.test_redirect_uri": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "oauth2.datatype.Client",
    "oauth2.error.RedirectUriUnknown"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_datatype.ClientTestCase.test_response_type_supported": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "oauth2.datatype.Client"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_datatype.RedirectUriUnknown": {
  "data": {
   "shadows": "oauth2.error.RedirectUriUnknown"
  },
  "type": "import"
 },
 "oauth2.test.test_datatype.mock_time": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "oauth2.test.test_datatype.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "oauth2.test.test_datatype.unittest": {
  "data": {
   "shadows": "oauth2.test.unittest"
  },
  "type": "import"
 },
 "oauth2.test.test_grant": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "oauth2.test.unittest.main"
   ]
  },
  "type": "module"
 },
 "oauth2.test.test_grant.AccessToken": {
  "data": {
   "shadows": "oauth2.datatype.AccessToken"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.AccessTokenNotFound": {
  "data": {
   "shadows": "oauth2.error.AccessTokenNotFound"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.AccessTokenStore": {
  "data": {
   "shadows": "oauth2.store.AccessTokenStore"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.AuthCodeNotFound": {
  "data": {
   "shadows": "oauth2.error.AuthCodeNotFound"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.AuthCodeStore": {
  "data": {
   "shadows": "oauth2.store.AuthCodeStore"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.AuthRequestMixin": {
  "data": {
   "shadows": "oauth2.grant.AuthRequestMixin"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.AuthRequestMixinTestCase": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.test_grant.AuthRequestMixinTestCase.test_read_validate_params_all_valid": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "mock.Mock",
    "mock.call",
    "oauth2.client_authenticator.ClientAuthenticator",
    "oauth2.datatype.Client",
    "oauth2.grant.AuthRequestMixin",
    "oauth2.grant.Scope",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCode": {
  "data": {
   "shadows": "oauth2.datatype.AuthorizationCode"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.AuthorizationCodeAuthHandler": {
  "data": {
   "shadows": "oauth2.grant.AuthorizationCodeAuthHandler"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.AuthorizationCodeAuthHandlerTestCase": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.test_grant.AuthorizationCodeAuthHandlerTestCase.test_process": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.compatibility.quote",
    "oauth2.datatype.Client",
    "oauth2.grant.AuthorizationCodeAuthHandler",
    "oauth2.grant.Scope",
    "oauth2.store.AuthCodeStore",
    "oauth2.web.AuthorizationCodeGrantSiteAdapter",
    "oauth2.web.Response",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeAuthHandlerTestCase.test_process_not_confirmed": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.datatype.Client",
    "oauth2.error.UserNotAuthenticated",
    "oauth2.grant.AuthorizationCodeAuthHandler",
    "oauth2.grant.Scope",
    "oauth2.web.AuthorizationCodeGrantSiteAdapter",
    "oauth2.web.Response",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeAuthHandlerTestCase.test_redirect_oauth_error": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.datatype.Client",
    "oauth2.error.OAuthInvalidError",
    "oauth2.grant.AuthorizationCodeAuthHandler",
    "oauth2.web.Response"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeGrant": {
  "data": {
   "shadows": "oauth2.grant.AuthorizationCodeGrant"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.AuthorizationCodeGrantSiteAdapter": {
  "data": {
   "shadows": "oauth2.web.AuthorizationCodeGrantSiteAdapter"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.AuthorizationCodeGrantTestCase": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.test_grant.AuthorizationCodeGrantTestCase.test_create_auth_handler": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "factory",
    "isinstance",
    "mock.Mock",
    "oauth2.grant.AuthorizationCodeAuthHandler",
    "oauth2.grant.AuthorizationCodeGrant",
    "oauth2.grant.Scope",
    "oauth2.web.AuthorizationCodeGrantSiteAdapter",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeGrantTestCase.test_create_no_match": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "factory",
    "mock.Mock",
    "oauth2.grant.AuthorizationCodeGrant",
    "oauth2.web.AuthorizationCodeGrantSiteAdapter",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeGrantTestCase.test_create_token_handler": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "factory",
    "isinstance",
    "mock.Mock",
    "oauth2.grant.AuthorizationCodeGrant",
    "oauth2.grant.AuthorizationCodeTokenHandler",
    "oauth2.store.AccessTokenStore",
    "oauth2.web.AuthorizationCodeGrantSiteAdapter",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeTokenHandler": {
  "data": {
   "shadows": "oauth2.grant.AuthorizationCodeTokenHandler"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.AuthorizationCodeTokenHandlerTestCase": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.test_grant.AuthorizationCodeTokenHandlerTestCase.test_process_no_refresh_token": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "copy.copy",
    "isinstance",
    "mock.Mock",
    "mock.call",
    "oauth2.datatype.AccessToken",
    "oauth2.datatype.Client",
    "oauth2.grant.AuthorizationCodeTokenHandler",
    "oauth2.store.AccessTokenStore",
    "oauth2.store.AuthCodeStore",
    "oauth2.store.ClientStore",
    "oauth2.test.test_grant.json",
    "oauth2.tokengenerator.TokenGenerator",
    "oauth2.web.Response",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeTokenHandlerTestCase.test_process_with_refresh_token": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "isinstance",
    "mock.Mock",
    "mock.call",
    "mock.patch",
    "oauth2.client_authenticator.ClientAuthenticator",
    "oauth2.datatype.AccessToken",
    "oauth2.datatype.Client",
    "oauth2.grant.AuthorizationCodeTokenHandler",
    "oauth2.store.AccessTokenStore",
    "oauth2.store.AuthCodeStore",
    "oauth2.test.test_grant.json",
    "oauth2.test.test_grant.mock_time",
    "oauth2.tokengenerator.TokenGenerator",
    "oauth2.web.Response",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeTokenHandlerTestCase.test_process_with_unique_access_token": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "mock.Mock",
    "mock.patch",
    "oauth2.client_authenticator.ClientAuthenticator",
    "oauth2.datatype.AccessToken",
    "oauth2.datatype.Client",
    "oauth2.grant.AuthorizationCodeTokenHandler",
    "oauth2.store.AccessTokenStore",
    "oauth2.store.AuthCodeStore",
    "oauth2.test.test_grant.json",
    "oauth2.test.test_grant.mock_time",
    "oauth2.web.Response",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeTokenHandlerTestCase.test_process_with_unique_access_token_different_scope": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "copy.copy",
    "mock.Mock",
    "oauth2.client_authenticator.ClientAuthenticator",
    "oauth2.datatype.AccessToken",
    "oauth2.datatype.Client",
    "oauth2.grant.AuthorizationCodeTokenHandler",
    "oauth2.store.AccessTokenStore",
    "oauth2.store.AuthCodeStore",
    "oauth2.test.test_grant.json",
    "oauth2.tokengenerator.TokenGenerator",
    "oauth2.web.Response"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeTokenHandlerTestCase.test_process_with_unique_access_token_expired_token": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "copy.copy",
    "mock.Mock",
    "mock.patch",
    "oauth2.client_authenticator.ClientAuthenticator",
    "oauth2.datatype.AccessToken",
    "oauth2.datatype.Client",
    "oauth2.grant.AuthorizationCodeTokenHandler",
    "oauth2.store.AccessTokenStore",
    "oauth2.store.AuthCodeStore",
    "oauth2.test.test_grant.json",
    "oauth2.test.test_grant.mock_time",
    "oauth2.tokengenerator.TokenGenerator",
    "oauth2.web.Response"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeTokenHandlerTestCase.test_process_with_unique_access_token_no_user_id": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.client_authenticator.ClientAuthenticator",
    "oauth2.datatype.Client",
    "oauth2.error.UserIdentifierMissingError",
    "oauth2.grant.AuthorizationCodeTokenHandler",
    "oauth2.store.AccessTokenStore",
    "oauth2.store.AuthCodeStore",
    "oauth2.tokengenerator.TokenGenerator"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeTokenHandlerTestCase.test_process_with_unique_access_token_not_found": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "copy.copy",
    "mock.Mock",
    "mock.patch",
    "oauth2.client_authenticator.ClientAuthenticator",
    "oauth2.datatype.Client",
    "oauth2.error.AccessTokenNotFound",
    "oauth2.grant.AuthorizationCodeTokenHandler",
    "oauth2.store.AccessTokenStore",
    "oauth2.store.AuthCodeStore",
    "oauth2.test.test_grant.json",
    "oauth2.test.test_grant.mock_time",
    "oauth2.tokengenerator.TokenGenerator",
    "oauth2.web.Response"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeTokenHandlerTestCase.test_read_validate_params": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "mock.Mock",
    "mock.call",
    "oauth2.client_authenticator.ClientAuthenticator",
    "oauth2.datatype.AuthorizationCode",
    "oauth2.datatype.Client",
    "oauth2.grant.AuthorizationCodeTokenHandler",
    "oauth2.store.AccessTokenStore",
    "oauth2.store.AuthCodeStore",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeTokenHandlerTestCase.test_read_validate_params_missing_code": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.client_authenticator.ClientAuthenticator",
    "oauth2.datatype.Client",
    "oauth2.error.OAuthInvalidError",
    "oauth2.grant.AuthorizationCodeTokenHandler",
    "oauth2.store.AccessTokenStore",
    "oauth2.store.AuthCodeStore",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeTokenHandlerTestCase.test_read_validate_params_no_auth_code_found": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.client_authenticator.ClientAuthenticator",
    "oauth2.datatype.Client",
    "oauth2.error.AuthCodeNotFound",
    "oauth2.error.OAuthInvalidError",
    "oauth2.grant.AuthorizationCodeTokenHandler",
    "oauth2.store.AccessTokenStore",
    "oauth2.store.AuthCodeStore",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeTokenHandlerTestCase.test_read_validate_params_token_expired": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.client_authenticator.ClientAuthenticator",
    "oauth2.datatype.AuthorizationCode",
    "oauth2.datatype.Client",
    "oauth2.error.OAuthInvalidError",
    "oauth2.grant.AuthorizationCodeTokenHandler",
    "oauth2.store.AccessTokenStore",
    "oauth2.store.AuthCodeStore",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeTokenHandlerTestCase.test_read_validate_params_unknown_code": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.client_authenticator.ClientAuthenticator",
    "oauth2.datatype.AuthorizationCode",
    "oauth2.datatype.Client",
    "oauth2.error.OAuthInvalidError",
    "oauth2.grant.AuthorizationCodeTokenHandler",
    "oauth2.store.AccessTokenStore",
    "oauth2.store.AuthCodeStore",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizationCodeTokenHandlerTestCase.test_read_validate_params_wrong_redirect_uri_in_code_data": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.client_authenticator.ClientAuthenticator",
    "oauth2.datatype.AuthorizationCode",
    "oauth2.datatype.Client",
    "oauth2.error.OAuthInvalidError",
    "oauth2.grant.AuthorizationCodeTokenHandler",
    "oauth2.store.AccessTokenStore",
    "oauth2.store.AuthCodeStore",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizeMixin": {
  "data": {
   "shadows": "oauth2.grant.AuthorizeMixin"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.AuthorizeMixinTestCase": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.test_grant.AuthorizeMixinTestCase.test_authorize_dict_return": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "isinstance",
    "mock.Mock",
    "oauth2.datatype.Client",
    "oauth2.grant.AuthorizeMixin",
    "oauth2.web.ImplicitGrantSiteAdapter",
    "oauth2.web.Response",
    "oauth2.web.wsgi.Request",
    "tuple"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizeMixinTestCase.test_authorize_tuple_return": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "isinstance",
    "mock.Mock",
    "oauth2.datatype.Client",
    "oauth2.grant.AuthorizeMixin",
    "oauth2.web.ImplicitGrantSiteAdapter",
    "oauth2.web.Response",
    "oauth2.web.wsgi.Request",
    "tuple"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizeMixinTestCase.test_authorize_user_denied_access": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.error.OAuthInvalidError",
    "oauth2.grant.AuthorizeMixin",
    "oauth2.web.ImplicitGrantSiteAdapter",
    "oauth2.web.Response",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.AuthorizeMixinTestCase.test_authorize_user_not_authenticated": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.datatype.Client",
    "oauth2.error.UserNotAuthenticated",
    "oauth2.grant.AuthorizeMixin",
    "oauth2.web.ImplicitGrantSiteAdapter",
    "oauth2.web.Response",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.Client": {
  "data": {
   "shadows": "oauth2.datatype.Client"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.ClientAuthenticator": {
  "data": {
   "shadows": "oauth2.client_authenticator.ClientAuthenticator"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.ClientCredentialsGrant": {
  "data": {
   "shadows": "oauth2.grant.ClientCredentialsGrant"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.ClientCredentialsGrantTestCase": {
  "data": {
   "lineno": 1754,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.test_grant.ClientCredentialsGrantTestCase.test_call": {
  "data": {
   "lineno": 1755,
   "symbols_in_volume": [
    "grant",
    "isinstance",
    "mock.Mock",
    "oauth2.grant.ClientCredentialsGrant",
    "oauth2.grant.ClientCredentialsHandler",
    "oauth2.grant.Scope",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.ClientCredentialsGrantTestCase.test_call_other_grant_type": {
  "data": {
   "lineno": 1797,
   "symbols_in_volume": [
    "grant",
    "mock.Mock",
    "oauth2.grant.ClientCredentialsGrant",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.ClientCredentialsGrantTestCase.test_call_wrong_request_path": {
  "data": {
   "lineno": 1785,
   "symbols_in_volume": [
    "grant",
    "mock.Mock",
    "oauth2.grant.ClientCredentialsGrant",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.ClientCredentialsHandler": {
  "data": {
   "shadows": "oauth2.grant.ClientCredentialsHandler"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.ClientCredentialsHandlerTestCase": {
  "data": {
   "lineno": 1813,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.test_grant.ClientCredentialsHandlerTestCase.test_process": {
  "data": {
   "lineno": 1814,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.datatype.Client",
    "oauth2.grant.ClientCredentialsHandler",
    "oauth2.grant.Scope",
    "oauth2.store.AccessTokenStore",
    "oauth2.test.test_grant.json",
    "oauth2.tokengenerator.TokenGenerator",
    "oauth2.web.Response"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.ClientCredentialsHandlerTestCase.test_process_with_refresh_token": {
  "data": {
   "lineno": 1844,
   "symbols_in_volume": [
    "isinstance",
    "mock.Mock",
    "mock.call",
    "mock.patch",
    "oauth2.datatype.AccessToken",
    "oauth2.datatype.Client",
    "oauth2.grant.ClientCredentialsGrant.grant_type",
    "oauth2.grant.ClientCredentialsHandler",
    "oauth2.grant.Scope",
    "oauth2.store.AccessTokenStore",
    "oauth2.test.test_grant.json",
    "oauth2.test.test_grant.mock_time",
    "oauth2.tokengenerator.TokenGenerator",
    "oauth2.web.Response"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.ClientCredentialsHandlerTestCase.test_read_validate_params": {
  "data": {
   "lineno": 1895,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.client_authenticator.ClientAuthenticator",
    "oauth2.datatype.Client",
    "oauth2.grant.ClientCredentialsHandler",
    "oauth2.grant.Scope",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.ClientStore": {
  "data": {
   "shadows": "oauth2.store.ClientStore"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.ImplicitGrant": {
  "data": {
   "shadows": "oauth2.grant.ImplicitGrant"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.ImplicitGrantHandler": {
  "data": {
   "shadows": "oauth2.grant.ImplicitGrantHandler"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.ImplicitGrantHandlerTestCase": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.test_grant.ImplicitGrantHandlerTestCase.test_process_redirect_with_state": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.compatibility.quote",
    "oauth2.datatype.Client",
    "oauth2.grant.ImplicitGrantHandler",
    "oauth2.grant.Scope",
    "oauth2.store.AccessTokenStore",
    "oauth2.web.ImplicitGrantSiteAdapter",
    "oauth2.web.Response",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.ImplicitGrantHandlerTestCase.test_process_redirect_with_token": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "isinstance",
    "mock.Mock",
    "oauth2.datatype.AccessToken",
    "oauth2.datatype.Client",
    "oauth2.grant.ImplicitGrantHandler",
    "oauth2.grant.Scope",
    "oauth2.store.AccessTokenStore",
    "oauth2.web.ImplicitGrantSiteAdapter",
    "oauth2.web.Response",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.ImplicitGrantHandlerTestCase.test_process_unconfirmed": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.datatype.Client",
    "oauth2.error.UserNotAuthenticated",
    "oauth2.grant.ImplicitGrantHandler",
    "oauth2.grant.Scope",
    "oauth2.store.AccessTokenStore",
    "oauth2.web.ImplicitGrantSiteAdapter",
    "oauth2.web.Response",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.ImplicitGrantHandlerTestCase.test_process_user_denied_access": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.error.OAuthInvalidError",
    "oauth2.grant.ImplicitGrantHandler",
    "oauth2.grant.Scope",
    "oauth2.store.AccessTokenStore",
    "oauth2.web.ImplicitGrantSiteAdapter",
    "oauth2.web.Response",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.ImplicitGrantHandlerTestCase.test_process_with_scope": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.datatype.Client",
    "oauth2.grant.ImplicitGrantHandler",
    "oauth2.grant.Scope",
    "oauth2.store.AccessTokenStore",
    "oauth2.web.ImplicitGrantSiteAdapter",
    "oauth2.web.Response",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.ImplicitGrantHandlerTestCase.test_redirect_oauth_error": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.datatype.Client",
    "oauth2.error.OAuthInvalidError",
    "oauth2.grant.ImplicitGrantHandler",
    "oauth2.grant.Scope",
    "oauth2.store.AccessTokenStore",
    "oauth2.web.Response",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.ImplicitGrantSiteAdapter": {
  "data": {
   "shadows": "oauth2.web.ImplicitGrantSiteAdapter"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.ImplicitGrantTestCase": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.test_grant.ImplicitGrantTestCase.test_create_matching_response_type": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "factory",
    "isinstance",
    "mock.Mock",
    "oauth2.grant.ImplicitGrant",
    "oauth2.grant.ImplicitGrantHandler",
    "oauth2.web.ImplicitGrantSiteAdapter",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.ImplicitGrantTestCase.test_create_not_matching_response_type": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "factory",
    "mock.Mock",
    "oauth2.grant.ImplicitGrant",
    "oauth2.web.ImplicitGrantSiteAdapter",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.Mock": {
  "data": {
   "shadows": "mock.Mock"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.OAuthInvalidError": {
  "data": {
   "shadows": "oauth2.error.OAuthInvalidError"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.Provider": {
  "data": {
   "shadows": "oauth2.Provider"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.RefreshToken": {
  "data": {
   "shadows": "oauth2.grant.RefreshToken"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.RefreshTokenHandler": {
  "data": {
   "shadows": "oauth2.grant.RefreshTokenHandler"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.RefreshTokenHandlerTestCase": {
  "data": {
   "lineno": 1521,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.test_grant.RefreshTokenHandlerTestCase.test_process_no_reissue": {
  "data": {
   "lineno": 1522,
   "symbols_in_volume": [
    "mock.Mock",
    "mock.patch",
    "oauth2.client_authenticator.ClientAuthenticator",
    "oauth2.datatype.Client",
    "oauth2.grant.RefreshTokenHandler",
    "oauth2.grant.Scope",
    "oauth2.store.AccessTokenStore",
    "oauth2.test.test_grant.json",
    "oauth2.test.test_grant.mock_time",
    "oauth2.tokengenerator.TokenGenerator",
    "oauth2.web.Response",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.RefreshTokenHandlerTestCase.test_process_with_reissue": {
  "data": {
   "lineno": 1571,
   "symbols_in_volume": [
    "mock.Mock",
    "mock.patch",
    "oauth2.client_authenticator.ClientAuthenticator",
    "oauth2.datatype.Client",
    "oauth2.grant.RefreshTokenHandler",
    "oauth2.grant.Scope",
    "oauth2.store.AccessTokenStore",
    "oauth2.test.test_grant.json",
    "oauth2.test.test_grant.mock_time",
    "oauth2.tokengenerator.TokenGenerator",
    "oauth2.web.Response",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.RefreshTokenHandlerTestCase.test_read_validate_params": {
  "data": {
   "lineno": 1624,
   "symbols_in_volume": [
    "mock.Mock",
    "mock.patch",
    "oauth2.client_authenticator.ClientAuthenticator",
    "oauth2.datatype.AccessToken",
    "oauth2.datatype.Client",
    "oauth2.grant.RefreshTokenHandler",
    "oauth2.grant.Scope",
    "oauth2.store.AccessTokenStore",
    "oauth2.test.test_grant.mock_time",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.RefreshTokenHandlerTestCase.test_read_validate_params_expired_refresh_token": {
  "data": {
   "lineno": 1719,
   "symbols_in_volume": [
    "mock.Mock",
    "mock.patch",
    "oauth2.client_authenticator.ClientAuthenticator",
    "oauth2.datatype.AccessToken",
    "oauth2.datatype.Client",
    "oauth2.error.OAuthInvalidError",
    "oauth2.grant.RefreshTokenHandler",
    "oauth2.store.AccessTokenStore",
    "oauth2.test.test_grant.mock_time",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.RefreshTokenHandlerTestCase.test_read_validate_params_invalid_refresh_token": {
  "data": {
   "lineno": 1691,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.client_authenticator.ClientAuthenticator",
    "oauth2.datatype.Client",
    "oauth2.error.AccessTokenNotFound",
    "oauth2.error.OAuthInvalidError",
    "oauth2.grant.RefreshTokenHandler",
    "oauth2.store.AccessTokenStore",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.RefreshTokenHandlerTestCase.test_read_validate_params_no_refresh_token": {
  "data": {
   "lineno": 1673,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.error.OAuthInvalidError",
    "oauth2.grant.RefreshTokenHandler",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.RefreshTokenTestCase": {
  "data": {
   "lineno": 1447,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.test_grant.RefreshTokenTestCase.test_call": {
  "data": {
   "lineno": 1448,
   "symbols_in_volume": [
    "grant",
    "isinstance",
    "mock.Mock",
    "oauth2.Provider",
    "oauth2.grant.RefreshToken",
    "oauth2.grant.RefreshTokenHandler",
    "oauth2.grant.Scope",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.RefreshTokenTestCase.test_call_other_grant_type": {
  "data": {
   "lineno": 1501,
   "symbols_in_volume": [
    "grant",
    "mock.Mock",
    "oauth2.Provider",
    "oauth2.grant.RefreshToken",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.RefreshTokenTestCase.test_call_wrong_path": {
  "data": {
   "lineno": 1485,
   "symbols_in_volume": [
    "grant",
    "mock.Mock",
    "oauth2.Provider",
    "oauth2.grant.RefreshToken",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.Request": {
  "data": {
   "shadows": "oauth2.web.wsgi.Request"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.ResourceOwnerGrant": {
  "data": {
   "shadows": "oauth2.grant.ResourceOwnerGrant"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.ResourceOwnerGrantHandler": {
  "data": {
   "shadows": "oauth2.grant.ResourceOwnerGrantHandler"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.ResourceOwnerGrantHandlerTestCase": {
  "data": {
   "lineno": 1081,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.test_grant.ResourceOwnerGrantHandlerTestCase.test_handle_error_owner_not_authenticated": {
  "data": {
   "lineno": 1285,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.error.OAuthInvalidError",
    "oauth2.grant.ResourceOwnerGrantHandler",
    "oauth2.grant.ResourceOwnerGrantHandler.OWNER_NOT_AUTHENTICATED",
    "oauth2.store.AccessTokenStore",
    "oauth2.web.Response"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.ResourceOwnerGrantHandlerTestCase.test_process": {
  "data": {
   "lineno": 1082,
   "symbols_in_volume": [
    "isinstance",
    "mock.Mock",
    "mock.call",
    "oauth2.client_authenticator.ClientAuthenticator",
    "oauth2.datatype.AccessToken",
    "oauth2.datatype.Client",
    "oauth2.grant.ResourceOwnerGrant.grant_type",
    "oauth2.grant.ResourceOwnerGrantHandler",
    "oauth2.grant.Scope",
    "oauth2.store.AccessTokenStore",
    "oauth2.test.test_grant.json",
    "oauth2.tokengenerator.TokenGenerator",
    "oauth2.web.ResourceOwnerGrantSiteAdapter",
    "oauth2.web.Response",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.ResourceOwnerGrantHandlerTestCase.test_process_invalid_user": {
  "data": {
   "lineno": 1226,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.client_authenticator.ClientAuthenticator",
    "oauth2.datatype.Client",
    "oauth2.error.OAuthInvalidError",
    "oauth2.error.UserNotAuthenticated",
    "oauth2.grant.ResourceOwnerGrantHandler",
    "oauth2.grant.ResourceOwnerGrantHandler.OWNER_NOT_AUTHENTICATED",
    "oauth2.grant.Scope",
    "oauth2.store.AccessTokenStore",
    "oauth2.tokengenerator.TokenGenerator",
    "oauth2.web.ResourceOwnerGrantSiteAdapter",
    "oauth2.web.Response",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.ResourceOwnerGrantHandlerTestCase.test_process_redirect_with_scope": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": [
    "mock.Mock",
    "mock.call",
    "oauth2.client_authenticator.ClientAuthenticator",
    "oauth2.datatype.Client",
    "oauth2.grant.ResourceOwnerGrant.grant_type",
    "oauth2.grant.ResourceOwnerGrantHandler",
    "oauth2.grant.Scope",
    "oauth2.store.AccessTokenStore",
    "oauth2.test.test_grant.json",
    "oauth2.tokengenerator.TokenGenerator",
    "oauth2.web.ResourceOwnerGrantSiteAdapter",
    "oauth2.web.Response",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.ResourceOwnerGrantHandlerTestCase.test_process_with_refresh_token": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "isinstance",
    "mock.Mock",
    "mock.call",
    "mock.patch",
    "oauth2.client_authenticator.ClientAuthenticator",
    "oauth2.datatype.AccessToken",
    "oauth2.datatype.Client",
    "oauth2.grant.ResourceOwnerGrant.grant_type",
    "oauth2.grant.ResourceOwnerGrantHandler",
    "oauth2.grant.Scope",
    "oauth2.store.AccessTokenStore",
    "oauth2.test.test_grant.json",
    "oauth2.test.test_grant.mock_time",
    "oauth2.tokengenerator.TokenGenerator",
    "oauth2.web.ResourceOwnerGrantSiteAdapter",
    "oauth2.web.Response",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.ResourceOwnerGrantHandlerTestCase.test_read_validate_params": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.client_authenticator.ClientAuthenticator",
    "oauth2.datatype.Client",
    "oauth2.grant.ResourceOwnerGrantHandler",
    "oauth2.grant.Scope",
    "oauth2.store.AccessTokenStore",
    "oauth2.web.ResourceOwnerGrantSiteAdapter",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.ResourceOwnerGrantSiteAdapter": {
  "data": {
   "shadows": "oauth2.web.ResourceOwnerGrantSiteAdapter"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.ResourceOwnerGrantTestCase": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.test_grant.ResourceOwnerGrantTestCase.test_call": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "factory",
    "isinstance",
    "mock.Mock",
    "oauth2.Provider",
    "oauth2.client_authenticator.ClientAuthenticator",
    "oauth2.grant.ResourceOwnerGrant",
    "oauth2.grant.ResourceOwnerGrantHandler",
    "oauth2.store.AccessTokenStore",
    "oauth2.web.ResourceOwnerGrantSiteAdapter",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.ResourceOwnerGrantTestCase.test_call_no_resource_request": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "factory",
    "mock.Mock",
    "oauth2.Provider",
    "oauth2.grant.ResourceOwnerGrant",
    "oauth2.web.ResourceOwnerGrantSiteAdapter",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.Response": {
  "data": {
   "shadows": "oauth2.web.Response"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.Scope": {
  "data": {
   "shadows": "oauth2.grant.Scope"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.ScopeTestCase": {
  "data": {
   "lineno": 1304,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.test_grant.ScopeTestCase.test_compare_invalid_scope_requested": {
  "data": {
   "lineno": 1431,
   "symbols_in_volume": [
    "oauth2.error.OAuthInvalidError",
    "oauth2.grant.Scope"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.ScopeTestCase.test_compare_scopes_equal": {
  "data": {
   "lineno": 1405,
   "symbols_in_volume": [
    "oauth2.grant.Scope"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.ScopeTestCase.test_compare_valid_scope_subset": {
  "data": {
   "lineno": 1418,
   "symbols_in_volume": [
    "oauth2.grant.Scope"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.ScopeTestCase.test_parse_scope_default_on_no_matching_scopes": {
  "data": {
   "lineno": 1352,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.grant.Scope",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.ScopeTestCase.test_parse_scope_default_on_no_scope": {
  "data": {
   "lineno": 1333,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.grant.Scope",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.ScopeTestCase.test_parse_scope_exception_on_available_scopes_no_scope_given": {
  "data": {
   "lineno": 1389,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.error.OAuthInvalidError",
    "oauth2.grant.Scope",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.ScopeTestCase.test_parse_scope_no_value_on_no_scope_no_default": {
  "data": {
   "lineno": 1371,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.grant.Scope",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.ScopeTestCase.test_parse_scope_scope_present_in_body": {
  "data": {
   "lineno": 1323,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.grant.Scope",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.ScopeTestCase.test_parse_scope_scope_present_in_query": {
  "data": {
   "lineno": 1305,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.grant.Scope",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_grant.SiteAdapterMixin": {
  "data": {
   "shadows": "oauth2.grant.SiteAdapterMixin"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.TokenGenerator": {
  "data": {
   "shadows": "oauth2.tokengenerator.TokenGenerator"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.UserIdentifierMissingError": {
  "data": {
   "shadows": "oauth2.error.UserIdentifierMissingError"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.UserNotAuthenticated": {
  "data": {
   "shadows": "oauth2.error.UserNotAuthenticated"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.call": {
  "data": {
   "shadows": "mock.call"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.mock_time": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "oauth2.test.test_grant.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.quote": {
  "data": {
   "shadows": "oauth2.compatibility.quote"
  },
  "type": "import"
 },
 "oauth2.test.test_grant.unittest": {
  "data": {
   "shadows": "oauth2.test.unittest"
  },
  "type": "import"
 },
 "oauth2.test.test_oauth2": {
  "data": {},
  "type": "module"
 },
 "oauth2.test.test_oauth2.AuthorizationCodeGrant": {
  "data": {
   "shadows": "oauth2.grant.AuthorizationCodeGrant"
  },
  "type": "import"
 },
 "oauth2.test.test_oauth2.AuthorizationCodeGrantSiteAdapter": {
  "data": {
   "shadows": "oauth2.web.AuthorizationCodeGrantSiteAdapter"
  },
  "type": "import"
 },
 "oauth2.test.test_oauth2.ClientStore": {
  "data": {
   "shadows": "oauth2.store.ClientStore"
  },
  "type": "import"
 },
 "oauth2.test.test_oauth2.GrantHandler": {
  "data": {
   "shadows": "oauth2.grant.GrantHandler"
  },
  "type": "import"
 },
 "oauth2.test.test_oauth2.Mock": {
  "data": {
   "shadows": "mock.Mock"
  },
  "type": "import"
 },
 "oauth2.test.test_oauth2.OAuthInvalidError": {
  "data": {
   "shadows": "oauth2.error.OAuthInvalidError"
  },
  "type": "import"
 },
 "oauth2.test.test_oauth2.OAuthInvalidNoRedirectError": {
  "data": {
   "shadows": "oauth2.error.OAuthInvalidNoRedirectError"
  },
  "type": "import"
 },
 "oauth2.test.test_oauth2.Provider": {
  "data": {
   "shadows": "oauth2.Provider"
  },
  "type": "import"
 },
 "oauth2.test.test_oauth2.ProviderTestCase": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.test_oauth2.ProviderTestCase.setUp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.Provider",
    "oauth2.store.ClientStore",
    "oauth2.web.Response"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_oauth2.ProviderTestCase.test_add_grant_set_expire_time": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.grant.AuthorizationCodeGrant",
    "oauth2.grant.AuthorizationCodeGrant.grant_type",
    "oauth2.grant.RefreshToken",
    "oauth2.grant.ResourceOwnerGrant",
    "oauth2.grant.ResourceOwnerGrant.grant_type",
    "oauth2.web.AuthorizationCodeGrantSiteAdapter",
    "oauth2.web.ResourceOwnerGrantSiteAdapter"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_oauth2.ProviderTestCase.test_dispatch": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.web.AuthorizationCodeGrantSiteAdapter",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_oauth2.ProviderTestCase.test_dispatch_general_exception": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "KeyError",
    "mock.Mock",
    "oauth2.grant.GrantHandler",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_oauth2.ProviderTestCase.test_dispatch_no_client_found": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.error.OAuthInvalidNoRedirectError",
    "oauth2.grant.GrantHandler",
    "oauth2.test.test_oauth2.json",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_oauth2.ProviderTestCase.test_dispatch_no_grant_type_found": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "mock.Mock",
    "oauth2.test.test_oauth2.json",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_oauth2.RefreshToken": {
  "data": {
   "shadows": "oauth2.grant.RefreshToken"
  },
  "type": "import"
 },
 "oauth2.test.test_oauth2.Request": {
  "data": {
   "shadows": "oauth2.web.wsgi.Request"
  },
  "type": "import"
 },
 "oauth2.test.test_oauth2.ResourceOwnerGrant": {
  "data": {
   "shadows": "oauth2.grant.ResourceOwnerGrant"
  },
  "type": "import"
 },
 "oauth2.test.test_oauth2.ResourceOwnerGrantSiteAdapter": {
  "data": {
   "shadows": "oauth2.web.ResourceOwnerGrantSiteAdapter"
  },
  "type": "import"
 },
 "oauth2.test.test_oauth2.Response": {
  "data": {
   "shadows": "oauth2.web.Response"
  },
  "type": "import"
 },
 "oauth2.test.test_oauth2.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "oauth2.test.test_oauth2.unittest": {
  "data": {
   "shadows": "oauth2.test.unittest"
  },
  "type": "import"
 },
 "oauth2.test.test_tokengenerator": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "oauth2.test.unittest.main"
   ]
  },
  "type": "module"
 },
 "oauth2.test.test_tokengenerator.URandomTokenGenerator": {
  "data": {
   "shadows": "oauth2.tokengenerator.URandomTokenGenerator"
  },
  "type": "import"
 },
 "oauth2.test.test_tokengenerator.URandomTokenGeneratorTestCase": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.test_tokengenerator.URandomTokenGeneratorTestCase.test_generate": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "oauth2.tokengenerator.URandomTokenGenerator",
    "str"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_tokengenerator.Uuid4": {
  "data": {
   "shadows": "oauth2.tokengenerator.Uuid4"
  },
  "type": "import"
 },
 "oauth2.test.test_tokengenerator.Uuid4TestCase": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.test_tokengenerator.Uuid4TestCase.setUp": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "oauth2.test.test_tokengenerator.Uuid4TestCase.test_create_access_token_data_no_expiration": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "oauth2.tokengenerator.Uuid4"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_tokengenerator.Uuid4TestCase.test_create_access_token_data_with_expiration": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "oauth2.tokengenerator.Uuid4"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_tokengenerator.Uuid4TestCase.test_generate": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "oauth2.test.test_tokengenerator.re",
    "oauth2.tokengenerator.Uuid4"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_tokengenerator.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "oauth2.test.test_tokengenerator.unittest": {
  "data": {
   "shadows": "oauth2.test.unittest"
  },
  "type": "import"
 },
 "oauth2.test.test_web": {
  "data": {},
  "type": "module"
 },
 "oauth2.test.test_web.Application": {
  "data": {
   "shadows": "oauth2.web.wsgi.Application"
  },
  "type": "import"
 },
 "oauth2.test.test_web.Mock": {
  "data": {
   "shadows": "mock.Mock"
  },
  "type": "import"
 },
 "oauth2.test.test_web.Provider": {
  "data": {
   "shadows": "oauth2.Provider"
  },
  "type": "import"
 },
 "oauth2.test.test_web.Request": {
  "data": {
   "shadows": "oauth2.web.wsgi.Request"
  },
  "type": "import"
 },
 "oauth2.test.test_web.RequestTestCase": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.test_web.RequestTestCase.test_get_param": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_web.RequestTestCase.test_header": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_web.RequestTestCase.test_initialization_no_post_data": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_web.RequestTestCase.test_initialization_with_post_data": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "int",
    "mock.Mock",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_web.RequestTestCase.test_post_param": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "int",
    "mock.Mock",
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_web.Response": {
  "data": {
   "shadows": "oauth2.web.Response"
  },
  "type": "import"
 },
 "oauth2.test.test_web.ServerTestCase": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "oauth2.test.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "oauth2.test.test_web.ServerTestCase.test_call": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "list",
    "mock.Mock",
    "oauth2.Provider",
    "oauth2.web.Response",
    "oauth2.web.wsgi.Application",
    "oauth2.web.wsgi.Request",
    "wsgi"
   ]
  },
  "type": "function"
 },
 "oauth2.test.test_web.unittest": {
  "data": {
   "shadows": "oauth2.test.unittest"
  },
  "type": "import"
 },
 "oauth2.test.unittest": {
  "data": {
   "shadows": "unittest2"
  },
  "type": "import"
 },
 "oauth2.tokengenerator": {
  "data": {},
  "type": "module"
 },
 "oauth2.tokengenerator.TokenGenerator": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.tokengenerator.TokenGenerator.__init__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "oauth2.tokengenerator.TokenGenerator.create_access_token_data": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "oauth2.tokengenerator.TokenGenerator.generate": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "oauth2.tokengenerator.URandomTokenGenerator": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "oauth2.tokengenerator.TokenGenerator"
   ]
  },
  "type": "class"
 },
 "oauth2.tokengenerator.URandomTokenGenerator.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "oauth2.tokengenerator.TokenGenerator"
   ]
  },
  "type": "function"
 },
 "oauth2.tokengenerator.URandomTokenGenerator.generate": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "oauth2.tokengenerator.hashlib",
    "oauth2.tokengenerator.os"
   ]
  },
  "type": "function"
 },
 "oauth2.tokengenerator.Uuid4": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "oauth2.tokengenerator.TokenGenerator"
   ]
  },
  "type": "class"
 },
 "oauth2.tokengenerator.Uuid4.generate": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "oauth2.tokengenerator.uuid",
    "str"
   ]
  },
  "type": "function"
 },
 "oauth2.tokengenerator.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "oauth2.tokengenerator.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "oauth2.tokengenerator.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "oauth2.web": {
  "data": {},
  "type": "module"
 },
 "oauth2.web.AuthenticatingSiteAdapter": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.web.AuthenticatingSiteAdapter.authenticate": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "oauth2.web.AuthorizationCodeGrantSiteAdapter": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "oauth2.web.AuthenticatingSiteAdapter",
    "oauth2.web.UserFacingSiteAdapter"
   ]
  },
  "type": "class"
 },
 "oauth2.web.ImplicitGrantSiteAdapter": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "oauth2.web.AuthenticatingSiteAdapter",
    "oauth2.web.UserFacingSiteAdapter"
   ]
  },
  "type": "class"
 },
 "oauth2.web.Request": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.web.Request.get_param": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "oauth2.web.Request.header": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "oauth2.web.Request.method": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "oauth2.web.Request.path": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "oauth2.web.Request.post_param": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "oauth2.web.ResourceOwnerGrantSiteAdapter": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "oauth2.web.AuthenticatingSiteAdapter"
   ]
  },
  "type": "class"
 },
 "oauth2.web.Response": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.web.Response.__init__": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "oauth2.web.Response.add_header": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "oauth2.web.Response.headers": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "oauth2.web.UserFacingSiteAdapter": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.web.UserFacingSiteAdapter.render_auth_page": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "oauth2.web.UserFacingSiteAdapter.user_has_denied_access": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "oauth2.web.tornado": {
  "data": {},
  "type": "module"
 },
 "oauth2.web.tornado.OAuth2Handler": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "tornado.web.RequestHandler"
   ]
  },
  "type": "class"
 },
 "oauth2.web.tornado.OAuth2Handler._dispatch_request": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "dict",
    "oauth2.web.tornado.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.web.tornado.OAuth2Handler._map_response": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "oauth2.web.tornado.OAuth2Handler.get": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "oauth2.web.tornado.OAuth2Handler.initialize": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "oauth2.web.tornado.OAuth2Handler.post": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "oauth2.web.tornado.Request": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.web.tornado.Request.__init__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "oauth2.web.tornado.Request.get_param": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "oauth2.web.tornado.Request.header": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "oauth2.web.tornado.Request.method": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "oauth2.web.tornado.Request.path": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "oauth2.web.tornado.Request.post_param": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "oauth2.web.tornado.Request.query_string": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "oauth2.web.tornado.RequestHandler": {
  "data": {
   "shadows": "tornado.web.RequestHandler"
  },
  "type": "import"
 },
 "oauth2.web.tornado.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "oauth2.web.wsgi": {
  "data": {},
  "type": "module"
 },
 "oauth2.web.wsgi.Application": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.web.wsgi.Application.__call__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "start_response"
   ]
  },
  "type": "function"
 },
 "oauth2.web.wsgi.Application.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "oauth2.web.wsgi.Request"
   ]
  },
  "type": "function"
 },
 "oauth2.web.wsgi.Request": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "oauth2.web.wsgi.Request.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "int",
    "oauth2.compatibility.parse_qs"
   ]
  },
  "type": "function"
 },
 "oauth2.web.wsgi.Request.get_param": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "oauth2.web.wsgi.Request.header": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "oauth2.web.wsgi.Request.post_param": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "oauth2.web.wsgi.parse_qs": {
  "data": {
   "shadows": "oauth2.compatibility.parse_qs"
  },
  "type": "import"
 }
}