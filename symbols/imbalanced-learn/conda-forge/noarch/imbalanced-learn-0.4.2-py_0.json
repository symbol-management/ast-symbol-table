{
 "imblearn": {
  "data": {},
  "type": "module"
 },
 "imblearn.__all__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "imblearn._version": {
  "data": {},
  "type": "module"
 },
 "imblearn._version.__version__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "imblearn.combine": {
  "data": {},
  "type": "module"
 },
 "imblearn.combine.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "imblearn.combine._smote_enn": {
  "data": {},
  "type": "module"
 },
 "imblearn.combine._smote_enn.SMOTEENN": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "Substitution"
   ]
  },
  "type": "class"
 },
 "imblearn.combine._smote_enn.SMOTEENN.__init__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "imblearn.combine._smote_enn.SMOTEENN",
    "super"
   ]
  },
  "type": "function"
 },
 "imblearn.combine._smote_enn.SMOTEENN._fit_resample": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "check_target_type",
    "sklearn.utils.check_X_y"
   ]
  },
  "type": "function"
 },
 "imblearn.combine._smote_enn.SMOTEENN._validate_estimator": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "EditedNearestNeighbours",
    "SMOTE",
    "ValueError",
    "isinstance",
    "sklearn.base.clone",
    "type"
   ]
  },
  "type": "function"
 },
 "imblearn.combine._smote_enn.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.check_X_y"
  },
  "type": "import"
 },
 "imblearn.combine._smote_enn.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "imblearn.combine._smote_enn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "imblearn.combine._smote_tomek": {
  "data": {},
  "type": "module"
 },
 "imblearn.combine._smote_tomek.SMOTETomek": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Substitution"
   ]
  },
  "type": "class"
 },
 "imblearn.combine._smote_tomek.SMOTETomek.__init__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "imblearn.combine._smote_tomek.SMOTETomek",
    "super"
   ]
  },
  "type": "function"
 },
 "imblearn.combine._smote_tomek.SMOTETomek._fit_resample": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "check_target_type",
    "sklearn.utils.check_X_y"
   ]
  },
  "type": "function"
 },
 "imblearn.combine._smote_tomek.SMOTETomek._validate_estimator": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "SMOTE",
    "TomekLinks",
    "ValueError",
    "isinstance",
    "sklearn.base.clone",
    "type"
   ]
  },
  "type": "function"
 },
 "imblearn.combine._smote_tomek.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.check_X_y"
  },
  "type": "import"
 },
 "imblearn.combine._smote_tomek.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "imblearn.combine._smote_tomek.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "imblearn.combine.tests": {
  "data": {},
  "type": "module"
 },
 "imblearn.combine.tests.test_smote_enn": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "imblearn.combine.tests.test_smote_enn.EditedNearestNeighbours": {
  "data": {
   "shadows": "imblearn.under_sampling.EditedNearestNeighbours"
  },
  "type": "import"
 },
 "imblearn.combine.tests.test_smote_enn.RND_SEED": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "imblearn.combine.tests.test_smote_enn.R_TOL": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "imblearn.combine.tests.test_smote_enn.SMOTE": {
  "data": {
   "shadows": "imblearn.over_sampling.SMOTE"
  },
  "type": "import"
 },
 "imblearn.combine.tests.test_smote_enn.SMOTEENN": {
  "data": {
   "shadows": "imblearn.combine.SMOTEENN"
  },
  "type": "import"
 },
 "imblearn.combine.tests.test_smote_enn.X": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "imblearn.combine.tests.test_smote_enn.Y": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "imblearn.combine.tests.test_smote_enn.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "imblearn.combine.tests.test_smote_enn.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "imblearn.combine.tests.test_smote_enn.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.combine.tests.test_smote_enn.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.combine.tests.test_smote_enn.test_error_wrong_object": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.combine.SMOTEENN",
    "imblearn.combine.tests.test_smote_enn.X",
    "imblearn.combine.tests.test_smote_enn.Y",
    "imblearn.combine.tests.test_smote_enn.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.combine.tests.test_smote_enn.test_sample_regular": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "imblearn.combine.SMOTEENN",
    "imblearn.combine.tests.test_smote_enn.RND_SEED",
    "imblearn.combine.tests.test_smote_enn.R_TOL",
    "imblearn.combine.tests.test_smote_enn.X",
    "imblearn.combine.tests.test_smote_enn.Y",
    "numpy.array",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.combine.tests.test_smote_enn.test_sample_regular_half": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "imblearn.combine.SMOTEENN",
    "imblearn.combine.tests.test_smote_enn.RND_SEED",
    "imblearn.combine.tests.test_smote_enn.X",
    "imblearn.combine.tests.test_smote_enn.Y",
    "numpy.array",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.combine.tests.test_smote_enn.test_sample_regular_pass_smote_enn": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "imblearn.combine.SMOTEENN",
    "imblearn.combine.tests.test_smote_enn.RND_SEED",
    "imblearn.combine.tests.test_smote_enn.R_TOL",
    "imblearn.combine.tests.test_smote_enn.X",
    "imblearn.combine.tests.test_smote_enn.Y",
    "imblearn.over_sampling.SMOTE",
    "imblearn.under_sampling.EditedNearestNeighbours",
    "numpy.array",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.combine.tests.test_smote_enn.test_validate_estimator_default": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "imblearn.combine.SMOTEENN",
    "imblearn.combine.tests.test_smote_enn.RND_SEED",
    "imblearn.combine.tests.test_smote_enn.R_TOL",
    "imblearn.combine.tests.test_smote_enn.X",
    "imblearn.combine.tests.test_smote_enn.Y",
    "numpy.array",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.combine.tests.test_smote_enn.test_validate_estimator_init": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "imblearn.combine.SMOTEENN",
    "imblearn.combine.tests.test_smote_enn.RND_SEED",
    "imblearn.combine.tests.test_smote_enn.R_TOL",
    "imblearn.combine.tests.test_smote_enn.X",
    "imblearn.combine.tests.test_smote_enn.Y",
    "imblearn.over_sampling.SMOTE",
    "imblearn.under_sampling.EditedNearestNeighbours",
    "numpy.array",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.combine.tests.test_smote_tomek": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "imblearn.combine.tests.test_smote_tomek.RND_SEED": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "imblearn.combine.tests.test_smote_tomek.R_TOL": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "imblearn.combine.tests.test_smote_tomek.SMOTE": {
  "data": {
   "shadows": "imblearn.over_sampling.SMOTE"
  },
  "type": "import"
 },
 "imblearn.combine.tests.test_smote_tomek.SMOTETomek": {
  "data": {
   "shadows": "imblearn.combine.SMOTETomek"
  },
  "type": "import"
 },
 "imblearn.combine.tests.test_smote_tomek.TomekLinks": {
  "data": {
   "shadows": "imblearn.under_sampling.TomekLinks"
  },
  "type": "import"
 },
 "imblearn.combine.tests.test_smote_tomek.X": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "imblearn.combine.tests.test_smote_tomek.Y": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "imblearn.combine.tests.test_smote_tomek.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "imblearn.combine.tests.test_smote_tomek.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "imblearn.combine.tests.test_smote_tomek.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.combine.tests.test_smote_tomek.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.combine.tests.test_smote_tomek.test_error_wrong_object": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.combine.SMOTETomek",
    "imblearn.combine.tests.test_smote_tomek.X",
    "imblearn.combine.tests.test_smote_tomek.Y",
    "imblearn.combine.tests.test_smote_tomek.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.combine.tests.test_smote_tomek.test_sample_regular": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "imblearn.combine.SMOTETomek",
    "imblearn.combine.tests.test_smote_tomek.RND_SEED",
    "imblearn.combine.tests.test_smote_tomek.R_TOL",
    "imblearn.combine.tests.test_smote_tomek.X",
    "imblearn.combine.tests.test_smote_tomek.Y",
    "numpy.array",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.combine.tests.test_smote_tomek.test_sample_regular_half": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "imblearn.combine.SMOTETomek",
    "imblearn.combine.tests.test_smote_tomek.RND_SEED",
    "imblearn.combine.tests.test_smote_tomek.R_TOL",
    "imblearn.combine.tests.test_smote_tomek.X",
    "imblearn.combine.tests.test_smote_tomek.Y",
    "numpy.array",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.combine.tests.test_smote_tomek.test_validate_estimator_default": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "imblearn.combine.SMOTETomek",
    "imblearn.combine.tests.test_smote_tomek.RND_SEED",
    "imblearn.combine.tests.test_smote_tomek.R_TOL",
    "imblearn.combine.tests.test_smote_tomek.X",
    "imblearn.combine.tests.test_smote_tomek.Y",
    "numpy.array",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.combine.tests.test_smote_tomek.test_validate_estimator_init": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "imblearn.combine.SMOTETomek",
    "imblearn.combine.tests.test_smote_tomek.RND_SEED",
    "imblearn.combine.tests.test_smote_tomek.R_TOL",
    "imblearn.combine.tests.test_smote_tomek.X",
    "imblearn.combine.tests.test_smote_tomek.Y",
    "imblearn.over_sampling.SMOTE",
    "imblearn.under_sampling.TomekLinks",
    "numpy.array",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.datasets": {
  "data": {},
  "type": "module"
 },
 "imblearn.datasets.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "imblearn.datasets._imbalance": {
  "data": {},
  "type": "module"
 },
 "imblearn.datasets._imbalance.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "imblearn.datasets._imbalance.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.check_X_y"
  },
  "type": "import"
 },
 "imblearn.datasets._imbalance.make_imbalance": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "RandomUnderSampler",
    "TypeError",
    "ValueError",
    "callable",
    "check_sampling_strategy",
    "collections.Counter",
    "dict",
    "imblearn.datasets._imbalance.warnings",
    "isinstance",
    "print",
    "sklearn.utils.check_X_y",
    "type"
   ]
  },
  "type": "function"
 },
 "imblearn.datasets._imbalance.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "imblearn.datasets._zenodo": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "collections.OrderedDict",
    "enumerate",
    "imblearn.datasets._zenodo.MAP_ID_NAME",
    "imblearn.datasets._zenodo.MAP_NAME_ID",
    "imblearn.datasets._zenodo.MAP_NAME_ID_KEYS"
   ]
  },
  "type": "module"
 },
 "imblearn.datasets._zenodo.Bunch": {
  "data": {
   "shadows": "sklearn.datasets.base.Bunch"
  },
  "type": "import"
 },
 "imblearn.datasets._zenodo.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "imblearn.datasets._zenodo.MAP_ID_NAME": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "imblearn.datasets._zenodo.MAP_NAME_ID": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "imblearn.datasets._zenodo.MAP_NAME_ID_KEYS": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "imblearn.datasets._zenodo.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "imblearn.datasets._zenodo.POST_FILENAME": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "imblearn.datasets._zenodo.PRE_FILENAME": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "imblearn.datasets._zenodo.URL": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "imblearn.datasets._zenodo.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "imblearn.datasets._zenodo.fetch_datasets": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "collections.OrderedDict",
    "imblearn.datasets._zenodo.MAP_ID_NAME",
    "imblearn.datasets._zenodo.MAP_NAME_ID",
    "imblearn.datasets._zenodo.POST_FILENAME",
    "imblearn.datasets._zenodo.PRE_FILENAME",
    "imblearn.datasets._zenodo.URL",
    "imblearn.datasets._zenodo.tarfile",
    "int",
    "io.BytesIO",
    "isinstance",
    "numpy.arange",
    "numpy.load",
    "os.path.isfile",
    "os.path.join",
    "print",
    "range",
    "sklearn.datasets.base.Bunch",
    "sklearn.datasets.get_data_home",
    "sklearn.externals.six.string_types",
    "sklearn.utils.check_random_state",
    "sklearn.utils.fixes.makedirs",
    "str",
    "type",
    "urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "imblearn.datasets._zenodo.get_data_home": {
  "data": {
   "shadows": "sklearn.datasets.get_data_home"
  },
  "type": "import"
 },
 "imblearn.datasets._zenodo.isfile": {
  "data": {
   "shadows": "os.path.isfile"
  },
  "type": "import"
 },
 "imblearn.datasets._zenodo.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "imblearn.datasets._zenodo.makedirs": {
  "data": {
   "shadows": "sklearn.utils.fixes.makedirs"
  },
  "type": "import"
 },
 "imblearn.datasets._zenodo.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.datasets._zenodo.six": {
  "data": {
   "shadows": "sklearn.externals.six"
  },
  "type": "import"
 },
 "imblearn.datasets._zenodo.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "imblearn.datasets._zenodo.urlopen": {
  "data": {
   "shadows": "urllib.request.urlopen"
  },
  "type": "import"
 },
 "imblearn.datasets.tests": {
  "data": {},
  "type": "module"
 },
 "imblearn.datasets.tests.test_imbalance": {
  "data": {},
  "type": "module"
 },
 "imblearn.datasets.tests.test_imbalance.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "imblearn.datasets.tests.test_imbalance.iris": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "imblearn.datasets.tests.test_imbalance.pytest",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "imblearn.datasets.tests.test_imbalance.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "imblearn.datasets.tests.test_imbalance.make_imbalance": {
  "data": {
   "shadows": "imblearn.datasets.make_imbalance"
  },
  "type": "import"
 },
 "imblearn.datasets.tests.test_imbalance.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.datasets.tests.test_imbalance.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.datasets.tests.test_imbalance.test_make_imbalance_dict": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "collections.Counter",
    "imblearn.datasets.make_imbalance",
    "imblearn.datasets.tests.test_imbalance.iris",
    "imblearn.datasets.tests.test_imbalance.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.datasets.tests.test_imbalance.test_make_imbalance_dict_ratio": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "collections.Counter",
    "imblearn.datasets.make_imbalance",
    "imblearn.datasets.tests.test_imbalance.iris",
    "imblearn.datasets.tests.test_imbalance.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.datasets.tests.test_imbalance.test_make_imbalance_error": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.datasets.make_imbalance",
    "imblearn.datasets.tests.test_imbalance.iris",
    "imblearn.datasets.tests.test_imbalance.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.datasets.tests.test_imbalance.test_make_imbalance_error_single_class": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.datasets.make_imbalance",
    "imblearn.datasets.tests.test_imbalance.iris",
    "imblearn.datasets.tests.test_imbalance.pytest",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "imblearn.datasets.tests.test_imbalance.test_make_imbalanced_backcompat": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "TypeError",
    "imblearn.datasets.make_imbalance",
    "imblearn.datasets.tests.test_imbalance.iris",
    "imblearn.datasets.tests.test_imbalance.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.datasets.tests.test_zenodo": {
  "data": {},
  "type": "module"
 },
 "imblearn.datasets.tests.test_zenodo.DATASET_SHAPE": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "imblearn.datasets.tests.test_zenodo.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "imblearn.datasets.tests.test_zenodo.fetch": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "imblearn.datasets.fetch_datasets"
   ]
  },
  "type": "function"
 },
 "imblearn.datasets.tests.test_zenodo.fetch_datasets": {
  "data": {
   "shadows": "imblearn.datasets.fetch_datasets"
  },
  "type": "import"
 },
 "imblearn.datasets.tests.test_zenodo.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.datasets.tests.test_zenodo.test_fetch": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "IOError",
    "imblearn.datasets.tests.test_zenodo.DATASET_SHAPE",
    "imblearn.datasets.tests.test_zenodo.fetch",
    "sklearn.utils.testing.SkipTest"
   ]
  },
  "type": "function"
 },
 "imblearn.datasets.tests.test_zenodo.test_fetch_error": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.datasets.fetch_datasets",
    "imblearn.datasets.tests.test_zenodo.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.datasets.tests.test_zenodo.test_fetch_filter": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "IOError",
    "imblearn.datasets.tests.test_zenodo.DATASET_SHAPE",
    "imblearn.datasets.tests.test_zenodo.fetch",
    "imblearn.datasets.tests.test_zenodo.pytest",
    "sklearn.utils.testing.SkipTest",
    "tuple"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble": {
  "data": {},
  "type": "module"
 },
 "imblearn.ensemble.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "imblearn.ensemble._bagging": {
  "data": {},
  "type": "module"
 },
 "imblearn.ensemble._bagging.BaggingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.BaggingClassifier"
  },
  "type": "import"
 },
 "imblearn.ensemble._bagging.BalancedBaggingClassifier": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Substitution",
    "sklearn.ensemble.BaggingClassifier"
   ]
  },
  "type": "class"
 },
 "imblearn.ensemble._bagging.BalancedBaggingClassifier.__init__": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "imblearn.ensemble._bagging.BalancedBaggingClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble._bagging.BalancedBaggingClassifier._validate_estimator": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "Pipeline",
    "RandomUnderSampler",
    "ValueError",
    "imblearn.ensemble._bagging.numbers",
    "isinstance",
    "numpy.integer",
    "sklearn.base.clone",
    "sklearn.tree.DecisionTreeClassifier",
    "type"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble._bagging.BalancedBaggingClassifier.fit": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "imblearn.ensemble._bagging.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "imblearn.ensemble._bagging.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "imblearn.ensemble._bagging.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.ensemble._bagging.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "imblearn.ensemble._balance_cascade": {
  "data": {},
  "type": "module"
 },
 "imblearn.ensemble._balance_cascade.BalanceCascade": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "Substitution",
    "sklearn.utils.deprecation.deprecated"
   ]
  },
  "type": "class"
 },
 "imblearn.ensemble._balance_cascade.BalanceCascade.__init__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "imblearn.ensemble._balance_cascade.BalanceCascade",
    "super"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble._balance_cascade.BalanceCascade._fit_resample": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "bool",
    "check_sampling_strategy",
    "collections.Counter",
    "numpy.array",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.flatnonzero",
    "numpy.int",
    "numpy.ones",
    "range",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.utils.check_random_state",
    "sklearn.utils.safe_indexing"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble._balance_cascade.BalanceCascade._validate_estimator": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance",
    "sklearn.base.ClassifierMixin",
    "sklearn.base.clone",
    "sklearn.neighbors.KNeighborsClassifier",
    "type"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble._balance_cascade.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "imblearn.ensemble._balance_cascade.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "imblearn.ensemble._balance_cascade.KNeighborsClassifier": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsClassifier"
  },
  "type": "import"
 },
 "imblearn.ensemble._balance_cascade.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "imblearn.ensemble._balance_cascade.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "imblearn.ensemble._balance_cascade.cross_val_predict": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_predict"
  },
  "type": "import"
 },
 "imblearn.ensemble._balance_cascade.deprecated": {
  "data": {
   "shadows": "sklearn.utils.deprecation.deprecated"
  },
  "type": "import"
 },
 "imblearn.ensemble._balance_cascade.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.ensemble._balance_cascade.safe_indexing": {
  "data": {
   "shadows": "sklearn.utils.safe_indexing"
  },
  "type": "import"
 },
 "imblearn.ensemble._easy_ensemble": {
  "data": {
   "symbols_in_volume": [
    "numpy.iinfo",
    "numpy.int32"
   ]
  },
  "type": "module"
 },
 "imblearn.ensemble._easy_ensemble.AdaBoostClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.AdaBoostClassifier"
  },
  "type": "import"
 },
 "imblearn.ensemble._easy_ensemble.BaggingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.bagging.BaggingClassifier"
  },
  "type": "import"
 },
 "imblearn.ensemble._easy_ensemble.EasyEnsemble": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "Substitution",
    "sklearn.utils.deprecation.deprecated"
   ]
  },
  "type": "class"
 },
 "imblearn.ensemble._easy_ensemble.EasyEnsemble.__init__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "imblearn.ensemble._easy_ensemble.EasyEnsemble",
    "super"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble._easy_ensemble.EasyEnsemble._fit_resample": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "RandomUnderSampler",
    "imblearn.ensemble._easy_ensemble.MAX_INT",
    "numpy.array",
    "range",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble._easy_ensemble.EasyEnsembleClassifier": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "Substitution",
    "sklearn.ensemble.bagging.BaggingClassifier"
   ]
  },
  "type": "class"
 },
 "imblearn.ensemble._easy_ensemble.EasyEnsembleClassifier.__init__": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "imblearn.ensemble._easy_ensemble.EasyEnsembleClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble._easy_ensemble.EasyEnsembleClassifier._validate_estimator": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "Pipeline",
    "RandomUnderSampler",
    "ValueError",
    "imblearn.ensemble._easy_ensemble.numbers",
    "isinstance",
    "numpy.integer",
    "sklearn.base.clone",
    "sklearn.ensemble.AdaBoostClassifier",
    "type"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble._easy_ensemble.EasyEnsembleClassifier.fit": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "imblearn.ensemble._easy_ensemble.MAX_INT": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "imblearn.ensemble._easy_ensemble.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "imblearn.ensemble._easy_ensemble.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "imblearn.ensemble._easy_ensemble.deprecated": {
  "data": {
   "shadows": "sklearn.utils.deprecation.deprecated"
  },
  "type": "import"
 },
 "imblearn.ensemble._easy_ensemble.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.ensemble._easy_ensemble.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "imblearn.ensemble._forest": {
  "data": {
   "symbols_in_volume": [
    "numpy.iinfo",
    "numpy.int32"
   ]
  },
  "type": "module"
 },
 "imblearn.ensemble._forest.BalancedRandomForestClassifier": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "Substitution",
    "sklearn.ensemble.RandomForestClassifier"
   ]
  },
  "type": "class"
 },
 "imblearn.ensemble._forest.BalancedRandomForestClassifier.__init__": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "imblearn.ensemble._forest.BalancedRandomForestClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble._forest.BalancedRandomForestClassifier._make_sampler_estimator": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "sklearn.base.clone",
    "sklearn.ensemble.base._set_random_states"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble._forest.BalancedRandomForestClassifier._validate_estimator": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "RandomUnderSampler",
    "ValueError",
    "imblearn.ensemble._forest.numbers",
    "isinstance",
    "numpy.integer",
    "sklearn.base.clone",
    "sklearn.tree.DecisionTreeClassifier",
    "type"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble._forest.BalancedRandomForestClassifier.fit": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "ValueError",
    "copy.deepcopy",
    "enumerate",
    "getattr",
    "hasattr",
    "imblearn.ensemble._forest.MAX_INT",
    "imblearn.ensemble._forest._local_parallel_build_trees",
    "len",
    "make_pipeline",
    "numpy.ascontiguousarray",
    "numpy.atleast_1d",
    "numpy.float32",
    "numpy.float64",
    "numpy.reshape",
    "range",
    "scipy.sparse.issparse",
    "sklearn.exceptions.DataConversionWarning",
    "sklearn.externals.joblib.Parallel",
    "sklearn.externals.joblib.delayed",
    "sklearn.utils.check_array",
    "sklearn.utils.check_random_state",
    "warnings.warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble._forest.DOUBLE": {
  "data": {
   "shadows": "numpy.float64"
  },
  "type": "import"
 },
 "imblearn.ensemble._forest.DTYPE": {
  "data": {
   "shadows": "numpy.float32"
  },
  "type": "import"
 },
 "imblearn.ensemble._forest.DataConversionWarning": {
  "data": {
   "shadows": "sklearn.exceptions.DataConversionWarning"
  },
  "type": "import"
 },
 "imblearn.ensemble._forest.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "imblearn.ensemble._forest.MAX_INT": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "imblearn.ensemble._forest.Parallel": {
  "data": {
   "shadows": "sklearn.externals.joblib.Parallel"
  },
  "type": "import"
 },
 "imblearn.ensemble._forest.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "imblearn.ensemble._forest._local_parallel_build_trees": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "sklearn.ensemble.forest._parallel_build_trees",
    "sklearn.utils.safe_indexing"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble._forest._parallel_build_trees": {
  "data": {
   "shadows": "sklearn.ensemble.forest._parallel_build_trees"
  },
  "type": "import"
 },
 "imblearn.ensemble._forest._set_random_states": {
  "data": {
   "shadows": "sklearn.ensemble.base._set_random_states"
  },
  "type": "import"
 },
 "imblearn.ensemble._forest.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "imblearn.ensemble._forest.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "imblearn.ensemble._forest.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "imblearn.ensemble._forest.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "imblearn.ensemble._forest.delayed": {
  "data": {
   "shadows": "sklearn.externals.joblib.delayed"
  },
  "type": "import"
 },
 "imblearn.ensemble._forest.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "imblearn.ensemble._forest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.ensemble._forest.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "imblearn.ensemble._forest.safe_indexing": {
  "data": {
   "shadows": "sklearn.utils.safe_indexing"
  },
  "type": "import"
 },
 "imblearn.ensemble._forest.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "imblearn.ensemble._weight_boosting": {
  "data": {},
  "type": "module"
 },
 "imblearn.ensemble._weight_boosting.AdaBoostClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.AdaBoostClassifier"
  },
  "type": "import"
 },
 "imblearn.ensemble._weight_boosting.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "imblearn.ensemble._weight_boosting.RUSBoostClassifier": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "Substitution",
    "sklearn.ensemble.AdaBoostClassifier"
   ]
  },
  "type": "class"
 },
 "imblearn.ensemble._weight_boosting.RUSBoostClassifier.__init__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "imblearn.ensemble._weight_boosting.RUSBoostClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble._weight_boosting.RUSBoostClassifier._boost_discrete": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "len",
    "numpy.average",
    "numpy.exp",
    "numpy.log",
    "numpy.mean",
    "sklearn.utils.safe_indexing"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble._weight_boosting.RUSBoostClassifier._boost_real": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "getattr",
    "len",
    "numpy.argmax",
    "numpy.array",
    "numpy.average",
    "numpy.clip",
    "numpy.exp",
    "numpy.finfo",
    "numpy.log",
    "numpy.mean",
    "numpy.newaxis",
    "sklearn.utils.safe_indexing"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble._weight_boosting.RUSBoostClassifier._make_sampler_estimator": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "copy.deepcopy",
    "dict",
    "getattr",
    "make_pipeline",
    "sklearn.base.clone",
    "sklearn.ensemble.base._set_random_states"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble._weight_boosting.RUSBoostClassifier._validate_estimator": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "RandomUnderSampler",
    "ValueError",
    "imblearn.ensemble._weight_boosting.numbers",
    "isinstance",
    "numpy.integer",
    "sklearn.base.clone",
    "sklearn.tree.DecisionTreeClassifier",
    "type"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble._weight_boosting.RUSBoostClassifier.fit": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "imblearn.ensemble._weight_boosting.RUSBoostClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble._weight_boosting._set_random_states": {
  "data": {
   "shadows": "sklearn.ensemble.base._set_random_states"
  },
  "type": "import"
 },
 "imblearn.ensemble._weight_boosting.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "imblearn.ensemble._weight_boosting.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "imblearn.ensemble._weight_boosting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.ensemble._weight_boosting.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "imblearn.ensemble._weight_boosting.safe_indexing": {
  "data": {
   "shadows": "sklearn.utils.safe_indexing"
  },
  "type": "import"
 },
 "imblearn.ensemble.base": {
  "data": {},
  "type": "module"
 },
 "imblearn.ensemble.base.BaseEnsembleSampler": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "imblearn.ensemble.base.BaseEnsembleSampler.fit_resample": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "check_sampling_strategy",
    "len",
    "numpy.array",
    "numpy.unique",
    "sklearn.preprocessing.label_binarize"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.base.label_binarize": {
  "data": {
   "shadows": "sklearn.preprocessing.label_binarize"
  },
  "type": "import"
 },
 "imblearn.ensemble.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests": {
  "data": {},
  "type": "module"
 },
 "imblearn.ensemble.tests.test_bagging": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "module"
 },
 "imblearn.ensemble.tests.test_bagging.BalancedBaggingClassifier": {
  "data": {
   "shadows": "imblearn.ensemble.BalancedBaggingClassifier"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_bagging.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_bagging.DummyClassifier": {
  "data": {
   "shadows": "sklearn.dummy.DummyClassifier"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_bagging.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_bagging.KNeighborsClassifier": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsClassifier"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_bagging.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_bagging.ParameterGrid": {
  "data": {
   "shadows": "sklearn.model_selection.ParameterGrid"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_bagging.Perceptron": {
  "data": {
   "shadows": "sklearn.linear_model.Perceptron"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_bagging.RandomUnderSampler": {
  "data": {
   "shadows": "imblearn.under_sampling.RandomUnderSampler"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_bagging.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_bagging.SelectKBest": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectKBest"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_bagging.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_bagging.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_bagging.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_bagging.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_bagging.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_bagging.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_bagging.iris": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "imblearn.ensemble.tests.test_bagging.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_bagging.make_hastie_10_2": {
  "data": {
   "shadows": "sklearn.datasets.make_hastie_10_2"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_bagging.make_imbalance": {
  "data": {
   "shadows": "imblearn.datasets.make_imbalance"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_bagging.make_pipeline": {
  "data": {
   "shadows": "imblearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_bagging.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_bagging.test_bagging_with_pipeline": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "imblearn.datasets.make_imbalance",
    "imblearn.ensemble.BalancedBaggingClassifier",
    "imblearn.ensemble.tests.test_bagging.iris",
    "imblearn.pipeline.make_pipeline",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.tree.DecisionTreeClassifier"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_bagging.test_balanced_bagging_classifier": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "imblearn.datasets.make_imbalance",
    "imblearn.ensemble.BalancedBaggingClassifier",
    "imblearn.ensemble.tests.test_bagging.iris",
    "sklearn.dummy.DummyClassifier",
    "sklearn.linear_model.Perceptron",
    "sklearn.model_selection.ParameterGrid",
    "sklearn.model_selection.train_test_split",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.svm.SVC",
    "sklearn.tree.DecisionTreeClassifier"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_bagging.test_base_estimator": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "imblearn.datasets.make_imbalance",
    "imblearn.ensemble.BalancedBaggingClassifier",
    "imblearn.ensemble.tests.test_bagging.iris",
    "isinstance",
    "sklearn.linear_model.Perceptron",
    "sklearn.model_selection.train_test_split",
    "sklearn.tree.DecisionTreeClassifier"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_bagging.test_bootstrap_features": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "imblearn.datasets.make_imbalance",
    "imblearn.ensemble.BalancedBaggingClassifier",
    "imblearn.ensemble.tests.test_bagging.iris",
    "numpy.median",
    "numpy.unique",
    "sklearn.model_selection.train_test_split",
    "sklearn.tree.DecisionTreeClassifier"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_bagging.test_bootstrap_samples": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "imblearn.datasets.make_imbalance",
    "imblearn.ensemble.BalancedBaggingClassifier",
    "imblearn.ensemble.tests.test_bagging.iris",
    "sklearn.model_selection.train_test_split",
    "sklearn.tree.DecisionTreeClassifier"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_bagging.test_error": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "imblearn.datasets.make_imbalance",
    "imblearn.ensemble.BalancedBaggingClassifier",
    "imblearn.ensemble.tests.test_bagging.iris",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_bagging.test_estimators_samples": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "imblearn.ensemble.BalancedBaggingClassifier",
    "len",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_bagging.test_gridsearch": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "imblearn.ensemble.BalancedBaggingClassifier",
    "imblearn.ensemble.tests.test_bagging.iris",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_bagging.test_max_samples_consistency": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "imblearn.ensemble.BalancedBaggingClassifier",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.neighbors.KNeighborsClassifier"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_bagging.test_oob_score_classification": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "UserWarning",
    "abs",
    "imblearn.datasets.make_imbalance",
    "imblearn.ensemble.BalancedBaggingClassifier",
    "imblearn.ensemble.tests.test_bagging.iris",
    "sklearn.model_selection.train_test_split",
    "sklearn.svm.SVC",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_bagging.test_oob_score_consistency": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "imblearn.ensemble.BalancedBaggingClassifier",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.neighbors.KNeighborsClassifier"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_bagging.test_oob_score_removed_on_warm_start": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "imblearn.ensemble.BalancedBaggingClassifier",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_bagging.test_probability": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "imblearn.datasets.make_imbalance",
    "imblearn.ensemble.BalancedBaggingClassifier",
    "imblearn.ensemble.tests.test_bagging.iris",
    "len",
    "numpy.errstate",
    "numpy.exp",
    "numpy.ones",
    "numpy.sum",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.train_test_split",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_bagging.test_single_estimator": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "imblearn.datasets.make_imbalance",
    "imblearn.ensemble.BalancedBaggingClassifier",
    "imblearn.ensemble.tests.test_bagging.iris",
    "imblearn.pipeline.make_pipeline",
    "imblearn.under_sampling.RandomUnderSampler",
    "sklearn.model_selection.train_test_split",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_bagging.test_warm_start": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "imblearn.ensemble.BalancedBaggingClassifier",
    "len",
    "set",
    "sklearn.datasets.make_hastie_10_2"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_bagging.test_warm_start_equal_n_estimators": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "UserWarning",
    "imblearn.ensemble.BalancedBaggingClassifier",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_bagging.test_warm_start_equivalence": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "imblearn.ensemble.BalancedBaggingClassifier",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_bagging.test_warm_start_smaller_n_estimators": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.ensemble.BalancedBaggingClassifier",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_bagging.test_warm_start_with_oob_score_fails": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.ensemble.BalancedBaggingClassifier",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_bagging.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_balance_cascade": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "imblearn.ensemble.tests.test_balance_cascade.BalanceCascade": {
  "data": {
   "shadows": "imblearn.ensemble.BalanceCascade"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_balance_cascade.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_balance_cascade.RND_SEED": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "imblearn.ensemble.tests.test_balance_cascade.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_balance_cascade.X": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "imblearn.ensemble.tests.test_balance_cascade.Y": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "imblearn.ensemble.tests.test_balance_cascade.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_balance_cascade.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_balance_cascade.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_balance_cascade.raises": {
  "data": {
   "shadows": "pytest.raises"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_balance_cascade.test_fit_resample_auto": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "imblearn.ensemble.BalanceCascade",
    "imblearn.ensemble.tests.test_balance_cascade.RND_SEED",
    "imblearn.ensemble.tests.test_balance_cascade.X",
    "imblearn.ensemble.tests.test_balance_cascade.Y",
    "imblearn.ensemble.tests.test_balance_cascade.pytest",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_balance_cascade.test_fit_resample_auto_early_stop": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "imblearn.ensemble.BalanceCascade",
    "imblearn.ensemble.tests.test_balance_cascade.RND_SEED",
    "imblearn.ensemble.tests.test_balance_cascade.X",
    "imblearn.ensemble.tests.test_balance_cascade.Y",
    "imblearn.ensemble.tests.test_balance_cascade.pytest",
    "numpy.array",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_balance_cascade.test_fit_resample_half": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "imblearn.ensemble.BalanceCascade",
    "imblearn.ensemble.tests.test_balance_cascade.RND_SEED",
    "imblearn.ensemble.tests.test_balance_cascade.X",
    "imblearn.ensemble.tests.test_balance_cascade.Y",
    "imblearn.ensemble.tests.test_balance_cascade.pytest",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_balance_cascade.test_give_classifier_obj": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "imblearn.ensemble.BalanceCascade",
    "imblearn.ensemble.tests.test_balance_cascade.RND_SEED",
    "imblearn.ensemble.tests.test_balance_cascade.X",
    "imblearn.ensemble.tests.test_balance_cascade.Y",
    "imblearn.ensemble.tests.test_balance_cascade.pytest",
    "numpy.array",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_balance_cascade.test_give_classifier_wrong_obj": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.ensemble.BalanceCascade",
    "imblearn.ensemble.tests.test_balance_cascade.RND_SEED",
    "imblearn.ensemble.tests.test_balance_cascade.X",
    "imblearn.ensemble.tests.test_balance_cascade.Y",
    "imblearn.ensemble.tests.test_balance_cascade.pytest",
    "pytest.raises"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_easy_ensemble": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "module"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.AdaBoostClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.AdaBoostClassifier"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.EasyEnsemble": {
  "data": {
   "shadows": "imblearn.ensemble.EasyEnsemble"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.EasyEnsembleClassifier": {
  "data": {
   "shadows": "imblearn.ensemble.EasyEnsembleClassifier"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.RND_SEED": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.RandomUnderSampler": {
  "data": {
   "shadows": "imblearn.under_sampling.RandomUnderSampler"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.SelectKBest": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectKBest"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.X": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.Y": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.iris": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.make_hastie_10_2": {
  "data": {
   "shadows": "sklearn.datasets.make_hastie_10_2"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.make_imbalance": {
  "data": {
   "shadows": "imblearn.datasets.make_imbalance"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.make_pipeline": {
  "data": {
   "shadows": "imblearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.test_bagging_with_pipeline": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "imblearn.datasets.make_imbalance",
    "imblearn.ensemble.EasyEnsembleClassifier",
    "imblearn.ensemble.tests.test_easy_ensemble.X",
    "imblearn.ensemble.tests.test_easy_ensemble.iris",
    "imblearn.pipeline.make_pipeline",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.feature_selection.SelectKBest"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.test_base_estimator": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "imblearn.datasets.make_imbalance",
    "imblearn.ensemble.EasyEnsembleClassifier",
    "imblearn.ensemble.tests.test_easy_ensemble.X",
    "imblearn.ensemble.tests.test_easy_ensemble.iris",
    "isinstance",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.test_easy_ensemble_classifier": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "imblearn.datasets.make_imbalance",
    "imblearn.ensemble.EasyEnsembleClassifier",
    "imblearn.ensemble.tests.test_easy_ensemble.RND_SEED",
    "imblearn.ensemble.tests.test_easy_ensemble.X",
    "imblearn.ensemble.tests.test_easy_ensemble.iris",
    "imblearn.ensemble.tests.test_easy_ensemble.pytest",
    "len",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.test_easy_ensemble_classifier_error": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.datasets.make_imbalance",
    "imblearn.ensemble.EasyEnsembleClassifier",
    "imblearn.ensemble.tests.test_easy_ensemble.X",
    "imblearn.ensemble.tests.test_easy_ensemble.iris",
    "imblearn.ensemble.tests.test_easy_ensemble.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.test_easy_ensemble_classifier_grid_search": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "imblearn.datasets.make_imbalance",
    "imblearn.ensemble.EasyEnsembleClassifier",
    "imblearn.ensemble.tests.test_easy_ensemble.X",
    "imblearn.ensemble.tests.test_easy_ensemble.iris",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.model_selection.GridSearchCV"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.test_easy_ensemble_classifier_single_estimator": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "imblearn.datasets.make_imbalance",
    "imblearn.ensemble.EasyEnsembleClassifier",
    "imblearn.ensemble.tests.test_easy_ensemble.X",
    "imblearn.ensemble.tests.test_easy_ensemble.iris",
    "imblearn.pipeline.make_pipeline",
    "imblearn.under_sampling.RandomUnderSampler",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.test_ee_init": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "imblearn.ensemble.EasyEnsemble",
    "imblearn.ensemble.tests.test_easy_ensemble.RND_SEED",
    "imblearn.ensemble.tests.test_easy_ensemble.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.test_fit_resample_auto": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "imblearn.ensemble.EasyEnsemble",
    "imblearn.ensemble.tests.test_easy_ensemble.RND_SEED",
    "imblearn.ensemble.tests.test_easy_ensemble.X",
    "imblearn.ensemble.tests.test_easy_ensemble.Y",
    "imblearn.ensemble.tests.test_easy_ensemble.pytest",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.test_fit_resample_half": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "imblearn.ensemble.EasyEnsemble",
    "imblearn.ensemble.tests.test_easy_ensemble.RND_SEED",
    "imblearn.ensemble.tests.test_easy_ensemble.X",
    "imblearn.ensemble.tests.test_easy_ensemble.Y",
    "imblearn.ensemble.tests.test_easy_ensemble.pytest",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.test_random_state_none": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "imblearn.ensemble.EasyEnsemble",
    "imblearn.ensemble.tests.test_easy_ensemble.X",
    "imblearn.ensemble.tests.test_easy_ensemble.Y",
    "imblearn.ensemble.tests.test_easy_ensemble.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.test_warm_start": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "imblearn.ensemble.EasyEnsembleClassifier",
    "imblearn.ensemble.tests.test_easy_ensemble.X",
    "len",
    "set",
    "sklearn.datasets.make_hastie_10_2"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.test_warm_start_equal_n_estimators": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "UserWarning",
    "imblearn.ensemble.EasyEnsembleClassifier",
    "imblearn.ensemble.tests.test_easy_ensemble.X",
    "imblearn.ensemble.tests.test_easy_ensemble.pytest",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.test_warm_start_equivalence": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "imblearn.ensemble.EasyEnsembleClassifier",
    "imblearn.ensemble.tests.test_easy_ensemble.X",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.test_warm_start_smaller_n_estimators": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.ensemble.EasyEnsembleClassifier",
    "imblearn.ensemble.tests.test_easy_ensemble.X",
    "imblearn.ensemble.tests.test_easy_ensemble.pytest",
    "sklearn.datasets.make_hastie_10_2"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_easy_ensemble.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_forest": {
  "data": {},
  "type": "module"
 },
 "imblearn.ensemble.tests.test_forest.BalancedRandomForestClassifier": {
  "data": {
   "shadows": "imblearn.ensemble.BalancedRandomForestClassifier"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_forest.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_forest.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_forest.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_forest.imbalanced_dataset": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "imblearn.ensemble.tests.test_forest.pytest",
    "sklearn.datasets.make_classification"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_forest.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_forest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_forest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_forest.test_balanced_random_forest": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "imblearn.ensemble.BalancedRandomForestClassifier",
    "imblearn.ensemble.tests.test_forest.imbalanced_dataset",
    "len"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_forest.test_balanced_random_forest_attributes": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "imblearn.ensemble.BalancedRandomForestClassifier",
    "imblearn.ensemble.tests.test_forest.imbalanced_dataset",
    "range",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_forest.test_balanced_random_forest_error": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.ensemble.BalancedRandomForestClassifier",
    "imblearn.ensemble.tests.test_forest.imbalanced_dataset",
    "imblearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_forest.test_balanced_random_forest_error_warning_warm_start": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "imblearn.ensemble.BalancedRandomForestClassifier",
    "imblearn.ensemble.tests.test_forest.imbalanced_dataset",
    "imblearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_forest.test_balanced_random_forest_grid_search": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "imblearn.ensemble.BalancedRandomForestClassifier",
    "imblearn.ensemble.tests.test_forest.imbalanced_dataset",
    "sklearn.model_selection.GridSearchCV"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_forest.test_balanced_random_forest_oob": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "UserWarning",
    "abs",
    "imblearn.ensemble.BalancedRandomForestClassifier",
    "imblearn.ensemble.tests.test_forest.imbalanced_dataset",
    "imblearn.ensemble.tests.test_forest.pytest",
    "numpy.errstate"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_forest.test_balanced_random_forest_sample_weight": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "imblearn.ensemble.BalancedRandomForestClassifier",
    "imblearn.ensemble.tests.test_forest.imbalanced_dataset",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_weight_boosting": {
  "data": {},
  "type": "module"
 },
 "imblearn.ensemble.tests.test_weight_boosting.RUSBoostClassifier": {
  "data": {
   "shadows": "imblearn.ensemble.RUSBoostClassifier"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_weight_boosting.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_weight_boosting.imbalanced_dataset": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "imblearn.ensemble.tests.test_weight_boosting.pytest",
    "sklearn.datasets.make_classification"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_weight_boosting.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_weight_boosting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_weight_boosting.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.ensemble.tests.test_weight_boosting.test_balanced_random_forest_error": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.ensemble.RUSBoostClassifier",
    "imblearn.ensemble.tests.test_weight_boosting.imbalanced_dataset",
    "imblearn.ensemble.tests.test_weight_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_weight_boosting.test_rusboost": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "imblearn.ensemble.RUSBoostClassifier",
    "imblearn.ensemble.tests.test_weight_boosting.imbalanced_dataset",
    "imblearn.ensemble.tests.test_weight_boosting.pytest",
    "len",
    "numpy.unique",
    "set",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_weight_boosting.test_rusboost_sample_weight": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "AssertionError",
    "imblearn.ensemble.RUSBoostClassifier",
    "imblearn.ensemble.tests.test_weight_boosting.imbalanced_dataset",
    "imblearn.ensemble.tests.test_weight_boosting.pytest",
    "numpy.ones_like",
    "numpy.random.RandomState",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.ensemble.tests.test_weight_boosting.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "imblearn.exceptions": {
  "data": {},
  "type": "module"
 },
 "imblearn.exceptions.raise_isinstance_error": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ValueError",
    "type"
   ]
  },
  "type": "function"
 },
 "imblearn.keras": {
  "data": {},
  "type": "module"
 },
 "imblearn.keras.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "imblearn.keras._generator": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "imblearn.keras._generator.keras",
    "object"
   ]
  },
  "type": "module"
 },
 "imblearn.keras._generator.BalancedBatchGenerator": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "imblearn.keras._generator.ParentClass"
   ]
  },
  "type": "class"
 },
 "imblearn.keras._generator.BalancedBatchGenerator.__getitem__": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "scipy.sparse.issparse",
    "sklearn.utils.safe_indexing"
   ]
  },
  "type": "function"
 },
 "imblearn.keras._generator.BalancedBatchGenerator.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ImportError",
    "imblearn.keras._generator.HAS_KERAS"
   ]
  },
  "type": "function"
 },
 "imblearn.keras._generator.BalancedBatchGenerator.__len__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "imblearn.keras._generator.BalancedBatchGenerator._sample": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "RandomUnderSampler",
    "ValueError",
    "hasattr",
    "imblearn.keras._generator.DONT_HAVE_RANDOM_STATE",
    "sklearn.base.clone",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.set_random_state"
   ]
  },
  "type": "function"
 },
 "imblearn.keras._generator.DONT_HAVE_RANDOM_STATE": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "imblearn.keras._generator.HAS_KERAS": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "imblearn.keras._generator.ParentClass": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "imblearn.keras._generator.balanced_batch_generator": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "Substitution"
   ]
  },
  "type": "function"
 },
 "imblearn.keras._generator.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "imblearn.keras._generator.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "imblearn.keras._generator.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "imblearn.keras._generator.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "imblearn.keras._generator.keras": {
  "data": {
   "shadows": "keras"
  },
  "type": "import"
 },
 "imblearn.keras._generator.safe_indexing": {
  "data": {
   "shadows": "sklearn.utils.safe_indexing"
  },
  "type": "import"
 },
 "imblearn.keras._generator.set_random_state": {
  "data": {
   "shadows": "sklearn.utils.testing.set_random_state"
  },
  "type": "import"
 },
 "imblearn.keras._generator.tf_bbg": {
  "data": {
   "shadows": "balanced_batch_generator"
  },
  "type": "import"
 },
 "imblearn.keras.tests": {
  "data": {},
  "type": "module"
 },
 "imblearn.keras.tests.test_generator": {
  "data": {
   "symbols_in_volume": [
    "imblearn.keras.tests.test_generator.pytest"
   ]
  },
  "type": "module"
 },
 "imblearn.keras.tests.test_generator.BalancedBatchGenerator": {
  "data": {
   "shadows": "imblearn.keras.BalancedBatchGenerator"
  },
  "type": "import"
 },
 "imblearn.keras.tests.test_generator.ClusterCentroids": {
  "data": {
   "shadows": "imblearn.under_sampling.ClusterCentroids"
  },
  "type": "import"
 },
 "imblearn.keras.tests.test_generator.Dense": {
  "data": {
   "shadows": "keras.layers.Dense"
  },
  "type": "import"
 },
 "imblearn.keras.tests.test_generator.NearMiss": {
  "data": {
   "shadows": "imblearn.under_sampling.NearMiss"
  },
  "type": "import"
 },
 "imblearn.keras.tests.test_generator.RandomOverSampler": {
  "data": {
   "shadows": "imblearn.over_sampling.RandomOverSampler"
  },
  "type": "import"
 },
 "imblearn.keras.tests.test_generator.Sequential": {
  "data": {
   "shadows": "keras.models.Sequential"
  },
  "type": "import"
 },
 "imblearn.keras.tests.test_generator._build_keras_model": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "keras.layers.Dense",
    "keras.models.Sequential"
   ]
  },
  "type": "function"
 },
 "imblearn.keras.tests.test_generator.balanced_batch_generator": {
  "data": {
   "shadows": "imblearn.keras.balanced_batch_generator"
  },
  "type": "import"
 },
 "imblearn.keras.tests.test_generator.data": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "imblearn.datasets.make_imbalance",
    "imblearn.keras.tests.test_generator.pytest",
    "keras.utils.to_categorical",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "imblearn.keras.tests.test_generator.keras": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "imblearn.keras.tests.test_generator.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "imblearn.keras.tests.test_generator.make_imbalance": {
  "data": {
   "shadows": "imblearn.datasets.make_imbalance"
  },
  "type": "import"
 },
 "imblearn.keras.tests.test_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.keras.tests.test_generator.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.keras.tests.test_generator.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "imblearn.keras.tests.test_generator.test_balanced_batch_generator_class": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "imblearn.keras.BalancedBatchGenerator",
    "imblearn.keras.tests.test_generator._build_keras_model",
    "imblearn.keras.tests.test_generator.data",
    "imblearn.keras.tests.test_generator.pytest",
    "imblearn.over_sampling.RandomOverSampler",
    "imblearn.under_sampling.NearMiss",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "imblearn.keras.tests.test_generator.test_balanced_batch_generator_class_no_return_indices": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.keras.BalancedBatchGenerator",
    "imblearn.keras.tests.test_generator.data",
    "imblearn.keras.tests.test_generator.pytest",
    "imblearn.under_sampling.ClusterCentroids"
   ]
  },
  "type": "function"
 },
 "imblearn.keras.tests.test_generator.test_balanced_batch_generator_class_sparse": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "imblearn.keras.BalancedBatchGenerator",
    "imblearn.keras.tests.test_generator.data",
    "imblearn.keras.tests.test_generator.pytest",
    "len",
    "range",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "imblearn.keras.tests.test_generator.test_balanced_batch_generator_function": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "imblearn.keras.balanced_batch_generator",
    "imblearn.keras.tests.test_generator._build_keras_model",
    "imblearn.keras.tests.test_generator.data",
    "imblearn.keras.tests.test_generator.pytest",
    "imblearn.over_sampling.RandomOverSampler",
    "imblearn.under_sampling.NearMiss",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "imblearn.keras.tests.test_generator.test_balanced_batch_generator_function_no_return_indices": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.keras.balanced_batch_generator",
    "imblearn.keras.tests.test_generator.data",
    "imblearn.keras.tests.test_generator.pytest",
    "imblearn.under_sampling.ClusterCentroids"
   ]
  },
  "type": "function"
 },
 "imblearn.keras.tests.test_generator.test_balanced_batch_generator_function_sparse": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "imblearn.keras.balanced_batch_generator",
    "imblearn.keras.tests.test_generator.data",
    "imblearn.keras.tests.test_generator.pytest",
    "next",
    "range",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "imblearn.keras.tests.test_generator.to_categorical": {
  "data": {
   "shadows": "keras.utils.to_categorical"
  },
  "type": "import"
 },
 "imblearn.metrics": {
  "data": {},
  "type": "module"
 },
 "imblearn.metrics.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "imblearn.metrics._classification": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "imblearn.metrics._classification.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelEncoder"
  },
  "type": "import"
 },
 "imblearn.metrics._classification._check_targets": {
  "data": {
   "shadows": "sklearn.metrics.classification._check_targets"
  },
  "type": "import"
 },
 "imblearn.metrics._classification._prf_divide": {
  "data": {
   "shadows": "sklearn.metrics.classification._prf_divide"
  },
  "type": "import"
 },
 "imblearn.metrics._classification.classification_report_imbalanced": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "enumerate",
    "iba_gmean",
    "imblearn.metrics._classification.geometric_mean_score",
    "imblearn.metrics._classification.make_index_balanced_accuracy",
    "imblearn.metrics._classification.specificity_score",
    "len",
    "max",
    "numpy.asarray",
    "numpy.average",
    "numpy.sum",
    "sklearn.metrics.classification.precision_recall_fscore_support",
    "sklearn.utils.multiclass.unique_labels",
    "tuple"
   ]
  },
  "type": "function"
 },
 "imblearn.metrics._classification.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "imblearn.metrics._classification.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "imblearn.metrics._classification.geometric_mean_score": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "imblearn.metrics._classification.sensitivity_specificity_support",
    "isinstance",
    "len",
    "numpy.asarray",
    "numpy.bincount",
    "numpy.errstate",
    "numpy.hstack",
    "numpy.ma.core.MaskedConstant",
    "numpy.searchsorted",
    "numpy.setdiff1d",
    "numpy.sqrt",
    "numpy.zeros",
    "scipy.stats.gmean",
    "sklearn.metrics.classification._prf_divide",
    "sklearn.preprocessing.LabelEncoder",
    "sklearn.utils.multiclass.unique_labels"
   ]
  },
  "type": "function"
 },
 "imblearn.metrics._classification.getcallargs": {
  "data": {
   "shadows": "inspect.getcallargs"
  },
  "type": "import"
 },
 "imblearn.metrics._classification.make_index_balanced_accuracy": {
  "data": {
   "lineno": 648
  },
  "type": "function"
 },
 "imblearn.metrics._classification.make_index_balanced_accuracy.decorate": {
  "data": {
   "lineno": 699
  },
  "type": "function"
 },
 "imblearn.metrics._classification.make_index_balanced_accuracy.decorate.compute_score": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "AttributeError",
    "dict",
    "imblearn.metrics._classification.functools",
    "imblearn.metrics._classification.sensitivity_specificity_support",
    "inspect.getcallargs",
    "numpy.power",
    "scoring_func",
    "scoring_func.__name__",
    "set",
    "sklearn.externals.funcsigs.signature"
   ]
  },
  "type": "function"
 },
 "imblearn.metrics._classification.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.metrics._classification.precision_recall_fscore_support": {
  "data": {
   "shadows": "sklearn.metrics.classification.precision_recall_fscore_support"
  },
  "type": "import"
 },
 "imblearn.metrics._classification.sensitivity_score": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "imblearn.metrics._classification.sensitivity_specificity_support"
   ]
  },
  "type": "function"
 },
 "imblearn.metrics._classification.sensitivity_specificity_support": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "imblearn.metrics._classification.warnings",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.average",
    "numpy.bincount",
    "numpy.errstate",
    "numpy.hstack",
    "numpy.searchsorted",
    "numpy.setdiff1d",
    "numpy.zeros",
    "sklearn.metrics.classification._check_targets",
    "sklearn.metrics.classification._prf_divide",
    "sklearn.preprocessing.LabelEncoder",
    "sklearn.utils.multiclass.unique_labels",
    "str"
   ]
  },
  "type": "function"
 },
 "imblearn.metrics._classification.signature": {
  "data": {
   "shadows": "sklearn.externals.funcsigs.signature"
  },
  "type": "import"
 },
 "imblearn.metrics._classification.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "imblearn.metrics._classification.specificity_score": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "imblearn.metrics._classification.sensitivity_specificity_support"
   ]
  },
  "type": "function"
 },
 "imblearn.metrics._classification.unique_labels": {
  "data": {
   "shadows": "sklearn.utils.multiclass.unique_labels"
  },
  "type": "import"
 },
 "imblearn.metrics._classification.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "imblearn.over_sampling": {
  "data": {},
  "type": "module"
 },
 "imblearn.over_sampling.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "imblearn.over_sampling.base": {
  "data": {},
  "type": "module"
 },
 "imblearn.over_sampling.base.BaseOverSampler": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "imblearn.over_sampling.tests": {
  "data": {},
  "type": "module"
 },
 "imblearn.over_sampling.tests.test_adasyn": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "imblearn.over_sampling.tests.test_adasyn.ADASYN": {
  "data": {
   "shadows": "imblearn.over_sampling.ADASYN"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_adasyn.NearestNeighbors": {
  "data": {
   "shadows": "sklearn.neighbors.NearestNeighbors"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_adasyn.RND_SEED": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "imblearn.over_sampling.tests.test_adasyn.R_TOL": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "imblearn.over_sampling.tests.test_adasyn.X": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "imblearn.over_sampling.tests.test_adasyn.Y": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "imblearn.over_sampling.tests.test_adasyn.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_adasyn.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_adasyn.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_adasyn.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_adasyn.test_ada_fit_resample": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "imblearn.over_sampling.ADASYN",
    "imblearn.over_sampling.tests.test_adasyn.RND_SEED",
    "imblearn.over_sampling.tests.test_adasyn.R_TOL",
    "imblearn.over_sampling.tests.test_adasyn.X",
    "imblearn.over_sampling.tests.test_adasyn.Y",
    "numpy.array",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_adasyn.test_ada_fit_resample_nn_obj": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "imblearn.over_sampling.ADASYN",
    "imblearn.over_sampling.tests.test_adasyn.RND_SEED",
    "imblearn.over_sampling.tests.test_adasyn.R_TOL",
    "imblearn.over_sampling.tests.test_adasyn.X",
    "imblearn.over_sampling.tests.test_adasyn.Y",
    "numpy.array",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_adasyn.test_ada_init": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "imblearn.over_sampling.ADASYN",
    "imblearn.over_sampling.tests.test_adasyn.RND_SEED"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_adasyn.test_adasyn_error": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.over_sampling.ADASYN",
    "imblearn.over_sampling.tests.test_adasyn.X",
    "imblearn.over_sampling.tests.test_adasyn.Y",
    "imblearn.over_sampling.tests.test_adasyn.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_borderline_smote": {
  "data": {},
  "type": "module"
 },
 "imblearn.over_sampling.tests.test_borderline_smote.BorderlineSMOTE": {
  "data": {
   "shadows": "imblearn.over_sampling.BorderlineSMOTE"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_borderline_smote.NearestNeighbors": {
  "data": {
   "shadows": "sklearn.neighbors.NearestNeighbors"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_borderline_smote.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_borderline_smote.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_borderline_smote.data": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "imblearn.over_sampling.tests.test_borderline_smote.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_borderline_smote.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_borderline_smote.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_borderline_smote.test_borderline_smote": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "imblearn.over_sampling.BorderlineSMOTE",
    "imblearn.over_sampling.tests.test_borderline_smote.data",
    "imblearn.over_sampling.tests.test_borderline_smote.pytest",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_borderline_smote.test_borderline_smote_wrong_kind": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.over_sampling.BorderlineSMOTE",
    "imblearn.over_sampling.tests.test_borderline_smote.data",
    "imblearn.over_sampling.tests.test_borderline_smote.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_random_over_sampler": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "imblearn.over_sampling.tests.test_random_over_sampler.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_random_over_sampler.RND_SEED": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "imblearn.over_sampling.tests.test_random_over_sampler.RandomOverSampler": {
  "data": {
   "shadows": "imblearn.over_sampling.RandomOverSampler"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_random_over_sampler.X": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "imblearn.over_sampling.tests.test_random_over_sampler.Y": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "imblearn.over_sampling.tests.test_random_over_sampler.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_random_over_sampler.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_random_over_sampler.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_random_over_sampler.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_random_over_sampler.test_multiclass_fit_resample": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "collections.Counter",
    "imblearn.over_sampling.RandomOverSampler",
    "imblearn.over_sampling.tests.test_random_over_sampler.RND_SEED",
    "imblearn.over_sampling.tests.test_random_over_sampler.X",
    "imblearn.over_sampling.tests.test_random_over_sampler.Y"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_random_over_sampler.test_random_over_sampling_heterogeneous_data": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "imblearn.over_sampling.RandomOverSampler",
    "imblearn.over_sampling.tests.test_random_over_sampler.RND_SEED",
    "numpy.array",
    "numpy.object",
    "object"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_random_over_sampler.test_random_over_sampling_return_indices": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "imblearn.over_sampling.RandomOverSampler",
    "imblearn.over_sampling.tests.test_random_over_sampler.RND_SEED",
    "imblearn.over_sampling.tests.test_random_over_sampler.X",
    "imblearn.over_sampling.tests.test_random_over_sampler.Y",
    "imblearn.over_sampling.tests.test_random_over_sampler.pytest",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.sort",
    "numpy.unique",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_random_over_sampler.test_ros_fit_resample": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "imblearn.over_sampling.RandomOverSampler",
    "imblearn.over_sampling.tests.test_random_over_sampler.RND_SEED",
    "imblearn.over_sampling.tests.test_random_over_sampler.X",
    "imblearn.over_sampling.tests.test_random_over_sampler.Y",
    "numpy.array",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_random_over_sampler.test_ros_fit_resample_half": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "imblearn.over_sampling.RandomOverSampler",
    "imblearn.over_sampling.tests.test_random_over_sampler.RND_SEED",
    "imblearn.over_sampling.tests.test_random_over_sampler.X",
    "imblearn.over_sampling.tests.test_random_over_sampler.Y",
    "numpy.array",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_random_over_sampler.test_ros_init": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "imblearn.over_sampling.RandomOverSampler",
    "imblearn.over_sampling.tests.test_random_over_sampler.RND_SEED"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_smote": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "imblearn.over_sampling.tests.test_smote.NearestNeighbors": {
  "data": {
   "shadows": "sklearn.neighbors.NearestNeighbors"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_smote.RND_SEED": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "imblearn.over_sampling.tests.test_smote.R_TOL": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "imblearn.over_sampling.tests.test_smote.SMOTE": {
  "data": {
   "shadows": "imblearn.over_sampling.SMOTE"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_smote.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_smote.X": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "imblearn.over_sampling.tests.test_smote.Y": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "imblearn.over_sampling.tests.test_smote.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_smote.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_smote.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_smote.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_smote.test_fit_resample_nn_obj": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "imblearn.over_sampling.SMOTE",
    "imblearn.over_sampling.tests.test_smote.RND_SEED",
    "imblearn.over_sampling.tests.test_smote.R_TOL",
    "imblearn.over_sampling.tests.test_smote.X",
    "imblearn.over_sampling.tests.test_smote.Y",
    "imblearn.over_sampling.tests.test_smote.pytest",
    "numpy.array",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_smote.test_sample_borderline1": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "imblearn.over_sampling.SMOTE",
    "imblearn.over_sampling.tests.test_smote.RND_SEED",
    "imblearn.over_sampling.tests.test_smote.R_TOL",
    "imblearn.over_sampling.tests.test_smote.X",
    "imblearn.over_sampling.tests.test_smote.Y",
    "imblearn.over_sampling.tests.test_smote.pytest",
    "numpy.array",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_smote.test_sample_borderline2": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "imblearn.over_sampling.SMOTE",
    "imblearn.over_sampling.tests.test_smote.RND_SEED",
    "imblearn.over_sampling.tests.test_smote.R_TOL",
    "imblearn.over_sampling.tests.test_smote.X",
    "imblearn.over_sampling.tests.test_smote.Y",
    "imblearn.over_sampling.tests.test_smote.pytest",
    "numpy.array",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_smote.test_sample_regular": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "imblearn.over_sampling.SMOTE",
    "imblearn.over_sampling.tests.test_smote.RND_SEED",
    "imblearn.over_sampling.tests.test_smote.R_TOL",
    "imblearn.over_sampling.tests.test_smote.X",
    "imblearn.over_sampling.tests.test_smote.Y",
    "numpy.array",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_smote.test_sample_regular_half": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "imblearn.over_sampling.SMOTE",
    "imblearn.over_sampling.tests.test_smote.RND_SEED",
    "imblearn.over_sampling.tests.test_smote.R_TOL",
    "imblearn.over_sampling.tests.test_smote.X",
    "imblearn.over_sampling.tests.test_smote.Y",
    "numpy.array",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_smote.test_sample_regular_with_nn": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "imblearn.over_sampling.SMOTE",
    "imblearn.over_sampling.tests.test_smote.RND_SEED",
    "imblearn.over_sampling.tests.test_smote.R_TOL",
    "imblearn.over_sampling.tests.test_smote.X",
    "imblearn.over_sampling.tests.test_smote.Y",
    "numpy.array",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_smote.test_sample_svm": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "imblearn.over_sampling.SMOTE",
    "imblearn.over_sampling.tests.test_smote.RND_SEED",
    "imblearn.over_sampling.tests.test_smote.R_TOL",
    "imblearn.over_sampling.tests.test_smote.X",
    "imblearn.over_sampling.tests.test_smote.Y",
    "imblearn.over_sampling.tests.test_smote.pytest",
    "numpy.array",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_smote.test_sample_with_nn_svm": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "imblearn.over_sampling.SMOTE",
    "imblearn.over_sampling.tests.test_smote.RND_SEED",
    "imblearn.over_sampling.tests.test_smote.R_TOL",
    "imblearn.over_sampling.tests.test_smote.X",
    "imblearn.over_sampling.tests.test_smote.Y",
    "imblearn.over_sampling.tests.test_smote.pytest",
    "numpy.array",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_smote.test_smote_error_passing_estimator": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.over_sampling.SMOTE",
    "imblearn.over_sampling.tests.test_smote.X",
    "imblearn.over_sampling.tests.test_smote.Y",
    "imblearn.over_sampling.tests.test_smote.pytest",
    "sklearn.neighbors.NearestNeighbors"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_smote_nc": {
  "data": {},
  "type": "module"
 },
 "imblearn.over_sampling.tests.test_smote_nc.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_smote_nc.SMOTENC": {
  "data": {
   "shadows": "imblearn.over_sampling.SMOTENC"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_smote_nc.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_smote_nc.data_heterogneous_masked": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty",
    "numpy.random.RandomState",
    "object"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_smote_nc.data_heterogneous_ordered": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty",
    "numpy.random.RandomState",
    "object"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_smote_nc.data_heterogneous_unordered": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty",
    "numpy.random.RandomState",
    "object"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_smote_nc.data_heterogneous_unordered_multiclass": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty",
    "numpy.random.RandomState",
    "object"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_smote_nc.data_sparse": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "format",
    "numpy.array",
    "numpy.empty",
    "numpy.float64",
    "numpy.random.RandomState",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_smote_nc.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_smote_nc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_smote_nc.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_smote_nc.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_smote_nc.test_smotenc": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "bool",
    "imblearn.over_sampling.SMOTENC",
    "imblearn.over_sampling.tests.test_smote_nc.data_heterogneous_masked",
    "imblearn.over_sampling.tests.test_smote_nc.data_heterogneous_ordered",
    "imblearn.over_sampling.tests.test_smote_nc.data_heterogneous_unordered",
    "imblearn.over_sampling.tests.test_smote_nc.data_sparse",
    "imblearn.over_sampling.tests.test_smote_nc.pytest",
    "numpy.array",
    "numpy.flatnonzero",
    "scipy.sparse.issparse",
    "set"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_smote_nc.test_smotenc_check_target_type": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "UserWarning",
    "imblearn.over_sampling.SMOTENC",
    "imblearn.over_sampling.tests.test_smote_nc.data_heterogneous_unordered",
    "imblearn.over_sampling.tests.test_smote_nc.pytest",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_smote_nc.test_smotenc_error": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.over_sampling.SMOTENC",
    "imblearn.over_sampling.tests.test_smote_nc.data_heterogneous_unordered",
    "imblearn.over_sampling.tests.test_smote_nc.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_smote_nc.test_smotenc_fit": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "hasattr",
    "imblearn.over_sampling.SMOTENC",
    "imblearn.over_sampling.tests.test_smote_nc.data_heterogneous_unordered"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_smote_nc.test_smotenc_fit_resample": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "all",
    "collections.Counter",
    "imblearn.over_sampling.SMOTENC",
    "imblearn.over_sampling.tests.test_smote_nc.data_heterogneous_unordered",
    "max"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_smote_nc.test_smotenc_fit_resample_sampling_strategy": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "collections.Counter",
    "imblearn.over_sampling.SMOTENC",
    "imblearn.over_sampling.tests.test_smote_nc.data_heterogneous_unordered_multiclass"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_smote_nc.test_smotenc_pandas": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "imblearn.over_sampling.SMOTENC",
    "imblearn.over_sampling.tests.test_smote_nc.data_heterogneous_unordered_multiclass",
    "imblearn.over_sampling.tests.test_smote_nc.pytest",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_smote_nc.test_smotenc_preserve_dtype": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "imblearn.over_sampling.SMOTENC",
    "numpy.float32",
    "numpy.int32",
    "sklearn.datasets.make_classification"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_smote_nc.test_smotenc_samplers_one_label": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.over_sampling.SMOTENC",
    "imblearn.over_sampling.tests.test_smote_nc.data_heterogneous_unordered",
    "imblearn.over_sampling.tests.test_smote_nc.pytest",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_svm_smote": {
  "data": {},
  "type": "module"
 },
 "imblearn.over_sampling.tests.test_svm_smote.NearestNeighbors": {
  "data": {
   "shadows": "sklearn.neighbors.NearestNeighbors"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_svm_smote.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_svm_smote.SVMSMOTE": {
  "data": {
   "shadows": "imblearn.over_sampling.SVMSMOTE"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_svm_smote.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_svm_smote.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_svm_smote.data": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "imblearn.over_sampling.tests.test_svm_smote.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "imblearn.over_sampling.tests.test_svm_smote.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_svm_smote.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.over_sampling.tests.test_svm_smote.test_svm_smote": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "imblearn.over_sampling.SVMSMOTE",
    "imblearn.over_sampling.tests.test_svm_smote.data",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.tensorflow": {
  "data": {},
  "type": "module"
 },
 "imblearn.tensorflow.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "imblearn.tensorflow._generator": {
  "data": {},
  "type": "module"
 },
 "imblearn.tensorflow._generator.DONT_HAVE_RANDOM_STATE": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "imblearn.tensorflow._generator.balanced_batch_generator": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "RandomUnderSampler",
    "Substitution",
    "ValueError",
    "generator",
    "hasattr",
    "imblearn.tensorflow._generator.DONT_HAVE_RANDOM_STATE",
    "int",
    "sklearn.base.clone",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.set_random_state"
   ]
  },
  "type": "function"
 },
 "imblearn.tensorflow._generator.balanced_batch_generator.generator": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "len",
    "range",
    "scipy.sparse.issparse",
    "sklearn.utils.safe_indexing"
   ]
  },
  "type": "function"
 },
 "imblearn.tensorflow._generator.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "imblearn.tensorflow._generator.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "imblearn.tensorflow._generator.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "imblearn.tensorflow._generator.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "imblearn.tensorflow._generator.safe_indexing": {
  "data": {
   "shadows": "sklearn.utils.safe_indexing"
  },
  "type": "import"
 },
 "imblearn.tensorflow._generator.set_random_state": {
  "data": {
   "shadows": "sklearn.utils.testing.set_random_state"
  },
  "type": "import"
 },
 "imblearn.tests": {
  "data": {},
  "type": "module"
 },
 "imblearn.tests.test_base": {
  "data": {
   "symbols_in_volume": [
    "imblearn.datasets.make_imbalance",
    "imblearn.tests.test_base.iris",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "module"
 },
 "imblearn.tests.test_base.FunctionSampler": {
  "data": {
   "shadows": "imblearn.FunctionSampler"
  },
  "type": "import"
 },
 "imblearn.tests.test_base.RandomUnderSampler": {
  "data": {
   "shadows": "imblearn.under_sampling.RandomUnderSampler"
  },
  "type": "import"
 },
 "imblearn.tests.test_base.assert_allclose_dense_sparse": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose_dense_sparse"
  },
  "type": "import"
 },
 "imblearn.tests.test_base.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "imblearn.tests.test_base.iris": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "imblearn.tests.test_base.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "imblearn.tests.test_base.make_imbalance": {
  "data": {
   "shadows": "imblearn.datasets.make_imbalance"
  },
  "type": "import"
 },
 "imblearn.tests.test_base.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.tests.test_base.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "imblearn.tests.test_base.test_function_sampler_func": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "imblearn.FunctionSampler",
    "imblearn.tests.test_base.pytest",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.testing.assert_allclose_dense_sparse",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_base.test_function_sampler_func.func": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "imblearn.tests.test_base.test_function_sampler_func_kwargs": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "imblearn.FunctionSampler",
    "imblearn.tests.test_base.pytest",
    "imblearn.under_sampling.RandomUnderSampler",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.testing.assert_allclose_dense_sparse",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_base.test_function_sampler_func_kwargs.func": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "imblearn.under_sampling.RandomUnderSampler"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_base.test_function_sampler_identity": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "imblearn.FunctionSampler",
    "imblearn.tests.test_base.pytest",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.testing.assert_allclose_dense_sparse",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_base.test_function_sampler_reject_sparse": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "TypeError",
    "imblearn.FunctionSampler",
    "imblearn.tests.test_base.pytest",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_common": {
  "data": {},
  "type": "module"
 },
 "imblearn.tests.test_common._generate_checks_per_estimator": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "Estimator",
    "check_generator"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_common._tested_non_meta_estimators": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "imblearn.utils.testing.all_estimators"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_common._yield_all_checks": {
  "data": {
   "shadows": "imblearn.utils.estimator_checks._yield_all_checks"
  },
  "type": "import"
 },
 "imblearn.tests.test_common.all_estimators": {
  "data": {
   "shadows": "imblearn.utils.testing.all_estimators"
  },
  "type": "import"
 },
 "imblearn.tests.test_common.check_estimator": {
  "data": {
   "shadows": "imblearn.utils.estimator_checks.check_estimator"
  },
  "type": "import"
 },
 "imblearn.tests.test_common.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.tests.test_common.test_all_estimator_no_base_class": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "imblearn.tests.test_common.pytest",
    "imblearn.utils.testing.all_estimators"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_common.test_all_estimators": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "imblearn.tests.test_common.pytest",
    "imblearn.utils.estimator_checks.check_estimator",
    "imblearn.utils.testing.all_estimators"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_common.test_samplers": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "Estimator",
    "check",
    "imblearn.tests.test_common._generate_checks_per_estimator",
    "imblearn.tests.test_common._tested_non_meta_estimators",
    "imblearn.tests.test_common.pytest",
    "imblearn.utils.estimator_checks._yield_all_checks"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_exceptions": {
  "data": {},
  "type": "module"
 },
 "imblearn.tests.test_exceptions.raise_isinstance_error": {
  "data": {
   "shadows": "imblearn.exceptions.raise_isinstance_error"
  },
  "type": "import"
 },
 "imblearn.tests.test_exceptions.raises": {
  "data": {
   "shadows": "pytest.raises"
  },
  "type": "import"
 },
 "imblearn.tests.test_exceptions.test_raise_isinstance_error": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.exceptions.raise_isinstance_error",
    "int",
    "pytest.raises"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline": {
  "data": {},
  "type": "module"
 },
 "imblearn.tests.test_pipeline.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "imblearn.tests.test_pipeline.DummyEstimatorParams": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "imblearn.tests.test_pipeline.DummyEstimatorParams.fit": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.DummyEstimatorParams.predict": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.DummySampler": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "imblearn.tests.test_pipeline.NoTrans"
   ]
  },
  "type": "class"
 },
 "imblearn.tests.test_pipeline.DummySampler.fit_resample": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "imblearn.tests.test_pipeline.time",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.DummyTransf": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "imblearn.tests.test_pipeline.Transf"
   ]
  },
  "type": "class"
 },
 "imblearn.tests.test_pipeline.DummyTransf.fit": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "imblearn.tests.test_pipeline.time",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.ENN": {
  "data": {
   "shadows": "imblearn.under_sampling.EditedNearestNeighbours"
  },
  "type": "import"
 },
 "imblearn.tests.test_pipeline.FitParamT": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "imblearn.tests.test_pipeline.FitParamT.__init__": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.FitParamT.fit": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.FitParamT.fit_predict": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.FitParamT.predict": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.FitParamT.score": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.FitTransformSample": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "imblearn.tests.test_pipeline.NoTrans"
   ]
  },
  "type": "class"
 },
 "imblearn.tests.test_pipeline.FitTransformSample.fit": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.FitTransformSample.fit_resample": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.FitTransformSample.fit_transform": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.FitTransformSample.transform": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.JUNK_FOOD_DOCS": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "imblearn.tests.test_pipeline.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "imblearn.tests.test_pipeline.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "imblearn.tests.test_pipeline.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "imblearn.tests.test_pipeline.Memory": {
  "data": {
   "shadows": "sklearn.externals.joblib.Memory"
  },
  "type": "import"
 },
 "imblearn.tests.test_pipeline.Mult": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "imblearn.tests.test_pipeline.Mult.__init__": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.Mult.fit": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.Mult.inverse_transform": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.Mult.predict": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.Mult.score": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.Mult.transform": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.NoFit": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "imblearn.tests.test_pipeline.NoFit.__init__": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.NoInvTransf": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "imblearn.tests.test_pipeline.NoTrans"
   ]
  },
  "type": "class"
 },
 "imblearn.tests.test_pipeline.NoInvTransf.transform": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.NoTrans": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "imblearn.tests.test_pipeline.NoFit"
   ]
  },
  "type": "class"
 },
 "imblearn.tests.test_pipeline.NoTrans.fit": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.NoTrans.get_params": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.NoTrans.set_params": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "imblearn.tests.test_pipeline.Pipeline": {
  "data": {
   "shadows": "imblearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "imblearn.tests.test_pipeline.R_TOL": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "imblearn.tests.test_pipeline.RandomUnderSampler": {
  "data": {
   "shadows": "imblearn.under_sampling.RandomUnderSampler"
  },
  "type": "import"
 },
 "imblearn.tests.test_pipeline.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "imblearn.tests.test_pipeline.SelectKBest": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectKBest"
  },
  "type": "import"
 },
 "imblearn.tests.test_pipeline.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "imblearn.tests.test_pipeline.Transf": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "imblearn.tests.test_pipeline.NoInvTransf"
   ]
  },
  "type": "class"
 },
 "imblearn.tests.test_pipeline.Transf.inverse_transform": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.Transf.transform": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.TransfFitParams": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "imblearn.tests.test_pipeline.Transf"
   ]
  },
  "type": "class"
 },
 "imblearn.tests.test_pipeline.TransfFitParams.fit": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "imblearn.tests.test_pipeline.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "imblearn.tests.test_pipeline.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "imblearn.tests.test_pipeline.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "imblearn.tests.test_pipeline.f_classif": {
  "data": {
   "shadows": "sklearn.feature_selection.f_classif"
  },
  "type": "import"
 },
 "imblearn.tests.test_pipeline.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "imblearn.tests.test_pipeline.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "imblearn.tests.test_pipeline.make_pipeline": {
  "data": {
   "shadows": "imblearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "imblearn.tests.test_pipeline.mkdtemp": {
  "data": {
   "shadows": "tempfile.mkdtemp"
  },
  "type": "import"
 },
 "imblearn.tests.test_pipeline.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.tests.test_pipeline.raises": {
  "data": {
   "shadows": "pytest.raises"
  },
  "type": "import"
 },
 "imblearn.tests.test_pipeline.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "imblearn.tests.test_pipeline.test_classes_property": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "imblearn.pipeline.make_pipeline",
    "numpy.unique",
    "pytest.raises",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_fit_predict_on_pipeline": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "imblearn.pipeline.Pipeline",
    "sklearn.cluster.KMeans",
    "sklearn.datasets.load_iris",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_fit_predict_on_pipeline_without_fit_predict": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "imblearn.pipeline.Pipeline",
    "pytest.raises",
    "sklearn.decomposition.PCA",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_fit_predict_with_intermediate_fit_params": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "imblearn.pipeline.Pipeline",
    "imblearn.tests.test_pipeline.FitParamT",
    "imblearn.tests.test_pipeline.TransfFitParams"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_make_pipeline": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "imblearn.pipeline.Pipeline",
    "imblearn.pipeline.make_pipeline",
    "imblearn.tests.test_pipeline.FitParamT",
    "imblearn.tests.test_pipeline.Transf",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_make_pipeline_memory": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": [
    "imblearn.pipeline.make_pipeline",
    "imblearn.tests.test_pipeline.DummyTransf",
    "imblearn.tests.test_pipeline.shutil",
    "sklearn.externals.joblib.Memory",
    "sklearn.svm.SVC",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_pipeline_ducktyping": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "hasattr",
    "imblearn.pipeline.make_pipeline",
    "imblearn.tests.test_pipeline.Mult",
    "imblearn.tests.test_pipeline.NoInvTransf",
    "imblearn.tests.test_pipeline.Transf"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_pipeline_fit_params": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "TypeError",
    "imblearn.pipeline.Pipeline",
    "imblearn.tests.test_pipeline.FitParamT",
    "imblearn.tests.test_pipeline.Transf",
    "pytest.raises"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_pipeline_fit_then_sample_3_samplers_with_sampler_last_estimator": {
  "data": {
   "lineno": 1062,
   "symbols_in_volume": [
    "imblearn.pipeline.make_pipeline",
    "imblearn.under_sampling.EditedNearestNeighbours",
    "imblearn.under_sampling.RandomUnderSampler",
    "sklearn.datasets.make_classification",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_pipeline_fit_then_sample_with_sampler_last_estimator": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "imblearn.pipeline.make_pipeline",
    "imblearn.under_sampling.EditedNearestNeighbours",
    "imblearn.under_sampling.RandomUnderSampler",
    "sklearn.datasets.make_classification",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_pipeline_fit_transform": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "imblearn.pipeline.Pipeline",
    "imblearn.tests.test_pipeline.Transf",
    "sklearn.datasets.load_iris",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_pipeline_init": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "imblearn.pipeline.Pipeline",
    "imblearn.tests.test_pipeline.NoFit",
    "imblearn.tests.test_pipeline.NoTrans",
    "pytest.raises",
    "repr",
    "sklearn.base.clone",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.f_classif",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_pipeline_memory_sampler": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "hasattr",
    "imblearn.pipeline.Pipeline",
    "imblearn.tests.test_pipeline.DummySampler",
    "imblearn.tests.test_pipeline.shutil",
    "sklearn.base.clone",
    "sklearn.datasets.make_classification",
    "sklearn.externals.joblib.Memory",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_array_equal",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_pipeline_memory_transformer": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "hasattr",
    "imblearn.pipeline.Pipeline",
    "imblearn.tests.test_pipeline.DummyTransf",
    "imblearn.tests.test_pipeline.shutil",
    "sklearn.base.clone",
    "sklearn.datasets.load_iris",
    "sklearn.externals.joblib.Memory",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_array_equal",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_pipeline_methods_anova": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "imblearn.pipeline.Pipeline",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.f_classif",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_pipeline_methods_anova_rus": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "imblearn.pipeline.Pipeline",
    "imblearn.under_sampling.RandomUnderSampler",
    "sklearn.datasets.make_classification",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.f_classif",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_pipeline_methods_pca_rus_svm": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "imblearn.pipeline.Pipeline",
    "imblearn.under_sampling.RandomUnderSampler",
    "sklearn.datasets.make_classification",
    "sklearn.decomposition.PCA",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_pipeline_methods_pca_svm": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "imblearn.pipeline.Pipeline",
    "sklearn.datasets.load_iris",
    "sklearn.decomposition.PCA",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_pipeline_methods_preprocessing_svm": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "imblearn.pipeline.Pipeline",
    "len",
    "numpy.unique",
    "sklearn.datasets.load_iris",
    "sklearn.decomposition.PCA",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_pipeline_methods_rus_pca_svm": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "imblearn.pipeline.Pipeline",
    "imblearn.under_sampling.RandomUnderSampler",
    "sklearn.datasets.make_classification",
    "sklearn.decomposition.PCA",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_pipeline_none_classifier": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "imblearn.pipeline.make_pipeline",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_pipeline_none_sampler_classifier": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "imblearn.pipeline.make_pipeline",
    "imblearn.under_sampling.RandomUnderSampler",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_pipeline_none_sampler_sample": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "imblearn.pipeline.make_pipeline",
    "imblearn.under_sampling.RandomUnderSampler",
    "sklearn.datasets.make_classification"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_pipeline_none_transformer": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "imblearn.pipeline.make_pipeline",
    "sklearn.datasets.make_classification",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_pipeline_raise_set_params_error": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.pipeline.Pipeline",
    "pytest.raises",
    "sklearn.linear_model.LinearRegression"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_pipeline_sample": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "imblearn.pipeline.Pipeline",
    "imblearn.tests.test_pipeline.R_TOL",
    "imblearn.under_sampling.RandomUnderSampler",
    "numpy.bitwise_and",
    "sklearn.datasets.make_classification",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_pipeline_sample_transform": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "imblearn.pipeline.Pipeline",
    "imblearn.under_sampling.RandomUnderSampler",
    "sklearn.datasets.make_classification",
    "sklearn.decomposition.PCA"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_pipeline_sample_weight_supported": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "imblearn.pipeline.Pipeline",
    "imblearn.tests.test_pipeline.FitParamT",
    "imblearn.tests.test_pipeline.Transf",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_pipeline_sample_weight_unsupported": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "TypeError",
    "imblearn.pipeline.Pipeline",
    "imblearn.tests.test_pipeline.Mult",
    "imblearn.tests.test_pipeline.Transf",
    "numpy.array",
    "pytest.raises"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_pipeline_sampler_none_classifier": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": [
    "imblearn.pipeline.make_pipeline",
    "imblearn.under_sampling.RandomUnderSampler",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_pipeline_transform": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "imblearn.pipeline.Pipeline",
    "sklearn.datasets.load_iris",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_pipeline_with_step_that_implements_both_sample_and_transform": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "TypeError",
    "imblearn.pipeline.Pipeline",
    "imblearn.tests.test_pipeline.FitTransformSample",
    "pytest.raises",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_pipeline_with_step_that_it_is_pipeline": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "TypeError",
    "imblearn.pipeline.Pipeline",
    "imblearn.under_sampling.RandomUnderSampler",
    "pytest.raises",
    "sklearn.datasets.make_classification",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.f_classif",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_pipeline_wrong_memory": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.pipeline.Pipeline",
    "imblearn.tests.test_pipeline.DummyTransf",
    "pytest.raises",
    "sklearn.datasets.load_iris",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_predict_with_predict_params": {
  "data": {
   "lineno": 1100,
   "symbols_in_volume": [
    "imblearn.pipeline.Pipeline",
    "imblearn.tests.test_pipeline.DummyEstimatorParams",
    "imblearn.tests.test_pipeline.Transf"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_set_pipeline_step_none": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "imblearn.pipeline.Pipeline",
    "imblearn.tests.test_pipeline.Mult",
    "make",
    "numpy.array",
    "pytest.raises",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_set_pipeline_step_none.make": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "imblearn.pipeline.Pipeline"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.test_set_pipeline_steps": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "TypeError",
    "imblearn.pipeline.Pipeline",
    "imblearn.tests.test_pipeline.Transf",
    "pytest.raises"
   ]
  },
  "type": "function"
 },
 "imblearn.tests.test_pipeline.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "imblearn.under_sampling": {
  "data": {},
  "type": "module"
 },
 "imblearn.under_sampling.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_generation": {
  "data": {},
  "type": "module"
 },
 "imblearn.under_sampling._prototype_generation.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_generation._cluster_centroids": {
  "data": {},
  "type": "module"
 },
 "imblearn.under_sampling._prototype_generation._cluster_centroids.ClusterCentroids": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "Substitution"
   ]
  },
  "type": "class"
 },
 "imblearn.under_sampling._prototype_generation._cluster_centroids.ClusterCentroids.__init__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "imblearn.under_sampling._prototype_generation._cluster_centroids.ClusterCentroids",
    "super"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_generation._cluster_centroids.ClusterCentroids._fit_resample": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.under_sampling._prototype_generation._cluster_centroids.VOTING_KIND",
    "numpy.array",
    "numpy.flatnonzero",
    "numpy.hstack",
    "numpy.unique",
    "numpy.vstack",
    "scipy.sparse.issparse",
    "scipy.sparse.vstack",
    "sklearn.utils.safe_indexing"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_generation._cluster_centroids.ClusterCentroids._generate_sample": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.squeeze",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils.safe_indexing"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_generation._cluster_centroids.ClusterCentroids._validate_estimator": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "sklearn.base.clone",
    "sklearn.cluster.KMeans",
    "type"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_generation._cluster_centroids.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_generation._cluster_centroids.NearestNeighbors": {
  "data": {
   "shadows": "sklearn.neighbors.NearestNeighbors"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_generation._cluster_centroids.VOTING_KIND": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_generation._cluster_centroids.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_generation._cluster_centroids.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_generation._cluster_centroids.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_generation._cluster_centroids.safe_indexing": {
  "data": {
   "shadows": "sklearn.utils.safe_indexing"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_generation._cluster_centroids.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_generation.tests": {
  "data": {},
  "type": "module"
 },
 "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.ClusterCentroids": {
  "data": {
   "shadows": "imblearn.under_sampling.ClusterCentroids"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.RND_SEED": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.R_TOL": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.X": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.Y": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.test_fit_hard_voting": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "imblearn.under_sampling.ClusterCentroids",
    "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.RND_SEED",
    "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.R_TOL",
    "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.X",
    "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.Y",
    "numpy.all",
    "numpy.any",
    "numpy.array",
    "sklearn.cluster.KMeans",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.test_fit_resample_auto": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "imblearn.under_sampling.ClusterCentroids",
    "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.RND_SEED",
    "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.R_TOL",
    "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.X",
    "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.Y",
    "numpy.array",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.test_fit_resample_check_voting": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "imblearn.under_sampling.ClusterCentroids",
    "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.RND_SEED",
    "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.X",
    "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.Y",
    "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.pytest",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.test_fit_resample_error": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.under_sampling.ClusterCentroids",
    "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.X",
    "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.Y",
    "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.test_fit_resample_half": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "imblearn.under_sampling.ClusterCentroids",
    "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.RND_SEED",
    "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.R_TOL",
    "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.X",
    "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.Y",
    "numpy.array",
    "print",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.test_fit_resample_object": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "imblearn.under_sampling.ClusterCentroids",
    "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.RND_SEED",
    "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.R_TOL",
    "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.X",
    "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.Y",
    "numpy.array",
    "sklearn.cluster.KMeans",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.test_multiclass_fit_resample": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "collections.Counter",
    "imblearn.under_sampling.ClusterCentroids",
    "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.RND_SEED",
    "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.X",
    "imblearn.under_sampling._prototype_generation.tests.test_cluster_centroids.Y"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection": {
  "data": {},
  "type": "module"
 },
 "imblearn.under_sampling._prototype_selection.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection._condensed_nearest_neighbour": {
  "data": {},
  "type": "module"
 },
 "imblearn.under_sampling._prototype_selection._condensed_nearest_neighbour.CondensedNearestNeighbour": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "Substitution"
   ]
  },
  "type": "class"
 },
 "imblearn.under_sampling._prototype_selection._condensed_nearest_neighbour.CondensedNearestNeighbour.__init__": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "imblearn.under_sampling._prototype_selection._condensed_nearest_neighbour.CondensedNearestNeighbour",
    "super"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._condensed_nearest_neighbour.CondensedNearestNeighbour._fit_resample": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "collections.Counter",
    "deprecate_parameter",
    "enumerate",
    "int",
    "min",
    "numpy.append",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.flatnonzero",
    "numpy.unique",
    "scipy.sparse.issparse",
    "sklearn.utils.check_random_state",
    "sklearn.utils.safe_indexing",
    "zip"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._condensed_nearest_neighbour.CondensedNearestNeighbour._validate_estimator": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "sklearn.base.clone",
    "sklearn.neighbors.KNeighborsClassifier",
    "type"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._condensed_nearest_neighbour.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._condensed_nearest_neighbour.KNeighborsClassifier": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsClassifier"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._condensed_nearest_neighbour.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._condensed_nearest_neighbour.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._condensed_nearest_neighbour.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._condensed_nearest_neighbour.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._condensed_nearest_neighbour.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._condensed_nearest_neighbour.safe_indexing": {
  "data": {
   "shadows": "sklearn.utils.safe_indexing"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._edited_nearest_neighbours": {
  "data": {},
  "type": "module"
 },
 "imblearn.under_sampling._prototype_selection._edited_nearest_neighbours.AllKNN": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "Substitution"
   ]
  },
  "type": "class"
 },
 "imblearn.under_sampling._prototype_selection._edited_nearest_neighbours.AllKNN.__init__": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "imblearn.under_sampling._prototype_selection._edited_nearest_neighbours.AllKNN",
    "super"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._edited_nearest_neighbours.AllKNN._fit_resample": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "collections.Counter",
    "deprecate_parameter",
    "int",
    "len",
    "min",
    "numpy.any",
    "numpy.arange",
    "numpy.array",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._edited_nearest_neighbours.AllKNN._validate_estimator": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "NotImplementedError",
    "check_neighbors_object",
    "deprecate_parameter",
    "imblearn.under_sampling._prototype_selection._edited_nearest_neighbours.EditedNearestNeighbours",
    "imblearn.under_sampling._prototype_selection._edited_nearest_neighbours.SEL_KIND"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._edited_nearest_neighbours.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._edited_nearest_neighbours.EditedNearestNeighbours": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "Substitution"
   ]
  },
  "type": "class"
 },
 "imblearn.under_sampling._prototype_selection._edited_nearest_neighbours.EditedNearestNeighbours.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "imblearn.under_sampling._prototype_selection._edited_nearest_neighbours.EditedNearestNeighbours",
    "super"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._edited_nearest_neighbours.EditedNearestNeighbours._fit_resample": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "deprecate_parameter",
    "int",
    "numpy.all",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.flatnonzero",
    "numpy.ravel",
    "numpy.unique",
    "scipy.stats.mode",
    "sklearn.utils.safe_indexing",
    "slice"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._edited_nearest_neighbours.EditedNearestNeighbours._validate_estimator": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "NotImplementedError",
    "check_neighbors_object",
    "deprecate_parameter",
    "imblearn.under_sampling._prototype_selection._edited_nearest_neighbours.SEL_KIND"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._edited_nearest_neighbours.RepeatedEditedNearestNeighbours": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "Substitution"
   ]
  },
  "type": "class"
 },
 "imblearn.under_sampling._prototype_selection._edited_nearest_neighbours.RepeatedEditedNearestNeighbours.__init__": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "imblearn.under_sampling._prototype_selection._edited_nearest_neighbours.RepeatedEditedNearestNeighbours",
    "super"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._edited_nearest_neighbours.RepeatedEditedNearestNeighbours._fit_resample": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "collections.Counter",
    "deprecate_parameter",
    "int",
    "len",
    "min",
    "numpy.any",
    "numpy.arange",
    "numpy.array",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._edited_nearest_neighbours.RepeatedEditedNearestNeighbours._validate_estimator": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "ValueError",
    "check_neighbors_object",
    "deprecate_parameter",
    "imblearn.under_sampling._prototype_selection._edited_nearest_neighbours.EditedNearestNeighbours",
    "type"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._edited_nearest_neighbours.SEL_KIND": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection._edited_nearest_neighbours.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._edited_nearest_neighbours.mode": {
  "data": {
   "shadows": "scipy.stats.mode"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._edited_nearest_neighbours.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._edited_nearest_neighbours.safe_indexing": {
  "data": {
   "shadows": "sklearn.utils.safe_indexing"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._instance_hardness_threshold": {
  "data": {},
  "type": "module"
 },
 "imblearn.under_sampling._prototype_selection._instance_hardness_threshold.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._instance_hardness_threshold.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._instance_hardness_threshold.InstanceHardnessThreshold": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "Substitution"
   ]
  },
  "type": "class"
 },
 "imblearn.under_sampling._prototype_selection._instance_hardness_threshold.InstanceHardnessThreshold.__init__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "imblearn.under_sampling._prototype_selection._instance_hardness_threshold.InstanceHardnessThreshold",
    "super"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._instance_hardness_threshold.InstanceHardnessThreshold._fit_resample": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "collections.Counter",
    "deprecate_parameter",
    "enumerate",
    "float",
    "int",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.flatnonzero",
    "numpy.percentile",
    "numpy.unique",
    "numpy.where",
    "numpy.zeros",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.utils.safe_indexing",
    "slice"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._instance_hardness_threshold.InstanceHardnessThreshold._validate_estimator": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance",
    "sklearn.base.ClassifierMixin",
    "sklearn.base.clone",
    "sklearn.ensemble.RandomForestClassifier",
    "type"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._instance_hardness_threshold.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._instance_hardness_threshold.StratifiedKFold": {
  "data": {
   "shadows": "sklearn.model_selection.StratifiedKFold"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._instance_hardness_threshold.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._instance_hardness_threshold.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._instance_hardness_threshold.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._instance_hardness_threshold.safe_indexing": {
  "data": {
   "shadows": "sklearn.utils.safe_indexing"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._nearmiss": {
  "data": {},
  "type": "module"
 },
 "imblearn.under_sampling._prototype_selection._nearmiss.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._nearmiss.NearMiss": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Substitution"
   ]
  },
  "type": "class"
 },
 "imblearn.under_sampling._prototype_selection._nearmiss.NearMiss.__init__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "imblearn.under_sampling._prototype_selection._nearmiss.NearMiss",
    "super"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._nearmiss.NearMiss._fit_resample": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "collections.Counter",
    "deprecate_parameter",
    "int",
    "min",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.flatnonzero",
    "numpy.unique",
    "sklearn.utils.safe_indexing",
    "slice"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._nearmiss.NearMiss._selection_dist_based": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "imblearn.under_sampling._prototype_selection._nearmiss.warnings",
    "len",
    "numpy.flatnonzero",
    "numpy.sum",
    "range",
    "sklearn.utils.safe_indexing",
    "sorted"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._nearmiss.NearMiss._validate_estimator": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "ValueError",
    "check_neighbors_object",
    "deprecate_parameter"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._nearmiss.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._nearmiss.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._nearmiss.safe_indexing": {
  "data": {
   "shadows": "sklearn.utils.safe_indexing"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._nearmiss.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._neighbourhood_cleaning_rule": {
  "data": {},
  "type": "module"
 },
 "imblearn.under_sampling._prototype_selection._neighbourhood_cleaning_rule.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._neighbourhood_cleaning_rule.NeighbourhoodCleaningRule": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "Substitution"
   ]
  },
  "type": "class"
 },
 "imblearn.under_sampling._prototype_selection._neighbourhood_cleaning_rule.NeighbourhoodCleaningRule.__init__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "imblearn.under_sampling._prototype_selection._neighbourhood_cleaning_rule.NeighbourhoodCleaningRule",
    "super"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._neighbourhood_cleaning_rule.NeighbourhoodCleaningRule._fit_resample": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "EditedNearestNeighbours",
    "NotImplementedError",
    "bool",
    "collections.Counter",
    "deprecate_parameter",
    "int",
    "min",
    "numpy.all",
    "numpy.flatnonzero",
    "numpy.ones",
    "numpy.ravel",
    "numpy.union1d",
    "numpy.unique",
    "scipy.stats.mode",
    "sklearn.utils.safe_indexing"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._neighbourhood_cleaning_rule.NeighbourhoodCleaningRule._validate_estimator": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "check_neighbors_object",
    "deprecate_parameter",
    "imblearn.under_sampling._prototype_selection._neighbourhood_cleaning_rule.SEL_KIND"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._neighbourhood_cleaning_rule.SEL_KIND": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection._neighbourhood_cleaning_rule.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._neighbourhood_cleaning_rule.mode": {
  "data": {
   "shadows": "scipy.stats.mode"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._neighbourhood_cleaning_rule.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._neighbourhood_cleaning_rule.safe_indexing": {
  "data": {
   "shadows": "sklearn.utils.safe_indexing"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._one_sided_selection": {
  "data": {},
  "type": "module"
 },
 "imblearn.under_sampling._prototype_selection._one_sided_selection.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._one_sided_selection.KNeighborsClassifier": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsClassifier"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._one_sided_selection.OneSidedSelection": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "Substitution"
   ]
  },
  "type": "class"
 },
 "imblearn.under_sampling._prototype_selection._one_sided_selection.OneSidedSelection.__init__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "imblearn.under_sampling._prototype_selection._one_sided_selection.OneSidedSelection",
    "super"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._one_sided_selection.OneSidedSelection._fit_resample": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "TomekLinks",
    "collections.Counter",
    "deprecate_parameter",
    "int",
    "list",
    "min",
    "numpy.append",
    "numpy.concatenate",
    "numpy.delete",
    "numpy.empty",
    "numpy.flatnonzero",
    "numpy.unique",
    "sklearn.utils.check_random_state",
    "sklearn.utils.safe_indexing"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._one_sided_selection.OneSidedSelection._validate_estimator": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "sklearn.base.clone",
    "sklearn.neighbors.KNeighborsClassifier",
    "type"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._one_sided_selection.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._one_sided_selection.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._one_sided_selection.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._one_sided_selection.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._one_sided_selection.safe_indexing": {
  "data": {
   "shadows": "sklearn.utils.safe_indexing"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._random_under_sampler": {
  "data": {},
  "type": "module"
 },
 "imblearn.under_sampling._prototype_selection._random_under_sampler.RandomUnderSampler": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Substitution"
   ]
  },
  "type": "class"
 },
 "imblearn.under_sampling._prototype_selection._random_under_sampler.RandomUnderSampler.__init__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "imblearn.under_sampling._prototype_selection._random_under_sampler.RandomUnderSampler",
    "super"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._random_under_sampler.RandomUnderSampler._check_X_y": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "check_target_type",
    "sklearn.utils.check_array",
    "sklearn.utils.check_consistent_length",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._random_under_sampler.RandomUnderSampler._fit_resample": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "deprecate_parameter",
    "int",
    "numpy.concatenate",
    "numpy.count_nonzero",
    "numpy.empty",
    "numpy.flatnonzero",
    "numpy.unique",
    "range",
    "sklearn.utils.check_random_state",
    "sklearn.utils.safe_indexing",
    "slice"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._random_under_sampler.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._random_under_sampler.check_consistent_length": {
  "data": {
   "shadows": "sklearn.utils.check_consistent_length"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._random_under_sampler.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._random_under_sampler.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._random_under_sampler.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._random_under_sampler.safe_indexing": {
  "data": {
   "shadows": "sklearn.utils.safe_indexing"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._tomek_links": {
  "data": {},
  "type": "module"
 },
 "imblearn.under_sampling._prototype_selection._tomek_links.NearestNeighbors": {
  "data": {
   "shadows": "sklearn.neighbors.NearestNeighbors"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._tomek_links.TomekLinks": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "Substitution"
   ]
  },
  "type": "class"
 },
 "imblearn.under_sampling._prototype_selection._tomek_links.TomekLinks.__init__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "imblearn.under_sampling._prototype_selection._tomek_links.TomekLinks",
    "super"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._tomek_links.TomekLinks._fit_resample": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "deprecate_parameter",
    "numpy.flatnonzero",
    "numpy.logical_not",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils.safe_indexing"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._tomek_links.TomekLinks.is_tomek": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "bool",
    "enumerate",
    "len",
    "numpy.unique",
    "numpy.zeros",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection._tomek_links.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._tomek_links.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection._tomek_links.safe_indexing": {
  "data": {
   "shadows": "sklearn.utils.safe_indexing"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests": {
  "data": {},
  "type": "module"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_allknn": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_allknn.AllKNN": {
  "data": {
   "shadows": "imblearn.under_sampling.AllKNN"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_allknn.NearestNeighbors": {
  "data": {
   "shadows": "sklearn.neighbors.NearestNeighbors"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_allknn.R_TOL": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_allknn.X": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_allknn.Y": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_allknn.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_allknn.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_allknn.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_allknn.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_allknn.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_allknn.test_alknn_not_good_object": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.under_sampling.AllKNN",
    "imblearn.under_sampling._prototype_selection.tests.test_allknn.X",
    "imblearn.under_sampling._prototype_selection.tests.test_allknn.Y",
    "imblearn.under_sampling._prototype_selection.tests.test_allknn.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_allknn.test_all_knn_allow_minority": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "imblearn.under_sampling.AllKNN",
    "imblearn.under_sampling._prototype_selection.tests.test_allknn.X",
    "len",
    "sklearn.datasets.make_classification"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_allknn.test_allknn_fit_resample": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "imblearn.under_sampling.AllKNN",
    "imblearn.under_sampling._prototype_selection.tests.test_allknn.R_TOL",
    "imblearn.under_sampling._prototype_selection.tests.test_allknn.X",
    "imblearn.under_sampling._prototype_selection.tests.test_allknn.Y",
    "numpy.array",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_allknn.test_allknn_fit_resample_mode": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "imblearn.under_sampling.AllKNN",
    "imblearn.under_sampling._prototype_selection.tests.test_allknn.X",
    "imblearn.under_sampling._prototype_selection.tests.test_allknn.Y",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_allknn.test_allknn_fit_resample_with_indices": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "imblearn.under_sampling.AllKNN",
    "imblearn.under_sampling._prototype_selection.tests.test_allknn.R_TOL",
    "imblearn.under_sampling._prototype_selection.tests.test_allknn.X",
    "imblearn.under_sampling._prototype_selection.tests.test_allknn.Y",
    "imblearn.under_sampling._prototype_selection.tests.test_allknn.pytest",
    "numpy.array",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_allknn.test_allknn_fit_resample_with_nn_object": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "imblearn.under_sampling.AllKNN",
    "imblearn.under_sampling._prototype_selection.tests.test_allknn.X",
    "imblearn.under_sampling._prototype_selection.tests.test_allknn.Y",
    "numpy.array",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_allknn.test_deprecation_random_state": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "DeprecationWarning",
    "imblearn.under_sampling.AllKNN",
    "imblearn.under_sampling._prototype_selection.tests.test_allknn.X",
    "imblearn.under_sampling._prototype_selection.tests.test_allknn.Y",
    "imblearn.utils.testing.warns"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_allknn.warns": {
  "data": {
   "shadows": "imblearn.utils.testing.warns"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_condensed_nearest_neighbour": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_condensed_nearest_neighbour.CondensedNearestNeighbour": {
  "data": {
   "shadows": "imblearn.under_sampling.CondensedNearestNeighbour"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_condensed_nearest_neighbour.KNeighborsClassifier": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsClassifier"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_condensed_nearest_neighbour.RND_SEED": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_condensed_nearest_neighbour.X": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_condensed_nearest_neighbour.Y": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_condensed_nearest_neighbour.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_condensed_nearest_neighbour.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_condensed_nearest_neighbour.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_condensed_nearest_neighbour.test_cnn_fit_resample": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "imblearn.under_sampling.CondensedNearestNeighbour",
    "imblearn.under_sampling._prototype_selection.tests.test_condensed_nearest_neighbour.RND_SEED",
    "imblearn.under_sampling._prototype_selection.tests.test_condensed_nearest_neighbour.X",
    "imblearn.under_sampling._prototype_selection.tests.test_condensed_nearest_neighbour.Y",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_condensed_nearest_neighbour.test_cnn_fit_resample_with_indices": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "imblearn.under_sampling.CondensedNearestNeighbour",
    "imblearn.under_sampling._prototype_selection.tests.test_condensed_nearest_neighbour.RND_SEED",
    "imblearn.under_sampling._prototype_selection.tests.test_condensed_nearest_neighbour.X",
    "imblearn.under_sampling._prototype_selection.tests.test_condensed_nearest_neighbour.Y",
    "imblearn.under_sampling._prototype_selection.tests.test_condensed_nearest_neighbour.pytest",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_condensed_nearest_neighbour.test_cnn_fit_resample_with_object": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "imblearn.under_sampling.CondensedNearestNeighbour",
    "imblearn.under_sampling._prototype_selection.tests.test_condensed_nearest_neighbour.RND_SEED",
    "imblearn.under_sampling._prototype_selection.tests.test_condensed_nearest_neighbour.X",
    "imblearn.under_sampling._prototype_selection.tests.test_condensed_nearest_neighbour.Y",
    "numpy.array",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_condensed_nearest_neighbour.test_cnn_fit_resample_with_wrong_object": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.under_sampling.CondensedNearestNeighbour",
    "imblearn.under_sampling._prototype_selection.tests.test_condensed_nearest_neighbour.RND_SEED",
    "imblearn.under_sampling._prototype_selection.tests.test_condensed_nearest_neighbour.X",
    "imblearn.under_sampling._prototype_selection.tests.test_condensed_nearest_neighbour.Y",
    "imblearn.under_sampling._prototype_selection.tests.test_condensed_nearest_neighbour.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_condensed_nearest_neighbour.test_cnn_init": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "imblearn.under_sampling.CondensedNearestNeighbour",
    "imblearn.under_sampling._prototype_selection.tests.test_condensed_nearest_neighbour.RND_SEED"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours.EditedNearestNeighbours": {
  "data": {
   "shadows": "imblearn.under_sampling.EditedNearestNeighbours"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours.NearestNeighbors": {
  "data": {
   "shadows": "sklearn.neighbors.NearestNeighbors"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours.X": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours.Y": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours.test_deprecation_random_state": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "DeprecationWarning",
    "imblearn.under_sampling.EditedNearestNeighbours",
    "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours.X",
    "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours.Y",
    "imblearn.utils.testing.warns"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours.test_enn_fit_resample": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "imblearn.under_sampling.EditedNearestNeighbours",
    "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours.X",
    "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours.Y",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours.test_enn_fit_resample_mode": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "imblearn.under_sampling.EditedNearestNeighbours",
    "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours.X",
    "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours.Y",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours.test_enn_fit_resample_with_indices": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "imblearn.under_sampling.EditedNearestNeighbours",
    "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours.X",
    "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours.Y",
    "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours.pytest",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours.test_enn_fit_resample_with_nn_object": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "imblearn.under_sampling.EditedNearestNeighbours",
    "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours.X",
    "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours.Y",
    "numpy.array",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours.test_enn_init": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "imblearn.under_sampling.EditedNearestNeighbours"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours.test_enn_not_good_object": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.under_sampling.EditedNearestNeighbours",
    "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours.X",
    "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours.Y",
    "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_edited_nearest_neighbours.warns": {
  "data": {
   "shadows": "imblearn.utils.testing.warns"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold": {
  "data": {
   "symbols_in_volume": [
    "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.RND_SEED",
    "numpy.array",
    "sklearn.ensemble.GradientBoostingClassifier"
   ]
  },
  "type": "module"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.ESTIMATOR": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.GradientBoostingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.GradientBoostingClassifier"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.InstanceHardnessThreshold": {
  "data": {
   "shadows": "imblearn.under_sampling.InstanceHardnessThreshold"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.RND_SEED": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.X": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.Y": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.test_iht_fit_resample": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "imblearn.under_sampling.InstanceHardnessThreshold",
    "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.ESTIMATOR",
    "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.RND_SEED",
    "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.X",
    "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.Y",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.test_iht_fit_resample_class_obj": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "imblearn.under_sampling.InstanceHardnessThreshold",
    "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.RND_SEED",
    "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.X",
    "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.Y",
    "numpy.array",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.test_iht_fit_resample_half": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "imblearn.under_sampling.InstanceHardnessThreshold",
    "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.ESTIMATOR",
    "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.RND_SEED",
    "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.X",
    "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.Y",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.test_iht_fit_resample_with_indices": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "imblearn.under_sampling.InstanceHardnessThreshold",
    "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.ESTIMATOR",
    "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.RND_SEED",
    "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.X",
    "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.Y",
    "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.pytest",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.test_iht_fit_resample_wrong_class_obj": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.under_sampling.InstanceHardnessThreshold",
    "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.RND_SEED",
    "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.X",
    "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.Y",
    "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.pytest",
    "sklearn.cluster.KMeans"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.test_iht_init": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "imblearn.under_sampling.InstanceHardnessThreshold",
    "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.ESTIMATOR",
    "imblearn.under_sampling._prototype_selection.tests.test_instance_hardness_threshold.RND_SEED"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_nearmiss": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.NearMiss": {
  "data": {
   "shadows": "imblearn.under_sampling.NearMiss"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.NearestNeighbors": {
  "data": {
   "shadows": "sklearn.neighbors.NearestNeighbors"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.VERSION_NEARMISS": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.X": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.Y": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.test_deprecation_random_state": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "DeprecationWarning",
    "imblearn.under_sampling.NearMiss",
    "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.X",
    "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.Y",
    "imblearn.utils.testing.warns"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.test_nearmiss_error": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.under_sampling.NearMiss",
    "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.X",
    "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.Y",
    "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.pytest",
    "sklearn.neighbors.NearestNeighbors"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.test_nm_fit_resample_auto": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "enumerate",
    "imblearn.under_sampling.NearMiss",
    "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.VERSION_NEARMISS",
    "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.X",
    "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.Y",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.test_nm_fit_resample_auto_indices": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "enumerate",
    "imblearn.under_sampling.NearMiss",
    "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.VERSION_NEARMISS",
    "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.X",
    "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.Y",
    "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.pytest",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.test_nm_fit_resample_float_sampling_strategy": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "enumerate",
    "imblearn.under_sampling.NearMiss",
    "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.VERSION_NEARMISS",
    "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.X",
    "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.Y",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.test_nm_fit_resample_nn_obj": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "enumerate",
    "imblearn.under_sampling.NearMiss",
    "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.VERSION_NEARMISS",
    "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.X",
    "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.Y",
    "numpy.array",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_nearmiss.warns": {
  "data": {
   "shadows": "imblearn.utils.testing.warns"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule.NearestNeighbors": {
  "data": {
   "shadows": "sklearn.neighbors.NearestNeighbors"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule.NeighbourhoodCleaningRule": {
  "data": {
   "shadows": "imblearn.under_sampling.NeighbourhoodCleaningRule"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule.X": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule.Y": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule.test_deprecation_random_state": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "DeprecationWarning",
    "imblearn.under_sampling.NeighbourhoodCleaningRule",
    "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule.X",
    "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule.Y",
    "imblearn.utils.testing.warns"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule.test_ncr_error": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.under_sampling.NeighbourhoodCleaningRule",
    "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule.X",
    "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule.Y",
    "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule.test_ncr_fit_resample": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "imblearn.under_sampling.NeighbourhoodCleaningRule",
    "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule.X",
    "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule.Y",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule.test_ncr_fit_resample_mode": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "imblearn.under_sampling.NeighbourhoodCleaningRule",
    "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule.X",
    "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule.Y",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule.test_ncr_fit_resample_nn_obj": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "imblearn.under_sampling.NeighbourhoodCleaningRule",
    "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule.X",
    "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule.Y",
    "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule.pytest",
    "numpy.array",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule.test_ncr_fit_resample_with_indices": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "imblearn.under_sampling.NeighbourhoodCleaningRule",
    "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule.X",
    "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule.Y",
    "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule.pytest",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_neighbourhood_cleaning_rule.warns": {
  "data": {
   "shadows": "imblearn.utils.testing.warns"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_one_sided_selection": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_one_sided_selection.KNeighborsClassifier": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsClassifier"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_one_sided_selection.OneSidedSelection": {
  "data": {
   "shadows": "imblearn.under_sampling.OneSidedSelection"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_one_sided_selection.RND_SEED": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_one_sided_selection.X": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_one_sided_selection.Y": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_one_sided_selection.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_one_sided_selection.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_one_sided_selection.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_one_sided_selection.test_oss_fit_resample": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "imblearn.under_sampling.OneSidedSelection",
    "imblearn.under_sampling._prototype_selection.tests.test_one_sided_selection.RND_SEED",
    "imblearn.under_sampling._prototype_selection.tests.test_one_sided_selection.X",
    "imblearn.under_sampling._prototype_selection.tests.test_one_sided_selection.Y",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_one_sided_selection.test_oss_fit_resample_with_indices": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "imblearn.under_sampling.OneSidedSelection",
    "imblearn.under_sampling._prototype_selection.tests.test_one_sided_selection.RND_SEED",
    "imblearn.under_sampling._prototype_selection.tests.test_one_sided_selection.X",
    "imblearn.under_sampling._prototype_selection.tests.test_one_sided_selection.Y",
    "imblearn.under_sampling._prototype_selection.tests.test_one_sided_selection.pytest",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_one_sided_selection.test_oss_init": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "imblearn.under_sampling.OneSidedSelection",
    "imblearn.under_sampling._prototype_selection.tests.test_one_sided_selection.RND_SEED"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_one_sided_selection.test_oss_with_object": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "imblearn.under_sampling.OneSidedSelection",
    "imblearn.under_sampling._prototype_selection.tests.test_one_sided_selection.RND_SEED",
    "imblearn.under_sampling._prototype_selection.tests.test_one_sided_selection.X",
    "imblearn.under_sampling._prototype_selection.tests.test_one_sided_selection.Y",
    "numpy.array",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_one_sided_selection.test_oss_with_wrong_object": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.under_sampling.OneSidedSelection",
    "imblearn.under_sampling._prototype_selection.tests.test_one_sided_selection.RND_SEED",
    "imblearn.under_sampling._prototype_selection.tests.test_one_sided_selection.X",
    "imblearn.under_sampling._prototype_selection.tests.test_one_sided_selection.Y",
    "imblearn.under_sampling._prototype_selection.tests.test_one_sided_selection.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_random_under_sampler": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_random_under_sampler.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_random_under_sampler.RND_SEED": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_random_under_sampler.RandomUnderSampler": {
  "data": {
   "shadows": "imblearn.under_sampling.RandomUnderSampler"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_random_under_sampler.X": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_random_under_sampler.Y": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_random_under_sampler.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_random_under_sampler.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_random_under_sampler.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_random_under_sampler.test_multiclass_fit_resample": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "collections.Counter",
    "imblearn.under_sampling.RandomUnderSampler",
    "imblearn.under_sampling._prototype_selection.tests.test_random_under_sampler.RND_SEED",
    "imblearn.under_sampling._prototype_selection.tests.test_random_under_sampler.X",
    "imblearn.under_sampling._prototype_selection.tests.test_random_under_sampler.Y"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_random_under_sampler.test_random_under_sampling_heterogeneous_data": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "imblearn.under_sampling.RandomUnderSampler",
    "imblearn.under_sampling._prototype_selection.tests.test_random_under_sampler.RND_SEED",
    "numpy.array",
    "numpy.object",
    "object"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_random_under_sampler.test_rus_fit_resample": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "imblearn.under_sampling.RandomUnderSampler",
    "imblearn.under_sampling._prototype_selection.tests.test_random_under_sampler.RND_SEED",
    "imblearn.under_sampling._prototype_selection.tests.test_random_under_sampler.X",
    "imblearn.under_sampling._prototype_selection.tests.test_random_under_sampler.Y",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_random_under_sampler.test_rus_fit_resample_half": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "imblearn.under_sampling.RandomUnderSampler",
    "imblearn.under_sampling._prototype_selection.tests.test_random_under_sampler.RND_SEED",
    "imblearn.under_sampling._prototype_selection.tests.test_random_under_sampler.X",
    "imblearn.under_sampling._prototype_selection.tests.test_random_under_sampler.Y",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_random_under_sampler.test_rus_fit_resample_with_indices": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "imblearn.under_sampling.RandomUnderSampler",
    "imblearn.under_sampling._prototype_selection.tests.test_random_under_sampler.RND_SEED",
    "imblearn.under_sampling._prototype_selection.tests.test_random_under_sampler.X",
    "imblearn.under_sampling._prototype_selection.tests.test_random_under_sampler.Y",
    "imblearn.under_sampling._prototype_selection.tests.test_random_under_sampler.pytest",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.NearestNeighbors": {
  "data": {
   "shadows": "sklearn.neighbors.NearestNeighbors"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.RepeatedEditedNearestNeighbours": {
  "data": {
   "shadows": "imblearn.under_sampling.RepeatedEditedNearestNeighbours"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.X": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.Y": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.test_deprecation_random_state": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "DeprecationWarning",
    "imblearn.under_sampling.RepeatedEditedNearestNeighbours",
    "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.X",
    "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.Y",
    "imblearn.utils.testing.warns"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.test_renn_fit_resample": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "imblearn.under_sampling.RepeatedEditedNearestNeighbours",
    "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.X",
    "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.Y",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.test_renn_fit_resample_mode": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "imblearn.under_sampling.RepeatedEditedNearestNeighbours",
    "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.X",
    "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.Y",
    "numpy.array",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.test_renn_fit_resample_mode_object": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "imblearn.under_sampling.RepeatedEditedNearestNeighbours",
    "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.X",
    "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.Y",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.test_renn_fit_resample_with_indices": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "imblearn.under_sampling.RepeatedEditedNearestNeighbours",
    "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.X",
    "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.Y",
    "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.pytest",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.test_renn_init": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "imblearn.under_sampling.RepeatedEditedNearestNeighbours"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.test_renn_iter_wrong": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.under_sampling.RepeatedEditedNearestNeighbours",
    "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.X",
    "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.Y",
    "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.test_renn_not_good_object": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.under_sampling.RepeatedEditedNearestNeighbours",
    "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.X",
    "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.Y",
    "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_repeated_edited_nearest_neighbours.warns": {
  "data": {
   "shadows": "imblearn.utils.testing.warns"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_tomek_links": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_tomek_links.TomekLinks": {
  "data": {
   "shadows": "imblearn.under_sampling.TomekLinks"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_tomek_links.X": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_tomek_links.Y": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_tomek_links.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_tomek_links.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_tomek_links.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_tomek_links.test_deprecation_random_state": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "DeprecationWarning",
    "imblearn.under_sampling.TomekLinks",
    "imblearn.under_sampling._prototype_selection.tests.test_tomek_links.X",
    "imblearn.under_sampling._prototype_selection.tests.test_tomek_links.Y",
    "imblearn.utils.testing.warns"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_tomek_links.test_tl_fit_resample": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "imblearn.under_sampling.TomekLinks",
    "imblearn.under_sampling._prototype_selection.tests.test_tomek_links.X",
    "imblearn.under_sampling._prototype_selection.tests.test_tomek_links.Y",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_tomek_links.test_tl_fit_resample_with_indices": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "imblearn.under_sampling.TomekLinks",
    "imblearn.under_sampling._prototype_selection.tests.test_tomek_links.X",
    "imblearn.under_sampling._prototype_selection.tests.test_tomek_links.Y",
    "imblearn.under_sampling._prototype_selection.tests.test_tomek_links.pytest",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_tomek_links.test_tl_init": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "imblearn.under_sampling.TomekLinks"
   ]
  },
  "type": "function"
 },
 "imblearn.under_sampling._prototype_selection.tests.test_tomek_links.warns": {
  "data": {
   "shadows": "imblearn.utils.testing.warns"
  },
  "type": "import"
 },
 "imblearn.under_sampling.base": {
  "data": {},
  "type": "module"
 },
 "imblearn.under_sampling.base.BaseCleaningSampler": {
  "data": {
   "lineno": 58
  },
  "type": "class"
 },
 "imblearn.under_sampling.base.BaseUnderSampler": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "imblearn.utils": {
  "data": {},
  "type": "module"
 },
 "imblearn.utils.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "imblearn.utils._docstring": {
  "data": {},
  "type": "module"
 },
 "imblearn.utils._docstring.Substitution": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "imblearn.utils._docstring.Substitution.__call__": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "imblearn.utils._docstring.Substitution.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "imblearn.utils._docstring._random_state_docstring": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "imblearn.utils._validation": {
  "data": {
   "symbols_in_volume": [
    "imblearn.utils._validation._sampling_strategy_all",
    "imblearn.utils._validation._sampling_strategy_auto",
    "imblearn.utils._validation._sampling_strategy_majority",
    "imblearn.utils._validation._sampling_strategy_minority",
    "imblearn.utils._validation._sampling_strategy_not_majority",
    "imblearn.utils._validation._sampling_strategy_not_minority"
   ]
  },
  "type": "module"
 },
 "imblearn.utils._validation.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "imblearn.utils._validation.KNeighborsMixin": {
  "data": {
   "shadows": "sklearn.neighbors.base.KNeighborsMixin"
  },
  "type": "import"
 },
 "imblearn.utils._validation.NearestNeighbors": {
  "data": {
   "shadows": "sklearn.neighbors.NearestNeighbors"
  },
  "type": "import"
 },
 "imblearn.utils._validation.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "imblearn.utils._validation.Real": {
  "data": {
   "shadows": "numbers.Real"
  },
  "type": "import"
 },
 "imblearn.utils._validation.SAMPLING_KIND": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "imblearn.utils._validation.SAMPLING_TARGET_KIND": {
  "data": {
   "lineno": 467
  },
  "type": "constant"
 },
 "imblearn.utils._validation.TARGET_KIND": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "imblearn.utils._validation._count_class_sample": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "dict",
    "numpy.unique",
    "zip"
   ]
  },
  "type": "function"
 },
 "imblearn.utils._validation._sampling_strategy_all": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "NotImplementedError",
    "imblearn.utils._validation._count_class_sample",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "imblearn.utils._validation._sampling_strategy_auto": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "imblearn.utils._validation._sampling_strategy_not_majority",
    "imblearn.utils._validation._sampling_strategy_not_minority"
   ]
  },
  "type": "function"
 },
 "imblearn.utils._validation._sampling_strategy_dict": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "DeprecationWarning",
    "NotImplementedError",
    "ValueError",
    "any",
    "imblearn.utils._validation._count_class_sample",
    "imblearn.utils._validation.warnings",
    "len",
    "max",
    "set"
   ]
  },
  "type": "function"
 },
 "imblearn.utils._validation._sampling_strategy_float": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.utils._validation._count_class_sample",
    "int",
    "max",
    "min",
    "sklearn.utils.multiclass.type_of_target"
   ]
  },
  "type": "function"
 },
 "imblearn.utils._validation._sampling_strategy_list": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.utils._validation._count_class_sample",
    "len",
    "min",
    "set"
   ]
  },
  "type": "function"
 },
 "imblearn.utils._validation._sampling_strategy_majority": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "imblearn.utils._validation._count_class_sample",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "imblearn.utils._validation._sampling_strategy_minority": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "imblearn.utils._validation._count_class_sample",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "imblearn.utils._validation._sampling_strategy_not_majority": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "NotImplementedError",
    "imblearn.utils._validation._count_class_sample",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "imblearn.utils._validation._sampling_strategy_not_minority": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "NotImplementedError",
    "imblearn.utils._validation._count_class_sample",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "imblearn.utils._validation.check_neighbors_object": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "numbers.Integral",
    "raise_isinstance_error",
    "sklearn.base.clone",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.base.KNeighborsMixin"
   ]
  },
  "type": "function"
 },
 "imblearn.utils._validation.check_ratio": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "imblearn.utils._validation.check_sampling_strategy",
    "sklearn.utils.deprecation.deprecated"
   ]
  },
  "type": "function"
 },
 "imblearn.utils._validation.check_sampling_strategy": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "collections.OrderedDict",
    "dict",
    "imblearn.utils._validation.SAMPLING_KIND",
    "imblearn.utils._validation._sampling_strategy_dict",
    "imblearn.utils._validation._sampling_strategy_float",
    "imblearn.utils._validation._sampling_strategy_list",
    "isinstance",
    "list",
    "numbers.Real",
    "numpy.unique",
    "sampling_strategy",
    "sklearn.externals.six.string_types",
    "sorted"
   ]
  },
  "type": "function"
 },
 "imblearn.utils._validation.check_target_type": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "imblearn.utils._validation.TARGET_KIND",
    "imblearn.utils._validation.warnings",
    "sklearn.utils.multiclass.type_of_target"
   ]
  },
  "type": "function"
 },
 "imblearn.utils._validation.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "imblearn.utils._validation.deprecated": {
  "data": {
   "shadows": "sklearn.utils.deprecation.deprecated"
  },
  "type": "import"
 },
 "imblearn.utils._validation.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "imblearn.utils._validation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.utils._validation.six": {
  "data": {
   "shadows": "sklearn.externals.six"
  },
  "type": "import"
 },
 "imblearn.utils._validation.type_of_target": {
  "data": {
   "shadows": "sklearn.utils.multiclass.type_of_target"
  },
  "type": "import"
 },
 "imblearn.utils._validation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "imblearn.utils.deprecation": {
  "data": {},
  "type": "module"
 },
 "imblearn.utils.deprecation.deprecate_parameter": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "DeprecationWarning",
    "getattr",
    "imblearn.utils.deprecation.warnings",
    "int",
    "setattr",
    "str"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.deprecation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "imblearn.utils.estimator_checks": {
  "data": {},
  "type": "module"
 },
 "imblearn.utils.estimator_checks.BaseCleaningSampler": {
  "data": {
   "shadows": "imblearn.under_sampling.base.BaseCleaningSampler"
  },
  "type": "import"
 },
 "imblearn.utils.estimator_checks.BaseEnsembleSampler": {
  "data": {
   "shadows": "imblearn.ensemble.base.BaseEnsembleSampler"
  },
  "type": "import"
 },
 "imblearn.utils.estimator_checks.BaseOverSampler": {
  "data": {
   "shadows": "imblearn.over_sampling.base.BaseOverSampler"
  },
  "type": "import"
 },
 "imblearn.utils.estimator_checks.BaseUnderSampler": {
  "data": {
   "shadows": "imblearn.under_sampling.base.BaseUnderSampler"
  },
  "type": "import"
 },
 "imblearn.utils.estimator_checks.ClusterCentroids": {
  "data": {
   "shadows": "imblearn.under_sampling.ClusterCentroids"
  },
  "type": "import"
 },
 "imblearn.utils.estimator_checks.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "imblearn.utils.estimator_checks.DONT_HAVE_RANDOM_STATE": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "imblearn.utils.estimator_checks.DONT_SUPPORT_RATIO": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "imblearn.utils.estimator_checks.HAVE_SAMPLE_INDICES": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "imblearn.utils.estimator_checks.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "imblearn.utils.estimator_checks.NearMiss": {
  "data": {
   "shadows": "imblearn.under_sampling.NearMiss"
  },
  "type": "import"
 },
 "imblearn.utils.estimator_checks.SMOTE": {
  "data": {
   "shadows": "imblearn.over_sampling.SMOTE"
  },
  "type": "import"
 },
 "imblearn.utils.estimator_checks.SUPPORT_STRING": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "imblearn.utils.estimator_checks._yield_all_checks": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "hasattr",
    "imblearn.utils.estimator_checks._yield_sampler_checks"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.estimator_checks._yield_sampler_checks": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "imblearn.utils.estimator_checks.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "imblearn.utils.estimator_checks.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "imblearn.utils.estimator_checks.check_estimator": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "check",
    "imblearn.utils.estimator_checks._yield_all_checks",
    "imblearn.utils.estimator_checks.monkey_patch_check_dtype_object",
    "sklearn.utils.estimator_checks.check_estimator",
    "sklearn.utils.estimator_checks.check_parameters_default_constructible"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.estimator_checks.check_parameters_default_constructible": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_parameters_default_constructible"
  },
  "type": "import"
 },
 "imblearn.utils.estimator_checks.check_samplers_fit": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "Sampler",
    "hasattr",
    "numpy.array",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.estimator_checks.check_samplers_fit_resample": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "Sampler",
    "all",
    "collections.Counter",
    "imblearn.ensemble.base.BaseEnsembleSampler",
    "imblearn.over_sampling.base.BaseOverSampler",
    "imblearn.under_sampling.base.BaseCleaningSampler",
    "imblearn.under_sampling.base.BaseUnderSampler",
    "isinstance",
    "max",
    "min",
    "sklearn.datasets.make_classification"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.estimator_checks.check_samplers_multiclass_ova": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "Sampler",
    "imblearn.ensemble.base.BaseEnsembleSampler",
    "imblearn.utils.estimator_checks.DONT_HAVE_RANDOM_STATE",
    "issubclass",
    "numpy.unique",
    "sklearn.datasets.make_classification",
    "sklearn.preprocessing.label_binarize",
    "sklearn.utils.multiclass.type_of_target",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.set_random_state",
    "zip"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.estimator_checks.check_samplers_one_label": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "Exception",
    "Sampler",
    "ValueError",
    "imblearn.utils.estimator_checks.sys",
    "imblearn.utils.estimator_checks.traceback",
    "numpy.random.random",
    "numpy.zeros",
    "print",
    "repr"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.estimator_checks.check_samplers_pandas": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "Sampler",
    "imblearn.over_sampling.SMOTE",
    "imblearn.under_sampling.NearMiss",
    "imblearn.utils.estimator_checks.DONT_HAVE_RANDOM_STATE",
    "imblearn.utils.estimator_checks.pytest",
    "isinstance",
    "sklearn.datasets.make_classification",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.set_random_state"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.estimator_checks.check_samplers_preserve_dtype": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "Sampler",
    "imblearn.utils.estimator_checks.DONT_HAVE_RANDOM_STATE",
    "numpy.float32",
    "numpy.int32",
    "sklearn.datasets.make_classification",
    "sklearn.utils.testing.set_random_state"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.estimator_checks.check_samplers_ratio_fit_resample": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "Sampler",
    "collections.Counter",
    "imblearn.ensemble.base.BaseEnsembleSampler",
    "imblearn.over_sampling.base.BaseOverSampler",
    "imblearn.under_sampling.base.BaseCleaningSampler",
    "imblearn.under_sampling.base.BaseUnderSampler",
    "imblearn.utils.estimator_checks.DONT_SUPPORT_RATIO",
    "isinstance",
    "sklearn.datasets.make_classification"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.estimator_checks.check_samplers_sample_indices": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "Sampler",
    "hasattr",
    "imblearn.utils.estimator_checks.HAVE_SAMPLE_INDICES",
    "sklearn.datasets.make_classification"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.estimator_checks.check_samplers_sampling_strategy_fit_resample": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "Sampler",
    "collections.Counter",
    "imblearn.ensemble.base.BaseEnsembleSampler",
    "imblearn.over_sampling.base.BaseOverSampler",
    "imblearn.under_sampling.base.BaseCleaningSampler",
    "imblearn.under_sampling.base.BaseUnderSampler",
    "isinstance",
    "sklearn.datasets.make_classification"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.estimator_checks.check_samplers_sparse": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "Sampler",
    "imblearn.ensemble.base.BaseEnsembleSampler",
    "imblearn.over_sampling.SMOTE",
    "imblearn.under_sampling.ClusterCentroids",
    "imblearn.under_sampling.NearMiss",
    "imblearn.utils.estimator_checks.DONT_HAVE_RANDOM_STATE",
    "isinstance",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.cluster.KMeans",
    "sklearn.datasets.make_classification",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.set_random_state",
    "zip"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.estimator_checks.check_target_type": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "Estimator",
    "UserWarning",
    "imblearn.utils.estimator_checks.DONT_HAVE_RANDOM_STATE",
    "imblearn.utils.testing.warns",
    "numpy.linspace",
    "numpy.random.random",
    "sklearn.utils.testing.set_random_state"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.estimator_checks.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "imblearn.utils.estimator_checks.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "imblearn.utils.estimator_checks.label_binarize": {
  "data": {
   "shadows": "sklearn.preprocessing.label_binarize"
  },
  "type": "import"
 },
 "imblearn.utils.estimator_checks.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "imblearn.utils.estimator_checks.monkey_patch_check_dtype_object": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "imblearn.utils.estimator_checks.SUPPORT_STRING",
    "numpy.array",
    "numpy.int",
    "numpy.random.RandomState",
    "object",
    "sklearn.base.clone",
    "sklearn.utils.testing.assert_raises_regex",
    "str"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.estimator_checks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.utils.estimator_checks.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.utils.estimator_checks.set_random_state": {
  "data": {
   "shadows": "sklearn.utils.testing.set_random_state"
  },
  "type": "import"
 },
 "imblearn.utils.estimator_checks.sklearn.utils.estimator_checks": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks"
  },
  "type": "import"
 },
 "imblearn.utils.estimator_checks.sklearn_check_estimator": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_estimator"
  },
  "type": "import"
 },
 "imblearn.utils.estimator_checks.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "imblearn.utils.estimator_checks.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "imblearn.utils.estimator_checks.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "imblearn.utils.estimator_checks.type_of_target": {
  "data": {
   "shadows": "sklearn.utils.multiclass.type_of_target"
  },
  "type": "import"
 },
 "imblearn.utils.estimator_checks.warns": {
  "data": {
   "shadows": "imblearn.utils.testing.warns"
  },
  "type": "import"
 },
 "imblearn.utils.testing": {
  "data": {},
  "type": "module"
 },
 "imblearn.utils.testing.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "imblearn.utils.testing.DONT_TEST": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "imblearn.utils.testing.META_ESTIMATORS": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "imblearn.utils.testing.OTHER": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "imblearn.utils.testing.SamplerMixin": {
  "data": {
   "shadows": "imblearn.base.SamplerMixin"
  },
  "type": "import"
 },
 "imblearn.utils.testing._warns": {
  "data": {
   "shadows": "pytest.warns"
  },
  "type": "import"
 },
 "imblearn.utils.testing.all_estimators": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "__import__",
    "imblearn.base.SamplerMixin",
    "imblearn.utils.testing.DONT_TEST",
    "imblearn.utils.testing.META_ESTIMATORS",
    "imblearn.utils.testing.OTHER",
    "imblearn.utils.testing.imblearn",
    "imblearn.utils.testing.inspect",
    "imblearn.utils.testing.pkgutil",
    "is_abstract",
    "isinstance",
    "issubclass",
    "list",
    "operator.itemgetter",
    "repr",
    "set",
    "sklearn.base.BaseEstimator",
    "sorted"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.testing.all_estimators.is_abstract": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.testing.compile": {
  "data": {
   "shadows": "re.compile"
  },
  "type": "import"
 },
 "imblearn.utils.testing.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "imblearn.utils.testing.imblearn": {
  "data": {
   "shadows": "imblearn"
  },
  "type": "import"
 },
 "imblearn.utils.testing.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "imblearn.utils.testing.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "imblearn.utils.testing.pkgutil": {
  "data": {
   "shadows": "pkgutil"
  },
  "type": "import"
 },
 "imblearn.utils.testing.warns": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "pytest.warns",
    "re.compile",
    "str"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.tests": {
  "data": {},
  "type": "module"
 },
 "imblearn.utils.tests.test_deprecation": {
  "data": {},
  "type": "module"
 },
 "imblearn.utils.tests.test_deprecation.Sampler": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "imblearn.utils.tests.test_deprecation.Sampler.__init__": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_deprecation.deprecate_parameter": {
  "data": {
   "shadows": "imblearn.utils.deprecation.deprecate_parameter"
  },
  "type": "import"
 },
 "imblearn.utils.tests.test_deprecation.test_deprecate_parameter": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "DeprecationWarning",
    "imblearn.utils.deprecation.deprecate_parameter",
    "imblearn.utils.testing.warns",
    "imblearn.utils.tests.test_deprecation.Sampler"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_deprecation.warns": {
  "data": {
   "shadows": "imblearn.utils.testing.warns"
  },
  "type": "import"
 },
 "imblearn.utils.tests.test_docstring": {
  "data": {},
  "type": "module"
 },
 "imblearn.utils.tests.test_docstring.Substitution": {
  "data": {
   "shadows": "imblearn.utils.Substitution"
  },
  "type": "import"
 },
 "imblearn.utils.tests.test_docstring.cls": {
  "data": {
   "lineno": 43
  },
  "type": "class"
 },
 "imblearn.utils.tests.test_docstring.cls.__init__": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_docstring.cls_docstring": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "imblearn.utils.tests.test_docstring.func": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_docstring.func_docstring": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "imblearn.utils.tests.test_docstring.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.utils.tests.test_docstring.test_docstring_inject": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "imblearn.utils.Substitution",
    "imblearn.utils.tests.test_docstring.cls",
    "imblearn.utils.tests.test_docstring.cls_docstring",
    "imblearn.utils.tests.test_docstring.func",
    "imblearn.utils.tests.test_docstring.func_docstring",
    "imblearn.utils.tests.test_docstring.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_estimator_checks": {
  "data": {},
  "type": "module"
 },
 "imblearn.utils.tests.test_estimator_checks.BaseBadSampler": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "imblearn.utils.tests.test_estimator_checks.BaseBadSampler.fit": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_estimator_checks.BaseBadSampler.fit_resample": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_estimator_checks.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "imblearn.utils.tests.test_estimator_checks.BaseSampler": {
  "data": {
   "shadows": "imblearn.base.BaseSampler"
  },
  "type": "import"
 },
 "imblearn.utils.tests.test_estimator_checks.NoAcceptingSparseSampler": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "imblearn.utils.tests.test_estimator_checks.BaseBadSampler"
   ]
  },
  "type": "class"
 },
 "imblearn.utils.tests.test_estimator_checks.NoAcceptingSparseSampler.fit": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "imblearn.utils.check_target_type",
    "sklearn.utils.check_X_y"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_estimator_checks.NoAcceptingSparseSampler.fit_resample": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_estimator_checks.NotFittedSampler": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "imblearn.utils.tests.test_estimator_checks.BaseBadSampler"
   ]
  },
  "type": "class"
 },
 "imblearn.utils.tests.test_estimator_checks.NotFittedSampler.fit": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "imblearn.utils.check_target_type",
    "sklearn.utils.check_X_y"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_estimator_checks.NotFittedSampler.fit_resample": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_estimator_checks.NotPreservingDtypeSampler": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "imblearn.base.BaseSampler"
   ]
  },
  "type": "class"
 },
 "imblearn.utils.tests.test_estimator_checks.NotPreservingDtypeSampler._fit_resample": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_estimator_checks.NotTransformingTargetOvR": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "imblearn.utils.tests.test_estimator_checks.BaseBadSampler"
   ]
  },
  "type": "class"
 },
 "imblearn.utils.tests.test_estimator_checks.NotTransformingTargetOvR.fit": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "imblearn.utils.check_target_type",
    "sklearn.utils.check_X_y"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_estimator_checks.NotTransformingTargetOvR.fit_resample": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_estimator_checks.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.check_X_y"
  },
  "type": "import"
 },
 "imblearn.utils.tests.test_estimator_checks.check_estimator": {
  "data": {
   "shadows": "imblearn.utils.estimator_checks.check_estimator"
  },
  "type": "import"
 },
 "imblearn.utils.tests.test_estimator_checks.check_target_type": {
  "data": {
   "shadows": "imblearn.utils.check_target_type"
  },
  "type": "import"
 },
 "imblearn.utils.tests.test_estimator_checks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.utils.tests.test_estimator_checks.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.utils.tests.test_estimator_checks.test_check_estimator": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "AssertionError",
    "TypeError",
    "ValueError",
    "imblearn.utils.estimator_checks.check_estimator",
    "imblearn.utils.tests.test_estimator_checks.BaseBadSampler",
    "imblearn.utils.tests.test_estimator_checks.NoAcceptingSparseSampler",
    "imblearn.utils.tests.test_estimator_checks.NotFittedSampler",
    "imblearn.utils.tests.test_estimator_checks.NotPreservingDtypeSampler",
    "imblearn.utils.tests.test_estimator_checks.NotTransformingTargetOvR",
    "imblearn.utils.tests.test_estimator_checks.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_testing": {
  "data": {},
  "type": "module"
 },
 "imblearn.utils.tests.test_testing.SamplerMixin": {
  "data": {
   "shadows": "imblearn.base.SamplerMixin"
  },
  "type": "import"
 },
 "imblearn.utils.tests.test_testing.all_estimators": {
  "data": {
   "shadows": "imblearn.utils.testing.all_estimators"
  },
  "type": "import"
 },
 "imblearn.utils.tests.test_testing.raises": {
  "data": {
   "shadows": "pytest.raises"
  },
  "type": "import"
 },
 "imblearn.utils.tests.test_testing.test_all_estimators": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.base.SamplerMixin",
    "imblearn.utils.testing.all_estimators",
    "issubclass",
    "pytest.raises"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_testing.test_warns": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "AssertionError",
    "UserWarning",
    "imblearn.utils.testing.warns",
    "imblearn.utils.tests.test_testing.warnings",
    "pytest.raises"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_testing.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "imblearn.utils.tests.test_testing.warns": {
  "data": {
   "shadows": "imblearn.utils.testing.warns"
  },
  "type": "import"
 },
 "imblearn.utils.tests.test_validation": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "imblearn.utils.tests.test_validation.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "imblearn.utils.tests.test_validation.KNeighborsMixin": {
  "data": {
   "shadows": "sklearn.neighbors.base.KNeighborsMixin"
  },
  "type": "import"
 },
 "imblearn.utils.tests.test_validation.NearestNeighbors": {
  "data": {
   "shadows": "sklearn.neighbors.NearestNeighbors"
  },
  "type": "import"
 },
 "imblearn.utils.tests.test_validation.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "imblearn.utils.tests.test_validation._sampling_strategy_func": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "collections.Counter",
    "int",
    "max"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_validation.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "imblearn.utils.tests.test_validation.binary_target": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "imblearn.utils.tests.test_validation.check_neighbors_object": {
  "data": {
   "shadows": "imblearn.utils.check_neighbors_object"
  },
  "type": "import"
 },
 "imblearn.utils.tests.test_validation.check_ratio": {
  "data": {
   "shadows": "imblearn.utils.check_ratio"
  },
  "type": "import"
 },
 "imblearn.utils.tests.test_validation.check_sampling_strategy": {
  "data": {
   "shadows": "imblearn.utils.check_sampling_strategy"
  },
  "type": "import"
 },
 "imblearn.utils.tests.test_validation.check_target_type": {
  "data": {
   "shadows": "imblearn.utils.check_target_type"
  },
  "type": "import"
 },
 "imblearn.utils.tests.test_validation.multiclass_target": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "imblearn.utils.tests.test_validation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "imblearn.utils.tests.test_validation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "imblearn.utils.tests.test_validation.test_check_neighbors_object": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.utils.check_neighbors_object",
    "imblearn.utils.tests.test_validation.pytest",
    "issubclass",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.base.KNeighborsMixin",
    "type"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_validation.test_check_ratio": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "DeprecationWarning",
    "imblearn.utils.check_ratio",
    "imblearn.utils.tests.test_validation._sampling_strategy_func",
    "imblearn.utils.tests.test_validation.binary_target",
    "imblearn.utils.tests.test_validation.multiclass_target",
    "imblearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_validation.test_check_sampling_strategy": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "imblearn.utils.check_sampling_strategy",
    "imblearn.utils.tests.test_validation._sampling_strategy_func",
    "imblearn.utils.tests.test_validation.binary_target",
    "imblearn.utils.tests.test_validation.multiclass_target",
    "imblearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_validation.test_check_sampling_strategy_error": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.utils.check_sampling_strategy",
    "imblearn.utils.tests.test_validation.pytest",
    "numpy.array",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_validation.test_check_sampling_strategy_error_wrong_string": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.utils.check_sampling_strategy",
    "imblearn.utils.tests.test_validation.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_validation.test_check_sampling_strategy_float_error": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.utils.check_sampling_strategy",
    "imblearn.utils.tests.test_validation.binary_target",
    "imblearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_validation.test_check_sampling_strategy_warning": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "DeprecationWarning",
    "imblearn.utils.check_sampling_strategy",
    "imblearn.utils.tests.test_validation.multiclass_target",
    "imblearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_validation.test_check_target_type": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "imblearn.utils.check_target_type",
    "imblearn.utils.tests.test_validation.pytest",
    "int",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_validation.test_check_target_type_ova": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "imblearn.utils.check_target_type",
    "imblearn.utils.tests.test_validation.pytest",
    "int",
    "numpy.array",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_validation.test_sampling_strategy_callable_args": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "imblearn.utils.check_sampling_strategy",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_validation.test_sampling_strategy_callable_args.sampling_strategy_func": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "collections.Counter",
    "int"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_validation.test_sampling_strategy_check_order": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "imblearn.utils.check_sampling_strategy",
    "imblearn.utils.tests.test_validation.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_validation.test_sampling_strategy_class_target_unknown": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.utils.check_sampling_strategy",
    "imblearn.utils.tests.test_validation.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_validation.test_sampling_strategy_dict_error": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.utils.check_sampling_strategy",
    "imblearn.utils.tests.test_validation.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_validation.test_sampling_strategy_dict_over_sampling": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "UserWarning",
    "imblearn.utils.check_sampling_strategy",
    "imblearn.utils.testing.warns",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_validation.test_sampling_strategy_float_error_not_binary": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.utils.check_sampling_strategy",
    "imblearn.utils.tests.test_validation.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_validation.test_sampling_strategy_float_error_not_in_range": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.utils.check_sampling_strategy",
    "imblearn.utils.tests.test_validation.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_validation.test_sampling_strategy_list_error_not_clean_sampling": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "ValueError",
    "imblearn.utils.check_sampling_strategy",
    "imblearn.utils.tests.test_validation.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "imblearn.utils.tests.test_validation.warns": {
  "data": {
   "shadows": "imblearn.utils.testing.warns"
  },
  "type": "import"
 }
}