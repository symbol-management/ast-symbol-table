{
 "*": {
  "data": {
   "imports": [
    "pylab"
   ]
  },
  "type": "star-import"
 },
 "pystan": {
  "data": {
   "symbols_in_volume": {
    "len": {
     "line number": [
      16
     ]
    },
    "pystan.logger": {
     "line number": [
      15,
      16
     ]
    },
    "pystan.logging": {
     "line number": [
      14,
      15,
      17,
      17
     ]
    }
   }
  },
  "type": "module"
 },
 "pystan.StanModel": {
  "data": {
   "shadows": "pystan.model.StanModel"
  },
  "type": "import"
 },
 "pystan.__version__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pystan._compat": {
  "data": {
   "symbols_in_volume": {
    "chr": {
     "line number": [
      15
     ]
    },
    "filter": {
     "line number": [
      22
     ]
    },
    "map": {
     "line number": [
      23
     ]
    },
    "pystan._compat.PY2": {
     "line number": [
      14
     ]
    },
    "pystan._compat._identity": {
     "line number": [
      20
     ]
    },
    "pystan._compat.sys": {
     "line number": [
      11
     ]
    },
    "range": {
     "line number": [
      16
     ]
    },
    "str": {
     "line number": [
      17,
      18,
      30
     ]
    },
    "zip": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "module"
 },
 "pystan._compat.PY2": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pystan._compat._identity": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pystan._compat.ifilter": {
  "data": {
   "shadows": "itertools.ifilter"
  },
  "type": "import"
 },
 "pystan._compat.imap": {
  "data": {
   "shadows": "itertools.imap"
  },
  "type": "import"
 },
 "pystan._compat.implements_to_string": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "pystan._compat.izip": {
  "data": {
   "shadows": "itertools.izip"
  },
  "type": "import"
 },
 "pystan._compat.range_type": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pystan._compat.string_types": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pystan._compat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pystan._compat.text_type": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pystan._compat.unichr": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pystan.api": {
  "data": {
   "symbols_in_volume": {
    "pystan.api.logging": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "module"
 },
 "pystan.api.PY2": {
  "data": {
   "shadows": "pystan._compat.PY2"
  },
  "type": "import"
 },
 "pystan.api.StanModel": {
  "data": {
   "shadows": "pystan.model.StanModel"
  },
  "type": "import"
 },
 "pystan.api.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "pystan.api.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pystan.api.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pystan.api.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pystan.api.pystan._api": {
  "data": {
   "shadows": "pystan._api"
  },
  "type": "import"
 },
 "pystan.api.stan": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      389
     ]
    },
    "int": {
     "line number": [
      376
     ]
    },
    "iter": {
     "line number": [
      376,
      391
     ]
    },
    "pystan.model.StanModel": {
     "line number": [
      381
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.api.stanc": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      100,
      103,
      133
     ]
    },
    "isinstance": {
     "line number": [
      105
     ]
    },
    "pystan._compat.PY2": {
     "line number": [
      129
     ]
    },
    "pystan._compat.string_types": {
     "line number": [
      105
     ]
    },
    "pystan.api.hashlib": {
     "line number": [
      122
     ]
    },
    "pystan.api.io": {
     "line number": [
      107
     ]
    },
    "pystan.api.logger": {
     "line number": [
      110,
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.api.string_types": {
  "data": {
   "shadows": "pystan._compat.string_types"
  },
  "type": "import"
 },
 "pystan.chains": {
  "data": {},
  "type": "module"
 },
 "pystan.chains._chains": {
  "data": {
   "shadows": "pystan._chains"
  },
  "type": "import"
 },
 "pystan.chains.ess": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": {
    "pystan._chains.effective_sample_size": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.chains.ess_and_splitrhat": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "pystan.chains.ess": {
     "line number": [
      34
     ]
    },
    "pystan.chains.splitrhat": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.chains.splitrhat": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "pystan._chains.split_potential_scale_reduction": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.constants": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      6
     ]
    },
    "__name__": {
     "line number": [
      9,
      10,
      18,
      19
     ]
    },
    "pystan.external.enum.Enum": {
     "line number": [
      9,
      10,
      18,
      19
     ]
    }
   }
  },
  "type": "module"
 },
 "pystan.constants.EPSILON": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "pystan.constants.Enum": {
  "data": {
   "shadows": "pystan.external.enum.Enum"
  },
  "type": "import"
 },
 "pystan.constants.MAX_UINT": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pystan.constants.optim_algo_t": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "pystan.external.enum.Enum": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.constants.sampling_algo_t": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pystan.constants.sampling_metric_t": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pystan.constants.stan_args_method_t": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pystan.constants.variational_algo_t": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pystan.external": {
  "data": {},
  "type": "module"
 },
 "pystan.external.pymc": {
  "data": {},
  "type": "module"
 },
 "pystan.external.pymc.plots": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      16
     ]
    },
    "matplotlib.gridspec": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "module"
 },
 "pystan.external.pymc.plots.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pystan.external.pymc.plots.autocorrplot": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      98
     ]
    },
    "enumerate": {
     "line number": [
      118
     ]
    },
    "gca": {
     "line number": [
      134,
      137
     ]
    },
    "len": {
     "line number": [
      111,
      113,
      116
     ]
    },
    "min": {
     "line number": [
      116
     ]
    },
    "numpy.squeeze": {
     "line number": [
      122
     ]
    },
    "setp": {
     "line number": [
      135,
      138
     ]
    },
    "subplots": {
     "line number": [
      114
     ]
    },
    "vars": {
     "line number": [
      105,
      106,
      109,
      116,
      118
     ]
    },
    "xrange": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.external.pymc.plots.forestplot": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      248
     ]
    },
    "axvline": {
     "line number": [
      430
     ]
    },
    "enumerate": {
     "line number": [
      276,
      326
     ]
    },
    "errorbar": {
     "line number": [
      335,
      348,
      365,
      377
     ]
    },
    "gelman_rubin": {
     "line number": [
      240
     ]
    },
    "hpd": {
     "line number": [
      280
     ]
    },
    "int": {
     "line number": [
      405
     ]
    },
    "len": {
     "line number": [
      236,
      262,
      391,
      401,
      446
     ]
    },
    "matplotlib.gridspec": {
     "line number": [
      209
     ]
    },
    "matplotlib.gridspec.GridSpec": {
     "line number": [
      267,
      271
     ]
    },
    "max": {
     "line number": [
      301
     ]
    },
    "min": {
     "line number": [
      298,
      455,
      458
     ]
    },
    "numpy.max": {
     "line number": [
      302,
      304,
      391
     ]
    },
    "numpy.min": {
     "line number": [
      300,
      304
     ]
    },
    "numpy.size": {
     "line number": [
      308,
      452
     ]
    },
    "numpy.transpose": {
     "line number": [
      326
     ]
    },
    "plot": {
     "line number": [
      333,
      345,
      363,
      374,
      455,
      458
     ]
    },
    "print_": {
     "line number": [
      210
     ]
    },
    "pystan.external.pymc.plots.var_str": {
     "line number": [
      313
     ]
    },
    "quantiles": {
     "line number": [
      279
     ]
    },
    "range": {
     "line number": [
      321,
      401,
      446,
      456
     ]
    },
    "shape": {
     "line number": [
      313
     ]
    },
    "str": {
     "line number": [
      405
     ]
    },
    "subplot": {
     "line number": [
      274,
      436
     ]
    },
    "title": {
     "line number": [
      407,
      439
     ]
    },
    "vars": {
     "line number": [
      241,
      242,
      256,
      257,
      285,
      449
     ]
    },
    "xlabel": {
     "line number": [
      411
     ]
    },
    "xlim": {
     "line number": [
      398,
      415,
      442
     ]
    },
    "xrange": {
     "line number": [
      414,
      415
     ]
    },
    "xticks": {
     "line number": [
      445
     ]
    },
    "ylim": {
     "line number": [
      395,
      463
     ]
    },
    "yticks": {
     "line number": [
      401,
      446
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.external.pymc.plots.gridspec": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pystan.external.pymc.plots.kde": {
  "data": {
   "shadows": "scipy.stats.kde"
  },
  "type": "import"
 },
 "pystan.external.pymc.plots.kde2plot": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "pystan.external.pymc.plots.kde2plot_op": {
     "line number": [
      88
     ]
    },
    "subplots": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.external.pymc.plots.kde2plot_op": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "kernel": {
     "line number": [
      74
     ]
    },
    "numpy.mgrid": {
     "line number": [
      70
     ]
    },
    "numpy.reshape": {
     "line number": [
      74
     ]
    },
    "numpy.rot90": {
     "line number": [
      76
     ]
    },
    "numpy.vstack": {
     "line number": [
      71,
      72
     ]
    },
    "scipy.stats.kde.gaussian_kde": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.external.pymc.plots.kdeplot": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "pystan.external.pymc.plots.kdeplot_op": {
     "line number": [
      82
     ]
    },
    "subplots": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.external.pymc.plots.kdeplot_op": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "density": {
     "line number": [
      60
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      52
     ]
    },
    "numpy.linspace": {
     "line number": [
      58
     ]
    },
    "numpy.max": {
     "line number": [
      57
     ]
    },
    "numpy.min": {
     "line number": [
      56
     ]
    },
    "range": {
     "line number": [
      53
     ]
    },
    "scipy.stats.kde.gaussian_kde": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.external.pymc.plots.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystan.external.pymc.plots.traceplot": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      35
     ]
    },
    "isinstance": {
     "line number": [
      29
     ]
    },
    "len": {
     "line number": [
      32
     ]
    },
    "numpy.squeeze": {
     "line number": [
      36
     ]
    },
    "pystan.external.pymc.plots.kdeplot_op": {
     "line number": [
      41
     ]
    },
    "sqrt": {
     "line number": [
      39
     ]
    },
    "str": {
     "line number": [
      42
     ]
    },
    "subplots": {
     "line number": [
      33
     ]
    },
    "vars": {
     "line number": [
      26,
      27,
      32,
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.external.pymc.plots.var_str": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "indices": {
     "line number": [
      152
     ]
    },
    "map": {
     "line number": [
      153
     ]
    },
    "prod": {
     "line number": [
      151
     ]
    },
    "str": {
     "line number": [
      153
     ]
    },
    "zip": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.external.pymc.stats": {
  "data": {},
  "type": "module"
 },
 "pystan.external.pymc.trace": {
  "data": {
   "symbols_in_volume": {
    "type": {
     "line number": [
      2
     ]
    }
   }
  },
  "type": "module"
 },
 "pystan.external.pymc.trace.MultiTrace": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "pystan.external.scipy": {
  "data": {},
  "type": "module"
 },
 "pystan.external.scipy.mstats": {
  "data": {},
  "type": "module"
 },
 "pystan.external.scipy.mstats.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "pystan.external.scipy.mstats.mquantiles": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      133
     ]
    },
    "_quantiles1D": {
     "line number": [
      143,
      144
     ]
    },
    "list": {
     "line number": [
      15
     ]
    },
    "numpy.array": {
     "line number": [
      139
     ]
    },
    "numpy.ma.apply_along_axis": {
     "line number": [
      144
     ]
    },
    "numpy.ma.array": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.external.scipy.mstats.mquantiles._quantiles1D": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "float": {
     "line number": [
      122
     ]
    },
    "int": {
     "line number": [
      126
     ]
    },
    "len": {
     "line number": [
      120,
      122
     ]
    },
    "numpy.empty": {
     "line number": [
      122
     ]
    },
    "numpy.floor": {
     "line number": [
      126
     ]
    },
    "numpy.ma.array": {
     "line number": [
      122,
      124
     ]
    },
    "numpy.resize": {
     "line number": [
      124
     ]
    },
    "numpy.sort": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.external.scipy.mstats.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystan.logger": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pystan.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pystan.lookup": {
  "data": {
   "shadows": "pystan.lookup.lookup"
  },
  "type": "import"
 },
 "pystan.lookup.SequenceMatcher": {
  "data": {
   "shadows": "difflib.SequenceMatcher"
  },
  "type": "import"
 },
 "pystan.lookup.build": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      125
     ]
    },
    "filter": {
     "line number": [
      117
     ]
    },
    "len": {
     "line number": [
      117
     ]
    },
    "list": {
     "line number": [
      117
     ]
    },
    "load_table_file": {
     "line number": [
      98,
      99,
      100
     ]
    },
    "numpy.array": {
     "line number": [
      118
     ]
    },
    "numpy.genfromtxt": {
     "line number": [
      102,
      122
     ]
    },
    "numpy.vectorize": {
     "line number": [
      105,
      119,
      127
     ]
    },
    "numpy.vstack": {
     "line number": [
      123
     ]
    },
    "numpy.where": {
     "line number": [
      129
     ]
    },
    "pystan.lookup.lookuptable": {
     "line number": [
      143
     ]
    },
    "pystan.lookup.re": {
     "line number": [
      111,
      127
     ]
    },
    "pystan.lookup.stanftable": {
     "line number": [
      142
     ]
    },
    "range": {
     "line number": [
      126
     ]
    },
    "rpl_textbar": {
     "line number": [
      106
     ]
    },
    "str": {
     "line number": [
      118,
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.lookup.build.load_table_file": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      96
     ]
    },
    "pystan.lookup.io": {
     "line number": [
      97
     ]
    },
    "pystan.lookup.pkg_resources": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.lookup.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pystan.lookup.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "pystan.lookup.lookup": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      85,
      86
     ]
    },
    "difflib.SequenceMatcher": {
     "line number": [
      59
     ]
    },
    "filter": {
     "line number": [
      62
     ]
    },
    "len": {
     "line number": [
      61,
      66,
      68,
      80
     ]
    },
    "list": {
     "line number": [
      58,
      60,
      62
     ]
    },
    "map": {
     "line number": [
      60
     ]
    },
    "operator.itemgetter": {
     "line number": [
      64
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      89
     ]
    },
    "print": {
     "line number": [
      56,
      67,
      69,
      71,
      76
     ]
    },
    "pystan.lookup.build": {
     "line number": [
      52
     ]
    },
    "pystan.lookup.lookuptable": {
     "line number": [
      51,
      53,
      58,
      79
     ]
    },
    "pystan.lookup.stanftable": {
     "line number": [
      79
     ]
    },
    "range": {
     "line number": [
      61,
      68
     ]
    },
    "round": {
     "line number": [
      70
     ]
    },
    "sorted": {
     "line number": [
      64
     ]
    },
    "str": {
     "line number": [
      70
     ]
    },
    "zip": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.lookup.lookuptable": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pystan.lookup.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystan.lookup.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pystan.lookup.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pystan.lookup.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pystan.lookup.stanftable": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pystan.misc": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      42
     ]
    },
    "pystan._compat.PY2": {
     "line number": [
      21
     ]
    },
    "pystan.misc.logging": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "module"
 },
 "pystan.misc.Callable": {
  "data": {
   "shadows": "collections.abc.Callable"
  },
  "type": "import"
 },
 "pystan.misc.MAX_UINT": {
  "data": {
   "shadows": "pystan.constants.MAX_UINT"
  },
  "type": "import"
 },
 "pystan.misc.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "pystan.misc.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pystan.misc.PY2": {
  "data": {
   "shadows": "pystan._compat.PY2"
  },
  "type": "import"
 },
 "pystan.misc.Sequence": {
  "data": {
   "shadows": "collections.abc.Sequence"
  },
  "type": "import"
 },
 "pystan.misc._append_id": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": {
    "id": {
     "line number": [
      939,
      941
     ]
    },
    "pystan.misc.os": {
     "line number": [
      937,
      938,
      942
     ]
    },
    "pystan.misc.re": {
     "line number": [
      939
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc._array_to_table": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      109
     ]
    },
    "int": {
     "line number": [
      111
     ]
    },
    "len": {
     "line number": [
      98,
      98,
      99,
      102
     ]
    },
    "max": {
     "line number": [
      99,
      102,
      102
     ]
    },
    "pystan.misc._format_number": {
     "line number": [
      112
     ]
    },
    "round": {
     "line number": [
      111
     ]
    },
    "zip": {
     "line number": [
      104,
      107,
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc._calc_starts": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": {
    "int": {
     "line number": [
      729
     ]
    },
    "len": {
     "line number": [
      725
     ]
    },
    "numpy.cumsum": {
     "line number": [
      727
     ]
    },
    "numpy.prod": {
     "line number": [
      726
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc._check_pars": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      772,
      775
     ]
    },
    "len": {
     "line number": [
      771
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc._check_seed": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      661,
      669
     ]
    },
    "int": {
     "line number": [
      660
     ]
    },
    "isinstance": {
     "line number": [
      658,
      670
     ]
    },
    "numbers.Number": {
     "line number": [
      658
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      670
     ]
    },
    "pystan._compat.string_types": {
     "line number": [
      658
     ]
    },
    "pystan.constants.MAX_UINT": {
     "line number": [
      668,
      669,
      671,
      677
     ]
    },
    "pystan.misc.random": {
     "line number": [
      677
     ]
    },
    "pystan.misc.warnings": {
     "line number": [
      662,
      666,
      673
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc._combine_msd_quan": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "numpy.column_stack": {
     "line number": [
      244
     ]
    },
    "numpy.dstack": {
     "line number": [
      245
     ]
    },
    "range": {
     "line number": [
      241
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc._config_argss": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      480
     ]
    },
    "ValueError": {
     "line number": [
      378,
      381,
      385,
      388,
      400,
      426,
      431,
      434,
      439,
      456,
      459,
      461
     ]
    },
    "all": {
     "line number": [
      433,
      457
     ]
    },
    "collections.abc.Callable": {
     "line number": [
      419
     ]
    },
    "collections.abc.Sequence": {
     "line number": [
      429
     ]
    },
    "dict": {
     "line number": [
      425,
      433,
      455,
      464,
      466
     ]
    },
    "id": {
     "line number": [
      398,
      398,
      422,
      422
     ]
    },
    "init": {
     "line number": [
      422,
      424,
      429,
      430,
      433,
      436
     ]
    },
    "int": {
     "line number": [
      376,
      379,
      383,
      386,
      398
     ]
    },
    "isinstance": {
     "line number": [
      411,
      413,
      419,
      425,
      429,
      433,
      455
     ]
    },
    "iter": {
     "line number": [
      376,
      376,
      377,
      380,
      384,
      390
     ]
    },
    "len": {
     "line number": [
      399,
      399,
      401,
      430
     ]
    },
    "list": {
     "line number": [
      396
     ]
    },
    "max": {
     "line number": [
      383,
      405
     ]
    },
    "numbers.Number": {
     "line number": [
      411
     ]
    },
    "pystan._compat.string_types": {
     "line number": [
      413
     ]
    },
    "pystan.misc._append_id": {
     "line number": [
      477
     ]
    },
    "pystan.misc._check_seed": {
     "line number": [
      442
     ]
    },
    "pystan.misc._get_valid_stan_args": {
     "line number": [
      484
     ]
    },
    "pystan.misc._writable_sample_file": {
     "line number": [
      472
     ]
    },
    "pystan.misc.inspect": {
     "line number": [
      421
     ]
    },
    "range": {
     "line number": [
      396,
      406,
      464,
      465,
      476,
      482
     ]
    },
    "set": {
     "line number": [
      399,
      458
     ]
    },
    "str": {
     "line number": [
      412
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc._dict_to_rdump": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      990
     ]
    },
    "bool": {
     "line number": [
      986
     ]
    },
    "collections.abc.Sequence": {
     "line number": [
      986
     ]
    },
    "float": {
     "line number": [
      986
     ]
    },
    "int": {
     "line number": [
      986,
      993
     ]
    },
    "isinstance": {
     "line number": [
      986,
      987
     ]
    },
    "numbers.Number": {
     "line number": [
      986
     ]
    },
    "numpy.asarray": {
     "line number": [
      988
     ]
    },
    "numpy.bool": {
     "line number": [
      992
     ]
    },
    "numpy.ndarray": {
     "line number": [
      986
     ]
    },
    "numpy.number": {
     "line number": [
      986
     ]
    },
    "pystan._compat.string_types": {
     "line number": [
      987
     ]
    },
    "str": {
     "line number": [
      996,
      998,
      1004,
      1005
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc._format_number": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      143
     ]
    },
    "abs": {
     "line number": [
      147,
      148
     ]
    },
    "int": {
     "line number": [
      153
     ]
    },
    "n_digits": {
     "line number": [
      148,
      151
     ]
    },
    "pystan.misc._format_number_si": {
     "line number": [
      157
     ]
    },
    "pystan.misc._number_width": {
     "line number": [
      150
     ]
    },
    "pystan.misc.math": {
     "line number": [
      144,
      144,
      147,
      147
     ]
    },
    "round": {
     "line number": [
      149,
      153
     ]
    },
    "str": {
     "line number": [
      145,
      149,
      153,
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc._format_number_si": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "float": {
     "line number": [
      130
     ]
    },
    "pystan.misc.math": {
     "line number": [
      127,
      127
     ]
    },
    "round": {
     "line number": [
      130
     ]
    },
    "str": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc._get_kept_samples": {
  "data": {
   "lineno": 856
  },
  "type": "function"
 },
 "pystan.misc._get_par_summary": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      351
     ]
    },
    "msdfun": {
     "line number": [
      346,
      349
     ]
    },
    "numpy.array": {
     "line number": [
      346,
      347
     ]
    },
    "numpy.asarray": {
     "line number": [
      348,
      349,
      350
     ]
    },
    "numpy.mean": {
     "line number": [
      344
     ]
    },
    "numpy.std": {
     "line number": [
      344
     ]
    },
    "pystan.external.scipy.mstats.mquantiles": {
     "line number": [
      345
     ]
    },
    "pystan.misc._get_samples": {
     "line number": [
      343
     ]
    },
    "qfun": {
     "line number": [
      347,
      350
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc._get_samples": {
  "data": {
   "lineno": 876
  },
  "type": "function"
 },
 "pystan.misc._get_valid_stan_args": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      579,
      611
     ]
    },
    "dict": {
     "line number": [
      521,
      521,
      536,
      536,
      549,
      599,
      599,
      625,
      625,
      632
     ]
    },
    "init": {
     "line number": [
      629,
      630,
      632,
      636
     ]
    },
    "init.encode": {
     "line number": [
      631
     ]
    },
    "int": {
     "line number": [
      517
     ]
    },
    "isinstance": {
     "line number": [
      630,
      632
     ]
    },
    "iter": {
     "line number": [
      537,
      538,
      539,
      544,
      546,
      546,
      600
     ]
    },
    "pystan._compat.string_types": {
     "line number": [
      630
     ]
    },
    "pystan.constants.optim_algo_t.BFGS": {
     "line number": [
      603
     ]
    },
    "pystan.constants.optim_algo_t.LBFGS": {
     "line number": [
      607
     ]
    },
    "pystan.constants.optim_algo_t.Newton": {
     "line number": [
      605
     ]
    },
    "pystan.constants.sampling_algo_t.Fixed_param": {
     "line number": [
      571,
      595
     ]
    },
    "pystan.constants.sampling_algo_t.HMC": {
     "line number": [
      565,
      591
     ]
    },
    "pystan.constants.sampling_algo_t.Metropolis": {
     "line number": [
      567,
      593
     ]
    },
    "pystan.constants.sampling_algo_t.NUTS": {
     "line number": [
      569,
      589
     ]
    },
    "pystan.constants.sampling_metric_t.DENSE_E": {
     "line number": [
      587
     ]
    },
    "pystan.constants.sampling_metric_t.DIAG_E": {
     "line number": [
      585
     ]
    },
    "pystan.constants.sampling_metric_t.UNIT_E": {
     "line number": [
      583
     ]
    },
    "pystan.constants.stan_args_method_t.OPTIM": {
     "line number": [
      505,
      598
     ]
    },
    "pystan.constants.stan_args_method_t.SAMPLING": {
     "line number": [
      503,
      511,
      535
     ]
    },
    "pystan.constants.stan_args_method_t.TEST_GRADIENT": {
     "line number": [
      507,
      624
     ]
    },
    "pystan.constants.stan_args_method_t.VARIATIONAL": {
     "line number": [
      509,
      519
     ]
    },
    "pystan.constants.variational_algo_t.FULLRANK": {
     "line number": [
      532
     ]
    },
    "pystan.constants.variational_algo_t.MEANFIELD": {
     "line number": [
      534
     ]
    },
    "pystan.misc.time": {
     "line number": [
      517
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc._has_fileno": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      931
     ]
    },
    "IOError": {
     "line number": [
      931
     ]
    },
    "OSError": {
     "line number": [
      931
     ]
    },
    "pystan.misc.io": {
     "line number": [
      931
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc._idx_col2rowm": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": {
    "len": {
     "line number": [
      847,
      849
     ]
    },
    "numpy.arange": {
     "line number": [
      850,
      852
     ]
    },
    "numpy.array": {
     "line number": [
      852
     ]
    },
    "numpy.prod": {
     "line number": [
      852
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc._number_width": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "len": {
     "line number": [
      122
     ]
    },
    "str": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc._organize_inits": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      704
     ]
    },
    "init": {
     "line number": [
      707,
      707
     ]
    },
    "pystan.misc._calc_starts": {
     "line number": [
      706
     ]
    },
    "pystan.misc._par_vector2dict": {
     "line number": [
      707
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc._par_vector2dict": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": {
    "collections.OrderedDict": {
     "line number": [
      758
     ]
    },
    "int": {
     "line number": [
      760
     ]
    },
    "len": {
     "line number": [
      759,
      764
     ]
    },
    "numpy.asarray": {
     "line number": [
      763
     ]
    },
    "numpy.prod": {
     "line number": [
      760
     ]
    },
    "pystan.misc._calc_starts": {
     "line number": [
      757
     ]
    },
    "range": {
     "line number": [
      759
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc._pars_total_indexes": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": {
    "collections.OrderedDict": {
     "line number": [
      839
     ]
    },
    "par_total_indexes": {
     "line number": [
      841
     ]
    },
    "pystan.misc._calc_starts": {
     "line number": [
      825
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc._pars_total_indexes.par_total_indexes": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": {
    "collections.OrderedDict": {
     "line number": [
      832,
      837
     ]
    },
    "numpy.arange": {
     "line number": [
      835
     ]
    },
    "numpy.prod": {
     "line number": [
      835
     ]
    },
    "pystan.misc._idx_col2rowm": {
     "line number": [
      836
     ]
    },
    "tuple": {
     "line number": [
      831,
      837,
      837
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc._print_stanfit": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      65
     ]
    },
    "pystan.misc._array_to_table": {
     "line number": [
      82
     ]
    },
    "pystan.misc._summary": {
     "line number": [
      81
     ]
    },
    "sum": {
     "line number": [
      71,
      73
     ]
    },
    "zip": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc._rdump_value_to_numpy": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1040,
      1047,
      1051
     ]
    },
    "int": {
     "line number": [
      1038,
      1042,
      1049,
      1051
     ]
    },
    "numpy.array": {
     "line number": [
      1040,
      1042,
      1047,
      1049,
      1051
     ]
    },
    "pystan.misc.re": {
     "line number": [
      1037
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc._redirect_stderr": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": {
    "pystan.misc.os": {
     "line number": [
      907,
      908,
      908,
      908,
      909,
      910
     ]
    },
    "pystan.misc.sys": {
     "line number": [
      905,
      906
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc._remove_empty_pars": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": {
    "list": {
     "line number": [
      1073
     ]
    },
    "numpy.prod": {
     "line number": [
      1075
     ]
    },
    "zip": {
     "line number": [
      1074
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc._split_data": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      368
     ]
    },
    "float": {
     "line number": [
      364,
      365
     ]
    },
    "int": {
     "line number": [
      363
     ]
    },
    "numpy.asarray": {
     "line number": [
      362,
      363,
      364,
      365
     ]
    },
    "numpy.integer": {
     "line number": [
      362
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      362,
      364
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc._summary": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      188,
      191,
      195
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      217
     ]
    },
    "isinstance": {
     "line number": [
      201
     ]
    },
    "numpy.column_stack": {
     "line number": [
      209
     ]
    },
    "pystan._compat.string_types": {
     "line number": [
      201
     ]
    },
    "pystan.misc._combine_msd_quan": {
     "line number": [
      214
     ]
    },
    "pystan.misc._remove_empty_pars": {
     "line number": [
      203
     ]
    },
    "pystan.misc._summary_sim": {
     "line number": [
      207
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc._summary_sim": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      311,
      314,
      320
     ]
    },
    "int": {
     "line number": [
      319
     ]
    },
    "len": {
     "line number": [
      284,
      285,
      293
     ]
    },
    "list": {
     "line number": [
      290,
      292,
      307
     ]
    },
    "numpy.array": {
     "line number": [
      317
     ]
    },
    "numpy.asarray": {
     "line number": [
      311,
      314
     ]
    },
    "numpy.hsplit": {
     "line number": [
      318
     ]
    },
    "numpy.row_stack": {
     "line number": [
      295,
      296,
      301,
      302
     ]
    },
    "numpy.sqrt": {
     "line number": [
      322
     ]
    },
    "pystan.misc._get_par_summary": {
     "line number": [
      294
     ]
    },
    "pystan.misc._pars_total_indexes": {
     "line number": [
      288
     ]
    },
    "pystan.misc.itertools": {
     "line number": [
      290,
      292
     ]
    },
    "range": {
     "line number": [
      307
     ]
    },
    "tuple": {
     "line number": [
      297,
      313,
      316
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc._writable_sample_file": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": {
    "dir": {
     "line number": [
      949,
      950,
      950,
      950,
      951,
      956
     ]
    },
    "pystan.misc.logger": {
     "line number": [
      956
     ]
    },
    "pystan.misc.os": {
     "line number": [
      949,
      950,
      951,
      951,
      957,
      957
     ]
    },
    "pystan.misc.tempfile": {
     "line number": [
      954
     ]
    },
    "wfun": {
     "line number": [
      956
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pystan.misc.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "pystan.misc.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pystan.misc.is_legal_stan_vname": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": {
    "pystan.misc.re": {
     "line number": [
      978
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pystan.misc.logger": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pystan.misc.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pystan.misc.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pystan.misc.mquantiles": {
  "data": {
   "shadows": "pystan.external.scipy.mstats.mquantiles"
  },
  "type": "import"
 },
 "pystan.misc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystan.misc.optim_algo_t": {
  "data": {
   "shadows": "pystan.constants.optim_algo_t"
  },
  "type": "import"
 },
 "pystan.misc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pystan.misc.pystan._misc": {
  "data": {
   "shadows": "pystan._misc"
  },
  "type": "import"
 },
 "pystan.misc.pystan.chains": {
  "data": {
   "shadows": "pystan.chains"
  },
  "type": "import"
 },
 "pystan.misc.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pystan.misc.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pystan.misc.read_rdump": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1096
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      1097
     ]
    },
    "len": {
     "line number": [
      1095,
      1095
     ]
    },
    "open": {
     "line number": [
      1092
     ]
    },
    "pystan.misc._rdump_value_to_numpy": {
     "line number": [
      1099
     ]
    },
    "pystan.misc.re": {
     "line number": [
      1093,
      1093,
      1094
     ]
    },
    "zip": {
     "line number": [
      1098
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc.sampling_algo_t": {
  "data": {
   "shadows": "pystan.constants.sampling_algo_t"
  },
  "type": "import"
 },
 "pystan.misc.sampling_metric_t": {
  "data": {
   "shadows": "pystan.constants.sampling_metric_t"
  },
  "type": "import"
 },
 "pystan.misc.stan_args_method_t": {
  "data": {
   "shadows": "pystan.constants.stan_args_method_t"
  },
  "type": "import"
 },
 "pystan.misc.stan_rdump": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1023
     ]
    },
    "open": {
     "line number": [
      1024
     ]
    },
    "pystan.misc._dict_to_rdump": {
     "line number": [
      1025
     ]
    },
    "pystan.misc.is_legal_stan_vname": {
     "line number": [
      1022
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.misc.string_types": {
  "data": {
   "shadows": "pystan._compat.string_types"
  },
  "type": "import"
 },
 "pystan.misc.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pystan.misc.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pystan.misc.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pystan.misc.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "pystan.misc.variational_algo_t": {
  "data": {
   "shadows": "pystan.constants.variational_algo_t"
  },
  "type": "import"
 },
 "pystan.misc.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pystan.model": {
  "data": {
   "symbols_in_volume": {
    "pystan._compat.PY2": {
     "line number": [
      10
     ]
    },
    "pystan.model.logging": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "module"
 },
 "pystan.model.Callable": {
  "data": {
   "shadows": "collections.abc.Callable"
  },
  "type": "import"
 },
 "pystan.model.Cython": {
  "data": {
   "shadows": "Cython"
  },
  "type": "import"
 },
 "pystan.model.Extension": {
  "data": {
   "shadows": "distutils.core.Extension"
  },
  "type": "import"
 },
 "pystan.model.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "pystan.model.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pystan.model.PY2": {
  "data": {
   "shadows": "pystan._compat.PY2"
  },
  "type": "import"
 },
 "pystan.model.StanModel": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "pystan._compat.implements_to_string": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.model.StanModel.__getstate__": {
  "data": {
   "lineno": 350
  },
  "type": "function"
 },
 "pystan.model.StanModel.__init__": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "Cython.Build.Dependencies.cythonize": {
     "line number": [
      300
     ]
    },
    "Cython.Build.Inline._get_build_extension": {
     "line number": [
      299
     ]
    },
    "NotImplementedError": {
     "line number": [
      239,
      241
     ]
    },
    "ValueError": {
     "line number": [
      216,
      220,
      223
     ]
    },
    "abs": {
     "line number": [
      244
     ]
    },
    "all": {
     "line number": [
      219
     ]
    },
    "dict": {
     "line number": [
      215
     ]
    },
    "distutils.core.Extension": {
     "line number": [
      291
     ]
    },
    "getattr": {
     "line number": [
      325
     ]
    },
    "hash": {
     "line number": [
      244
     ]
    },
    "isinstance": {
     "line number": [
      215
     ]
    },
    "numpy.get_include": {
     "line number": [
      256
     ]
    },
    "pystan.model.Cython": {
     "line number": [
      235
     ]
    },
    "pystan.model.distutils": {
     "line number": [
      290
     ]
    },
    "pystan.model.io": {
     "line number": [
      260,
      265,
      268,
      322
     ]
    },
    "pystan.model.load_module": {
     "line number": [
      318
     ]
    },
    "pystan.model.logger": {
     "line number": [
      231,
      236
     ]
    },
    "pystan.model.os": {
     "line number": [
      247,
      251,
      252,
      253,
      254,
      255,
      259,
      263,
      264,
      303,
      316,
      319,
      322
     ]
    },
    "pystan.model.platform": {
     "line number": [
      287
     ]
    },
    "pystan.model.shutil": {
     "line number": [
      324
     ]
    },
    "pystan.model.string": {
     "line number": [
      267
     ]
    },
    "pystan.model.sys": {
     "line number": [
      233,
      234,
      306,
      316
     ]
    },
    "pystan.model.tempfile": {
     "line number": [
      246
     ]
    },
    "pystan.model.time": {
     "line number": [
      244
     ]
    },
    "str": {
     "line number": [
      221
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.model.StanModel.__setstate__": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      367
     ]
    },
    "getattr": {
     "line number": [
      366
     ]
    },
    "pystan.model.io": {
     "line number": [
      362
     ]
    },
    "pystan.model.load_module": {
     "line number": [
      365
     ]
    },
    "pystan.model.logger": {
     "line number": [
      368,
      369
     ]
    },
    "pystan.model.os": {
     "line number": [
      362
     ]
    },
    "pystan.model.shutil": {
     "line number": [
      372
     ]
    },
    "pystan.model.tempfile": {
     "line number": [
      361
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.model.StanModel.__str__": {
  "data": {
   "lineno": 327
  },
  "type": "function"
 },
 "pystan.model.StanModel.dso": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      340
     ]
    },
    "property": {
     "line number": [
      336
     ]
    },
    "pystan.model.warnings": {
     "line number": [
      339
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.model.StanModel.get_cppcode": {
  "data": {
   "lineno": 343
  },
  "type": "function"
 },
 "pystan.model.StanModel.get_cxxflags": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      348
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.model.StanModel.optimizing": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      467,
      486,
      503,
      507
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      514
     ]
    },
    "collections.abc.Callable": {
     "line number": [
      482
     ]
    },
    "collections.abc.Iterable": {
     "line number": [
      484
     ]
    },
    "dict": {
     "line number": [
      490
     ]
    },
    "init": {
     "line number": [
      483,
      484,
      485,
      490
     ]
    },
    "isinstance": {
     "line number": [
      480,
      482,
      484,
      485
     ]
    },
    "pystan._compat.string_types": {
     "line number": [
      485
     ]
    },
    "pystan.model.numbers": {
     "line number": [
      480
     ]
    },
    "str": {
     "line number": [
      481
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.model.StanModel.sampling": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      660
     ]
    },
    "ValueError": {
     "line number": [
      666,
      670,
      690,
      695,
      702
     ]
    },
    "all": {
     "line number": [
      665,
      686
     ]
    },
    "init": {
     "line number": [
      706
     ]
    },
    "int": {
     "line number": [
      664,
      733
     ]
    },
    "isinstance": {
     "line number": [
      665,
      677
     ]
    },
    "iter": {
     "line number": [
      664,
      665,
      704,
      713,
      739
     ]
    },
    "len": {
     "line number": [
      679,
      723,
      735,
      738
     ]
    },
    "numpy.asarray": {
     "line number": [
      687
     ]
    },
    "numpy.in1d": {
     "line number": [
      688
     ]
    },
    "numpy.invert": {
     "line number": [
      688
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      732
     ]
    },
    "pystan._compat.izip": {
     "line number": [
      724
     ]
    },
    "pystan._compat.string_types": {
     "line number": [
      677
     ]
    },
    "pystan.model._map_parallel": {
     "line number": [
      726
     ]
    },
    "pystan.model.datetime": {
     "line number": [
      756
     ]
    },
    "pystan.model.itertools": {
     "line number": [
      724,
      724
     ]
    },
    "pystan.model.numbers": {
     "line number": [
      665
     ]
    },
    "range": {
     "line number": [
      733
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.model.StanModel.show": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": {
    "print": {
     "line number": [
      334
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.model.StanModel.vb": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      849,
      860,
      885
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      894
     ]
    },
    "collections.abc.Callable": {
     "line number": [
      856
     ]
    },
    "collections.abc.Iterable": {
     "line number": [
      858
     ]
    },
    "dict": {
     "line number": [
      864
     ]
    },
    "init": {
     "line number": [
      854,
      855,
      855,
      856,
      857,
      857,
      858,
      859,
      865
     ]
    },
    "isinstance": {
     "line number": [
      854,
      856,
      858,
      859
     ]
    },
    "iter": {
     "line number": [
      864
     ]
    },
    "pystan._compat.string_types": {
     "line number": [
      859
     ]
    },
    "pystan.model.logger": {
     "line number": [
      892,
      893
     ]
    },
    "pystan.model.numbers": {
     "line number": [
      854
     ]
    },
    "pystan.model.os": {
     "line number": [
      874
     ]
    },
    "pystan.model.tempfile": {
     "line number": [
      874
     ]
    },
    "str": {
     "line number": [
      855
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.model._get_build_extension": {
  "data": {
   "shadows": "Cython.Build.Inline._get_build_extension"
  },
  "type": "import"
 },
 "pystan.model._map_parallel": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      65,
      73
     ]
    },
    "OSError": {
     "line number": [
      73
     ]
    },
    "int": {
     "line number": [
      60,
      76
     ]
    },
    "list": {
     "line number": [
      86
     ]
    },
    "map": {
     "line number": [
      86
     ]
    },
    "pystan.model.multiprocessing": {
     "line number": [
      66,
      69,
      71,
      74,
      76,
      80
     ]
    },
    "pystan.model.os": {
     "line number": [
      60
     ]
    },
    "pystan.model.warnings": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.model.cythonize": {
  "data": {
   "shadows": "Cython.Build.Dependencies.cythonize"
  },
  "type": "import"
 },
 "pystan.model.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pystan.model.distutils": {
  "data": {
   "shadows": "distutils"
  },
  "type": "import"
 },
 "pystan.model.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "pystan.model.implements_to_string": {
  "data": {
   "shadows": "pystan._compat.implements_to_string"
  },
  "type": "import"
 },
 "pystan.model.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pystan.model.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pystan.model.izip": {
  "data": {
   "shadows": "pystan._compat.izip"
  },
  "type": "import"
 },
 "pystan.model.load_module": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "__import__": {
     "line number": [
      50
     ]
    },
    "pystan.model.imp": {
     "line number": [
      53,
      54
     ]
    },
    "pystan.model.pyximport": {
     "line number": [
      48
     ]
    },
    "pystan.model.sys": {
     "line number": [
      46,
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.model.logger": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pystan.model.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pystan.model.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "pystan.model.multiprocessing.pool": {
  "data": {
   "shadows": "multiprocessing.pool"
  },
  "type": "import"
 },
 "pystan.model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystan.model.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "pystan.model.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pystan.model.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "pystan.model.pystan.api": {
  "data": {
   "shadows": "pystan.api"
  },
  "type": "import"
 },
 "pystan.model.pystan.misc": {
  "data": {
   "shadows": "pystan.misc"
  },
  "type": "import"
 },
 "pystan.model.pyximport": {
  "data": {
   "shadows": "pyximport"
  },
  "type": "import"
 },
 "pystan.model.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pystan.model.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "pystan.model.string_types": {
  "data": {
   "shadows": "pystan._compat.string_types"
  },
  "type": "import"
 },
 "pystan.model.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pystan.model.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pystan.model.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pystan.model.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pystan.plots": {
  "data": {
   "symbols_in_volume": {
    "pystan.plots.logging": {
     "line number": [
      3
     ]
    }
   }
  },
  "type": "module"
 },
 "pystan.plots.logger": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "pystan.plots.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pystan.plots.plots": {
  "data": {
   "shadows": "pystan.external.pymc.plots"
  },
  "type": "import"
 },
 "pystan.plots.traceplot": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      16
     ]
    },
    "pystan.external.pymc.plots.traceplot": {
     "line number": [
      19
     ]
    },
    "pystan.plots.logger": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.read_rdump": {
  "data": {
   "shadows": "pystan.misc.read_rdump"
  },
  "type": "import"
 },
 "pystan.stan": {
  "data": {
   "shadows": "pystan.api.stan"
  },
  "type": "import"
 },
 "pystan.stan.lib.stan_math.runTests": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      193
     ]
    },
    "pystan.stan.lib.stan_math.runTests.main": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "module"
 },
 "pystan.stan.lib.stan_math.runTests.ArgumentParser": {
  "data": {
   "shadows": "argparse.ArgumentParser"
  },
  "type": "import"
 },
 "pystan.stan.lib.stan_math.runTests.RawTextHelpFormatter": {
  "data": {
   "shadows": "argparse.RawTextHelpFormatter"
  },
  "type": "import"
 },
 "pystan.stan.lib.stan_math.runTests.batchSize": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pystan.stan.lib.stan_math.runTests.doCommand": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "print": {
     "line number": [
      79,
      80
     ]
    },
    "pystan.stan.lib.stan_math.runTests.stopErr": {
     "line number": [
      84
     ]
    },
    "pystan.stan.lib.stan_math.runTests.subprocess": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.stan.lib.stan_math.runTests.generateTests": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "pystan.stan.lib.stan_math.runTests.doCommand": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.stan.lib.stan_math.runTests.isWin": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "pystan.stan.lib.stan_math.runTests.os": {
     "line number": [
      60
     ]
    },
    "pystan.stan.lib.stan_math.runTests.platform": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.stan.lib.stan_math.runTests.main": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "any": {
     "line number": [
      151
     ]
    },
    "print": {
     "line number": [
      166,
      174,
      182,
      189
     ]
    },
    "pystan.stan.lib.stan_math.runTests.generateTests": {
     "line number": [
      152
     ]
    },
    "pystan.stan.lib.stan_math.runTests.makeTest": {
     "line number": [
      168
     ]
    },
    "pystan.stan.lib.stan_math.runTests.makeTests": {
     "line number": [
      176
     ]
    },
    "pystan.stan.lib.stan_math.runTests.os": {
     "line number": [
      157,
      161,
      172,
      180,
      185,
      190
     ]
    },
    "pystan.stan.lib.stan_math.runTests.processCLIArgs": {
     "line number": [
      148
     ]
    },
    "pystan.stan.lib.stan_math.runTests.runTest": {
     "line number": [
      183,
      190
     ]
    },
    "pystan.stan.lib.stan_math.runTests.stopErr": {
     "line number": [
      158,
      163
     ]
    },
    "pystan.stan.lib.stan_math.runTests.testsfx": {
     "line number": [
      162,
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.stan.lib.stan_math.runTests.makeTest": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "pystan.stan.lib.stan_math.runTests.doCommand": {
     "line number": [
      103
     ]
    },
    "pystan.stan.lib.stan_math.runTests.mungeName": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.stan.lib.stan_math.runTests.makeTests": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "len": {
     "line number": [
      116,
      118,
      122,
      136,
      137
     ]
    },
    "list": {
     "line number": [
      107
     ]
    },
    "print": {
     "line number": [
      118,
      129,
      130
     ]
    },
    "pystan.stan.lib.stan_math.runTests.batchSize": {
     "line number": [
      120,
      134
     ]
    },
    "pystan.stan.lib.stan_math.runTests.doCommand": {
     "line number": [
      132
     ]
    },
    "pystan.stan.lib.stan_math.runTests.mungeName": {
     "line number": [
      113
     ]
    },
    "pystan.stan.lib.stan_math.runTests.testsfx": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.stan.lib.stan_math.runTests.mungeName": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "pystan.stan.lib.stan_math.runTests.isWin": {
     "line number": [
      70
     ]
    },
    "pystan.stan.lib.stan_math.runTests.testsfx": {
     "line number": [
      67,
      68
     ]
    },
    "pystan.stan.lib.stan_math.runTests.winsfx": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.stan.lib.stan_math.runTests.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pystan.stan.lib.stan_math.runTests.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pystan.stan.lib.stan_math.runTests.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "pystan.stan.lib.stan_math.runTests.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pystan.stan.lib.stan_math.runTests.processCLIArgs": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "argparse.ArgumentParser": {
     "line number": [
      30
     ]
    },
    "argparse.RawTextHelpFormatter": {
     "line number": [
      32
     ]
    },
    "int": {
     "line number": [
      35
     ]
    },
    "str": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.stan.lib.stan_math.runTests.runTest": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "pystan.stan.lib.stan_math.runTests.doCommand": {
     "line number": [
      144
     ]
    },
    "pystan.stan.lib.stan_math.runTests.mungeName": {
     "line number": [
      141,
      142
     ]
    },
    "pystan.stan.lib.stan_math.runTests.os": {
     "line number": [
      141
     ]
    },
    "pystan.stan.lib.stan_math.runTests.winsfx": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.stan.lib.stan_math.runTests.stopErr": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "pystan.stan.lib.stan_math.runTests.sys": {
     "line number": [
      53,
      54,
      55
     ]
    },
    "pystan.stan.lib.stan_math.runTests.time": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.stan.lib.stan_math.runTests.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pystan.stan.lib.stan_math.runTests.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pystan.stan.lib.stan_math.runTests.testsfx": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pystan.stan.lib.stan_math.runTests.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pystan.stan.lib.stan_math.runTests.winsfx": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pystan.stan_rdump": {
  "data": {
   "shadows": "pystan.misc.stan_rdump"
  },
  "type": "import"
 },
 "pystan.stanc": {
  "data": {
   "shadows": "pystan.api.stanc"
  },
  "type": "import"
 },
 "pystan.tests": {
  "data": {},
  "type": "module"
 },
 "pystan.tests.test_basic": {
  "data": {},
  "type": "module"
 },
 "pystan.tests.test_basic.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pystan.tests.test_basic.PY2": {
  "data": {
   "shadows": "pystan._compat.PY2"
  },
  "type": "import"
 },
 "pystan.tests.test_basic.TestBernoulli": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "pystan.tests.test_basic.unittest": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_basic.TestBernoulli.setUpClass": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      38
     ]
    },
    "pystan.tests.test_basic.pystan": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_basic.TestBernoulli.test_bernoulli_OrderedDict": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "collections.OrderedDict": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_basic.TestBernoulli.test_bernoulli_constructor": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "pystan.tests.test_basic.TestBernoulli.test_bernoulli_extract": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "numpy.mean": {
     "line number": [
      99,
      99,
      100,
      104,
      104,
      105,
      111,
      115,
      117,
      121
     ]
    },
    "numpy.var": {
     "line number": [
      101,
      106,
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_basic.TestBernoulli.test_bernoulli_optimizing_sample_file": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "pystan.tests.test_basic.os": {
     "line number": [
      171,
      173
     ]
    },
    "pystan.tests.test_basic.tempfile": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_basic.TestBernoulli.test_bernoulli_plot": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "pystan.tests.test_basic.TestBernoulli.test_bernoulli_random_seed_consistency": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      128
     ]
    },
    "range": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_basic.TestBernoulli.test_bernoulli_random_seed_inconsistency": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      137
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      135
     ]
    },
    "range": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_basic.TestBernoulli.test_bernoulli_sampling": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "len": {
     "line number": [
      74
     ]
    },
    "numpy.mean": {
     "line number": [
      75,
      76,
      77,
      78
     ]
    },
    "numpy.var": {
     "line number": [
      79,
      80,
      81,
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_basic.TestBernoulli.test_bernoulli_sampling_error": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      88
     ]
    },
    "assertRaisesRegex": {
     "line number": [
      88
     ]
    },
    "pystan._compat.PY2": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_basic.TestBernoulli.test_bernoulli_sampling_invalid_argument": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      93
     ]
    },
    "assertRaisesRegex": {
     "line number": [
      92,
      93
     ]
    },
    "pystan._compat.PY2": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_basic.TestBernoulli.test_bernoulli_sampling_sample_file": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "len": {
     "line number": [
      161
     ]
    },
    "pystan.tests.test_basic.os": {
     "line number": [
      158,
      163,
      163,
      164
     ]
    },
    "pystan.tests.test_basic.tempfile": {
     "line number": [
      157
     ]
    },
    "range": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_basic.TestBernoulli.test_bernoulli_summary": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "print": {
     "line number": [
      145
     ]
    },
    "repr": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_basic.TestNormal": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "pystan.tests.test_basic.unittest": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_basic.TestNormal.setUpClass": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      15
     ]
    },
    "pystan.tests.test_basic.pystan": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_basic.TestNormal.test_constructor": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "pystan.tests.test_basic.TestNormal.test_control_stepsize": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_basic.TestNormal.test_log_prob": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "pystan.tests.test_basic.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pystan.tests.test_basic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystan.tests.test_basic.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pystan.tests.test_basic.pystan": {
  "data": {
   "shadows": "pystan"
  },
  "type": "import"
 },
 "pystan.tests.test_basic.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pystan.tests.test_basic.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pystan.tests.test_basic_array": {
  "data": {},
  "type": "module"
 },
 "pystan.tests.test_basic_array.TestBasicArray": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "pystan.tests.test_basic_array.unittest": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_basic_array.TestBasicArray.setUpClass": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      10
     ]
    },
    "dict": {
     "line number": [
      25
     ]
    },
    "pystan.tests.test_basic_array.pystan": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_basic_array.TestBasicArray.test_array_param_optimizing": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      63
     ]
    },
    "numpy.all": {
     "line number": [
      66,
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_basic_array.TestBasicArray.test_array_param_sampling": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      39,
      40,
      56,
      57,
      58
     ]
    },
    "numpy.mean": {
     "line number": [
      37,
      56,
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_basic_array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystan.tests.test_basic_array.pystan": {
  "data": {
   "shadows": "pystan"
  },
  "type": "import"
 },
 "pystan.tests.test_basic_array.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pystan.tests.test_basic_matrix": {
  "data": {},
  "type": "module"
 },
 "pystan.tests.test_basic_matrix.StanModel": {
  "data": {
   "shadows": "pystan.StanModel"
  },
  "type": "import"
 },
 "pystan.tests.test_basic_matrix.TestMatrixParam": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "pystan.tests.test_basic_matrix.unittest": {
     "line number": [
      7
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_basic_matrix.TestMatrixParam.setUpClass": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      9
     ]
    },
    "pystan.StanModel": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_basic_matrix.TestMatrixParam.test_matrix_param": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      28
     ]
    },
    "numpy.all": {
     "line number": [
      35
     ]
    },
    "numpy.mean": {
     "line number": [
      31,
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_basic_matrix.TestMatrixParam.test_matrix_param_order": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      39
     ]
    },
    "numpy.mean": {
     "line number": [
      42,
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_basic_matrix.TestMatrixParam.test_matrix_param_order_optimizing": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      49
     ]
    },
    "numpy.mean": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_basic_matrix.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystan.tests.test_basic_matrix.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pystan.tests.test_basic_pars": {
  "data": {},
  "type": "module"
 },
 "pystan.tests.test_basic_pars.Test8Schools": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "pystan.tests.test_basic_pars.unittest": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_basic_pars.Test8Schools.setUpClass": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      8
     ]
    },
    "pystan.tests.test_basic_pars.pystan": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_basic_pars.Test8Schools.test_8schools_bad_pars": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_basic_pars.Test8Schools.test_8schools_pars": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      45,
      52,
      60
     ]
    },
    "len": {
     "line number": [
      42,
      42,
      43,
      50,
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_basic_pars.Test8Schools.test_8schools_pars_bare": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      70,
      77
     ]
    },
    "len": {
     "line number": [
      68,
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_basic_pars.TestParsLabels": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "pystan.tests.test_basic_pars.unittest": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_basic_pars.TestParsLabels.setUpClass": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      90
     ]
    },
    "pystan.tests.test_basic_pars.pystan": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_basic_pars.TestParsLabels.test_pars_labels": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "pystan.tests.test_basic_pars.TestParsLabels.test_pars_single": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "pystan.tests.test_basic_pars.TestParsLabels.test_pars_single_chains": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "pystan.tests.test_basic_pars.pystan": {
  "data": {
   "shadows": "pystan"
  },
  "type": "import"
 },
 "pystan.tests.test_basic_pars.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pystan.tests.test_chains": {
  "data": {},
  "type": "module"
 },
 "pystan.tests.test_chains.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pystan.tests.test_chains.TestChains": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "pystan.tests.test_chains.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_chains.TestChains.setUpClass": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      14
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      29,
      30
     ]
    },
    "dict": {
     "line number": [
      32
     ]
    },
    "len": {
     "line number": [
      27,
      34
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      21,
      23
     ]
    },
    "numpy.repeat": {
     "line number": [
      33
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      25
     ]
    },
    "open": {
     "line number": [
      22,
      24
     ]
    },
    "pystan.tests.test_chains.os": {
     "line number": [
      16,
      16,
      17,
      18
     ]
    },
    "zip": {
     "line number": [
      29,
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_chains.TestChains.test_essnrhat": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "pystan.tests.test_chains.pystan": {
     "line number": [
      38,
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_chains.TestChains.test_rhat": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "pystan.tests.test_chains.pystan": {
     "line number": [
      45,
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_chains.TestChains.test_rhat_zero": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "pystan.tests.test_chains.math": {
     "line number": [
      59
     ]
    },
    "pystan.tests.test_chains.pystan": {
     "line number": [
      56,
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_chains.TestChainsNormal": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "pystan.tests.test_chains.unittest": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_chains.TestChainsNormal.setUpClass": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      64
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      85,
      86
     ]
    },
    "dict": {
     "line number": [
      88
     ]
    },
    "len": {
     "line number": [
      78,
      78,
      78,
      78,
      83,
      90
     ]
    },
    "numpy.concatenate": {
     "line number": [
      80
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      72,
      74
     ]
    },
    "numpy.repeat": {
     "line number": [
      89
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      81
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      76
     ]
    },
    "open": {
     "line number": [
      73,
      75
     ]
    },
    "pystan.tests.test_chains.os": {
     "line number": [
      66,
      66,
      67,
      68
     ]
    },
    "zip": {
     "line number": [
      85,
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_chains.TestChainsNormal.test_essnrhat": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "pystan.tests.test_chains.pystan": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_chains.TestChainsNormal.test_rhat": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "pystan.tests.test_chains.pystan": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_chains.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pystan.tests.test_chains.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystan.tests.test_chains.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pystan.tests.test_chains.pystan": {
  "data": {
   "shadows": "pystan"
  },
  "type": "import"
 },
 "pystan.tests.test_chains.pystan.chains": {
  "data": {
   "shadows": "pystan.chains"
  },
  "type": "import"
 },
 "pystan.tests.test_chains.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pystan.tests.test_covexpquad": {
  "data": {},
  "type": "module"
 },
 "pystan.tests.test_covexpquad.StanModel": {
  "data": {
   "shadows": "pystan.StanModel"
  },
  "type": "import"
 },
 "pystan.tests.test_covexpquad.TestCovExpQuad": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": {
    "pystan.StanModel": {
     "line number": [
      21
     ]
    },
    "pystan.tests.test_covexpquad.unittest": {
     "line number": [
      5
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_covexpquad.TestCovExpQuad.test_8schools_pars": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "pystan.tests.test_covexpquad.stan": {
  "data": {
   "shadows": "pystan.stan"
  },
  "type": "import"
 },
 "pystan.tests.test_covexpquad.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pystan.tests.test_ess": {
  "data": {},
  "type": "module"
 },
 "pystan.tests.test_ess.TestESS": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "pystan.tests.test_ess.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_ess.TestESS.setUpClass": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      13
     ]
    },
    "pystan.tests.test_ess.pystan": {
     "line number": [
      16
     ]
    },
    "range": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_ess.TestESS.test_ess": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "len": {
     "line number": [
      23
     ]
    },
    "pystan.tests.test_ess.pystan": {
     "line number": [
      21
     ]
    },
    "sum": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_ess.pystan": {
  "data": {
   "shadows": "pystan"
  },
  "type": "import"
 },
 "pystan.tests.test_ess.pystan._chains": {
  "data": {
   "shadows": "pystan._chains"
  },
  "type": "import"
 },
 "pystan.tests.test_ess.pystan.chains": {
  "data": {
   "shadows": "pystan.chains"
  },
  "type": "import"
 },
 "pystan.tests.test_ess.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pystan.tests.test_extra_compile_args": {
  "data": {},
  "type": "module"
 },
 "pystan.tests.test_extra_compile_args.TestExtraCompileArgs": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "pystan.tests.test_extra_compile_args.unittest": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_extra_compile_args.TestExtraCompileArgs.test_extra_compile_args": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "pystan.tests.test_extra_compile_args.pystan": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_extra_compile_args.pystan": {
  "data": {
   "shadows": "pystan"
  },
  "type": "import"
 },
 "pystan.tests.test_extra_compile_args.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pystan.tests.test_extract": {
  "data": {},
  "type": "module"
 },
 "pystan.tests.test_extract.TestExtract": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "pystan.tests.test_extract.unittest": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_extract.TestExtract.setUpClass": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      10
     ]
    },
    "pystan.tests.test_extract.pystan": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_extract.TestExtract.test_extract_dtype": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "numpy.dtype": {
     "line number": [
      96,
      97,
      98
     ]
    },
    "numpy.float": {
     "line number": [
      98
     ]
    },
    "numpy.int": {
     "line number": [
      91,
      91,
      96,
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_extract.TestExtract.test_extract_permuted": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "numpy.isnan": {
     "line number": [
      36,
      37,
      38
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      43
     ]
    },
    "sorted": {
     "line number": [
      32,
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_extract.TestExtract.test_extract_permuted_false": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "numpy.isnan": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_extract.TestExtract.test_extract_permuted_false_inc_warmup": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "numpy.isnan": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_extract.TestExtract.test_extract_thin": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "numpy.isnan": {
     "line number": [
      76,
      77,
      78,
      83,
      88
     ]
    },
    "sorted": {
     "line number": [
      72,
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_extract.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystan.tests.test_extract.pystan": {
  "data": {
   "shadows": "pystan"
  },
  "type": "import"
 },
 "pystan.tests.test_extract.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pystan.tests.test_fixed_param": {
  "data": {},
  "type": "module"
 },
 "pystan.tests.test_fixed_param.PY2": {
  "data": {
   "shadows": "pystan._compat.PY2"
  },
  "type": "import"
 },
 "pystan.tests.test_fixed_param.TestFixedParam": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "pystan.tests.test_fixed_param.unittest": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_fixed_param.TestFixedParam.setUpClass": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      11
     ]
    },
    "pystan.tests.test_fixed_param.pystan": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_fixed_param.TestFixedParam.test_fixed_param": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "len": {
     "line number": [
      26
     ]
    },
    "numpy.mean": {
     "line number": [
      28
     ]
    },
    "numpy.std": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_fixed_param.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystan.tests.test_fixed_param.pystan": {
  "data": {
   "shadows": "pystan"
  },
  "type": "import"
 },
 "pystan.tests.test_fixed_param.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pystan.tests.test_linear_regression": {
  "data": {},
  "type": "module"
 },
 "pystan.tests.test_linear_regression.TestLinearRegression": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "pystan.tests.test_linear_regression.unittest": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_linear_regression.TestLinearRegression.setUpClass": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      8
     ]
    },
    "numpy.dot": {
     "line number": [
      19
     ]
    },
    "numpy.mean": {
     "line number": [
      18
     ]
    },
    "numpy.random.normal": {
     "line number": [
      17,
      19
     ]
    },
    "numpy.random.seed": {
     "line number": [
      11
     ]
    },
    "numpy.std": {
     "line number": [
      18
     ]
    },
    "pystan.tests.test_linear_regression.pystan": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_linear_regression.TestLinearRegression.test_linear_regression": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "all": {
     "line number": [
      54
     ]
    },
    "numpy.abs": {
     "line number": [
      53,
      54
     ]
    },
    "numpy.array": {
     "line number": [
      54
     ]
    },
    "numpy.count_nonzero": {
     "line number": [
      53
     ]
    },
    "numpy.mean": {
     "line number": [
      46,
      47,
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_linear_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystan.tests.test_linear_regression.pystan": {
  "data": {
   "shadows": "pystan"
  },
  "type": "import"
 },
 "pystan.tests.test_linear_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pystan.tests.test_lookup": {
  "data": {},
  "type": "module"
 },
 "pystan.tests.test_lookup.TestLookup": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": {
    "pystan.tests.test_lookup.unittest": {
     "line number": [
      5
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_lookup.TestLookup.test_lookup": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "len": {
     "line number": [
      12,
      19,
      22
     ]
    },
    "pystan.tests.test_lookup.pystan": {
     "line number": [
      7,
      8,
      9,
      10,
      11,
      18,
      21,
      24
     ]
    },
    "range": {
     "line number": [
      12,
      19,
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_lookup.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystan.tests.test_lookup.pystan": {
  "data": {
   "shadows": "pystan"
  },
  "type": "import"
 },
 "pystan.tests.test_lookup.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pystan.tests.test_misc": {
  "data": {},
  "type": "module"
 },
 "pystan.tests.test_misc.MAX_UINT": {
  "data": {
   "shadows": "pystan.constants.MAX_UINT"
  },
  "type": "import"
 },
 "pystan.tests.test_misc.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pystan.tests.test_misc.PY2": {
  "data": {
   "shadows": "pystan._compat.PY2"
  },
  "type": "import"
 },
 "pystan.tests.test_misc.TestMisc": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "pystan.tests.test_misc.unittest": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_misc.TestMisc.test_array_to_table": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      153,
      155,
      171
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      168,
      170,
      183,
      185
     ]
    },
    "pystan._compat.PY2": {
     "line number": [
      167,
      182
     ]
    },
    "pystan.misc._array_to_table": {
     "line number": [
      163,
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_misc.TestMisc.test_check_seed": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "numpy.random.RandomState": {
     "line number": [
      46
     ]
    },
    "pystan.misc._check_seed": {
     "line number": [
      43,
      44,
      45,
      46,
      47
     ]
    },
    "pystan.tests.test_misc.is_valid_seed": {
     "line number": [
      46,
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_misc.TestMisc.test_check_seed_gt_max_uint": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      51
     ]
    },
    "assertRaisesRegex": {
     "line number": [
      51
     ]
    },
    "pystan._compat.PY2": {
     "line number": [
      50
     ]
    },
    "pystan.constants.MAX_UINT": {
     "line number": [
      52
     ]
    },
    "pystan.misc._check_seed": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_misc.TestMisc.test_format_number": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      131,
      132,
      133,
      134,
      135,
      136,
      137,
      138,
      139,
      140,
      141,
      142,
      143,
      144,
      145,
      146
     ]
    },
    "pystan.misc._format_number": {
     "line number": [
      131,
      132,
      133,
      134,
      135,
      136,
      137,
      138,
      139,
      140,
      141,
      142,
      143,
      144,
      145,
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_misc.TestMisc.test_format_number_inf": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "float": {
     "line number": [
      149,
      150
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      149,
      150
     ]
    },
    "pystan.misc._format_number_si": {
     "line number": [
      149,
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_misc.TestMisc.test_format_number_si": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      122,
      123,
      124,
      125,
      126,
      127,
      128
     ]
    },
    "pystan.misc._format_number_si": {
     "line number": [
      122,
      123,
      124,
      125,
      126,
      127,
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_misc.TestMisc.test_par_vector2dict": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      39,
      40
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      39,
      40
     ]
    },
    "pystan.misc._par_vector2dict": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_misc.TestMisc.test_pars_total_indexes": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "pystan.misc._pars_total_indexes": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_misc.TestMisc.test_remove_empty_pars": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      115,
      116,
      117,
      118,
      119
     ]
    },
    "pystan.misc._remove_empty_pars": {
     "line number": [
      115,
      116,
      117,
      118,
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_misc.TestMisc.test_rstan_read_rdump": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      102
     ]
    },
    "numpy.arange": {
     "line number": [
      100,
      101
     ]
    },
    "numpy.array": {
     "line number": [
      99
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      107,
      108,
      109
     ]
    },
    "pystan.misc.read_rdump": {
     "line number": [
      106
     ]
    },
    "pystan.misc.stan_rdump": {
     "line number": [
      105
     ]
    },
    "pystan.tests.test_misc.os": {
     "line number": [
      104
     ]
    },
    "pystan.tests.test_misc.tempfile": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_misc.TestMisc.test_stan_rdump": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      69,
      72
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      55,
      62,
      63,
      68,
      71
     ]
    },
    "numpy.array": {
     "line number": [
      55,
      62,
      63
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      60,
      66
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      69,
      72
     ]
    },
    "pystan.misc.read_rdump": {
     "line number": [
      59,
      65
     ]
    },
    "pystan.misc.stan_rdump": {
     "line number": [
      58,
      64,
      69,
      72
     ]
    },
    "pystan.tests.test_misc.os": {
     "line number": [
      57
     ]
    },
    "pystan.tests.test_misc.tempfile": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_misc.TestMisc.test_stan_rdump_array": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      75
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      78
     ]
    },
    "pystan.misc._dict_to_rdump": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_misc.TestMisc.test_stan_read_rdump_array": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      95
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      96
     ]
    },
    "open": {
     "line number": [
      92
     ]
    },
    "pystan.misc.read_rdump": {
     "line number": [
      94
     ]
    },
    "pystan.tests.test_misc.os": {
     "line number": [
      91
     ]
    },
    "pystan.tests.test_misc.tempfile": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_misc.is_valid_seed": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "int": {
     "line number": [
      14
     ]
    },
    "isinstance": {
     "line number": [
      14
     ]
    },
    "pystan.constants.MAX_UINT": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_misc.misc": {
  "data": {
   "shadows": "pystan.misc"
  },
  "type": "import"
 },
 "pystan.tests.test_misc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystan.tests.test_misc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pystan.tests.test_misc.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pystan.tests.test_misc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pystan.tests.test_misc_args": {
  "data": {},
  "type": "module"
 },
 "pystan.tests.test_misc_args.PY2": {
  "data": {
   "shadows": "pystan._compat.PY2"
  },
  "type": "import"
 },
 "pystan.tests.test_misc_args.TestArgs": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "pystan.tests.test_misc_args.unittest": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_misc_args.TestArgs.setUpClass": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      10
     ]
    },
    "pystan.tests.test_misc_args.pystan": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_misc_args.TestArgs.test_control": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      18,
      21,
      24
     ]
    },
    "assertRaisesRegex": {
     "line number": [
      18,
      21,
      24
     ]
    },
    "dict": {
     "line number": [
      22
     ]
    },
    "pystan._compat.PY2": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_misc_args.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystan.tests.test_misc_args.pystan": {
  "data": {
   "shadows": "pystan"
  },
  "type": "import"
 },
 "pystan.tests.test_misc_args.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pystan.tests.test_optimizing_example": {
  "data": {},
  "type": "module"
 },
 "pystan.tests.test_optimizing_example.TestOptimizingExample": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "pystan.tests.test_optimizing_example.unittest": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_optimizing_example.TestOptimizingExample.setUpClass": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      11
     ]
    },
    "pystan.tests.test_optimizing_example.pystan": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_optimizing_example.TestOptimizingExample.test_optimizing": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      32
     ]
    },
    "len": {
     "line number": [
      32
     ]
    },
    "numpy.mean": {
     "line number": [
      33
     ]
    },
    "numpy.random.normal": {
     "line number": [
      31
     ]
    },
    "numpy.random.seed": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_optimizing_example.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystan.tests.test_optimizing_example.pystan": {
  "data": {
   "shadows": "pystan"
  },
  "type": "import"
 },
 "pystan.tests.test_optimizing_example.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pystan.tests.test_pickle": {
  "data": {},
  "type": "module"
 },
 "pystan.tests.test_pickle.TestPickle": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "pystan.tests.test_pickle.unittest": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_pickle.TestPickle.setUpClass": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      12
     ]
    },
    "pystan.tests.test_pickle.os": {
     "line number": [
      14
     ]
    },
    "pystan.tests.test_pickle.tempfile": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_pickle.TestPickle.test_model_unique_names": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "pystan.tests.test_pickle.pystan": {
     "line number": [
      85,
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_pickle.TestPickle.test_pickle_fit": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "pystan.tests.test_pickle.pickle": {
     "line number": [
      48,
      51,
      59,
      60
     ]
    },
    "pystan.tests.test_pickle.pystan": {
     "line number": [
      40
     ]
    },
    "pystan.tests.test_pickle.sys": {
     "line number": [
      55,
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_pickle.TestPickle.test_pickle_model": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "len": {
     "line number": [
      35
     ]
    },
    "open": {
     "line number": [
      23,
      28
     ]
    },
    "pystan.tests.test_pickle.pickle": {
     "line number": [
      24,
      29
     ]
    },
    "pystan.tests.test_pickle.pystan": {
     "line number": [
      20
     ]
    },
    "pystan.tests.test_pickle.sys": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_pickle.TestPickle.test_pickle_model_and_reload": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "open": {
     "line number": [
      69,
      71,
      76,
      79
     ]
    },
    "pystan.tests.test_pickle.os": {
     "line number": [
      66
     ]
    },
    "pystan.tests.test_pickle.pickle": {
     "line number": [
      70,
      72,
      77,
      80
     ]
    },
    "pystan.tests.test_pickle.pystan": {
     "line number": [
      68
     ]
    },
    "pystan.tests.test_pickle.tempfile": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_pickle.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pystan.tests.test_pickle.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pystan.tests.test_pickle.pystan": {
  "data": {
   "shadows": "pystan"
  },
  "type": "import"
 },
 "pystan.tests.test_pickle.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pystan.tests.test_pickle.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pystan.tests.test_pickle.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pystan.tests.test_posterior_means": {
  "data": {},
  "type": "module"
 },
 "pystan.tests.test_posterior_means.TestPosteriorMeans": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "pystan.tests.test_posterior_means.unittest": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_posterior_means.TestPosteriorMeans.setUpClass": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      11
     ]
    },
    "numpy.random.randint": {
     "line number": [
      37
     ]
    },
    "pystan.tests.test_posterior_means.pystan": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_posterior_means.TestPosteriorMeans.test_posterior_means": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "pystan.tests.test_posterior_means.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystan.tests.test_posterior_means.pystan": {
  "data": {
   "shadows": "pystan"
  },
  "type": "import"
 },
 "pystan.tests.test_posterior_means.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pystan.tests.test_rstan_getting_started": {
  "data": {},
  "type": "module"
 },
 "pystan.tests.test_rstan_getting_started.TestRStanGettingStarted": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "pystan.tests.test_rstan_getting_started.unittest": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_rstan_getting_started.TestRStanGettingStarted.setUpClass": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      30
     ]
    },
    "pystan.tests.test_rstan_getting_started.pystan": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_rstan_getting_started.TestRStanGettingStarted.test_sampling_parallel": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "pystan.tests.test_rstan_getting_started.validate_data": {
     "line number": [
      86,
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_rstan_getting_started.TestRStanGettingStarted.test_stan": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "pystan.tests.test_rstan_getting_started.validate_data": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_rstan_getting_started.TestRStanGettingStarted.test_stan_file": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "pystan.tests.test_rstan_getting_started.pystan": {
     "line number": [
      72
     ]
    },
    "pystan.tests.test_rstan_getting_started.tempfile": {
     "line number": [
      70
     ]
    },
    "pystan.tests.test_rstan_getting_started.validate_data": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_rstan_getting_started.TestRStanGettingStarted.test_stan_reuse_fit": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "pystan.tests.test_rstan_getting_started.pystan": {
     "line number": [
      78
     ]
    },
    "pystan.tests.test_rstan_getting_started.validate_data": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_rstan_getting_started.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystan.tests.test_rstan_getting_started.pystan": {
  "data": {
   "shadows": "pystan"
  },
  "type": "import"
 },
 "pystan.tests.test_rstan_getting_started.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pystan.tests.test_rstan_getting_started.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pystan.tests.test_rstan_getting_started.validate_data": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "all": {
     "line number": [
      18,
      19,
      20,
      21
     ]
    },
    "numpy.mean": {
     "line number": [
      16,
      17,
      18,
      19,
      20,
      21
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      12,
      13,
      14,
      15,
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_rstan_stan_args": {
  "data": {},
  "type": "module"
 },
 "pystan.tests.test_rstan_stan_args.TestPyStanArgs": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "pystan.tests.test_rstan_stan_args.unittest": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_rstan_stan_args.TestPyStanArgs.test_stan_args_basic": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      29
     ]
    },
    "numpy.array": {
     "line number": [
      13
     ]
    },
    "pystan.tests.test_rstan_stan_args.pystan": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_rstan_stan_args.TestPyStanArgs.test_stan_args_optimizing": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      45,
      49,
      53,
      57,
      62
     ]
    },
    "pystan.tests.test_rstan_stan_args.pystan": {
     "line number": [
      45,
      47,
      49,
      51,
      53,
      55,
      57,
      59,
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_rstan_stan_args.TestPyStanArgs.test_stan_args_sampling": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      69,
      73,
      79,
      82,
      87,
      90,
      93,
      93,
      97,
      97,
      102,
      102,
      107,
      107
     ]
    },
    "pystan.tests.test_rstan_stan_args.pystan": {
     "line number": [
      69,
      73,
      79,
      80,
      82,
      83,
      87,
      88,
      90,
      91,
      93,
      94,
      97,
      98,
      100,
      102,
      103,
      105,
      107,
      109,
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_rstan_stan_args.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystan.tests.test_rstan_stan_args.pystan": {
  "data": {
   "shadows": "pystan"
  },
  "type": "import"
 },
 "pystan.tests.test_rstan_stan_args.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pystan.tests.test_rstan_stanfit": {
  "data": {},
  "type": "module"
 },
 "pystan.tests.test_rstan_stanfit.PY2": {
  "data": {
   "shadows": "pystan._compat.PY2"
  },
  "type": "import"
 },
 "pystan.tests.test_rstan_stanfit.StanModel": {
  "data": {
   "shadows": "pystan.StanModel"
  },
  "type": "import"
 },
 "pystan.tests.test_rstan_stanfit.TestStanfit": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "pystan.tests.test_rstan_stanfit.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_rstan_stanfit.TestStanfit.test_grad_log": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      58,
      61,
      63,
      65
     ]
    },
    "log_prob_fun": {
     "line number": [
      62,
      64
     ]
    },
    "log_prob_grad_fun": {
     "line number": [
      66
     ]
    },
    "numpy.array": {
     "line number": [
      27
     ]
    },
    "numpy.log": {
     "line number": [
      62,
      64,
      66
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      66
     ]
    },
    "pystan.stan": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_rstan_stanfit.TestStanfit.test_grad_log.log_prob_fun": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "len": {
     "line number": [
      45
     ]
    },
    "numpy.exp": {
     "line number": [
      44
     ]
    },
    "numpy.log": {
     "line number": [
      45,
      47
     ]
    },
    "numpy.sum": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_rstan_stanfit.TestStanfit.test_grad_log.log_prob_grad_fun": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "len": {
     "line number": [
      52
     ]
    },
    "numpy.exp": {
     "line number": [
      51
     ]
    },
    "numpy.sum": {
     "line number": [
      52,
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_rstan_stanfit.TestStanfit.test_init_zero_exception_inf_grad": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      23
     ]
    },
    "pystan.StanModel": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_rstan_stanfit.TestStanfit.test_specify_args": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      84,
      85,
      87,
      88,
      90
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      92
     ]
    },
    "pystan.stan": {
     "line number": [
      84,
      87,
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_rstan_stanfit.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystan.tests.test_rstan_stanfit.stan": {
  "data": {
   "shadows": "pystan.stan"
  },
  "type": "import"
 },
 "pystan.tests.test_rstan_stanfit.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pystan.tests.test_rstan_testoptim": {
  "data": {},
  "type": "module"
 },
 "pystan.tests.test_rstan_testoptim.TestOptim": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "pystan.tests.test_rstan_testoptim.unittest": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_rstan_testoptim.TestOptim.setUpClass": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      11
     ]
    },
    "numpy.random.normal": {
     "line number": [
      31
     ]
    },
    "numpy.random.seed": {
     "line number": [
      30
     ]
    },
    "pystan.tests.test_rstan_testoptim.pystan": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_rstan_testoptim.TestOptim.test_optim_stdnorm": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "pystan.tests.test_rstan_testoptim.TestOptim.test_optim_stdnorm_bfgs": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "print": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_rstan_testoptim.TestOptim.test_optim_stdnorm_from_file": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "pystan.tests.test_rstan_testoptim.pystan": {
     "line number": [
      44,
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_rstan_testoptim.TestOptim.test_optim_stdnorm_lbfgs": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "pystan.tests.test_rstan_testoptim.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pystan.tests.test_rstan_testoptim.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystan.tests.test_rstan_testoptim.pystan": {
  "data": {
   "shadows": "pystan"
  },
  "type": "import"
 },
 "pystan.tests.test_rstan_testoptim.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pystan.tests.test_stan_file_io": {
  "data": {},
  "type": "module"
 },
 "pystan.tests.test_stan_file_io.TestStanFileIO": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "pystan.tests.test_stan_file_io.unittest": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_stan_file_io.TestStanFileIO.test_stan_model_from_file": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "numpy.mean": {
     "line number": [
      39,
      40,
      46,
      50,
      52,
      56,
      60,
      61,
      67,
      71,
      73,
      77
     ]
    },
    "numpy.var": {
     "line number": [
      41,
      53,
      62,
      74
     ]
    },
    "pystan.stan": {
     "line number": [
      37,
      58
     ]
    },
    "pystan.stanc": {
     "line number": [
      36
     ]
    },
    "pystan.tests.test_stan_file_io.io": {
     "line number": [
      33
     ]
    },
    "pystan.tests.test_stan_file_io.os": {
     "line number": [
      32,
      79
     ]
    },
    "pystan.tests.test_stan_file_io.tempfile": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_stan_file_io.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pystan.tests.test_stan_file_io.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pystan.tests.test_stan_file_io.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pystan.tests.test_stan_file_io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystan.tests.test_stan_file_io.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pystan.tests.test_stan_file_io.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pystan.tests.test_stan_file_io.stan": {
  "data": {
   "shadows": "pystan.stan"
  },
  "type": "import"
 },
 "pystan.tests.test_stan_file_io.stanc": {
  "data": {
   "shadows": "pystan.stanc"
  },
  "type": "import"
 },
 "pystan.tests.test_stan_file_io.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pystan.tests.test_stan_file_io.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "pystan.tests.test_stan_file_io.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pystan.tests.test_stanc": {
  "data": {},
  "type": "module"
 },
 "pystan.tests.test_stanc.PY2": {
  "data": {
   "shadows": "pystan._compat.PY2"
  },
  "type": "import"
 },
 "pystan.tests.test_stanc.StanModel": {
  "data": {
   "shadows": "pystan.StanModel"
  },
  "type": "import"
 },
 "pystan.tests.test_stanc.TestStanc": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "pystan.tests.test_stanc.unittest": {
     "line number": [
      7
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_stanc.TestStanc.test_stanc": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "pystan.stanc": {
     "line number": [
      11
     ]
    },
    "sorted": {
     "line number": [
      12,
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_stanc.TestStanc.test_stanc_exception": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      20,
      22
     ]
    },
    "assertRaisesRegex": {
     "line number": [
      20,
      22
     ]
    },
    "pystan.StanModel": {
     "line number": [
      23
     ]
    },
    "pystan._compat.PY2": {
     "line number": [
      19
     ]
    },
    "pystan.stanc": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_stanc.TestStanc.test_stanc_exception_semicolon": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      36,
      38
     ]
    },
    "assertRaisesRegex": {
     "line number": [
      35,
      36,
      38
     ]
    },
    "pystan.StanModel": {
     "line number": [
      39
     ]
    },
    "pystan._compat.PY2": {
     "line number": [
      35
     ]
    },
    "pystan.stanc": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_stanc.stanc": {
  "data": {
   "shadows": "pystan.stanc"
  },
  "type": "import"
 },
 "pystan.tests.test_stanc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pystan.tests.test_user_inits": {
  "data": {},
  "type": "module"
 },
 "pystan.tests.test_user_inits.TestUserInits": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "pystan.tests.test_user_inits.unittest": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_user_inits.TestUserInits.setUpClass": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      10
     ]
    },
    "dict": {
     "line number": [
      23
     ]
    },
    "pystan.tests.test_user_inits.pystan": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_user_inits.TestUserInits.test_user_init": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "all": {
     "line number": [
      32
     ]
    },
    "dict": {
     "line number": [
      28,
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_user_inits.TestUserInits.test_user_init_unspecified": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      71
     ]
    },
    "pystan.tests.test_user_inits.pystan": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_user_inits.TestUserInits.test_user_initfun": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_user_inits.TestUserInits.test_user_initfun.make_inits": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_user_inits.TestUserInits.test_user_initfun_chainid": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "zip": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_user_inits.TestUserInits.test_user_initfun_chainid.make_inits": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_user_inits.TestUserInitsMatrix": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "pystan.tests.test_user_inits.unittest": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_user_inits.TestUserInitsMatrix.setUpClass": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      77
     ]
    },
    "dict": {
     "line number": [
      94
     ]
    },
    "pystan.tests.test_user_inits.pystan": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_user_inits.TestUserInitsMatrix.test_user_init": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      100,
      104
     ]
    },
    "numpy.ones": {
     "line number": [
      98,
      102
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      101,
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_user_inits.TestUserInitsMatrix.test_user_initfun": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      116
     ]
    },
    "numpy.ones": {
     "line number": [
      110
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_user_inits.TestUserInitsMatrix.test_user_initfun.make_inits": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_user_inits.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystan.tests.test_user_inits.pystan": {
  "data": {
   "shadows": "pystan"
  },
  "type": "import"
 },
 "pystan.tests.test_user_inits.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pystan.tests.test_utf8": {
  "data": {},
  "type": "module"
 },
 "pystan.tests.test_utf8.PY2": {
  "data": {
   "shadows": "pystan._compat.PY2"
  },
  "type": "import"
 },
 "pystan.tests.test_utf8.StanModel": {
  "data": {
   "shadows": "pystan.StanModel"
  },
  "type": "import"
 },
 "pystan.tests.test_utf8.TestUTF8": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "pystan.tests.test_utf8.unittest": {
     "line number": [
      6
     ]
    },
    "sorted": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_utf8.TestUTF8.test_utf8": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "pystan.stanc": {
     "line number": [
      12
     ]
    },
    "sorted": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_utf8.TestUTF8.test_utf8_inprogramcode": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      34
     ]
    },
    "assertRaisesRegex": {
     "line number": [
      34
     ]
    },
    "pystan._compat.PY2": {
     "line number": [
      33
     ]
    },
    "pystan.stanc": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_utf8.TestUTF8.test_utf8_linecomment": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "pystan.stanc": {
     "line number": [
      19
     ]
    },
    "sorted": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_utf8.TestUTF8.test_utf8_multilinecomment": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "pystan.stanc": {
     "line number": [
      26
     ]
    },
    "sorted": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_utf8.stanc": {
  "data": {
   "shadows": "pystan.stanc"
  },
  "type": "import"
 },
 "pystan.tests.test_utf8.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pystan.tests.test_vb": {
  "data": {},
  "type": "module"
 },
 "pystan.tests.test_vb.TestNormalVB": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "pystan.tests.test_vb.unittest": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "pystan.tests.test_vb.TestNormalVB.setUpClass": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      12
     ]
    },
    "pystan.tests.test_vb.pystan": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_vb.TestNormalVB.test_vb_default": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "open": {
     "line number": [
      21,
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_vb.TestNormalVB.test_vb_diagnostic_file": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "pystan.tests.test_vb.os": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_vb.TestNormalVB.test_vb_fullrank": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "pystan.tests.test_vb.TestNormalVB.test_vb_sample_file": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "pystan.tests.test_vb.os": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "pystan.tests.test_vb.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pystan.tests.test_vb.pystan": {
  "data": {
   "shadows": "pystan"
  },
  "type": "import"
 },
 "pystan.tests.test_vb.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 }
}