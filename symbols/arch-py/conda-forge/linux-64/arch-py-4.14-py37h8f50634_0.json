{
 "arch": {
  "data": {
   "symbols_in_volume": [
    "arch._version.get_versions"
   ]
  },
  "type": "module"
 },
 "arch.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "arch.__version__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "arch._version": {
  "data": {},
  "type": "module"
 },
 "arch._version.get_versions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "arch._version.json",
    "arch._version.version_json"
   ]
  },
  "type": "function"
 },
 "arch._version.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "arch._version.version_json": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "arch.arch_model": {
  "data": {
   "shadows": "arch.univariate.mean.arch_model"
  },
  "type": "import"
 },
 "arch.bootstrap": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "arch.bootstrap.COMPILED_SAMPLERS",
    "arch.bootstrap.__all__"
   ]
  },
  "type": "module"
 },
 "arch.bootstrap.COMPILED_SAMPLERS": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "arch.bootstrap.CircularBlockBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.base.CircularBlockBootstrap"
  },
  "type": "import"
 },
 "arch.bootstrap.IIDBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.base.IIDBootstrap"
  },
  "type": "import"
 },
 "arch.bootstrap.IndependentSamplesBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.base.IndependentSamplesBootstrap"
  },
  "type": "import"
 },
 "arch.bootstrap.MCS": {
  "data": {
   "shadows": "arch.bootstrap.multiple_comparison.MCS"
  },
  "type": "import"
 },
 "arch.bootstrap.MovingBlockBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.base.MovingBlockBootstrap"
  },
  "type": "import"
 },
 "arch.bootstrap.RealityCheck": {
  "data": {
   "shadows": "arch.bootstrap.multiple_comparison.RealityCheck"
  },
  "type": "import"
 },
 "arch.bootstrap.SPA": {
  "data": {
   "shadows": "arch.bootstrap.multiple_comparison.SPA"
  },
  "type": "import"
 },
 "arch.bootstrap.StationaryBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.base.StationaryBootstrap"
  },
  "type": "import"
 },
 "arch.bootstrap.StepM": {
  "data": {
   "shadows": "arch.bootstrap.multiple_comparison.StepM"
  },
  "type": "import"
 },
 "arch.bootstrap.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "arch.bootstrap._samplers": {
  "data": {
   "shadows": "arch.bootstrap._samplers"
  },
  "type": "import"
 },
 "arch.bootstrap._samplers_python": {
  "data": {
   "shadows": "arch.bootstrap._samplers_python"
  },
  "type": "import"
 },
 "arch.bootstrap._samplers_python.NDArray": {
  "data": {
   "shadows": "arch.typing.NDArray"
  },
  "type": "import"
 },
 "arch.bootstrap._samplers_python.jit": {
  "data": {
   "shadows": "arch.compat.numba.jit"
  },
  "type": "import"
 },
 "arch.bootstrap._samplers_python.stationary_bootstrap_sample": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "arch.bootstrap._samplers_python.stationary_bootstrap_sample_python": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "arch.bootstrap.base.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "arch.bootstrap.base.ArrayLike": {
  "data": {
   "shadows": "arch.typing.ArrayLike"
  },
  "type": "import"
 },
 "arch.bootstrap.base.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "arch.bootstrap.base.CircularBlockBootstrap": {
  "data": {
   "lineno": 1285,
   "symbols_in_volume": [
    "arch.bootstrap.base.IIDBootstrap"
   ]
  },
  "type": "class"
 },
 "arch.bootstrap.base.CircularBlockBootstrap.__init__": {
  "data": {
   "lineno": 1355,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "int",
    "numpy.random.RandomState",
    "super",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.CircularBlockBootstrap.__str__": {
  "data": {
   "lineno": 1362,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.CircularBlockBootstrap._repr_html": {
  "data": {
   "lineno": 1369,
   "symbols_in_volume": [
    "hex",
    "id",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.CircularBlockBootstrap.update_indices": {
  "data": {
   "lineno": 1377,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "arch.bootstrap.base.DocStringInheritor": {
  "data": {
   "shadows": "arch.utility.array.DocStringInheritor"
  },
  "type": "import"
 },
 "arch.bootstrap.base.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "arch.bootstrap.base.IIDBootstrap": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "arch.utility.array.DocStringInheritor",
    "object"
   ]
  },
  "type": "class"
 },
 "arch.bootstrap.base.IIDBootstrap.__init__": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "arch.typing.ArrayLike",
    "arch.typing.NDArray",
    "getattr",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.arange",
    "numpy.random.RandomState",
    "typing.Callable",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.__repr__": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "hex",
    "id",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.__str__": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap._bca_acceleration": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "arch.bootstrap.base._get_acceleration",
    "arch.bootstrap.base._loo_jackknife",
    "arch.typing.ArrayLike",
    "float",
    "func",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap._bca_bias": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "scipy.stats.norm.ppf"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap._check_data": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "TypeError",
    "arch.utility.exceptions.arg_type_error.format",
    "arch.utility.exceptions.kwarg_type_error.format",
    "enumerate",
    "isinstance",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series",
    "type"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap._construct_bootstrap_estimates": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "arch.bootstrap.base._add_extra_kwargs",
    "arch.typing.ArrayLike",
    "arch.utility.exceptions.StudentizationError",
    "arch.utility.exceptions.studentization_error.format",
    "func",
    "int",
    "numpy.abs",
    "numpy.any",
    "numpy.asarray",
    "numpy.diag",
    "numpy.double",
    "numpy.finfo",
    "numpy.isscalar",
    "numpy.sqrt",
    "numpy.zeros",
    "std_err_func",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap._repr_html": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "hex",
    "id",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap._resample": {
  "data": {
   "lineno": 1104,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "setattr",
    "str",
    "tuple",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.apply": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "AttributeError",
    "IndexError",
    "arch.bootstrap.base._add_extra_kwargs",
    "arch.typing.ArrayLike",
    "arch.typing.NDArray",
    "func",
    "int",
    "numpy.zeros",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.bootstrap": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "int",
    "range",
    "str",
    "typing.Dict",
    "typing.Generator",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.clone": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "arch.bootstrap.base.copy",
    "arch.typing.ArrayLike",
    "int",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.conf_int": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "arch.bootstrap.base.warnings",
    "arch.typing.ArrayLike",
    "arch.typing.NDArray",
    "bool",
    "float",
    "func",
    "int",
    "len",
    "list",
    "max",
    "min",
    "numpy.array",
    "numpy.diag",
    "numpy.inf",
    "numpy.percentile",
    "numpy.sqrt",
    "numpy.vstack",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "scipy.stats.norm.cdf",
    "scipy.stats.norm.ppf",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.cov": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "arch.typing.NDArray",
    "bool",
    "float",
    "func",
    "int",
    "numpy.mean",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.get_state": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.index": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.random_state": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.reset": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "bool",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.seed": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "int",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.set_state": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.update_indices": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "arch.typing.NDArray"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.var": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "arch.typing.NDArray",
    "bool",
    "float",
    "func",
    "int",
    "numpy.mean",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IndependentSamplesBootstrap": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": [
    "arch.bootstrap.base.IIDBootstrap"
   ]
  },
  "type": "class"
 },
 "arch.bootstrap.base.IndependentSamplesBootstrap.__init__": {
  "data": {
   "lineno": 1202,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "len",
    "numpy.random.RandomState",
    "super",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IndependentSamplesBootstrap._resample": {
  "data": {
   "lineno": 1260,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "enumerate",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "setattr",
    "str",
    "tuple",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IndependentSamplesBootstrap.index": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "property",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IndependentSamplesBootstrap.reset": {
  "data": {
   "lineno": 1241,
   "symbols_in_volume": [
    "bool",
    "numpy.arange",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IndependentSamplesBootstrap.update_indices": {
  "data": {
   "lineno": 1211,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "randint",
    "range",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "arch.bootstrap.base.MOONBootstrap": {
  "data": {
   "lineno": 1567,
   "symbols_in_volume": [
    "arch.bootstrap.base.IIDBootstrap"
   ]
  },
  "type": "class"
 },
 "arch.bootstrap.base.MOONBootstrap.__init__": {
  "data": {
   "lineno": 1568,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "int",
    "numpy.random.RandomState",
    "super",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.MOONBootstrap.update_indices": {
  "data": {
   "lineno": 1574,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.MovingBlockBootstrap": {
  "data": {
   "lineno": 1475,
   "symbols_in_volume": [
    "arch.bootstrap.base.CircularBlockBootstrap"
   ]
  },
  "type": "class"
 },
 "arch.bootstrap.base.MovingBlockBootstrap.__init__": {
  "data": {
   "lineno": 1547,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "int",
    "numpy.random.RandomState",
    "super",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.MovingBlockBootstrap.update_indices": {
  "data": {
   "lineno": 1552,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.NDArray": {
  "data": {
   "shadows": "arch.typing.NDArray"
  },
  "type": "import"
 },
 "arch.bootstrap.base.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "arch.bootstrap.base.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.bootstrap.base.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "arch.bootstrap.base.StationaryBootstrap": {
  "data": {
   "lineno": 1392,
   "symbols_in_volume": [
    "arch.bootstrap.base.CircularBlockBootstrap"
   ]
  },
  "type": "class"
 },
 "arch.bootstrap.base.StationaryBootstrap.__init__": {
  "data": {
   "lineno": 1462,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "int",
    "numpy.random.RandomState",
    "super",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.StationaryBootstrap.update_indices": {
  "data": {
   "lineno": 1468,
   "symbols_in_volume": [
    "arch.bootstrap._samplers_python.stationary_bootstrap_sample",
    "arch.typing.NDArray",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.StudentizationError": {
  "data": {
   "shadows": "arch.utility.exceptions.StudentizationError"
  },
  "type": "import"
 },
 "arch.bootstrap.base.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "arch.bootstrap.base.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "arch.bootstrap.base.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "arch.bootstrap.base._add_extra_kwargs": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base._get_acceleration": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "RuntimeError",
    "arch.typing.NDArray",
    "float",
    "numpy.abs",
    "numpy.atleast_1d",
    "numpy.finfo",
    "numpy.float64",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base._loo_jackknife": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "arch.typing.NDArray",
    "func",
    "int",
    "isinstance",
    "numpy.array",
    "numpy.r_",
    "pandas.DataFrame",
    "pandas.Series",
    "range",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base._single_optimal_block": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "int",
    "max",
    "min",
    "numpy.abs",
    "numpy.all",
    "numpy.ceil",
    "numpy.log10",
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.arg_type_error": {
  "data": {
   "shadows": "arch.utility.exceptions.arg_type_error"
  },
  "type": "import"
 },
 "arch.bootstrap.base.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "arch.bootstrap.base.ensure2d": {
  "data": {
   "shadows": "arch.utility.array.ensure2d"
  },
  "type": "import"
 },
 "arch.bootstrap.base.kwarg_type_error": {
  "data": {
   "shadows": "arch.utility.exceptions.kwarg_type_error"
  },
  "type": "import"
 },
 "arch.bootstrap.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.bootstrap.base.optimal_block_length": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "arch.bootstrap.base._single_optimal_block",
    "arch.typing.ArrayLike",
    "arch.utility.array.ensure2d",
    "isinstance",
    "list",
    "numpy.asarray",
    "pandas.DataFrame",
    "pandas.Series",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.bootstrap.base.stationary_bootstrap_sample": {
  "data": {
   "shadows": "arch.bootstrap._samplers_python.stationary_bootstrap_sample"
  },
  "type": "import"
 },
 "arch.bootstrap.base.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "arch.bootstrap.base.studentization_error": {
  "data": {
   "shadows": "arch.utility.exceptions.studentization_error"
  },
  "type": "import"
 },
 "arch.bootstrap.base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "arch.bootstrap.multiple_comparison": {
  "data": {},
  "type": "module"
 },
 "arch.bootstrap.multiple_comparison.ArrayLike": {
  "data": {
   "shadows": "arch.typing.ArrayLike"
  },
  "type": "import"
 },
 "arch.bootstrap.multiple_comparison.CircularBlockBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.base.CircularBlockBootstrap"
  },
  "type": "import"
 },
 "arch.bootstrap.multiple_comparison.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "arch.bootstrap.multiple_comparison.DocStringInheritor": {
  "data": {
   "shadows": "arch.utility.array.DocStringInheritor"
  },
  "type": "import"
 },
 "arch.bootstrap.multiple_comparison.Hashable": {
  "data": {
   "shadows": "typing.Hashable"
  },
  "type": "import"
 },
 "arch.bootstrap.multiple_comparison.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "arch.bootstrap.multiple_comparison.MCS": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.MultipleComparison"
   ]
  },
  "type": "class"
 },
 "arch.bootstrap.multiple_comparison.MCS.__init__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ValueError",
    "arch.bootstrap.base.CircularBlockBootstrap",
    "arch.bootstrap.base.MovingBlockBootstrap",
    "arch.bootstrap.base.StationaryBootstrap",
    "arch.typing.ArrayLike",
    "arch.typing.NDArray",
    "arch.utility.array.ensure2d",
    "dict",
    "float",
    "hex",
    "id",
    "int",
    "numpy.arange",
    "numpy.asarray",
    "numpy.sqrt",
    "str",
    "super",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.MCS._compute_max": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "enumerate",
    "numpy.argwhere",
    "numpy.bool",
    "numpy.max",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.MCS._compute_r": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "enumerate",
    "numpy.argwhere",
    "numpy.bool",
    "numpy.eye",
    "numpy.max",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.MCS._format_pvalues": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "numpy.max",
    "pandas.DataFrame",
    "pandas.Series",
    "range",
    "typing.Sequence",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.MCS._has_been_computed": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.MCS.compute": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.MCS.excluded": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "list",
    "property",
    "typing.Hashable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.MCS.included": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "list",
    "property",
    "typing.Hashable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.MCS.pvalues": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.MovingBlockBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.base.MovingBlockBootstrap"
  },
  "type": "import"
 },
 "arch.bootstrap.multiple_comparison.MultipleComparison": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.bootstrap.multiple_comparison.MultipleComparison.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "arch.bootstrap.base.CircularBlockBootstrap",
    "numpy.ones",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.MultipleComparison.__repr__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison._info_to_str",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.MultipleComparison.__str__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison._info_to_str",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.MultipleComparison._repr_html_": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison._info_to_str",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.MultipleComparison.reset": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.MultipleComparison.seed": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "int",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.NDArray": {
  "data": {
   "shadows": "arch.typing.NDArray"
  },
  "type": "import"
 },
 "arch.bootstrap.multiple_comparison.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "arch.bootstrap.multiple_comparison.RealityCheck": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.SPA"
   ]
  },
  "type": "class"
 },
 "arch.bootstrap.multiple_comparison.SPA": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.MultipleComparison",
    "arch.utility.array.DocStringInheritor"
   ]
  },
  "type": "class"
 },
 "arch.bootstrap.multiple_comparison.SPA.__init__": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "ValueError",
    "arch.bootstrap.base.CircularBlockBootstrap",
    "arch.bootstrap.base.MovingBlockBootstrap",
    "arch.bootstrap.base.StationaryBootstrap",
    "arch.typing.ArrayLike",
    "arch.typing.NDArray",
    "arch.utility.array.ensure2d",
    "bool",
    "dict",
    "float",
    "hex",
    "id",
    "int",
    "numpy.asarray",
    "numpy.bool",
    "numpy.ones",
    "numpy.sqrt",
    "str",
    "super",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.SPA._check_column_validity": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "numpy.log",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.SPA._check_compute": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.SPA._compute_variance": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.SPA._simulate_values": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "numpy.logical_not",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.SPA.better_models": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.NDArray",
    "float",
    "isinstance",
    "list",
    "numpy.argwhere",
    "numpy.logical_and",
    "pandas.DataFrame",
    "str",
    "typing.Hashable",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.SPA.compute": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "dict",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.SPA.critical_values": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "list",
    "numpy.max",
    "numpy.percentile",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.SPA.pvalues": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.SPA.reset": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.SPA",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.SPA.subset": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "arch.typing.NDArray"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "arch.bootstrap.multiple_comparison.StationaryBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.base.StationaryBootstrap"
  },
  "type": "import"
 },
 "arch.bootstrap.multiple_comparison.StepM": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.MultipleComparison"
   ]
  },
  "type": "class"
 },
 "arch.bootstrap.multiple_comparison.StepM.__init__": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "SPA",
    "arch.bootstrap.multiple_comparison.StepM",
    "arch.typing.ArrayLike",
    "arch.utility.array.ensure2d",
    "bool",
    "dict",
    "float",
    "hex",
    "id",
    "int",
    "str",
    "super",
    "typing.Hashable",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.StepM.compute": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.bool",
    "numpy.ones",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.StepM.superior_models": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "RuntimeError",
    "property",
    "typing.Hashable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "arch.bootstrap.multiple_comparison.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "arch.bootstrap.multiple_comparison.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "arch.bootstrap.multiple_comparison._info_to_str": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.ensure2d": {
  "data": {
   "shadows": "arch.utility.array.ensure2d"
  },
  "type": "import"
 },
 "arch.bootstrap.multiple_comparison.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.bootstrap.multiple_comparison.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.bootstrap.optimal_block_length": {
  "data": {
   "shadows": "arch.bootstrap.base.optimal_block_length"
  },
  "type": "import"
 },
 "arch.compat": {
  "data": {},
  "type": "module"
 },
 "arch.compat.numba": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "arch.compat.numba.f",
    "arch.compat.numba.fjit",
    "arch.compat.numba.functools",
    "numba.jit"
   ]
  },
  "type": "module"
 },
 "arch.compat.numba.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "arch.compat.numba.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "arch.compat.numba.PerformanceWarning": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "arch.compat.numba.__all__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "arch.compat.numba.f": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "arch.compat.numba.fjit": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "arch.compat.numba.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "arch.compat.numba.jit": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "arch.compat.numba.jit.wrapper": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "arch.compat.numba.PerformanceWarning",
    "arch.compat.numba.performance_warning",
    "arch.compat.numba.warnings",
    "func",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "arch.compat.numba.performance_warning": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "arch.compat.numba.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "arch.compat.pandas": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "arch.compat.pandas.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "arch.compat.pandas.is_datetime64_any_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_datetime64_any_dtype"
  },
  "type": "import"
 },
 "arch.compat.statsmodels": {
  "data": {},
  "type": "module"
 },
 "arch.compat.statsmodels.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "arch.compat.statsmodels.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "arch.compat.statsmodels.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "arch.compat.statsmodels.dataset_loader": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "TypeError",
    "numpy.recarray",
    "pandas.DataFrame",
    "typing.Any",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.compat.statsmodels.recarray": {
  "data": {
   "shadows": "numpy.recarray"
  },
  "type": "import"
 },
 "arch.conftest": {
  "data": {},
  "type": "module"
 },
 "arch.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.conftest.pytest_addoption": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "arch.conftest.pytest_configure": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "arch.conftest.pytest_plugins": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "arch.conftest.pytest_runtest_setup": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "arch.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "arch.covariance": {
  "data": {},
  "type": "module"
 },
 "arch.covariance.kernel": {
  "data": {},
  "type": "module"
 },
 "arch.covariance.kernel.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "arch.covariance.kernel.AbstractDocStringInheritor": {
  "data": {
   "shadows": "arch.utility.array.AbstractDocStringInheritor"
  },
  "type": "import"
 },
 "arch.covariance.kernel.Andrews": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "arch.covariance.kernel.QuadraticSpectral"
   ]
  },
  "type": "class"
 },
 "arch.covariance.kernel.ArrayLike": {
  "data": {
   "shadows": "arch.typing.ArrayLike"
  },
  "type": "import"
 },
 "arch.covariance.kernel.Bartlett": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "arch.covariance.kernel.CovarianceEstimator",
    "arch.covariance.kernel.bartlett_formula",
    "arch.utility.array.AbstractDocStringInheritor",
    "pandas.util._decorators.Substitution"
   ]
  },
  "type": "class"
 },
 "arch.covariance.kernel.Bartlett._weights": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "int",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.Bartlett.bandwidth_scale": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.Bartlett.kernel_const": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.Bartlett.rate": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.CovarianceEstimate": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.covariance.kernel.CovarianceEstimate.__init__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.CovarianceEstimate._wrap": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.typing.NDArrayOrFrame",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.CovarianceEstimate.long_run": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "arch.typing.NDArrayOrFrame",
    "arch.vendor.cached_property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.CovarianceEstimate.one_sided": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "arch.typing.NDArrayOrFrame",
    "arch.vendor.cached_property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.CovarianceEstimate.one_sided_strict": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "arch.typing.NDArrayOrFrame",
    "arch.vendor.cached_property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.CovarianceEstimate.short_run": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "arch.typing.NDArrayOrFrame",
    "arch.vendor.cached_property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.CovarianceEstimator": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "arch.covariance.kernel.CovarianceEstimator.__init__": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.ArrayLike",
    "arch.utility.array.ensure1d",
    "arch.utility.array.ensure2d",
    "bool",
    "float",
    "int",
    "numpy.all",
    "numpy.any",
    "numpy.asarray",
    "numpy.isscalar",
    "numpy.ones",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.CovarianceEstimator.__repr__": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "hex",
    "id",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.CovarianceEstimator.__str__": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.CovarianceEstimator._alpha_q": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.ceil",
    "numpy.squeeze",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.CovarianceEstimator._weights": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "arch.typing.NDArray"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.CovarianceEstimator.bandwidth": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.ceil",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.CovarianceEstimator.bandwidth_scale": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.CovarianceEstimator.centered": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.CovarianceEstimator.cov": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "arch.covariance.kernel.CovarianceEstimate",
    "arch.vendor.cached_property",
    "isinstance",
    "numpy.asarray",
    "numpy.zeros",
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.CovarianceEstimator.force_int": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.CovarianceEstimator.kernel_const": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.CovarianceEstimator.kernel_weights": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.vendor.cached_property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.CovarianceEstimator.name": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.CovarianceEstimator.opt_bandwidth": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "arch.vendor.cached_property",
    "float",
    "min",
    "numpy.ceil"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.CovarianceEstimator.rate": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "arch.covariance.kernel.Gallant": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "arch.covariance.kernel.Parzen"
   ]
  },
  "type": "class"
 },
 "arch.covariance.kernel.KERNELS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "arch.covariance.kernel.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "arch.covariance.kernel.NDArray": {
  "data": {
   "shadows": "arch.typing.NDArray"
  },
  "type": "import"
 },
 "arch.covariance.kernel.NDArrayOrFrame": {
  "data": {
   "shadows": "arch.typing.NDArrayOrFrame"
  },
  "type": "import"
 },
 "arch.covariance.kernel.NeweyWest": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "arch.covariance.kernel.Bartlett"
   ]
  },
  "type": "class"
 },
 "arch.covariance.kernel.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "arch.covariance.kernel.Parzen": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "arch.covariance.kernel.CovarianceEstimator",
    "arch.covariance.kernel.parzen_formula",
    "arch.utility.array.AbstractDocStringInheritor",
    "pandas.util._decorators.Substitution"
   ]
  },
  "type": "class"
 },
 "arch.covariance.kernel.Parzen._weights": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "int",
    "numpy.arange",
    "numpy.empty_like"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.Parzen.bandwidth_scale": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.Parzen.kernel_const": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.Parzen.rate": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.ParzenCauchy": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "arch.covariance.kernel.CovarianceEstimator",
    "arch.covariance.kernel.parzen_cauchy_formula",
    "arch.utility.array.AbstractDocStringInheritor",
    "pandas.util._decorators.Substitution"
   ]
  },
  "type": "class"
 },
 "arch.covariance.kernel.ParzenCauchy._weights": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "int",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.ParzenCauchy.bandwidth_scale": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.ParzenCauchy.kernel_const": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.ParzenCauchy.rate": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.ParzenGeometric": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "arch.covariance.kernel.CovarianceEstimator",
    "arch.covariance.kernel.parzen_geometric_formula",
    "arch.utility.array.AbstractDocStringInheritor",
    "pandas.util._decorators.Substitution"
   ]
  },
  "type": "class"
 },
 "arch.covariance.kernel.ParzenGeometric._weights": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "int",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.ParzenGeometric.bandwidth_scale": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.ParzenGeometric.kernel_const": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.ParzenGeometric.rate": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.ParzenRiesz": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "arch.covariance.kernel.CovarianceEstimator",
    "arch.covariance.kernel.parzen_reisz_formula",
    "arch.utility.array.AbstractDocStringInheritor",
    "pandas.util._decorators.Substitution"
   ]
  },
  "type": "class"
 },
 "arch.covariance.kernel.ParzenRiesz._weights": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "int",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.ParzenRiesz.bandwidth_scale": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.ParzenRiesz.kernel_const": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.ParzenRiesz.rate": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.QuadraticSpectral": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "arch.covariance.kernel.CovarianceEstimator",
    "arch.covariance.kernel.qs_formula",
    "arch.covariance.kernel.qs_name",
    "arch.utility.array.AbstractDocStringInheritor",
    "pandas.util._decorators.Substitution"
   ]
  },
  "type": "class"
 },
 "arch.covariance.kernel.QuadraticSpectral._weights": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "numpy.arange",
    "numpy.cos",
    "numpy.pi",
    "numpy.sin",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.QuadraticSpectral.bandwidth_scale": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.QuadraticSpectral.kernel_const": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.QuadraticSpectral.rate": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.Substitution": {
  "data": {
   "shadows": "pandas.util._decorators.Substitution"
  },
  "type": "import"
 },
 "arch.covariance.kernel.TukeyHamming": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "arch.covariance.kernel.CovarianceEstimator",
    "arch.covariance.kernel.tukey_hamming_formula",
    "arch.utility.array.AbstractDocStringInheritor",
    "pandas.util._decorators.Substitution"
   ]
  },
  "type": "class"
 },
 "arch.covariance.kernel.TukeyHamming._weights": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "int",
    "numpy.arange",
    "numpy.cos",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.TukeyHamming.bandwidth_scale": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.TukeyHamming.kernel_const": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.TukeyHamming.rate": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.TukeyHanning": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "arch.covariance.kernel.CovarianceEstimator",
    "arch.covariance.kernel.tukey_hanning_formula",
    "arch.utility.array.AbstractDocStringInheritor",
    "pandas.util._decorators.Substitution"
   ]
  },
  "type": "class"
 },
 "arch.covariance.kernel.TukeyHanning._weights": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "int",
    "numpy.arange",
    "numpy.cos",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.TukeyHanning.bandwidth_scale": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.TukeyHanning.kernel_const": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.TukeyHanning.rate": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.TukeyParzen": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "arch.covariance.kernel.CovarianceEstimator",
    "arch.covariance.kernel.tukey_parzen_formula",
    "arch.utility.array.AbstractDocStringInheritor",
    "pandas.util._decorators.Substitution"
   ]
  },
  "type": "class"
 },
 "arch.covariance.kernel.TukeyParzen._weights": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "int",
    "numpy.arange",
    "numpy.cos",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.TukeyParzen.bandwidth_scale": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.TukeyParzen.kernel_const": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.TukeyParzen.rate": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.covariance.kernel.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "arch.covariance.kernel.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "arch.covariance.kernel.bartlett_formula": {
  "data": {
   "lineno": 414
  },
  "type": "constant"
 },
 "arch.covariance.kernel.cached_property": {
  "data": {
   "shadows": "arch.vendor.cached_property"
  },
  "type": "import"
 },
 "arch.covariance.kernel.ensure1d": {
  "data": {
   "shadows": "arch.utility.array.ensure1d"
  },
  "type": "import"
 },
 "arch.covariance.kernel.ensure2d": {
  "data": {
   "shadows": "arch.utility.array.ensure2d"
  },
  "type": "import"
 },
 "arch.covariance.kernel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.covariance.kernel.parzen_cauchy_formula": {
  "data": {
   "lineno": 527
  },
  "type": "constant"
 },
 "arch.covariance.kernel.parzen_formula": {
  "data": {
   "lineno": 438
  },
  "type": "constant"
 },
 "arch.covariance.kernel.parzen_geometric_formula": {
  "data": {
   "lineno": 499
  },
  "type": "constant"
 },
 "arch.covariance.kernel.parzen_reisz_formula": {
  "data": {
   "lineno": 471
  },
  "type": "constant"
 },
 "arch.covariance.kernel.qs_formula": {
  "data": {
   "lineno": 640
  },
  "type": "constant"
 },
 "arch.covariance.kernel.qs_name": {
  "data": {
   "lineno": 639
  },
  "type": "constant"
 },
 "arch.covariance.kernel.tukey_hamming_formula": {
  "data": {
   "lineno": 555
  },
  "type": "constant"
 },
 "arch.covariance.kernel.tukey_hanning_formula": {
  "data": {
   "lineno": 583
  },
  "type": "constant"
 },
 "arch.covariance.kernel.tukey_parzen_formula": {
  "data": {
   "lineno": 611
  },
  "type": "constant"
 },
 "arch.data": {
  "data": {},
  "type": "module"
 },
 "arch.data.binary": {
  "data": {},
  "type": "module"
 },
 "arch.data.binary.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "arch.data.binary.load": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "arch.data.utility.load_file",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.data.binary.load_file": {
  "data": {
   "shadows": "arch.data.utility.load_file"
  },
  "type": "import"
 },
 "arch.data.core_cpi": {
  "data": {},
  "type": "module"
 },
 "arch.data.core_cpi.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "arch.data.core_cpi.load": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "arch.data.utility.load_file",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.data.core_cpi.load_file": {
  "data": {
   "shadows": "arch.data.utility.load_file"
  },
  "type": "import"
 },
 "arch.data.crude": {
  "data": {},
  "type": "module"
 },
 "arch.data.crude.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "arch.data.crude.load": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "arch.data.utility.load_file",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.data.crude.load_file": {
  "data": {
   "shadows": "arch.data.utility.load_file"
  },
  "type": "import"
 },
 "arch.data.default": {
  "data": {},
  "type": "module"
 },
 "arch.data.default.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "arch.data.default.load": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "arch.data.utility.load_file",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.data.default.load_file": {
  "data": {
   "shadows": "arch.data.utility.load_file"
  },
  "type": "import"
 },
 "arch.data.frenchdata": {
  "data": {},
  "type": "module"
 },
 "arch.data.frenchdata.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "arch.data.frenchdata.load": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "arch.data.utility.load_file",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.data.frenchdata.load_file": {
  "data": {
   "shadows": "arch.data.utility.load_file"
  },
  "type": "import"
 },
 "arch.data.nasdaq": {
  "data": {},
  "type": "module"
 },
 "arch.data.nasdaq.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "arch.data.nasdaq.load": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "arch.data.utility.load_file",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.data.nasdaq.load_file": {
  "data": {
   "shadows": "arch.data.utility.load_file"
  },
  "type": "import"
 },
 "arch.data.sp500": {
  "data": {},
  "type": "module"
 },
 "arch.data.sp500.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "arch.data.sp500.load": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "arch.data.utility.load_file",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.data.sp500.load_file": {
  "data": {
   "shadows": "arch.data.utility.load_file"
  },
  "type": "import"
 },
 "arch.data.utility": {
  "data": {},
  "type": "module"
 },
 "arch.data.utility.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "arch.data.utility.load_file": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "arch.data.utility.os",
    "pandas.DataFrame",
    "pandas.read_csv",
    "pandas.to_datetime",
    "pandas.to_numeric",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.data.utility.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "arch.data.utility.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.data.vix": {
  "data": {},
  "type": "module"
 },
 "arch.data.vix.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "arch.data.vix.load": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "arch.data.utility.load_file",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.data.vix.load_file": {
  "data": {
   "shadows": "arch.data.utility.load_file"
  },
  "type": "import"
 },
 "arch.data.wti": {
  "data": {},
  "type": "module"
 },
 "arch.data.wti.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "arch.data.wti.load": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "arch.data.utility.load_file",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.data.wti.load_file": {
  "data": {
   "shadows": "arch.data.utility.load_file"
  },
  "type": "import"
 },
 "arch.doc": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "arch.webbrowser"
   ]
  },
  "type": "function"
 },
 "arch.get_versions": {
  "data": {
   "shadows": "arch._version.get_versions"
  },
  "type": "import"
 },
 "arch.test": {
  "data": {
   "shadows": "arch.utility.test"
  },
  "type": "import"
 },
 "arch.tests": {
  "data": {},
  "type": "module"
 },
 "arch.tests.bootstrap": {
  "data": {},
  "type": "module"
 },
 "arch.tests.bootstrap.test_block_length": {
  "data": {},
  "type": "module"
 },
 "arch.tests.bootstrap.test_block_length.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_block_length.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_block_length.optimal_block_length": {
  "data": {
   "shadows": "arch.bootstrap.base.optimal_block_length"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_block_length.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_block_length.test_block_length": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "arch.bootstrap.base.optimal_block_length",
    "len",
    "numpy.asarray",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "pandas.DataFrame",
    "pandas.Series",
    "print",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "arch.tests.bootstrap.test_bootstrap.BSData": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.ndarray",
    "numpy.random.RandomState",
    "pandas.DataFrame",
    "pandas.Series",
    "typing.Callable",
    "typing.NamedTuple",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "arch.tests.bootstrap.test_bootstrap.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.CircularBlockBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.CircularBlockBootstrap"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.HAS_EXTENSION": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "arch.tests.bootstrap.test_bootstrap.IIDBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.IIDBootstrap"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.IndependentSamplesBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.IndependentSamplesBootstrap"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.MovingBlockBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.MovingBlockBootstrap"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.StationaryBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.StationaryBootstrap"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.StudentizationError": {
  "data": {
   "shadows": "arch.utility.exceptions.StudentizationError"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap._loo_jackknife": {
  "data": {
   "shadows": "arch.bootstrap.base._loo_jackknife"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.assert_frame_equal": {
  "data": {
   "shadows": "pandas.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.assert_series_equal": {
  "data": {
   "shadows": "pandas.testing.assert_series_equal"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.bs_setup": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "arch.tests.bootstrap.test_bootstrap.BSData",
    "arch.tests.bootstrap.test_bootstrap.pytest",
    "numpy.random.RandomState",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.bs_setup.func": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.stationary_bootstrap_sample": {
  "data": {
   "shadows": "arch.bootstrap._samplers_python.stationary_bootstrap_sample"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.stationary_bootstrap_sample_cython": {
  "data": {
   "shadows": "arch.bootstrap._samplers.stationary_bootstrap_sample"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.stationary_bootstrap_sample_python": {
  "data": {
   "shadows": "arch.bootstrap._samplers_python.stationary_bootstrap_sample_python"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.test_apply": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "arch.tests.bootstrap.test_bootstrap.bs_setup",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_apply_series": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "arch.tests.bootstrap.test_bootstrap.bs_setup",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_bca": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "arch.bootstrap.base._loo_jackknife",
    "arch.tests.bootstrap.test_bootstrap.bs_setup",
    "list",
    "numpy.array",
    "numpy.mean",
    "numpy.percentile",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range",
    "scipy.stats.norm.cdf",
    "scipy.stats.norm.ppf"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_bca_against_bcajack": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "list",
    "numpy.identity",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_bca_against_bcajack.func": {
  "data": {
   "lineno": 760
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_bca_extra_kwarg": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "isinstance",
    "numpy.ndarray",
    "numpy.random.standard_normal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_bca_extra_kwarg.f": {
  "data": {
   "lineno": 946
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_conf_int_basic": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "arch.tests.bootstrap.test_bootstrap.bs_setup",
    "numpy.empty_like",
    "numpy.inf",
    "numpy.percentile",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_conf_int_bca_scaler": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "arch.tests.bootstrap.test_bootstrap.bs_setup",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_conf_int_bias_corrected": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "arch.tests.bootstrap.test_bootstrap.bs_setup",
    "list",
    "numpy.array",
    "numpy.mean",
    "numpy.percentile",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range",
    "scipy.stats.norm.cdf",
    "scipy.stats.norm.ppf"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_conf_int_norm": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "arch.tests.bootstrap.test_bootstrap.bs_setup",
    "numpy.diag",
    "numpy.empty_like",
    "numpy.inf",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "scipy.stats.norm.ppf"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_conf_int_parametric": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "arch.tests.bootstrap.test_bootstrap.bs_setup",
    "len",
    "numpy.all",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "param_func",
    "semi_func"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_conf_int_parametric.param_func": {
  "data": {
   "lineno": 461
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_conf_int_parametric.semi_func": {
  "data": {
   "lineno": 469
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_conf_int_percentile": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "arch.tests.bootstrap.test_bootstrap.bs_setup",
    "numpy.empty_like",
    "numpy.inf",
    "numpy.percentile",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_cov": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "arch.tests.bootstrap.test_bootstrap.bs_setup",
    "numpy.diag",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_errors": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ValueError",
    "arch.bootstrap.IIDBootstrap",
    "arch.tests.bootstrap.test_bootstrap.bs_setup",
    "arch.tests.bootstrap.test_bootstrap.pytest",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_extra_kwargs": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "ValueError",
    "arch.bootstrap.IIDBootstrap",
    "arch.tests.bootstrap.test_bootstrap.bs_setup",
    "arch.tests.bootstrap.test_bootstrap.pytest"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_iid_unequal_equiv": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "arch.bootstrap.IndependentSamplesBootstrap",
    "numpy.mean",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_jackknife": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "arch.bootstrap.base._loo_jackknife",
    "arch.tests.bootstrap.test_bootstrap.bs_setup",
    "len",
    "list",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_list_input": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "TypeError",
    "arch.bootstrap.IIDBootstrap",
    "arch.tests.bootstrap.test_bootstrap.pytest",
    "numpy.random.standard_normal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_mixed_types": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "arch.tests.bootstrap.test_bootstrap.bs_setup",
    "len",
    "numpy.testing.assert_equal",
    "pandas.testing.assert_frame_equal",
    "pandas.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_numpy": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "arch.tests.bootstrap.test_bootstrap.bs_setup",
    "len",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_pandas": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "arch.tests.bootstrap.test_bootstrap.bs_setup",
    "len",
    "numpy.testing.assert_equal",
    "pandas.testing.assert_frame_equal",
    "pandas.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_pandas_integer_index": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "arch.tests.bootstrap.test_bootstrap.bs_setup",
    "numpy.arange",
    "numpy.asarray",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_pass_random_state": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "TypeError",
    "arch.bootstrap.IIDBootstrap",
    "arch.tests.bootstrap.test_bootstrap.pytest",
    "numpy.arange",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_reset": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "numpy.arange",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_reuse": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "RuntimeWarning",
    "arch.bootstrap.IIDBootstrap",
    "arch.tests.bootstrap.test_bootstrap.bs_setup",
    "arch.tests.bootstrap.test_bootstrap.warnings",
    "len",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_samplers": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "arch.bootstrap._samplers.stationary_bootstrap_sample",
    "arch.bootstrap._samplers_python.stationary_bootstrap_sample_python",
    "arch.tests.bootstrap.test_bootstrap.HAS_EXTENSION",
    "arch.tests.bootstrap.test_bootstrap.bs_setup",
    "arch.tests.bootstrap.test_bootstrap.pytest",
    "numpy.array",
    "numpy.int64",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_set_randomstate": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "arch.tests.bootstrap.test_bootstrap.bs_setup",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_set_randomstate_exception": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": [
    "TypeError",
    "arch.bootstrap.IIDBootstrap",
    "arch.tests.bootstrap.test_bootstrap.bs_setup",
    "arch.tests.bootstrap.test_bootstrap.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_state": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "numpy.arange",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_str": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "arch.bootstrap.CircularBlockBootstrap",
    "arch.bootstrap.IIDBootstrap",
    "arch.bootstrap.MovingBlockBootstrap",
    "arch.bootstrap.StationaryBootstrap",
    "arch.tests.bootstrap.test_bootstrap.bs_setup",
    "hex",
    "id",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_studentization_error": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "arch.tests.bootstrap.test_bootstrap.pytest",
    "arch.utility.exceptions.StudentizationError",
    "numpy.random.standard_normal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_studentization_error.f": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_studentized": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "arch.tests.bootstrap.test_bootstrap.bs_setup",
    "arch.tests.bootstrap.test_bootstrap.warnings",
    "len",
    "numpy.diag",
    "numpy.mean",
    "numpy.percentile",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range",
    "std_err_func"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_studentized.std_err_func": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_unequal_bs": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "ValueError",
    "arch.bootstrap.IndependentSamplesBootstrap",
    "arch.tests.bootstrap.test_bootstrap.pytest",
    "len",
    "numpy.random.RandomState",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_unequal_bs.mean_diff": {
  "data": {
   "lineno": 851
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_unequal_bs_kwargs": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "arch.bootstrap.IndependentSamplesBootstrap",
    "len",
    "numpy.random.RandomState",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_unequal_bs_kwargs.mean_diff": {
  "data": {
   "lineno": 877
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_unequal_reset": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "arch.bootstrap.IndependentSamplesBootstrap",
    "numpy.random.RandomState",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_unequal_reset.mean_diff": {
  "data": {
   "lineno": 901
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_uneven_sampling": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "arch.bootstrap.CircularBlockBootstrap",
    "arch.bootstrap.MovingBlockBootstrap",
    "arch.tests.bootstrap.test_bootstrap.bs_setup"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison": {
  "data": {},
  "type": "module"
 },
 "arch.tests.bootstrap.test_multiple_comparison.CircularBlockBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.CircularBlockBootstrap"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.MCS": {
  "data": {
   "shadows": "arch.bootstrap.multiple_comparison.MCS"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.MovingBlockBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.MovingBlockBootstrap"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.SPA": {
  "data": {
   "shadows": "arch.bootstrap.multiple_comparison.SPA"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.SPAData": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "int",
    "numpy.ndarray",
    "numpy.random.RandomState",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "arch.tests.bootstrap.test_multiple_comparison.StationaryBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.StationaryBootstrap"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.StepM": {
  "data": {
   "shadows": "arch.bootstrap.multiple_comparison.StepM"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestMCS": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestMCS.setup_class": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "classmethod",
    "numpy.random.RandomState",
    "pandas.DataFrame",
    "pandas.date_range",
    "scipy.stats.chi2"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestMCS.test_all_models_have_pval": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.MCS",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestMCS.test_errors": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "ValueError",
    "arch.bootstrap.multiple_comparison.MCS",
    "arch.tests.bootstrap.test_multiple_comparison.pytest"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestMCS.test_exact_ties": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.MCS"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestMCS.test_max_method": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.MCS",
    "list",
    "max_step",
    "numpy.array",
    "numpy.int64",
    "numpy.isfinite",
    "numpy.max",
    "numpy.nan",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestMCS.test_max_method.max_step": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "len",
    "numpy.argwhere",
    "numpy.max",
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "scipy.stats",
    "scipy.stats.mean"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestMCS.test_mcs_error": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "RuntimeError",
    "arch.bootstrap.multiple_comparison.MCS",
    "arch.tests.bootstrap.test_multiple_comparison.pytest"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestMCS.test_missing_included_max": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.MCS",
    "len",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestMCS.test_output_types": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.MCS",
    "isinstance",
    "list",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestMCS.test_r_method": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.MCS",
    "list",
    "numpy.array",
    "numpy.int64",
    "numpy.isfinite",
    "numpy.max",
    "numpy.nan",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "r_step",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestMCS.test_r_method.r_step": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.argwhere",
    "numpy.array",
    "numpy.max",
    "numpy.mean",
    "numpy.sqrt",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestMCS.test_str_repr": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.MCS",
    "hex",
    "id",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestStepM": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestStepM.setup_class": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "classmethod",
    "numpy.random.RandomState",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "range",
    "scipy.stats.chi2",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestStepM.test_all_superior": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.StepM",
    "len",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestStepM.test_equivalence": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.StepM",
    "isinstance",
    "list",
    "numpy.argwhere",
    "numpy.array",
    "numpy.linspace",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestStepM.test_errors": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "RuntimeError",
    "arch.bootstrap.multiple_comparison.StepM",
    "arch.tests.bootstrap.test_multiple_comparison.pytest"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestStepM.test_exact_ties": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.StepM",
    "len",
    "numpy.testing.assert_equal",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestStepM.test_single_model": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.StepM"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestStepM.test_str_repr": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.StepM",
    "hex",
    "id",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestStepM.test_superior_models": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.SPA",
    "arch.bootstrap.multiple_comparison.StepM",
    "isinstance",
    "len",
    "numpy.linspace",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.assert_frame_equal": {
  "data": {
   "shadows": "pandas.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.assert_series_equal": {
  "data": {
   "shadows": "pandas.testing.assert_series_equal"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.linspace": {
  "data": {
   "shadows": "numpy.linspace"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.spa_data": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "arch.tests.bootstrap.test_multiple_comparison.SPAData",
    "arch.tests.bootstrap.test_multiple_comparison.pytest",
    "numpy.random.RandomState",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "scipy.stats.chi2"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.test_bootstrap_selection": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "arch.bootstrap.CircularBlockBootstrap",
    "arch.bootstrap.MovingBlockBootstrap",
    "arch.bootstrap.StationaryBootstrap",
    "arch.bootstrap.multiple_comparison.SPA",
    "arch.tests.bootstrap.test_multiple_comparison.spa_data",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.test_equivalence": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.SPA",
    "arch.tests.bootstrap.test_multiple_comparison.spa_data",
    "pandas.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.test_errors": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "arch.bootstrap.multiple_comparison.SPA",
    "arch.tests.bootstrap.test_multiple_comparison.pytest",
    "arch.tests.bootstrap.test_multiple_comparison.spa_data"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.test_pvalues_and_critvals": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.SPA",
    "arch.tests.bootstrap.test_multiple_comparison.spa_data",
    "numpy.max",
    "numpy.mean",
    "numpy.percentile",
    "pandas.Series",
    "pandas.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.test_seed_reset": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.SPA",
    "arch.tests.bootstrap.test_multiple_comparison.spa_data",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.test_single_model": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.SPA",
    "arch.tests.bootstrap.test_multiple_comparison.spa_data"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.test_spa_nested": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.SPA",
    "arch.tests.bootstrap.test_multiple_comparison.spa_data"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.test_str_repr": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.SPA",
    "arch.tests.bootstrap.test_multiple_comparison.spa_data",
    "hex",
    "id",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.test_variances_and_selection": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.SPA",
    "arch.tests.bootstrap.test_multiple_comparison.spa_data",
    "numpy.linspace",
    "numpy.log",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.covariance": {
  "data": {},
  "type": "module"
 },
 "arch.tests.covariance.test_covariance": {
  "data": {
   "symbols_in_volume": [
    "arch.covariance.kernel.Andrews",
    "arch.covariance.kernel.Bartlett",
    "arch.covariance.kernel.Gallant",
    "arch.covariance.kernel.NeweyWest",
    "arch.covariance.kernel.Parzen",
    "arch.covariance.kernel.ParzenCauchy",
    "arch.covariance.kernel.ParzenGeometric",
    "arch.covariance.kernel.ParzenRiesz",
    "arch.covariance.kernel.QuadraticSpectral",
    "arch.covariance.kernel.TukeyHamming",
    "arch.covariance.kernel.TukeyHanning",
    "arch.covariance.kernel.TukeyParzen",
    "arch.tests.covariance.test_covariance.DATA_PARAMS",
    "itertools.product",
    "list",
    "pandas"
   ]
  },
  "type": "module"
 },
 "arch.tests.covariance.test_covariance.Andrews": {
  "data": {
   "shadows": "arch.covariance.kernel.Andrews"
  },
  "type": "import"
 },
 "arch.tests.covariance.test_covariance.ArrayLike": {
  "data": {
   "shadows": "arch.typing.ArrayLike"
  },
  "type": "import"
 },
 "arch.tests.covariance.test_covariance.Bartlett": {
  "data": {
   "shadows": "arch.covariance.kernel.Bartlett"
  },
  "type": "import"
 },
 "arch.tests.covariance.test_covariance.CovarianceEstimate": {
  "data": {
   "shadows": "arch.covariance.kernel.CovarianceEstimate"
  },
  "type": "import"
 },
 "arch.tests.covariance.test_covariance.CovarianceEstimator": {
  "data": {
   "shadows": "arch.covariance.kernel.CovarianceEstimator"
  },
  "type": "import"
 },
 "arch.tests.covariance.test_covariance.DATA_IDS": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "arch.tests.covariance.test_covariance.DATA_PARAMS": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "arch.tests.covariance.test_covariance.ESTIMATORS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "arch.tests.covariance.test_covariance.Gallant": {
  "data": {
   "shadows": "arch.covariance.kernel.Gallant"
  },
  "type": "import"
 },
 "arch.tests.covariance.test_covariance.KERNEL_PARAMS": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "arch.tests.covariance.test_covariance.NeweyWest": {
  "data": {
   "shadows": "arch.covariance.kernel.NeweyWest"
  },
  "type": "import"
 },
 "arch.tests.covariance.test_covariance.Parzen": {
  "data": {
   "shadows": "arch.covariance.kernel.Parzen"
  },
  "type": "import"
 },
 "arch.tests.covariance.test_covariance.ParzenCauchy": {
  "data": {
   "shadows": "arch.covariance.kernel.ParzenCauchy"
  },
  "type": "import"
 },
 "arch.tests.covariance.test_covariance.ParzenGeometric": {
  "data": {
   "shadows": "arch.covariance.kernel.ParzenGeometric"
  },
  "type": "import"
 },
 "arch.tests.covariance.test_covariance.ParzenRiesz": {
  "data": {
   "shadows": "arch.covariance.kernel.ParzenRiesz"
  },
  "type": "import"
 },
 "arch.tests.covariance.test_covariance.QuadraticSpectral": {
  "data": {
   "shadows": "arch.covariance.kernel.QuadraticSpectral"
  },
  "type": "import"
 },
 "arch.tests.covariance.test_covariance.TukeyHamming": {
  "data": {
   "shadows": "arch.covariance.kernel.TukeyHamming"
  },
  "type": "import"
 },
 "arch.tests.covariance.test_covariance.TukeyHanning": {
  "data": {
   "shadows": "arch.covariance.kernel.TukeyHanning"
  },
  "type": "import"
 },
 "arch.tests.covariance.test_covariance.TukeyParzen": {
  "data": {
   "shadows": "arch.covariance.kernel.TukeyParzen"
  },
  "type": "import"
 },
 "arch.tests.covariance.test_covariance.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "arch.tests.covariance.test_covariance.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "arch.tests.covariance.test_covariance.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "arch.tests.covariance.test_covariance.data": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "arch.tests.covariance.test_covariance.DATA_IDS",
    "arch.tests.covariance.test_covariance.DATA_PARAMS",
    "arch.tests.covariance.test_covariance.pytest",
    "arch.typing.ArrayLike",
    "int",
    "numpy.diag",
    "numpy.random.RandomState",
    "pandas.DataFrame",
    "pandas.Series",
    "range",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.tests.covariance.test_covariance.estimator": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "arch.covariance.kernel.CovarianceEstimator",
    "arch.tests.covariance.test_covariance.ESTIMATORS",
    "arch.tests.covariance.test_covariance.pytest"
   ]
  },
  "type": "function"
 },
 "arch.tests.covariance.test_covariance.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.covariance.test_covariance.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.tests.covariance.test_covariance.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "arch.tests.covariance.test_covariance.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.covariance.test_covariance.test_bartlett_auto": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "arch.covariance.kernel.Bartlett",
    "arch.tests.covariance.test_covariance.data",
    "arch.typing.ArrayLike",
    "int",
    "numpy.arange",
    "numpy.asarray",
    "numpy.squeeze",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.covariance.test_covariance.test_center": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "arch.covariance.kernel.CovarianceEstimator",
    "arch.tests.covariance.test_covariance.data",
    "arch.tests.covariance.test_covariance.estimator",
    "arch.typing.ArrayLike",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "arch.tests.covariance.test_covariance.test_constants": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "arch.covariance.kernel.CovarianceEstimator",
    "arch.tests.covariance.test_covariance.KERNEL_PARAMS",
    "arch.tests.covariance.test_covariance.data",
    "arch.tests.covariance.test_covariance.estimator",
    "arch.typing.ArrayLike",
    "numpy.testing.assert_allclose",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "arch.tests.covariance.test_covariance.test_covariance_errors": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "ValueError",
    "arch.covariance.kernel.CovarianceEstimator",
    "arch.tests.covariance.test_covariance.data",
    "arch.tests.covariance.test_covariance.estimator",
    "arch.tests.covariance.test_covariance.pytest",
    "arch.typing.ArrayLike",
    "numpy.ones",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "arch.tests.covariance.test_covariance.test_covariance_smoke": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "arch.covariance.kernel.CovarianceEstimate",
    "arch.covariance.kernel.CovarianceEstimator",
    "arch.tests.covariance.test_covariance.data",
    "arch.tests.covariance.test_covariance.estimator",
    "arch.typing.ArrayLike",
    "isinstance",
    "repr",
    "str",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "arch.tests.covariance.test_covariance.test_first_weights": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "arch.covariance.kernel.CovarianceEstimator",
    "arch.tests.covariance.test_covariance.data",
    "arch.tests.covariance.test_covariance.estimator",
    "arch.typing.ArrayLike",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "arch.tests.covariance.test_covariance.test_force_int": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "arch.covariance.kernel.CovarianceEstimator",
    "arch.tests.covariance.test_covariance.data",
    "arch.tests.covariance.test_covariance.estimator",
    "arch.typing.ArrayLike",
    "int",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "arch.tests.covariance.test_covariance.test_kernel_weights": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "arch.covariance.kernel.CovarianceEstimator",
    "arch.tests.covariance.test_covariance.data",
    "arch.tests.covariance.test_covariance.estimator",
    "arch.typing.ArrayLike",
    "numpy.arange",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "arch.tests.covariance.test_covariance.test_parzen_auto": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "arch.covariance.kernel.Parzen",
    "arch.tests.covariance.test_covariance.data",
    "arch.typing.ArrayLike",
    "int",
    "len",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.tests.covariance.test_covariance.test_qs_auto": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "arch.covariance.kernel.QuadraticSpectral",
    "arch.tests.covariance.test_covariance.data",
    "arch.typing.ArrayLike",
    "int",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.covariance.test_covariance.test_weight_len": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "arch.covariance.kernel.CovarianceEstimator",
    "arch.tests.covariance.test_covariance.data",
    "arch.tests.covariance.test_covariance.estimator",
    "arch.typing.ArrayLike",
    "int",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "arch.tests.test_compat": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "arch.tests.test_compat.HAS_NUMBA": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "arch.tests.test_compat.PerformanceWarning": {
  "data": {
   "shadows": "arch.compat.numba.PerformanceWarning"
  },
  "type": "import"
 },
 "arch.tests.test_compat.arch_recursion": {
  "data": {
   "shadows": "arch.univariate.recursions_python.arch_recursion"
  },
  "type": "import"
 },
 "arch.tests.test_compat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.test_compat.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "arch.tests.test_compat.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.test_compat.test_performance_warning": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "arch.compat.numba.PerformanceWarning",
    "arch.tests.test_compat.HAS_NUMBA",
    "arch.tests.test_compat.pytest",
    "arch.univariate.recursions_python.arch_recursion",
    "numpy.array",
    "numpy.empty",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "arch.tests.test_data": {
  "data": {
   "symbols_in_volume": [
    "arch.tests.test_data.CURR_DIR",
    "arch.tests.test_data.FILES",
    "arch.tests.test_data.glob",
    "arch.tests.test_data.os"
   ]
  },
  "type": "module"
 },
 "arch.tests.test_data.CURR_DIR": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "arch.tests.test_data.DATASETS": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "arch.tests.test_data.FILES": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "arch.tests.test_data.dataset": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "arch.tests.test_data.DATASETS",
    "arch.tests.test_data.pytest"
   ]
  },
  "type": "function"
 },
 "arch.tests.test_data.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "arch.tests.test_data.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "arch.tests.test_data.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.tests.test_data.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.test_data.test_dataset": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "__import__",
    "arch.tests.test_data.dataset",
    "isinstance",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.tests.test_examples": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "arch.tests.test_examples.NOTEBOOK_DIR",
    "arch.tests.test_examples.glob",
    "arch.tests.test_examples.jupyter_client",
    "arch.tests.test_examples.nbs",
    "arch.tests.test_examples.os",
    "arch.tests.test_examples.pytest",
    "arch.tests.test_examples.sys",
    "bool",
    "list",
    "map",
    "sorted"
   ]
  },
  "type": "module"
 },
 "arch.tests.test_examples.ExecutePreprocessor": {
  "data": {
   "shadows": "nbconvert.preprocessors.ExecutePreprocessor"
  },
  "type": "import"
 },
 "arch.tests.test_examples.NOTEBOOK_DIR": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "arch.tests.test_examples.SLOW_NOTEBOOKS": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "arch.tests.test_examples.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "arch.tests.test_examples.ids": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "arch.tests.test_examples.jupyter_client": {
  "data": {
   "shadows": "jupyter_client"
  },
  "type": "import"
 },
 "arch.tests.test_examples.kernel_name": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "arch.tests.test_examples.kernels": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "arch.tests.test_examples.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "arch.tests.test_examples.nbformat": {
  "data": {
   "shadows": "nbformat"
  },
  "type": "import"
 },
 "arch.tests.test_examples.nbs": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "arch.tests.test_examples.notebook": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "arch.tests.test_examples.ids",
    "arch.tests.test_examples.nbs",
    "arch.tests.test_examples.pytest"
   ]
  },
  "type": "function"
 },
 "arch.tests.test_examples.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "arch.tests.test_examples.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.test_examples.pytestmark": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "arch.tests.test_examples.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "arch.tests.test_examples.test_notebook": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "arch.tests.test_examples.NOTEBOOK_DIR",
    "arch.tests.test_examples.SLOW_NOTEBOOKS",
    "arch.tests.test_examples.kernel_name",
    "arch.tests.test_examples.nbformat",
    "arch.tests.test_examples.notebook",
    "arch.tests.test_examples.os",
    "arch.tests.test_examples.pytest",
    "nbconvert.preprocessors.ExecutePreprocessor"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot": {
  "data": {},
  "type": "module"
 },
 "arch.tests.unitroot.cointegration_data": {
  "data": {},
  "type": "module"
 },
 "arch.tests.unitroot.cointegration_data.ArrayLike2D": {
  "data": {
   "shadows": "arch.typing.ArrayLike2D"
  },
  "type": "import"
 },
 "arch.tests.unitroot.cointegration_data.NDArray": {
  "data": {
   "shadows": "arch.typing.NDArray"
  },
  "type": "import"
 },
 "arch.tests.unitroot.cointegration_data.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "arch.tests.unitroot.cointegration_data.data": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "arch.tests.unitroot.cointegration_data.pytest",
    "arch.typing.NDArray",
    "numpy.random.RandomState",
    "pandas.DataFrame",
    "range",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.cointegration_data.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.unitroot.cointegration_data.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.tests.unitroot.cointegration_data.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.unitroot.cointegration_data.trivariate_data": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "arch.tests.unitroot.cointegration_data.data",
    "arch.tests.unitroot.cointegration_data.pytest",
    "arch.typing.ArrayLike2D",
    "numpy.arange",
    "numpy.cos",
    "numpy.eye",
    "numpy.ones",
    "numpy.pi",
    "numpy.poly",
    "numpy.random.RandomState",
    "numpy.sin",
    "pandas.DataFrame",
    "pandas.date_range",
    "range",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.data": {
  "data": {},
  "type": "module"
 },
 "arch.tests.unitroot.test_dynamic_ols": {
  "data": {},
  "type": "module"
 },
 "arch.tests.unitroot.test_dynamic_ols.AUTO": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_dynamic_ols.DynamicOLS": {
  "data": {
   "shadows": "arch.unitroot.cointegration.DynamicOLS"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_dynamic_ols.HAC": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_dynamic_ols.KERNELS": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_dynamic_ols.LEADS_LAGS": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_dynamic_ols.TRENDS": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_dynamic_ols.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_dynamic_ols.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_dynamic_ols.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_dynamic_ols.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_dynamic_ols.test_auto_eviews": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_dynamic_ols.AUTO",
    "arch.tests.unitroot.test_dynamic_ols.pytest",
    "arch.unitroot.cointegration.DynamicOLS",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_dynamic_ols.test_auto_trends_eviews": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_dynamic_ols.TRENDS",
    "arch.tests.unitroot.test_dynamic_ols.pytest",
    "arch.unitroot.cointegration.DynamicOLS",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_dynamic_ols.test_basic": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "arch.unitroot.cointegration.DynamicOLS",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_dynamic_ols.test_direct_eviews": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_dynamic_ols.LEADS_LAGS",
    "arch.tests.unitroot.test_dynamic_ols.pytest",
    "arch.unitroot.cointegration.DynamicOLS",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_dynamic_ols.test_error": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_dynamic_ols.pytest",
    "arch.unitroot.cointegration.DynamicOLS",
    "isinstance",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_dynamic_ols.test_hac_eviews": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_dynamic_ols.HAC",
    "arch.tests.unitroot.test_dynamic_ols.pytest",
    "arch.unitroot.cointegration.DynamicOLS",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_dynamic_ols.test_invalid_fit_options": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_dynamic_ols.pytest",
    "arch.unitroot.cointegration.DynamicOLS"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_dynamic_ols.test_invalid_input": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_dynamic_ols.pytest",
    "arch.unitroot.cointegration.DynamicOLS"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_dynamic_ols.test_kernels_eviews": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_dynamic_ols.KERNELS",
    "arch.tests.unitroot.test_dynamic_ols.pytest",
    "arch.unitroot.cointegration.DynamicOLS",
    "float",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_dynamic_ols.test_mismatch_lead_lag": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_dynamic_ols.pytest",
    "arch.unitroot.cointegration.DynamicOLS"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_dynamic_ols.test_smoke": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_dynamic_ols.pytest",
    "arch.unitroot.cointegration.DynamicOLS"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_dynamic_ols.test_smoke_fit": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_dynamic_ols.pytest",
    "arch.unitroot.cointegration.DynamicOLS",
    "float",
    "int",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_engle_granger": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "arch.tests.unitroot.test_engle_granger.ALT_TEST_VALUES": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_engle_granger.HAS_MATPLOTLIB": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_engle_granger.NULL_TEST_VALUES": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_engle_granger.ResidualCointegrationTestResult": {
  "data": {
   "shadows": "arch.unitroot._shared.ResidualCointegrationTestResult"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_engle_granger.Summary": {
  "data": {
   "shadows": "statsmodels.iolib.summary.Summary"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_engle_granger.TRIVARIATE": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_engle_granger._cross_section": {
  "data": {
   "shadows": "arch.unitroot._shared._cross_section"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_engle_granger.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_engle_granger.data": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_engle_granger.pytest",
    "numpy.asarray",
    "numpy.random.RandomState",
    "pandas.DataFrame",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_engle_granger.engle_granger": {
  "data": {
   "shadows": "arch.unitroot.cointegration.engle_granger"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_engle_granger.engle_granger_cv": {
  "data": {
   "shadows": "arch.unitroot._engle_granger.engle_granger_cv"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_engle_granger.engle_granger_pval": {
  "data": {
   "shadows": "arch.unitroot._engle_granger.engle_granger_pval"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_engle_granger.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_engle_granger.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_engle_granger.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_engle_granger.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_engle_granger.test_base_summary": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "arch.unitroot._shared.ResidualCointegrationTestResult",
    "arch.unitroot._shared._cross_section",
    "isinstance",
    "numpy.random.standard_normal",
    "pandas.Series",
    "statsmodels.iolib.summary.Summary"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_engle_granger.test_bivariate_eg_alternative": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_engle_granger.ALT_TEST_VALUES",
    "arch.tests.unitroot.test_engle_granger.data",
    "arch.tests.unitroot.test_engle_granger.pytest",
    "arch.unitroot.cointegration.engle_granger",
    "isinstance",
    "numpy.testing.assert_allclose",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_engle_granger.test_bivariate_eg_null": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_engle_granger.NULL_TEST_VALUES",
    "arch.tests.unitroot.test_engle_granger.data",
    "arch.tests.unitroot.test_engle_granger.pytest",
    "arch.unitroot.cointegration.engle_granger",
    "isinstance",
    "numpy.testing.assert_allclose",
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_engle_granger.test_cross_section_exceptions": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_engle_granger.pytest",
    "arch.unitroot._shared._cross_section",
    "numpy.random.standard_normal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_engle_granger.test_exceptions": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_engle_granger.data",
    "arch.tests.unitroot.test_engle_granger.pytest",
    "arch.unitroot.cointegration.engle_granger",
    "isinstance",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_engle_granger.test_exceptions_critvals": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_engle_granger.pytest",
    "arch.unitroot._engle_granger.engle_granger_pval"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_engle_granger.test_exceptions_pvals": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_engle_granger.pytest",
    "arch.unitroot._engle_granger.engle_granger_cv"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_engle_granger.test_name_ci_vector": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_engle_granger.data",
    "arch.unitroot.cointegration.engle_granger",
    "isinstance",
    "list",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_engle_granger.test_plot": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_engle_granger.HAS_MATPLOTLIB",
    "arch.tests.unitroot.test_engle_granger.data",
    "arch.tests.unitroot.test_engle_granger.pytest",
    "arch.unitroot.cointegration.engle_granger",
    "isinstance",
    "matplotlib.pyplot.Figure",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_engle_granger.test_pval_max_min": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "arch.unitroot._engle_granger.engle_granger_pval"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_engle_granger.test_trivariate": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_engle_granger.HAS_MATPLOTLIB",
    "arch.tests.unitroot.test_engle_granger.TRIVARIATE",
    "arch.tests.unitroot.test_engle_granger.data",
    "arch.tests.unitroot.test_engle_granger.pytest",
    "arch.unitroot.cointegration.engle_granger",
    "isinstance",
    "matplotlib.pyplot.Figure",
    "numpy.testing.assert_allclose",
    "pandas.DataFrame",
    "pandas.Series",
    "statsmodels.iolib.summary.Summary",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_fmols_ccr": {
  "data": {
   "symbols_in_volume": [
    "arch.tests.unitroot.test_fmols_ccr.FMOLS_RES"
   ]
  },
  "type": "module"
 },
 "arch.tests.unitroot.test_fmols_ccr.CCR_RES": {
  "data": {
   "lineno": 217
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_fmols_ccr.CanonicalCointegratingReg": {
  "data": {
   "shadows": "arch.unitroot.cointegration.CanonicalCointegratingReg"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_fmols_ccr.EviewsTestResult": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "float",
    "pandas.Series",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "arch.tests.unitroot.test_fmols_ccr.FMOLS_RES": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_fmols_ccr.FMOLS_RES_IDS": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_fmols_ccr.FullyModifiedOLS": {
  "data": {
   "shadows": "arch.unitroot.cointegration.FullyModifiedOLS"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_fmols_ccr.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_fmols_ccr.Summary": {
  "data": {
   "shadows": "statsmodels.iolib.summary.Summary"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_fmols_ccr.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_fmols_ccr.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_fmols_ccr.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_fmols_ccr.setup_test_values": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_fmols_ccr.EviewsTestResult",
    "dict",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_fmols_ccr.test_ccr_eviews": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_fmols_ccr.CCR_RES",
    "arch.tests.unitroot.test_fmols_ccr.FMOLS_RES",
    "arch.tests.unitroot.test_fmols_ccr.FMOLS_RES_IDS",
    "arch.tests.unitroot.test_fmols_ccr.pytest",
    "arch.tests.unitroot.test_fmols_ccr.setup_test_values",
    "arch.unitroot.cointegration.CanonicalCointegratingReg",
    "isinstance",
    "list",
    "numpy.testing.assert_allclose",
    "statsmodels.iolib.summary.Summary"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_fmols_ccr.test_ccr_smoke": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_fmols_ccr.pytest",
    "arch.unitroot.cointegration.CanonicalCointegratingReg",
    "isinstance",
    "len",
    "statsmodels.iolib.summary.Summary"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_fmols_ccr.test_exceptions": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_fmols_ccr.pytest",
    "arch.unitroot.cointegration.CanonicalCointegratingReg",
    "arch.unitroot.cointegration.FullyModifiedOLS",
    "estimator"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_fmols_ccr.test_fmols_eviews": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_fmols_ccr.FMOLS_RES",
    "arch.tests.unitroot.test_fmols_ccr.FMOLS_RES_IDS",
    "arch.tests.unitroot.test_fmols_ccr.pytest",
    "arch.tests.unitroot.test_fmols_ccr.setup_test_values",
    "arch.unitroot.cointegration.FullyModifiedOLS",
    "isinstance",
    "list",
    "numpy.testing.assert_allclose",
    "statsmodels.iolib.summary.Summary"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_fmols_ccr.test_fmols_smoke": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_fmols_ccr.pytest",
    "arch.unitroot.cointegration.FullyModifiedOLS",
    "isinstance",
    "len",
    "statsmodels.iolib.summary.Summary"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_phillips_ouliaris": {
  "data": {},
  "type": "module"
 },
 "arch.tests.unitroot.test_phillips_ouliaris.CriticalValueWarning": {
  "data": {
   "shadows": "arch.unitroot._phillips_ouliaris.CriticalValueWarning"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_phillips_ouliaris.NDArray": {
  "data": {
   "shadows": "arch.typing.NDArray"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_phillips_ouliaris.Summary": {
  "data": {
   "shadows": "statsmodels.iolib.summary.Summary"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_phillips_ouliaris.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_phillips_ouliaris.add_trend": {
  "data": {
   "shadows": "arch.utility.timeseries.add_trend"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_phillips_ouliaris.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_phillips_ouliaris.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_phillips_ouliaris.p_tests": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.utility.timeseries.add_trend",
    "float",
    "int",
    "numpy.linalg.inv",
    "numpy.linalg.lstsq",
    "numpy.squeeze",
    "range",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_phillips_ouliaris.phillips_ouliaris": {
  "data": {
   "shadows": "arch.unitroot.cointegration.phillips_ouliaris"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_phillips_ouliaris.phillips_ouliaris_cv": {
  "data": {
   "shadows": "arch.unitroot._phillips_ouliaris.phillips_ouliaris_cv"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_phillips_ouliaris.phillips_ouliaris_pval": {
  "data": {
   "shadows": "arch.unitroot._phillips_ouliaris.phillips_ouliaris_pval"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_phillips_ouliaris.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_phillips_ouliaris.test_auto_bandwidth": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "arch.unitroot.cointegration.phillips_ouliaris",
    "int",
    "isinstance",
    "statsmodels.iolib.summary.Summary"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_phillips_ouliaris.test_cv_exceptions": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_phillips_ouliaris.pytest",
    "arch.unitroot._phillips_ouliaris.CriticalValueWarning",
    "arch.unitroot._phillips_ouliaris.phillips_ouliaris_cv"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_phillips_ouliaris.test_errors": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_phillips_ouliaris.pytest",
    "arch.unitroot.cointegration.phillips_ouliaris"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_phillips_ouliaris.test_p_test_direct": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_phillips_ouliaris.p_tests",
    "arch.tests.unitroot.test_phillips_ouliaris.pytest",
    "arch.unitroot.cointegration.phillips_ouliaris",
    "isinstance",
    "numpy.asarray",
    "numpy.column_stack",
    "numpy.testing.assert_allclose",
    "statsmodels.iolib.summary.Summary"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_phillips_ouliaris.test_pval_exceptions": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_phillips_ouliaris.pytest",
    "arch.unitroot._phillips_ouliaris.phillips_ouliaris_pval"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_phillips_ouliaris.test_pval_extremes": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "arch.unitroot._phillips_ouliaris.phillips_ouliaris_pval"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_phillips_ouliaris.test_smoke": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_phillips_ouliaris.pytest",
    "arch.unitroot.cointegration.phillips_ouliaris",
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_phillips_ouliaris.test_z_test_direct": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_phillips_ouliaris.pytest",
    "arch.tests.unitroot.test_phillips_ouliaris.z_tests",
    "arch.unitroot.cointegration.phillips_ouliaris",
    "isinstance",
    "numpy.asarray",
    "numpy.column_stack",
    "numpy.testing.assert_allclose",
    "statsmodels.iolib.summary.Summary"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_phillips_ouliaris.z_tests": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.utility.timeseries.add_trend",
    "float",
    "int",
    "numpy.linalg.lstsq",
    "numpy.sqrt",
    "print",
    "range",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot": {
  "data": {
   "symbols_in_volume": [
    "arch.compat.statsmodels.dataset_loader",
    "arch.tests.unitroot.test_unitroot.BASE_PATH",
    "arch.tests.unitroot.test_unitroot.DATA_PATH",
    "arch.tests.unitroot.test_unitroot.ZATestResult",
    "arch.tests.unitroot.test_unitroot.os",
    "pandas.read_csv",
    "statsmodels.datasets.macrodata",
    "statsmodels.datasets.modechoice",
    "statsmodels.datasets.nile",
    "statsmodels.datasets.randhie",
    "statsmodels.datasets.sunspots"
   ]
  },
  "type": "module"
 },
 "arch.tests.unitroot.test_unitroot.ADF": {
  "data": {
   "shadows": "arch.unitroot.ADF"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.BASE_PATH": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_unitroot.DATA_PATH": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_unitroot.DECIMAL_1": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_unitroot.DECIMAL_2": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_unitroot.DECIMAL_3": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_unitroot.DECIMAL_4": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_unitroot.DECIMAL_5": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_unitroot.DFGLS": {
  "data": {
   "shadows": "arch.unitroot.DFGLS"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.InfeasibleTestException": {
  "data": {
   "shadows": "arch.utility.exceptions.InfeasibleTestException"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.KPSS": {
  "data": {
   "shadows": "arch.unitroot.KPSS"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.OLS": {
  "data": {
   "shadows": "statsmodels.regression.linear_model.OLS"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.PhillipsPerron": {
  "data": {
   "shadows": "arch.unitroot.PhillipsPerron"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.REAL_TIME_SERIES": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_unitroot.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.TRUE_BW_FROM_R_BA": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_unitroot.TRUE_BW_FROM_R_PA": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_unitroot.TRUE_BW_FROM_R_QS": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_unitroot.TestAutolagOLS": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.tests.unitroot.test_unitroot.TestAutolagOLS.setup_class": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "arch.compat.statsmodels.dataset_loader",
    "classmethod",
    "numpy.diff",
    "numpy.log",
    "numpy.random.RandomState",
    "numpy.zeros",
    "range",
    "statsmodels.datasets.macrodata"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestAutolagOLS.test_aic": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "arch.unitroot.unitroot._autolag_ols",
    "numpy.isscalar",
    "statsmodels.regression.linear_model.OLS",
    "statsmodels.tsa.stattools._autolag",
    "statsmodels.tsa.stattools.lagmat"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestAutolagOLS.test_aic_exogenous": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "arch.unitroot.unitroot._autolag_ols",
    "numpy.argmin",
    "numpy.concatenate",
    "numpy.inf",
    "numpy.zeros",
    "range",
    "statsmodels.regression.linear_model.OLS",
    "statsmodels.tsa.stattools.lagmat"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestAutolagOLS.test_bic": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "arch.unitroot.unitroot._autolag_ols",
    "numpy.isscalar",
    "statsmodels.regression.linear_model.OLS",
    "statsmodels.tsa.stattools._autolag",
    "statsmodels.tsa.stattools.lagmat"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestAutolagOLS.test_bic_exogenous": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "arch.unitroot.unitroot._autolag_ols",
    "numpy.argmin",
    "numpy.concatenate",
    "numpy.inf",
    "numpy.zeros",
    "range",
    "statsmodels.regression.linear_model.OLS",
    "statsmodels.tsa.stattools.lagmat"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestAutolagOLS.test_tstat": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "arch.unitroot.unitroot._autolag_ols",
    "numpy.isscalar",
    "statsmodels.regression.linear_model.OLS",
    "statsmodels.tsa.stattools._autolag",
    "statsmodels.tsa.stattools.lagmat"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestAutolagOLS.test_tstat_exogenous": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "arch.unitroot.unitroot._autolag_ols",
    "numpy.abs",
    "numpy.argwhere",
    "numpy.concatenate",
    "numpy.max",
    "numpy.zeros",
    "range",
    "scipy.stats.norm.ppf",
    "statsmodels.regression.linear_model.OLS",
    "statsmodels.tsa.stattools.lagmat"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.setup_class": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "arch.compat.statsmodels.dataset_loader",
    "classmethod",
    "numpy.diff",
    "numpy.log",
    "numpy.random.RandomState",
    "statsmodels.datasets.macrodata"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_adf_auto_bic": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "arch.unitroot.ADF",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_adf_auto_t_stat": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "FutureWarning",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.ADF",
    "len",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_adf_c_no_lags": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.DECIMAL_4",
    "arch.unitroot.ADF",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_adf_critical_value": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "arch.unitroot.ADF",
    "arch.unitroot.critical_values.dickey_fuller.tau_2010.T",
    "numpy.polyval",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_adf_ct_no_lags": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.DECIMAL_4",
    "arch.unitroot.ADF",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_adf_lags_10": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.DECIMAL_4",
    "arch.unitroot.ADF",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_adf_nc_no_lags": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.DECIMAL_4",
    "arch.unitroot.ADF",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_adf_no_lags": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.DECIMAL_4",
    "arch.unitroot.ADF",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_adf_no_options": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.DECIMAL_4",
    "arch.unitroot.ADF",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_dfgls": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.DECIMAL_4",
    "arch.unitroot.DFGLS",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_dfgls_auto": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "FutureWarning",
    "arch.tests.unitroot.test_unitroot.DECIMAL_4",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.DFGLS",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_dfgls_auto_low_memory": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "arch.unitroot.DFGLS",
    "float",
    "isinstance",
    "numpy.cumsum"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_dfgls_bad_trend": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.DFGLS"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_dfgls_c": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "FutureWarning",
    "arch.tests.unitroot.test_unitroot.DECIMAL_4",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.DFGLS",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_invalid_determinstic": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.ADF"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_kpss": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.DECIMAL_4",
    "arch.unitroot.KPSS",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_kpss_auto": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "arch.unitroot.KPSS",
    "numpy.ceil",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_kpss_c": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.DECIMAL_4",
    "arch.unitroot.KPSS",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_negative_lag": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.ADF"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_pp": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "FutureWarning",
    "arch.tests.unitroot.test_unitroot.DECIMAL_2",
    "arch.tests.unitroot.test_unitroot.DECIMAL_4",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.PhillipsPerron",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_pp_auto": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "FutureWarning",
    "arch.tests.unitroot.test_unitroot.DECIMAL_2",
    "arch.tests.unitroot.test_unitroot.DECIMAL_4",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.PhillipsPerron",
    "numpy.ceil",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_pp_bad_type": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.PhillipsPerron"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_variance_ratio": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "FutureWarning",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.VarianceRatio",
    "numpy.diff",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_variance_ratio_generic": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "arch.unitroot.VarianceRatio",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_variance_ratio_invalid_lags": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.VarianceRatio"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_variance_ratio_no_constant": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "arch.unitroot.VarianceRatio",
    "numpy.diff",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_variance_ratio_no_overlap": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "FutureWarning",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.tests.unitroot.test_unitroot.warnings",
    "arch.unitroot.VarianceRatio",
    "len",
    "numpy.diff",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_variance_ratio_non_robust": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "FutureWarning",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.VarianceRatio",
    "numpy.diff",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.VarianceRatio": {
  "data": {
   "shadows": "arch.unitroot.VarianceRatio"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.ZATestResult": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "float",
    "int",
    "str",
    "typing.NamedTuple",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "arch.tests.unitroot.test_unitroot.ZIVOT_ANDREWS_DATA": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_unitroot.ZivotAndrews": {
  "data": {
   "shadows": "arch.unitroot.ZivotAndrews"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot._autolag": {
  "data": {
   "shadows": "statsmodels.tsa.stattools._autolag"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot._autolag_ols": {
  "data": {
   "shadows": "arch.unitroot.unitroot._autolag_ols"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot._is_reduced_rank": {
  "data": {
   "shadows": "arch.unitroot.unitroot._is_reduced_rank"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.auto_bandwidth": {
  "data": {
   "shadows": "arch.unitroot.unitroot.auto_bandwidth"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.ceil": {
  "data": {
   "shadows": "numpy.ceil"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.dataset_loader": {
  "data": {
   "shadows": "arch.compat.statsmodels.dataset_loader"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.diff": {
  "data": {
   "shadows": "numpy.diff"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.kpss_autolag_data": {
  "data": {
   "lineno": 510
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_unitroot.lagmat": {
  "data": {
   "shadows": "statsmodels.tsa.stattools.lagmat"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.log": {
  "data": {
   "shadows": "numpy.log"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.mackinnoncrit": {
  "data": {
   "shadows": "arch.unitroot.unitroot.mackinnoncrit"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.mackinnonp": {
  "data": {
   "shadows": "arch.unitroot.unitroot.mackinnonp"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.macrodata": {
  "data": {
   "shadows": "statsmodels.datasets.macrodata"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.modechoice": {
  "data": {
   "shadows": "statsmodels.datasets.modechoice"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.nile": {
  "data": {
   "shadows": "statsmodels.datasets.nile"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.polyval": {
  "data": {
   "shadows": "numpy.polyval"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.randhie": {
  "data": {
   "shadows": "statsmodels.datasets.randhie"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.series": {
  "data": {
   "lineno": 537
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_unitroot.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.sunspots": {
  "data": {
   "shadows": "statsmodels.datasets.sunspots"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.tau_2010": {
  "data": {
   "shadows": "arch.unitroot.critical_values.dickey_fuller.tau_2010"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.test_adf_buggy_timeseries1": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.ADF",
    "arch.utility.exceptions.InfeasibleTestException",
    "numpy.asarray",
    "numpy.isfinite"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_adf_buggy_timeseries2": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.ADF",
    "arch.utility.exceptions.InfeasibleTestException",
    "numpy.asarray",
    "numpy.isfinite"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_adf_buggy_timeseries3": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.ADF",
    "arch.utility.exceptions.InfeasibleTestException",
    "numpy.asarray",
    "numpy.isfinite"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_auto_low_memory": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "arch.unitroot.ADF",
    "numpy.cumsum",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_bw_selection": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_unitroot.REAL_TIME_SERIES",
    "arch.tests.unitroot.test_unitroot.TRUE_BW_FROM_R_BA",
    "arch.tests.unitroot.test_unitroot.TRUE_BW_FROM_R_PA",
    "arch.tests.unitroot.test_unitroot.TRUE_BW_FROM_R_QS",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.unitroot.auto_bandwidth",
    "numpy.testing.assert_allclose",
    "round"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_invalid_trend": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.ADF",
    "numpy.random.standard_normal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_kpss_buggy_timeseries1": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.KPSS",
    "arch.utility.exceptions.InfeasibleTestException",
    "numpy.asarray",
    "numpy.isfinite"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_kpss_data_dependent_lags": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.kpss_autolag_data",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.KPSS",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_kpss_legacy": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.KPSS",
    "arch.utility.exceptions.InfeasibleTestException",
    "numpy.isfinite",
    "numpy.random.standard_normal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_mackinnoncrit_errors": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.unitroot.mackinnoncrit",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_mackinnonp_errors": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.unitroot.mackinnonp"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_mackinnonp_large": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "arch.unitroot.unitroot.mackinnonp"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_mackinnonp_small": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "arch.unitroot.unitroot.mackinnonp"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_nc_warning": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "FutureWarning",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.ADF",
    "numpy.random.standard_normal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_phillips_perron_specifed_lag": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.PhillipsPerron",
    "arch.utility.exceptions.InfeasibleTestException",
    "numpy.isfinite",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_rank_checker": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.unitroot._is_reduced_rank",
    "numpy.full",
    "numpy.nan",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_representations": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.ADF",
    "numpy.cumsum",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_trends_low_memory": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "FutureWarning",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.ADF",
    "numpy.cumsum",
    "numpy.random.RandomState",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_unknown_method": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.ADF",
    "numpy.cumsum",
    "numpy.isfinite",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_wrong_exceptions": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.ADF",
    "arch.unitroot.DFGLS",
    "arch.unitroot.KPSS",
    "arch.unitroot.PhillipsPerron",
    "arch.unitroot.ZivotAndrews",
    "arch.utility.exceptions.InfeasibleTestException",
    "numpy.arange",
    "numpy.isfinite",
    "numpy.random.standard_normal",
    "stat"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_wrong_exceptions_nearly_constant_series": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.ADF",
    "arch.unitroot.DFGLS",
    "arch.unitroot.KPSS",
    "arch.unitroot.PhillipsPerron",
    "arch.unitroot.ZivotAndrews",
    "arch.utility.exceptions.InfeasibleTestException",
    "numpy.isfinite",
    "numpy.zeros",
    "stat"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_wrong_exceptions_nearly_constant_series_za_lags": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.ZivotAndrews",
    "arch.utility.exceptions.InfeasibleTestException",
    "list",
    "numpy.isfinite",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_wrong_exceptions_variance_ratio": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.VarianceRatio",
    "arch.utility.exceptions.InfeasibleTestException",
    "numpy.arange",
    "numpy.isfinite",
    "numpy.random.standard_normal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_zivot_andrews": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.ZIVOT_ANDREWS_DATA",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.tests.unitroot.test_unitroot.series",
    "arch.unitroot.ZivotAndrews",
    "isinstance",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_zivot_andrews_error": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_unitroot.ZIVOT_ANDREWS_DATA",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.ZivotAndrews"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_zivot_andrews_reduced_rank": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.ZivotAndrews",
    "arch.utility.exceptions.InfeasibleTestException",
    "numpy.isfinite",
    "numpy.random.standard_normal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "arch.tests.univariate": {
  "data": {},
  "type": "module"
 },
 "arch.tests.univariate.test_base": {
  "data": {},
  "type": "module"
 },
 "arch.tests.univariate.test_base.format_float_fixed": {
  "data": {
   "shadows": "arch.univariate.base.format_float_fixed"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_base.test_format_float_fixed": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "arch.univariate.base.format_float_fixed"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_distribution": {
  "data": {
   "symbols_in_volume": [
    "arch.univariate.distribution.GeneralizedError",
    "arch.univariate.distribution.Normal",
    "arch.univariate.distribution.SkewStudent",
    "arch.univariate.distribution.StudentsT"
   ]
  },
  "type": "module"
 },
 "arch.tests.univariate.test_distribution.DISTRIBUTIONS": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "arch.tests.univariate.test_distribution.GeneralizedError": {
  "data": {
   "shadows": "arch.univariate.distribution.GeneralizedError"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_distribution.Normal": {
  "data": {
   "shadows": "arch.univariate.distribution.Normal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_distribution.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_distribution.SkewStudent": {
  "data": {
   "shadows": "arch.univariate.distribution.SkewStudent"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_distribution.StudentsT": {
  "data": {
   "shadows": "arch.univariate.distribution.StudentsT"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_distribution.TestDistributions": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.tests.univariate.test_distribution.TestDistributions.setup_class": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "classmethod",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_distribution.TestDistributions.test_ged": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_distribution.pytest",
    "arch.univariate.distribution.GeneralizedError",
    "hex",
    "id",
    "len",
    "numpy.abs",
    "numpy.array",
    "numpy.exp",
    "numpy.log",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "scipy.special.gamma",
    "simulator",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_distribution.TestDistributions.test_normal": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "len",
    "numpy.empty",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "scipy.stats.norm"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_distribution.TestDistributions.test_skewstudent": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_distribution.pytest",
    "arch.univariate.distribution.SkewStudent",
    "len",
    "max",
    "numpy.array",
    "numpy.log",
    "numpy.pi",
    "numpy.sign",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "scipy.special.gamma",
    "scipy.stats.kurtosis"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_distribution.TestDistributions.test_studentst": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_distribution.pytest",
    "arch.univariate.distribution.StudentsT",
    "len",
    "max",
    "numpy.array",
    "numpy.exp",
    "numpy.log",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "scipy.special.gammaln",
    "scipy.stats.kurtosis"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_distribution.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_distribution.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_distribution.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_distribution.distribution": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "arch.tests.univariate.test_distribution.pytest",
    "arch.univariate.distribution.GeneralizedError",
    "arch.univariate.distribution.SkewStudent",
    "arch.univariate.distribution.StudentsT"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_distribution.gamma": {
  "data": {
   "shadows": "scipy.special.gamma"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_distribution.gammaln": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_distribution.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_distribution.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_distribution.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_distribution.test_bad_input": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "TypeError",
    "arch.tests.univariate.test_distribution.pytest",
    "arch.univariate.distribution.Normal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_distribution.test_invalid_params": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_distribution.pytest",
    "arch.univariate.distribution.Normal",
    "arch.univariate.distribution.StudentsT",
    "dist",
    "dist.ppf",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_distribution.test_no_parameters_error": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_distribution.distribution",
    "arch.tests.univariate.test_distribution.pytest",
    "dist",
    "dist.cdf",
    "dist.ppf",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_distribution.test_roundtrip_cdf_ppf": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "arch.tests.univariate.test_distribution.DISTRIBUTIONS",
    "arch.tests.univariate.test_distribution.distribution",
    "arch.tests.univariate.test_distribution.pytest",
    "dist",
    "dist.cdf",
    "dist.ppf",
    "numpy.arange",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast": {
  "data": {},
  "type": "module"
 },
 "arch.tests.univariate.test_forecast.HARX": {
  "data": {
   "shadows": "arch.univariate.HARX"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_forecast.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_forecast.TestForecasting": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.setup_class": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "arch.univariate.arch_model",
    "classmethod",
    "numpy.array",
    "numpy.random.RandomState",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_ar1_forecast": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "arch.univariate.arch_model",
    "numpy.all",
    "numpy.arange",
    "numpy.asarray",
    "numpy.isnan",
    "numpy.ones_like",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_ar1_forecast_bootstrap": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "arch.univariate.arch_model",
    "numpy.random.RandomState",
    "pandas.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_ar1_forecast_simulation": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.arch_model",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.nan",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_ar2_forecast": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_forecast.pytest",
    "arch.univariate.arch_model",
    "numpy.all",
    "numpy.array",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.cumsum",
    "numpy.empty",
    "numpy.eye",
    "numpy.isnan",
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_ar2_garch11": {
  "data": {
   "lineno": 398
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_ar_forecasting": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "arch.univariate.mean._ar_forecast",
    "numpy.array",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_ar_to_impulse": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "arch.univariate.mean._ar_to_impulse",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_constant_mean_forecast": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "arch.univariate.arch_model",
    "numpy.all",
    "numpy.asarray",
    "numpy.isnan",
    "numpy.ones",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_first_last_obs": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "arch.univariate.arch_model",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_first_obs": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_forecast.pytest",
    "arch.univariate.arch_model",
    "numpy.all",
    "numpy.asarray",
    "numpy.isfinite",
    "numpy.isnan",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_fit_options": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "arch.univariate.arch_model"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_forecast_exogenous_regressors": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "arch.univariate.HARX",
    "numpy.asarray",
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "numpy.vstack",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_forecast_start_alternatives": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_forecast.pytest",
    "arch.univariate.arch_model",
    "datetime.datetime",
    "getattr",
    "numpy.datetime64",
    "pandas.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_frame_labels": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "arch.univariate.arch_model",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_har_forecast": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_forecast.pytest",
    "arch.univariate.arch_model",
    "arch.univariate.mean._ar_to_impulse",
    "numpy.asarray",
    "numpy.cumsum",
    "numpy.empty",
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_holdback_ar": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "arch.univariate.arch_model",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_holdback_first_obs": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_forecast.pytest",
    "arch.univariate.arch_model",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_holdback_lastobs": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_forecast.pytest",
    "arch.univariate.arch_model",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_last_obs": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "arch.univariate.arch_model",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_zero_mean_forecast": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "arch.univariate.arch_model",
    "numpy.all",
    "numpy.asarray",
    "numpy.isnan",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "pandas.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast._ar_forecast": {
  "data": {
   "shadows": "arch.univariate.mean._ar_forecast"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_forecast._ar_to_impulse": {
  "data": {
   "shadows": "arch.univariate.mean._ar_to_impulse"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_forecast.arch_model": {
  "data": {
   "shadows": "arch.univariate.arch_model"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_forecast.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_forecast.assert_frame_equal": {
  "data": {
   "shadows": "pandas.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_forecast.dt": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_forecast.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_forecast.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_forecast.preserved_state": {
  "data": {
   "shadows": "arch.tests.univariate.test_variance_forecasting.preserved_state"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_forecast.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "arch.tests.univariate.test_mean.USE_CYTHON",
    "arch.tests.univariate.test_mean.scipy",
    "distutils.version.LooseVersion"
   ]
  },
  "type": "module"
 },
 "arch.tests.univariate.test_mean.ARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.ARCH"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.ARCHModelForecast": {
  "data": {
   "shadows": "arch.univariate.base.ARCHModelForecast"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.ARCHModelResult": {
  "data": {
   "shadows": "arch.univariate.base.ARCHModelResult"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.ARX": {
  "data": {
   "shadows": "arch.univariate.mean.ARX"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.ConstantMean": {
  "data": {
   "shadows": "arch.univariate.mean.ConstantMean"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.ConstantVariance": {
  "data": {
   "shadows": "arch.univariate.volatility.ConstantVariance"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.ConvergenceWarning": {
  "data": {
   "shadows": "arch.utility.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.DISPLAY": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "arch.tests.univariate.test_mean.DataScaleWarning": {
  "data": {
   "shadows": "arch.utility.exceptions.DataScaleWarning"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.EGARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.EGARCH"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.EWMAVariance": {
  "data": {
   "shadows": "arch.univariate.volatility.EWMAVariance"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.FIGARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.FIGARCH"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.FixedVariance": {
  "data": {
   "shadows": "arch.univariate.volatility.FixedVariance"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.GARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.GARCH"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.GeneralizedError": {
  "data": {
   "shadows": "arch.univariate.distribution.GeneralizedError"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.HARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.HARCH"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.HARX": {
  "data": {
   "shadows": "arch.univariate.mean.HARX"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.HAS_MATPLOTLIB": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "arch.tests.univariate.test_mean.LS": {
  "data": {
   "shadows": "arch.univariate.mean.LS"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.MIDASHyperbolic": {
  "data": {
   "shadows": "arch.univariate.volatility.MIDASHyperbolic"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.Normal": {
  "data": {
   "shadows": "arch.univariate.distribution.Normal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.OptimizeResult": {
  "data": {
   "shadows": "scipy.optimize.OptimizeResult"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.RiskMetrics2006": {
  "data": {
   "shadows": "arch.univariate.volatility.RiskMetrics2006"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.SP_LT_14": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "arch.tests.univariate.test_mean.SkewStudent": {
  "data": {
   "shadows": "arch.univariate.distribution.SkewStudent"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.StudentsT": {
  "data": {
   "shadows": "arch.univariate.distribution.StudentsT"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.TestMeanModel": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.setup_class": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_mean.pytest",
    "arch.univariate.distribution.Normal",
    "arch.univariate.mean.ZeroMean",
    "arch.univariate.volatility.GARCH",
    "classmethod",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.var",
    "numpy.zeros_like",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_align": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_mean.pytest",
    "arch.univariate.base._align_forecast",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_ar": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.base.ARCHModelForecast",
    "arch.univariate.distribution.StudentsT",
    "arch.univariate.mean.ARX",
    "arch.univariate.volatility.GARCH",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.empty",
    "numpy.inf",
    "numpy.linalg.pinv",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_ar_no_lags": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.mean.ARX",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_ar_plot": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.HAS_MATPLOTLIB",
    "arch.tests.univariate.test_mean.pytest",
    "arch.univariate.distribution.StudentsT",
    "arch.univariate.mean.ARX",
    "arch.univariate.volatility.GARCH"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_arch_arx": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.mean.ARX",
    "arch.univariate.volatility.ARCH",
    "hex",
    "id",
    "isinstance",
    "list",
    "numpy.testing.assert_equal",
    "pandas.DataFrame",
    "pandas.Series",
    "scipy.optimize.OptimizeResult",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_arch_model": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.pytest",
    "arch.univariate.distribution.Normal",
    "arch.univariate.mean.ARX",
    "arch.univariate.mean.ConstantMean",
    "arch.univariate.mean.HARX",
    "arch.univariate.mean.LS",
    "arch.univariate.mean.ZeroMean",
    "arch.univariate.mean.arch_model",
    "arch.univariate.volatility.ARCH",
    "arch.univariate.volatility.ConstantVariance",
    "arch.univariate.volatility.EGARCH",
    "arch.univariate.volatility.FIGARCH",
    "arch.univariate.volatility.GARCH",
    "arch.univariate.volatility.HARCH",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_arx": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.mean.ARX",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.inf",
    "numpy.linalg.pinv",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "pandas.DataFrame",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_constant_mean": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.pytest",
    "arch.univariate.base.ARCHModelForecast",
    "arch.univariate.distribution.Normal",
    "arch.univariate.mean.ConstantMean",
    "arch.univariate.volatility.ConstantVariance",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.empty",
    "numpy.inf",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "pandas.DataFrame",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_constant_mean_fixed_variance": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.mean.ARX",
    "arch.univariate.mean.ConstantMean",
    "arch.univariate.volatility.FixedVariance",
    "len"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_convergence_warning": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.SP_LT_14",
    "arch.tests.univariate.test_mean.pytest",
    "arch.univariate.mean.arch_model",
    "arch.utility.exceptions.ConvergenceWarning",
    "arch.utility.exceptions.DataScaleWarning",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_date_first_last_obs": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.mean.ConstantMean",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_egarch": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.distribution.StudentsT",
    "arch.univariate.mean.ConstantMean",
    "arch.univariate.volatility.EGARCH"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_empty_mean": {
  "data": {
   "lineno": 1017,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.distribution.Normal",
    "arch.univariate.mean.HARX",
    "arch.univariate.mean.ZeroMean",
    "arch.univariate.volatility.ConstantVariance",
    "pandas.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_errors": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_mean.pytest",
    "arch.univariate.distribution.Normal",
    "arch.univariate.mean.ARX",
    "arch.univariate.mean.HARX",
    "arch.univariate.volatility.ConstantVariance",
    "arch.univariate.volatility.GARCH",
    "numpy.array",
    "numpy.eye",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_first_after_last": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.pytest",
    "arch.univariate.mean.arch_model"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_first_last_obs": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.mean.ARX",
    "arch.univariate.volatility.GARCH",
    "numpy.nan",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_fixed_user_parameters": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.mean.arch_model",
    "numpy.testing.assert_equal",
    "pandas.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_fixed_user_parameters_new_model": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.mean.arch_model",
    "numpy.testing.assert_equal",
    "pandas.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_har": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.pytest",
    "arch.univariate.base.ARCHModelForecast",
    "arch.univariate.mean.HARX",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.inf",
    "numpy.linalg.pinv",
    "numpy.mean",
    "numpy.ones",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "pandas.DataFrame",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_har_lag_specifications": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.mean.ARX",
    "arch.univariate.mean.HARX",
    "numpy.asarray",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_harx": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.pytest",
    "arch.univariate.mean.HARX",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.inf",
    "numpy.linalg.pinv",
    "numpy.mean",
    "numpy.ones",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_harx_error": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_mean.pytest",
    "arch.univariate.mean.HARX"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_little_or_no_data": {
  "data": {
   "lineno": 1009,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.pytest",
    "arch.univariate.mean.HARX"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_model_obs_equivalence": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.mean.arch_model",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_model_obs_equivalence_ar": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.mean.arch_model",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_multiple_lags": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.mean.ConstantMean",
    "arch.univariate.volatility.ARCH",
    "arch.univariate.volatility.EGARCH",
    "arch.univariate.volatility.GARCH",
    "arch.univariate.volatility.HARCH",
    "process"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_no_param_volatility": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.mean.ARX",
    "arch.univariate.mean.ConstantMean",
    "arch.univariate.volatility.EWMAVariance",
    "arch.univariate.volatility.RiskMetrics2006",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_optimization_options": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.warnings",
    "arch.univariate.mean.arch_model",
    "len"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_output_options": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.sys",
    "arch.univariate.mean.arch_model",
    "io.StringIO",
    "len"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_pandas": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "arch.univariate.mean.LS",
    "arch.univariate.mean.arch_model",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_sample_adjustment": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.mean.arch_model",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_starting_values": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.warnings",
    "arch.univariate.base.ARCHModelResult",
    "arch.univariate.mean.arch_model",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_summary": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.distribution.GeneralizedError",
    "arch.univariate.distribution.SkewStudent",
    "arch.univariate.distribution.StudentsT",
    "arch.univariate.mean.arch_model",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_warnings": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.warnings",
    "arch.univariate.mean.ARX",
    "arch.univariate.mean.HARX",
    "len",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_zero_mean": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.base.ARCHModelForecast",
    "arch.univariate.distribution.Normal",
    "arch.univariate.mean.ZeroMean",
    "arch.univariate.volatility.ConstantVariance",
    "arch.univariate.volatility.GARCH",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.empty",
    "numpy.mean",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "pandas.DataFrame",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.USE_CYTHON": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "arch.tests.univariate.test_mean.ZeroMean": {
  "data": {
   "shadows": "arch.univariate.mean.ZeroMean"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean._align_forecast": {
  "data": {
   "shadows": "arch.univariate.base._align_forecast"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.arch.univariate.recursions": {
  "data": {
   "shadows": "arch.univariate.recursions"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.arch.univariate.recursions_python": {
  "data": {
   "shadows": "arch.univariate.recursions_python"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.arch_model": {
  "data": {
   "shadows": "arch.univariate.mean.arch_model"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.assert_frame_equal": {
  "data": {
   "shadows": "pandas.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.assert_series_equal": {
  "data": {
   "shadows": "pandas.testing.assert_series_equal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.matplotlib.pyplot": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.rec": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "arch.tests.univariate.test_mean.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.simulated_data": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.pytest",
    "arch.univariate.distribution.Normal",
    "arch.univariate.mean.ZeroMean",
    "arch.univariate.volatility.GARCH",
    "numpy.array",
    "numpy.asarray",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.smlm": {
  "data": {
   "shadows": "statsmodels.regression.linear_model"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.smtools": {
  "data": {
   "shadows": "statsmodels.tools"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.test_arch_lm": {
  "data": {
   "lineno": 1079,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.simulated_data",
    "arch.univariate.mean.ZeroMean",
    "arch.univariate.volatility.GARCH",
    "int",
    "len",
    "numpy.ceil",
    "numpy.power",
    "numpy.testing.assert_almost_equal",
    "pandas.Series",
    "pandas.concat",
    "range",
    "scipy.stats.chi2",
    "statsmodels.regression.linear_model.OLS",
    "statsmodels.tools.add_constant"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.test_autoscale": {
  "data": {
   "lineno": 1113,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.pytest",
    "arch.univariate.distribution.Normal",
    "arch.univariate.mean.arch_model",
    "arch.utility.exceptions.DataScaleWarning",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal",
    "pandas.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.test_backcast": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.pytest",
    "arch.tests.univariate.test_mean.simulated_data",
    "arch.univariate.mean.ZeroMean",
    "arch.univariate.volatility.ConstantVariance",
    "arch.univariate.volatility.EGARCH",
    "arch.univariate.volatility.EWMAVariance",
    "arch.univariate.volatility.GARCH",
    "arch.univariate.volatility.HARCH",
    "arch.univariate.volatility.RiskMetrics2006",
    "numpy.asarray",
    "numpy.exp",
    "numpy.testing.assert_array_almost_equal",
    "volatility"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.test_backcast_error": {
  "data": {
   "lineno": 1052,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.pytest",
    "arch.tests.univariate.test_mean.simulated_data",
    "arch.univariate.mean.ZeroMean",
    "arch.univariate.volatility.GARCH",
    "arch.univariate.volatility.RiskMetrics2006",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.test_fit_smoke": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.pytest",
    "arch.tests.univariate.test_mean.simulated_data",
    "arch.univariate.mean.ZeroMean",
    "arch.univariate.volatility.ConstantVariance",
    "arch.univariate.volatility.EGARCH",
    "arch.univariate.volatility.EWMAVariance",
    "arch.univariate.volatility.FIGARCH",
    "arch.univariate.volatility.GARCH",
    "arch.univariate.volatility.HARCH",
    "arch.univariate.volatility.MIDASHyperbolic",
    "arch.univariate.volatility.RiskMetrics2006",
    "volatility"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.test_no_variance": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.pytest",
    "arch.univariate.mean.arch_model",
    "arch.utility.exceptions.ConvergenceWarning",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_moment": {
  "data": {
   "symbols_in_volume": [
    "arch.univariate.distribution.GeneralizedError",
    "arch.univariate.distribution.Normal",
    "arch.univariate.distribution.SkewStudent",
    "arch.univariate.distribution.StudentsT"
   ]
  },
  "type": "module"
 },
 "arch.tests.univariate.test_moment.DISTRIBUTIONS": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "arch.tests.univariate.test_moment.GeneralizedError": {
  "data": {
   "shadows": "arch.univariate.distribution.GeneralizedError"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_moment.Normal": {
  "data": {
   "shadows": "arch.univariate.distribution.Normal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_moment.SkewStudent": {
  "data": {
   "shadows": "arch.univariate.distribution.SkewStudent"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_moment.StudentsT": {
  "data": {
   "shadows": "arch.univariate.distribution.StudentsT"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_moment.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_moment.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_moment.exp": {
  "data": {
   "shadows": "numpy.exp"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_moment.gammaln": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_moment.inf": {
  "data": {
   "shadows": "numpy.inf"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_moment.log": {
  "data": {
   "shadows": "numpy.log"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_moment.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_moment.ones_like": {
  "data": {
   "shadows": "numpy.ones_like"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_moment.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_moment.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_moment.quad": {
  "data": {
   "shadows": "scipy.integrate.quad"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_moment.test_moment": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "arch.tests.univariate.test_moment.DISTRIBUTIONS",
    "arch.tests.univariate.test_moment.pytest",
    "arch.univariate.distribution.SkewStudent",
    "isinstance",
    "numpy.exp",
    "numpy.inf",
    "numpy.log",
    "numpy.nan",
    "numpy.pi",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "range",
    "scipy.integrate.quad",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_moment.test_moment.f": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.ones_like"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "arch.tests.univariate.test_recursions.missing_extension",
    "arch.tests.univariate.test_recursions.os",
    "arch.tests.univariate.test_recursions.pytest",
    "arch.univariate.recursions",
    "arch.univariate.recursions_python"
   ]
  },
  "type": "module"
 },
 "arch.tests.univariate.test_recursions.CYTHON_COVERAGE": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "arch.tests.univariate.test_recursions.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_recursions.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_recursions.TestRecursions": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.setup_class": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "classmethod",
    "numpy.array",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_arch": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.rec",
    "arch.univariate.recursions_python.arch_recursion",
    "arch.univariate.recursions_python.arch_recursion_python",
    "numpy.all",
    "numpy.array",
    "numpy.inf",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_bounds": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.rec",
    "arch.univariate.recursions_python.arch_recursion",
    "arch.univariate.recursions_python.garch_recursion",
    "arch.univariate.recursions_python.harch_recursion",
    "numpy.all",
    "numpy.array",
    "numpy.int32",
    "numpy.sign",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_egarch": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.rec",
    "arch.univariate.recursions_python.egarch_recursion",
    "arch.univariate.recursions_python.egarch_recursion_python",
    "numpy.abs",
    "numpy.all",
    "numpy.array",
    "numpy.empty_like",
    "numpy.exp",
    "numpy.inf",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_egarch_performance": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.CYTHON_COVERAGE",
    "arch.tests.univariate.test_recursions.Timer",
    "arch.tests.univariate.test_recursions.missing_extension",
    "arch.tests.univariate.test_recursions.missing_numba",
    "arch.tests.univariate.test_recursions.pytest"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_figarch_performance": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.CYTHON_COVERAGE",
    "arch.tests.univariate.test_recursions.Timer",
    "arch.tests.univariate.test_recursions.missing_extension",
    "arch.tests.univariate.test_recursions.missing_numba",
    "arch.tests.univariate.test_recursions.pytest"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_figarch_recursion": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.rec",
    "arch.univariate.recursions_python.figarch_recursion",
    "arch.univariate.recursions_python.figarch_recursion_python",
    "max",
    "numpy.array",
    "numpy.empty_like",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_figarch_weights": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.rec",
    "numpy.array",
    "numpy.empty_like",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_garch": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.rec",
    "arch.univariate.recursions_python.garch_recursion",
    "arch.univariate.recursions_python.garch_recursion_python",
    "numpy.all",
    "numpy.array",
    "numpy.inf",
    "numpy.sign",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_garch_arch": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.rec",
    "numpy.array",
    "numpy.sign",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_garch_direct": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.rec",
    "numpy.abs",
    "numpy.array",
    "numpy.sign",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_garch_no_o": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.rec",
    "arch.univariate.recursions_python.garch_recursion",
    "numpy.array",
    "numpy.sign",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_garch_no_p": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.rec",
    "arch.univariate.recursions_python.garch_recursion",
    "numpy.array",
    "numpy.sign",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_garch_no_q": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.rec",
    "arch.univariate.recursions_python.garch_recursion",
    "numpy.array",
    "numpy.sign",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_garch_performance": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.CYTHON_COVERAGE",
    "arch.tests.univariate.test_recursions.Timer",
    "arch.tests.univariate.test_recursions.missing_extension",
    "arch.tests.univariate.test_recursions.missing_numba",
    "arch.tests.univariate.test_recursions.pytest"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_garch_power_1": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.rec",
    "arch.univariate.recursions_python.garch_recursion",
    "numpy.abs",
    "numpy.array",
    "numpy.sign",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_harch": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.rec",
    "arch.univariate.recursions_python.harch_recursion",
    "arch.univariate.recursions_python.harch_recursion_python",
    "numpy.all",
    "numpy.array",
    "numpy.inf",
    "numpy.int32",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_harch_performance": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.CYTHON_COVERAGE",
    "arch.tests.univariate.test_recursions.Timer",
    "arch.tests.univariate.test_recursions.missing_extension",
    "arch.tests.univariate.test_recursions.missing_numba",
    "arch.tests.univariate.test_recursions.pytest"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_midas_hyperbolic": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.rec",
    "arch.univariate.recursions_python.midas_recursion",
    "arch.univariate.recursions_python.midas_recursion_python",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.inf",
    "numpy.testing.assert_almost_equal",
    "scipy.special.gamma"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_midas_performance": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.CYTHON_COVERAGE",
    "arch.tests.univariate.test_recursions.Timer",
    "arch.tests.univariate.test_recursions.missing_extension",
    "arch.tests.univariate.test_recursions.missing_numba",
    "arch.tests.univariate.test_recursions.pytest"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.Timer": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.tests.univariate.test_recursions.Timer.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "float",
    "numpy.inf",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.Timer.display": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "len",
    "print"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.Timer.time": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.timeit",
    "min"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_recursions.gamma": {
  "data": {
   "shadows": "scipy.special.gamma"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_recursions.missing_extension": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "arch.tests.univariate.test_recursions.missing_numba": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "arch.tests.univariate.test_recursions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_recursions.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_recursions.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_recursions.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_recursions.pytestmark": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "arch.tests.univariate.test_recursions.rec": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "arch.tests.univariate.test_recursions.rec_cython": {
  "data": {
   "shadows": "arch.univariate.recursions"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_recursions.recpy": {
  "data": {
   "shadows": "arch.univariate.recursions_python"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_recursions.test_bounds_check": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": [
    "arch.univariate.recursions_python.bounds_check_python",
    "numpy.array",
    "numpy.inf",
    "numpy.log",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.timeit": {
  "data": {
   "shadows": "timeit"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_rescale": {
  "data": {},
  "type": "module"
 },
 "arch.tests.univariate.test_rescale.GARCH": {
  "data": {
   "shadows": "arch.univariate.GARCH"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_rescale.Normal": {
  "data": {
   "shadows": "arch.univariate.Normal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_rescale.ZeroMean": {
  "data": {
   "shadows": "arch.univariate.ZeroMean"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_rescale.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_rescale.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_rescale.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_rescale.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_rescale.small_data": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "arch.tests.univariate.test_rescale.pytest",
    "arch.univariate.GARCH",
    "arch.univariate.Normal",
    "arch.univariate.ZeroMean",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_rescale.small_data2": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "arch.tests.univariate.test_rescale.pytest",
    "arch.univariate.GARCH",
    "arch.univariate.Normal",
    "arch.univariate.ZeroMean",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_rescale.std_data": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "arch.tests.univariate.test_rescale.pytest",
    "arch.univariate.GARCH",
    "arch.univariate.Normal",
    "arch.univariate.ZeroMean",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_rescale.test_blank": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "arch.tests.univariate.test_rescale.small_data",
    "arch.tests.univariate.test_rescale.std_data",
    "arch.univariate.GARCH",
    "arch.univariate.ZeroMean",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_rescale.test_reproducibility": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "arch.tests.univariate.test_rescale.small_data",
    "arch.tests.univariate.test_rescale.small_data2",
    "pandas.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_rescale.test_rescale_fit": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "arch.tests.univariate.test_rescale.small_data",
    "arch.univariate.GARCH",
    "arch.univariate.ZeroMean",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "arch.tests.univariate.test_variance_forecasting.PreservedState"
   ]
  },
  "type": "module"
 },
 "arch.tests.univariate.test_variance_forecasting.BootstrapRng": {
  "data": {
   "shadows": "arch.univariate.volatility.BootstrapRng"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.ConstantMean": {
  "data": {
   "shadows": "arch.univariate.mean.ConstantMean"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.ConstantVariance": {
  "data": {
   "shadows": "arch.univariate.volatility.ConstantVariance"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.EGARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.EGARCH"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.EWMAVariance": {
  "data": {
   "shadows": "arch.univariate.volatility.EWMAVariance"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.FIGARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.FIGARCH"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.FixedVariance": {
  "data": {
   "shadows": "arch.univariate.volatility.FixedVariance"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.GARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.GARCH"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.HARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.HARCH"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.MIDASHyperbolic": {
  "data": {
   "shadows": "arch.univariate.volatility.MIDASHyperbolic"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.Normal": {
  "data": {
   "shadows": "arch.univariate.distribution.Normal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.PreservedState": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.tests.univariate.test_variance_forecasting.PreservedState.__enter__": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.PreservedState.__exit__": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.PreservedState.__init__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.RiskMetrics2006": {
  "data": {
   "shadows": "arch.univariate.volatility.RiskMetrics2006"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.StudentsT": {
  "data": {
   "shadows": "arch.univariate.distribution.StudentsT"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.TestBootstrapRng": {
  "data": {
   "lineno": 2080,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.tests.univariate.test_variance_forecasting.TestBootstrapRng.setup_class": {
  "data": {
   "lineno": 2081,
   "symbols_in_volume": [
    "classmethod",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestBootstrapRng.test_bootstrap_rng": {
  "data": {
   "lineno": 2113,
   "symbols_in_volume": [
    "TypeError",
    "arch.tests.univariate.test_variance_forecasting.pytest",
    "arch.univariate.volatility.BootstrapRng",
    "numpy.arange",
    "numpy.max",
    "numpy.random.RandomState",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestBootstrapRng.test_bs_rng": {
  "data": {
   "lineno": 2085,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.volatility.BootstrapRng",
    "numpy.floor",
    "numpy.int64",
    "numpy.testing.assert_allclose",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestBootstrapRng.test_bs_rng_errors": {
  "data": {
   "lineno": 2101,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "arch.tests.univariate.test_variance_forecasting.pytest",
    "arch.univariate.volatility.BootstrapRng",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.setup_class": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "classmethod",
    "numpy.random.RandomState",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_arch_1_forecast": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "arch.univariate.volatility.GARCH",
    "numpy.all",
    "numpy.array",
    "numpy.empty",
    "numpy.isfinite",
    "numpy.isnan",
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_arch_1_forecast_bootstrap": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.volatility.GARCH",
    "numpy.all",
    "numpy.array",
    "numpy.floor",
    "numpy.int64",
    "numpy.isnan",
    "numpy.nan",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_arch_1_forecast_simulation": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.GARCH",
    "numpy.all",
    "numpy.array",
    "numpy.isnan",
    "numpy.nan",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_arch_2_forecast": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting._simple_direct_gjrgarch_forecaster",
    "arch.univariate.volatility.GARCH",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_constant_variance_bootstrap": {
  "data": {
   "lineno": 1276,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.volatility.ConstantVariance",
    "numpy.all",
    "numpy.array",
    "numpy.empty",
    "numpy.floor",
    "numpy.int64",
    "numpy.isnan",
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_constant_variance_forecast": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_variance_forecasting.pytest",
    "arch.univariate.volatility.ConstantVariance",
    "numpy.all",
    "numpy.array",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_constant_variance_simulation": {
  "data": {
   "lineno": 1204,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.ConstantVariance",
    "numpy.all",
    "numpy.array",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.isnan",
    "numpy.nan",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_egarch_101_forecast": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.EGARCH",
    "numpy.abs",
    "numpy.array",
    "numpy.empty",
    "numpy.empty_like",
    "numpy.exp",
    "numpy.floor",
    "numpy.inf",
    "numpy.int64",
    "numpy.log",
    "numpy.nan",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_egarch_111_forecast": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.tests.univariate.test_variance_forecasting.pytest",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.EGARCH",
    "numpy.abs",
    "numpy.array",
    "numpy.empty",
    "numpy.empty_like",
    "numpy.exp",
    "numpy.floor",
    "numpy.inf",
    "numpy.int64",
    "numpy.log",
    "numpy.nan",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_egarch_211_forecast": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.EGARCH",
    "numpy.abs",
    "numpy.array",
    "numpy.empty",
    "numpy.empty_like",
    "numpy.exp",
    "numpy.floor",
    "numpy.inf",
    "numpy.int64",
    "numpy.log",
    "numpy.nan",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_egarch_212_forecast_smoke": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.EGARCH",
    "numpy.abs",
    "numpy.array",
    "numpy.empty",
    "numpy.empty_like",
    "numpy.exp",
    "numpy.floor",
    "numpy.inf",
    "numpy.int64",
    "numpy.log",
    "numpy.nan",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_ewma_bootstrap": {
  "data": {
   "lineno": 1710,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.EWMAVariance",
    "numpy.all",
    "numpy.array",
    "numpy.empty",
    "numpy.empty_like",
    "numpy.floor",
    "numpy.int",
    "numpy.isfinite",
    "numpy.isnan",
    "numpy.nan",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_ewma_forecast": {
  "data": {
   "lineno": 1597,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting._compare_truncated_forecasts",
    "arch.univariate.volatility.EWMAVariance",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_ewma_simulation": {
  "data": {
   "lineno": 1630,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.EWMAVariance",
    "numpy.all",
    "numpy.array",
    "numpy.empty",
    "numpy.isfinite",
    "numpy.isnan",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_figarch_analytical": {
  "data": {
   "lineno": 1914,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_variance_forecasting._simple_direct_gjrgarch_forecaster",
    "arch.tests.univariate.test_variance_forecasting.pytest",
    "arch.univariate.recursions.figarch_weights",
    "arch.univariate.volatility.FIGARCH",
    "numpy.array",
    "numpy.r_",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_figarch_simulation": {
  "data": {
   "lineno": 1941,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions.figarch_weights",
    "arch.univariate.volatility.FIGARCH",
    "arch.univariate.volatility.GARCH",
    "numpy.array",
    "numpy.r_",
    "numpy.testing.assert_allclose",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_fixed_variance": {
  "data": {
   "lineno": 2036,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.FixedVariance",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.isnan",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_garch11_bootstrap": {
  "data": {
   "lineno": 1432,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.volatility.GARCH",
    "numpy.all",
    "numpy.array",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.floor",
    "numpy.inf",
    "numpy.int64",
    "numpy.isnan",
    "numpy.nan",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_garch11_simulation": {
  "data": {
   "lineno": 1331,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.GARCH",
    "numpy.all",
    "numpy.array",
    "numpy.isnan",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_garch_11_forecast": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting._simple_direct_gjrgarch_forecaster",
    "arch.univariate.volatility.GARCH",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_garch_12_forecast": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting._simple_direct_gjrgarch_forecaster",
    "arch.univariate.volatility.GARCH",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_garch_21_forecast": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting._simple_direct_gjrgarch_forecaster",
    "arch.univariate.volatility.GARCH",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_garch_22_forecast": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting._simple_direct_gjrgarch_forecaster",
    "arch.univariate.volatility.GARCH",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_gjrgarch222_simulation": {
  "data": {
   "lineno": 1501,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.GARCH",
    "numpy.array",
    "numpy.concatenate",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_gjrgarch_111_forecast": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting._simple_direct_gjrgarch_forecaster",
    "arch.univariate.volatility.GARCH",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_harch_forecast": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting._simple_direct_gjrgarch_forecaster",
    "arch.univariate.volatility.HARCH",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_harch_forecast_bootstrap": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.HARCH",
    "numpy.array",
    "numpy.empty",
    "numpy.empty_like",
    "numpy.floor",
    "numpy.int64",
    "numpy.nan",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_harch_forecast_simulation": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.HARCH",
    "numpy.array",
    "numpy.empty",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_midas_analytical": {
  "data": {
   "lineno": 1843,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting._simple_direct_gjrgarch_forecaster",
    "arch.univariate.volatility.MIDASHyperbolic",
    "numpy.array",
    "numpy.r_",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_midas_asym_analytical": {
  "data": {
   "lineno": 1859,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting._simple_direct_gjrgarch_forecaster",
    "arch.univariate.volatility.MIDASHyperbolic",
    "numpy.array",
    "numpy.r_",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_midas_asym_simulation": {
  "data": {
   "lineno": 1980,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.GARCH",
    "arch.univariate.volatility.MIDASHyperbolic",
    "numpy.array",
    "numpy.r_",
    "numpy.testing.assert_allclose",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_midas_bootstrap_smoke": {
  "data": {
   "lineno": 2019,
   "symbols_in_volume": [
    "arch.univariate.volatility.MIDASHyperbolic",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_midas_simulation": {
  "data": {
   "lineno": 1875,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.GARCH",
    "arch.univariate.volatility.MIDASHyperbolic",
    "numpy.array",
    "numpy.r_",
    "numpy.testing.assert_allclose",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_rm2006_bootstrap_smoke": {
  "data": {
   "lineno": 1826,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.volatility.RiskMetrics2006",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_rm2006_forecast": {
  "data": {
   "lineno": 1782,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting._compare_truncated_forecasts",
    "arch.univariate.volatility.RiskMetrics2006",
    "numpy.array",
    "numpy.empty_like",
    "numpy.inf",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_rm2006_simulation_smoke": {
  "data": {
   "lineno": 1806,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.RiskMetrics2006",
    "numpy.array",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_tarch_111_forecast": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_variance_forecasting.pytest",
    "arch.univariate.volatility.GARCH",
    "numpy.abs",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_tarch_111_forecast_bootstrap": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.tests.univariate.test_variance_forecasting.pytest",
    "arch.univariate.distribution.StudentsT",
    "arch.univariate.volatility.GARCH",
    "numpy.abs",
    "numpy.array",
    "numpy.floor",
    "numpy.int",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_tarch_111_forecast_simulation": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.StudentsT",
    "arch.univariate.volatility.GARCH",
    "numpy.abs",
    "numpy.array",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting._compare_truncated_forecasts": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.isnan",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting._simple_direct_gjrgarch_forecaster": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "arch.univariate.recursions_python.garch_recursion",
    "max",
    "numpy.empty",
    "numpy.sign",
    "numpy.sqrt",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.arch_model": {
  "data": {
   "shadows": "arch.univariate.arch_model"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.figarch_weights": {
  "data": {
   "shadows": "arch.univariate.recursions.figarch_weights"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.garch_recursion": {
  "data": {
   "shadows": "arch.univariate.recursions_python.garch_recursion"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.preserved_state": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "arch.tests.univariate.test_variance_forecasting.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.test_external_rng": {
  "data": {
   "lineno": 2130,
   "symbols_in_volume": [
    "arch.univariate.arch_model",
    "arch.univariate.distribution.Normal",
    "arch.univariate.mean.ConstantMean",
    "arch.univariate.volatility.GARCH",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "pandas.date_range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "arch.tests.univariate.test_volatility.pytest",
    "arch.univariate.recursions",
    "arch.univariate.recursions_python"
   ]
  },
  "type": "module"
 },
 "arch.tests.univariate.test_volatility.ARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.ARCH"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.ConstantVariance": {
  "data": {
   "shadows": "arch.univariate.volatility.ConstantVariance"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.EGARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.EGARCH"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.EWMAVariance": {
  "data": {
   "shadows": "arch.univariate.volatility.EWMAVariance"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.FIGARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.FIGARCH"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.FixedVariance": {
  "data": {
   "shadows": "arch.univariate.volatility.FixedVariance"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.GARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.GARCH"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.HARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.HARCH"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.InitialValueWarning": {
  "data": {
   "shadows": "arch.utility.exceptions.InitialValueWarning"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.MIDASHyperbolic": {
  "data": {
   "shadows": "arch.univariate.volatility.MIDASHyperbolic"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.Normal": {
  "data": {
   "shadows": "arch.univariate.distribution.Normal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.RiskMetrics2006": {
  "data": {
   "shadows": "arch.univariate.volatility.RiskMetrics2006"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.SkewStudent": {
  "data": {
   "shadows": "arch.univariate.distribution.SkewStudent"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.StudentsT": {
  "data": {
   "shadows": "arch.univariate.distribution.StudentsT"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.setup_class": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "classmethod",
    "numpy.random.RandomState",
    "numpy.var",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_arch": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions.arch_recursion",
    "arch.univariate.volatility.ARCH",
    "hex",
    "id",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.eye",
    "numpy.mean",
    "numpy.ones_like",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.vstack",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_arch_harch": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "arch.univariate.volatility.ARCH",
    "arch.univariate.volatility.HARCH",
    "hex",
    "id",
    "isinstance",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros_like",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_arch_multiple_lags": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions.arch_recursion",
    "arch.univariate.volatility.ARCH",
    "numpy.array",
    "numpy.eye",
    "numpy.mean",
    "numpy.ones_like",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.vstack",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_constant_variance": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.ConstantVariance",
    "hex",
    "id",
    "isinstance",
    "numpy.array",
    "numpy.eye",
    "numpy.mean",
    "numpy.ones_like",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_egarch": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_volatility.pytest",
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions.egarch_recursion",
    "arch.univariate.volatility.EGARCH",
    "arch.utility.exceptions.InitialValueWarning",
    "hex",
    "id",
    "isinstance",
    "len",
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.empty",
    "numpy.exp",
    "numpy.inf",
    "numpy.log",
    "numpy.mean",
    "numpy.ones_like",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.vstack",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_egarch_100": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions.egarch_recursion",
    "arch.univariate.volatility.EGARCH",
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.empty",
    "numpy.exp",
    "numpy.log",
    "numpy.ones_like",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_errors": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_volatility.pytest",
    "arch.univariate.volatility.EWMAVariance",
    "arch.univariate.volatility.GARCH",
    "arch.univariate.volatility.RiskMetrics2006"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_ewma": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions.garch_recursion",
    "arch.univariate.volatility.EWMAVariance",
    "hex",
    "id",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.ones_like",
    "numpy.sign",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_ewma_estimated": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions.garch_recursion",
    "arch.univariate.volatility.EWMAVariance",
    "hex",
    "id",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "numpy.ones_like",
    "numpy.sign",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_figarch": {
  "data": {
   "lineno": 1304,
   "symbols_in_volume": [
    "arch.tests.univariate.test_volatility.pytest",
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions.figarch_weights",
    "arch.univariate.recursions_python.figarch_recursion_python",
    "arch.univariate.volatility.FIGARCH",
    "arch.utility.exceptions.InitialValueWarning",
    "hex",
    "id",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.mean",
    "numpy.ones_like",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_figarch_edge_cases": {
  "data": {
   "lineno": 1485,
   "symbols_in_volume": [
    "arch.univariate.volatility.FIGARCH",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_figarch_errors": {
  "data": {
   "lineno": 1471,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_volatility.pytest",
    "arch.univariate.volatility.FIGARCH"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_figarch_no_beta": {
  "data": {
   "lineno": 1424,
   "symbols_in_volume": [
    "arch.univariate.volatility.FIGARCH",
    "len",
    "numpy.array",
    "numpy.mean",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_figarch_no_phi": {
  "data": {
   "lineno": 1399,
   "symbols_in_volume": [
    "arch.univariate.volatility.FIGARCH",
    "len",
    "numpy.array",
    "numpy.mean",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_figarch_no_phi_beta": {
  "data": {
   "lineno": 1448,
   "symbols_in_volume": [
    "arch.univariate.volatility.FIGARCH",
    "len",
    "numpy.abs",
    "numpy.array",
    "numpy.mean",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_figarch_str": {
  "data": {
   "lineno": 1491,
   "symbols_in_volume": [
    "arch.tests.univariate.test_volatility.pytest",
    "arch.univariate.volatility.FIGARCH",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_fixed_variance": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "arch.tests.univariate.test_volatility.pytest",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.FixedVariance",
    "numpy.arange",
    "numpy.array",
    "numpy.empty",
    "numpy.empty_like",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_garch": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions.garch_recursion",
    "arch.univariate.volatility.GARCH",
    "hex",
    "id",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.eye",
    "numpy.mean",
    "numpy.ones_like",
    "numpy.sign",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.vstack",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_garch_many_lags": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "arch.univariate.volatility.GARCH",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_garch_no_lagged_vol": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions.garch_recursion",
    "arch.univariate.volatility.GARCH",
    "numpy.array",
    "numpy.eye",
    "numpy.mean",
    "numpy.ones_like",
    "numpy.sign",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.vstack",
    "numpy.zeros",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_garch_no_symmetric": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions.garch_recursion",
    "arch.univariate.volatility.GARCH",
    "numpy.array",
    "numpy.eye",
    "numpy.mean",
    "numpy.ones_like",
    "numpy.sign",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.vstack",
    "numpy.zeros",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_garch_power": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions.garch_recursion",
    "arch.univariate.volatility.GARCH",
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.eye",
    "numpy.mean",
    "numpy.ones_like",
    "numpy.sign",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.vstack",
    "numpy.zeros",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_harch": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions.harch_recursion",
    "arch.univariate.volatility.HARCH",
    "hex",
    "id",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.eye",
    "numpy.int32",
    "numpy.mean",
    "numpy.ones_like",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.vstack",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_harch_scalar": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "arch.univariate.volatility.HARCH",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_midas_asymmetric": {
  "data": {
   "lineno": 1207,
   "symbols_in_volume": [
    "arch.tests.univariate.test_volatility.pytest",
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions_python.midas_recursion_python",
    "arch.univariate.volatility.MIDASHyperbolic",
    "arch.utility.exceptions.InitialValueWarning",
    "hex",
    "id",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.exp",
    "numpy.mean",
    "numpy.ones_like",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "scipy.special.gamma",
    "scipy.special.gammaln",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_midas_symmetric": {
  "data": {
   "lineno": 1120,
   "symbols_in_volume": [
    "arch.tests.univariate.test_volatility.pytest",
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions_python.midas_recursion_python",
    "arch.univariate.volatility.MIDASHyperbolic",
    "arch.utility.exceptions.InitialValueWarning",
    "hex",
    "id",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.mean",
    "numpy.ones_like",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "scipy.special.gamma",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_model_names": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "arch.univariate.volatility.GARCH",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_riskmetrics": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.RiskMetrics2006",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.ndarray",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_warnings_nonstationary": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "UserWarning",
    "arch.tests.univariate.test_volatility.pytest",
    "arch.tests.univariate.test_volatility.warnings",
    "arch.univariate.distribution.StudentsT",
    "arch.univariate.volatility.GARCH",
    "arch.utility.exceptions.InitialValueWarning",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_warnings_nonstationary_garch": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "arch.tests.univariate.test_volatility.pytest",
    "arch.univariate.distribution.SkewStudent",
    "arch.univariate.volatility.GARCH",
    "arch.utility.exceptions.InitialValueWarning",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_warnings_nonstationary_harch": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "arch.tests.univariate.test_volatility.pytest",
    "arch.univariate.distribution.StudentsT",
    "arch.univariate.volatility.HARCH",
    "arch.utility.exceptions.InitialValueWarning",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.gamma": {
  "data": {
   "shadows": "scipy.special.gamma"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.gammaln": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.pytestmark": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "arch.tests.univariate.test_volatility.rec": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "arch.tests.univariate.test_volatility.recpy": {
  "data": {
   "shadows": "arch.univariate.recursions_python"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.test_figarch_weights": {
  "data": {
   "lineno": 1504,
   "symbols_in_volume": [
    "arch.univariate.recursions.figarch_weights",
    "arch.univariate.recursions_python.figarch_weights",
    "arch.univariate.recursions_python.figarch_weights_python",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "arch.tests.utility": {
  "data": {},
  "type": "module"
 },
 "arch.tests.utility.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "arch.tests.utility.test_array": {
  "data": {},
  "type": "module"
 },
 "arch.tests.utility.test_array.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.DocStringInheritor": {
  "data": {
   "shadows": "arch.utility.array.DocStringInheritor"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.TestUtils": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.tests.utility.test_array.TestUtils.setup_class": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "classmethod",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_array.TestUtils.test_": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "arch.utility.array.date_to_index",
    "numpy.arange",
    "numpy.testing.assert_equal",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_array.TestUtils.test_cutoff_to_index": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "arch.utility.array.cutoff_to_index",
    "int",
    "numpy.arange",
    "numpy.int16",
    "numpy.int64",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_array.TestUtils.test_date_to_index": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.utility.test_array.pytest",
    "arch.utility.array.date_to_index",
    "datetime.date",
    "datetime.datetime",
    "numpy.arange",
    "numpy.testing.assert_equal",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_array.TestUtils.test_date_to_index_timestamp": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "arch.utility.array.date_to_index",
    "numpy.arange",
    "numpy.testing.assert_equal",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_array.TestUtils.test_docstring_inheritor": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_array.TestUtils.test_docstring_inheritor.A": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "arch.utility.array.DocStringInheritor",
    "object"
   ]
  },
  "type": "class"
 },
 "arch.tests.utility.test_array.TestUtils.test_docstring_inheritor.B": {
  "data": {
   "lineno": 125
  },
  "type": "class"
 },
 "arch.tests.utility.test_array.TestUtils.test_ensure1d": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.utility.test_array.pytest",
    "arch.utility.array.ensure1d",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.ndarray",
    "numpy.reshape",
    "numpy.testing.assert_equal",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_array.TestUtils.test_ensure2d": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "arch.tests.utility.test_array.pytest",
    "arch.utility.array.ensure2d",
    "isinstance",
    "numpy.array",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_array.TestUtils.test_find_index": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.utility.test_array.pytest",
    "arch.utility.array.find_index",
    "len",
    "numpy.arange",
    "numpy.datetime64",
    "numpy.testing.assert_equal",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_array.TestUtils.test_implicit_constant": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "arch.univariate.base.implicit_constant"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_array.TestUtils.test_parse_dataframe": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "arch.utility.array.parse_dataframe",
    "isinstance",
    "numpy.arange",
    "numpy.ndarray",
    "numpy.testing.assert_equal",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_array.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.cutoff_to_index": {
  "data": {
   "shadows": "arch.utility.array.cutoff_to_index"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.date_to_index": {
  "data": {
   "shadows": "arch.utility.array.date_to_index"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.doc": {
  "data": {
   "shadows": "arch.doc"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.dt": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.ensure1d": {
  "data": {
   "shadows": "arch.utility.array.ensure1d"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.ensure2d": {
  "data": {
   "shadows": "arch.utility.array.ensure2d"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.find_index": {
  "data": {
   "shadows": "arch.utility.array.find_index"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.implicit_constant": {
  "data": {
   "shadows": "arch.univariate.base.implicit_constant"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.parse_dataframe": {
  "data": {
   "shadows": "arch.utility.array.parse_dataframe"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.test_doc": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "arch.doc"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_cov": {
  "data": {},
  "type": "module"
 },
 "arch.tests.utility.test_cov.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.tests.utility.test_cov.TestVarNW": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.tests.utility.test_cov.TestVarNW.setup_class": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "arch.compat.statsmodels.dataset_loader",
    "classmethod",
    "numpy.diff",
    "numpy.log",
    "numpy.random.RandomState",
    "statsmodels.datasets.macrodata"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_cov.TestVarNW.test_cov_nw": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "arch.utility.cov_nw",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_cov.TestVarNW.test_cov_nw_2d": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "arch.utility.cov_nw",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_cov.TestVarNW.test_cov_nw_2d_2lags": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "arch.utility.cov_nw",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_cov.TestVarNW.test_cov_nw_axis": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "arch.utility.cov_nw",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_cov.TestVarNW.test_cov_nw_ddof": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "arch.utility.cov_nw",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_cov.TestVarNW.test_cov_nw_no_demean": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "arch.utility.cov_nw",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_cov.TestVarNW.test_errors": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.utility.test_cov.pytest",
    "arch.utility.cov_nw"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_cov.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "arch.tests.utility.test_cov.cov_nw": {
  "data": {
   "shadows": "arch.utility.cov_nw"
  },
  "type": "import"
 },
 "arch.tests.utility.test_cov.dataset_loader": {
  "data": {
   "shadows": "arch.compat.statsmodels.dataset_loader"
  },
  "type": "import"
 },
 "arch.tests.utility.test_cov.diff": {
  "data": {
   "shadows": "numpy.diff"
  },
  "type": "import"
 },
 "arch.tests.utility.test_cov.log": {
  "data": {
   "shadows": "numpy.log"
  },
  "type": "import"
 },
 "arch.tests.utility.test_cov.macrodata": {
  "data": {
   "shadows": "statsmodels.datasets.macrodata"
  },
  "type": "import"
 },
 "arch.tests.utility.test_cov.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.utility.test_io": {
  "data": {
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "module"
 },
 "arch.tests.utility.test_io.CASES": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "arch.tests.utility.test_io.PVAL_CASES": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "arch.tests.utility.test_io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.utility.test_io.pval_format": {
  "data": {
   "shadows": "arch.utility.io.pval_format"
  },
  "type": "import"
 },
 "arch.tests.utility.test_io.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.utility.test_io.str_format": {
  "data": {
   "shadows": "arch.utility.io.str_format"
  },
  "type": "import"
 },
 "arch.tests.utility.test_io.test_pval_format": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "arch.tests.utility.test_io.PVAL_CASES",
    "arch.tests.utility.test_io.pytest",
    "arch.utility.io.pval_format"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_io.test_str_format": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "arch.tests.utility.test_io.CASES",
    "arch.tests.utility.test_io.pytest",
    "arch.utility.io.str_format"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_timeseries": {
  "data": {},
  "type": "module"
 },
 "arch.tests.utility.test_timeseries.ColumnNameConflict": {
  "data": {
   "shadows": "arch.utility.timeseries.ColumnNameConflict"
  },
  "type": "import"
 },
 "arch.tests.utility.test_timeseries.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.tests.utility.test_timeseries.add_trend": {
  "data": {
   "shadows": "arch.utility.timeseries.add_trend"
  },
  "type": "import"
 },
 "arch.tests.utility.test_timeseries.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "arch.tests.utility.test_timeseries.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "arch.tests.utility.test_timeseries.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "arch.tests.utility.test_timeseries.assert_frame_equal": {
  "data": {
   "shadows": "pandas.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "arch.tests.utility.test_timeseries.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.utility.test_timeseries.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.tests.utility.test_timeseries.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.utility.test_timeseries.rng": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "arch.tests.utility.test_timeseries.pytest",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_timeseries.test_add_time_trend_dataframe": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "arch.tests.utility.test_timeseries.rng",
    "arch.utility.timeseries.add_trend",
    "numpy.arange",
    "numpy.asarray",
    "numpy.testing.assert_array_almost_equal",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_timeseries.test_add_trend_c": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "arch.utility.timeseries.add_trend",
    "numpy.all",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_timeseries.test_add_trend_ct": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "arch.utility.timeseries.add_trend",
    "numpy.all",
    "numpy.diff",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_timeseries.test_add_trend_ctt": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "arch.utility.timeseries.add_trend",
    "numpy.all",
    "numpy.arange",
    "numpy.diff",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_timeseries.test_add_trend_duplicate_name": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "arch.tests.utility.test_timeseries.pytest",
    "arch.utility.timeseries.ColumnNameConflict",
    "arch.utility.timeseries.add_trend",
    "numpy.zeros",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_timeseries.test_add_trend_no_input": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "arch.utility.timeseries.add_trend",
    "numpy.all",
    "numpy.diff",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_timeseries.test_add_trend_prepend": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "arch.tests.utility.test_timeseries.rng",
    "arch.utility.timeseries.add_trend",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_timeseries.test_add_trend_prepend_dataframe": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "arch.tests.utility.test_timeseries.rng",
    "arch.utility.timeseries.add_trend",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_timeseries.test_add_trend_t": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "arch.utility.timeseries.add_trend",
    "numpy.diff",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_timeseries.test_errors": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.utility.test_timeseries.pytest",
    "arch.utility.timeseries.add_trend",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_timeseries.test_skip_constant": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "arch.utility.timeseries.add_trend",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_timeseries.test_trend_n_nobs": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "arch.utility.timeseries.add_trend",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_utility": {
  "data": {},
  "type": "module"
 },
 "arch.tests.utility.test_utility.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.utility.test_utility.test_runner": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "arch.tests.utility.test_utility.pytest",
    "arch.utility.test"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_utility.utility": {
  "data": {
   "shadows": "arch.utility"
  },
  "type": "import"
 },
 "arch.typing": {
  "data": {
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "datetime.datetime",
    "float",
    "int",
    "numpy.datetime64",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "str",
    "typing.Callable",
    "typing.Hashable",
    "typing.Optional",
    "typing.Tuple",
    "typing.TypeVar",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "arch.typing.AnyPandas": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "arch.typing.ArrayLike": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "arch.typing.ArrayLike1D": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "arch.typing.ArrayLike2D": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "arch.typing.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "arch.typing.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "arch.typing.DateLike": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "arch.typing.FloatOrArray": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "arch.typing.Hashable": {
  "data": {
   "shadows": "typing.Hashable"
  },
  "type": "import"
 },
 "arch.typing.Label": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "arch.typing.NDArray": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "arch.typing.NDArrayOrFrame": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "arch.typing.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "arch.typing.RNGType": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "arch.typing.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "arch.typing.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "arch.typing.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "arch.typing.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "arch.typing.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "arch.typing.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "arch.typing.dt": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "arch.typing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.unitroot": {
  "data": {},
  "type": "module"
 },
 "arch.unitroot.ADF": {
  "data": {
   "shadows": "arch.unitroot.unitroot.ADF"
  },
  "type": "import"
 },
 "arch.unitroot.DFGLS": {
  "data": {
   "shadows": "arch.unitroot.unitroot.DFGLS"
  },
  "type": "import"
 },
 "arch.unitroot.EngleGrangerTestResults": {
  "data": {
   "shadows": "arch.unitroot.cointegration.EngleGrangerTestResults"
  },
  "type": "import"
 },
 "arch.unitroot.KPSS": {
  "data": {
   "shadows": "arch.unitroot.unitroot.KPSS"
  },
  "type": "import"
 },
 "arch.unitroot.PhillipsPerron": {
  "data": {
   "shadows": "arch.unitroot.unitroot.PhillipsPerron"
  },
  "type": "import"
 },
 "arch.unitroot.VarianceRatio": {
  "data": {
   "shadows": "arch.unitroot.unitroot.VarianceRatio"
  },
  "type": "import"
 },
 "arch.unitroot.ZivotAndrews": {
  "data": {
   "shadows": "arch.unitroot.unitroot.ZivotAndrews"
  },
  "type": "import"
 },
 "arch.unitroot.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "arch.unitroot._engle_granger": {
  "data": {},
  "type": "module"
 },
 "arch.unitroot._engle_granger.ADF": {
  "data": {
   "shadows": "arch.unitroot.unitroot.ADF"
  },
  "type": "import"
 },
 "arch.unitroot._engle_granger.ArrayLike1D": {
  "data": {
   "shadows": "arch.typing.ArrayLike1D"
  },
  "type": "import"
 },
 "arch.unitroot._engle_granger.ArrayLike2D": {
  "data": {
   "shadows": "arch.typing.ArrayLike2D"
  },
  "type": "import"
 },
 "arch.unitroot._engle_granger.CV_PARAMETERS": {
  "data": {
   "shadows": "arch.unitroot.critical_values.engle_granger.CV_PARAMETERS"
  },
  "type": "import"
 },
 "arch.unitroot._engle_granger.EngleGrangerTestResults": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "arch.unitroot._shared.ResidualCointegrationTestResult"
   ]
  },
  "type": "class"
 },
 "arch.unitroot._engle_granger.EngleGrangerTestResults.__init__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "arch.unitroot.unitroot.ADF",
    "float",
    "int",
    "pandas.Series",
    "statsmodels.regression.linear_model.RegressionResults",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._engle_granger.EngleGrangerTestResults.lags": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._engle_granger.EngleGrangerTestResults.max_lags": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._engle_granger.EngleGrangerTestResults.rho": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._engle_granger.EngleGrangerTestResults.summary": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "arch.unitroot.unitroot.TREND_DESCRIPTION",
    "int",
    "statsmodels.iolib.summary.Summary",
    "statsmodels.iolib.table.SimpleTable",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._engle_granger.LARGE_PARAMETERS": {
  "data": {
   "shadows": "arch.unitroot.critical_values.engle_granger.LARGE_PARAMETERS"
  },
  "type": "import"
 },
 "arch.unitroot._engle_granger.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "arch.unitroot._engle_granger.RegressionResults": {
  "data": {
   "shadows": "statsmodels.regression.linear_model.RegressionResults"
  },
  "type": "import"
 },
 "arch.unitroot._engle_granger.ResidualCointegrationTestResult": {
  "data": {
   "shadows": "arch.unitroot._shared.ResidualCointegrationTestResult"
  },
  "type": "import"
 },
 "arch.unitroot._engle_granger.SMALL_PARAMETERS": {
  "data": {
   "shadows": "arch.unitroot.critical_values.engle_granger.SMALL_PARAMETERS"
  },
  "type": "import"
 },
 "arch.unitroot._engle_granger.SimpleTable": {
  "data": {
   "shadows": "statsmodels.iolib.table.SimpleTable"
  },
  "type": "import"
 },
 "arch.unitroot._engle_granger.Summary": {
  "data": {
   "shadows": "statsmodels.iolib.summary.Summary"
  },
  "type": "import"
 },
 "arch.unitroot._engle_granger.TAU_MAX": {
  "data": {
   "shadows": "arch.unitroot.critical_values.engle_granger.TAU_MAX"
  },
  "type": "import"
 },
 "arch.unitroot._engle_granger.TAU_MIN": {
  "data": {
   "shadows": "arch.unitroot.critical_values.engle_granger.TAU_MIN"
  },
  "type": "import"
 },
 "arch.unitroot._engle_granger.TAU_STAR": {
  "data": {
   "shadows": "arch.unitroot.critical_values.engle_granger.TAU_STAR"
  },
  "type": "import"
 },
 "arch.unitroot._engle_granger.TREND_DESCRIPTION": {
  "data": {
   "shadows": "arch.unitroot.unitroot.TREND_DESCRIPTION"
  },
  "type": "import"
 },
 "arch.unitroot._engle_granger._check_cointegrating_regression": {
  "data": {
   "shadows": "arch.unitroot._shared._check_cointegrating_regression"
  },
  "type": "import"
 },
 "arch.unitroot._engle_granger._cross_section": {
  "data": {
   "shadows": "arch.unitroot._shared._cross_section"
  },
  "type": "import"
 },
 "arch.unitroot._engle_granger.engle_granger": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "EngleGrangerTestResults",
    "arch.typing.ArrayLike1D",
    "arch.typing.ArrayLike2D",
    "arch.unitroot._shared._check_cointegrating_regression",
    "arch.unitroot._shared._cross_section",
    "arch.unitroot.unitroot.ADF",
    "engle_granger_cv",
    "engle_granger_pval",
    "int",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._engle_granger.engle_granger_cv": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "ValueError",
    "arch.unitroot.critical_values.engle_granger.CV_PARAMETERS",
    "int",
    "numpy.arange",
    "pandas.Series",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._engle_granger.engle_granger_pval": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "ValueError",
    "arch.unitroot.critical_values.engle_granger.LARGE_PARAMETERS",
    "arch.unitroot.critical_values.engle_granger.SMALL_PARAMETERS",
    "arch.unitroot.critical_values.engle_granger.TAU_MAX",
    "arch.unitroot.critical_values.engle_granger.TAU_MIN",
    "arch.unitroot.critical_values.engle_granger.TAU_STAR",
    "float",
    "int",
    "numpy.arange",
    "numpy.array",
    "scipy.stats.norm",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._engle_granger.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.unitroot._engle_granger.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.unitroot._engle_granger.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "arch.unitroot._phillips_ouliaris": {
  "data": {},
  "type": "module"
 },
 "arch.unitroot._phillips_ouliaris.ArrayLike1D": {
  "data": {
   "shadows": "arch.typing.ArrayLike1D"
  },
  "type": "import"
 },
 "arch.unitroot._phillips_ouliaris.ArrayLike2D": {
  "data": {
   "shadows": "arch.typing.ArrayLike2D"
  },
  "type": "import"
 },
 "arch.unitroot._phillips_ouliaris.CV_PARAMETERS": {
  "data": {
   "shadows": "arch.unitroot.critical_values.phillips_ouliaris.CV_PARAMETERS"
  },
  "type": "import"
 },
 "arch.unitroot._phillips_ouliaris.CV_TAU_MIN": {
  "data": {
   "shadows": "arch.unitroot.critical_values.phillips_ouliaris.CV_TAU_MIN"
  },
  "type": "import"
 },
 "arch.unitroot._phillips_ouliaris.CriticalValueWarning": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "RuntimeWarning"
   ]
  },
  "type": "class"
 },
 "arch.unitroot._phillips_ouliaris.KERNEL_ERR": {
  "data": {
   "shadows": "arch.unitroot._shared.KERNEL_ERR"
  },
  "type": "import"
 },
 "arch.unitroot._phillips_ouliaris.KERNEL_ESTIMATORS": {
  "data": {
   "shadows": "arch.unitroot._shared.KERNEL_ESTIMATORS"
  },
  "type": "import"
 },
 "arch.unitroot._phillips_ouliaris.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "arch.unitroot._phillips_ouliaris.PVAL_LARGE_P": {
  "data": {
   "shadows": "arch.unitroot.critical_values.phillips_ouliaris.PVAL_LARGE_P"
  },
  "type": "import"
 },
 "arch.unitroot._phillips_ouliaris.PVAL_SMALL_P": {
  "data": {
   "shadows": "arch.unitroot.critical_values.phillips_ouliaris.PVAL_SMALL_P"
  },
  "type": "import"
 },
 "arch.unitroot._phillips_ouliaris.PVAL_TAU_MAX": {
  "data": {
   "shadows": "arch.unitroot.critical_values.phillips_ouliaris.PVAL_TAU_MAX"
  },
  "type": "import"
 },
 "arch.unitroot._phillips_ouliaris.PVAL_TAU_MIN": {
  "data": {
   "shadows": "arch.unitroot.critical_values.phillips_ouliaris.PVAL_TAU_MIN"
  },
  "type": "import"
 },
 "arch.unitroot._phillips_ouliaris.PVAL_TAU_STAR": {
  "data": {
   "shadows": "arch.unitroot.critical_values.phillips_ouliaris.PVAL_TAU_STAR"
  },
  "type": "import"
 },
 "arch.unitroot._phillips_ouliaris.PhillipsOuliarisTestResults": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "arch.unitroot._shared.ResidualCointegrationTestResult"
   ]
  },
  "type": "class"
 },
 "arch.unitroot._phillips_ouliaris.PhillipsOuliarisTestResults.__init__": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "arch.covariance.kernel.CovarianceEstimator",
    "arch.utility.io.str_format",
    "float",
    "int",
    "pandas.Series",
    "statsmodels.regression.linear_model.RegressionResults",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._phillips_ouliaris.PhillipsOuliarisTestResults.bandwidth": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._phillips_ouliaris.PhillipsOuliarisTestResults.kernel": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._phillips_ouliaris.PhillipsOuliarisTestResults.summary": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "arch.unitroot.unitroot.TREND_DESCRIPTION",
    "int",
    "statsmodels.iolib.summary.Summary",
    "statsmodels.iolib.table.SimpleTable",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._phillips_ouliaris.RegressionResults": {
  "data": {
   "shadows": "statsmodels.regression.linear_model.RegressionResults"
  },
  "type": "import"
 },
 "arch.unitroot._phillips_ouliaris.ResidualCointegrationTestResult": {
  "data": {
   "shadows": "arch.unitroot._shared.ResidualCointegrationTestResult"
  },
  "type": "import"
 },
 "arch.unitroot._phillips_ouliaris.SimpleTable": {
  "data": {
   "shadows": "statsmodels.iolib.table.SimpleTable"
  },
  "type": "import"
 },
 "arch.unitroot._phillips_ouliaris.Summary": {
  "data": {
   "shadows": "statsmodels.iolib.summary.Summary"
  },
  "type": "import"
 },
 "arch.unitroot._phillips_ouliaris.TREND_DESCRIPTION": {
  "data": {
   "shadows": "arch.unitroot.unitroot.TREND_DESCRIPTION"
  },
  "type": "import"
 },
 "arch.unitroot._phillips_ouliaris._cross_section": {
  "data": {
   "shadows": "arch.unitroot._shared._cross_section"
  },
  "type": "import"
 },
 "arch.unitroot._phillips_ouliaris._po_ptests": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "PhillipsOuliarisTestResults",
    "arch.unitroot._shared.KERNEL_ESTIMATORS",
    "arch.utility.timeseries.add_trend",
    "bool",
    "float",
    "int",
    "ker_est",
    "numpy.asarray",
    "numpy.linalg.inv",
    "numpy.linalg.lstsq",
    "numpy.squeeze",
    "pandas.DataFrame",
    "phillips_ouliaris_cv",
    "phillips_ouliaris_pval",
    "statsmodels.regression.linear_model.RegressionResults",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._phillips_ouliaris._po_ztests": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "PhillipsOuliarisTestResults",
    "arch.unitroot._shared.KERNEL_ESTIMATORS",
    "bool",
    "float",
    "int",
    "kern_est",
    "numpy.asarray",
    "numpy.linalg.lstsq",
    "numpy.sqrt",
    "numpy.squeeze",
    "pandas.DataFrame",
    "phillips_ouliaris_cv",
    "phillips_ouliaris_pval",
    "statsmodels.regression.linear_model.RegressionResults",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._phillips_ouliaris.add_trend": {
  "data": {
   "shadows": "arch.utility.timeseries.add_trend"
  },
  "type": "import"
 },
 "arch.unitroot._phillips_ouliaris.ensure2d": {
  "data": {
   "shadows": "arch.utility.array.ensure2d"
  },
  "type": "import"
 },
 "arch.unitroot._phillips_ouliaris.lrcov": {
  "data": {
   "shadows": "arch.covariance.kernel"
  },
  "type": "import"
 },
 "arch.unitroot._phillips_ouliaris.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.unitroot._phillips_ouliaris.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.unitroot._phillips_ouliaris.phillips_ouliaris": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.ArrayLike1D",
    "arch.typing.ArrayLike2D",
    "arch.unitroot._phillips_ouliaris._po_ptests",
    "arch.unitroot._phillips_ouliaris._po_ztests",
    "arch.unitroot._shared.KERNEL_ERR",
    "arch.unitroot._shared.KERNEL_ESTIMATORS",
    "arch.unitroot._shared._cross_section",
    "arch.utility.array.ensure2d",
    "bool",
    "int",
    "pandas.concat",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._phillips_ouliaris.phillips_ouliaris_cv": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "ValueError",
    "arch.unitroot._phillips_ouliaris.CriticalValueWarning",
    "arch.unitroot._phillips_ouliaris.warnings",
    "arch.unitroot.critical_values.phillips_ouliaris.CV_PARAMETERS",
    "arch.unitroot.critical_values.phillips_ouliaris.CV_TAU_MIN",
    "int",
    "numpy.arange",
    "pandas.Series",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._phillips_ouliaris.phillips_ouliaris_pval": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "ValueError",
    "arch.unitroot.critical_values.phillips_ouliaris.PVAL_LARGE_P",
    "arch.unitroot.critical_values.phillips_ouliaris.PVAL_SMALL_P",
    "arch.unitroot.critical_values.phillips_ouliaris.PVAL_TAU_MAX",
    "arch.unitroot.critical_values.phillips_ouliaris.PVAL_TAU_MIN",
    "arch.unitroot.critical_values.phillips_ouliaris.PVAL_TAU_STAR",
    "float",
    "int",
    "numpy.arange",
    "numpy.array",
    "scipy.stats.norm",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._phillips_ouliaris.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "arch.unitroot._phillips_ouliaris.str_format": {
  "data": {
   "shadows": "arch.utility.io.str_format"
  },
  "type": "import"
 },
 "arch.unitroot._phillips_ouliaris.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "arch.unitroot._shared": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "arch.covariance.kernel",
    "arch.covariance.kernel.CovarianceEstimator",
    "arch.covariance.kernel.KERNELS",
    "arch.unitroot._shared.KNOWN_KERNELS",
    "getattr",
    "sorted",
    "str",
    "typing.Dict",
    "typing.Type"
   ]
  },
  "type": "module"
 },
 "arch.unitroot._shared.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "arch.unitroot._shared.ArrayLike1D": {
  "data": {
   "shadows": "arch.typing.ArrayLike1D"
  },
  "type": "import"
 },
 "arch.unitroot._shared.ArrayLike2D": {
  "data": {
   "shadows": "arch.typing.ArrayLike2D"
  },
  "type": "import"
 },
 "arch.unitroot._shared.CointegrationSetup": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "str",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "arch.unitroot._shared.CointegrationTestResult": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.unitroot._shared.CointegrationTestResult.__init__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "float",
    "pandas.Series",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._shared.CointegrationTestResult.__repr__": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "hex",
    "id",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._shared.CointegrationTestResult.__str__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._shared.CointegrationTestResult.alternative_hypothesis": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._shared.CointegrationTestResult.critical_values": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "pandas.Series",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._shared.CointegrationTestResult.name": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._shared.CointegrationTestResult.null_hypothesis": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._shared.CointegrationTestResult.pvalue": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._shared.CointegrationTestResult.stat": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._shared.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "arch.unitroot._shared.KERNEL_ERR": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "arch.unitroot._shared.KNOWN_KERNELS": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "arch.unitroot._shared.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "arch.unitroot._shared.OLS": {
  "data": {
   "shadows": "statsmodels.regression.linear_model.OLS"
  },
  "type": "import"
 },
 "arch.unitroot._shared.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "arch.unitroot._shared.RegressionResults": {
  "data": {
   "shadows": "statsmodels.regression.linear_model.RegressionResults"
  },
  "type": "import"
 },
 "arch.unitroot._shared.ResidualCointegrationTestResult": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "arch.unitroot._shared.CointegrationTestResult"
   ]
  },
  "type": "class"
 },
 "arch.unitroot._shared.ResidualCointegrationTestResult.__init__": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "float",
    "int",
    "pandas.Series",
    "statsmodels.regression.linear_model.RegressionResults",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._shared.ResidualCointegrationTestResult._repr_html_": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._shared.ResidualCointegrationTestResult.cointegrating_vector": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.concat",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._shared.ResidualCointegrationTestResult.distribution_order": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._shared.ResidualCointegrationTestResult.plot": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._shared.ResidualCointegrationTestResult.resid": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "pandas.Series",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._shared.ResidualCointegrationTestResult.summary": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "statsmodels.iolib.summary.Summary"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._shared.ResidualCointegrationTestResult.trend": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._shared.Summary": {
  "data": {
   "shadows": "statsmodels.iolib.summary.Summary"
  },
  "type": "import"
 },
 "arch.unitroot._shared.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "arch.unitroot._shared.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "arch.unitroot._shared._check_cointegrating_regression": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.ArrayLike1D",
    "arch.typing.ArrayLike2D",
    "arch.unitroot._shared.CointegrationSetup",
    "arch.utility.array.ensure1d",
    "arch.utility.array.ensure2d",
    "isinstance",
    "pandas.DataFrame",
    "range",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._shared._check_kernel": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._shared._cross_section": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.ArrayLike1D",
    "arch.typing.ArrayLike2D",
    "arch.utility.array.ensure1d",
    "arch.utility.array.ensure2d",
    "arch.utility.timeseries.add_trend",
    "isinstance",
    "pandas.DataFrame",
    "range",
    "statsmodels.regression.linear_model.OLS",
    "statsmodels.regression.linear_model.RegressionResults",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot._shared.add_trend": {
  "data": {
   "shadows": "arch.utility.timeseries.add_trend"
  },
  "type": "import"
 },
 "arch.unitroot._shared.ensure1d": {
  "data": {
   "shadows": "arch.utility.array.ensure1d"
  },
  "type": "import"
 },
 "arch.unitroot._shared.ensure2d": {
  "data": {
   "shadows": "arch.utility.array.ensure2d"
  },
  "type": "import"
 },
 "arch.unitroot._shared.lrcov": {
  "data": {
   "shadows": "arch.covariance.kernel"
  },
  "type": "import"
 },
 "arch.unitroot._shared.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.unitroot._shared.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "arch.unitroot.auto_bandwidth": {
  "data": {
   "shadows": "arch.unitroot.unitroot.auto_bandwidth"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration": {
  "data": {},
  "type": "module"
 },
 "arch.unitroot.cointegration.Appender": {
  "data": {
   "shadows": "pandas.util._decorators.Appender"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.ArrayLike1D": {
  "data": {
   "shadows": "arch.typing.ArrayLike1D"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.ArrayLike2D": {
  "data": {
   "shadows": "arch.typing.ArrayLike2D"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.CCR_ESTIMATOR": {
  "data": {
   "lineno": 910
  },
  "type": "constant"
 },
 "arch.unitroot.cointegration.CCR_METHOD": {
  "data": {
   "lineno": 908
  },
  "type": "constant"
 },
 "arch.unitroot.cointegration.COMMON_DOCSTRING": {
  "data": {
   "lineno": 843
  },
  "type": "constant"
 },
 "arch.unitroot.cointegration.CanonicalCointegratingReg": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": [
    "arch.unitroot.cointegration.CCR_ESTIMATOR",
    "arch.unitroot.cointegration.CCR_METHOD",
    "arch.unitroot.cointegration.COMMON_DOCSTRING",
    "arch.unitroot.cointegration.FullyModifiedOLS",
    "pandas.util._decorators.Appender",
    "pandas.util._decorators.Substitution"
   ]
  },
  "type": "class"
 },
 "arch.unitroot.cointegration.CanonicalCointegratingReg.__init__": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": [
    "arch.typing.ArrayLike1D",
    "arch.typing.ArrayLike2D",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration.CanonicalCointegratingReg.fit": {
  "data": {
   "lineno": 1130,
   "symbols_in_volume": [
    "arch.unitroot._shared.KERNEL_ESTIMATORS",
    "arch.unitroot.cointegration.CointegrationAnalysisResults",
    "arch.unitroot.cointegration.FullyModifiedOLS",
    "arch.utility.timeseries.add_trend",
    "bool",
    "float",
    "numpy.asarray",
    "numpy.linalg.inv",
    "numpy.linalg.lstsq",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util._decorators.Appender",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration.CointegrationAnalysisResults": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "arch.unitroot.cointegration._CommonCointegrationResults"
   ]
  },
  "type": "class"
 },
 "arch.unitroot.cointegration.CointegrationAnalysisResults.__init__": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "arch.covariance.kernel.CovarianceEstimator",
    "bool",
    "float",
    "int",
    "kernel_est",
    "pandas.DataFrame",
    "pandas.Series",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration.CointegrationAnalysisResults.long_run_variance": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration.CriticalValueWarning": {
  "data": {
   "shadows": "arch.unitroot._phillips_ouliaris.CriticalValueWarning"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.DynamicOLS": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.unitroot.cointegration.DynamicOLS.__init__": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "arch.typing.ArrayLike1D",
    "arch.typing.ArrayLike2D",
    "arch.unitroot._shared._check_cointegrating_regression",
    "bool",
    "int",
    "pandas.DataFrame",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration.DynamicOLS._check_inputs": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration.DynamicOLS._cov": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "ValueError",
    "arch.covariance.kernel.CovarianceEstimator",
    "arch.unitroot._shared.KERNEL_ERR",
    "arch.unitroot._shared.KERNEL_ESTIMATORS",
    "arch.utility.array.ensure2d",
    "bool",
    "int",
    "kernel_est",
    "numpy.asarray",
    "numpy.linalg.inv",
    "numpy.squeeze",
    "pandas.DataFrame",
    "pandas.Series",
    "staticmethod",
    "str",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration.DynamicOLS._format_variables": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "abs",
    "arch.utility.timeseries.add_trend",
    "int",
    "pandas.DataFrame",
    "pandas.concat",
    "range",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration.DynamicOLS._ic": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "int",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration.DynamicOLS._leads_and_lags": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.asarray",
    "numpy.ceil",
    "numpy.inf",
    "numpy.linalg.lstsq",
    "numpy.r_",
    "numpy.squeeze",
    "range",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration.DynamicOLS._max_lead_lag": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "int",
    "numpy.ceil"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration.DynamicOLS.fit": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "arch.unitroot.cointegration.DynamicOLSResults",
    "bool",
    "int",
    "numpy.asarray",
    "numpy.squeeze",
    "pandas.Series",
    "statsmodels.regression.linear_model.OLS",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration.DynamicOLSResults": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "arch.unitroot.cointegration._CommonCointegrationResults"
   ]
  },
  "type": "class"
 },
 "arch.unitroot.cointegration.DynamicOLSResults.__init__": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "arch.covariance.kernel.CovarianceEstimator",
    "bool",
    "int",
    "pandas.DataFrame",
    "pandas.Series",
    "statsmodels.regression.linear_model.RegressionResults",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration.DynamicOLSResults._df_scale": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration.DynamicOLSResults.cov_type": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration.DynamicOLSResults.full_cov": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration.DynamicOLSResults.full_params": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "pandas.Series",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration.DynamicOLSResults.lags": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration.DynamicOLSResults.leads": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration.DynamicOLSResults.summary": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "arch.unitroot.unitroot.SHORT_TREND_DESCRIPTION",
    "arch.utility.io.str_format",
    "bool",
    "int",
    "list",
    "numpy.abs",
    "numpy.asarray",
    "numpy.diag",
    "numpy.sqrt",
    "scipy.stats.norm.cdf",
    "statsmodels.iolib.summary.Summary",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration.EngleGrangerTestResults": {
  "data": {
   "shadows": "arch.unitroot._engle_granger.EngleGrangerTestResults"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.FMOLS_ESTIMATOR": {
  "data": {
   "lineno": 934
  },
  "type": "constant"
 },
 "arch.unitroot.cointegration.FMOLS_METHOD": {
  "data": {
   "lineno": 932
  },
  "type": "constant"
 },
 "arch.unitroot.cointegration.FullyModifiedOLS": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": [
    "arch.unitroot.cointegration.COMMON_DOCSTRING",
    "arch.unitroot.cointegration.FMOLS_ESTIMATOR",
    "arch.unitroot.cointegration.FMOLS_METHOD",
    "object",
    "pandas.util._decorators.Appender",
    "pandas.util._decorators.Substitution"
   ]
  },
  "type": "class"
 },
 "arch.unitroot.cointegration.FullyModifiedOLS.__init__": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "arch.typing.ArrayLike1D",
    "arch.typing.ArrayLike2D",
    "arch.unitroot._shared._check_cointegrating_regression",
    "pandas.DataFrame",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration.FullyModifiedOLS._common_fit": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "arch.covariance.kernel.CovarianceEstimator",
    "arch.typing.NDArray",
    "arch.unitroot._shared.KERNEL_ESTIMATORS",
    "arch.unitroot._shared._check_kernel",
    "arch.unitroot._shared._cross_section",
    "arch.utility.timeseries.add_trend",
    "bool",
    "float",
    "kern_est",
    "numpy.asarray",
    "numpy.column_stack",
    "numpy.diff",
    "numpy.linalg.lstsq",
    "str",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration.FullyModifiedOLS._final_statistics": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "arch.utility.timeseries.add_trend",
    "float",
    "numpy.asarray",
    "pandas.Series",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration.FullyModifiedOLS.fit": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "arch.unitroot._shared.KERNEL_ESTIMATORS",
    "arch.unitroot.cointegration.CointegrationAnalysisResults",
    "arch.utility.timeseries.add_trend",
    "bool",
    "float",
    "numpy.asarray",
    "numpy.linalg.inv",
    "numpy.linalg.solve",
    "numpy.squeeze",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.Series",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration.KERNEL_ERR": {
  "data": {
   "shadows": "arch.unitroot._shared.KERNEL_ERR"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.KERNEL_ESTIMATORS": {
  "data": {
   "shadows": "arch.unitroot._shared.KERNEL_ESTIMATORS"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.NDArray": {
  "data": {
   "shadows": "arch.typing.NDArray"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.OLS": {
  "data": {
   "shadows": "statsmodels.regression.linear_model.OLS"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.PhillipsOuliarisTestResults": {
  "data": {
   "shadows": "arch.unitroot._phillips_ouliaris.PhillipsOuliarisTestResults"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.RegressionResults": {
  "data": {
   "shadows": "statsmodels.regression.linear_model.RegressionResults"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.SHORT_TREND_DESCRIPTION": {
  "data": {
   "shadows": "arch.unitroot.unitroot.SHORT_TREND_DESCRIPTION"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.SimpleTable": {
  "data": {
   "shadows": "statsmodels.iolib.table.SimpleTable"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.Substitution": {
  "data": {
   "shadows": "pandas.util._decorators.Substitution"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.Summary": {
  "data": {
   "shadows": "statsmodels.iolib.summary.Summary"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration._CommonCointegrationResults": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.unitroot.cointegration._CommonCointegrationResults.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "arch.covariance.kernel.CovarianceEstimator",
    "bool",
    "float",
    "int",
    "pandas.DataFrame",
    "pandas.Series",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration._CommonCointegrationResults._cov_est": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "arch.covariance.kernel.CovarianceEstimate",
    "arch.vendor.cached_property",
    "kern_class",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration._CommonCointegrationResults._df_scale": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration._CommonCointegrationResults._param_table": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.utility.io.pval_format",
    "arch.utility.io.str_format",
    "enumerate",
    "f",
    "numpy.column_stack",
    "scipy.stats.norm.ppf",
    "staticmethod",
    "statsmodels.iolib.summary.fmt_params",
    "statsmodels.iolib.table.SimpleTable",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration._CommonCointegrationResults._top_right": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "arch.utility.io.str_format",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration._CommonCointegrationResults._top_table": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "staticmethod",
    "statsmodels.iolib.summary.fmt_2cols",
    "statsmodels.iolib.summary.fmt_2cols.copy",
    "statsmodels.iolib.table.SimpleTable",
    "str",
    "typing.Sequence",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration._CommonCointegrationResults.bandwidth": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration._CommonCointegrationResults.cov": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration._CommonCointegrationResults.kernel": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration._CommonCointegrationResults.long_run_variance": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration._CommonCointegrationResults.params": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pandas.Series",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration._CommonCointegrationResults.pvalues": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "arch.vendor.cached_property",
    "numpy.abs",
    "pandas.Series",
    "scipy.stats.norm.cdf"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration._CommonCointegrationResults.resid": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "pandas.Series",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration._CommonCointegrationResults.residual_variance": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration._CommonCointegrationResults.rsquared": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration._CommonCointegrationResults.rsquared_adj": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration._CommonCointegrationResults.std_errors": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "arch.vendor.cached_property",
    "numpy.diag",
    "numpy.sqrt",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration._CommonCointegrationResults.summary": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "arch.unitroot.unitroot.SHORT_TREND_DESCRIPTION",
    "arch.utility.io.str_format",
    "int",
    "list",
    "numpy.asarray",
    "statsmodels.iolib.summary.Summary",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration._CommonCointegrationResults.tvalues": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "arch.vendor.cached_property",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.cointegration.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "arch.unitroot.cointegration._check_cointegrating_regression": {
  "data": {
   "shadows": "arch.unitroot._shared._check_cointegrating_regression"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration._check_kernel": {
  "data": {
   "shadows": "arch.unitroot._shared._check_kernel"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration._cross_section": {
  "data": {
   "shadows": "arch.unitroot._shared._cross_section"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.add_trend": {
  "data": {
   "shadows": "arch.utility.timeseries.add_trend"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.cached_property": {
  "data": {
   "shadows": "arch.vendor.cached_property"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.engle_granger": {
  "data": {
   "shadows": "arch.unitroot._engle_granger.engle_granger"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.ensure2d": {
  "data": {
   "shadows": "arch.utility.array.ensure2d"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.fmt_2cols": {
  "data": {
   "shadows": "statsmodels.iolib.summary.fmt_2cols"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.fmt_params": {
  "data": {
   "shadows": "statsmodels.iolib.summary.fmt_params"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.lrcov": {
  "data": {
   "shadows": "arch.covariance.kernel"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.phillips_ouliaris": {
  "data": {
   "shadows": "arch.unitroot._phillips_ouliaris.phillips_ouliaris"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.pval_format": {
  "data": {
   "shadows": "arch.utility.io.pval_format"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "arch.unitroot.cointegration.str_format": {
  "data": {
   "shadows": "arch.utility.io.str_format"
  },
  "type": "import"
 },
 "arch.unitroot.critical_values": {
  "data": {},
  "type": "module"
 },
 "arch.unitroot.critical_values.dfgls": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "arch.unitroot.critical_values.dfgls.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "arch.unitroot.critical_values.dfgls.dfgls_cv_approx": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dfgls.dfgls_large_p": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dfgls.dfgls_small_p": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dfgls.dfgls_tau_max": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dfgls.dfgls_tau_min": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dfgls.dfgls_tau_star": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dickey_fuller": {
  "data": {
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.unitroot.critical_values.dickey_fuller.adf_z_large_p",
    "arch.unitroot.critical_values.dickey_fuller.adf_z_large_p_scale",
    "arch.unitroot.critical_values.dickey_fuller.large_scaling",
    "arch.unitroot.critical_values.dickey_fuller.small_scaling",
    "arch.unitroot.critical_values.dickey_fuller.tau_large_p",
    "arch.unitroot.critical_values.dickey_fuller.tau_small_p",
    "numpy.array",
    "numpy.asarray",
    "numpy.inf",
    "str",
    "typing.Dict"
   ]
  },
  "type": "module"
 },
 "arch.unitroot.critical_values.dickey_fuller.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "arch.unitroot.critical_values.dickey_fuller.NDArray": {
  "data": {
   "shadows": "arch.typing.NDArray"
  },
  "type": "import"
 },
 "arch.unitroot.critical_values.dickey_fuller.adf_z_cv_approx": {
  "data": {
   "lineno": 365
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dickey_fuller.adf_z_large_p": {
  "data": {
   "lineno": 354
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dickey_fuller.adf_z_large_p_scale": {
  "data": {
   "lineno": 361
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dickey_fuller.adf_z_max": {
  "data": {
   "lineno": 338
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dickey_fuller.adf_z_min": {
  "data": {
   "lineno": 340
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dickey_fuller.adf_z_small_p": {
  "data": {
   "lineno": 344
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dickey_fuller.adf_z_star": {
  "data": {
   "lineno": 342
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dickey_fuller.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "arch.unitroot.critical_values.dickey_fuller.asarray": {
  "data": {
   "shadows": "numpy.asarray"
  },
  "type": "import"
 },
 "arch.unitroot.critical_values.dickey_fuller.inf": {
  "data": {
   "shadows": "numpy.inf"
  },
  "type": "import"
 },
 "arch.unitroot.critical_values.dickey_fuller.large_scaling": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dickey_fuller.small_scaling": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dickey_fuller.tau_large_p": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dickey_fuller.tau_max": {
  "data": {
   "lineno": 330
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dickey_fuller.tau_min": {
  "data": {
   "lineno": 323
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dickey_fuller.tau_small_p": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dickey_fuller.tau_star": {
  "data": {
   "lineno": 316
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.engle_granger": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "module"
 },
 "arch.unitroot.critical_values.engle_granger.CV_PARAMETERS": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.engle_granger.LARGE_PARAMETERS": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.engle_granger.SMALL_PARAMETERS": {
  "data": {
   "lineno": 450
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.engle_granger.TAU_MAX": {
  "data": {
   "lineno": 497
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.engle_granger.TAU_MIN": {
  "data": {
   "lineno": 591
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.engle_granger.TAU_STAR": {
  "data": {
   "lineno": 544
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.engle_granger.eg_num_variables": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.engle_granger.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.unitroot.critical_values.kpss": {
  "data": {
   "symbols_in_volume": [
    "arch.unitroot.critical_values.kpss.c",
    "arch.unitroot.critical_values.kpss.ct",
    "arch.unitroot.critical_values.kpss.kpss_critical_values",
    "numpy.asarray"
   ]
  },
  "type": "module"
 },
 "arch.unitroot.critical_values.kpss.asarray": {
  "data": {
   "shadows": "numpy.asarray"
  },
  "type": "import"
 },
 "arch.unitroot.critical_values.kpss.c": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.kpss.ct": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.kpss.kpss_critical_values": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.phillips_ouliaris": {
  "data": {
   "symbols_in_volume": [
    "math.inf"
   ]
  },
  "type": "module"
 },
 "arch.unitroot.critical_values.phillips_ouliaris.CV_PARAMETERS": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.phillips_ouliaris.CV_TAU_MIN": {
  "data": {
   "lineno": 1059
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.phillips_ouliaris.PVAL_LARGE_P": {
  "data": {
   "lineno": 1270
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.phillips_ouliaris.PVAL_SMALL_P": {
  "data": {
   "lineno": 1481
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.phillips_ouliaris.PVAL_TAU_MAX": {
  "data": {
   "lineno": 1692
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.phillips_ouliaris.PVAL_TAU_MIN": {
  "data": {
   "lineno": 2114
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.phillips_ouliaris.PVAL_TAU_STAR": {
  "data": {
   "lineno": 1903
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.phillips_ouliaris.inf": {
  "data": {
   "shadows": "math.inf"
  },
  "type": "import"
 },
 "arch.unitroot.critical_values.zivot_andrews": {
  "data": {
   "symbols_in_volume": [
    "arch.unitroot.critical_values.zivot_andrews.c",
    "arch.unitroot.critical_values.zivot_andrews.ct",
    "arch.unitroot.critical_values.zivot_andrews.t",
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "arch.unitroot.critical_values.zivot_andrews.__all__": {
  "data": {
   "lineno": 171
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.zivot_andrews.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "arch.unitroot.critical_values.zivot_andrews.c": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.zivot_andrews.ct": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.zivot_andrews.t": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.zivot_andrews.za_critical_values": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "arch.unitroot.engle_granger": {
  "data": {
   "shadows": "arch.unitroot.cointegration.engle_granger"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot": {
  "data": {},
  "type": "module"
 },
 "arch.unitroot.unitroot.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.ADF": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "arch.unitroot.unitroot.UnitRootTest",
    "arch.utility.array.AbstractDocStringInheritor"
   ]
  },
  "type": "class"
 },
 "arch.unitroot.unitroot.ADF.__init__": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "bool",
    "int",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.ADF._check_specification": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "arch.utility.exceptions.InfeasibleTestException",
    "len"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.ADF._compute_statistic": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "arch.unitroot.unitroot._estimate_df_regression",
    "int",
    "mackinnoncrit",
    "mackinnonp"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.ADF._select_lag": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "arch.unitroot.unitroot._df_select_lags"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.ADF.max_lags": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "FutureWarning",
    "arch.unitroot.unitroot.MUTATING_WARNING",
    "arch.unitroot.unitroot.warnings",
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.ADF.regression": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "property",
    "statsmodels.regression.linear_model.RegressionResults"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.AbstractDocStringInheritor": {
  "data": {
   "shadows": "arch.utility.array.AbstractDocStringInheritor"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.ArrayLike": {
  "data": {
   "shadows": "arch.typing.ArrayLike"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.ArrayLike1D": {
  "data": {
   "shadows": "arch.typing.ArrayLike1D"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.ArrayLike2D": {
  "data": {
   "shadows": "arch.typing.ArrayLike2D"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.DFGLS": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "arch.unitroot.unitroot.UnitRootTest",
    "arch.utility.array.AbstractDocStringInheritor"
   ]
  },
  "type": "class"
 },
 "arch.unitroot.unitroot.DFGLS.__init__": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "bool",
    "int",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.DFGLS._check_specification": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "arch.utility.exceptions.InfeasibleTestException",
    "len"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.DFGLS._compute_statistic": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "arch.unitroot.unitroot._df_select_lags",
    "arch.unitroot.unitroot._estimate_df_regression",
    "arch.utility.timeseries.add_trend",
    "int",
    "mackinnoncrit",
    "mackinnonp",
    "numpy.linalg.pinv"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.DFGLS.max_lags": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "FutureWarning",
    "arch.unitroot.unitroot.MUTATING_WARNING",
    "arch.unitroot.unitroot.warnings",
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.DFGLS.regression": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "property",
    "statsmodels.regression.linear_model.RegressionResults"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.DFGLS.trend": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "arch.unitroot.unitroot.MUTATING_WARNING",
    "arch.unitroot.unitroot.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.InfeasibleTestException": {
  "data": {
   "shadows": "arch.utility.exceptions.InfeasibleTestException"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.InvalidLengthWarning": {
  "data": {
   "shadows": "arch.utility.exceptions.InvalidLengthWarning"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.KPSS": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": [
    "arch.unitroot.unitroot.UnitRootTest",
    "arch.utility.array.AbstractDocStringInheritor"
   ]
  },
  "type": "class"
 },
 "arch.unitroot.unitroot.KPSS.__init__": {
  "data": {
   "lineno": 1262,
   "symbols_in_volume": [
    "DeprecationWarning",
    "arch.typing.ArrayLike",
    "arch.typing.ArrayLike1D",
    "arch.unitroot.unitroot.warnings",
    "int",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.KPSS._autolag": {
  "data": {
   "lineno": 1323,
   "symbols_in_volume": [
    "arch.utility.exceptions.InfeasibleTestException",
    "int",
    "numpy.amin",
    "numpy.power",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.KPSS._check_specification": {
  "data": {
   "lineno": 1282,
   "symbols_in_volume": [
    "arch.utility.exceptions.InfeasibleTestException",
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.KPSS._compute_statistic": {
  "data": {
   "lineno": 1292,
   "symbols_in_volume": [
    "arch.utility.cov_nw",
    "arch.utility.exceptions.InfeasibleTestException",
    "arch.utility.timeseries.add_trend",
    "int",
    "kpss_crit",
    "numpy.ceil",
    "numpy.cumsum",
    "numpy.power",
    "numpy.sum",
    "statsmodels.regression.linear_model.OLS"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.LinAlgError": {
  "data": {
   "shadows": "numpy.linalg.LinAlgError"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.MUTATING_WARNING": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "arch.unitroot.unitroot.NDArray": {
  "data": {
   "shadows": "arch.typing.NDArray"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.OLS": {
  "data": {
   "shadows": "statsmodels.regression.linear_model.OLS"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.PhillipsPerron": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "arch.unitroot.unitroot.UnitRootTest",
    "arch.utility.array.AbstractDocStringInheritor"
   ]
  },
  "type": "class"
 },
 "arch.unitroot.unitroot.PhillipsPerron.__init__": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "int",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.PhillipsPerron._check_specification": {
  "data": {
   "lineno": 1102,
   "symbols_in_volume": [
    "arch.utility.exceptions.InfeasibleTestException",
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.PhillipsPerron._compute_statistic": {
  "data": {
   "lineno": 1112,
   "symbols_in_volume": [
    "arch.unitroot.unitroot._add_column_names",
    "arch.utility.cov_nw",
    "arch.utility.exceptions.InfeasibleTestException",
    "arch.utility.timeseries.add_trend",
    "int",
    "mackinnoncrit",
    "mackinnonp",
    "numpy.ceil",
    "numpy.power",
    "numpy.sqrt",
    "statsmodels.regression.linear_model.OLS"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.PhillipsPerron.test_type": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "arch.unitroot.unitroot.MUTATING_WARNING",
    "arch.unitroot.unitroot.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.RegressionResults": {
  "data": {
   "shadows": "statsmodels.regression.linear_model.RegressionResults"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.SHORT_TREND_DESCRIPTION": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "arch.unitroot.unitroot.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.SimpleTable": {
  "data": {
   "shadows": "statsmodels.iolib.table.SimpleTable"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.Summary": {
  "data": {
   "shadows": "statsmodels.iolib.summary.Summary"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.TREND_DESCRIPTION": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "arch.unitroot.unitroot.TREND_MAP": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "arch.unitroot.unitroot.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.UnitRootTest": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "arch.unitroot.unitroot.UnitRootTest.__init__": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "arch.typing.ArrayLike",
    "arch.unitroot.unitroot.warnings",
    "arch.utility.array.ensure1d",
    "float",
    "int",
    "numpy.diff",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.UnitRootTest.__repr__": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.UnitRootTest.__str__": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.UnitRootTest._check_specification": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.UnitRootTest._compute_if_needed": {
  "data": {
   "lineno": 508
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.UnitRootTest._compute_statistic": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.UnitRootTest._repr_html_": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.UnitRootTest._reset": {
  "data": {
   "lineno": 502
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.UnitRootTest.alternative_hypothesis": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.UnitRootTest.critical_values": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "float",
    "property",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.UnitRootTest.lags": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "arch.unitroot.unitroot.MUTATING_WARNING",
    "arch.unitroot.unitroot.warnings",
    "int",
    "isinstance",
    "numpy.int32",
    "numpy.int64",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.UnitRootTest.nobs": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.UnitRootTest.null_hypothesis": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.UnitRootTest.pvalue": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.UnitRootTest.stat": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.UnitRootTest.summary": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "arch.unitroot.unitroot.TREND_DESCRIPTION",
    "float",
    "int",
    "numpy.array",
    "numpy.sort",
    "statsmodels.iolib.summary.Summary",
    "statsmodels.iolib.table.SimpleTable",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.UnitRootTest.trend": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "arch.unitroot.unitroot.MUTATING_WARNING",
    "arch.unitroot.unitroot.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.UnitRootTest.valid_trends": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.UnitRootTest.y": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.VarianceRatio": {
  "data": {
   "lineno": 1565,
   "symbols_in_volume": [
    "arch.unitroot.unitroot.UnitRootTest",
    "arch.utility.array.AbstractDocStringInheritor"
   ]
  },
  "type": "class"
 },
 "arch.unitroot.unitroot.VarianceRatio.__init__": {
  "data": {
   "lineno": 1616,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.ArrayLike",
    "bool",
    "float",
    "int",
    "numpy.array",
    "scipy.stats.norm.ppf",
    "str",
    "super",
    "typing.Optional",
    "zip"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.VarianceRatio._check_specification": {
  "data": {
   "lineno": 1684,
   "symbols_in_volume": [
    "arch.utility.exceptions.InfeasibleTestException",
    "int"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.VarianceRatio._compute_statistic": {
  "data": {
   "lineno": 1694,
   "symbols_in_volume": [
    "arch.unitroot.unitroot.warnings",
    "arch.utility.exceptions.InvalidLengthWarning",
    "arch.utility.exceptions.invalid_length_doc.format",
    "numpy.abs",
    "numpy.diff",
    "numpy.sqrt",
    "numpy.sum",
    "range",
    "scipy.stats.norm.cdf"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.VarianceRatio.debiased": {
  "data": {
   "lineno": 1678,
   "symbols_in_volume": [
    "FutureWarning",
    "arch.unitroot.unitroot.MUTATING_WARNING",
    "arch.unitroot.unitroot.warnings",
    "bool"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.VarianceRatio.overlap": {
  "data": {
   "lineno": 1655,
   "symbols_in_volume": [
    "FutureWarning",
    "arch.unitroot.unitroot.MUTATING_WARNING",
    "arch.unitroot.unitroot.warnings",
    "bool"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.VarianceRatio.robust": {
  "data": {
   "lineno": 1667,
   "symbols_in_volume": [
    "FutureWarning",
    "arch.unitroot.unitroot.MUTATING_WARNING",
    "arch.unitroot.unitroot.warnings",
    "bool"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.VarianceRatio.vr": {
  "data": {
   "lineno": 1641,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.ZivotAndrews": {
  "data": {
   "lineno": 1355,
   "symbols_in_volume": [
    "arch.unitroot.unitroot.UnitRootTest",
    "arch.utility.array.AbstractDocStringInheritor"
   ]
  },
  "type": "class"
 },
 "arch.unitroot.unitroot.ZivotAndrews.__init__": {
  "data": {
   "lineno": 1417,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.ArrayLike",
    "float",
    "int",
    "isinstance",
    "numpy.full",
    "numpy.nan",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.ZivotAndrews._check_specification": {
  "data": {
   "lineno": 1452,
   "symbols_in_volume": [
    "arch.utility.exceptions.InfeasibleTestException",
    "len"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.ZivotAndrews._compute_statistic": {
  "data": {
   "lineno": 1462,
   "symbols_in_volume": [
    "arch.unitroot.unitroot.ADF",
    "arch.utility.array.ensure2d",
    "arch.utility.exceptions.InfeasibleTestException",
    "int",
    "numpy.amin",
    "numpy.arange",
    "numpy.diff",
    "numpy.empty",
    "numpy.full",
    "numpy.inf",
    "numpy.linalg.matrix_rank",
    "numpy.sqrt",
    "range",
    "statsmodels.tsa.tsatools.lagmat"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.ZivotAndrews._cv_interpolate": {
  "data": {
   "lineno": 1542,
   "symbols_in_volume": [
    "arch.unitroot.critical_values.zivot_andrews.za_critical_values",
    "numpy.interp"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.ZivotAndrews._quick_ols": {
  "data": {
   "lineno": 1439,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "numpy.diag",
    "numpy.linalg.inv",
    "numpy.sqrt",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.__all__": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "arch.unitroot.unitroot._add_column_names": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "int",
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot._autolag_ols": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "arch.typing.ArrayLike1D",
    "arch.typing.ArrayLike2D",
    "arch.unitroot.unitroot._is_reduced_rank",
    "arch.unitroot.unitroot._select_best_ic",
    "arch.unitroot.unitroot.singular_array_error",
    "arch.utility.exceptions.InfeasibleTestException",
    "float",
    "int",
    "max",
    "numpy.empty",
    "numpy.inf",
    "numpy.linalg.inv",
    "numpy.linalg.matrix_rank",
    "numpy.linalg.qr",
    "numpy.linalg.solve",
    "numpy.sqrt",
    "range",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot._autolag_ols_low_memory": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.unitroot.unitroot._select_best_ic",
    "arch.unitroot.unitroot.singular_array_error",
    "arch.utility.exceptions.InfeasibleTestException",
    "float",
    "int",
    "numpy.arange",
    "numpy.diff",
    "numpy.empty",
    "numpy.float64",
    "numpy.hstack",
    "numpy.inf",
    "numpy.linalg.LinAlgError",
    "numpy.linalg.inv",
    "numpy.linalg.solve",
    "numpy.nan",
    "numpy.ones",
    "numpy.sqrt",
    "range",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot._df_select_lags": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.unitroot.unitroot._autolag_ols",
    "arch.unitroot.unitroot._autolag_ols_low_memory",
    "arch.utility.timeseries.add_trend",
    "bool",
    "float",
    "int",
    "len",
    "max",
    "min",
    "numpy.ceil",
    "numpy.diff",
    "numpy.power",
    "statsmodels.tsa.tsatools.lagmat",
    "str",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot._estimate_df_regression": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.unitroot.unitroot._add_column_names",
    "arch.utility.timeseries.add_trend",
    "int",
    "numpy.diff",
    "statsmodels.regression.linear_model.OLS",
    "statsmodels.regression.linear_model.RegressionResults",
    "statsmodels.tsa.tsatools.lagmat",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot._is_reduced_rank": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "bool",
    "int",
    "numpy.amax",
    "numpy.amin",
    "numpy.any",
    "numpy.isnan",
    "numpy.linalg.matrix_rank",
    "numpy.sum",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot._select_best_ic": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.NDArray",
    "float",
    "int",
    "len",
    "max",
    "min",
    "numpy.abs",
    "numpy.arange",
    "numpy.argwhere",
    "numpy.log",
    "numpy.pi",
    "numpy.squeeze",
    "str",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.abs": {
  "data": {
   "shadows": "numpy.abs"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.add_trend": {
  "data": {
   "shadows": "arch.utility.timeseries.add_trend"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.adf_z_cv_approx": {
  "data": {
   "shadows": "arch.unitroot.critical_values.dickey_fuller.adf_z_cv_approx"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.adf_z_large_p": {
  "data": {
   "shadows": "arch.unitroot.critical_values.dickey_fuller.adf_z_large_p"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.adf_z_max": {
  "data": {
   "shadows": "arch.unitroot.critical_values.dickey_fuller.adf_z_max"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.adf_z_min": {
  "data": {
   "shadows": "arch.unitroot.critical_values.dickey_fuller.adf_z_min"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.adf_z_small_p": {
  "data": {
   "shadows": "arch.unitroot.critical_values.dickey_fuller.adf_z_small_p"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.adf_z_star": {
  "data": {
   "shadows": "arch.unitroot.critical_values.dickey_fuller.adf_z_star"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.amax": {
  "data": {
   "shadows": "numpy.amax"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.amin": {
  "data": {
   "shadows": "numpy.amin"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.argwhere": {
  "data": {
   "shadows": "numpy.argwhere"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.auto_bandwidth": {
  "data": {
   "lineno": 1952,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.ArrayLike1D",
    "arch.utility.array.ensure1d",
    "float",
    "int",
    "len",
    "list",
    "numpy.power",
    "numpy.sum",
    "range",
    "str",
    "typing.Sequence",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.ceil": {
  "data": {
   "shadows": "numpy.ceil"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.cov_nw": {
  "data": {
   "shadows": "arch.utility.cov_nw"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.cumsum": {
  "data": {
   "shadows": "numpy.cumsum"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.dfgls_cv_approx": {
  "data": {
   "shadows": "arch.unitroot.critical_values.dfgls.dfgls_cv_approx"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.dfgls_large_p": {
  "data": {
   "shadows": "arch.unitroot.critical_values.dfgls.dfgls_large_p"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.dfgls_small_p": {
  "data": {
   "shadows": "arch.unitroot.critical_values.dfgls.dfgls_small_p"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.dfgls_tau_max": {
  "data": {
   "shadows": "arch.unitroot.critical_values.dfgls.dfgls_tau_max"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.dfgls_tau_min": {
  "data": {
   "shadows": "arch.unitroot.critical_values.dfgls.dfgls_tau_min"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.dfgls_tau_star": {
  "data": {
   "shadows": "arch.unitroot.critical_values.dfgls.dfgls_tau_star"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.diag": {
  "data": {
   "shadows": "numpy.diag"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.diff": {
  "data": {
   "shadows": "numpy.diff"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.empty": {
  "data": {
   "shadows": "numpy.empty"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.ensure1d": {
  "data": {
   "shadows": "arch.utility.array.ensure1d"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.ensure2d": {
  "data": {
   "shadows": "arch.utility.array.ensure2d"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.float64": {
  "data": {
   "shadows": "numpy.float64"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.full": {
  "data": {
   "shadows": "numpy.full"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.hstack": {
  "data": {
   "shadows": "numpy.hstack"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.inf": {
  "data": {
   "shadows": "numpy.inf"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.int32": {
  "data": {
   "shadows": "numpy.int32"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.int64": {
  "data": {
   "shadows": "numpy.int64"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.interp": {
  "data": {
   "shadows": "numpy.interp"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.inv": {
  "data": {
   "shadows": "numpy.linalg.inv"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.invalid_length_doc": {
  "data": {
   "shadows": "arch.utility.exceptions.invalid_length_doc"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.isnan": {
  "data": {
   "shadows": "numpy.isnan"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.kpss_crit": {
  "data": {
   "lineno": 1916,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.unitroot.critical_values.kpss.kpss_critical_values",
    "float",
    "numpy.interp",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.kpss_critical_values": {
  "data": {
   "shadows": "arch.unitroot.critical_values.kpss.kpss_critical_values"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.lagmat": {
  "data": {
   "shadows": "statsmodels.tsa.tsatools.lagmat"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.log": {
  "data": {
   "shadows": "numpy.log"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.mackinnoncrit": {
  "data": {
   "lineno": 1838,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.NDArray",
    "arch.unitroot.critical_values.dfgls.dfgls_cv_approx",
    "arch.unitroot.critical_values.dfgls.dfgls_cv_approx.T",
    "arch.unitroot.critical_values.dickey_fuller.adf_z_cv_approx",
    "arch.unitroot.critical_values.dickey_fuller.adf_z_cv_approx.T",
    "arch.unitroot.critical_values.dickey_fuller.tau_2010",
    "arch.unitroot.critical_values.dickey_fuller.tau_2010.T",
    "float",
    "int",
    "numpy.inf",
    "numpy.polyval",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.mackinnonp": {
  "data": {
   "lineno": 1755,
   "symbols_in_volume": [
    "ValueError",
    "arch.unitroot.critical_values.dfgls.dfgls_large_p",
    "arch.unitroot.critical_values.dfgls.dfgls_small_p",
    "arch.unitroot.critical_values.dfgls.dfgls_tau_max",
    "arch.unitroot.critical_values.dfgls.dfgls_tau_min",
    "arch.unitroot.critical_values.dfgls.dfgls_tau_star",
    "arch.unitroot.critical_values.dickey_fuller.adf_z_large_p",
    "arch.unitroot.critical_values.dickey_fuller.adf_z_max",
    "arch.unitroot.critical_values.dickey_fuller.adf_z_min",
    "arch.unitroot.critical_values.dickey_fuller.adf_z_small_p",
    "arch.unitroot.critical_values.dickey_fuller.adf_z_star",
    "arch.unitroot.critical_values.dickey_fuller.tau_large_p",
    "arch.unitroot.critical_values.dickey_fuller.tau_max",
    "arch.unitroot.critical_values.dickey_fuller.tau_min",
    "arch.unitroot.critical_values.dickey_fuller.tau_small_p",
    "arch.unitroot.critical_values.dickey_fuller.tau_star",
    "float",
    "int",
    "numpy.abs",
    "numpy.log",
    "numpy.polyval",
    "scipy.stats.norm.cdf",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.unitroot.unitroot.matrix_rank": {
  "data": {
   "shadows": "numpy.linalg.matrix_rank"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.norm": {
  "data": {
   "shadows": "scipy.stats.norm"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.npany": {
  "data": {
   "shadows": "numpy.any"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.pinv": {
  "data": {
   "shadows": "numpy.linalg.pinv"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.polyval": {
  "data": {
   "shadows": "numpy.polyval"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.power": {
  "data": {
   "shadows": "numpy.power"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.qr": {
  "data": {
   "shadows": "numpy.linalg.qr"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.singular_array_error": {
  "data": {
   "lineno": 178
  },
  "type": "constant"
 },
 "arch.unitroot.unitroot.solve": {
  "data": {
   "shadows": "numpy.linalg.solve"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.sort": {
  "data": {
   "shadows": "numpy.sort"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.sqrt": {
  "data": {
   "shadows": "numpy.sqrt"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.squeeze": {
  "data": {
   "shadows": "numpy.squeeze"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.sum": {
  "data": {
   "shadows": "numpy.sum"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.tau_2010": {
  "data": {
   "shadows": "arch.unitroot.critical_values.dickey_fuller.tau_2010"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.tau_large_p": {
  "data": {
   "shadows": "arch.unitroot.critical_values.dickey_fuller.tau_large_p"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.tau_max": {
  "data": {
   "shadows": "arch.unitroot.critical_values.dickey_fuller.tau_max"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.tau_min": {
  "data": {
   "shadows": "arch.unitroot.critical_values.dickey_fuller.tau_min"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.tau_small_p": {
  "data": {
   "shadows": "arch.unitroot.critical_values.dickey_fuller.tau_small_p"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.tau_star": {
  "data": {
   "shadows": "arch.unitroot.critical_values.dickey_fuller.tau_star"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "arch.unitroot.unitroot.za_critical_values": {
  "data": {
   "shadows": "arch.unitroot.critical_values.zivot_andrews.za_critical_values"
  },
  "type": "import"
 },
 "arch.univariate": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "arch.univariate.recursions_python"
   ]
  },
  "type": "module"
 },
 "arch.univariate.ARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.ARCH"
  },
  "type": "import"
 },
 "arch.univariate.ARX": {
  "data": {
   "shadows": "arch.univariate.mean.ARX"
  },
  "type": "import"
 },
 "arch.univariate.ConstantMean": {
  "data": {
   "shadows": "arch.univariate.mean.ConstantMean"
  },
  "type": "import"
 },
 "arch.univariate.ConstantVariance": {
  "data": {
   "shadows": "arch.univariate.volatility.ConstantVariance"
  },
  "type": "import"
 },
 "arch.univariate.Distribution": {
  "data": {
   "shadows": "arch.univariate.distribution.Distribution"
  },
  "type": "import"
 },
 "arch.univariate.EGARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.EGARCH"
  },
  "type": "import"
 },
 "arch.univariate.EWMAVariance": {
  "data": {
   "shadows": "arch.univariate.volatility.EWMAVariance"
  },
  "type": "import"
 },
 "arch.univariate.FIGARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.FIGARCH"
  },
  "type": "import"
 },
 "arch.univariate.FixedVariance": {
  "data": {
   "shadows": "arch.univariate.volatility.FixedVariance"
  },
  "type": "import"
 },
 "arch.univariate.GARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.GARCH"
  },
  "type": "import"
 },
 "arch.univariate.GeneralizedError": {
  "data": {
   "shadows": "arch.univariate.distribution.GeneralizedError"
  },
  "type": "import"
 },
 "arch.univariate.HARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.HARCH"
  },
  "type": "import"
 },
 "arch.univariate.HARX": {
  "data": {
   "shadows": "arch.univariate.mean.HARX"
  },
  "type": "import"
 },
 "arch.univariate.LS": {
  "data": {
   "shadows": "arch.univariate.mean.LS"
  },
  "type": "import"
 },
 "arch.univariate.MIDASHyperbolic": {
  "data": {
   "shadows": "arch.univariate.volatility.MIDASHyperbolic"
  },
  "type": "import"
 },
 "arch.univariate.Normal": {
  "data": {
   "shadows": "arch.univariate.distribution.Normal"
  },
  "type": "import"
 },
 "arch.univariate.RiskMetrics2006": {
  "data": {
   "shadows": "arch.univariate.volatility.RiskMetrics2006"
  },
  "type": "import"
 },
 "arch.univariate.SkewStudent": {
  "data": {
   "shadows": "arch.univariate.distribution.SkewStudent"
  },
  "type": "import"
 },
 "arch.univariate.StudentsT": {
  "data": {
   "shadows": "arch.univariate.distribution.StudentsT"
  },
  "type": "import"
 },
 "arch.univariate.ZeroMean": {
  "data": {
   "shadows": "arch.univariate.mean.ZeroMean"
  },
  "type": "import"
 },
 "arch.univariate.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "arch.univariate.arch_model": {
  "data": {
   "shadows": "arch.univariate.mean.arch_model"
  },
  "type": "import"
 },
 "arch.univariate.base": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "arch.univariate.base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "arch.univariate.base.ARCHModel": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "arch.univariate.base.ARCHModel.__init__": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "TypeError",
    "arch.typing.ArrayLike",
    "arch.typing.NDArray",
    "arch.univariate.distribution.Distribution",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.ConstantVariance",
    "arch.univariate.volatility.VolatilityProcess",
    "arch.utility.array.ensure1d",
    "bool",
    "float",
    "int",
    "isinstance",
    "numpy.asarray",
    "numpy.empty",
    "pandas.DataFrame",
    "pandas.Series",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModel._adjust_sample": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "arch.typing.DateLike",
    "int",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModel._all_parameter_names": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModel._check_scale": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.univariate.base.warnings",
    "arch.utility.exceptions.DataScaleWarning",
    "arch.utility.exceptions.data_scale_warning.format"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModel._fit_no_arch_normal_errors": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModel._fit_parameterless_model": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "ARCHModelResult",
    "copy.deepcopy",
    "float",
    "isinstance",
    "numpy.empty",
    "numpy.full_like",
    "numpy.nan",
    "scipy.optimize.OptimizeResult",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModel._loglikelihood": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "bool",
    "float",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModel._parse_parameters": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "arch.typing.NDArray",
    "int",
    "numpy.asarray",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModel._r2": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "NotImplementedError",
    "arch.typing.ArrayLike1D",
    "float",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModel._static_gaussian_loglikelihood": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "numpy.log",
    "numpy.pi",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModel.bounds": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "float",
    "numpy.inf",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModel.compute_param_cov": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "bool",
    "float",
    "numpy.cov",
    "numpy.linalg.inv",
    "numpy.zeros_like",
    "statsmodels.tools.numdiff.approx_fprime",
    "statsmodels.tools.numdiff.approx_hess",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModel.constraints": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "numpy.empty",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModel.distribution": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "ValueError",
    "arch.univariate.distribution.Distribution",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModel.fit": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "ARCHModelResult",
    "NotImplementedError",
    "RuntimeError",
    "arch.typing.ArrayLike1D",
    "arch.typing.DateLike",
    "arch.typing.NDArray",
    "arch.univariate.base._callback",
    "arch.univariate.base.constraint",
    "arch.univariate.base.warnings",
    "arch.univariate.volatility.ConstantVariance",
    "arch.utility.array.ensure1d",
    "arch.utility.exceptions.ConvergenceWarning",
    "arch.utility.exceptions.StartingValueWarning",
    "arch.utility.exceptions.convergence_warning.format",
    "arch.utility.exceptions.starting_value_warning",
    "bool",
    "copy.deepcopy",
    "enumerate",
    "float",
    "int",
    "isinstance",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty_like",
    "numpy.float64",
    "numpy.hstack",
    "numpy.nan",
    "numpy.sqrt",
    "numpy.zeros",
    "numpy.zeros_like",
    "scipy.optimize.minimize",
    "str",
    "sum",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModel.fix": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "ARCHModelFixedResult",
    "arch.typing.ArrayLike1D",
    "arch.typing.DateLike",
    "arch.utility.array.ensure1d",
    "copy.deepcopy",
    "float",
    "int",
    "numpy.empty_like",
    "numpy.float64",
    "numpy.nan",
    "numpy.sqrt",
    "numpy.zeros_like",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModel.forecast": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "arch.typing.DateLike",
    "arch.typing.NDArray",
    "int",
    "numpy.random.RandomState",
    "str",
    "typing.Callable",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModel.name": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModel.num_params": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "arch.vendor.cached_property",
    "int"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModel.parameter_names": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModel.resids": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "arch.typing.NDArray",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModel.simulate": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "arch.typing.ArrayLike",
    "arch.typing.ArrayLike1D",
    "float",
    "int",
    "pandas.DataFrame",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModel.starting_values": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "numpy.asarray",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModel.volatility": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "ValueError",
    "arch.univariate.volatility.VolatilityProcess",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModel.y": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelFixedResult": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "arch.univariate.base._SummaryRepr"
   ]
  },
  "type": "class"
 },
 "arch.univariate.base.ARCHModelFixedResult.__init__": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.univariate.base.ARCHModel",
    "bool",
    "datetime.datetime.now",
    "float",
    "pandas.Series",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelFixedResult.aic": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": [
    "arch.vendor.cached_property",
    "float"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelFixedResult.arch_lm_test": {
  "data": {
   "lineno": 1504,
   "symbols_in_volume": [
    "arch.utility.testing.WaldTestStatistic",
    "bool",
    "int",
    "isinstance",
    "max",
    "min",
    "numpy.asarray",
    "numpy.ceil",
    "numpy.power",
    "statsmodels.regression.linear_model.OLS",
    "statsmodels.tools.tools.add_constant",
    "statsmodels.tsa.tsatools.lagmat",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelFixedResult.bic": {
  "data": {
   "lineno": 1169,
   "symbols_in_volume": [
    "arch.vendor.cached_property",
    "float",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelFixedResult.conditional_volatility": {
  "data": {
   "lineno": 1183,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.vendor.cached_property",
    "pandas.Series",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelFixedResult.forecast": {
  "data": {
   "lineno": 1306,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.ArrayLike1D",
    "arch.typing.DateLike",
    "arch.typing.NDArray",
    "int",
    "numpy.array",
    "numpy.random.RandomState",
    "str",
    "typing.Callable",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelFixedResult.hedgehog_plot": {
  "data": {
   "lineno": 1395,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.ArrayLike1D",
    "arch.typing.DateLike",
    "int",
    "isinstance",
    "matplotlib.pyplot.subplots",
    "numpy.array",
    "numpy.asarray",
    "numpy.hstack",
    "numpy.isnan",
    "numpy.logical_not",
    "numpy.min",
    "numpy.sqrt",
    "numpy.where",
    "pandas.DatetimeIndex",
    "pandas.util._decorators.deprecate_kwarg",
    "plot_fn",
    "range",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelFixedResult.loglikelihood": {
  "data": {
   "lineno": 1152,
   "symbols_in_volume": [
    "arch.vendor.cached_property",
    "float"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelFixedResult.model": {
  "data": {
   "lineno": 1145,
   "symbols_in_volume": [
    "arch.univariate.base.ARCHModel",
    "arch.vendor.cached_property"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelFixedResult.nobs": {
  "data": {
   "lineno": 1201,
   "symbols_in_volume": [
    "arch.vendor.cached_property",
    "int"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelFixedResult.num_params": {
  "data": {
   "lineno": 1164,
   "symbols_in_volume": [
    "arch.vendor.cached_property",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelFixedResult.params": {
  "data": {
   "lineno": 1178,
   "symbols_in_volume": [
    "arch.vendor.cached_property",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelFixedResult.plot": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "ValueError",
    "_set_tight_x",
    "float",
    "matplotlib.pyplot.figure",
    "numpy.sqrt",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelFixedResult.plot._set_tight_x": {
  "data": {
   "lineno": 1270,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.DateLike",
    "float",
    "matplotlib.axes.Axes",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelFixedResult.resid": {
  "data": {
   "lineno": 1208,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.vendor.cached_property",
    "pandas.Series",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelFixedResult.std_resid": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.vendor.cached_property",
    "pandas.Series",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelFixedResult.summary": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "arch.univariate.base.format_float_fixed",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "numpy.float64",
    "range",
    "statsmodels.iolib.summary.Summary",
    "statsmodels.iolib.summary.fmt_2cols",
    "statsmodels.iolib.summary.fmt_params",
    "statsmodels.iolib.table.SimpleTable",
    "zip"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelForecast": {
  "data": {
   "lineno": 1942,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.univariate.base.ARCHModelForecast.__init__": {
  "data": {
   "lineno": 1968,
   "symbols_in_volume": [
    "arch.typing.Label",
    "arch.typing.NDArray",
    "arch.univariate.base.ARCHModelForecastSimulation",
    "arch.univariate.base._align_forecast",
    "arch.univariate.base._format_forecasts",
    "pandas.Index",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelForecast.mean": {
  "data": {
   "lineno": 1995,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelForecast.residual_variance": {
  "data": {
   "lineno": 2003,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelForecast.simulations": {
  "data": {
   "lineno": 2007,
   "symbols_in_volume": [
    "arch.univariate.base.ARCHModelForecastSimulation",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelForecast.variance": {
  "data": {
   "lineno": 1999,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelForecastSimulation": {
  "data": {
   "lineno": 1890,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.univariate.base.ARCHModelForecastSimulation.__init__": {
  "data": {
   "lineno": 1913,
   "symbols_in_volume": [
    "arch.typing.NDArray"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelForecastSimulation.residual_variances": {
  "data": {
   "lineno": 1937,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelForecastSimulation.residuals": {
  "data": {
   "lineno": 1929,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelForecastSimulation.values": {
  "data": {
   "lineno": 1925,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelForecastSimulation.variances": {
  "data": {
   "lineno": 1933,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelResult": {
  "data": {
   "lineno": 1548,
   "symbols_in_volume": [
    "arch.univariate.base.ARCHModelFixedResult"
   ]
  },
  "type": "class"
 },
 "arch.univariate.base.ARCHModelResult.__init__": {
  "data": {
   "lineno": 1588,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.univariate.base.ARCHModel",
    "bool",
    "float",
    "int",
    "pandas.Series",
    "scipy.optimize.OptimizeResult",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelResult.conf_int": {
  "data": {
   "lineno": 1625,
   "symbols_in_volume": [
    "float",
    "numpy.vstack",
    "pandas.DataFrame",
    "scipy.stats.norm.ppf"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelResult.convergence_flag": {
  "data": {
   "lineno": 1849,
   "symbols_in_volume": [
    "arch.vendor.cached_property",
    "int"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelResult.fit_start": {
  "data": {
   "lineno": 1803,
   "symbols_in_volume": [
    "arch.vendor.cached_property",
    "int"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelResult.fit_stop": {
  "data": {
   "lineno": 1808,
   "symbols_in_volume": [
    "arch.vendor.cached_property",
    "int"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelResult.optimization_result": {
  "data": {
   "lineno": 1856,
   "symbols_in_volume": [
    "property",
    "scipy.optimize.OptimizeResult"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelResult.param_cov": {
  "data": {
   "lineno": 1783,
   "symbols_in_volume": [
    "arch.vendor.cached_property",
    "numpy.asarray",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelResult.pvalues": {
  "data": {
   "lineno": 1822,
   "symbols_in_volume": [
    "arch.vendor.cached_property",
    "numpy.abs",
    "pandas.Series",
    "scipy.stats.norm.sf"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelResult.rsquared": {
  "data": {
   "lineno": 1796,
   "symbols_in_volume": [
    "arch.vendor.cached_property",
    "float"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelResult.rsquared_adj": {
  "data": {
   "lineno": 1813,
   "symbols_in_volume": [
    "arch.vendor.cached_property",
    "float"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelResult.scale": {
  "data": {
   "lineno": 1615,
   "symbols_in_volume": [
    "arch.vendor.cached_property",
    "float"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelResult.std_err": {
  "data": {
   "lineno": 1831,
   "symbols_in_volume": [
    "arch.vendor.cached_property",
    "numpy.diag",
    "numpy.sqrt",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelResult.summary": {
  "data": {
   "lineno": 1650,
   "symbols_in_volume": [
    "arch.univariate.base.CONVERGENCE_WARNGING",
    "arch.univariate.base.format_float_fixed",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "numpy.asarray",
    "numpy.float64",
    "range",
    "statsmodels.iolib.summary.Summary",
    "statsmodels.iolib.summary.fmt_2cols",
    "statsmodels.iolib.summary.fmt_params",
    "statsmodels.iolib.table.SimpleTable",
    "zip"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.ARCHModelResult.tvalues": {
  "data": {
   "lineno": 1840,
   "symbols_in_volume": [
    "arch.vendor.cached_property",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "arch.univariate.base.ArrayLike": {
  "data": {
   "shadows": "arch.typing.ArrayLike"
  },
  "type": "import"
 },
 "arch.univariate.base.ArrayLike1D": {
  "data": {
   "shadows": "arch.typing.ArrayLike1D"
  },
  "type": "import"
 },
 "arch.univariate.base.Axes": {
  "data": {
   "shadows": "matplotlib.axes.Axes"
  },
  "type": "import"
 },
 "arch.univariate.base.CONVERGENCE_WARNGING": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "arch.univariate.base.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "arch.univariate.base.ConstantVariance": {
  "data": {
   "shadows": "arch.univariate.volatility.ConstantVariance"
  },
  "type": "import"
 },
 "arch.univariate.base.ConvergenceWarning": {
  "data": {
   "shadows": "arch.utility.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "arch.univariate.base.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "arch.univariate.base.DataScaleWarning": {
  "data": {
   "shadows": "arch.utility.exceptions.DataScaleWarning"
  },
  "type": "import"
 },
 "arch.univariate.base.DateLike": {
  "data": {
   "shadows": "arch.typing.DateLike"
  },
  "type": "import"
 },
 "arch.univariate.base.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "arch.univariate.base.Distribution": {
  "data": {
   "shadows": "arch.univariate.distribution.Distribution"
  },
  "type": "import"
 },
 "arch.univariate.base.Figure": {
  "data": {
   "shadows": "matplotlib.figure.Figure"
  },
  "type": "import"
 },
 "arch.univariate.base.Label": {
  "data": {
   "shadows": "arch.typing.Label"
  },
  "type": "import"
 },
 "arch.univariate.base.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "arch.univariate.base.NDArray": {
  "data": {
   "shadows": "arch.typing.NDArray"
  },
  "type": "import"
 },
 "arch.univariate.base.Normal": {
  "data": {
   "shadows": "arch.univariate.distribution.Normal"
  },
  "type": "import"
 },
 "arch.univariate.base.OLS": {
  "data": {
   "shadows": "statsmodels.regression.linear_model.OLS"
  },
  "type": "import"
 },
 "arch.univariate.base.OptimizeResult": {
  "data": {
   "shadows": "scipy.optimize.OptimizeResult"
  },
  "type": "import"
 },
 "arch.univariate.base.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "arch.univariate.base.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "arch.univariate.base.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "arch.univariate.base.SimpleTable": {
  "data": {
   "shadows": "statsmodels.iolib.table.SimpleTable"
  },
  "type": "import"
 },
 "arch.univariate.base.StartingValueWarning": {
  "data": {
   "shadows": "arch.utility.exceptions.StartingValueWarning"
  },
  "type": "import"
 },
 "arch.univariate.base.Summary": {
  "data": {
   "shadows": "statsmodels.iolib.summary.Summary"
  },
  "type": "import"
 },
 "arch.univariate.base.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "arch.univariate.base.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "arch.univariate.base.VolatilityProcess": {
  "data": {
   "shadows": "arch.univariate.volatility.VolatilityProcess"
  },
  "type": "import"
 },
 "arch.univariate.base.WaldTestStatistic": {
  "data": {
   "shadows": "arch.utility.testing.WaldTestStatistic"
  },
  "type": "import"
 },
 "arch.univariate.base._SummaryRepr": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.univariate.base._SummaryRepr.__repr__": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "hex",
    "id",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base._SummaryRepr.__str__": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base._SummaryRepr.summary": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "NotImplementedError",
    "statsmodels.iolib.summary.Summary"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.__all__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "arch.univariate.base._align_forecast": {
  "data": {
   "lineno": 1869,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base._callback": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "print",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base._format_forecasts": {
  "data": {
   "lineno": 1880,
   "symbols_in_volume": [
    "arch.typing.Label",
    "arch.typing.NDArray",
    "int",
    "numpy.ceil",
    "numpy.log10",
    "pandas.DataFrame",
    "pandas.Index",
    "range",
    "str",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "arch.univariate.base.add_constant": {
  "data": {
   "shadows": "statsmodels.tools.tools.add_constant"
  },
  "type": "import"
 },
 "arch.univariate.base.approx_fprime": {
  "data": {
   "shadows": "statsmodels.tools.numdiff.approx_fprime"
  },
  "type": "import"
 },
 "arch.univariate.base.approx_hess": {
  "data": {
   "shadows": "statsmodels.tools.numdiff.approx_hess"
  },
  "type": "import"
 },
 "arch.univariate.base.cached_property": {
  "data": {
   "shadows": "arch.vendor.cached_property"
  },
  "type": "import"
 },
 "arch.univariate.base.constraint": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "factory",
    "object",
    "range",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.constraint.factory": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.constraint.factory.f": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "numpy.dot",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.convergence_warning": {
  "data": {
   "shadows": "arch.utility.exceptions.convergence_warning"
  },
  "type": "import"
 },
 "arch.univariate.base.data_scale_warning": {
  "data": {
   "shadows": "arch.utility.exceptions.data_scale_warning"
  },
  "type": "import"
 },
 "arch.univariate.base.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "arch.univariate.base.deprecate_kwarg": {
  "data": {
   "shadows": "pandas.util._decorators.deprecate_kwarg"
  },
  "type": "import"
 },
 "arch.univariate.base.dt": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "arch.univariate.base.ensure1d": {
  "data": {
   "shadows": "arch.utility.array.ensure1d"
  },
  "type": "import"
 },
 "arch.univariate.base.figure": {
  "data": {
   "shadows": "matplotlib.pyplot.figure"
  },
  "type": "import"
 },
 "arch.univariate.base.fmt_2cols": {
  "data": {
   "shadows": "statsmodels.iolib.summary.fmt_2cols"
  },
  "type": "import"
 },
 "arch.univariate.base.fmt_params": {
  "data": {
   "shadows": "statsmodels.iolib.summary.fmt_params"
  },
  "type": "import"
 },
 "arch.univariate.base.format_float_fixed": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.abs",
    "numpy.ceil",
    "numpy.log10",
    "numpy.sign",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.implicit_constant": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "bool",
    "numpy.hstack",
    "numpy.linalg.matrix_rank",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "arch.univariate.base.lagmat": {
  "data": {
   "shadows": "statsmodels.tsa.tsatools.lagmat"
  },
  "type": "import"
 },
 "arch.univariate.base.minimize": {
  "data": {
   "shadows": "scipy.optimize.minimize"
  },
  "type": "import"
 },
 "arch.univariate.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.univariate.base.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.univariate.base.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "arch.univariate.base.starting_value_warning": {
  "data": {
   "shadows": "arch.utility.exceptions.starting_value_warning"
  },
  "type": "import"
 },
 "arch.univariate.base.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "arch.univariate.base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "arch.univariate.distribution": {
  "data": {},
  "type": "module"
 },
 "arch.univariate.distribution.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "arch.univariate.distribution.AbstractDocStringInheritor": {
  "data": {
   "shadows": "arch.utility.array.AbstractDocStringInheritor"
  },
  "type": "import"
 },
 "arch.univariate.distribution.ArrayLike": {
  "data": {
   "shadows": "arch.typing.ArrayLike"
  },
  "type": "import"
 },
 "arch.univariate.distribution.ArrayLike1D": {
  "data": {
   "shadows": "arch.typing.ArrayLike1D"
  },
  "type": "import"
 },
 "arch.univariate.distribution.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "arch.univariate.distribution.Distribution": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "arch.univariate.distribution.Distribution.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "TypeError",
    "arch.typing.NDArray",
    "isinstance",
    "numpy.random.RandomState",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution.__repr__": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "hex",
    "id",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution.__str__": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution._check_constraints": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "arch.utility.array.ensure1d",
    "float",
    "len",
    "numpy.empty",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution._description": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution._simulator": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "arch.typing.NDArray",
    "int",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution.bounds": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "arch.typing.NDArray",
    "float",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution.cdf": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "float",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution.constraints": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "arch.typing.NDArray",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution.loglikelihood": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "arch.typing.ArrayLike",
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "bool",
    "float",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution.moment": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "arch.typing.ArrayLike1D",
    "float",
    "int",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution.name": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution.parameter_names": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution.partial_moment": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "arch.typing.ArrayLike1D",
    "float",
    "int",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution.ppf": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "float",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution.random_state": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution.simulate": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "float",
    "int",
    "typing.Callable",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution.starting_values": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "arch.typing.NDArray"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.GeneralizedError": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "arch.univariate.distribution.Distribution",
    "arch.utility.array.AbstractDocStringInheritor"
   ]
  },
  "type": "class"
 },
 "arch.univariate.distribution.GeneralizedError.__init__": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.GeneralizedError._ord_gennorm_partial_moment": {
  "data": {
   "lineno": 1148,
   "symbols_in_volume": [
    "float",
    "int",
    "max",
    "min",
    "numpy.abs",
    "numpy.nan",
    "scipy.special.gamma",
    "scipy.special.gammainc",
    "scipy.special.gammaincc",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.GeneralizedError._simulator": {
  "data": {
   "lineno": 1081,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "int",
    "numpy.sqrt",
    "scipy.special.gamma",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.GeneralizedError.bounds": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.GeneralizedError.cdf": {
  "data": {
   "lineno": 1114,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "float",
    "numpy.asarray",
    "numpy.sqrt",
    "scipy.stats.gennorm",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.GeneralizedError.constraints": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "numpy.array",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.GeneralizedError.loglikelihood": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "bool",
    "float",
    "numpy.abs",
    "numpy.exp",
    "numpy.log",
    "numpy.sqrt",
    "numpy.sum",
    "scipy.special.gammaln",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.GeneralizedError.moment": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": [
    "arch.typing.ArrayLike1D",
    "float",
    "int",
    "numpy.nan",
    "numpy.sqrt",
    "scipy.stats.gennorm",
    "scipy.stats.gennorm.moment",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.GeneralizedError.parameter_names": {
  "data": {
   "lineno": 1100,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.GeneralizedError.partial_moment": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "arch.typing.ArrayLike1D",
    "float",
    "int",
    "numpy.sqrt",
    "scipy.stats.gennorm",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.GeneralizedError.ppf": {
  "data": {
   "lineno": 1103,
   "symbols_in_volume": [
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "float",
    "numpy.asarray",
    "numpy.sqrt",
    "scipy.stats.gennorm",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.GeneralizedError.simulate": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "arch.utility.array.ensure1d",
    "float",
    "int",
    "typing.Callable",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.GeneralizedError.starting_values": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "arch.univariate.distribution.NDArray": {
  "data": {
   "shadows": "arch.typing.NDArray"
  },
  "type": "import"
 },
 "arch.univariate.distribution.Normal": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "arch.univariate.distribution.Distribution",
    "arch.utility.array.AbstractDocStringInheritor"
   ]
  },
  "type": "class"
 },
 "arch.univariate.distribution.Normal.__init__": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Normal._simulator": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "int",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Normal.bounds": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Normal.cdf": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "float",
    "numpy.asarray",
    "scipy.stats.norm.cdf",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Normal.constraints": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "numpy.empty",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Normal.loglikelihood": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "bool",
    "float",
    "numpy.log",
    "numpy.pi",
    "numpy.sum",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Normal.moment": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "arch.typing.ArrayLike1D",
    "float",
    "int",
    "numpy.nan",
    "scipy.stats.norm.moment",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Normal.parameter_names": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Normal.partial_moment": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "arch.typing.ArrayLike1D",
    "float",
    "int",
    "numpy.nan",
    "scipy.stats.norm.cdf",
    "scipy.stats.norm.pdf",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Normal.ppf": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "float",
    "numpy.asarray",
    "scipy.stats.norm.ppf",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Normal.simulate": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "float",
    "int",
    "typing.Callable",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Normal.starting_values": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "arch.univariate.distribution.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.univariate.distribution.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "arch.univariate.distribution.SkewStudent": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "arch.univariate.distribution.Distribution",
    "arch.utility.array.AbstractDocStringInheritor"
   ]
  },
  "type": "class"
 },
 "arch.univariate.distribution.SkewStudent.__const_a": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "float",
    "numpy.exp",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.SkewStudent.__const_b": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "float",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.SkewStudent.__const_c": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "float",
    "numpy.log",
    "numpy.pi",
    "scipy.special.gammaln",
    "staticmethod",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.SkewStudent.__init__": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.SkewStudent._simulator": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "int",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.SkewStudent.bounds": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.SkewStudent.cdf": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "float",
    "numpy.array",
    "numpy.asarray",
    "numpy.isscalar",
    "numpy.sqrt",
    "scipy.stats.t",
    "tcdf",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.SkewStudent.constraints": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "numpy.array",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.SkewStudent.loglikelihood": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "bool",
    "float",
    "numpy.abs",
    "numpy.log",
    "numpy.sign",
    "numpy.sum",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.SkewStudent.moment": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": [
    "arch.typing.ArrayLike1D",
    "float",
    "int",
    "numpy.nan",
    "numpy.pi",
    "numpy.sqrt",
    "range",
    "scipy.special.comb",
    "scipy.special.gamma",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.SkewStudent.parameter_names": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.SkewStudent.partial_moment": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "arch.typing.ArrayLike1D",
    "arch.univariate.distribution.StudentsT",
    "float",
    "int",
    "min",
    "numpy.nan",
    "numpy.sqrt",
    "range",
    "scipy.special.comb",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.SkewStudent.ppf": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "float",
    "numpy.array",
    "numpy.asarray",
    "numpy.isscalar",
    "numpy.ones_like",
    "numpy.sign",
    "scipy.stats.t.ppf",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.SkewStudent.simulate": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "arch.utility.array.ensure1d",
    "float",
    "int",
    "numpy.abs",
    "typing.Callable",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.SkewStudent.starting_values": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "max",
    "numpy.array",
    "scipy.stats.kurtosis"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.StudentsT": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "arch.univariate.distribution.Distribution",
    "arch.utility.array.AbstractDocStringInheritor"
   ]
  },
  "type": "class"
 },
 "arch.univariate.distribution.StudentsT.__init__": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.StudentsT._ord_t_partial_moment": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "arch.univariate.distribution.StudentsT",
    "float",
    "int",
    "numpy.nan",
    "numpy.pi",
    "numpy.sqrt",
    "scipy.special.gamma",
    "scipy.stats.t.cdf",
    "scipy.stats.t.pdf",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.StudentsT._simulator": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "int",
    "numpy.sqrt",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.StudentsT.bounds": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.StudentsT.cdf": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "float",
    "numpy.asarray",
    "numpy.sqrt",
    "scipy.stats.t",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.StudentsT.constraints": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "numpy.array",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.StudentsT.loglikelihood": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "bool",
    "float",
    "numpy.log",
    "numpy.pi",
    "numpy.sum",
    "scipy.special.gammaln",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.StudentsT.moment": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "arch.typing.ArrayLike1D",
    "float",
    "int",
    "numpy.nan",
    "numpy.sqrt",
    "scipy.stats.t.moment",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.StudentsT.parameter_names": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.StudentsT.partial_moment": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "arch.typing.ArrayLike1D",
    "float",
    "int",
    "numpy.sqrt",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.StudentsT.ppf": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "float",
    "numpy.asarray",
    "numpy.sqrt",
    "scipy.stats.t",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.StudentsT.simulate": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "arch.utility.array.ensure1d",
    "float",
    "int",
    "typing.Callable",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.StudentsT.starting_values": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "max",
    "numpy.array",
    "scipy.stats.kurtosis"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "arch.univariate.distribution.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "arch.univariate.distribution.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "arch.univariate.distribution.abs": {
  "data": {
   "shadows": "numpy.abs"
  },
  "type": "import"
 },
 "arch.univariate.distribution.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "arch.univariate.distribution.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "arch.univariate.distribution.asarray": {
  "data": {
   "shadows": "numpy.asarray"
  },
  "type": "import"
 },
 "arch.univariate.distribution.comb": {
  "data": {
   "shadows": "scipy.special.comb"
  },
  "type": "import"
 },
 "arch.univariate.distribution.empty": {
  "data": {
   "shadows": "numpy.empty"
  },
  "type": "import"
 },
 "arch.univariate.distribution.ensure1d": {
  "data": {
   "shadows": "arch.utility.array.ensure1d"
  },
  "type": "import"
 },
 "arch.univariate.distribution.exp": {
  "data": {
   "shadows": "numpy.exp"
  },
  "type": "import"
 },
 "arch.univariate.distribution.gamma": {
  "data": {
   "shadows": "scipy.special.gamma"
  },
  "type": "import"
 },
 "arch.univariate.distribution.gammainc": {
  "data": {
   "shadows": "scipy.special.gammainc"
  },
  "type": "import"
 },
 "arch.univariate.distribution.gammaincc": {
  "data": {
   "shadows": "scipy.special.gammaincc"
  },
  "type": "import"
 },
 "arch.univariate.distribution.gammaln": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "arch.univariate.distribution.isscalar": {
  "data": {
   "shadows": "numpy.isscalar"
  },
  "type": "import"
 },
 "arch.univariate.distribution.log": {
  "data": {
   "shadows": "numpy.log"
  },
  "type": "import"
 },
 "arch.univariate.distribution.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "arch.univariate.distribution.ones_like": {
  "data": {
   "shadows": "numpy.ones_like"
  },
  "type": "import"
 },
 "arch.univariate.distribution.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "arch.univariate.distribution.sign": {
  "data": {
   "shadows": "numpy.sign"
  },
  "type": "import"
 },
 "arch.univariate.distribution.sqrt": {
  "data": {
   "shadows": "numpy.sqrt"
  },
  "type": "import"
 },
 "arch.univariate.distribution.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "arch.univariate.distribution.sum": {
  "data": {
   "shadows": "numpy.sum"
  },
  "type": "import"
 },
 "arch.univariate.mean": {
  "data": {},
  "type": "module"
 },
 "arch.univariate.mean.ARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.ARCH"
  },
  "type": "import"
 },
 "arch.univariate.mean.ARCHModel": {
  "data": {
   "shadows": "arch.univariate.base.ARCHModel"
  },
  "type": "import"
 },
 "arch.univariate.mean.ARCHModelForecast": {
  "data": {
   "shadows": "arch.univariate.base.ARCHModelForecast"
  },
  "type": "import"
 },
 "arch.univariate.mean.ARCHModelResult": {
  "data": {
   "shadows": "arch.univariate.base.ARCHModelResult"
  },
  "type": "import"
 },
 "arch.univariate.mean.ARX": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": [
    "arch.univariate.mean.HARX"
   ]
  },
  "type": "class"
 },
 "arch.univariate.mean.ARX.__init__": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.ArrayLike",
    "arch.typing.NDArray",
    "arch.univariate.distribution.Distribution",
    "arch.univariate.volatility.VolatilityProcess",
    "bool",
    "int",
    "numpy.arange",
    "numpy.asarray",
    "numpy.vstack",
    "super",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.ARX._generate_lag_names": {
  "data": {
   "lineno": 1198,
   "symbols_in_volume": [
    "len",
    "range",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.ARX._model_description": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.AbstractDocStringInheritor": {
  "data": {
   "shadows": "arch.utility.array.AbstractDocStringInheritor"
  },
  "type": "import"
 },
 "arch.univariate.mean.ArrayLike": {
  "data": {
   "shadows": "arch.typing.ArrayLike"
  },
  "type": "import"
 },
 "arch.univariate.mean.ArrayLike1D": {
  "data": {
   "shadows": "arch.typing.ArrayLike1D"
  },
  "type": "import"
 },
 "arch.univariate.mean.COV_TYPES": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "arch.univariate.mean.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "arch.univariate.mean.ConstantMean": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "arch.univariate.mean.HARX"
   ]
  },
  "type": "class"
 },
 "arch.univariate.mean.ConstantMean.__init__": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "arch.univariate.distribution.Distribution",
    "arch.univariate.volatility.VolatilityProcess",
    "bool",
    "int",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.ConstantMean._model_description": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "bool",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.ConstantMean.num_params": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "arch.vendor.cached_property",
    "int"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.ConstantMean.parameter_names": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.ConstantMean.resids": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "arch.typing.NDArray",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.ConstantMean.simulate": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.ArrayLike",
    "arch.typing.NDArray",
    "dict",
    "float",
    "int",
    "numpy.sqrt",
    "pandas.DataFrame",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.ConstantVariance": {
  "data": {
   "shadows": "arch.univariate.volatility.ConstantVariance"
  },
  "type": "import"
 },
 "arch.univariate.mean.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "arch.univariate.mean.DateLike": {
  "data": {
   "shadows": "arch.typing.DateLike"
  },
  "type": "import"
 },
 "arch.univariate.mean.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "arch.univariate.mean.Distribution": {
  "data": {
   "shadows": "arch.univariate.distribution.Distribution"
  },
  "type": "import"
 },
 "arch.univariate.mean.EGARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.EGARCH"
  },
  "type": "import"
 },
 "arch.univariate.mean.FIGARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.FIGARCH"
  },
  "type": "import"
 },
 "arch.univariate.mean.GARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.GARCH"
  },
  "type": "import"
 },
 "arch.univariate.mean.GeneralizedError": {
  "data": {
   "shadows": "arch.univariate.distribution.GeneralizedError"
  },
  "type": "import"
 },
 "arch.univariate.mean.HARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.HARCH"
  },
  "type": "import"
 },
 "arch.univariate.mean.HARX": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "arch.univariate.base.ARCHModel",
    "arch.utility.array.AbstractDocStringInheritor"
   ]
  },
  "type": "class"
 },
 "arch.univariate.mean.HARX.__init__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "RuntimeWarning",
    "arch.typing.ArrayLike",
    "arch.typing.NDArray",
    "arch.univariate.distribution.Distribution",
    "arch.univariate.volatility.VolatilityProcess",
    "bool",
    "int",
    "numpy.asarray",
    "numpy.empty",
    "numpy.int32",
    "numpy.max",
    "str",
    "super",
    "typing.List",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX.__repr__": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "hex",
    "id",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX.__str__": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX._adjust_sample": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.DateLike",
    "arch.utility.array.cutoff_to_index",
    "int",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX._check_specification": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "ValueError",
    "arch.utility.array.parse_dataframe",
    "numpy.asarray",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX._fit_no_arch_normal_errors": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "ValueError",
    "arch.univariate.base.ARCHModelResult",
    "arch.univariate.mean.COV_TYPES",
    "arch.univariate.mean.copy",
    "len",
    "numpy.empty",
    "numpy.empty_like",
    "numpy.float64",
    "numpy.hstack",
    "numpy.linalg.inv",
    "numpy.linalg.pinv",
    "numpy.nan",
    "numpy.sqrt",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "scipy.optimize.OptimizeResult",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX._generate_lag_names": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "len",
    "range",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX._generate_variable_names": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX._har_to_ar": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "int",
    "numpy.concatenate",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX._init_model": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "enumerate",
    "numpy.empty",
    "numpy.float64",
    "numpy.hstack",
    "numpy.max",
    "numpy.mean",
    "numpy.ones",
    "statsmodels.tsa.tsatools.lagmat"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX._model_description": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX._r2": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.univariate.base.implicit_constant",
    "float",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX._reformat_lags": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.any",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.flipud",
    "numpy.lexsort",
    "numpy.linalg.matrix_rank",
    "numpy.max",
    "numpy.unique",
    "numpy.zeros",
    "range",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX._repr_html_": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "hex",
    "id",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX.forecast": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.ArrayLike1D",
    "arch.typing.DateLike",
    "arch.typing.NDArray",
    "arch.univariate.base.ARCHModelForecast",
    "arch.univariate.mean._ar_forecast",
    "arch.univariate.mean._ar_to_impulse",
    "arch.univariate.mean._forecast_pad",
    "arch.utility.array.cutoff_to_index",
    "int",
    "max",
    "numpy.asarray",
    "numpy.empty",
    "numpy.full",
    "numpy.nan",
    "numpy.random.RandomState",
    "numpy.squeeze",
    "range",
    "str",
    "typing.Callable",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX.num_params": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "arch.vendor.cached_property",
    "int"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX.parameter_names": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX.resids": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "arch.typing.NDArray",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX.simulate": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.ArrayLike",
    "arch.typing.NDArray",
    "arch.utility.array.ensure1d",
    "dict",
    "float",
    "int",
    "numpy.isscalar",
    "numpy.max",
    "numpy.sqrt",
    "numpy.zeros",
    "pandas.DataFrame",
    "range",
    "str",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX.x": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.LS": {
  "data": {
   "lineno": 1209,
   "symbols_in_volume": [
    "arch.univariate.mean.HARX"
   ]
  },
  "type": "class"
 },
 "arch.univariate.mean.LS.__init__": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "arch.univariate.distribution.Distribution",
    "arch.univariate.volatility.VolatilityProcess",
    "bool",
    "int",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.LS._model_description": {
  "data": {
   "lineno": 1278,
   "symbols_in_volume": [
    "bool",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "arch.univariate.mean.NDArray": {
  "data": {
   "shadows": "arch.typing.NDArray"
  },
  "type": "import"
 },
 "arch.univariate.mean.Normal": {
  "data": {
   "shadows": "arch.univariate.distribution.Normal"
  },
  "type": "import"
 },
 "arch.univariate.mean.OptimizeResult": {
  "data": {
   "shadows": "scipy.optimize.OptimizeResult"
  },
  "type": "import"
 },
 "arch.univariate.mean.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "arch.univariate.mean.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "arch.univariate.mean.SkewStudent": {
  "data": {
   "shadows": "arch.univariate.distribution.SkewStudent"
  },
  "type": "import"
 },
 "arch.univariate.mean.StudentsT": {
  "data": {
   "shadows": "arch.univariate.distribution.StudentsT"
  },
  "type": "import"
 },
 "arch.univariate.mean.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "arch.univariate.mean.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "arch.univariate.mean.VolatilityProcess": {
  "data": {
   "shadows": "arch.univariate.volatility.VolatilityProcess"
  },
  "type": "import"
 },
 "arch.univariate.mean.ZeroMean": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "arch.univariate.mean.HARX"
   ]
  },
  "type": "class"
 },
 "arch.univariate.mean.ZeroMean.__init__": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "arch.univariate.distribution.Distribution",
    "arch.univariate.volatility.VolatilityProcess",
    "bool",
    "int",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.ZeroMean._model_description": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "bool",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.ZeroMean.num_params": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "arch.vendor.cached_property",
    "int"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.ZeroMean.parameter_names": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.ZeroMean.resids": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "arch.typing.NDArray",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.ZeroMean.simulate": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.ArrayLike",
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "arch.utility.array.ensure1d",
    "dict",
    "float",
    "int",
    "numpy.sqrt",
    "pandas.DataFrame",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.__all__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "arch.univariate.mean._ar_forecast": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "int",
    "numpy.dot",
    "numpy.empty",
    "numpy.nan",
    "range",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean._ar_to_impulse": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "int",
    "max",
    "min",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean._forecast_pad": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "int",
    "list",
    "numpy.concatenate",
    "numpy.full",
    "numpy.nan",
    "tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.arch_model": {
  "data": {
   "lineno": 1282,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "arch.typing.ArrayLike",
    "arch.typing.NDArray",
    "arch.univariate.distribution.Distribution",
    "arch.univariate.distribution.GeneralizedError",
    "arch.univariate.distribution.Normal",
    "arch.univariate.distribution.SkewStudent",
    "arch.univariate.distribution.StudentsT",
    "arch.univariate.mean.ARX",
    "arch.univariate.mean.ConstantMean",
    "arch.univariate.mean.HARX",
    "arch.univariate.mean.LS",
    "arch.univariate.mean.ZeroMean",
    "arch.univariate.volatility.ARCH",
    "arch.univariate.volatility.ConstantVariance",
    "arch.univariate.volatility.EGARCH",
    "arch.univariate.volatility.FIGARCH",
    "arch.univariate.volatility.GARCH",
    "arch.univariate.volatility.HARCH",
    "arch.univariate.volatility.VolatilityProcess",
    "bool",
    "float",
    "int",
    "isinstance",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.cached_property": {
  "data": {
   "shadows": "arch.vendor.cached_property"
  },
  "type": "import"
 },
 "arch.univariate.mean.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "arch.univariate.mean.cutoff_to_index": {
  "data": {
   "shadows": "arch.utility.array.cutoff_to_index"
  },
  "type": "import"
 },
 "arch.univariate.mean.ensure1d": {
  "data": {
   "shadows": "arch.utility.array.ensure1d"
  },
  "type": "import"
 },
 "arch.univariate.mean.implicit_constant": {
  "data": {
   "shadows": "arch.univariate.base.implicit_constant"
  },
  "type": "import"
 },
 "arch.univariate.mean.lagmat": {
  "data": {
   "shadows": "statsmodels.tsa.tsatools.lagmat"
  },
  "type": "import"
 },
 "arch.univariate.mean.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.univariate.mean.parse_dataframe": {
  "data": {
   "shadows": "arch.utility.array.parse_dataframe"
  },
  "type": "import"
 },
 "arch.univariate.mean.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "arch.univariate.recursions": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "arch.univariate.recursions_python": {
  "data": {
   "shadows": "arch.univariate.recursions_python"
  },
  "type": "import"
 },
 "arch.univariate.recursions_python.LNSIGMA_MAX": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "arch.univariate.recursions_python.NDArray": {
  "data": {
   "shadows": "arch.typing.NDArray"
  },
  "type": "import"
 },
 "arch.univariate.recursions_python.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "arch.univariate.recursions_python.arch_recursion": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "arch.univariate.recursions_python.arch_recursion_python": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.univariate.recursions_python.bounds_check",
    "float",
    "int",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.recursions_python.bounds_check": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "arch.univariate.recursions_python.bounds_check_python": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "numpy.isinf",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "arch.univariate.recursions_python.egarch_recursion": {
  "data": {
   "lineno": 285
  },
  "type": "constant"
 },
 "arch.univariate.recursions_python.egarch_recursion_python": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.univariate.recursions_python.LNSIGMA_MAX",
    "float",
    "int",
    "numpy.abs",
    "numpy.exp",
    "numpy.log",
    "numpy.sqrt",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.recursions_python.figarch_recursion": {
  "data": {
   "lineno": 453
  },
  "type": "constant"
 },
 "arch.univariate.recursions_python.figarch_recursion_python": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.univariate.recursions_python.bounds_check",
    "arch.univariate.recursions_python.figarch_weights",
    "float",
    "int",
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.recursions_python.figarch_weights": {
  "data": {
   "lineno": 391
  },
  "type": "constant"
 },
 "arch.univariate.recursions_python.figarch_weights_python": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "int",
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.recursions_python.garch_recursion": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "arch.univariate.recursions_python.garch_recursion_python": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.univariate.recursions_python.bounds_check",
    "float",
    "int",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.recursions_python.harch_recursion": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "arch.univariate.recursions_python.harch_recursion_python": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.univariate.recursions_python.bounds_check",
    "float",
    "int",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.recursions_python.jit": {
  "data": {
   "shadows": "arch.compat.numba.jit"
  },
  "type": "import"
 },
 "arch.univariate.recursions_python.midas_recursion": {
  "data": {
   "lineno": 350
  },
  "type": "constant"
 },
 "arch.univariate.recursions_python.midas_recursion_python": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "int",
    "numpy.isinf",
    "numpy.log",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.recursions_python.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.univariate.volatility": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "arch.univariate.volatility.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "arch.univariate.volatility.ARCH": {
  "data": {
   "lineno": 1862,
   "symbols_in_volume": [
    "arch.univariate.volatility.GARCH"
   ]
  },
  "type": "class"
 },
 "arch.univariate.volatility.ARCH.__init__": {
  "data": {
   "lineno": 1896,
   "symbols_in_volume": [
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.ARCH.starting_values": {
  "data": {
   "lineno": 1900,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "enumerate",
    "int",
    "numpy.arange",
    "numpy.argmax",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.AbstractDocStringInheritor": {
  "data": {
   "shadows": "arch.utility.array.AbstractDocStringInheritor"
  },
  "type": "import"
 },
 "arch.univariate.volatility.ArrayLike1D": {
  "data": {
   "shadows": "arch.typing.ArrayLike1D"
  },
  "type": "import"
 },
 "arch.univariate.volatility.BootstrapRng": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.univariate.volatility.BootstrapRng.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "arch.typing.NDArray",
    "int",
    "isinstance",
    "numpy.random.RandomState",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.BootstrapRng.random_state": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.BootstrapRng.rng": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "arch.typing.RNGType"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.BootstrapRng.rng._rng": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "IndexError",
    "arch.typing.NDArray",
    "int",
    "numpy.floor",
    "numpy.int64",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.ConstantVariance": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "arch.univariate.volatility.VolatilityProcess",
    "arch.utility.array.AbstractDocStringInheritor"
   ]
  },
  "type": "class"
 },
 "arch.univariate.volatility.ConstantVariance.__init__": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.ConstantVariance._analytic_forecast": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.univariate.volatility.VarianceForecast",
    "float",
    "int",
    "numpy.full",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.ConstantVariance._check_forecasting_method": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.ConstantVariance._simulation_forecast": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.typing.RNGType",
    "arch.univariate.volatility.VarianceForecast",
    "float",
    "int",
    "numpy.full",
    "numpy.nan",
    "numpy.sqrt",
    "range",
    "rng",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.ConstantVariance.backcast": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.ConstantVariance.backcast_transform": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "arch.typing.FloatOrArray",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.ConstantVariance.bounds": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.ConstantVariance.compute_variance": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.ConstantVariance.constraints": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "numpy.ones",
    "numpy.zeros",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.ConstantVariance.parameter_names": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.ConstantVariance.simulate": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "arch.typing.RNGType",
    "arch.utility.array.ensure1d",
    "float",
    "int",
    "numpy.ones",
    "numpy.sqrt",
    "rng",
    "typing.Optional",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.ConstantVariance.starting_values": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EGARCH": {
  "data": {
   "lineno": 2365,
   "symbols_in_volume": [
    "arch.univariate.volatility.VolatilityProcess",
    "arch.utility.array.AbstractDocStringInheritor"
   ]
  },
  "type": "class"
 },
 "arch.univariate.volatility.EGARCH.__init__": {
  "data": {
   "lineno": 2414,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.NDArray",
    "int",
    "super",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EGARCH.__str__": {
  "data": {
   "lineno": 2429,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EGARCH._analytic_forecast": {
  "data": {
   "lineno": 2591,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.univariate.volatility.VarianceForecast",
    "float",
    "int",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EGARCH._check_forecasting_method": {
  "data": {
   "lineno": 2586,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EGARCH._simulation_forecast": {
  "data": {
   "lineno": 2608,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.typing.RNGType",
    "arch.univariate.volatility.VarianceForecast",
    "float",
    "int",
    "numpy.abs",
    "numpy.empty",
    "numpy.exp",
    "numpy.full",
    "numpy.log",
    "numpy.max",
    "numpy.nan",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "rng",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EGARCH.backcast": {
  "data": {
   "lineno": 2498,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "numpy.log",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EGARCH.backcast_transform": {
  "data": {
   "lineno": 2494,
   "symbols_in_volume": [
    "arch.typing.FloatOrArray",
    "numpy.log",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EGARCH.bounds": {
  "data": {
   "lineno": 2440,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "numpy.inf",
    "numpy.log",
    "numpy.mean",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EGARCH.compute_variance": {
  "data": {
   "lineno": 2459,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.univariate.recursions_python.egarch_recursion",
    "float",
    "numpy.empty",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EGARCH.constraints": {
  "data": {
   "lineno": 2450,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "numpy.zeros",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EGARCH.parameter_names": {
  "data": {
   "lineno": 2583,
   "symbols_in_volume": [
    "arch.univariate.volatility._common_names",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EGARCH.simulate": {
  "data": {
   "lineno": 2501,
   "symbols_in_volume": [
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "arch.typing.RNGType",
    "arch.utility.array.ensure1d",
    "arch.utility.exceptions.InitialValueWarning",
    "arch.utility.exceptions.initial_value_warning",
    "float",
    "int",
    "numpy.abs",
    "numpy.exp",
    "numpy.max",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "rng",
    "typing.Optional",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EGARCH.starting_values": {
  "data": {
   "lineno": 2555,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.univariate.volatility.itertools",
    "enumerate",
    "int",
    "len",
    "list",
    "numpy.argmax",
    "numpy.log",
    "numpy.mean",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EGARCH.variance_bounds": {
  "data": {
   "lineno": 2437,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EWMAVariance": {
  "data": {
   "lineno": 1917,
   "symbols_in_volume": [
    "arch.univariate.volatility.VolatilityProcess",
    "arch.utility.array.AbstractDocStringInheritor"
   ]
  },
  "type": "class"
 },
 "arch.univariate.volatility.EWMAVariance.__init__": {
  "data": {
   "lineno": 1952,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EWMAVariance.__str__": {
  "data": {
   "lineno": 1961,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EWMAVariance._analytic_forecast": {
  "data": {
   "lineno": 2035,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.univariate.volatility.VarianceForecast",
    "float",
    "int",
    "numpy.empty",
    "numpy.nan",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EWMAVariance._check_forecasting_method": {
  "data": {
   "lineno": 2032,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EWMAVariance._simulation_forecast": {
  "data": {
   "lineno": 2055,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.typing.RNGType",
    "arch.univariate.volatility.VarianceForecast",
    "float",
    "int",
    "numpy.full",
    "numpy.nan",
    "numpy.sqrt",
    "range",
    "rng",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EWMAVariance.bounds": {
  "data": {
   "lineno": 1979,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EWMAVariance.compute_variance": {
  "data": {
   "lineno": 1984,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.univariate.volatility.ewma_recursion",
    "float",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EWMAVariance.constraints": {
  "data": {
   "lineno": 1995,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "numpy.empty",
    "numpy.ones",
    "numpy.zeros",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EWMAVariance.parameter_names": {
  "data": {
   "lineno": 1974,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EWMAVariance.simulate": {
  "data": {
   "lineno": 2002,
   "symbols_in_volume": [
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "arch.typing.RNGType",
    "arch.utility.array.ensure1d",
    "float",
    "int",
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "rng",
    "typing.Optional",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EWMAVariance.starting_values": {
  "data": {
   "lineno": 1969,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH": {
  "data": {
   "lineno": 2794,
   "symbols_in_volume": [
    "arch.univariate.volatility.VolatilityProcess",
    "arch.utility.array.AbstractDocStringInheritor"
   ]
  },
  "type": "class"
 },
 "arch.univariate.volatility.FIGARCH.__init__": {
  "data": {
   "lineno": 2869,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH.__str__": {
  "data": {
   "lineno": 2893,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH._analytic_forecast": {
  "data": {
   "lineno": 3105,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.univariate.recursions_python.figarch_weights",
    "arch.univariate.volatility.VarianceForecast",
    "float",
    "int",
    "max",
    "numpy.empty",
    "numpy.nan",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH._check_forecasting_method": {
  "data": {
   "lineno": 3095,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH._generate_name": {
  "data": {
   "lineno": 2909,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH._simulation_forecast": {
  "data": {
   "lineno": 3148,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.typing.RNGType",
    "arch.univariate.recursions_python.figarch_weights",
    "arch.univariate.volatility.VarianceForecast",
    "float",
    "int",
    "max",
    "numpy.abs",
    "numpy.empty",
    "numpy.full",
    "numpy.nan",
    "numpy.sqrt",
    "range",
    "rng",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH.backcast": {
  "data": {
   "lineno": 2993,
   "symbols_in_volume": [
    "abs",
    "arch.typing.NDArray",
    "float",
    "min",
    "numpy.arange",
    "numpy.sum",
    "sum"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH.backcast_transform": {
  "data": {
   "lineno": 2989,
   "symbols_in_volume": [
    "arch.typing.FloatOrArray",
    "numpy.sqrt",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH.bounds": {
  "data": {
   "lineno": 2927,
   "symbols_in_volume": [
    "abs",
    "arch.typing.NDArray",
    "float",
    "numpy.mean",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH.compute_variance": {
  "data": {
   "lineno": 2966,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.univariate.recursions_python.figarch_recursion",
    "float",
    "numpy.abs",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH.constraints": {
  "data": {
   "lineno": 2937,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "numpy.array",
    "numpy.delete",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH.parameter_names": {
  "data": {
   "lineno": 3086,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH.simulate": {
  "data": {
   "lineno": 3002,
   "symbols_in_volume": [
    "abs",
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "arch.typing.RNGType",
    "arch.univariate.recursions_python.figarch_weights",
    "arch.utility.array.ensure1d",
    "arch.utility.exceptions.InitialValueWarning",
    "arch.utility.exceptions.initial_value_warning",
    "float",
    "int",
    "numpy.empty",
    "numpy.sqrt",
    "numpy.sum",
    "range",
    "rng",
    "typing.Optional",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH.starting_values": {
  "data": {
   "lineno": 3049,
   "symbols_in_volume": [
    "abs",
    "arch.typing.NDArray",
    "arch.univariate.recursions_python.figarch_weights",
    "enumerate",
    "int",
    "len",
    "list",
    "numpy.argmax",
    "numpy.array",
    "numpy.c_",
    "numpy.mean",
    "numpy.sum",
    "numpy.zeros",
    "set"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH.truncation": {
  "data": {
   "lineno": 2888,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH.variance_bounds": {
  "data": {
   "lineno": 2906,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FixedVariance": {
  "data": {
   "lineno": 2675,
   "symbols_in_volume": [
    "arch.univariate.volatility.VolatilityProcess",
    "arch.utility.array.AbstractDocStringInheritor"
   ]
  },
  "type": "class"
 },
 "arch.univariate.volatility.FixedVariance.__init__": {
  "data": {
   "lineno": 2695,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.utility.array.ensure1d",
    "bool",
    "numpy.asarray",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FixedVariance._analytic_forecast": {
  "data": {
   "lineno": 2760,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.univariate.volatility.VarianceForecast",
    "float",
    "int",
    "numpy.full",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FixedVariance._check_forecasting_method": {
  "data": {
   "lineno": 2757,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FixedVariance._simulation_forecast": {
  "data": {
   "lineno": 2774,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.typing.RNGType",
    "arch.univariate.volatility.VarianceForecast",
    "float",
    "int",
    "numpy.empty",
    "numpy.full",
    "numpy.nan",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FixedVariance.backcast": {
  "data": {
   "lineno": 2741,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FixedVariance.bounds": {
  "data": {
   "lineno": 2744,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "numpy.sqrt",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FixedVariance.compute_variance": {
  "data": {
   "lineno": 2704,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.NDArray",
    "float",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FixedVariance.constraints": {
  "data": {
   "lineno": 2735,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "numpy.ones",
    "numpy.zeros",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FixedVariance.parameter_names": {
  "data": {
   "lineno": 2752,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FixedVariance.simulate": {
  "data": {
   "lineno": 2725,
   "symbols_in_volume": [
    "NotImplementedError",
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "arch.typing.RNGType",
    "float",
    "int",
    "typing.Optional",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FixedVariance.starting_values": {
  "data": {
   "lineno": 2719,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "numpy.array",
    "numpy.empty",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FloatOrArray": {
  "data": {
   "shadows": "arch.typing.FloatOrArray"
  },
  "type": "import"
 },
 "arch.univariate.volatility.GARCH": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "arch.univariate.volatility.VolatilityProcess",
    "arch.utility.array.AbstractDocStringInheritor"
   ]
  },
  "type": "class"
 },
 "arch.univariate.volatility.GARCH.__init__": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH.__str__": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH._analytic_forecast": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.univariate.volatility.VarianceForecast",
    "float",
    "int",
    "numpy.max",
    "numpy.nan",
    "numpy.sqrt",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH._check_forecasting_method": {
  "data": {
   "lineno": 1130,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH._generate_name": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH._simulate_paths": {
  "data": {
   "lineno": 1202,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "int",
    "numpy.abs",
    "numpy.full_like",
    "numpy.mean",
    "numpy.nan",
    "range",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH._simulation_forecast": {
  "data": {
   "lineno": 1249,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.typing.RNGType",
    "arch.univariate.volatility.VarianceForecast",
    "float",
    "int",
    "numpy.abs",
    "numpy.full",
    "numpy.max",
    "numpy.nan",
    "numpy.zeros",
    "range",
    "rng",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH.backcast": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "abs",
    "arch.typing.NDArray",
    "float",
    "min",
    "numpy.arange",
    "numpy.sum",
    "sum"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH.backcast_transform": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "arch.typing.FloatOrArray",
    "numpy.sqrt",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH.bounds": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "abs",
    "arch.typing.NDArray",
    "float",
    "numpy.mean",
    "range",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH.compute_variance": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.univariate.recursions_python.garch_recursion",
    "float",
    "numpy.abs",
    "numpy.sign",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH.constraints": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "numpy.zeros",
    "range",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH.parameter_names": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": [
    "arch.univariate.volatility._common_names",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH.simulate": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "abs",
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "arch.typing.RNGType",
    "arch.utility.array.ensure1d",
    "arch.utility.exceptions.InitialValueWarning",
    "arch.utility.exceptions.initial_value_warning",
    "float",
    "int",
    "numpy.max",
    "numpy.ones_like",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "rng",
    "typing.Optional",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH.starting_values": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "abs",
    "arch.typing.NDArray",
    "arch.univariate.volatility.itertools",
    "enumerate",
    "int",
    "len",
    "list",
    "numpy.argmax",
    "numpy.mean",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH.variance_bounds": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.HARCH": {
  "data": {
   "lineno": 1312,
   "symbols_in_volume": [
    "arch.univariate.volatility.VolatilityProcess",
    "arch.utility.array.AbstractDocStringInheritor"
   ]
  },
  "type": "class"
 },
 "arch.univariate.volatility.HARCH.__init__": {
  "data": {
   "lineno": 1359,
   "symbols_in_volume": [
    "arch.utility.array.ensure1d",
    "int",
    "numpy.arange",
    "numpy.array",
    "numpy.int",
    "numpy.int32",
    "numpy.isscalar",
    "super",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.HARCH.__str__": {
  "data": {
   "lineno": 1369,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.HARCH._analytic_forecast": {
  "data": {
   "lineno": 1485,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.univariate.volatility.VarianceForecast",
    "float",
    "int",
    "numpy.nan",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.HARCH._check_forecasting_method": {
  "data": {
   "lineno": 1482,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.HARCH._common_forecast_components": {
  "data": {
   "lineno": 1466,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "int",
    "numpy.empty",
    "range",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.HARCH._harch_to_arch": {
  "data": {
   "lineno": 1458,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.HARCH._simulation_forecast": {
  "data": {
   "lineno": 1505,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.typing.RNGType",
    "arch.univariate.volatility.VarianceForecast",
    "float",
    "int",
    "numpy.empty",
    "numpy.full",
    "numpy.nan",
    "numpy.sqrt",
    "range",
    "rng",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.HARCH.bounds": {
  "data": {
   "lineno": 1376,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "numpy.mean",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.HARCH.compute_variance": {
  "data": {
   "lineno": 1395,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.univariate.recursions_python.harch_recursion",
    "float",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.HARCH.constraints": {
  "data": {
   "lineno": 1385,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "numpy.zeros",
    "range",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.HARCH.parameter_names": {
  "data": {
   "lineno": 1452,
   "symbols_in_volume": [
    "range",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.HARCH.simulate": {
  "data": {
   "lineno": 1409,
   "symbols_in_volume": [
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "arch.typing.RNGType",
    "arch.utility.array.ensure1d",
    "arch.utility.exceptions.InitialValueWarning",
    "arch.utility.exceptions.initial_value_warning",
    "float",
    "int",
    "numpy.empty",
    "numpy.max",
    "numpy.sqrt",
    "numpy.sum",
    "range",
    "rng",
    "typing.Optional",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.HARCH.starting_values": {
  "data": {
   "lineno": 1443,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.InitialValueWarning": {
  "data": {
   "shadows": "arch.utility.exceptions.InitialValueWarning"
  },
  "type": "import"
 },
 "arch.univariate.volatility.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "arch.univariate.volatility.MIDASHyperbolic": {
  "data": {
   "lineno": 1537,
   "symbols_in_volume": [
    "arch.univariate.volatility.VolatilityProcess",
    "arch.utility.array.AbstractDocStringInheritor"
   ]
  },
  "type": "class"
 },
 "arch.univariate.volatility.MIDASHyperbolic.__init__": {
  "data": {
   "lineno": 1595,
   "symbols_in_volume": [
    "bool",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.MIDASHyperbolic.__str__": {
  "data": {
   "lineno": 1602,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.MIDASHyperbolic._analytic_forecast": {
  "data": {
   "lineno": 1793,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.univariate.volatility.VarianceForecast",
    "float",
    "int",
    "numpy.nan",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.MIDASHyperbolic._check_forecasting_method": {
  "data": {
   "lineno": 1790,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.MIDASHyperbolic._common_forecast_components": {
  "data": {
   "lineno": 1765,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "int",
    "numpy.empty",
    "range",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.MIDASHyperbolic._simulation_forecast": {
  "data": {
   "lineno": 1819,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.typing.RNGType",
    "arch.univariate.volatility.VarianceForecast",
    "float",
    "int",
    "numpy.double",
    "numpy.empty",
    "numpy.full",
    "numpy.nan",
    "numpy.sqrt",
    "range",
    "rng",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.MIDASHyperbolic._weights": {
  "data": {
   "lineno": 1756,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "max",
    "numpy.arange",
    "numpy.exp",
    "numpy.finfo",
    "numpy.float64",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.MIDASHyperbolic.bounds": {
  "data": {
   "lineno": 1608,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "numpy.mean",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.MIDASHyperbolic.compute_variance": {
  "data": {
   "lineno": 1655,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.univariate.recursions_python.midas_recursion",
    "float",
    "numpy.zeros",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.MIDASHyperbolic.constraints": {
  "data": {
   "lineno": 1617,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "numpy.zeros",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.MIDASHyperbolic.parameter_names": {
  "data": {
   "lineno": 1749,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.MIDASHyperbolic.simulate": {
  "data": {
   "lineno": 1674,
   "symbols_in_volume": [
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "arch.typing.RNGType",
    "arch.utility.array.ensure1d",
    "arch.utility.exceptions.InitialValueWarning",
    "arch.utility.exceptions.initial_value_warning",
    "float",
    "int",
    "max",
    "numpy.empty",
    "numpy.sqrt",
    "range",
    "rng",
    "typing.Optional",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.MIDASHyperbolic.starting_values": {
  "data": {
   "lineno": 1720,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.univariate.volatility.itertools",
    "int",
    "min",
    "numpy.argmax",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.NDArray": {
  "data": {
   "shadows": "arch.typing.NDArray"
  },
  "type": "import"
 },
 "arch.univariate.volatility.Normal": {
  "data": {
   "shadows": "arch.univariate.distribution.Normal"
  },
  "type": "import"
 },
 "arch.univariate.volatility.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "arch.univariate.volatility.RNGType": {
  "data": {
   "shadows": "arch.typing.RNGType"
  },
  "type": "import"
 },
 "arch.univariate.volatility.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.univariate.volatility.RiskMetrics2006": {
  "data": {
   "lineno": 2090,
   "symbols_in_volume": [
    "arch.univariate.volatility.VolatilityProcess",
    "arch.utility.array.AbstractDocStringInheritor"
   ]
  },
  "type": "class"
 },
 "arch.univariate.volatility.RiskMetrics2006.__init__": {
  "data": {
   "lineno": 2125,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006.__str__": {
  "data": {
   "lineno": 2149,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006._analytic_forecast": {
  "data": {
   "lineno": 2294,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.univariate.volatility.VarianceForecast",
    "float",
    "int",
    "numpy.asarray",
    "numpy.empty",
    "numpy.nan",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006._check_forecasting_method": {
  "data": {
   "lineno": 2291,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006._ewma_combination_weights": {
  "data": {
   "lineno": 2158,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "numpy.arange",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006._ewma_smoothing_parameters": {
  "data": {
   "lineno": 2172,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "numpy.arange",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006._simulation_forecast": {
  "data": {
   "lineno": 2315,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.typing.RNGType",
    "arch.univariate.volatility.VarianceForecast",
    "arch.univariate.volatility.ewma_recursion",
    "float",
    "int",
    "numpy.asarray",
    "numpy.empty",
    "numpy.full",
    "numpy.nan",
    "numpy.sqrt",
    "range",
    "rng",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006.backcast": {
  "data": {
   "lineno": 2178,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "int",
    "max",
    "min",
    "numpy.arange",
    "numpy.floor",
    "numpy.log",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006.backcast_transform": {
  "data": {
   "lineno": 2207,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.FloatOrArray",
    "numpy.asarray",
    "numpy.ones",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006.bounds": {
  "data": {
   "lineno": 2232,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006.compute_variance": {
  "data": {
   "lineno": 2238,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.univariate.volatility.ewma_recursion",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006.constraints": {
  "data": {
   "lineno": 2235,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "numpy.empty",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006.parameter_names": {
  "data": {
   "lineno": 2224,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006.simulate": {
  "data": {
   "lineno": 2262,
   "symbols_in_volume": [
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "arch.typing.RNGType",
    "float",
    "int",
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "rng",
    "typing.Optional",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006.starting_values": {
  "data": {
   "lineno": 2221,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006.variance_bounds": {
  "data": {
   "lineno": 2227,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "numpy.array",
    "numpy.finfo",
    "numpy.float64",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "arch.univariate.volatility.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "arch.univariate.volatility.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "arch.univariate.volatility.VarianceForecast": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.univariate.volatility.VarianceForecast.__init__": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VarianceForecast.forecast_paths": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VarianceForecast.forecasts": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VarianceForecast.shocks": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "arch.univariate.volatility.VolatilityProcess.__init__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess.__repr__": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "hex",
    "id",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess.__str__": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess._analytic_forecast": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "arch.typing.NDArray",
    "arch.univariate.volatility.VarianceForecast",
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess._bootstrap_forecast": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.NDArray",
    "arch.univariate.volatility.BootstrapRng",
    "arch.univariate.volatility.VarianceForecast",
    "float",
    "int",
    "numpy.empty_like",
    "numpy.random.RandomState",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess._check_forecasting_method": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess._gaussian_loglikelihood": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess._one_step_forecast": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "int",
    "numpy.concatenate",
    "numpy.inf",
    "numpy.zeros",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess._simulation_forecast": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "arch.typing.NDArray",
    "arch.typing.RNGType",
    "arch.univariate.volatility.VarianceForecast",
    "float",
    "int",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess.backcast": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "float",
    "min",
    "numpy.arange",
    "numpy.sum",
    "sum"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess.backcast_transform": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.FloatOrArray",
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess.bounds": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "arch.typing.NDArray",
    "float",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess.compute_variance": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "arch.typing.NDArray",
    "float",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess.constraints": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "arch.typing.NDArray",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess.forecast": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "arch.typing.RNGType",
    "arch.univariate.volatility.VarianceForecast",
    "float",
    "int",
    "len",
    "numpy.asarray",
    "numpy.random.RandomState",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess.name": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess.parameter_names": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess.simulate": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "arch.typing.ArrayLike1D",
    "arch.typing.NDArray",
    "arch.typing.RNGType",
    "float",
    "int",
    "typing.Optional",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess.start": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess.starting_values": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "arch.typing.NDArray"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess.stop": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess.variance_bounds": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.univariate.volatility.ewma_recursion",
    "float",
    "min",
    "numpy.arange",
    "numpy.ascontiguousarray",
    "numpy.vstack",
    "numpy.zeros",
    "sum"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.__all__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "arch.univariate.volatility._common_names": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "int",
    "range",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "arch.univariate.volatility.egarch_recursion": {
  "data": {
   "shadows": "arch.univariate.recursions_python.egarch_recursion"
  },
  "type": "import"
 },
 "arch.univariate.volatility.ensure1d": {
  "data": {
   "shadows": "arch.utility.array.ensure1d"
  },
  "type": "import"
 },
 "arch.univariate.volatility.ewma_recursion": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "arch.typing.NDArray",
    "arch.univariate.recursions_python.garch_recursion",
    "float",
    "int",
    "numpy.array",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.figarch_recursion": {
  "data": {
   "shadows": "arch.univariate.recursions_python.figarch_recursion"
  },
  "type": "import"
 },
 "arch.univariate.volatility.figarch_weights": {
  "data": {
   "shadows": "arch.univariate.recursions_python.figarch_weights"
  },
  "type": "import"
 },
 "arch.univariate.volatility.gammaln": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "arch.univariate.volatility.garch_recursion": {
  "data": {
   "shadows": "arch.univariate.recursions_python.garch_recursion"
  },
  "type": "import"
 },
 "arch.univariate.volatility.harch_recursion": {
  "data": {
   "shadows": "arch.univariate.recursions_python.harch_recursion"
  },
  "type": "import"
 },
 "arch.univariate.volatility.initial_value_warning": {
  "data": {
   "shadows": "arch.utility.exceptions.initial_value_warning"
  },
  "type": "import"
 },
 "arch.univariate.volatility.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "arch.univariate.volatility.midas_recursion": {
  "data": {
   "shadows": "arch.univariate.recursions_python.midas_recursion"
  },
  "type": "import"
 },
 "arch.univariate.volatility.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.univariate.volatility.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "arch.utility": {
  "data": {
   "symbols_in_volume": [
    "arch.utility.os"
   ]
  },
  "type": "module"
 },
 "arch.utility.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "arch.utility.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "arch.utility.PKG": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "arch.utility.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "arch.utility.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "arch.utility.__all__": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "arch.utility.array": {
  "data": {},
  "type": "module"
 },
 "arch.utility.array.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "arch.utility.array.AbstractDocStringInheritor": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "arch.utility.array.ConcreteClassMeta",
    "arch.utility.array.DocStringInheritor"
   ]
  },
  "type": "class"
 },
 "arch.utility.array.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "arch.utility.array.AnyPandas": {
  "data": {
   "shadows": "arch.typing.AnyPandas"
  },
  "type": "import"
 },
 "arch.utility.array.ArrayLike": {
  "data": {
   "shadows": "arch.typing.ArrayLike"
  },
  "type": "import"
 },
 "arch.utility.array.ConcreteClassMeta": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "arch.utility.array.ConcreteClassMeta.__init__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "TypeError",
    "arch.utility.array.ConcreteClassMeta",
    "getattr",
    "str",
    "super",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "arch.utility.array.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "arch.utility.array.DateLike": {
  "data": {
   "shadows": "arch.typing.DateLike"
  },
  "type": "import"
 },
 "arch.utility.array.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "arch.utility.array.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "arch.utility.array.DocStringInheritor": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "arch.utility.array.DocStringInheritor.__new__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "arch.vendor.cached_property",
    "getattr",
    "hasattr",
    "isinstance",
    "property",
    "str",
    "type.__new__",
    "typing.Any",
    "typing.Dict",
    "typing.Tuple",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "arch.utility.array.Hashable": {
  "data": {
   "shadows": "typing.Hashable"
  },
  "type": "import"
 },
 "arch.utility.array.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "arch.utility.array.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "arch.utility.array.NDArray": {
  "data": {
   "shadows": "arch.typing.NDArray"
  },
  "type": "import"
 },
 "arch.utility.array.NaT": {
  "data": {
   "shadows": "pandas.NaT"
  },
  "type": "import"
 },
 "arch.utility.array.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "arch.utility.array.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "arch.utility.array.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "arch.utility.array.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "arch.utility.array.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "arch.utility.array.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "arch.utility.array.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "arch.utility.array.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "arch.utility.array.cached_property": {
  "data": {
   "shadows": "arch.vendor.cached_property"
  },
  "type": "import"
 },
 "arch.utility.array.cutoff_to_index": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "arch.typing.DateLike",
    "arch.utility.array.date_to_index",
    "datetime.datetime",
    "int",
    "isinstance",
    "issubclass",
    "numpy.datetime64",
    "numpy.integer",
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.utility.array.date_to_index": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "arch.compat.pandas.is_datetime64_any_dtype",
    "arch.typing.NDArray",
    "datetime.date",
    "datetime.datetime",
    "int",
    "isinstance",
    "numpy.all",
    "numpy.any",
    "numpy.asarray",
    "numpy.datetime64",
    "numpy.diff",
    "numpy.int64",
    "numpy.nonzero",
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "pandas.to_datetime",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.utility.array.deprecation_doc": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "arch.utility.array.dt": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "arch.utility.array.ensure1d": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.ArrayLike",
    "arch.typing.NDArray",
    "bool",
    "float",
    "int",
    "isinstance",
    "numpy.asarray",
    "numpy.squeeze",
    "pandas.DataFrame",
    "pandas.Series",
    "str",
    "typing.Hashable",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.utility.array.ensure2d": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "arch.typing.ArrayLike",
    "arch.typing.NDArray",
    "float",
    "int",
    "isinstance",
    "numpy.asarray",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series",
    "str",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.utility.array.find_index": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.AnyPandas",
    "arch.typing.DateLike",
    "int",
    "isinstance",
    "numpy.argwhere",
    "numpy.int",
    "numpy.int64",
    "pandas.NaT",
    "pandas.to_datetime",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.utility.array.is_datetime64_any_dtype": {
  "data": {
   "shadows": "arch.compat.pandas.is_datetime64_any_dtype"
  },
  "type": "import"
 },
 "arch.utility.array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.utility.array.parse_dataframe": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "arch.typing.ArrayLike",
    "arch.typing.NDArray",
    "isinstance",
    "list",
    "numpy.arange",
    "numpy.empty",
    "numpy.squeeze",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "str",
    "typing.Hashable",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.utility.array.to_datetime": {
  "data": {
   "shadows": "pandas.to_datetime"
  },
  "type": "import"
 },
 "arch.utility.cov": {
  "data": {},
  "type": "module"
 },
 "arch.utility.cov.NDArray": {
  "data": {
   "shadows": "arch.typing.NDArray"
  },
  "type": "import"
 },
 "arch.utility.cov.asarray": {
  "data": {
   "shadows": "numpy.asarray"
  },
  "type": "import"
 },
 "arch.utility.cov.cov_nw": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.NDArray",
    "bool",
    "float",
    "int",
    "numpy.asarray",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.utility.cov_nw": {
  "data": {
   "shadows": "arch.utility.cov.cov_nw"
  },
  "type": "import"
 },
 "arch.utility.exceptions": {
  "data": {},
  "type": "module"
 },
 "arch.utility.exceptions.ConvergenceWarning": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "arch.utility.exceptions.DataScaleWarning": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "arch.utility.exceptions.InfeasibleTestException": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "arch.utility.exceptions.InitialValueWarning": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "arch.utility.exceptions.InvalidLengthWarning": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "arch.utility.exceptions.StartingValueWarning": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "arch.utility.exceptions.StudentizationError": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "arch.utility.exceptions.arg_type_error": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "arch.utility.exceptions.convergence_warning": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "arch.utility.exceptions.data_scale_warning": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "arch.utility.exceptions.deprecation_doc": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "arch.utility.exceptions.initial_value_warning": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "arch.utility.exceptions.invalid_length_doc": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "arch.utility.exceptions.kwarg_type_error": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "arch.utility.exceptions.starting_value_warning": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "arch.utility.exceptions.studentization_error": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "arch.utility.io": {
  "data": {},
  "type": "module"
 },
 "arch.utility.io.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "arch.utility.io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.utility.io.pval_format": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "float",
    "numpy.isnan",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.utility.io.str_format": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "abs",
    "float",
    "int",
    "numpy.ceil",
    "numpy.isnan",
    "numpy.log10",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.utility.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "arch.utility.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.utility.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "arch.utility.test": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ImportError",
    "arch.utility.PKG",
    "arch.utility.pytest",
    "arch.utility.sys",
    "bool",
    "isinstance",
    "list",
    "print",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "arch.utility.testing": {
  "data": {},
  "type": "module"
 },
 "arch.utility.testing.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "arch.utility.testing.WaldTestStatistic": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.utility.testing.WaldTestStatistic.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "float",
    "int",
    "scipy.stats.chi2",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.utility.testing.WaldTestStatistic.__repr__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "hex",
    "id",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.utility.testing.WaldTestStatistic.__str__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "arch.utility.testing.WaldTestStatistic.alternative": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.utility.testing.WaldTestStatistic.critical_values": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "arch.vendor.cached_property",
    "dict",
    "float",
    "str",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "arch.utility.testing.WaldTestStatistic.null": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.utility.testing.WaldTestStatistic.pval": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "arch.vendor.cached_property",
    "float"
   ]
  },
  "type": "function"
 },
 "arch.utility.testing.WaldTestStatistic.stat": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.utility.testing.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "arch.utility.testing.cached_property": {
  "data": {
   "shadows": "arch.vendor.cached_property"
  },
  "type": "import"
 },
 "arch.utility.testing.chi2": {
  "data": {
   "shadows": "scipy.stats.chi2"
  },
  "type": "import"
 },
 "arch.utility.timeseries": {
  "data": {},
  "type": "module"
 },
 "arch.utility.timeseries.ColumnNameConflict": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "arch.utility.timeseries.NDArrayOrFrame": {
  "data": {
   "shadows": "arch.typing.NDArrayOrFrame"
  },
  "type": "import"
 },
 "arch.utility.timeseries.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "arch.utility.timeseries.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "arch.utility.timeseries.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "arch.utility.timeseries._enforce_unique_col_name": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "arch.utility.timeseries.ColumnNameConflict",
    "arch.utility.timeseries.column_name_conflict_doc",
    "arch.utility.timeseries.warnings",
    "enumerate",
    "list",
    "str",
    "tuple",
    "typing.Sequence",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.utility.timeseries.add_trend": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "arch.typing.NDArrayOrFrame",
    "arch.utility.timeseries._enforce_unique_col_name",
    "bool",
    "int",
    "isinstance",
    "len",
    "numpy.all",
    "numpy.any",
    "numpy.arange",
    "numpy.asanyarray",
    "numpy.asarray",
    "numpy.column_stack",
    "numpy.empty",
    "numpy.fliplr",
    "numpy.float64",
    "numpy.logical_and",
    "numpy.ptp",
    "numpy.vander",
    "pandas.DataFrame",
    "str",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "arch.utility.timeseries.column_name_conflict_doc": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "arch.utility.timeseries.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.utility.timeseries.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.utility.timeseries.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "arch.vendor": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "arch.vendor.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "arch.vendor.cached_property": {
  "data": {
   "shadows": "arch.vendor.property_cached.cached_property"
  },
  "type": "import"
 },
 "arch.vendor.property_cached": {
  "data": {
   "symbols_in_volume": [
    "arch.vendor.property_cached.cached_property_with_ttl",
    "arch.vendor.property_cached.threaded_cached_property_with_ttl"
   ]
  },
  "type": "module"
 },
 "arch.vendor.property_cached.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "arch.vendor.property_cached.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "arch.vendor.property_cached.__author__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "arch.vendor.property_cached.__email__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "arch.vendor.property_cached.__license__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "arch.vendor.property_cached.__version__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "arch.vendor.property_cached.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "arch.vendor.property_cached.cached_property": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "arch.vendor.property_cached.functools",
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "arch.vendor.property_cached.cached_property.__delete__": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "arch.vendor.property_cached.cached_property.__get__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "arch.vendor.property_cached.asyncio"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.cached_property.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "arch.vendor.property_cached.weakref",
    "str",
    "typing.Any",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.cached_property.__set__": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "arch.vendor.property_cached.cached_property.__set_name__": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "arch.vendor.property_cached.cached_property._wrap_in_coroutine": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "wrapper"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.cached_property._wrap_in_coroutine.wrapper": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "arch.vendor.property_cached.asyncio",
    "arch.vendor.property_cached.functools"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.cached_property_ttl": {
  "data": {
   "lineno": 159
  },
  "type": "constant"
 },
 "arch.vendor.property_cached.cached_property_with_ttl": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "arch.vendor.property_cached.cached_property"
   ]
  },
  "type": "class"
 },
 "arch.vendor.property_cached.cached_property_with_ttl.__call__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "arch.vendor.property_cached.cached_property_with_ttl",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.cached_property_with_ttl.__get__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "time.time"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.cached_property_with_ttl.__init__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "arch.vendor.property_cached.cached_property_with_ttl",
    "callable",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.cached_property_with_ttl.__set__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "arch.vendor.property_cached.cached_property_with_ttl",
    "super",
    "time.time"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "arch.vendor.property_cached.threaded_cached_property": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "arch.vendor.property_cached.cached_property"
   ]
  },
  "type": "class"
 },
 "arch.vendor.property_cached.threaded_cached_property.__delete__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "arch.vendor.property_cached.threaded_cached_property",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.threaded_cached_property.__get__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "arch.vendor.property_cached.threaded_cached_property",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.threaded_cached_property.__init__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "arch.vendor.property_cached.threaded_cached_property",
    "arch.vendor.property_cached.threading",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.threaded_cached_property.__set__": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "arch.vendor.property_cached.threaded_cached_property",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.threaded_cached_property_ttl": {
  "data": {
   "lineno": 189
  },
  "type": "constant"
 },
 "arch.vendor.property_cached.threaded_cached_property_with_ttl": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "arch.vendor.property_cached.cached_property_with_ttl",
    "arch.vendor.property_cached.threaded_cached_property"
   ]
  },
  "type": "class"
 },
 "arch.vendor.property_cached.threaded_cached_property_with_ttl.__delete__": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "arch.vendor.property_cached.threaded_cached_property_with_ttl",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.threaded_cached_property_with_ttl.__get__": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "arch.vendor.property_cached.threaded_cached_property_with_ttl",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.threaded_cached_property_with_ttl.__init__": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "arch.vendor.property_cached.threaded_cached_property_with_ttl",
    "arch.vendor.property_cached.threading",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.threaded_cached_property_with_ttl.__set__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "arch.vendor.property_cached.threaded_cached_property_with_ttl",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "arch.vendor.property_cached.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "arch.vendor.property_cached.timed_cached_property": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "arch.vendor.property_cached.timed_threaded_cached_property": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "arch.vendor.property_cached.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "arch.webbrowser": {
  "data": {
   "shadows": "webbrowser"
  },
  "type": "import"
 }
}