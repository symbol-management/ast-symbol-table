{
 "arch": {
  "data": {
   "symbols_in_volume": [
    "arch._version.get_versions"
   ]
  },
  "type": "module"
 },
 "arch.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "arch.__version__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "arch._version": {
  "data": {},
  "type": "module"
 },
 "arch._version.get_versions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "arch._version.json",
    "arch._version.version_json"
   ]
  },
  "type": "function"
 },
 "arch._version.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "arch._version.version_json": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "arch.arch_model": {
  "data": {
   "shadows": "arch.univariate.mean.arch_model"
  },
  "type": "import"
 },
 "arch.bootstrap": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "arch.bootstrap.COMPILED_SAMPLERS",
    "arch.bootstrap.__all__"
   ]
  },
  "type": "module"
 },
 "arch.bootstrap.COMPILED_SAMPLERS": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "arch.bootstrap.CircularBlockBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.base.CircularBlockBootstrap"
  },
  "type": "import"
 },
 "arch.bootstrap.IIDBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.base.IIDBootstrap"
  },
  "type": "import"
 },
 "arch.bootstrap.IndependentSamplesBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.base.IndependentSamplesBootstrap"
  },
  "type": "import"
 },
 "arch.bootstrap.MCS": {
  "data": {
   "shadows": "arch.bootstrap.multiple_comparison.MCS"
  },
  "type": "import"
 },
 "arch.bootstrap.MovingBlockBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.base.MovingBlockBootstrap"
  },
  "type": "import"
 },
 "arch.bootstrap.RealityCheck": {
  "data": {
   "shadows": "arch.bootstrap.multiple_comparison.RealityCheck"
  },
  "type": "import"
 },
 "arch.bootstrap.SPA": {
  "data": {
   "shadows": "arch.bootstrap.multiple_comparison.SPA"
  },
  "type": "import"
 },
 "arch.bootstrap.StationaryBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.base.StationaryBootstrap"
  },
  "type": "import"
 },
 "arch.bootstrap.StepM": {
  "data": {
   "shadows": "arch.bootstrap.multiple_comparison.StepM"
  },
  "type": "import"
 },
 "arch.bootstrap.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "arch.bootstrap._samplers": {
  "data": {
   "shadows": "arch.bootstrap._samplers"
  },
  "type": "import"
 },
 "arch.bootstrap._samplers_python": {
  "data": {
   "shadows": "arch.bootstrap._samplers_python"
  },
  "type": "import"
 },
 "arch.bootstrap._samplers_python.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "arch.bootstrap._samplers_python.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "arch.bootstrap._samplers_python.jit": {
  "data": {
   "shadows": "arch.compat.numba.jit"
  },
  "type": "import"
 },
 "arch.bootstrap._samplers_python.stationary_bootstrap_sample": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "arch.bootstrap._samplers_python.stationary_bootstrap_sample_python": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "arch.bootstrap.base": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "arch.bootstrap.base.CircularBlockBootstrap": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "arch.bootstrap.base.IIDBootstrap"
   ]
  },
  "type": "class"
 },
 "arch.bootstrap.base.CircularBlockBootstrap.__init__": {
  "data": {
   "lineno": 1120,
   "symbols_in_volume": [
    "arch.bootstrap.base.CircularBlockBootstrap",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.CircularBlockBootstrap.__str__": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.CircularBlockBootstrap._repr_html": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "hex",
    "id",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.CircularBlockBootstrap.update_indices": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.DocStringInheritor": {
  "data": {
   "shadows": "arch.utility.array.DocStringInheritor"
  },
  "type": "import"
 },
 "arch.bootstrap.base.IIDBootstrap": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "arch.utility.array.DocStringInheritor",
    "object"
   ]
  },
  "type": "class"
 },
 "arch.bootstrap.base.IIDBootstrap.__init__": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "len",
    "list",
    "numpy.arange",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.__repr__": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "hex",
    "id"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.__str__": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap._bca_acceleration": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "arch.bootstrap.base._get_acceleration",
    "arch.bootstrap.base._loo_jackknife",
    "func"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap._bca_bias": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "scipy.stats.norm.ppf"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap._check_data": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "TypeError",
    "arch.utility.exceptions.arg_type_error.format",
    "arch.utility.exceptions.kwarg_type_error.format",
    "enumerate",
    "isinstance",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series",
    "type"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap._construct_bootstrap_estimates": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "arch.bootstrap.base._add_extra_kwargs",
    "arch.utility.exceptions.StudentizationError",
    "arch.utility.exceptions.studentization_error.format",
    "func",
    "numpy.abs",
    "numpy.any",
    "numpy.asarray",
    "numpy.diag",
    "numpy.double",
    "numpy.finfo",
    "numpy.isscalar",
    "numpy.sqrt",
    "numpy.zeros",
    "std_err_func"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap._repr_html": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "hex",
    "id",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap._resample": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "setattr"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.apply": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "AttributeError",
    "IndexError",
    "arch.bootstrap.base._add_extra_kwargs",
    "func",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.bootstrap": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.clone": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "arch.bootstrap.base.copy"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.conf_int": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "arch.bootstrap.base.warnings",
    "func",
    "len",
    "list",
    "max",
    "min",
    "numpy.asarray",
    "numpy.diag",
    "numpy.inf",
    "numpy.percentile",
    "numpy.sqrt",
    "numpy.vstack",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "scipy.stats.norm.cdf",
    "scipy.stats.norm.ppf"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.cov": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "func",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.get_state": {
  "data": {
   "lineno": 263
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.index": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.random_state": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.reset": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.seed": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.set_state": {
  "data": {
   "lineno": 274
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.update_indices": {
  "data": {
   "lineno": 866
  },
  "type": "function"
 },
 "arch.bootstrap.base.IIDBootstrap.var": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "func",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IndependentSamplesBootstrap": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "arch.bootstrap.base.IIDBootstrap"
   ]
  },
  "type": "class"
 },
 "arch.bootstrap.base.IndependentSamplesBootstrap.__init__": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "arch.bootstrap.base.IndependentSamplesBootstrap",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IndependentSamplesBootstrap._resample": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "setattr"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IndependentSamplesBootstrap.index": {
  "data": {
   "lineno": 995,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IndependentSamplesBootstrap.reset": {
  "data": {
   "lineno": 1009,
   "symbols_in_volume": [
    "numpy.arange",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.IndependentSamplesBootstrap.update_indices": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "randint",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.MOONBootstrap": {
  "data": {
   "lineno": 1319,
   "symbols_in_volume": [
    "arch.bootstrap.base.IIDBootstrap"
   ]
  },
  "type": "class"
 },
 "arch.bootstrap.base.MOONBootstrap.__init__": {
  "data": {
   "lineno": 1321,
   "symbols_in_volume": [
    "arch.bootstrap.base.MOONBootstrap",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.MOONBootstrap.update_indices": {
  "data": {
   "lineno": 1325,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.MovingBlockBootstrap": {
  "data": {
   "lineno": 1235,
   "symbols_in_volume": [
    "arch.bootstrap.base.CircularBlockBootstrap"
   ]
  },
  "type": "class"
 },
 "arch.bootstrap.base.MovingBlockBootstrap.__init__": {
  "data": {
   "lineno": 1301,
   "symbols_in_volume": [
    "arch.bootstrap.base.MovingBlockBootstrap",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.MovingBlockBootstrap.update_indices": {
  "data": {
   "lineno": 1304,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.bootstrap.base.StationaryBootstrap": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": [
    "arch.bootstrap.base.CircularBlockBootstrap"
   ]
  },
  "type": "class"
 },
 "arch.bootstrap.base.StationaryBootstrap.__init__": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": [
    "arch.bootstrap.base.StationaryBootstrap",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.StationaryBootstrap.update_indices": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "arch.bootstrap._samplers_python.stationary_bootstrap_sample",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.StudentizationError": {
  "data": {
   "shadows": "arch.utility.exceptions.StudentizationError"
  },
  "type": "import"
 },
 "arch.bootstrap.base.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "arch.bootstrap.base._add_extra_kwargs": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "dict",
    "list"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base._get_acceleration": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "RuntimeError",
    "numpy.abs",
    "numpy.atleast_1d",
    "numpy.finfo",
    "numpy.float64",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base._loo_jackknife": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "func",
    "isinstance",
    "numpy.array",
    "numpy.r_",
    "pandas.DataFrame",
    "pandas.Series",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "arch.bootstrap.base.arg_type_error": {
  "data": {
   "shadows": "arch.utility.exceptions.arg_type_error"
  },
  "type": "import"
 },
 "arch.bootstrap.base.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "arch.bootstrap.base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "arch.bootstrap.base.kwarg_type_error": {
  "data": {
   "shadows": "arch.utility.exceptions.kwarg_type_error"
  },
  "type": "import"
 },
 "arch.bootstrap.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.bootstrap.base.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.bootstrap.base.stationary_bootstrap_sample": {
  "data": {
   "shadows": "arch.bootstrap._samplers_python.stationary_bootstrap_sample"
  },
  "type": "import"
 },
 "arch.bootstrap.base.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "arch.bootstrap.base.studentization_error": {
  "data": {
   "shadows": "arch.utility.exceptions.studentization_error"
  },
  "type": "import"
 },
 "arch.bootstrap.base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "arch.bootstrap.multiple_comparison": {
  "data": {},
  "type": "module"
 },
 "arch.bootstrap.multiple_comparison.CircularBlockBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.base.CircularBlockBootstrap"
  },
  "type": "import"
 },
 "arch.bootstrap.multiple_comparison.DocStringInheritor": {
  "data": {
   "shadows": "arch.utility.array.DocStringInheritor"
  },
  "type": "import"
 },
 "arch.bootstrap.multiple_comparison.MCS": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.MultipleComparison"
   ]
  },
  "type": "class"
 },
 "arch.bootstrap.multiple_comparison.MCS.__init__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "arch.bootstrap.base.CircularBlockBootstrap",
    "arch.bootstrap.base.MovingBlockBootstrap",
    "arch.bootstrap.base.StationaryBootstrap",
    "arch.bootstrap.multiple_comparison.MCS",
    "arch.utility.array.ensure2d",
    "collections.OrderedDict",
    "hex",
    "id",
    "int",
    "numpy.arange",
    "numpy.asarray",
    "numpy.sqrt",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.MCS._compute_max": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "enumerate",
    "numpy.argwhere",
    "numpy.bool",
    "numpy.max",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.MCS._compute_r": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "enumerate",
    "numpy.argwhere",
    "numpy.bool",
    "numpy.eye",
    "numpy.max",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.MCS._format_pvalues": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "isinstance",
    "numpy.max",
    "pandas.DataFrame",
    "pandas.Series",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.MCS._has_been_computed": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.MCS.compute": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.MCS.excluded": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "list",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.MCS.included": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "list",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.MCS.pvalues": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.MovingBlockBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.base.MovingBlockBootstrap"
  },
  "type": "import"
 },
 "arch.bootstrap.multiple_comparison.MultipleComparison": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.bootstrap.multiple_comparison.MultipleComparison.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.MultipleComparison.__repr__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison._info_to_str"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.MultipleComparison.__str__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison._info_to_str"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.MultipleComparison._repr_html_": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison._info_to_str"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.MultipleComparison.reset": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.MultipleComparison.seed": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "arch.bootstrap.multiple_comparison.RealityCheck": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.SPA"
   ]
  },
  "type": "class"
 },
 "arch.bootstrap.multiple_comparison.SPA": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.MultipleComparison",
    "arch.utility.array.DocStringInheritor"
   ]
  },
  "type": "class"
 },
 "arch.bootstrap.multiple_comparison.SPA.__init__": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "ValueError",
    "arch.bootstrap.base.CircularBlockBootstrap",
    "arch.bootstrap.base.MovingBlockBootstrap",
    "arch.bootstrap.base.StationaryBootstrap",
    "arch.bootstrap.multiple_comparison.SPA",
    "arch.utility.array.ensure2d",
    "collections.OrderedDict",
    "hex",
    "id",
    "int",
    "numpy.asarray",
    "numpy.bool",
    "numpy.ones",
    "numpy.sqrt",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.SPA._check_column_validity": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.SPA._check_compute": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.SPA._compute_variance": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.SPA._simulate_values": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "numpy.logical_not",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.SPA.better_models": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "numpy.argwhere",
    "numpy.logical_and",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.SPA.compute": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.SPA.critical_values": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.max",
    "numpy.percentile",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.SPA.pvalues": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.SPA.reset": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.SPA",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.SPA.subset": {
  "data": {
   "lineno": 545
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.StationaryBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.base.StationaryBootstrap"
  },
  "type": "import"
 },
 "arch.bootstrap.multiple_comparison.StepM": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.MultipleComparison"
   ]
  },
  "type": "class"
 },
 "arch.bootstrap.multiple_comparison.StepM.__init__": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.SPA",
    "arch.bootstrap.multiple_comparison.StepM",
    "arch.utility.array.ensure2d",
    "collections.OrderedDict",
    "hex",
    "id",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.StepM.compute": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.bool",
    "numpy.ones",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.StepM.superior_models": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "RuntimeError",
    "property"
   ]
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "arch.bootstrap.multiple_comparison._info_to_str": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "arch.bootstrap.multiple_comparison.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "arch.bootstrap.multiple_comparison.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "arch.bootstrap.multiple_comparison.ensure2d": {
  "data": {
   "shadows": "arch.utility.array.ensure2d"
  },
  "type": "import"
 },
 "arch.bootstrap.multiple_comparison.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.bootstrap.multiple_comparison.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.compat": {
  "data": {},
  "type": "module"
 },
 "arch.compat.numba": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "arch.compat.numba.f",
    "arch.compat.numba.fjit",
    "arch.compat.numba.functools",
    "numba.jit"
   ]
  },
  "type": "module"
 },
 "arch.compat.numba.PerformanceWarning": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "arch.compat.numba.__all__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "arch.compat.numba.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "arch.compat.numba.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "arch.compat.numba.f": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "arch.compat.numba.fjit": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "arch.compat.numba.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "arch.compat.numba.jit": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "arch.compat.numba.jit.wrapper": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "arch.compat.numba.PerformanceWarning",
    "arch.compat.numba.performance_warning",
    "arch.compat.numba.warnings",
    "func"
   ]
  },
  "type": "function"
 },
 "arch.compat.numba.performance_warning": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "arch.compat.numba.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "arch.compat.pandas": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "arch.compat.pandas.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "arch.compat.pandas.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "arch.compat.pandas.is_datetime64_any_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_datetime64_any_dtype"
  },
  "type": "import"
 },
 "arch.compat.python": {
  "data": {
   "symbols_in_volume": [
    "__builtin__.map",
    "arch.compat.python.sys"
   ]
  },
  "type": "module"
 },
 "arch.compat.python.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "arch.compat.python.builtins": {
  "data": {
   "shadows": "__builtin__"
  },
  "type": "import"
 },
 "arch.compat.python.lmap": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "arch.compat.python.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "arch.compat.statsmodels": {
  "data": {},
  "type": "module"
 },
 "arch.compat.statsmodels.dataset_loader": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "arch.conftest": {
  "data": {},
  "type": "module"
 },
 "arch.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.conftest.pytest_addoption": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "arch.conftest.pytest_runtest_setup": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "arch.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "arch.data": {
  "data": {},
  "type": "module"
 },
 "arch.data.binary": {
  "data": {},
  "type": "module"
 },
 "arch.data.binary.load": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "arch.data.utility.load_file"
   ]
  },
  "type": "function"
 },
 "arch.data.binary.load_file": {
  "data": {
   "shadows": "arch.data.utility.load_file"
  },
  "type": "import"
 },
 "arch.data.core_cpi": {
  "data": {},
  "type": "module"
 },
 "arch.data.core_cpi.load": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "arch.data.utility.load_file"
   ]
  },
  "type": "function"
 },
 "arch.data.core_cpi.load_file": {
  "data": {
   "shadows": "arch.data.utility.load_file"
  },
  "type": "import"
 },
 "arch.data.default": {
  "data": {},
  "type": "module"
 },
 "arch.data.default.load": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "arch.data.utility.load_file"
   ]
  },
  "type": "function"
 },
 "arch.data.default.load_file": {
  "data": {
   "shadows": "arch.data.utility.load_file"
  },
  "type": "import"
 },
 "arch.data.frenchdata": {
  "data": {},
  "type": "module"
 },
 "arch.data.frenchdata.load": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "arch.data.utility.load_file"
   ]
  },
  "type": "function"
 },
 "arch.data.frenchdata.load_file": {
  "data": {
   "shadows": "arch.data.utility.load_file"
  },
  "type": "import"
 },
 "arch.data.nasdaq": {
  "data": {},
  "type": "module"
 },
 "arch.data.nasdaq.load": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "arch.data.utility.load_file"
   ]
  },
  "type": "function"
 },
 "arch.data.nasdaq.load_file": {
  "data": {
   "shadows": "arch.data.utility.load_file"
  },
  "type": "import"
 },
 "arch.data.sp500": {
  "data": {},
  "type": "module"
 },
 "arch.data.sp500.load": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "arch.data.utility.load_file"
   ]
  },
  "type": "function"
 },
 "arch.data.sp500.load_file": {
  "data": {
   "shadows": "arch.data.utility.load_file"
  },
  "type": "import"
 },
 "arch.data.utility": {
  "data": {},
  "type": "module"
 },
 "arch.data.utility.load_file": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "arch.data.utility.os",
    "pandas.read_csv",
    "pandas.to_datetime",
    "pandas.to_numeric"
   ]
  },
  "type": "function"
 },
 "arch.data.utility.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "arch.data.utility.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.data.vix": {
  "data": {},
  "type": "module"
 },
 "arch.data.vix.load": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "arch.data.utility.load_file"
   ]
  },
  "type": "function"
 },
 "arch.data.vix.load_file": {
  "data": {
   "shadows": "arch.data.utility.load_file"
  },
  "type": "import"
 },
 "arch.data.wti": {
  "data": {},
  "type": "module"
 },
 "arch.data.wti.load": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "arch.data.utility.load_file"
   ]
  },
  "type": "function"
 },
 "arch.data.wti.load_file": {
  "data": {
   "shadows": "arch.data.utility.load_file"
  },
  "type": "import"
 },
 "arch.doc": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "arch.webbrowser"
   ]
  },
  "type": "function"
 },
 "arch.get_versions": {
  "data": {
   "shadows": "arch._version.get_versions"
  },
  "type": "import"
 },
 "arch.test": {
  "data": {
   "shadows": "arch.utility.test"
  },
  "type": "import"
 },
 "arch.tests": {
  "data": {},
  "type": "module"
 },
 "arch.tests.bootstrap": {
  "data": {},
  "type": "module"
 },
 "arch.tests.bootstrap.test_bootstrap": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "arch.tests.bootstrap.test_bootstrap.CircularBlockBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.CircularBlockBootstrap"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.HAS_EXTENSION": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "arch.tests.bootstrap.test_bootstrap.IIDBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.IIDBootstrap"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.IndependentSamplesBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.IndependentSamplesBootstrap"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.MovingBlockBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.MovingBlockBootstrap"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.StationaryBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.StationaryBootstrap"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.StudentizationError": {
  "data": {
   "shadows": "arch.utility.exceptions.StudentizationError"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.func": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.setup_class": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "RuntimeWarning",
    "arch.tests.bootstrap.test_bootstrap.warnings",
    "classmethod",
    "numpy.random.RandomState",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.test_apply": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.test_apply_series": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.test_bca": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "arch.bootstrap.base._loo_jackknife",
    "list",
    "numpy.array",
    "numpy.mean",
    "numpy.percentile",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range",
    "scipy.stats.norm.cdf",
    "scipy.stats.norm.ppf"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.test_bca_against_bcajack": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "list",
    "numpy.identity",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.test_bca_against_bcajack.func": {
  "data": {
   "lineno": 573
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.test_conf_int_basic": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "numpy.empty_like",
    "numpy.inf",
    "numpy.percentile",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.test_conf_int_bca_scaler": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.test_conf_int_bias_corrected": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "list",
    "numpy.array",
    "numpy.mean",
    "numpy.percentile",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range",
    "scipy.stats.norm.cdf",
    "scipy.stats.norm.ppf"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.test_conf_int_norm": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "numpy.diag",
    "numpy.empty_like",
    "numpy.inf",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "scipy.stats.norm.ppf"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.test_conf_int_parametric": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "len",
    "numpy.all",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "param_func",
    "semi_func"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.test_conf_int_parametric.param_func": {
  "data": {
   "lineno": 450
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.test_conf_int_parametric.semi_func": {
  "data": {
   "lineno": 458
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.test_conf_int_percentile": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "numpy.empty_like",
    "numpy.inf",
    "numpy.percentile",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.test_cov": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "numpy.diag",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.test_errors": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ValueError",
    "arch.bootstrap.IIDBootstrap",
    "arch.tests.bootstrap.test_bootstrap.pytest",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.test_extra_kwargs": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "ValueError",
    "arch.bootstrap.IIDBootstrap",
    "arch.tests.bootstrap.test_bootstrap.pytest"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.test_jackknife": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "arch.bootstrap.base._loo_jackknife",
    "len",
    "list",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.test_mixed_types": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "len",
    "numpy.testing.assert_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.test_numpy": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "len",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.test_pandas": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "len",
    "numpy.testing.assert_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.test_pandas_integer_index": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "numpy.arange",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.test_reset": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "numpy.arange",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.test_reuse": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "RuntimeWarning",
    "arch.bootstrap.IIDBootstrap",
    "arch.tests.bootstrap.test_bootstrap.warnings",
    "len",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.test_samplers": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "arch.bootstrap._samplers.stationary_bootstrap_sample",
    "arch.bootstrap._samplers_python.stationary_bootstrap_sample_python",
    "arch.tests.bootstrap.test_bootstrap.HAS_EXTENSION",
    "arch.tests.bootstrap.test_bootstrap.pytest",
    "numpy.array",
    "numpy.int64",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.test_state": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "numpy.arange",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.test_str": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "arch.bootstrap.CircularBlockBootstrap",
    "arch.bootstrap.IIDBootstrap",
    "arch.bootstrap.MovingBlockBootstrap",
    "arch.bootstrap.StationaryBootstrap",
    "hex",
    "id",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.test_studentized": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "arch.tests.bootstrap.test_bootstrap.warnings",
    "len",
    "numpy.diag",
    "numpy.mean",
    "numpy.percentile",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range",
    "std_err_func"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.test_studentized.std_err_func": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestBootstrap.test_uneven_sampling": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "arch.bootstrap.CircularBlockBootstrap",
    "arch.bootstrap.MovingBlockBootstrap"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap._loo_jackknife": {
  "data": {
   "shadows": "arch.bootstrap.base._loo_jackknife"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.stationary_bootstrap_sample": {
  "data": {
   "shadows": "arch.bootstrap._samplers_python.stationary_bootstrap_sample"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.stationary_bootstrap_sample_cython": {
  "data": {
   "shadows": "arch.bootstrap._samplers.stationary_bootstrap_sample"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.stationary_bootstrap_sample_python": {
  "data": {
   "shadows": "arch.bootstrap._samplers_python.stationary_bootstrap_sample_python"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_bootstrap.test_iid_unequal_equiv": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "arch.bootstrap.IndependentSamplesBootstrap",
    "numpy.mean",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_list_input": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "TypeError",
    "arch.bootstrap.IIDBootstrap",
    "arch.tests.bootstrap.test_bootstrap.pytest",
    "numpy.random.standard_normal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_pass_random_state": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "TypeError",
    "arch.bootstrap.IIDBootstrap",
    "arch.tests.bootstrap.test_bootstrap.pytest",
    "numpy.arange",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_studentization_error": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "arch.bootstrap.IIDBootstrap",
    "arch.tests.bootstrap.test_bootstrap.pytest",
    "arch.utility.exceptions.StudentizationError",
    "numpy.random.standard_normal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_studentization_error.f": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_unequal_bs": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "ValueError",
    "arch.bootstrap.IndependentSamplesBootstrap",
    "arch.tests.bootstrap.test_bootstrap.pytest",
    "len",
    "numpy.random.RandomState",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_unequal_bs.mean_diff": {
  "data": {
   "lineno": 774
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_unequal_bs_kwargs": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "arch.bootstrap.IndependentSamplesBootstrap",
    "len",
    "numpy.random.RandomState",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_unequal_bs_kwargs.mean_diff": {
  "data": {
   "lineno": 800
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_unequal_reset": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "arch.bootstrap.IndependentSamplesBootstrap",
    "numpy.random.RandomState",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.test_unequal_reset.mean_diff": {
  "data": {
   "lineno": 824
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_bootstrap.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison": {
  "data": {},
  "type": "module"
 },
 "arch.tests.bootstrap.test_multiple_comparison.CircularBlockBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.CircularBlockBootstrap"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.MCS": {
  "data": {
   "shadows": "arch.bootstrap.multiple_comparison.MCS"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.MovingBlockBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.MovingBlockBootstrap"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.SPA": {
  "data": {
   "shadows": "arch.bootstrap.multiple_comparison.SPA"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.StationaryBootstrap": {
  "data": {
   "shadows": "arch.bootstrap.StationaryBootstrap"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.StepM": {
  "data": {
   "shadows": "arch.bootstrap.multiple_comparison.StepM"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestMCS": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestMCS.setup_class": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "classmethod",
    "numpy.random.RandomState",
    "pandas.DataFrame",
    "pandas.date_range",
    "scipy.stats.chi2"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestMCS.test_all_models_have_pval": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.MCS",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestMCS.test_errors": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "ValueError",
    "arch.bootstrap.multiple_comparison.MCS",
    "arch.tests.bootstrap.test_multiple_comparison.pytest"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestMCS.test_exact_ties": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.MCS"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestMCS.test_max_method": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.MCS",
    "list",
    "max_step",
    "numpy.array",
    "numpy.int64",
    "numpy.isfinite",
    "numpy.max",
    "numpy.nan",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestMCS.test_max_method.max_step": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "len",
    "numpy.argwhere",
    "numpy.max",
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "scipy.stats",
    "scipy.stats.mean"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestMCS.test_mcs_error": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "RuntimeError",
    "arch.bootstrap.multiple_comparison.MCS",
    "arch.tests.bootstrap.test_multiple_comparison.pytest"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestMCS.test_missing_included_max": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.MCS",
    "len",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestMCS.test_output_types": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.MCS",
    "isinstance",
    "list",
    "numpy.testing.assert_equal",
    "pandas.DataFrame",
    "type"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestMCS.test_r_method": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.MCS",
    "list",
    "numpy.array",
    "numpy.int64",
    "numpy.isfinite",
    "numpy.max",
    "numpy.nan",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "r_step",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestMCS.test_r_method.r_step": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.argwhere",
    "numpy.array",
    "numpy.max",
    "numpy.mean",
    "numpy.sqrt",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestMCS.test_str_repr": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.MCS",
    "hex",
    "id",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestSPA": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestSPA.setup_class": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "classmethod",
    "numpy.random.RandomState",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "scipy.stats.chi2"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestSPA.test_bootstrap_selection": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "arch.bootstrap.CircularBlockBootstrap",
    "arch.bootstrap.MovingBlockBootstrap",
    "arch.bootstrap.StationaryBootstrap",
    "arch.bootstrap.multiple_comparison.SPA",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestSPA.test_equivalence": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.SPA",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestSPA.test_errors": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "arch.bootstrap.multiple_comparison.SPA",
    "arch.tests.bootstrap.test_multiple_comparison.pytest"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestSPA.test_pvalues_and_critvals": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.SPA",
    "numpy.max",
    "numpy.mean",
    "numpy.percentile",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestSPA.test_seed_reset": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.SPA",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestSPA.test_single_model": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.SPA"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestSPA.test_spa_nested": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.SPA"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestSPA.test_str_repr": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.SPA",
    "hex",
    "id",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestSPA.test_variances_and_selection": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.SPA",
    "numpy.linspace",
    "numpy.log",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestStepM": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestStepM.setup_class": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "classmethod",
    "numpy.random.RandomState",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "range",
    "scipy.stats.chi2",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestStepM.test_all_superior": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.StepM",
    "len",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestStepM.test_equivalence": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.StepM",
    "numpy.argwhere",
    "numpy.array",
    "numpy.linspace",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestStepM.test_errors": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "RuntimeError",
    "arch.bootstrap.multiple_comparison.StepM",
    "arch.tests.bootstrap.test_multiple_comparison.pytest"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestStepM.test_exact_ties": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.StepM",
    "len",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestStepM.test_single_model": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.StepM"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestStepM.test_str_repr": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.StepM",
    "hex",
    "id",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.TestStepM.test_superior_models": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "arch.bootstrap.multiple_comparison.SPA",
    "arch.bootstrap.multiple_comparison.StepM",
    "len",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "arch.tests.bootstrap.test_multiple_comparison.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.linspace": {
  "data": {
   "shadows": "numpy.linspace"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.bootstrap.test_multiple_comparison.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "arch.tests.test_compat": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "arch.tests.test_compat.HAS_NUMBA": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "arch.tests.test_compat.PerformanceWarning": {
  "data": {
   "shadows": "arch.compat.numba.PerformanceWarning"
  },
  "type": "import"
 },
 "arch.tests.test_compat.arch_recursion": {
  "data": {
   "shadows": "arch.univariate.recursions_python.arch_recursion"
  },
  "type": "import"
 },
 "arch.tests.test_compat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.test_compat.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "arch.tests.test_compat.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.test_compat.test_performance_warning": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "arch.compat.numba.PerformanceWarning",
    "arch.tests.test_compat.HAS_NUMBA",
    "arch.tests.test_compat.pytest",
    "arch.univariate.recursions_python.arch_recursion",
    "numpy.array",
    "numpy.empty",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "arch.tests.test_data": {
  "data": {
   "symbols_in_volume": [
    "arch.tests.test_data.CURR_DIR",
    "arch.tests.test_data.FILES",
    "arch.tests.test_data.glob",
    "arch.tests.test_data.os"
   ]
  },
  "type": "module"
 },
 "arch.tests.test_data.CURR_DIR": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "arch.tests.test_data.DATASETS": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "arch.tests.test_data.FILES": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "arch.tests.test_data.dataset": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "arch.tests.test_data.DATASETS",
    "arch.tests.test_data.pytest"
   ]
  },
  "type": "function"
 },
 "arch.tests.test_data.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "arch.tests.test_data.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "arch.tests.test_data.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.tests.test_data.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.test_data.test_dataset": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "__import__",
    "arch.tests.test_data.dataset",
    "isinstance",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.tests.test_examples": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "arch.tests.test_examples.NOTEBOOK_DIR",
    "arch.tests.test_examples.glob",
    "arch.tests.test_examples.jupyter_client",
    "arch.tests.test_examples.nbs",
    "arch.tests.test_examples.os",
    "arch.tests.test_examples.pytest",
    "arch.tests.test_examples.sys",
    "list",
    "map",
    "sorted"
   ]
  },
  "type": "module"
 },
 "arch.tests.test_examples.ExecutePreprocessor": {
  "data": {
   "shadows": "nbconvert.preprocessors.ExecutePreprocessor"
  },
  "type": "import"
 },
 "arch.tests.test_examples.NOTEBOOK_DIR": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "arch.tests.test_examples.SLOW_NOTEBOOKS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "arch.tests.test_examples.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "arch.tests.test_examples.ids": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "arch.tests.test_examples.jupyter_client": {
  "data": {
   "shadows": "jupyter_client"
  },
  "type": "import"
 },
 "arch.tests.test_examples.kernel_name": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "arch.tests.test_examples.kernels": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "arch.tests.test_examples.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "arch.tests.test_examples.nbformat": {
  "data": {
   "shadows": "nbformat"
  },
  "type": "import"
 },
 "arch.tests.test_examples.nbs": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "arch.tests.test_examples.notebook": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "arch.tests.test_examples.ids",
    "arch.tests.test_examples.nbs",
    "arch.tests.test_examples.pytest"
   ]
  },
  "type": "function"
 },
 "arch.tests.test_examples.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "arch.tests.test_examples.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.test_examples.pytestmark": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "arch.tests.test_examples.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "arch.tests.test_examples.test_notebook": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "arch.tests.test_examples.NOTEBOOK_DIR",
    "arch.tests.test_examples.SLOW_NOTEBOOKS",
    "arch.tests.test_examples.kernel_name",
    "arch.tests.test_examples.nbformat",
    "arch.tests.test_examples.notebook",
    "arch.tests.test_examples.os",
    "arch.tests.test_examples.pytest",
    "nbconvert.preprocessors.ExecutePreprocessor"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot": {
  "data": {},
  "type": "module"
 },
 "arch.tests.unitroot.data": {
  "data": {},
  "type": "module"
 },
 "arch.tests.unitroot.test_unitroot": {
  "data": {
   "symbols_in_volume": [
    "arch.compat.statsmodels.dataset_loader",
    "arch.tests.unitroot.test_unitroot.BASE_PATH",
    "arch.tests.unitroot.test_unitroot.DATA_PATH",
    "arch.tests.unitroot.test_unitroot.os",
    "arch.tests.unitroot.test_unitroot.za_test_result",
    "collections.namedtuple",
    "pandas.read_csv",
    "statsmodels.datasets.macrodata",
    "statsmodels.datasets.modechoice",
    "statsmodels.datasets.nile",
    "statsmodels.datasets.randhie",
    "statsmodels.datasets.sunspots"
   ]
  },
  "type": "module"
 },
 "arch.tests.unitroot.test_unitroot.ADF": {
  "data": {
   "shadows": "arch.unitroot.ADF"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.BASE_PATH": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_unitroot.DATA_PATH": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_unitroot.DECIMAL_1": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_unitroot.DECIMAL_2": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_unitroot.DECIMAL_3": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_unitroot.DECIMAL_4": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_unitroot.DECIMAL_5": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_unitroot.DFGLS": {
  "data": {
   "shadows": "arch.unitroot.DFGLS"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.KPSS": {
  "data": {
   "shadows": "arch.unitroot.KPSS"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.OLS": {
  "data": {
   "shadows": "statsmodels.regression.linear_model.OLS"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.PhillipsPerron": {
  "data": {
   "shadows": "arch.unitroot.PhillipsPerron"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.REAL_TIME_SERIES": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_unitroot.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.TRUE_BW_FROM_R_BA": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_unitroot.TRUE_BW_FROM_R_PA": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_unitroot.TRUE_BW_FROM_R_QS": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_unitroot.TestAutolagOLS": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.tests.unitroot.test_unitroot.TestAutolagOLS.setup_class": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "arch.compat.statsmodels.dataset_loader",
    "classmethod",
    "numpy.diff",
    "numpy.log",
    "numpy.random.RandomState",
    "numpy.zeros",
    "range",
    "statsmodels.datasets.macrodata"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestAutolagOLS.test_aic": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "arch.unitroot.unitroot._autolag_ols",
    "numpy.isscalar",
    "statsmodels.regression.linear_model.OLS",
    "statsmodels.tsa.stattools._autolag",
    "statsmodels.tsa.stattools.lagmat"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestAutolagOLS.test_aic_exogenous": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "arch.unitroot.unitroot._autolag_ols",
    "numpy.argmin",
    "numpy.concatenate",
    "numpy.inf",
    "numpy.zeros",
    "range",
    "statsmodels.regression.linear_model.OLS",
    "statsmodels.tsa.stattools.lagmat"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestAutolagOLS.test_bic": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "arch.unitroot.unitroot._autolag_ols",
    "numpy.isscalar",
    "statsmodels.regression.linear_model.OLS",
    "statsmodels.tsa.stattools._autolag",
    "statsmodels.tsa.stattools.lagmat"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestAutolagOLS.test_bic_exogenous": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "arch.unitroot.unitroot._autolag_ols",
    "numpy.argmin",
    "numpy.concatenate",
    "numpy.inf",
    "numpy.zeros",
    "range",
    "statsmodels.regression.linear_model.OLS",
    "statsmodels.tsa.stattools.lagmat"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestAutolagOLS.test_tstat": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "arch.unitroot.unitroot._autolag_ols",
    "numpy.isscalar",
    "statsmodels.regression.linear_model.OLS",
    "statsmodels.tsa.stattools._autolag",
    "statsmodels.tsa.stattools.lagmat"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestAutolagOLS.test_tstat_exogenous": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "arch.unitroot.unitroot._autolag_ols",
    "numpy.abs",
    "numpy.argwhere",
    "numpy.concatenate",
    "numpy.max",
    "numpy.zeros",
    "range",
    "scipy.stats.norm.ppf",
    "statsmodels.regression.linear_model.OLS",
    "statsmodels.tsa.stattools.lagmat"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.setup_class": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "arch.compat.statsmodels.dataset_loader",
    "classmethod",
    "numpy.diff",
    "numpy.log",
    "numpy.random.RandomState",
    "statsmodels.datasets.macrodata"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_adf_auto_bic": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "arch.unitroot.ADF",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_adf_auto_t_stat": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "arch.unitroot.ADF",
    "len",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_adf_c_no_lags": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.DECIMAL_4",
    "arch.unitroot.ADF",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_adf_critical_value": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "arch.unitroot.ADF",
    "arch.unitroot.critical_values.dickey_fuller.tau_2010.T",
    "numpy.polyval",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_adf_ct_no_lags": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.DECIMAL_4",
    "arch.unitroot.ADF",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_adf_lags_10": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.DECIMAL_4",
    "arch.unitroot.ADF",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_adf_nc_no_lags": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.DECIMAL_4",
    "arch.unitroot.ADF",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_adf_no_lags": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.DECIMAL_4",
    "arch.unitroot.ADF",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_adf_no_options": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.DECIMAL_4",
    "arch.unitroot.ADF",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_dfgls": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.DECIMAL_4",
    "arch.unitroot.DFGLS",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_dfgls_auto": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.DECIMAL_4",
    "arch.unitroot.DFGLS",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_dfgls_auto_low_memory": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "arch.unitroot.DFGLS",
    "float",
    "isinstance",
    "numpy.cumsum"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_dfgls_bad_trend": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.DFGLS"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_dfgls_c": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.DECIMAL_4",
    "arch.unitroot.DFGLS",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_invalid_determinstic": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.ADF"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_kpss": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.DECIMAL_4",
    "arch.unitroot.KPSS",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_kpss_auto": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "arch.unitroot.KPSS",
    "numpy.ceil",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_kpss_c": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.DECIMAL_4",
    "arch.unitroot.KPSS",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_negative_lag": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.ADF"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_pp": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.DECIMAL_2",
    "arch.tests.unitroot.test_unitroot.DECIMAL_4",
    "arch.unitroot.PhillipsPerron",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_pp_auto": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.DECIMAL_2",
    "arch.tests.unitroot.test_unitroot.DECIMAL_4",
    "arch.unitroot.PhillipsPerron",
    "numpy.ceil",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_pp_bad_type": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.PhillipsPerron"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_variance_ratio": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "arch.unitroot.VarianceRatio",
    "numpy.diff",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_variance_ratio_generic": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "arch.unitroot.VarianceRatio",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_variance_ratio_invalid_lags": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.VarianceRatio"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_variance_ratio_no_constant": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "arch.unitroot.VarianceRatio",
    "numpy.diff",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_variance_ratio_no_overlap": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.warnings",
    "arch.unitroot.VarianceRatio",
    "len",
    "numpy.diff",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.TestUnitRoot.test_variance_ratio_non_robust": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "arch.unitroot.VarianceRatio",
    "numpy.diff",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.VarianceRatio": {
  "data": {
   "shadows": "arch.unitroot.VarianceRatio"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.ZIVOT_ANDREWS_DATA": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_unitroot.ZivotAndrews": {
  "data": {
   "shadows": "arch.unitroot.ZivotAndrews"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot._autolag": {
  "data": {
   "shadows": "statsmodels.tsa.stattools._autolag"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot._autolag_ols": {
  "data": {
   "shadows": "arch.unitroot.unitroot._autolag_ols"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.auto_bandwidth": {
  "data": {
   "shadows": "arch.unitroot.unitroot.auto_bandwidth"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.ceil": {
  "data": {
   "shadows": "numpy.ceil"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.dataset_loader": {
  "data": {
   "shadows": "arch.compat.statsmodels.dataset_loader"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.diff": {
  "data": {
   "shadows": "numpy.diff"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.kpss_autolag_data": {
  "data": {
   "lineno": 465
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_unitroot.lagmat": {
  "data": {
   "shadows": "statsmodels.tsa.stattools.lagmat"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.log": {
  "data": {
   "shadows": "numpy.log"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.mackinnoncrit": {
  "data": {
   "shadows": "arch.unitroot.unitroot.mackinnoncrit"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.mackinnonp": {
  "data": {
   "shadows": "arch.unitroot.unitroot.mackinnonp"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.macrodata": {
  "data": {
   "shadows": "statsmodels.datasets.macrodata"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.modechoice": {
  "data": {
   "shadows": "statsmodels.datasets.modechoice"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.nile": {
  "data": {
   "shadows": "statsmodels.datasets.nile"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.polyval": {
  "data": {
   "shadows": "numpy.polyval"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.randhie": {
  "data": {
   "shadows": "statsmodels.datasets.randhie"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.series": {
  "data": {
   "lineno": 484
  },
  "type": "constant"
 },
 "arch.tests.unitroot.test_unitroot.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.sunspots": {
  "data": {
   "shadows": "statsmodels.datasets.sunspots"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.tau_2010": {
  "data": {
   "shadows": "arch.unitroot.critical_values.dickey_fuller.tau_2010"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.test_adf_short_timeseries": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "arch.unitroot.ADF",
    "numpy.asarray",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_auto_low_memory": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "arch.unitroot.ADF",
    "numpy.cumsum",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_bw_selection": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_unitroot.REAL_TIME_SERIES",
    "arch.tests.unitroot.test_unitroot.TRUE_BW_FROM_R_BA",
    "arch.tests.unitroot.test_unitroot.TRUE_BW_FROM_R_PA",
    "arch.tests.unitroot.test_unitroot.TRUE_BW_FROM_R_QS",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.unitroot.auto_bandwidth",
    "numpy.testing.assert_allclose",
    "round"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_kpss_data_dependent_lags": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.kpss_autolag_data",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.KPSS",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_mackinnoncrit_errors": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.unitroot.mackinnoncrit",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_mackinnonp_errors": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.unitroot.mackinnonp"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_mackinnonp_large": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "arch.unitroot.unitroot.mackinnonp"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_mackinnonp_small": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "arch.unitroot.unitroot.mackinnonp"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_representations": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.ADF",
    "numpy.cumsum",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_trends_low_memory": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.ADF",
    "numpy.cumsum",
    "numpy.random.RandomState",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_unknown_method": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.ADF",
    "numpy.cumsum",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_zivot_andrews": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "arch.tests.unitroot.test_unitroot.ZIVOT_ANDREWS_DATA",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.tests.unitroot.test_unitroot.series",
    "arch.unitroot.ZivotAndrews",
    "isinstance",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.test_zivot_andrews_error": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.unitroot.test_unitroot.ZIVOT_ANDREWS_DATA",
    "arch.tests.unitroot.test_unitroot.pytest",
    "arch.unitroot.ZivotAndrews"
   ]
  },
  "type": "function"
 },
 "arch.tests.unitroot.test_unitroot.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "arch.tests.unitroot.test_unitroot.za_test_result": {
  "data": {
   "lineno": 480
  },
  "type": "constant"
 },
 "arch.tests.univariate": {
  "data": {},
  "type": "module"
 },
 "arch.tests.univariate.test_base": {
  "data": {},
  "type": "module"
 },
 "arch.tests.univariate.test_base.format_float_fixed": {
  "data": {
   "shadows": "arch.univariate.base.format_float_fixed"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_base.test_format_float_fixed": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "arch.univariate.base.format_float_fixed"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_distribution": {
  "data": {
   "symbols_in_volume": [
    "arch.univariate.distribution.GeneralizedError",
    "arch.univariate.distribution.Normal",
    "arch.univariate.distribution.SkewStudent",
    "arch.univariate.distribution.StudentsT"
   ]
  },
  "type": "module"
 },
 "arch.tests.univariate.test_distribution.DISTRIBUTIONS": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "arch.tests.univariate.test_distribution.GeneralizedError": {
  "data": {
   "shadows": "arch.univariate.distribution.GeneralizedError"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_distribution.Normal": {
  "data": {
   "shadows": "arch.univariate.distribution.Normal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_distribution.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_distribution.SkewStudent": {
  "data": {
   "shadows": "arch.univariate.distribution.SkewStudent"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_distribution.StudentsT": {
  "data": {
   "shadows": "arch.univariate.distribution.StudentsT"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_distribution.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_distribution.TestDistributions": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "arch.tests.univariate.test_distribution.TestDistributions.setup_class": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "classmethod",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_distribution.TestDistributions.test_ged": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_distribution.pytest",
    "arch.univariate.distribution.GeneralizedError",
    "hex",
    "id",
    "len",
    "numpy.abs",
    "numpy.array",
    "numpy.exp",
    "numpy.log",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "scipy.special.gamma",
    "simulator",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_distribution.TestDistributions.test_normal": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "len",
    "numpy.empty",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "scipy.stats.norm"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_distribution.TestDistributions.test_skewstudent": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_distribution.pytest",
    "arch.univariate.distribution.SkewStudent",
    "len",
    "max",
    "numpy.array",
    "numpy.log",
    "numpy.pi",
    "numpy.sign",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "pow",
    "scipy.special.gamma",
    "scipy.stats.kurtosis"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_distribution.TestDistributions.test_studentst": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_distribution.pytest",
    "arch.univariate.distribution.StudentsT",
    "len",
    "max",
    "numpy.array",
    "numpy.exp",
    "numpy.log",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "scipy.special.gammaln",
    "scipy.stats.kurtosis"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_distribution.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_distribution.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_distribution.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_distribution.distribution": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "arch.tests.univariate.test_distribution.pytest",
    "arch.univariate.distribution.GeneralizedError",
    "arch.univariate.distribution.SkewStudent",
    "arch.univariate.distribution.StudentsT"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_distribution.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_distribution.gamma": {
  "data": {
   "shadows": "scipy.special.gamma"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_distribution.gammaln": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_distribution.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_distribution.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_distribution.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_distribution.test_bad_input": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "TypeError",
    "arch.tests.univariate.test_distribution.pytest",
    "arch.univariate.distribution.Normal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_distribution.test_invalid_params": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_distribution.pytest",
    "arch.univariate.distribution.Normal",
    "arch.univariate.distribution.StudentsT",
    "dist",
    "dist.ppf",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_distribution.test_no_parameters_error": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_distribution.distribution",
    "arch.tests.univariate.test_distribution.pytest",
    "dist",
    "dist.cdf",
    "dist.ppf",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_distribution.test_roundtrip_cdf_ppf": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "arch.tests.univariate.test_distribution.DISTRIBUTIONS",
    "arch.tests.univariate.test_distribution.distribution",
    "arch.tests.univariate.test_distribution.pytest",
    "dist",
    "dist.cdf",
    "dist.ppf",
    "numpy.arange",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast": {
  "data": {},
  "type": "module"
 },
 "arch.tests.univariate.test_forecast.HARX": {
  "data": {
   "shadows": "arch.univariate.HARX"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_forecast.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_forecast.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_forecast.TestForecasting": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.setup_class": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "arch.univariate.arch_model",
    "classmethod",
    "numpy.array",
    "numpy.random.RandomState",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_ar1_forecast": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "arch.univariate.arch_model",
    "numpy.all",
    "numpy.arange",
    "numpy.asarray",
    "numpy.isnan",
    "numpy.ones_like",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_ar1_forecast_bootstrap": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "arch.univariate.arch_model",
    "numpy.random.RandomState",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_ar1_forecast_simulation": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.arch_model",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.nan",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_ar2_forecast": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_forecast.pytest",
    "arch.univariate.arch_model",
    "numpy.all",
    "numpy.array",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.cumsum",
    "numpy.empty",
    "numpy.eye",
    "numpy.isnan",
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_ar2_garch11": {
  "data": {
   "lineno": 398
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_ar_forecasting": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "arch.univariate.mean._ar_forecast",
    "numpy.array",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_ar_to_impulse": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "arch.univariate.mean._ar_to_impulse",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_constant_mean_forecast": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "arch.univariate.arch_model",
    "numpy.all",
    "numpy.asarray",
    "numpy.isnan",
    "numpy.ones",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_first_last_obs": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "arch.univariate.arch_model",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_first_obs": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_forecast.pytest",
    "arch.univariate.arch_model",
    "numpy.all",
    "numpy.asarray",
    "numpy.isfinite",
    "numpy.isnan",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_fit_options": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "arch.univariate.arch_model"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_forecast_exogenous_regressors": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "arch.univariate.HARX",
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "numpy.vstack",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_forecast_start_alternatives": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_forecast.pytest",
    "arch.univariate.arch_model",
    "datetime.datetime",
    "getattr",
    "numpy.datetime64",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_frame_labels": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "arch.univariate.arch_model",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_har_forecast": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_forecast.pytest",
    "arch.univariate.arch_model",
    "arch.univariate.mean._ar_to_impulse",
    "numpy.asarray",
    "numpy.cumsum",
    "numpy.empty",
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_holdback_ar": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "arch.univariate.arch_model",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_holdback_first_obs": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_forecast.pytest",
    "arch.univariate.arch_model",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_holdback_lastobs": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_forecast.pytest",
    "arch.univariate.arch_model",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_last_obs": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "arch.univariate.arch_model",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast.TestForecasting.test_zero_mean_forecast": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "arch.univariate.arch_model",
    "numpy.all",
    "numpy.asarray",
    "numpy.isnan",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_forecast._ar_forecast": {
  "data": {
   "shadows": "arch.univariate.mean._ar_forecast"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_forecast._ar_to_impulse": {
  "data": {
   "shadows": "arch.univariate.mean._ar_to_impulse"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_forecast.arch_model": {
  "data": {
   "shadows": "arch.univariate.arch_model"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_forecast.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_forecast.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_forecast.dt": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_forecast.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_forecast.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_forecast.preserved_state": {
  "data": {
   "shadows": "arch.tests.univariate.test_variance_forecasting.preserved_state"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_forecast.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "arch.tests.univariate.test_mean.ARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.ARCH"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.ARCHModelForecast": {
  "data": {
   "shadows": "arch.univariate.base.ARCHModelForecast"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.ARCHModelResult": {
  "data": {
   "shadows": "arch.univariate.base.ARCHModelResult"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.ARX": {
  "data": {
   "shadows": "arch.univariate.mean.ARX"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.ConstantMean": {
  "data": {
   "shadows": "arch.univariate.mean.ConstantMean"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.ConstantVariance": {
  "data": {
   "shadows": "arch.univariate.volatility.ConstantVariance"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.ConvergenceWarning": {
  "data": {
   "shadows": "arch.utility.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.DISPLAY": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "arch.tests.univariate.test_mean.DataScaleWarning": {
  "data": {
   "shadows": "arch.utility.exceptions.DataScaleWarning"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.EGARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.EGARCH"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.EWMAVariance": {
  "data": {
   "shadows": "arch.univariate.volatility.EWMAVariance"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.FIGARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.FIGARCH"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.FixedVariance": {
  "data": {
   "shadows": "arch.univariate.volatility.FixedVariance"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.GARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.GARCH"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.GeneralizedError": {
  "data": {
   "shadows": "arch.univariate.distribution.GeneralizedError"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.HARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.HARCH"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.HARX": {
  "data": {
   "shadows": "arch.univariate.mean.HARX"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.HAS_MATPLOTLIB": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "arch.tests.univariate.test_mean.LS": {
  "data": {
   "shadows": "arch.univariate.mean.LS"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.MIDASHyperbolic": {
  "data": {
   "shadows": "arch.univariate.volatility.MIDASHyperbolic"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.Normal": {
  "data": {
   "shadows": "arch.univariate.distribution.Normal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.OptimizeResult": {
  "data": {
   "shadows": "scipy.optimize.OptimizeResult"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.RiskMetrics2006": {
  "data": {
   "shadows": "arch.univariate.volatility.RiskMetrics2006"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.SkewStudent": {
  "data": {
   "shadows": "arch.univariate.distribution.SkewStudent"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.StudentsT": {
  "data": {
   "shadows": "arch.univariate.distribution.StudentsT"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.TestMeanModel": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.setup_class": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_mean.pytest",
    "arch.univariate.distribution.Normal",
    "arch.univariate.mean.ZeroMean",
    "arch.univariate.volatility.GARCH",
    "classmethod",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.var",
    "numpy.zeros_like",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_align": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_mean.pytest",
    "arch.univariate.base._align_forecast",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_ar": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.base.ARCHModelForecast",
    "arch.univariate.distribution.StudentsT",
    "arch.univariate.mean.ARX",
    "arch.univariate.volatility.GARCH",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.empty",
    "numpy.float64",
    "numpy.inf",
    "numpy.linalg.pinv",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_ar_no_lags": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "arch.univariate.mean.ARX",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_ar_plot": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.HAS_MATPLOTLIB",
    "arch.tests.univariate.test_mean.pytest",
    "arch.univariate.distribution.StudentsT",
    "arch.univariate.mean.ARX",
    "arch.univariate.volatility.GARCH"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_arch_arx": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.mean.ARX",
    "arch.univariate.volatility.ARCH",
    "hex",
    "id",
    "isinstance",
    "list",
    "numpy.testing.assert_equal",
    "pandas.DataFrame",
    "pandas.Series",
    "repr",
    "scipy.optimize.OptimizeResult",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_arch_model": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.pytest",
    "arch.univariate.distribution.Normal",
    "arch.univariate.mean.ARX",
    "arch.univariate.mean.ConstantMean",
    "arch.univariate.mean.HARX",
    "arch.univariate.mean.LS",
    "arch.univariate.mean.ZeroMean",
    "arch.univariate.mean.arch_model",
    "arch.univariate.volatility.ARCH",
    "arch.univariate.volatility.ConstantVariance",
    "arch.univariate.volatility.EGARCH",
    "arch.univariate.volatility.FIGARCH",
    "arch.univariate.volatility.GARCH",
    "arch.univariate.volatility.HARCH",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_arx": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.mean.ARX",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.inf",
    "numpy.linalg.pinv",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_constant_mean": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.pytest",
    "arch.univariate.base.ARCHModelForecast",
    "arch.univariate.distribution.Normal",
    "arch.univariate.mean.ConstantMean",
    "arch.univariate.volatility.ConstantVariance",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.empty",
    "numpy.float64",
    "numpy.inf",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "pandas.DataFrame",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_constant_mean_fixed_variance": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": [
    "arch.univariate.mean.ARX",
    "arch.univariate.mean.ConstantMean",
    "arch.univariate.volatility.FixedVariance",
    "len"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_convergence_warning": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.pytest",
    "arch.univariate.mean.arch_model",
    "arch.utility.exceptions.ConvergenceWarning",
    "arch.utility.exceptions.DataScaleWarning",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_date_first_last_obs": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.mean.ConstantMean",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_egarch": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.distribution.StudentsT",
    "arch.univariate.mean.ConstantMean",
    "arch.univariate.volatility.EGARCH"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_empty_mean": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "arch.univariate.mean.HARX",
    "arch.univariate.mean.ZeroMean",
    "arch.univariate.volatility.ConstantVariance",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_errors": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_mean.pytest",
    "arch.univariate.distribution.Normal",
    "arch.univariate.mean.ARX",
    "arch.univariate.mean.HARX",
    "arch.univariate.volatility.ConstantVariance",
    "arch.univariate.volatility.GARCH",
    "numpy.array",
    "numpy.eye",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_first_after_last": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.pytest",
    "arch.univariate.mean.arch_model"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_first_last_obs": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.mean.ARX",
    "arch.univariate.volatility.GARCH",
    "numpy.nan",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_fixed_user_parameters": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.mean.arch_model",
    "numpy.testing.assert_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_fixed_user_parameters_new_model": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.mean.arch_model",
    "numpy.testing.assert_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_har": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.pytest",
    "arch.univariate.base.ARCHModelForecast",
    "arch.univariate.mean.HARX",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float64",
    "numpy.inf",
    "numpy.linalg.pinv",
    "numpy.mean",
    "numpy.ones",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "pandas.DataFrame",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_har_lag_specifications": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.mean.ARX",
    "arch.univariate.mean.HARX",
    "numpy.asarray",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_harx": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.pytest",
    "arch.univariate.mean.HARX",
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.inf",
    "numpy.linalg.pinv",
    "numpy.mean",
    "numpy.ones",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_harx_error": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_mean.pytest",
    "arch.univariate.mean.HARX"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_little_or_no_data": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "arch.tests.univariate.test_mean.pytest",
    "arch.univariate.mean.HARX"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_model_obs_equivalence": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.mean.arch_model",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_model_obs_equivalence_ar": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.mean.arch_model",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_multiple_lags": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.mean.ConstantMean",
    "arch.univariate.volatility.ARCH",
    "arch.univariate.volatility.EGARCH",
    "arch.univariate.volatility.GARCH",
    "arch.univariate.volatility.HARCH",
    "process"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_no_param_volatility": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.mean.ARX",
    "arch.univariate.mean.ConstantMean",
    "arch.univariate.volatility.EWMAVariance",
    "arch.univariate.volatility.RiskMetrics2006",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_optimization_options": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.warnings",
    "arch.univariate.mean.arch_model",
    "len"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_output_options": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.sys",
    "arch.univariate.mean.arch_model",
    "io.StringIO",
    "len"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_pandas": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "arch.univariate.mean.LS",
    "arch.univariate.mean.arch_model",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_sample_adjustment": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.mean.arch_model",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_starting_values": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.warnings",
    "arch.univariate.base.ARCHModelResult",
    "arch.univariate.mean.arch_model",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_summary": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.distribution.GeneralizedError",
    "arch.univariate.distribution.SkewStudent",
    "arch.univariate.distribution.StudentsT",
    "arch.univariate.mean.arch_model",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_warnings": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.warnings",
    "arch.univariate.mean.ARX",
    "arch.univariate.mean.HARX",
    "len",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.TestMeanModel.test_zero_mean": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.univariate.base.ARCHModelForecast",
    "arch.univariate.distribution.Normal",
    "arch.univariate.mean.ZeroMean",
    "arch.univariate.volatility.ConstantVariance",
    "arch.univariate.volatility.GARCH",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.empty",
    "numpy.float64",
    "numpy.mean",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "pandas.DataFrame",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.ZeroMean": {
  "data": {
   "shadows": "arch.univariate.mean.ZeroMean"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean._align_forecast": {
  "data": {
   "shadows": "arch.univariate.base._align_forecast"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.arch_model": {
  "data": {
   "shadows": "arch.univariate.mean.arch_model"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.matplotlib.pyplot": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.rec": {
  "data": {
   "shadows": "arch.univariate.recursions_python"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.simulated_data": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.pytest",
    "arch.univariate.distribution.Normal",
    "arch.univariate.mean.ZeroMean",
    "arch.univariate.volatility.GARCH",
    "numpy.array",
    "numpy.asarray",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.smlm": {
  "data": {
   "shadows": "statsmodels.regression.linear_model"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.smtools": {
  "data": {
   "shadows": "statsmodels.tools"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_mean.test_arch_lm": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.simulated_data",
    "arch.univariate.mean.ZeroMean",
    "arch.univariate.volatility.GARCH",
    "int",
    "len",
    "numpy.ceil",
    "numpy.power",
    "numpy.testing.assert_almost_equal",
    "pandas.Series",
    "pandas.concat",
    "range",
    "scipy.stats.chi2",
    "statsmodels.regression.linear_model.OLS",
    "statsmodels.tools.add_constant"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.test_autoscale": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.pytest",
    "arch.univariate.distribution.Normal",
    "arch.univariate.mean.arch_model",
    "arch.utility.exceptions.DataScaleWarning",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.test_backcast": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.pytest",
    "arch.tests.univariate.test_mean.simulated_data",
    "arch.univariate.mean.ZeroMean",
    "arch.univariate.volatility.ConstantVariance",
    "arch.univariate.volatility.EGARCH",
    "arch.univariate.volatility.EWMAVariance",
    "arch.univariate.volatility.GARCH",
    "arch.univariate.volatility.HARCH",
    "arch.univariate.volatility.RiskMetrics2006",
    "numpy.asarray",
    "numpy.exp",
    "numpy.testing.assert_array_almost_equal",
    "volatility"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.test_backcast_error": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.pytest",
    "arch.tests.univariate.test_mean.simulated_data",
    "arch.univariate.mean.ZeroMean",
    "arch.univariate.volatility.GARCH",
    "arch.univariate.volatility.RiskMetrics2006",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.test_fit_smoke": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "arch.tests.univariate.test_mean.DISPLAY",
    "arch.tests.univariate.test_mean.pytest",
    "arch.tests.univariate.test_mean.simulated_data",
    "arch.univariate.mean.ZeroMean",
    "arch.univariate.volatility.ConstantVariance",
    "arch.univariate.volatility.EGARCH",
    "arch.univariate.volatility.EWMAVariance",
    "arch.univariate.volatility.FIGARCH",
    "arch.univariate.volatility.GARCH",
    "arch.univariate.volatility.HARCH",
    "arch.univariate.volatility.MIDASHyperbolic",
    "arch.univariate.volatility.RiskMetrics2006",
    "volatility"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_mean.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_recursions": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "arch.tests.univariate.test_recursions.missing_extension",
    "arch.tests.univariate.test_recursions.os",
    "arch.tests.univariate.test_recursions.pytest",
    "arch.univariate.recursions",
    "arch.univariate.recursions_python"
   ]
  },
  "type": "module"
 },
 "arch.tests.univariate.test_recursions.CYTHON_COVERAGE": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "arch.tests.univariate.test_recursions.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_recursions.TestRecursions": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.setup_class": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "classmethod",
    "numpy.array",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_arch": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.rec",
    "arch.univariate.recursions_python.arch_recursion",
    "arch.univariate.recursions_python.arch_recursion_python",
    "numpy.all",
    "numpy.array",
    "numpy.inf",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_bounds": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.rec",
    "arch.univariate.recursions_python.arch_recursion",
    "arch.univariate.recursions_python.garch_recursion",
    "arch.univariate.recursions_python.harch_recursion",
    "numpy.all",
    "numpy.array",
    "numpy.int32",
    "numpy.sign",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_egarch": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.rec",
    "arch.univariate.recursions_python.egarch_recursion",
    "arch.univariate.recursions_python.egarch_recursion_python",
    "numpy.abs",
    "numpy.all",
    "numpy.array",
    "numpy.empty_like",
    "numpy.exp",
    "numpy.inf",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_egarch_performance": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.CYTHON_COVERAGE",
    "arch.tests.univariate.test_recursions.Timer",
    "arch.tests.univariate.test_recursions.missing_extension",
    "arch.tests.univariate.test_recursions.missing_numba",
    "arch.tests.univariate.test_recursions.pytest"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_figarch_performance": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.CYTHON_COVERAGE",
    "arch.tests.univariate.test_recursions.Timer",
    "arch.tests.univariate.test_recursions.missing_extension",
    "arch.tests.univariate.test_recursions.missing_numba",
    "arch.tests.univariate.test_recursions.pytest"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_figarch_recursion": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.rec",
    "arch.univariate.recursions_python.figarch_recursion",
    "arch.univariate.recursions_python.figarch_recursion_python",
    "max",
    "numpy.array",
    "numpy.empty_like",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_figarch_weights": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.rec",
    "numpy.array",
    "numpy.empty_like",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_garch": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.rec",
    "arch.univariate.recursions_python.garch_recursion",
    "arch.univariate.recursions_python.garch_recursion_python",
    "numpy.all",
    "numpy.array",
    "numpy.inf",
    "numpy.sign",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_garch_arch": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.rec",
    "numpy.array",
    "numpy.sign",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_garch_direct": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.rec",
    "numpy.abs",
    "numpy.array",
    "numpy.sign",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_garch_no_o": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.rec",
    "arch.univariate.recursions_python.garch_recursion",
    "numpy.array",
    "numpy.sign",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_garch_no_p": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.rec",
    "arch.univariate.recursions_python.garch_recursion",
    "numpy.array",
    "numpy.sign",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_garch_no_q": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.rec",
    "arch.univariate.recursions_python.garch_recursion",
    "numpy.array",
    "numpy.sign",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_garch_performance": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.CYTHON_COVERAGE",
    "arch.tests.univariate.test_recursions.Timer",
    "arch.tests.univariate.test_recursions.missing_extension",
    "arch.tests.univariate.test_recursions.missing_numba",
    "arch.tests.univariate.test_recursions.pytest"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_garch_power_1": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.rec",
    "arch.univariate.recursions_python.garch_recursion",
    "numpy.abs",
    "numpy.array",
    "numpy.sign",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_harch": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.rec",
    "arch.univariate.recursions_python.harch_recursion",
    "arch.univariate.recursions_python.harch_recursion_python",
    "numpy.all",
    "numpy.array",
    "numpy.inf",
    "numpy.int32",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_harch_performance": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.CYTHON_COVERAGE",
    "arch.tests.univariate.test_recursions.Timer",
    "arch.tests.univariate.test_recursions.missing_extension",
    "arch.tests.univariate.test_recursions.missing_numba",
    "arch.tests.univariate.test_recursions.pytest"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_midas_hyperbolic": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.rec",
    "arch.univariate.recursions_python.midas_recursion",
    "arch.univariate.recursions_python.midas_recursion_python",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.inf",
    "numpy.testing.assert_almost_equal",
    "scipy.special.gamma"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.TestRecursions.test_midas_performance": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.CYTHON_COVERAGE",
    "arch.tests.univariate.test_recursions.Timer",
    "arch.tests.univariate.test_recursions.missing_extension",
    "arch.tests.univariate.test_recursions.missing_numba",
    "arch.tests.univariate.test_recursions.pytest"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.Timer": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.tests.univariate.test_recursions.Timer.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.Timer.display": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "len",
    "print"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.Timer.time": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "arch.tests.univariate.test_recursions.timeit",
    "min"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_recursions.gamma": {
  "data": {
   "shadows": "scipy.special.gamma"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_recursions.missing_extension": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "arch.tests.univariate.test_recursions.missing_numba": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "arch.tests.univariate.test_recursions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_recursions.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_recursions.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_recursions.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_recursions.pytestmark": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "arch.tests.univariate.test_recursions.rec": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "arch.tests.univariate.test_recursions.rec_cython": {
  "data": {
   "shadows": "arch.univariate.recursions"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_recursions.recpy": {
  "data": {
   "shadows": "arch.univariate.recursions_python"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_recursions.test_bounds_check": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "arch.univariate.recursions_python.bounds_check_python",
    "numpy.array",
    "numpy.inf",
    "numpy.log",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_recursions.timeit": {
  "data": {
   "shadows": "timeit"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "arch.tests.univariate.test_variance_forecasting.PreservedState"
   ]
  },
  "type": "module"
 },
 "arch.tests.univariate.test_variance_forecasting.BootstrapRng": {
  "data": {
   "shadows": "arch.univariate.volatility.BootstrapRng"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.ConstantMean": {
  "data": {
   "shadows": "arch.univariate.mean.ConstantMean"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.ConstantVariance": {
  "data": {
   "shadows": "arch.univariate.volatility.ConstantVariance"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.EGARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.EGARCH"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.EWMAVariance": {
  "data": {
   "shadows": "arch.univariate.volatility.EWMAVariance"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.FIGARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.FIGARCH"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.FixedVariance": {
  "data": {
   "shadows": "arch.univariate.volatility.FixedVariance"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.GARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.GARCH"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.HARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.HARCH"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.MIDASHyperbolic": {
  "data": {
   "shadows": "arch.univariate.volatility.MIDASHyperbolic"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.Normal": {
  "data": {
   "shadows": "arch.univariate.distribution.Normal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.PreservedState": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.tests.univariate.test_variance_forecasting.PreservedState.__enter__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.PreservedState.__exit__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.PreservedState.__init__": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.RiskMetrics2006": {
  "data": {
   "shadows": "arch.univariate.volatility.RiskMetrics2006"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.StudentsT": {
  "data": {
   "shadows": "arch.univariate.distribution.StudentsT"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.TestBootstrapRng": {
  "data": {
   "lineno": 1598,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "arch.tests.univariate.test_variance_forecasting.TestBootstrapRng.setup_class": {
  "data": {
   "lineno": 1599,
   "symbols_in_volume": [
    "classmethod",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestBootstrapRng.test_bootstrap_rng": {
  "data": {
   "lineno": 1631,
   "symbols_in_volume": [
    "TypeError",
    "arch.tests.univariate.test_variance_forecasting.pytest",
    "arch.univariate.volatility.BootstrapRng",
    "numpy.arange",
    "numpy.max",
    "numpy.random.RandomState",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestBootstrapRng.test_bs_rng": {
  "data": {
   "lineno": 1603,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.volatility.BootstrapRng",
    "numpy.floor",
    "numpy.int64",
    "numpy.testing.assert_allclose",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestBootstrapRng.test_bs_rng_errors": {
  "data": {
   "lineno": 1619,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "arch.tests.univariate.test_variance_forecasting.pytest",
    "arch.univariate.volatility.BootstrapRng",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.setup_class": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "classmethod",
    "numpy.random.RandomState",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_arch_1_forecast": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "arch.univariate.volatility.GARCH",
    "numpy.all",
    "numpy.array",
    "numpy.empty",
    "numpy.isfinite",
    "numpy.isnan",
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_arch_1_forecast_bootstrap": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.volatility.GARCH",
    "numpy.all",
    "numpy.array",
    "numpy.floor",
    "numpy.int64",
    "numpy.isnan",
    "numpy.nan",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_arch_1_forecast_simulation": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.GARCH",
    "numpy.all",
    "numpy.array",
    "numpy.isnan",
    "numpy.nan",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_arch_2_forecast": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting._simple_direct_gjrgarch_forecaster",
    "arch.univariate.volatility.GARCH",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_constant_variance_bootstrap": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.volatility.ConstantVariance",
    "numpy.all",
    "numpy.array",
    "numpy.empty",
    "numpy.floor",
    "numpy.int64",
    "numpy.isnan",
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_constant_variance_forecast": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_variance_forecasting.pytest",
    "arch.univariate.volatility.ConstantVariance",
    "numpy.all",
    "numpy.array",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_constant_variance_simulation": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.ConstantVariance",
    "numpy.all",
    "numpy.array",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.isnan",
    "numpy.nan",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_egarch_101_forecast": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.EGARCH",
    "numpy.abs",
    "numpy.array",
    "numpy.empty",
    "numpy.empty_like",
    "numpy.exp",
    "numpy.floor",
    "numpy.inf",
    "numpy.int64",
    "numpy.log",
    "numpy.nan",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_egarch_111_forecast": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.tests.univariate.test_variance_forecasting.pytest",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.EGARCH",
    "numpy.abs",
    "numpy.array",
    "numpy.empty",
    "numpy.empty_like",
    "numpy.exp",
    "numpy.floor",
    "numpy.inf",
    "numpy.int64",
    "numpy.log",
    "numpy.nan",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_egarch_211_forecast": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.EGARCH",
    "numpy.abs",
    "numpy.array",
    "numpy.empty",
    "numpy.empty_like",
    "numpy.exp",
    "numpy.floor",
    "numpy.inf",
    "numpy.int64",
    "numpy.log",
    "numpy.nan",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_egarch_212_forecast_smoke": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.EGARCH",
    "numpy.abs",
    "numpy.array",
    "numpy.empty",
    "numpy.empty_like",
    "numpy.exp",
    "numpy.floor",
    "numpy.inf",
    "numpy.int64",
    "numpy.log",
    "numpy.nan",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_ewma_bootstrap": {
  "data": {
   "lineno": 1343,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.EWMAVariance",
    "numpy.all",
    "numpy.array",
    "numpy.empty",
    "numpy.empty_like",
    "numpy.floor",
    "numpy.int",
    "numpy.isfinite",
    "numpy.isnan",
    "numpy.nan",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_ewma_forecast": {
  "data": {
   "lineno": 1260,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting._compare_truncated_forecasts",
    "arch.univariate.volatility.EWMAVariance",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_ewma_simulation": {
  "data": {
   "lineno": 1288,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.EWMAVariance",
    "numpy.all",
    "numpy.array",
    "numpy.empty",
    "numpy.isfinite",
    "numpy.isnan",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_figarch_analytical": {
  "data": {
   "lineno": 1488,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_variance_forecasting._simple_direct_gjrgarch_forecaster",
    "arch.tests.univariate.test_variance_forecasting.pytest",
    "arch.univariate.recursions.figarch_weights",
    "arch.univariate.volatility.FIGARCH",
    "numpy.array",
    "numpy.r_",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_figarch_simulation": {
  "data": {
   "lineno": 1508,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions.figarch_weights",
    "arch.univariate.volatility.FIGARCH",
    "arch.univariate.volatility.GARCH",
    "numpy.array",
    "numpy.r_",
    "numpy.testing.assert_allclose",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_fixed_variance": {
  "data": {
   "lineno": 1564,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.FixedVariance",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.isnan",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_garch11_bootstrap": {
  "data": {
   "lineno": 1148,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.volatility.GARCH",
    "numpy.all",
    "numpy.array",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.floor",
    "numpy.inf",
    "numpy.int64",
    "numpy.isnan",
    "numpy.nan",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_garch11_simulation": {
  "data": {
   "lineno": 1069,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.GARCH",
    "numpy.all",
    "numpy.array",
    "numpy.isnan",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_garch_11_forecast": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting._simple_direct_gjrgarch_forecaster",
    "arch.univariate.volatility.GARCH",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_garch_12_forecast": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting._simple_direct_gjrgarch_forecaster",
    "arch.univariate.volatility.GARCH",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_garch_21_forecast": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting._simple_direct_gjrgarch_forecaster",
    "arch.univariate.volatility.GARCH",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_garch_22_forecast": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting._simple_direct_gjrgarch_forecaster",
    "arch.univariate.volatility.GARCH",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_gjrgarch222_simulation": {
  "data": {
   "lineno": 1198,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.GARCH",
    "numpy.array",
    "numpy.concatenate",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_gjrgarch_111_forecast": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting._simple_direct_gjrgarch_forecaster",
    "arch.univariate.volatility.GARCH",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_harch_forecast": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting._simple_direct_gjrgarch_forecaster",
    "arch.univariate.volatility.HARCH",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_harch_forecast_bootstrap": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.HARCH",
    "numpy.array",
    "numpy.empty",
    "numpy.empty_like",
    "numpy.floor",
    "numpy.int64",
    "numpy.nan",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_harch_forecast_simulation": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.HARCH",
    "numpy.array",
    "numpy.empty",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_midas_analytical": {
  "data": {
   "lineno": 1439,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting._simple_direct_gjrgarch_forecaster",
    "arch.univariate.volatility.MIDASHyperbolic",
    "numpy.array",
    "numpy.r_",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_midas_asym_analytical": {
  "data": {
   "lineno": 1452,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting._simple_direct_gjrgarch_forecaster",
    "arch.univariate.volatility.MIDASHyperbolic",
    "numpy.array",
    "numpy.r_",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_midas_asym_simulation": {
  "data": {
   "lineno": 1531,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.GARCH",
    "arch.univariate.volatility.MIDASHyperbolic",
    "numpy.array",
    "numpy.r_",
    "numpy.testing.assert_allclose",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_midas_bootstrap_smoke": {
  "data": {
   "lineno": 1554,
   "symbols_in_volume": [
    "arch.univariate.volatility.MIDASHyperbolic",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_midas_simulation": {
  "data": {
   "lineno": 1465,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.GARCH",
    "arch.univariate.volatility.MIDASHyperbolic",
    "numpy.array",
    "numpy.r_",
    "numpy.testing.assert_allclose",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_rm2006_bootstrap_smoke": {
  "data": {
   "lineno": 1429,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.volatility.RiskMetrics2006",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_rm2006_forecast": {
  "data": {
   "lineno": 1397,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting._compare_truncated_forecasts",
    "arch.univariate.volatility.RiskMetrics2006",
    "numpy.array",
    "numpy.empty_like",
    "numpy.inf",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_rm2006_simulation_smoke": {
  "data": {
   "lineno": 1417,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.RiskMetrics2006",
    "numpy.array",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_tarch_111_forecast": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_variance_forecasting.pytest",
    "arch.univariate.volatility.GARCH",
    "numpy.abs",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_tarch_111_forecast_bootstrap": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.tests.univariate.test_variance_forecasting.pytest",
    "arch.univariate.distribution.StudentsT",
    "arch.univariate.volatility.GARCH",
    "numpy.abs",
    "numpy.array",
    "numpy.floor",
    "numpy.int",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.TestVarianceForecasts.test_tarch_111_forecast_simulation": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "arch.tests.univariate.test_variance_forecasting.preserved_state",
    "arch.univariate.distribution.StudentsT",
    "arch.univariate.volatility.GARCH",
    "numpy.abs",
    "numpy.array",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting._compare_truncated_forecasts": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.isnan",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting._simple_direct_gjrgarch_forecaster": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "arch.univariate.recursions_python.garch_recursion",
    "max",
    "numpy.empty",
    "numpy.sign",
    "numpy.sqrt",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_variance_forecasting.arch_model": {
  "data": {
   "shadows": "arch.univariate.arch_model"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.figarch_weights": {
  "data": {
   "shadows": "arch.univariate.recursions.figarch_weights"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.garch_recursion": {
  "data": {
   "shadows": "arch.univariate.recursions_python.garch_recursion"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.preserved_state": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "arch.tests.univariate.test_variance_forecasting.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_variance_forecasting.test_external_rng": {
  "data": {
   "lineno": 1648,
   "symbols_in_volume": [
    "arch.univariate.arch_model",
    "arch.univariate.distribution.Normal",
    "arch.univariate.mean.ConstantMean",
    "arch.univariate.volatility.GARCH",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "pandas.date_range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "arch.tests.univariate.test_volatility.pytest",
    "arch.univariate.recursions",
    "arch.univariate.recursions_python"
   ]
  },
  "type": "module"
 },
 "arch.tests.univariate.test_volatility.ARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.ARCH"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.ConstantVariance": {
  "data": {
   "shadows": "arch.univariate.volatility.ConstantVariance"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.EGARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.EGARCH"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.EWMAVariance": {
  "data": {
   "shadows": "arch.univariate.volatility.EWMAVariance"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.FIGARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.FIGARCH"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.FixedVariance": {
  "data": {
   "shadows": "arch.univariate.volatility.FixedVariance"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.GARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.GARCH"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.HARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.HARCH"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.InitialValueWarning": {
  "data": {
   "shadows": "arch.utility.exceptions.InitialValueWarning"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.MIDASHyperbolic": {
  "data": {
   "shadows": "arch.univariate.volatility.MIDASHyperbolic"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.Normal": {
  "data": {
   "shadows": "arch.univariate.distribution.Normal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.RiskMetrics2006": {
  "data": {
   "shadows": "arch.univariate.volatility.RiskMetrics2006"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.SkewStudent": {
  "data": {
   "shadows": "arch.univariate.distribution.SkewStudent"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.StudentsT": {
  "data": {
   "shadows": "arch.univariate.distribution.StudentsT"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.setup_class": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "classmethod",
    "numpy.random.RandomState",
    "numpy.var",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_arch": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions.arch_recursion",
    "arch.univariate.volatility.ARCH",
    "hex",
    "id",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.eye",
    "numpy.mean",
    "numpy.ones_like",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.vstack",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_arch_harch": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "arch.univariate.volatility.ARCH",
    "arch.univariate.volatility.HARCH",
    "hex",
    "id",
    "isinstance",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros_like",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_arch_multiple_lags": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions.arch_recursion",
    "arch.univariate.volatility.ARCH",
    "numpy.array",
    "numpy.eye",
    "numpy.mean",
    "numpy.ones_like",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.vstack",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_constant_variance": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.ConstantVariance",
    "hex",
    "id",
    "isinstance",
    "numpy.array",
    "numpy.eye",
    "numpy.mean",
    "numpy.ones_like",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_egarch": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_volatility.pytest",
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions.egarch_recursion",
    "arch.univariate.volatility.EGARCH",
    "arch.utility.exceptions.InitialValueWarning",
    "hex",
    "id",
    "isinstance",
    "len",
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.empty",
    "numpy.exp",
    "numpy.inf",
    "numpy.log",
    "numpy.mean",
    "numpy.ones_like",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.vstack",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_egarch_100": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions.egarch_recursion",
    "arch.univariate.volatility.EGARCH",
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.empty",
    "numpy.exp",
    "numpy.log",
    "numpy.ones_like",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_errors": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_volatility.pytest",
    "arch.univariate.volatility.EWMAVariance",
    "arch.univariate.volatility.GARCH",
    "arch.univariate.volatility.RiskMetrics2006"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_ewma": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions.garch_recursion",
    "arch.univariate.volatility.EWMAVariance",
    "hex",
    "id",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.ones_like",
    "numpy.sign",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_ewma_estimated": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions.garch_recursion",
    "arch.univariate.volatility.EWMAVariance",
    "hex",
    "id",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "numpy.ones_like",
    "numpy.sign",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_figarch": {
  "data": {
   "lineno": 1190,
   "symbols_in_volume": [
    "arch.tests.univariate.test_volatility.pytest",
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions.figarch_weights",
    "arch.univariate.recursions_python.figarch_recursion_python",
    "arch.univariate.volatility.FIGARCH",
    "arch.utility.exceptions.InitialValueWarning",
    "hex",
    "id",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.mean",
    "numpy.ones_like",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_figarch_edge_cases": {
  "data": {
   "lineno": 1360,
   "symbols_in_volume": [
    "arch.univariate.volatility.FIGARCH",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_figarch_errors": {
  "data": {
   "lineno": 1346,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.univariate.test_volatility.pytest",
    "arch.univariate.volatility.FIGARCH"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_figarch_no_beta": {
  "data": {
   "lineno": 1299,
   "symbols_in_volume": [
    "arch.univariate.volatility.FIGARCH",
    "len",
    "numpy.array",
    "numpy.mean",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_figarch_no_phi": {
  "data": {
   "lineno": 1274,
   "symbols_in_volume": [
    "arch.univariate.volatility.FIGARCH",
    "len",
    "numpy.array",
    "numpy.mean",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_figarch_no_phi_beta": {
  "data": {
   "lineno": 1323,
   "symbols_in_volume": [
    "arch.univariate.volatility.FIGARCH",
    "len",
    "numpy.abs",
    "numpy.array",
    "numpy.mean",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_figarch_str": {
  "data": {
   "lineno": 1366,
   "symbols_in_volume": [
    "arch.tests.univariate.test_volatility.pytest",
    "arch.univariate.volatility.FIGARCH",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_fixed_variance": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "arch.tests.univariate.test_volatility.pytest",
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.FixedVariance",
    "numpy.arange",
    "numpy.array",
    "numpy.empty",
    "numpy.empty_like",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_garch": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions.garch_recursion",
    "arch.univariate.volatility.GARCH",
    "hex",
    "id",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.eye",
    "numpy.mean",
    "numpy.ones_like",
    "numpy.sign",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.vstack",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_garch_many_lags": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "arch.univariate.volatility.GARCH",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_garch_no_lagged_vol": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions.garch_recursion",
    "arch.univariate.volatility.GARCH",
    "numpy.array",
    "numpy.eye",
    "numpy.mean",
    "numpy.ones_like",
    "numpy.sign",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.vstack",
    "numpy.zeros",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_garch_no_symmetric": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions.garch_recursion",
    "arch.univariate.volatility.GARCH",
    "numpy.array",
    "numpy.eye",
    "numpy.mean",
    "numpy.ones_like",
    "numpy.sign",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.vstack",
    "numpy.zeros",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_garch_power": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions.garch_recursion",
    "arch.univariate.volatility.GARCH",
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.eye",
    "numpy.mean",
    "numpy.ones_like",
    "numpy.sign",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.vstack",
    "numpy.zeros",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_harch": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions.harch_recursion",
    "arch.univariate.volatility.HARCH",
    "hex",
    "id",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.eye",
    "numpy.int32",
    "numpy.mean",
    "numpy.ones_like",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.vstack",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_harch_scalar": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "arch.univariate.volatility.HARCH",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_midas_asymmetric": {
  "data": {
   "lineno": 1102,
   "symbols_in_volume": [
    "arch.tests.univariate.test_volatility.pytest",
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions_python.midas_recursion_python",
    "arch.univariate.volatility.MIDASHyperbolic",
    "arch.utility.exceptions.InitialValueWarning",
    "hex",
    "id",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.exp",
    "numpy.mean",
    "numpy.ones_like",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "scipy.special.gamma",
    "scipy.special.gammaln",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_midas_symmetric": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "arch.tests.univariate.test_volatility.pytest",
    "arch.univariate.distribution.Normal",
    "arch.univariate.recursions_python.midas_recursion_python",
    "arch.univariate.volatility.MIDASHyperbolic",
    "arch.utility.exceptions.InitialValueWarning",
    "hex",
    "id",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.mean",
    "numpy.ones_like",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "scipy.special.gamma",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_model_names": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "arch.univariate.volatility.GARCH",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_riskmetrics": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "arch.univariate.volatility.RiskMetrics2006",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.ndarray",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_warnings_nonstationary": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "UserWarning",
    "arch.tests.univariate.test_volatility.pytest",
    "arch.tests.univariate.test_volatility.warnings",
    "arch.univariate.distribution.StudentsT",
    "arch.univariate.volatility.GARCH",
    "arch.utility.exceptions.InitialValueWarning",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_warnings_nonstationary_garch": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "arch.tests.univariate.test_volatility.pytest",
    "arch.univariate.distribution.SkewStudent",
    "arch.univariate.volatility.GARCH",
    "arch.utility.exceptions.InitialValueWarning",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.TestVolatiltyProcesses.test_warnings_nonstationary_harch": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "arch.tests.univariate.test_volatility.pytest",
    "arch.univariate.distribution.StudentsT",
    "arch.univariate.volatility.HARCH",
    "arch.utility.exceptions.InitialValueWarning",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.gamma": {
  "data": {
   "shadows": "scipy.special.gamma"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.gammaln": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.pytestmark": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "arch.tests.univariate.test_volatility.rec": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "arch.tests.univariate.test_volatility.recpy": {
  "data": {
   "shadows": "arch.univariate.recursions_python"
  },
  "type": "import"
 },
 "arch.tests.univariate.test_volatility.test_figarch_weights": {
  "data": {
   "lineno": 1379,
   "symbols_in_volume": [
    "arch.univariate.recursions.figarch_weights",
    "arch.univariate.recursions_python.figarch_weights",
    "arch.univariate.recursions_python.figarch_weights_python",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "arch.tests.univariate.test_volatility.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "arch.tests.utility": {
  "data": {},
  "type": "module"
 },
 "arch.tests.utility.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "arch.tests.utility.test_array": {
  "data": {},
  "type": "module"
 },
 "arch.tests.utility.test_array.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.DocStringInheritor": {
  "data": {
   "shadows": "arch.utility.array.DocStringInheritor"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.TestDoc": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "arch.tests.utility.test_array.os",
    "arch.tests.utility.test_array.pytest",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "arch.tests.utility.test_array.TestDoc.test_doc": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "arch.doc"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_array.TestUtils": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "arch.tests.utility.test_array.TestUtils.setup_class": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "classmethod",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_array.TestUtils.test_": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "arch.utility.array.date_to_index",
    "numpy.arange",
    "numpy.testing.assert_equal",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_array.TestUtils.test_cutoff_to_index": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "arch.utility.array.cutoff_to_index",
    "int",
    "numpy.arange",
    "numpy.int16",
    "numpy.int64",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_array.TestUtils.test_date_to_index": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.utility.test_array.pytest",
    "arch.utility.array.date_to_index",
    "datetime.date",
    "datetime.datetime",
    "numpy.arange",
    "numpy.testing.assert_equal",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_array.TestUtils.test_date_to_index_timestamp": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "arch.utility.array.date_to_index",
    "numpy.arange",
    "numpy.testing.assert_equal",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_array.TestUtils.test_docstring_inheritor": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_array.TestUtils.test_docstring_inheritor.A": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "arch.utility.array.DocStringInheritor",
    "object"
   ]
  },
  "type": "class"
 },
 "arch.tests.utility.test_array.TestUtils.test_docstring_inheritor.B": {
  "data": {
   "lineno": 122
  },
  "type": "class"
 },
 "arch.tests.utility.test_array.TestUtils.test_ensure1d": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.utility.test_array.pytest",
    "arch.utility.array.ensure1d",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.ndarray",
    "numpy.reshape",
    "numpy.testing.assert_equal",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_array.TestUtils.test_ensure2d": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "arch.tests.utility.test_array.pytest",
    "arch.utility.array.ensure2d",
    "isinstance",
    "numpy.array",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_array.TestUtils.test_find_index": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.utility.test_array.pytest",
    "arch.utility.array.find_index",
    "len",
    "numpy.arange",
    "numpy.datetime64",
    "numpy.testing.assert_equal",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_array.TestUtils.test_implicit_constant": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "arch.univariate.base.implicit_constant"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_array.TestUtils.test_parse_dataframe": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "arch.utility.array.parse_dataframe",
    "isinstance",
    "numpy.arange",
    "numpy.ndarray",
    "numpy.testing.assert_equal",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_array.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.cutoff_to_index": {
  "data": {
   "shadows": "arch.utility.array.cutoff_to_index"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.date_to_index": {
  "data": {
   "shadows": "arch.utility.array.date_to_index"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.doc": {
  "data": {
   "shadows": "arch.doc"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.dt": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.ensure1d": {
  "data": {
   "shadows": "arch.utility.array.ensure1d"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.ensure2d": {
  "data": {
   "shadows": "arch.utility.array.ensure2d"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.find_index": {
  "data": {
   "shadows": "arch.utility.array.find_index"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.implicit_constant": {
  "data": {
   "shadows": "arch.univariate.base.implicit_constant"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.parse_dataframe": {
  "data": {
   "shadows": "arch.utility.array.parse_dataframe"
  },
  "type": "import"
 },
 "arch.tests.utility.test_array.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.utility.test_cov": {
  "data": {},
  "type": "module"
 },
 "arch.tests.utility.test_cov.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.tests.utility.test_cov.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "arch.tests.utility.test_cov.TestVarNW": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "arch.tests.utility.test_cov.TestVarNW.setup_class": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "arch.compat.statsmodels.dataset_loader",
    "classmethod",
    "numpy.diff",
    "numpy.log",
    "numpy.random.RandomState",
    "statsmodels.datasets.macrodata"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_cov.TestVarNW.test_cov_nw": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "arch.utility.cov_nw",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_cov.TestVarNW.test_cov_nw_2d": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "arch.utility.cov_nw",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_cov.TestVarNW.test_cov_nw_2d_2lags": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "arch.utility.cov_nw",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_cov.TestVarNW.test_cov_nw_axis": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "arch.utility.cov_nw",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_cov.TestVarNW.test_cov_nw_ddof": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "arch.utility.cov_nw",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_cov.TestVarNW.test_cov_nw_no_demean": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "arch.utility.cov_nw",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_cov.TestVarNW.test_errors": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.utility.test_cov.pytest",
    "arch.utility.cov_nw"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_cov.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "arch.tests.utility.test_cov.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "arch.tests.utility.test_cov.cov_nw": {
  "data": {
   "shadows": "arch.utility.cov_nw"
  },
  "type": "import"
 },
 "arch.tests.utility.test_cov.dataset_loader": {
  "data": {
   "shadows": "arch.compat.statsmodels.dataset_loader"
  },
  "type": "import"
 },
 "arch.tests.utility.test_cov.diff": {
  "data": {
   "shadows": "numpy.diff"
  },
  "type": "import"
 },
 "arch.tests.utility.test_cov.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "arch.tests.utility.test_cov.log": {
  "data": {
   "shadows": "numpy.log"
  },
  "type": "import"
 },
 "arch.tests.utility.test_cov.macrodata": {
  "data": {
   "shadows": "statsmodels.datasets.macrodata"
  },
  "type": "import"
 },
 "arch.tests.utility.test_cov.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.utility.test_timeseries": {
  "data": {},
  "type": "module"
 },
 "arch.tests.utility.test_timeseries.ColumnNameConflict": {
  "data": {
   "shadows": "arch.utility.timeseries.ColumnNameConflict"
  },
  "type": "import"
 },
 "arch.tests.utility.test_timeseries.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.tests.utility.test_timeseries.TestAddTrend": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "arch.tests.utility.test_timeseries.TestAddTrend.setup_class": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "classmethod",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_timeseries.TestAddTrend.test_add_time_trend_dataframe": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "arch.utility.timeseries.add_trend",
    "numpy.arange",
    "numpy.asarray",
    "numpy.testing.assert_array_almost_equal",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_timeseries.TestAddTrend.test_add_trend_c": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "arch.utility.timeseries.add_trend",
    "numpy.all",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_timeseries.TestAddTrend.test_add_trend_ct": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "arch.utility.timeseries.add_trend",
    "numpy.all",
    "numpy.diff",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_timeseries.TestAddTrend.test_add_trend_ctt": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "arch.utility.timeseries.add_trend",
    "numpy.all",
    "numpy.arange",
    "numpy.diff",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_timeseries.TestAddTrend.test_add_trend_duplicate_name": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "arch.tests.utility.test_timeseries.warnings",
    "arch.utility.timeseries.ColumnNameConflict",
    "arch.utility.timeseries.add_trend",
    "len",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_timeseries.TestAddTrend.test_add_trend_no_input": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "arch.utility.timeseries.add_trend",
    "numpy.all",
    "numpy.diff",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_timeseries.TestAddTrend.test_add_trend_prepend": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "arch.utility.timeseries.add_trend",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_timeseries.TestAddTrend.test_add_trend_prepend_dataframe": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "arch.utility.timeseries.add_trend",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_timeseries.TestAddTrend.test_add_trend_t": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "arch.utility.timeseries.add_trend",
    "numpy.diff",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_timeseries.TestAddTrend.test_errors": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError",
    "arch.tests.utility.test_timeseries.pytest",
    "arch.utility.timeseries.add_trend",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_timeseries.TestAddTrend.test_skip_constant": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "arch.utility.timeseries.add_trend",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "arch.tests.utility.test_timeseries.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "arch.tests.utility.test_timeseries.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "arch.tests.utility.test_timeseries.add_trend": {
  "data": {
   "shadows": "arch.utility.timeseries.add_trend"
  },
  "type": "import"
 },
 "arch.tests.utility.test_timeseries.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "arch.tests.utility.test_timeseries.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "arch.tests.utility.test_timeseries.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "arch.tests.utility.test_timeseries.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "arch.tests.utility.test_timeseries.assert_produces_warning": {
  "data": {
   "shadows": "pandas.util.testing.assert_produces_warning"
  },
  "type": "import"
 },
 "arch.tests.utility.test_timeseries.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "arch.tests.utility.test_timeseries.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.tests.utility.test_timeseries.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.tests.utility.test_timeseries.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.tests.utility.test_timeseries.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "arch.unitroot": {
  "data": {},
  "type": "module"
 },
 "arch.unitroot.ADF": {
  "data": {
   "shadows": "arch.unitroot.unitroot.ADF"
  },
  "type": "import"
 },
 "arch.unitroot.DFGLS": {
  "data": {
   "shadows": "arch.unitroot.unitroot.DFGLS"
  },
  "type": "import"
 },
 "arch.unitroot.KPSS": {
  "data": {
   "shadows": "arch.unitroot.unitroot.KPSS"
  },
  "type": "import"
 },
 "arch.unitroot.PhillipsPerron": {
  "data": {
   "shadows": "arch.unitroot.unitroot.PhillipsPerron"
  },
  "type": "import"
 },
 "arch.unitroot.VarianceRatio": {
  "data": {
   "shadows": "arch.unitroot.unitroot.VarianceRatio"
  },
  "type": "import"
 },
 "arch.unitroot.ZivotAndrews": {
  "data": {
   "shadows": "arch.unitroot.unitroot.ZivotAndrews"
  },
  "type": "import"
 },
 "arch.unitroot.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "arch.unitroot.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "arch.unitroot.auto_bandwidth": {
  "data": {
   "shadows": "arch.unitroot.unitroot.auto_bandwidth"
  },
  "type": "import"
 },
 "arch.unitroot.critical_values": {
  "data": {},
  "type": "module"
 },
 "arch.unitroot.critical_values.dfgls": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "arch.unitroot.critical_values.dfgls.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "arch.unitroot.critical_values.dfgls.dfgls_cv_approx": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dfgls.dfgls_large_p": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dfgls.dfgls_small_p": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dfgls.dfgls_tau_max": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dfgls.dfgls_tau_min": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dfgls.dfgls_tau_star": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dickey_fuller": {
  "data": {
   "symbols_in_volume": [
    "arch.unitroot.critical_values.dickey_fuller.adf_z_large_p",
    "arch.unitroot.critical_values.dickey_fuller.adf_z_large_p_scale",
    "arch.unitroot.critical_values.dickey_fuller.large_scaling",
    "arch.unitroot.critical_values.dickey_fuller.small_scaling",
    "arch.unitroot.critical_values.dickey_fuller.tau_2010",
    "arch.unitroot.critical_values.dickey_fuller.tau_large_p",
    "arch.unitroot.critical_values.dickey_fuller.tau_small_p",
    "numpy.asarray",
    "numpy.inf"
   ]
  },
  "type": "module"
 },
 "arch.unitroot.critical_values.dickey_fuller.adf_z_cv_approx": {
  "data": {
   "lineno": 251
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dickey_fuller.adf_z_large_p": {
  "data": {
   "lineno": 242
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dickey_fuller.adf_z_large_p_scale": {
  "data": {
   "lineno": 247
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dickey_fuller.adf_z_max": {
  "data": {
   "lineno": 224
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dickey_fuller.adf_z_min": {
  "data": {
   "lineno": 228
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dickey_fuller.adf_z_small_p": {
  "data": {
   "lineno": 234
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dickey_fuller.adf_z_star": {
  "data": {
   "lineno": 232
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dickey_fuller.asarray": {
  "data": {
   "shadows": "numpy.asarray"
  },
  "type": "import"
 },
 "arch.unitroot.critical_values.dickey_fuller.inf": {
  "data": {
   "shadows": "numpy.inf"
  },
  "type": "import"
 },
 "arch.unitroot.critical_values.dickey_fuller.large_scaling": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dickey_fuller.small_scaling": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dickey_fuller.tau_2010": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dickey_fuller.tau_large_p": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dickey_fuller.tau_max": {
  "data": {
   "lineno": 218
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dickey_fuller.tau_min": {
  "data": {
   "lineno": 213
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dickey_fuller.tau_small_p": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.dickey_fuller.tau_star": {
  "data": {
   "lineno": 208
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.kpss": {
  "data": {
   "symbols_in_volume": [
    "arch.unitroot.critical_values.kpss.c",
    "arch.unitroot.critical_values.kpss.ct",
    "arch.unitroot.critical_values.kpss.kpss_critical_values",
    "numpy.asarray"
   ]
  },
  "type": "module"
 },
 "arch.unitroot.critical_values.kpss.asarray": {
  "data": {
   "shadows": "numpy.asarray"
  },
  "type": "import"
 },
 "arch.unitroot.critical_values.kpss.c": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.kpss.ct": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.kpss.kpss_critical_values": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.zivot_andrews": {
  "data": {
   "symbols_in_volume": [
    "arch.unitroot.critical_values.zivot_andrews.c",
    "arch.unitroot.critical_values.zivot_andrews.ct",
    "arch.unitroot.critical_values.zivot_andrews.t",
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "arch.unitroot.critical_values.zivot_andrews.__all__": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.zivot_andrews.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "arch.unitroot.critical_values.zivot_andrews.c": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.zivot_andrews.ct": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.zivot_andrews.t": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "arch.unitroot.critical_values.zivot_andrews.za_critical_values": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "arch.unitroot.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "arch.univariate": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "arch.univariate.recursions_python"
   ]
  },
  "type": "module"
 },
 "arch.univariate.ARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.ARCH"
  },
  "type": "import"
 },
 "arch.univariate.ARX": {
  "data": {
   "shadows": "arch.univariate.mean.ARX"
  },
  "type": "import"
 },
 "arch.univariate.ConstantMean": {
  "data": {
   "shadows": "arch.univariate.mean.ConstantMean"
  },
  "type": "import"
 },
 "arch.univariate.ConstantVariance": {
  "data": {
   "shadows": "arch.univariate.volatility.ConstantVariance"
  },
  "type": "import"
 },
 "arch.univariate.Distribution": {
  "data": {
   "shadows": "arch.univariate.distribution.Distribution"
  },
  "type": "import"
 },
 "arch.univariate.EGARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.EGARCH"
  },
  "type": "import"
 },
 "arch.univariate.EWMAVariance": {
  "data": {
   "shadows": "arch.univariate.volatility.EWMAVariance"
  },
  "type": "import"
 },
 "arch.univariate.FIGARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.FIGARCH"
  },
  "type": "import"
 },
 "arch.univariate.FixedVariance": {
  "data": {
   "shadows": "arch.univariate.volatility.FixedVariance"
  },
  "type": "import"
 },
 "arch.univariate.GARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.GARCH"
  },
  "type": "import"
 },
 "arch.univariate.GeneralizedError": {
  "data": {
   "shadows": "arch.univariate.distribution.GeneralizedError"
  },
  "type": "import"
 },
 "arch.univariate.HARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.HARCH"
  },
  "type": "import"
 },
 "arch.univariate.HARX": {
  "data": {
   "shadows": "arch.univariate.mean.HARX"
  },
  "type": "import"
 },
 "arch.univariate.LS": {
  "data": {
   "shadows": "arch.univariate.mean.LS"
  },
  "type": "import"
 },
 "arch.univariate.MIDASHyperbolic": {
  "data": {
   "shadows": "arch.univariate.volatility.MIDASHyperbolic"
  },
  "type": "import"
 },
 "arch.univariate.Normal": {
  "data": {
   "shadows": "arch.univariate.distribution.Normal"
  },
  "type": "import"
 },
 "arch.univariate.RiskMetrics2006": {
  "data": {
   "shadows": "arch.univariate.volatility.RiskMetrics2006"
  },
  "type": "import"
 },
 "arch.univariate.SkewStudent": {
  "data": {
   "shadows": "arch.univariate.distribution.SkewStudent"
  },
  "type": "import"
 },
 "arch.univariate.StudentsT": {
  "data": {
   "shadows": "arch.univariate.distribution.StudentsT"
  },
  "type": "import"
 },
 "arch.univariate.ZeroMean": {
  "data": {
   "shadows": "arch.univariate.mean.ZeroMean"
  },
  "type": "import"
 },
 "arch.univariate.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "arch.univariate.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "arch.univariate.arch_model": {
  "data": {
   "shadows": "arch.univariate.mean.arch_model"
  },
  "type": "import"
 },
 "arch.univariate.distribution": {
  "data": {},
  "type": "module"
 },
 "arch.univariate.distribution.AbstractDocStringInheritor": {
  "data": {
   "shadows": "arch.utility.array.AbstractDocStringInheritor"
  },
  "type": "import"
 },
 "arch.univariate.distribution.Distribution": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "arch.utility.array.AbstractDocStringInheritor",
    "object"
   ]
  },
  "type": "class"
 },
 "arch.univariate.distribution.Distribution.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution.__repr__": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "hex",
    "id"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution.__str__": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution._check_constraints": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.asarray",
    "zip"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution._description": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution._simulator": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution.bounds": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution.cdf": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution.constraints": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution.loglikelihood": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution.parameter_names": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution.ppf": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution.random_state": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution.simulate": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Distribution.starting_values": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.GeneralizedError": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "arch.univariate.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "arch.univariate.distribution.GeneralizedError.__init__": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "arch.univariate.distribution.GeneralizedError",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.GeneralizedError._simulator": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "numpy.sqrt",
    "scipy.special.gamma"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.GeneralizedError.bounds": {
  "data": {
   "lineno": 669
  },
  "type": "function"
 },
 "arch.univariate.distribution.GeneralizedError.cdf": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "numpy.sqrt",
    "scipy.stats.gennorm"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.GeneralizedError.constraints": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.GeneralizedError.loglikelihood": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.exp",
    "numpy.log",
    "numpy.sqrt",
    "numpy.sum",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.GeneralizedError.parameter_names": {
  "data": {
   "lineno": 757
  },
  "type": "function"
 },
 "arch.univariate.distribution.GeneralizedError.ppf": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.sqrt",
    "scipy.stats.gennorm"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.GeneralizedError.simulate": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.GeneralizedError.starting_values": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Normal": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "arch.univariate.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "arch.univariate.distribution.Normal.__init__": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Normal._simulator": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "arch.univariate.distribution.Normal.bounds": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Normal.cdf": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "scipy.stats.norm.cdf"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Normal.constraints": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Normal.loglikelihood": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.pi",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Normal.parameter_names": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "arch.univariate.distribution.Normal.ppf": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "numpy.asarray",
    "scipy.stats.norm.ppf"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.Normal.simulate": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "arch.univariate.distribution.Normal.starting_values": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.univariate.distribution.SkewStudent": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "arch.univariate.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "arch.univariate.distribution.SkewStudent.__const_a": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.SkewStudent.__const_b": {
  "data": {
   "lineno": 572
  },
  "type": "function"
 },
 "arch.univariate.distribution.SkewStudent.__const_c": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.pi",
    "scipy.special.gammaln",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.SkewStudent.__init__": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "arch.univariate.distribution.SkewStudent",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.SkewStudent._simulator": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "scipy.stats.uniform.rvs"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.SkewStudent.bounds": {
  "data": {
   "lineno": 447
  },
  "type": "function"
 },
 "arch.univariate.distribution.SkewStudent.cdf": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.isscalar",
    "numpy.sqrt",
    "scipy.stats.t",
    "tcdf"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.SkewStudent.constraints": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.SkewStudent.loglikelihood": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.log",
    "numpy.sign",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.SkewStudent.parameter_names": {
  "data": {
   "lineno": 551
  },
  "type": "function"
 },
 "arch.univariate.distribution.SkewStudent.ppf": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "numpy.isscalar",
    "numpy.ones_like",
    "numpy.sign",
    "scipy.stats.t.ppf"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.SkewStudent.simulate": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.SkewStudent.starting_values": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "max",
    "numpy.array",
    "scipy.stats.kurtosis"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.StudentsT": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "arch.univariate.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "arch.univariate.distribution.StudentsT.__init__": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "arch.univariate.distribution.StudentsT",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.StudentsT._simulator": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.StudentsT.bounds": {
  "data": {
   "lineno": 318
  },
  "type": "function"
 },
 "arch.univariate.distribution.StudentsT.cdf": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "numpy.sqrt",
    "scipy.stats.t"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.StudentsT.constraints": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.StudentsT.loglikelihood": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.pi",
    "numpy.sum",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.StudentsT.parameter_names": {
  "data": {
   "lineno": 401
  },
  "type": "function"
 },
 "arch.univariate.distribution.StudentsT.ppf": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.sqrt",
    "scipy.stats.t"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.StudentsT.simulate": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.StudentsT.starting_values": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "max",
    "numpy.array",
    "scipy.stats.kurtosis"
   ]
  },
  "type": "function"
 },
 "arch.univariate.distribution.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "arch.univariate.distribution.abs": {
  "data": {
   "shadows": "numpy.abs"
  },
  "type": "import"
 },
 "arch.univariate.distribution.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "arch.univariate.distribution.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "arch.univariate.distribution.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "arch.univariate.distribution.asarray": {
  "data": {
   "shadows": "numpy.asarray"
  },
  "type": "import"
 },
 "arch.univariate.distribution.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "arch.univariate.distribution.empty": {
  "data": {
   "shadows": "numpy.empty"
  },
  "type": "import"
 },
 "arch.univariate.distribution.exp": {
  "data": {
   "shadows": "numpy.exp"
  },
  "type": "import"
 },
 "arch.univariate.distribution.gamma": {
  "data": {
   "shadows": "scipy.special.gamma"
  },
  "type": "import"
 },
 "arch.univariate.distribution.gammaln": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "arch.univariate.distribution.isscalar": {
  "data": {
   "shadows": "numpy.isscalar"
  },
  "type": "import"
 },
 "arch.univariate.distribution.log": {
  "data": {
   "shadows": "numpy.log"
  },
  "type": "import"
 },
 "arch.univariate.distribution.ones_like": {
  "data": {
   "shadows": "numpy.ones_like"
  },
  "type": "import"
 },
 "arch.univariate.distribution.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "arch.univariate.distribution.sign": {
  "data": {
   "shadows": "numpy.sign"
  },
  "type": "import"
 },
 "arch.univariate.distribution.sqrt": {
  "data": {
   "shadows": "numpy.sqrt"
  },
  "type": "import"
 },
 "arch.univariate.distribution.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "arch.univariate.distribution.sum": {
  "data": {
   "shadows": "numpy.sum"
  },
  "type": "import"
 },
 "arch.univariate.mean": {
  "data": {},
  "type": "module"
 },
 "arch.univariate.mean.ARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.ARCH"
  },
  "type": "import"
 },
 "arch.univariate.mean.ARCHModel": {
  "data": {
   "shadows": "arch.univariate.base.ARCHModel"
  },
  "type": "import"
 },
 "arch.univariate.mean.ARCHModelForecast": {
  "data": {
   "shadows": "arch.univariate.base.ARCHModelForecast"
  },
  "type": "import"
 },
 "arch.univariate.mean.ARCHModelResult": {
  "data": {
   "shadows": "arch.univariate.base.ARCHModelResult"
  },
  "type": "import"
 },
 "arch.univariate.mean.ARX": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "arch.univariate.mean.HARX"
   ]
  },
  "type": "class"
 },
 "arch.univariate.mean.ARX.__init__": {
  "data": {
   "lineno": 995,
   "symbols_in_volume": [
    "ValueError",
    "arch.univariate.mean.ARX",
    "int",
    "numpy.arange",
    "numpy.asarray",
    "numpy.vstack",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.ARX._generate_lag_names": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.ARX._model_description": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.COV_TYPES": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "arch.univariate.mean.ConstantMean": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "arch.univariate.mean.HARX"
   ]
  },
  "type": "class"
 },
 "arch.univariate.mean.ConstantMean.__init__": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "arch.univariate.mean.ConstantMean",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.ConstantMean._model_description": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "arch.univariate.mean.ConstantMean",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.ConstantMean.num_params": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "arch.vendor.cached_property"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.ConstantMean.parameter_names": {
  "data": {
   "lineno": 741
  },
  "type": "function"
 },
 "arch.univariate.mean.ConstantMean.resids": {
  "data": {
   "lineno": 812
  },
  "type": "function"
 },
 "arch.univariate.mean.ConstantMean.simulate": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "numpy.sqrt",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.ConstantVariance": {
  "data": {
   "shadows": "arch.univariate.volatility.ConstantVariance"
  },
  "type": "import"
 },
 "arch.univariate.mean.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "arch.univariate.mean.EGARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.EGARCH"
  },
  "type": "import"
 },
 "arch.univariate.mean.FIGARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.FIGARCH"
  },
  "type": "import"
 },
 "arch.univariate.mean.GARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.GARCH"
  },
  "type": "import"
 },
 "arch.univariate.mean.GeneralizedError": {
  "data": {
   "shadows": "arch.univariate.distribution.GeneralizedError"
  },
  "type": "import"
 },
 "arch.univariate.mean.HARCH": {
  "data": {
   "shadows": "arch.univariate.volatility.HARCH"
  },
  "type": "import"
 },
 "arch.univariate.mean.HARX": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "arch.univariate.base.ARCHModel"
   ]
  },
  "type": "class"
 },
 "arch.univariate.mean.HARX.__init__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "RuntimeWarning",
    "arch.univariate.mean.HARX",
    "numpy.asarray",
    "numpy.int32",
    "numpy.max",
    "super",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX.__repr__": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "hex",
    "id"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX.__str__": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX._adjust_sample": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "ValueError",
    "arch.utility.array.cutoff_to_index"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX._check_specification": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "ValueError",
    "arch.utility.array.parse_dataframe",
    "numpy.asarray",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX._fit_no_arch_normal_errors": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "ValueError",
    "arch.univariate.base.ARCHModelResult",
    "arch.univariate.mean.COV_TYPES",
    "arch.univariate.mean.copy",
    "len",
    "numpy.empty",
    "numpy.empty_like",
    "numpy.float64",
    "numpy.hstack",
    "numpy.linalg.inv",
    "numpy.linalg.pinv",
    "numpy.nan",
    "numpy.sqrt",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "scipy.optimize.OptimizeResult",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX._generate_lag_names": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX._generate_variable_names": {
  "data": {
   "lineno": 374
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX._har_to_ar": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "int",
    "numpy.concatenate",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX._init_model": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "enumerate",
    "numpy.empty",
    "numpy.float64",
    "numpy.hstack",
    "numpy.max",
    "numpy.mean",
    "numpy.ones",
    "statsmodels.tsa.tsatools.lagmat"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX._model_description": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX._r2": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "arch.univariate.base.implicit_constant",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX._reformat_lags": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.any",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.flipud",
    "numpy.lexsort",
    "numpy.linalg.matrix_rank",
    "numpy.max",
    "numpy.unique",
    "numpy.zeros",
    "range",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX._repr_html_": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "hex",
    "id"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX._static_gaussian_loglikelihood": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.pi",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX.forecast": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "ValueError",
    "arch.univariate.base.ARCHModelForecast",
    "arch.univariate.mean._ar_forecast",
    "arch.univariate.mean._ar_to_impulse",
    "arch.univariate.mean._forecast_pad",
    "arch.utility.array.cutoff_to_index",
    "int",
    "max",
    "numpy.asarray",
    "numpy.empty",
    "numpy.full",
    "numpy.nan",
    "numpy.squeeze",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX.num_params": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "arch.vendor.cached_property",
    "int"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX.parameter_names": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX.resids": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX.simulate": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "ValueError",
    "arch.utility.array.ensure1d",
    "dict",
    "int",
    "numpy.isscalar",
    "numpy.max",
    "numpy.sqrt",
    "numpy.zeros",
    "pandas.DataFrame",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.HARX.x": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.LS": {
  "data": {
   "lineno": 1052,
   "symbols_in_volume": [
    "arch.univariate.mean.HARX"
   ]
  },
  "type": "class"
 },
 "arch.univariate.mean.LS.__init__": {
  "data": {
   "lineno": 1093,
   "symbols_in_volume": [
    "arch.univariate.mean.LS",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.LS._model_description": {
  "data": {
   "lineno": 1100,
   "symbols_in_volume": [
    "arch.univariate.mean.LS",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.Normal": {
  "data": {
   "shadows": "arch.univariate.distribution.Normal"
  },
  "type": "import"
 },
 "arch.univariate.mean.OptimizeResult": {
  "data": {
   "shadows": "scipy.optimize.OptimizeResult"
  },
  "type": "import"
 },
 "arch.univariate.mean.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "arch.univariate.mean.SkewStudent": {
  "data": {
   "shadows": "arch.univariate.distribution.SkewStudent"
  },
  "type": "import"
 },
 "arch.univariate.mean.StudentsT": {
  "data": {
   "shadows": "arch.univariate.distribution.StudentsT"
  },
  "type": "import"
 },
 "arch.univariate.mean.ZeroMean": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "arch.univariate.mean.HARX"
   ]
  },
  "type": "class"
 },
 "arch.univariate.mean.ZeroMean.__init__": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "arch.univariate.mean.ZeroMean",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.ZeroMean._model_description": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "arch.univariate.mean.ZeroMean",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.ZeroMean.num_params": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "arch.vendor.cached_property"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.ZeroMean.parameter_names": {
  "data": {
   "lineno": 868
  },
  "type": "function"
 },
 "arch.univariate.mean.ZeroMean.resids": {
  "data": {
   "lineno": 940
  },
  "type": "function"
 },
 "arch.univariate.mean.ZeroMean.simulate": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "numpy.sqrt",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.__all__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "arch.univariate.mean._ar_forecast": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.empty",
    "numpy.nan",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean._ar_to_impulse": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "max",
    "min",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean._forecast_pad": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "list",
    "numpy.concatenate",
    "numpy.full",
    "numpy.nan",
    "tuple"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "arch.univariate.mean.arch_model": {
  "data": {
   "lineno": 1104,
   "symbols_in_volume": [
    "ValueError",
    "arch.univariate.distribution.GeneralizedError",
    "arch.univariate.distribution.Normal",
    "arch.univariate.distribution.SkewStudent",
    "arch.univariate.distribution.StudentsT",
    "arch.univariate.mean.ARX",
    "arch.univariate.mean.ConstantMean",
    "arch.univariate.mean.HARX",
    "arch.univariate.mean.LS",
    "arch.univariate.mean.ZeroMean",
    "arch.univariate.volatility.ARCH",
    "arch.univariate.volatility.ConstantVariance",
    "arch.univariate.volatility.EGARCH",
    "arch.univariate.volatility.FIGARCH",
    "arch.univariate.volatility.GARCH",
    "arch.univariate.volatility.HARCH"
   ]
  },
  "type": "function"
 },
 "arch.univariate.mean.cached_property": {
  "data": {
   "shadows": "arch.vendor.cached_property"
  },
  "type": "import"
 },
 "arch.univariate.mean.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "arch.univariate.mean.cutoff_to_index": {
  "data": {
   "shadows": "arch.utility.array.cutoff_to_index"
  },
  "type": "import"
 },
 "arch.univariate.mean.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "arch.univariate.mean.ensure1d": {
  "data": {
   "shadows": "arch.utility.array.ensure1d"
  },
  "type": "import"
 },
 "arch.univariate.mean.implicit_constant": {
  "data": {
   "shadows": "arch.univariate.base.implicit_constant"
  },
  "type": "import"
 },
 "arch.univariate.mean.lagmat": {
  "data": {
   "shadows": "statsmodels.tsa.tsatools.lagmat"
  },
  "type": "import"
 },
 "arch.univariate.mean.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.univariate.mean.parse_dataframe": {
  "data": {
   "shadows": "arch.utility.array.parse_dataframe"
  },
  "type": "import"
 },
 "arch.univariate.mean.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "arch.univariate.recursions": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "arch.univariate.recursions_python": {
  "data": {
   "shadows": "arch.univariate.recursions_python"
  },
  "type": "import"
 },
 "arch.univariate.recursions_python.LNSIGMA_MAX": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "arch.univariate.recursions_python.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "arch.univariate.recursions_python.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "arch.univariate.recursions_python.arch_recursion": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "arch.univariate.recursions_python.arch_recursion_python": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "arch.univariate.recursions_python.bounds_check",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.recursions_python.bounds_check": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "arch.univariate.recursions_python.bounds_check_python": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.isinf",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "arch.univariate.recursions_python.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "arch.univariate.recursions_python.egarch_recursion": {
  "data": {
   "lineno": 241
  },
  "type": "constant"
 },
 "arch.univariate.recursions_python.egarch_recursion_python": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "arch.univariate.recursions_python.LNSIGMA_MAX",
    "numpy.abs",
    "numpy.exp",
    "numpy.log",
    "numpy.sqrt",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.recursions_python.figarch_recursion": {
  "data": {
   "lineno": 388
  },
  "type": "constant"
 },
 "arch.univariate.recursions_python.figarch_recursion_python": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "arch.univariate.recursions_python.bounds_check",
    "arch.univariate.recursions_python.figarch_weights",
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.recursions_python.figarch_weights": {
  "data": {
   "lineno": 335
  },
  "type": "constant"
 },
 "arch.univariate.recursions_python.figarch_weights_python": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.recursions_python.garch_recursion": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "arch.univariate.recursions_python.garch_recursion_python": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "arch.univariate.recursions_python.bounds_check",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.recursions_python.harch_recursion": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "arch.univariate.recursions_python.harch_recursion_python": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "arch.univariate.recursions_python.bounds_check",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.recursions_python.jit": {
  "data": {
   "shadows": "arch.compat.numba.jit"
  },
  "type": "import"
 },
 "arch.univariate.recursions_python.midas_recursion": {
  "data": {
   "lineno": 296
  },
  "type": "constant"
 },
 "arch.univariate.recursions_python.midas_recursion_python": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "numpy.isinf",
    "numpy.log",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.recursions_python.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.univariate.volatility": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "arch.univariate.volatility.ARCH": {
  "data": {
   "lineno": 1569,
   "symbols_in_volume": [
    "arch.univariate.volatility.GARCH"
   ]
  },
  "type": "class"
 },
 "arch.univariate.volatility.ARCH.__init__": {
  "data": {
   "lineno": 1603,
   "symbols_in_volume": [
    "arch.univariate.volatility.ARCH",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.ARCH.starting_values": {
  "data": {
   "lineno": 1607,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "numpy.arange",
    "numpy.argmax",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.AbstractDocStringInheritor": {
  "data": {
   "shadows": "arch.utility.array.AbstractDocStringInheritor"
  },
  "type": "import"
 },
 "arch.univariate.volatility.BootstrapRng": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.univariate.volatility.BootstrapRng.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.BootstrapRng.random_state": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.BootstrapRng.rng": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "arch.univariate.volatility.BootstrapRng.rng._rng": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "IndexError",
    "numpy.floor",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.ConstantVariance": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "arch.univariate.volatility.VolatilityProcess"
   ]
  },
  "type": "class"
 },
 "arch.univariate.volatility.ConstantVariance.__init__": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "arch.univariate.volatility.ConstantVariance",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.ConstantVariance._analytic_forecast": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "arch.univariate.volatility.VarianceForecast",
    "numpy.full",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.ConstantVariance._check_forecasting_method": {
  "data": {
   "lineno": 664
  },
  "type": "function"
 },
 "arch.univariate.volatility.ConstantVariance._simulation_forecast": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "arch.univariate.volatility.VarianceForecast",
    "numpy.full",
    "numpy.nan",
    "numpy.sqrt",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.ConstantVariance.backcast": {
  "data": {
   "lineno": 654
  },
  "type": "function"
 },
 "arch.univariate.volatility.ConstantVariance.backcast_transform": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "arch.univariate.volatility.ConstantVariance",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.ConstantVariance.bounds": {
  "data": {
   "lineno": 657
  },
  "type": "function"
 },
 "arch.univariate.volatility.ConstantVariance.compute_variance": {
  "data": {
   "lineno": 634
  },
  "type": "function"
 },
 "arch.univariate.volatility.ConstantVariance.constraints": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.ConstantVariance.parameter_names": {
  "data": {
   "lineno": 661
  },
  "type": "function"
 },
 "arch.univariate.volatility.ConstantVariance.simulate": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.sqrt",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.ConstantVariance.starting_values": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EGARCH": {
  "data": {
   "lineno": 1994,
   "symbols_in_volume": [
    "arch.univariate.volatility.VolatilityProcess"
   ]
  },
  "type": "class"
 },
 "arch.univariate.volatility.EGARCH.__init__": {
  "data": {
   "lineno": 2043,
   "symbols_in_volume": [
    "ValueError",
    "arch.univariate.volatility.EGARCH",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EGARCH.__str__": {
  "data": {
   "lineno": 2056,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EGARCH._analytic_forecast": {
  "data": {
   "lineno": 2192,
   "symbols_in_volume": [
    "arch.univariate.volatility.VarianceForecast",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EGARCH._check_forecasting_method": {
  "data": {
   "lineno": 2187,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EGARCH._simulation_forecast": {
  "data": {
   "lineno": 2199,
   "symbols_in_volume": [
    "arch.univariate.volatility.VarianceForecast",
    "numpy.abs",
    "numpy.empty",
    "numpy.exp",
    "numpy.full",
    "numpy.log",
    "numpy.max",
    "numpy.nan",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EGARCH.backcast": {
  "data": {
   "lineno": 2107,
   "symbols_in_volume": [
    "arch.univariate.volatility.EGARCH",
    "numpy.log",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EGARCH.backcast_transform": {
  "data": {
   "lineno": 2103,
   "symbols_in_volume": [
    "arch.univariate.volatility.EGARCH",
    "numpy.log",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EGARCH.bounds": {
  "data": {
   "lineno": 2067,
   "symbols_in_volume": [
    "float",
    "numpy.inf",
    "numpy.log",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EGARCH.compute_variance": {
  "data": {
   "lineno": 2086,
   "symbols_in_volume": [
    "arch.univariate.recursions_python.egarch_recursion",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EGARCH.constraints": {
  "data": {
   "lineno": 2077,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EGARCH.parameter_names": {
  "data": {
   "lineno": 2184,
   "symbols_in_volume": [
    "arch.univariate.volatility._common_names"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EGARCH.simulate": {
  "data": {
   "lineno": 2110,
   "symbols_in_volume": [
    "arch.utility.exceptions.InitialValueWarning",
    "arch.utility.exceptions.initial_value_warning",
    "numpy.abs",
    "numpy.exp",
    "numpy.max",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "rng",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EGARCH.starting_values": {
  "data": {
   "lineno": 2156,
   "symbols_in_volume": [
    "arch.univariate.volatility.itertools",
    "enumerate",
    "int",
    "len",
    "list",
    "numpy.argmax",
    "numpy.log",
    "numpy.mean",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EGARCH.variance_bounds": {
  "data": {
   "lineno": 2064,
   "symbols_in_volume": [
    "arch.univariate.volatility.EGARCH",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EWMAVariance": {
  "data": {
   "lineno": 1624,
   "symbols_in_volume": [
    "arch.univariate.volatility.VolatilityProcess"
   ]
  },
  "type": "class"
 },
 "arch.univariate.volatility.EWMAVariance.__init__": {
  "data": {
   "lineno": 1659,
   "symbols_in_volume": [
    "ValueError",
    "arch.univariate.volatility.EWMAVariance",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EWMAVariance.__str__": {
  "data": {
   "lineno": 1668
  },
  "type": "function"
 },
 "arch.univariate.volatility.EWMAVariance._analytic_forecast": {
  "data": {
   "lineno": 1727,
   "symbols_in_volume": [
    "arch.univariate.volatility.VarianceForecast",
    "numpy.empty",
    "numpy.nan",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EWMAVariance._check_forecasting_method": {
  "data": {
   "lineno": 1724
  },
  "type": "function"
 },
 "arch.univariate.volatility.EWMAVariance._simulation_forecast": {
  "data": {
   "lineno": 1739,
   "symbols_in_volume": [
    "arch.univariate.volatility.VarianceForecast",
    "numpy.full",
    "numpy.nan",
    "numpy.sqrt",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EWMAVariance.bounds": {
  "data": {
   "lineno": 1685
  },
  "type": "function"
 },
 "arch.univariate.volatility.EWMAVariance.compute_variance": {
  "data": {
   "lineno": 1690,
   "symbols_in_volume": [
    "arch.univariate.volatility.ewma_recursion"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EWMAVariance.constraints": {
  "data": {
   "lineno": 1695,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EWMAVariance.parameter_names": {
  "data": {
   "lineno": 1680
  },
  "type": "function"
 },
 "arch.univariate.volatility.EWMAVariance.simulate": {
  "data": {
   "lineno": 1702,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.EWMAVariance.starting_values": {
  "data": {
   "lineno": 1675,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH": {
  "data": {
   "lineno": 2342,
   "symbols_in_volume": [
    "arch.univariate.volatility.VolatilityProcess"
   ]
  },
  "type": "class"
 },
 "arch.univariate.volatility.FIGARCH.__init__": {
  "data": {
   "lineno": 2417,
   "symbols_in_volume": [
    "ValueError",
    "arch.univariate.volatility.FIGARCH",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH.__str__": {
  "data": {
   "lineno": 2437,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH._analytic_forecast": {
  "data": {
   "lineno": 2629,
   "symbols_in_volume": [
    "arch.univariate.recursions_python.figarch_weights",
    "arch.univariate.volatility.VarianceForecast",
    "max",
    "numpy.empty",
    "numpy.nan",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH._check_forecasting_method": {
  "data": {
   "lineno": 2621,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH._name": {
  "data": {
   "lineno": 2453
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH._simulation_forecast": {
  "data": {
   "lineno": 2660,
   "symbols_in_volume": [
    "arch.univariate.recursions_python.figarch_weights",
    "arch.univariate.volatility.VarianceForecast",
    "max",
    "numpy.abs",
    "numpy.empty",
    "numpy.full",
    "numpy.nan",
    "numpy.sqrt",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH.backcast": {
  "data": {
   "lineno": 2526,
   "symbols_in_volume": [
    "abs",
    "min",
    "numpy.arange",
    "numpy.sum",
    "sum"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH.backcast_transform": {
  "data": {
   "lineno": 2522,
   "symbols_in_volume": [
    "arch.univariate.volatility.FIGARCH",
    "numpy.sqrt",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH.bounds": {
  "data": {
   "lineno": 2471,
   "symbols_in_volume": [
    "abs",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH.compute_variance": {
  "data": {
   "lineno": 2506,
   "symbols_in_volume": [
    "arch.univariate.recursions_python.figarch_recursion",
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH.constraints": {
  "data": {
   "lineno": 2481,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.delete"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH.parameter_names": {
  "data": {
   "lineno": 2612
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH.simulate": {
  "data": {
   "lineno": 2535,
   "symbols_in_volume": [
    "abs",
    "arch.univariate.recursions_python.figarch_weights",
    "arch.utility.exceptions.InitialValueWarning",
    "arch.utility.exceptions.initial_value_warning",
    "numpy.empty",
    "numpy.sqrt",
    "numpy.sum",
    "range",
    "rng",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH.starting_values": {
  "data": {
   "lineno": 2574,
   "symbols_in_volume": [
    "abs",
    "arch.univariate.recursions_python.figarch_weights",
    "enumerate",
    "int",
    "len",
    "list",
    "numpy.argmax",
    "numpy.array",
    "numpy.c_",
    "numpy.mean",
    "numpy.sum",
    "numpy.zeros",
    "set"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH.truncation": {
  "data": {
   "lineno": 2432,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FIGARCH.variance_bounds": {
  "data": {
   "lineno": 2450,
   "symbols_in_volume": [
    "arch.univariate.volatility.FIGARCH",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FixedVariance": {
  "data": {
   "lineno": 2254,
   "symbols_in_volume": [
    "arch.univariate.volatility.VolatilityProcess"
   ]
  },
  "type": "class"
 },
 "arch.univariate.volatility.FixedVariance.__init__": {
  "data": {
   "lineno": 2274,
   "symbols_in_volume": [
    "arch.univariate.volatility.FixedVariance",
    "arch.utility.array.ensure1d",
    "numpy.asarray",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FixedVariance._analytic_forecast": {
  "data": {
   "lineno": 2325,
   "symbols_in_volume": [
    "arch.univariate.volatility.VarianceForecast",
    "numpy.full",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FixedVariance._check_forecasting_method": {
  "data": {
   "lineno": 2322
  },
  "type": "function"
 },
 "arch.univariate.volatility.FixedVariance._simulation_forecast": {
  "data": {
   "lineno": 2331,
   "symbols_in_volume": [
    "arch.univariate.volatility.VarianceForecast",
    "numpy.empty",
    "numpy.full",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FixedVariance.backcast": {
  "data": {
   "lineno": 2306
  },
  "type": "function"
 },
 "arch.univariate.volatility.FixedVariance.bounds": {
  "data": {
   "lineno": 2309,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FixedVariance.compute_variance": {
  "data": {
   "lineno": 2283,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FixedVariance.constraints": {
  "data": {
   "lineno": 2300,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FixedVariance.parameter_names": {
  "data": {
   "lineno": 2317
  },
  "type": "function"
 },
 "arch.univariate.volatility.FixedVariance.simulate": {
  "data": {
   "lineno": 2297,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.FixedVariance.starting_values": {
  "data": {
   "lineno": 2291,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "arch.univariate.volatility.VolatilityProcess"
   ]
  },
  "type": "class"
 },
 "arch.univariate.volatility.GARCH.__init__": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "ValueError",
    "arch.univariate.volatility.GARCH",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH.__str__": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH._analytic_forecast": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": [
    "arch.univariate.volatility.VarianceForecast",
    "numpy.max",
    "numpy.nan",
    "numpy.sqrt",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH._check_forecasting_method": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH._name": {
  "data": {
   "lineno": 783
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH._simulate_paths": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.full_like",
    "numpy.mean",
    "numpy.nan",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH._simulation_forecast": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "arch.univariate.volatility.VarianceForecast",
    "numpy.abs",
    "numpy.full",
    "numpy.max",
    "numpy.nan",
    "numpy.zeros",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH.backcast": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "abs",
    "min",
    "numpy.arange",
    "numpy.sum",
    "sum"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH.backcast_transform": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "arch.univariate.volatility.GARCH",
    "numpy.sqrt",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH.bounds": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "abs",
    "numpy.mean",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH.compute_variance": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "arch.univariate.recursions_python.garch_recursion",
    "numpy.abs",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH.constraints": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH.parameter_names": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "arch.univariate.volatility._common_names"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH.simulate": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "abs",
    "arch.utility.exceptions.InitialValueWarning",
    "arch.utility.exceptions.initial_value_warning",
    "numpy.max",
    "numpy.ones_like",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "rng",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH.starting_values": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "abs",
    "arch.univariate.volatility.itertools",
    "enumerate",
    "int",
    "len",
    "list",
    "numpy.argmax",
    "numpy.mean",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.GARCH.variance_bounds": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "arch.univariate.volatility.GARCH",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.HARCH": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "arch.univariate.volatility.VolatilityProcess"
   ]
  },
  "type": "class"
 },
 "arch.univariate.volatility.HARCH.__init__": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "arch.univariate.volatility.HARCH",
    "arch.utility.array.ensure1d",
    "numpy.arange",
    "numpy.array",
    "numpy.int32",
    "numpy.isscalar",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.HARCH.__str__": {
  "data": {
   "lineno": 1148,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.HARCH._analytic_forecast": {
  "data": {
   "lineno": 1248,
   "symbols_in_volume": [
    "arch.univariate.volatility.VarianceForecast",
    "numpy.nan",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.HARCH._check_forecasting_method": {
  "data": {
   "lineno": 1245
  },
  "type": "function"
 },
 "arch.univariate.volatility.HARCH._common_forecast_components": {
  "data": {
   "lineno": 1231,
   "symbols_in_volume": [
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.HARCH._harch_to_arch": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": [
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.HARCH._simulation_forecast": {
  "data": {
   "lineno": 1259,
   "symbols_in_volume": [
    "arch.univariate.volatility.VarianceForecast",
    "numpy.empty",
    "numpy.full",
    "numpy.nan",
    "numpy.sqrt",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.HARCH.bounds": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.HARCH.compute_variance": {
  "data": {
   "lineno": 1174,
   "symbols_in_volume": [
    "arch.univariate.recursions_python.harch_recursion"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.HARCH.constraints": {
  "data": {
   "lineno": 1164,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.HARCH.parameter_names": {
  "data": {
   "lineno": 1217,
   "symbols_in_volume": [
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.HARCH.simulate": {
  "data": {
   "lineno": 1182,
   "symbols_in_volume": [
    "arch.utility.exceptions.InitialValueWarning",
    "arch.utility.exceptions.initial_value_warning",
    "numpy.empty",
    "numpy.max",
    "numpy.sqrt",
    "numpy.sum",
    "range",
    "rng",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.HARCH.starting_values": {
  "data": {
   "lineno": 1208,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.InitialValueWarning": {
  "data": {
   "shadows": "arch.utility.exceptions.InitialValueWarning"
  },
  "type": "import"
 },
 "arch.univariate.volatility.MIDASHyperbolic": {
  "data": {
   "lineno": 1281,
   "symbols_in_volume": [
    "arch.univariate.volatility.VolatilityProcess"
   ]
  },
  "type": "class"
 },
 "arch.univariate.volatility.MIDASHyperbolic.__init__": {
  "data": {
   "lineno": 1339,
   "symbols_in_volume": [
    "arch.univariate.volatility.MIDASHyperbolic",
    "bool",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.MIDASHyperbolic.__str__": {
  "data": {
   "lineno": 1346
  },
  "type": "function"
 },
 "arch.univariate.volatility.MIDASHyperbolic._analytic_forecast": {
  "data": {
   "lineno": 1521,
   "symbols_in_volume": [
    "arch.univariate.volatility.VarianceForecast",
    "numpy.nan",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.MIDASHyperbolic._check_forecasting_method": {
  "data": {
   "lineno": 1518
  },
  "type": "function"
 },
 "arch.univariate.volatility.MIDASHyperbolic._common_forecast_components": {
  "data": {
   "lineno": 1495,
   "symbols_in_volume": [
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.MIDASHyperbolic._simulation_forecast": {
  "data": {
   "lineno": 1538,
   "symbols_in_volume": [
    "arch.univariate.volatility.VarianceForecast",
    "numpy.double",
    "numpy.empty",
    "numpy.full",
    "numpy.nan",
    "numpy.sqrt",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.MIDASHyperbolic._weights": {
  "data": {
   "lineno": 1486,
   "symbols_in_volume": [
    "max",
    "numpy.arange",
    "numpy.exp",
    "numpy.finfo",
    "numpy.float64",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.MIDASHyperbolic.bounds": {
  "data": {
   "lineno": 1352,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.MIDASHyperbolic.compute_variance": {
  "data": {
   "lineno": 1399,
   "symbols_in_volume": [
    "arch.univariate.recursions_python.midas_recursion",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.MIDASHyperbolic.constraints": {
  "data": {
   "lineno": 1361,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.MIDASHyperbolic.parameter_names": {
  "data": {
   "lineno": 1479
  },
  "type": "function"
 },
 "arch.univariate.volatility.MIDASHyperbolic.simulate": {
  "data": {
   "lineno": 1412,
   "symbols_in_volume": [
    "arch.utility.exceptions.InitialValueWarning",
    "arch.utility.exceptions.initial_value_warning",
    "max",
    "numpy.empty",
    "numpy.sqrt",
    "range",
    "rng",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.MIDASHyperbolic.starting_values": {
  "data": {
   "lineno": 1450,
   "symbols_in_volume": [
    "arch.univariate.volatility.itertools",
    "int",
    "min",
    "numpy.argmax",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.Normal": {
  "data": {
   "shadows": "arch.univariate.distribution.Normal"
  },
  "type": "import"
 },
 "arch.univariate.volatility.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "arch.univariate.volatility.RiskMetrics2006": {
  "data": {
   "lineno": 1762,
   "symbols_in_volume": [
    "arch.univariate.volatility.VolatilityProcess"
   ]
  },
  "type": "class"
 },
 "arch.univariate.volatility.RiskMetrics2006.__init__": {
  "data": {
   "lineno": 1797,
   "symbols_in_volume": [
    "ValueError",
    "arch.univariate.volatility.RiskMetrics2006",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006.__str__": {
  "data": {
   "lineno": 1815
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006._analytic_forecast": {
  "data": {
   "lineno": 1942,
   "symbols_in_volume": [
    "arch.univariate.volatility.VarianceForecast",
    "numpy.asarray",
    "numpy.empty",
    "numpy.nan",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006._check_forecasting_method": {
  "data": {
   "lineno": 1939
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006._ewma_combination_weights": {
  "data": {
   "lineno": 1823,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006._ewma_smoothing_parameters": {
  "data": {
   "lineno": 1837,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006._simulation_forecast": {
  "data": {
   "lineno": 1955,
   "symbols_in_volume": [
    "arch.univariate.volatility.VarianceForecast",
    "arch.univariate.volatility.ewma_recursion",
    "numpy.asarray",
    "numpy.empty",
    "numpy.full",
    "numpy.nan",
    "numpy.sqrt",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006.backcast": {
  "data": {
   "lineno": 1843,
   "symbols_in_volume": [
    "int",
    "max",
    "min",
    "numpy.arange",
    "numpy.floor",
    "numpy.log",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006.backcast_transform": {
  "data": {
   "lineno": 1872,
   "symbols_in_volume": [
    "ValueError",
    "arch.univariate.volatility.RiskMetrics2006",
    "numpy.asarray",
    "numpy.ones",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006.bounds": {
  "data": {
   "lineno": 1893
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006.compute_variance": {
  "data": {
   "lineno": 1899,
   "symbols_in_volume": [
    "arch.univariate.volatility.ewma_recursion",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006.constraints": {
  "data": {
   "lineno": 1896,
   "symbols_in_volume": [
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006.parameter_names": {
  "data": {
   "lineno": 1887
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006.simulate": {
  "data": {
   "lineno": 1917,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "rng"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006.starting_values": {
  "data": {
   "lineno": 1884,
   "symbols_in_volume": [
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.RiskMetrics2006.variance_bounds": {
  "data": {
   "lineno": 1890,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.finfo",
    "numpy.float64",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VarianceForecast": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.univariate.volatility.VarianceForecast.__init__": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "arch.univariate.volatility.VarianceForecast.forecast_paths": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VarianceForecast.forecasts": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VarianceForecast.shocks": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "arch.utility.array.AbstractDocStringInheritor",
    "object"
   ]
  },
  "type": "class"
 },
 "arch.univariate.volatility.VolatilityProcess.__init__": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "arch.univariate.distribution.Normal"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess.__repr__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "hex",
    "id"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess.__str__": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess._analytic_forecast": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess._bootstrap_forecast": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "ValueError",
    "arch.univariate.volatility.BootstrapRng",
    "numpy.empty_like",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess._check_forecasting_method": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess._gaussian_loglikelihood": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess._one_step_forecast": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.inf",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess._simulation_forecast": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess.backcast": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "min",
    "numpy.arange",
    "numpy.sum",
    "sum"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess.backcast_transform": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess.bounds": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess.compute_variance": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess.constraints": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess.forecast": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess.parameter_names": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess.simulate": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess.start": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess.starting_values": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess.stop": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "arch.univariate.volatility.VolatilityProcess.variance_bounds": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "arch.univariate.volatility.ewma_recursion",
    "min",
    "numpy.arange",
    "numpy.ascontiguousarray",
    "numpy.vstack",
    "numpy.zeros",
    "sum"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "arch.univariate.volatility._common_names": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "arch.univariate.volatility.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "arch.univariate.volatility.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "arch.univariate.volatility.egarch_recursion": {
  "data": {
   "shadows": "arch.univariate.recursions_python.egarch_recursion"
  },
  "type": "import"
 },
 "arch.univariate.volatility.ensure1d": {
  "data": {
   "shadows": "arch.utility.array.ensure1d"
  },
  "type": "import"
 },
 "arch.univariate.volatility.ewma_recursion": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "arch.univariate.recursions_python.garch_recursion",
    "numpy.array",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "arch.univariate.volatility.figarch_recursion": {
  "data": {
   "shadows": "arch.univariate.recursions_python.figarch_recursion"
  },
  "type": "import"
 },
 "arch.univariate.volatility.figarch_weights": {
  "data": {
   "shadows": "arch.univariate.recursions_python.figarch_weights"
  },
  "type": "import"
 },
 "arch.univariate.volatility.gammaln": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "arch.univariate.volatility.garch_recursion": {
  "data": {
   "shadows": "arch.univariate.recursions_python.garch_recursion"
  },
  "type": "import"
 },
 "arch.univariate.volatility.harch_recursion": {
  "data": {
   "shadows": "arch.univariate.recursions_python.harch_recursion"
  },
  "type": "import"
 },
 "arch.univariate.volatility.initial_value_warning": {
  "data": {
   "shadows": "arch.utility.exceptions.initial_value_warning"
  },
  "type": "import"
 },
 "arch.univariate.volatility.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "arch.univariate.volatility.midas_recursion": {
  "data": {
   "shadows": "arch.univariate.recursions_python.midas_recursion"
  },
  "type": "import"
 },
 "arch.univariate.volatility.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.univariate.volatility.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "arch.utility": {
  "data": {
   "symbols_in_volume": [
    "arch.utility.os"
   ]
  },
  "type": "module"
 },
 "arch.utility.PKG": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "arch.utility.__all__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "arch.utility.array": {
  "data": {
   "symbols_in_volume": [
    "abc.ABCMeta",
    "arch.utility.array.DocStringInheritor",
    "type"
   ]
  },
  "type": "module"
 },
 "arch.utility.array.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "arch.utility.array.AbstractDocStringInheritor": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "arch.utility.array.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "arch.utility.array.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "arch.utility.array.DocStringInheritor": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "arch.utility.array.DocStringInheritor.__new__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "arch.vendor.cached_property",
    "getattr",
    "hasattr",
    "isinstance",
    "property",
    "type.__new__"
   ]
  },
  "type": "function"
 },
 "arch.utility.array.NaT": {
  "data": {
   "shadows": "pandas.NaT"
  },
  "type": "import"
 },
 "arch.utility.array.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "arch.utility.array.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "arch.utility.array.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "arch.utility.array.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "arch.utility.array.cached_property": {
  "data": {
   "shadows": "arch.vendor.cached_property"
  },
  "type": "import"
 },
 "arch.utility.array.cutoff_to_index": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "arch.utility.array.date_to_index",
    "datetime.datetime",
    "int",
    "isinstance",
    "issubclass",
    "numpy.datetime64",
    "numpy.integer",
    "pandas.Timestamp",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.utility.array.date_to_index": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "arch.compat.pandas.is_datetime64_any_dtype",
    "datetime.datetime",
    "isinstance",
    "numpy.all",
    "numpy.any",
    "numpy.asarray",
    "numpy.datetime64",
    "numpy.diff",
    "numpy.int64",
    "numpy.nonzero",
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "pandas.to_datetime",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.utility.array.deprecation_doc": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "arch.utility.array.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "arch.utility.array.dt": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "arch.utility.array.ensure1d": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.asarray",
    "numpy.ndarray",
    "numpy.squeeze",
    "pandas.DataFrame",
    "pandas.Series",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.utility.array.ensure2d": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "numpy.asarray",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "arch.utility.array.find_index": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "numpy.argwhere",
    "numpy.int",
    "numpy.int64",
    "pandas.NaT",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "arch.utility.array.is_datetime64_any_dtype": {
  "data": {
   "shadows": "arch.compat.pandas.is_datetime64_any_dtype"
  },
  "type": "import"
 },
 "arch.utility.array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.utility.array.parse_dataframe": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.arange",
    "numpy.empty",
    "numpy.squeeze",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "arch.utility.array.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "arch.utility.array.to_datetime": {
  "data": {
   "shadows": "pandas.to_datetime"
  },
  "type": "import"
 },
 "arch.utility.cov": {
  "data": {},
  "type": "module"
 },
 "arch.utility.cov.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "arch.utility.cov.cov_nw": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "range"
   ]
  },
  "type": "function"
 },
 "arch.utility.cov.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "arch.utility.cov_nw": {
  "data": {
   "shadows": "arch.utility.cov.cov_nw"
  },
  "type": "import"
 },
 "arch.utility.exceptions": {
  "data": {},
  "type": "module"
 },
 "arch.utility.exceptions.ConvergenceWarning": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "arch.utility.exceptions.DataScaleWarning": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "arch.utility.exceptions.InitialValueWarning": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "arch.utility.exceptions.InvalidLengthWarning": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "arch.utility.exceptions.StartingValueWarning": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "arch.utility.exceptions.StudentizationError": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "arch.utility.exceptions.arg_type_error": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "arch.utility.exceptions.convergence_warning": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "arch.utility.exceptions.data_scale_warning": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "arch.utility.exceptions.deprecation_doc": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "arch.utility.exceptions.initial_value_warning": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "arch.utility.exceptions.invalid_length_doc": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "arch.utility.exceptions.kwarg_type_error": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "arch.utility.exceptions.starting_value_warning": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "arch.utility.exceptions.studentization_error": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "arch.utility.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "arch.utility.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "arch.utility.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "arch.utility.test": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ImportError",
    "arch.utility.PKG",
    "arch.utility.pytest",
    "arch.utility.sys",
    "isinstance",
    "list",
    "print"
   ]
  },
  "type": "function"
 },
 "arch.utility.testing": {
  "data": {},
  "type": "module"
 },
 "arch.utility.testing.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "arch.utility.testing.WaldTestStatistic": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "arch.utility.testing.WaldTestStatistic.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "scipy.stats.chi2"
   ]
  },
  "type": "function"
 },
 "arch.utility.testing.WaldTestStatistic.__repr__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "hex",
    "id"
   ]
  },
  "type": "function"
 },
 "arch.utility.testing.WaldTestStatistic.__str__": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "arch.utility.testing.WaldTestStatistic.alternative": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "arch.utility.testing.WaldTestStatistic.critical_values": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "arch.vendor.cached_property",
    "collections.OrderedDict",
    "zip"
   ]
  },
  "type": "function"
 },
 "arch.utility.testing.WaldTestStatistic.null": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "arch.utility.testing.WaldTestStatistic.pval": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "arch.vendor.cached_property"
   ]
  },
  "type": "function"
 },
 "arch.utility.testing.WaldTestStatistic.stat": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "arch.utility.testing.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "arch.utility.testing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "arch.utility.testing.cached_property": {
  "data": {
   "shadows": "arch.vendor.cached_property"
  },
  "type": "import"
 },
 "arch.utility.testing.chi2": {
  "data": {
   "shadows": "scipy.stats.chi2"
  },
  "type": "import"
 },
 "arch.utility.testing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "arch.utility.timeseries": {
  "data": {},
  "type": "module"
 },
 "arch.utility.timeseries.ColumnNameConflict": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "arch.utility.timeseries._enforce_unique_col_name": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "arch.utility.timeseries.ColumnNameConflict",
    "arch.utility.timeseries.column_name_conflict_doc",
    "arch.utility.timeseries.warnings",
    "enumerate",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "arch.utility.timeseries.add_trend": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "arch.utility.timeseries._enforce_unique_col_name",
    "isinstance",
    "len",
    "numpy.all",
    "numpy.any",
    "numpy.arange",
    "numpy.asanyarray",
    "numpy.asarray",
    "numpy.column_stack",
    "numpy.fliplr",
    "numpy.float64",
    "numpy.logical_and",
    "numpy.ptp",
    "numpy.vander",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "arch.utility.timeseries.column_name_conflict_doc": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "arch.utility.timeseries.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "arch.utility.timeseries.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "arch.utility.timeseries.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "arch.vendor": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "arch.vendor.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "arch.vendor.cached_property": {
  "data": {
   "shadows": "arch.vendor.property_cached.cached_property"
  },
  "type": "import"
 },
 "arch.vendor.property_cached": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "SyntaxError",
    "arch.vendor.property_cached.cached_property_with_ttl",
    "arch.vendor.property_cached.threaded_cached_property_with_ttl"
   ]
  },
  "type": "module"
 },
 "arch.vendor.property_cached.__author__": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "arch.vendor.property_cached.__email__": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "arch.vendor.property_cached.__license__": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "arch.vendor.property_cached.__version__": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "arch.vendor.property_cached.asyncio": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "arch.vendor.property_cached.cached_property": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "arch.vendor.property_cached.functools",
    "arch.vendor.property_cached.sys",
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "arch.vendor.property_cached.cached_property.__delete__": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "arch.vendor.property_cached.cached_property.__get__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "arch.vendor.property_cached.asyncio"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.cached_property.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "arch.vendor.property_cached.weakref"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.cached_property.__set__": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "arch.vendor.property_cached.cached_property.__set_name__": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "arch.vendor.property_cached.cached_property._update_wrapper": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.cached_property._wrap_in_coroutine": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "wrapper"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.cached_property._wrap_in_coroutine.wrapper": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "arch.vendor.property_cached.asyncio"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.cached_property_ttl": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "arch.vendor.property_cached.cached_property_with_ttl": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "arch.vendor.property_cached.cached_property"
   ]
  },
  "type": "class"
 },
 "arch.vendor.property_cached.cached_property_with_ttl.__call__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "arch.vendor.property_cached.cached_property_with_ttl",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.cached_property_with_ttl.__get__": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "time.time"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.cached_property_with_ttl.__init__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "arch.vendor.property_cached.cached_property_with_ttl",
    "callable",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.cached_property_with_ttl.__set__": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "arch.vendor.property_cached.cached_property_with_ttl",
    "super",
    "time.time"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "arch.vendor.property_cached.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "arch.vendor.property_cached.threaded_cached_property": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "arch.vendor.property_cached.cached_property"
   ]
  },
  "type": "class"
 },
 "arch.vendor.property_cached.threaded_cached_property.__delete__": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "arch.vendor.property_cached.threaded_cached_property",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.threaded_cached_property.__get__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "arch.vendor.property_cached.threaded_cached_property",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.threaded_cached_property.__init__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "arch.vendor.property_cached.threaded_cached_property",
    "arch.vendor.property_cached.threading",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.threaded_cached_property.__set__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "arch.vendor.property_cached.threaded_cached_property",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.threaded_cached_property_ttl": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "arch.vendor.property_cached.threaded_cached_property_with_ttl": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "arch.vendor.property_cached.cached_property_with_ttl",
    "arch.vendor.property_cached.threaded_cached_property"
   ]
  },
  "type": "class"
 },
 "arch.vendor.property_cached.threaded_cached_property_with_ttl.__delete__": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "arch.vendor.property_cached.threaded_cached_property_with_ttl",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.threaded_cached_property_with_ttl.__get__": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "arch.vendor.property_cached.threaded_cached_property_with_ttl",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.threaded_cached_property_with_ttl.__init__": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "arch.vendor.property_cached.threaded_cached_property_with_ttl",
    "arch.vendor.property_cached.threading",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.threaded_cached_property_with_ttl.__set__": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "arch.vendor.property_cached.threaded_cached_property_with_ttl",
    "super"
   ]
  },
  "type": "function"
 },
 "arch.vendor.property_cached.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "arch.vendor.property_cached.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "arch.vendor.property_cached.timed_cached_property": {
  "data": {
   "lineno": 174
  },
  "type": "constant"
 },
 "arch.vendor.property_cached.timed_threaded_cached_property": {
  "data": {
   "lineno": 204
  },
  "type": "constant"
 },
 "arch.vendor.property_cached.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "arch.webbrowser": {
  "data": {
   "shadows": "webbrowser"
  },
  "type": "import"
 }
}