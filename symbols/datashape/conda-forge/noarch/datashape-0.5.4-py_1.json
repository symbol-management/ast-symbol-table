{
 "datashape": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "datashape._version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "datashape._version.get_versions": {
  "lineno": 20,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "datashape.coretypes": {
  "lineno": null,
  "symbols_in_volume": [
   "ctypes.alignment",
   "ctypes.c_double",
   "ctypes.c_float",
   "ctypes.c_int16",
   "ctypes.c_int32",
   "ctypes.c_int64",
   "ctypes.c_long",
   "ctypes.c_uint16",
   "ctypes.c_uint32",
   "ctypes.c_uint64",
   "ctypes.c_void_p",
   "ctypes.py_object",
   "ctypes.sizeof",
   "sys.version_info"
  ],
  "type": "module"
 },
 "datashape.coretypes.Bytes": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.coretypes.CType": {
  "lineno": 747,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.coretypes.CType.__init__": {
  "lineno": 755,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.CType.__repr__": {
  "lineno": 818,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.CType.__str__": {
  "lineno": 815,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.CType.alignment": {
  "lineno": 799,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.CType.from_numpy_dtype": {
  "lineno": 761,
  "symbols_in_volume": [
   "numpy.bytes_",
   "numpy.datetime64",
   "numpy.datetime_data",
   "numpy.issubdtype",
   "numpy.str_",
   "numpy.timedelta64",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "datashape.coretypes.CType.itemsize": {
  "lineno": 794,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.CType.to_numpy_dtype": {
  "lineno": 804,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "datashape.coretypes.Categorical": {
  "lineno": 1095,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.coretypes.Categorical.__init__": {
  "lineno": 1102,
  "symbols_in_volume": [
   "datashape.discover"
  ],
  "type": "function"
 },
 "datashape.coretypes.Categorical.__repr__": {
  "lineno": 1115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Categorical.__str__": {
  "lineno": 1107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.CollectionPrinter": {
  "lineno": 933,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.coretypes.CollectionPrinter.__repr__": {
  "lineno": 935,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.DataShape": {
  "lineno": 509,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.coretypes.DataShape.__getitem__": {
  "lineno": 571,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.DataShape.__init__": {
  "lineno": 542,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.DataShape.__len__": {
  "lineno": 568,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.DataShape.__repr__": {
  "lineno": 577,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.DataShape.__rmul__": {
  "lineno": 610,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.DataShape.__setstate__": {
  "lineno": 712,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.DataShape.__str__": {
  "lineno": 574,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.DataShape._subshape": {
  "lineno": 619,
  "symbols_in_volume": [
   "math.ceil"
  ],
  "type": "function"
 },
 "datashape.coretypes.DataShape.measure": {
  "lineno": 588,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.DataShape.shape": {
  "lineno": 584,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.DataShape.subarray": {
  "lineno": 592,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.DataShape.subshape": {
  "lineno": 615,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Date": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.coretypes.Date.to_numpy_dtype": {
  "lineno": 220,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "datashape.coretypes.DateTime": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.coretypes.DateTime.__init__": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.DateTime.__str__": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.DateTime.to_numpy_dtype": {
  "lineno": 264,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "datashape.coretypes.Decimal": {
  "lineno": 444,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.coretypes.Decimal.__init__": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Decimal.__str__": {
  "lineno": 474,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Decimal.to_numpy_dtype": {
  "lineno": 479,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8"
  ],
  "type": "function"
 },
 "datashape.coretypes.Ellipsis": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.coretypes.Ellipsis.__init__": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Ellipsis.__repr__": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Ellipsis.__str__": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Fixed": {
  "lineno": 823,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.coretypes.Fixed.__eq__": {
  "lineno": 846,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Fixed.__index__": {
  "lineno": 840,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Fixed.__init__": {
  "lineno": 831,
  "symbols_in_volume": [
   "operator.index"
  ],
  "type": "function"
 },
 "datashape.coretypes.Fixed.__int__": {
  "lineno": 843,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Fixed.__str__": {
  "lineno": 852,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Function": {
  "lineno": 881,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.coretypes.Function.__str__": {
  "lineno": 892,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Function.argtypes": {
  "lineno": 888,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Function.restype": {
  "lineno": 884,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.JSON": {
  "lineno": 1154,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.coretypes.JSON.__str__": {
  "lineno": 1160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Map": {
  "lineno": 898,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.coretypes.Map.__init__": {
  "lineno": 901,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Map.__str__": {
  "lineno": 905,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Mono": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.coretypes.Mono.__eq__": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Mono.__getitem__": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Mono.__getstate__": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Mono.__hash__": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Mono.__init__": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Mono.__len__": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Mono.__mul__": {
  "lineno": 142,
  "symbols_in_volume": [
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.coretypes.Mono.__ne__": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Mono.__repr__": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Mono.__rmul__": {
  "lineno": 153,
  "symbols_in_volume": [
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.coretypes.Mono.__setstate__": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Mono._slotted": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Mono.info": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Mono.measure": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Mono.parameters": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Mono.shape": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Mono.subarray": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Mono.to_numpy_dtype": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Null": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.coretypes.Option": {
  "lineno": 719,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.coretypes.Option.__init__": {
  "lineno": 727,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Option.__str__": {
  "lineno": 738,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Option.itemsize": {
  "lineno": 734,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Option.shape": {
  "lineno": 730,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Option.to_numpy_dtype": {
  "lineno": 741,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Record": {
  "lineno": 1008,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.coretypes.Record.__getitem__": {
  "lineno": 1078,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Record.__init__": {
  "lineno": 1032,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Record.__str__": {
  "lineno": 1081,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Record.dict": {
  "lineno": 1059,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Record.fields": {
  "lineno": 1055,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Record.names": {
  "lineno": 1063,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Record.to_numpy_dtype": {
  "lineno": 1071,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "datashape.coretypes.Record.types": {
  "lineno": 1067,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.RecordMeta": {
  "lineno": 941,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.coretypes.RecordMeta.__getitem__": {
  "lineno": 970,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.RecordMeta._unpack_slice": {
  "lineno": 942,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.String": {
  "lineno": 371,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.coretypes.String.__init__": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.String.__repr__": {
  "lineno": 419,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.String.__str__": {
  "lineno": 408,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.String.to_numpy_dtype": {
  "lineno": 423,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "datashape.coretypes.Time": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.coretypes.Time.__init__": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Time.__str__": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.TimeDelta": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.coretypes.TimeDelta.__init__": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.TimeDelta.__str__": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.TimeDelta.to_numpy_dtype": {
  "lineno": 318,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "datashape.coretypes.Tuple": {
  "lineno": 1124,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.coretypes.Tuple.__init__": {
  "lineno": 1132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Tuple.__str__": {
  "lineno": 1143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Tuple.to_numpy_dtype": {
  "lineno": 1146,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "datashape.coretypes.Type": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.coretypes.Type.__new__": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Type.lookup_type": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Type.register": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.TypeVar": {
  "lineno": 863,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.coretypes.TypeVar.__init__": {
  "lineno": 871,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.TypeVar.__str__": {
  "lineno": 877,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Unit": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.coretypes.Unit.__str__": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Units": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.coretypes.Units.__init__": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Units.__str__": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.Var": {
  "lineno": 856,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.coretypes._format_categories": {
  "lineno": 1088,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes._launder": {
  "lineno": 911,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.from_numpy": {
  "lineno": 1315,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "datashape.coretypes.normalize_time_unit": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.pprint": {
  "lineno": 1353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.print_unicode_string": {
  "lineno": 1346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.to_numpy": {
  "lineno": 1282,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.to_numpy_dtype": {
  "lineno": 1276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.coretypes.unify_name_types": {
  "lineno": 978,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.discovery": {
  "lineno": null,
  "symbols_in_volume": [
   "itertools.chain.from_iterable",
   "mock.Mock",
   "numpy.integer",
   "sys.version_info"
  ],
  "type": "module"
 },
 "datashape.discovery._mapping_discover": {
  "lineno": 366,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.discovery.deltaparse": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.timedelta64",
   "re.split"
  ],
  "type": "function"
 },
 "datashape.discovery.descendents": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.discovery.discover": {
  "lineno": 443,
  "symbols_in_volume": [
   "mock.Mock"
  ],
  "type": "function"
 },
 "datashape.discovery.do_one": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.discovery.do_one.f": {
  "lineno": 342,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.discovery.is_string_array": {
  "lineno": 387,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.discovery.is_zero_time": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.discovery.isnull": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.discovery.lowest_common_dshape": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.discovery.timeparse": {
  "lineno": 138,
  "symbols_in_volume": [
   "datetime.datetime.strptime"
  ],
  "type": "function"
 },
 "datashape.discovery.unite_base": {
  "lineno": 282,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.discovery.unite_identical": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.discovery.unite_merge_dimensions": {
  "lineno": 321,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.discovery.unpack": {
  "lineno": 351,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.dispatch": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial",
   "multipledispatch.dispatch"
  ],
  "type": "module"
 },
 "datashape.error": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "datashape.error.DataShapeSyntaxError": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.error.DataShapeSyntaxError.__init__": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.error.DataShapeSyntaxError.__repr__": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.error.DataShapeSyntaxError.__str__": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.internal_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "datashape.internal_utils.IndexCallable": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.internal_utils.IndexCallable.__getitem__": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.internal_utils.IndexCallable.__init__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.internal_utils._toposort": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.internal_utils.groupby": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.internal_utils.isidentifier": {
  "lineno": 121,
  "symbols_in_volume": [
   "keyword.iskeyword",
   "re.match"
  ],
  "type": "function"
 },
 "datashape.internal_utils.remove": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.internal_utils.reverse_dict": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.lexer": {
  "lineno": null,
  "symbols_in_volume": [
   "ast.literal_eval",
   "collections.namedtuple",
   "re.MULTILINE",
   "re.compile"
  ],
  "type": "module"
 },
 "datashape.lexer._str_val": {
  "lineno": 17,
  "symbols_in_volume": [
   "ast.parse"
  ],
  "type": "function"
 },
 "datashape.lexer.lex": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.parser": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "datashape.parser.DataShapeParser": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.parser.DataShapeParser.__init__": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.parser.DataShapeParser.advance_tok": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.parser.DataShapeParser.parse_boolean": {
  "lineno": 453,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.parser.DataShapeParser.parse_boolean_list": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.parser.DataShapeParser.parse_datashape": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.parser.DataShapeParser.parse_datashape_list": {
  "lineno": 418,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.parser.DataShapeParser.parse_datashape_nooption": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.parser.DataShapeParser.parse_dim": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.parser.DataShapeParser.parse_dtype": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.parser.DataShapeParser.parse_funcproto_or_tuple_type": {
  "lineno": 549,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.parser.DataShapeParser.parse_homogeneous_list": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.parser.DataShapeParser.parse_integer": {
  "lineno": 430,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.parser.DataShapeParser.parse_integer_list": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.parser.DataShapeParser.parse_string": {
  "lineno": 476,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.parser.DataShapeParser.parse_string_list": {
  "lineno": 487,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.parser.DataShapeParser.parse_struct_field": {
  "lineno": 525,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.parser.DataShapeParser.parse_struct_type": {
  "lineno": 499,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.parser.DataShapeParser.parse_type_arg": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.parser.DataShapeParser.parse_type_arg_list": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.parser.DataShapeParser.parse_type_kwarg": {
  "lineno": 396,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.parser.DataShapeParser.raise_error": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.parser.DataShapeParser.syntactic_sugar": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.parser.DataShapeParser.tok": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.parser.parse": {
  "lineno": 593,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.predicates": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "datashape.predicates._dimensions": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.predicates.isboolean": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.predicates.iscollection": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.predicates.isdatelike": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.predicates.isdimension": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.predicates.isfixed": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.predicates.ishomogeneous": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.predicates.isnumeric": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.issubdtype",
   "numpy.number"
  ],
  "type": "function"
 },
 "datashape.predicates.isreal": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.predicates.isrecord": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.predicates.isscalar": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.predicates.istabular": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.predicates.launder": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.promote": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "datashape.promote.optionify": {
  "lineno": 57,
  "symbols_in_volume": [
   "datashape.Option"
  ],
  "type": "function"
 },
 "datashape.promote.promote": {
  "lineno": 10,
  "symbols_in_volume": [
   "datashape.CType.from_numpy_dtype",
   "datashape.string",
   "datashape.to_numpy_dtype",
   "numpy.result_type"
  ],
  "type": "function"
 },
 "datashape.py2help": {
  "lineno": null,
  "symbols_in_volume": [
   "__builtin__.basestring",
   "__builtin__.reduce",
   "__builtin__.unicode",
   "ctypes.py_object",
   "ctypes.pythonapi",
   "ctypes.pythonapi.PyDictProxy_New",
   "platform.python_implementation",
   "sys.version_info",
   "types.MappingProxyType"
  ],
  "type": "module"
 },
 "datashape.py2help.OrderedDict": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.py2help.OrderedDict.__new__": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.py2help.mappingproxy": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.py2help.with_metaclass": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "datashape.tests.test_coretypes": {
  "lineno": null,
  "symbols_in_volume": [
   "datashape.coretypes.Fixed",
   "datashape.coretypes.Option",
   "datashape.coretypes.int32",
   "datashape.datetime_",
   "datashape.dshape",
   "datashape.float64",
   "datashape.string",
   "datashape.var"
  ],
  "type": "module"
 },
 "datashape.tests.test_coretypes.TestComplexFieldNames": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.tests.test_coretypes.TestComplexFieldNames.test_bad_02": {
  "lineno": 301,
  "symbols_in_volume": [
   "datashape.dshape",
   "datashape.error.DataShapeSyntaxError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.TestComplexFieldNames.test_bad_backslashes_01": {
  "lineno": 306,
  "symbols_in_volume": [
   "datashape.dshape",
   "datashape.error.DataShapeSyntaxError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.TestComplexFieldNames.test_double_quotes_01": {
  "lineno": 272,
  "symbols_in_volume": [
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.TestComplexFieldNames.test_mixed_quotes_01": {
  "lineno": 290,
  "symbols_in_volume": [
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.TestComplexFieldNames.test_multi_quotes_01": {
  "lineno": 279,
  "symbols_in_volume": [
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.TestComplexFieldNames.test_single_quotes_01": {
  "lineno": 263,
  "symbols_in_volume": [
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.TestComplexFieldNames.test_spaces_01": {
  "lineno": 230,
  "symbols_in_volume": [
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.TestComplexFieldNames.test_spaces_02": {
  "lineno": 234,
  "symbols_in_volume": [
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.TestFromNumPyDtype": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.tests.test_coretypes.TestFromNumPyDtype.test_ascii_string": {
  "lineno": 149,
  "symbols_in_volume": [
   "datashape.dshape",
   "datashape.from_numpy",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.TestFromNumPyDtype.test_date": {
  "lineno": 138,
  "symbols_in_volume": [
   "datashape.dshape",
   "datashape.from_numpy",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.TestFromNumPyDtype.test_datetime": {
  "lineno": 132,
  "symbols_in_volume": [
   "datashape.dshape",
   "datashape.from_numpy",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.TestFromNumPyDtype.test_int32": {
  "lineno": 123,
  "symbols_in_volume": [
   "datashape.dshape",
   "datashape.from_numpy"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.TestFromNumPyDtype.test_string": {
  "lineno": 153,
  "symbols_in_volume": [
   "datashape.dshape",
   "datashape.from_numpy",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.TestFromNumPyDtype.test_string_from_CType_classmethod": {
  "lineno": 157,
  "symbols_in_volume": [
   "datashape.coretypes.CType.from_numpy_dtype",
   "datashape.coretypes.String",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.TestFromNumPyDtype.test_struct": {
  "lineno": 127,
  "symbols_in_volume": [
   "datashape.dshape",
   "datashape.from_numpy",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.TestFromNumPyDtype.test_timedelta": {
  "lineno": 143,
  "symbols_in_volume": [
   "datashape.coretypes._units",
   "datashape.dshape",
   "datashape.from_numpy",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.TestToNumpyDtype": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.tests.test_coretypes.TestToNumpyDtype.test_date": {
  "lineno": 77,
  "symbols_in_volume": [
   "datashape.dshape",
   "datashape.to_numpy_dtype",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.TestToNumpyDtype.test_datetime": {
  "lineno": 74,
  "symbols_in_volume": [
   "datashape.dshape",
   "datashape.to_numpy_dtype",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.TestToNumpyDtype.test_decimal": {
  "lineno": 91,
  "symbols_in_volume": [
   "datashape.dshape",
   "datashape.to_numpy_dtype",
   "numpy.float64",
   "numpy.int16",
   "numpy.int64",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.TestToNumpyDtype.test_dimensions": {
  "lineno": 83,
  "symbols_in_volume": [
   "datashape.dshape",
   "datashape.to_numpy_dtype",
   "numpy.int32"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.TestToNumpyDtype.test_simple": {
  "lineno": 69,
  "symbols_in_volume": [
   "datashape.dshape",
   "datashape.to_numpy_dtype",
   "numpy.dtype",
   "numpy.int32"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.TestToNumpyDtype.test_string": {
  "lineno": 80,
  "symbols_in_volume": [
   "datashape.dshape",
   "datashape.to_numpy_dtype",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.TestToNumpyDtype.test_timedelta": {
  "lineno": 86,
  "symbols_in_volume": [
   "datashape.dshape",
   "datashape.to_numpy_dtype",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.a": {
  "lineno": 40,
  "symbols_in_volume": [
   "datashape.coretypes.Record",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.b": {
  "lineno": 45,
  "symbols_in_volume": [
   "datashape.coretypes.Record",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_all_dims_before_last": {
  "lineno": 484,
  "symbols_in_volume": [
   "datashape.coretypes.DataShape",
   "datashape.uint32",
   "datashape.var",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_already_registered_type": {
  "lineno": 423,
  "symbols_in_volume": [
   "datashape.coretypes.Type.register",
   "datashape.coretypes.int64",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_bytes_str": {
  "lineno": 475,
  "symbols_in_volume": [
   "datashape.Bytes"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_categorical": {
  "lineno": 364,
  "symbols_in_volume": [
   "datashape.coretypes.Categorical",
   "datashape.coretypes.DataShape",
   "datashape.dshape",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_complex_with_real_component_fails": {
  "lineno": 418,
  "symbols_in_volume": [
   "datashape.dshape",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_ctype_alignment": {
  "lineno": 547,
  "symbols_in_volume": [
   "datashape.coretypes.int32.alignment"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_datashape_coerces_ints": {
  "lineno": 195,
  "symbols_in_volume": [
   "datashape.coretypes.DataShape",
   "datashape.coretypes.Fixed",
   "datashape.coretypes.int32"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_datashape_parameter_count": {
  "lineno": 489,
  "symbols_in_volume": [
   "datashape.coretypes.DataShape",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_datetime_with_tz_not_a_string": {
  "lineno": 447,
  "symbols_in_volume": [
   "datashape.coretypes.DateTime",
   "datetime.tzinfo",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_decimal_attributes": {
  "lineno": 603,
  "symbols_in_volume": [
   "datashape.coretypes.Decimal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_duplicate_field_names_fails": {
  "lineno": 397,
  "symbols_in_volume": [
   "datashape.coretypes.Record",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_ellipsis_with_typevar_repr": {
  "lineno": 433,
  "symbols_in_volume": [
   "datashape.coretypes.Ellipsis",
   "datashape.coretypes.TypeVar"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_eq": {
  "lineno": 161,
  "symbols_in_volume": [
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_error_on_datashape_with_string_argument": {
  "lineno": 62,
  "symbols_in_volume": [
   "datashape.coretypes.DataShape",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_fixed_comparison": {
  "lineno": 556,
  "symbols_in_volume": [
   "datashape.coretypes.Fixed"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_fixed_dimensions_must_be_positive": {
  "lineno": 551,
  "symbols_in_volume": [
   "datashape.coretypes.Fixed",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_from_numpy_dtype_fails": {
  "lineno": 540,
  "symbols_in_volume": [
   "datashape.coretypes.CType.from_numpy_dtype",
   "numpy.dtype",
   "numpy.zeros",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_funcproto_attrs": {
  "lineno": 569,
  "symbols_in_volume": [
   "datashape.coretypes.DataShape",
   "datashape.coretypes.Option",
   "datashape.coretypes.Record",
   "datashape.coretypes.String",
   "datashape.coretypes.int32",
   "datashape.dshape",
   "datashape.float64"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_hash_and_eq_consistency": {
  "lineno": 662,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_integers": {
  "lineno": 58,
  "symbols_in_volume": [
   "datashape.coretypes.Record",
   "datashape.coretypes.real"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_invalid_record_literal": {
  "lineno": 620,
  "symbols_in_volume": [
   "datashape.coretypes.R",
   "numpy.s_",
   "operator.getitem",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_long_categorical_repr": {
  "lineno": 388,
  "symbols_in_volume": [
   "datashape.coretypes.Categorical"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_map": {
  "lineno": 587,
  "symbols_in_volume": [
   "datashape.coretypes.Map",
   "datashape.coretypes.Record",
   "datashape.coretypes.int32",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_map_parse": {
  "lineno": 597,
  "symbols_in_volume": [
   "datashape.coretypes.DataShape",
   "datashape.coretypes.Map",
   "datashape.coretypes.Record",
   "datashape.coretypes.int32",
   "datashape.coretypes.int64",
   "datashape.dshape",
   "datashape.var"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_multiplication_of_dshapes": {
  "lineno": 428,
  "symbols_in_volume": [
   "datashape.coretypes.int32",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_named_datashape": {
  "lineno": 494,
  "symbols_in_volume": [
   "datashape.coretypes.DataShape",
   "datashape.uint32"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_negative_slicing": {
  "lineno": 184,
  "symbols_in_volume": [
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_newaxis_slicing": {
  "lineno": 189,
  "symbols_in_volume": [
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_null_datashape_string": {
  "lineno": 438,
  "symbols_in_volume": [
   "datashape.coretypes.null"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_option_date_to_numpy": {
  "lineno": 341,
  "symbols_in_volume": [
   "datashape.coretypes.Date",
   "datashape.coretypes.Option",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_option_datetime_to_numpy": {
  "lineno": 345,
  "symbols_in_volume": [
   "datashape.coretypes.DateTime",
   "datashape.coretypes.Option",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_option_passes_itemsize": {
  "lineno": 211,
  "symbols_in_volume": [
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_option_sanitizes_strings": {
  "lineno": 207,
  "symbols_in_volume": [
   "datashape.coretypes.Option",
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_option_timedelta_to_numpy": {
  "lineno": 349,
  "symbols_in_volume": [
   "datashape.coretypes.Option",
   "datashape.coretypes.TimeDelta",
   "numpy.dtype",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_option_to_numpy_dtype": {
  "lineno": 524,
  "symbols_in_volume": [
   "datashape.coretypes.Option",
   "datashape.date_",
   "datashape.datetime_",
   "datashape.timedelta_",
   "numpy.dtype",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_option_to_numpy_dtype_fails": {
  "lineno": 532,
  "symbols_in_volume": [
   "datashape.coretypes.Option",
   "datashape.coretypes.Record",
   "datashape.coretypes.int32",
   "datashape.float64",
   "datashape.uint32",
   "pytest.mark.parametrize",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_record_from_OrderedDict": {
  "lineno": 327,
  "symbols_in_volume": [
   "datashape.coretypes.Record",
   "datashape.py2help.OrderedDict",
   "numpy.dtype",
   "pytest.mark.xfail",
   "sys.version_info"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_record_literal": {
  "lineno": 614,
  "symbols_in_volume": [
   "datashape.coretypes.R",
   "datashape.coretypes.Record"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_record_string": {
  "lineno": 317,
  "symbols_in_volume": [
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_record_subshape_integer_index": {
  "lineno": 503,
  "symbols_in_volume": [
   "datashape.coretypes.DataShape",
   "datashape.coretypes.Record",
   "datashape.coretypes.int32"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_record_with_unicode_name_as_numpy_dtype": {
  "lineno": 322,
  "symbols_in_volume": [
   "datashape.coretypes.Record",
   "datashape.py2help.unicode",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_repr_of_eval_is_dshape": {
  "lineno": 403,
  "symbols_in_volume": [
   "datashape.dshape",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_respects_order": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_serializable": {
  "lineno": 166,
  "symbols_in_volume": [
   "datashape.dshape",
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_shape": {
  "lineno": 200,
  "symbols_in_volume": [
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_slice_subshape_bad_types": {
  "lineno": 518,
  "symbols_in_volume": [
   "datashape.coretypes.Record",
   "datashape.var",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_slice_subshape_negative_start": {
  "lineno": 513,
  "symbols_in_volume": [
   "datashape.coretypes.Record",
   "datashape.var"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_slice_subshape_negative_step": {
  "lineno": 508,
  "symbols_in_volume": [
   "datashape.coretypes.Record"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_strings": {
  "lineno": 54,
  "symbols_in_volume": [
   "datashape.coretypes.Record",
   "datashape.coretypes.real"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_subarray_invalid_index": {
  "lineno": 498,
  "symbols_in_volume": [
   "datashape.dshape",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_subshape": {
  "lineno": 176,
  "symbols_in_volume": [
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_time_with_tz_not_a_string": {
  "lineno": 442,
  "symbols_in_volume": [
   "datashape.coretypes.Time",
   "datetime.tzinfo",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_timedelta_aliases": {
  "lineno": 114,
  "symbols_in_volume": [
   "datashape.coretypes._unit_aliases",
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_timedelta_bad_unit": {
  "lineno": 105,
  "symbols_in_volume": [
   "datashape.dshape",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_timedelta_eval_repr": {
  "lineno": 99,
  "symbols_in_volume": [
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_timedelta_nano": {
  "lineno": 110,
  "symbols_in_volume": [
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_timedelta_repr": {
  "lineno": 452,
  "symbols_in_volume": [
   "datashape.coretypes.TimeDelta",
   "datashape.coretypes._units",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_timedelta_str": {
  "lineno": 457,
  "symbols_in_volume": [
   "datashape.coretypes.TimeDelta",
   "datashape.coretypes._units",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_to_numpy_fails": {
  "lineno": 579,
  "symbols_in_volume": [
   "datashape.coretypes.Option",
   "datashape.coretypes.int32",
   "datashape.to_numpy",
   "datashape.var",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_tuple_datashape_to_numpy_dtype": {
  "lineno": 336,
  "symbols_in_volume": [
   "datashape.dshape",
   "datashape.to_numpy_dtype"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_tuple_str": {
  "lineno": 575,
  "symbols_in_volume": [
   "datashape.Tuple",
   "datashape.coretypes.Option",
   "datashape.coretypes.int32",
   "datashape.float64"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_typevar_must_be_upper_case": {
  "lineno": 560,
  "symbols_in_volume": [
   "datashape.coretypes.TypeVar",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_typevar_repr": {
  "lineno": 565,
  "symbols_in_volume": [
   "datashape.coretypes.TypeVar"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_unicode_record_names": {
  "lineno": 637,
  "symbols_in_volume": [
   "datashape.coretypes.Record",
   "datashape.coretypes.int64",
   "datashape.float64",
   "datashape.py2help.unicode",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_unit_construction": {
  "lineno": 462,
  "symbols_in_volume": [
   "datashape.Units",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_unit_str": {
  "lineno": 469,
  "symbols_in_volume": [
   "datashape.Units",
   "datashape.coretypes.DataShape",
   "datashape.uint32"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.test_unsupported_string_encoding": {
  "lineno": 479,
  "symbols_in_volume": [
   "datashape.coretypes.String",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_coretypes.unique": {
  "lineno": 356,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.tests.test_creation": {
  "lineno": null,
  "symbols_in_volume": [
   "datashape.int32",
   "datashape.int64",
   "datashape.uint32",
   "datashape.uint64"
  ],
  "type": "module"
 },
 "datashape.tests.test_creation.TestDataShapeCreation": {
  "lineno": 12,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "datashape.tests.test_creation.TestDataShapeCreation.test_atom_shape_errors": {
  "lineno": 48,
  "symbols_in_volume": [
   "datashape.dshape",
   "datashape.error.DataShapeSyntaxError"
  ],
  "type": "function"
 },
 "datashape.tests.test_creation.TestDataShapeCreation.test_atom_shapes": {
  "lineno": 26,
  "symbols_in_volume": [
   "datashape.bool_",
   "datashape.complex128",
   "datashape.complex64",
   "datashape.date_",
   "datashape.datetime_",
   "datashape.dshape",
   "datashape.float32",
   "datashape.float64",
   "datashape.int16",
   "datashape.int32",
   "datashape.int64",
   "datashape.int8",
   "datashape.json",
   "datashape.string",
   "datashape.time_",
   "datashape.uint16",
   "datashape.uint32",
   "datashape.uint64",
   "datashape.uint8"
  ],
  "type": "function"
 },
 "datashape.tests.test_creation.TestDataShapeCreation.test_constraints_error": {
  "lineno": 54,
  "symbols_in_volume": [
   "datashape.dshape",
   "datashape.error.DataShapeTypeError",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "datashape.tests.test_creation.TestDataShapeCreation.test_datetime": {
  "lineno": 89,
  "symbols_in_volume": [
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_creation.TestDataShapeCreation.test_dshape_into_repr": {
  "lineno": 192,
  "symbols_in_volume": [
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_creation.TestDataShapeCreation.test_ellipsis_error": {
  "lineno": 59,
  "symbols_in_volume": [
   "datashape.dshape",
   "datashape.error.DataShapeSyntaxError"
  ],
  "type": "function"
 },
 "datashape.tests.test_creation.TestDataShapeCreation.test_empty_struct": {
  "lineno": 104,
  "symbols_in_volume": [
   "datashape.DataShape",
   "datashape.Record",
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_creation.TestDataShapeCreation.test_from_numpy_fields": {
  "lineno": 118,
  "symbols_in_volume": [
   "datashape.float64",
   "datashape.from_numpy",
   "datashape.int32",
   "datashape.int64",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "datashape.tests.test_creation.TestDataShapeCreation.test_python_containers": {
  "lineno": 147,
  "symbols_in_volume": [
   "datashape.Var",
   "datashape.dshape",
   "datashape.int32"
  ],
  "type": "function"
 },
 "datashape.tests.test_creation.TestDataShapeCreation.test_ragged_array": {
  "lineno": 114,
  "symbols_in_volume": [
   "datashape.Var",
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_creation.TestDataShapeCreation.test_raise_on_bad_input": {
  "lineno": 14,
  "symbols_in_volume": [
   "datashape.DataShapeSyntaxError",
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_creation.TestDataShapeCreation.test_reserved_future_bigint": {
  "lineno": 22,
  "symbols_in_volume": [
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_creation.TestDataShapeCreation.test_string_atom": {
  "lineno": 71,
  "symbols_in_volume": [
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_creation.TestDataShapeCreation.test_struct_of_array": {
  "lineno": 107,
  "symbols_in_volume": [
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_creation.TestDataShapeCreation.test_syntax": {
  "lineno": 133,
  "symbols_in_volume": [
   "datashape.Fixed",
   "datashape.Var",
   "datashape.dshape",
   "datashape.int32"
  ],
  "type": "function"
 },
 "datashape.tests.test_creation.TestDataShapeCreation.test_time": {
  "lineno": 82,
  "symbols_in_volume": [
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_creation.TestDataShapeCreation.test_to_numpy_fields": {
  "lineno": 126,
  "symbols_in_volume": [
   "datashape.dshape",
   "datashape.to_numpy",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "datashape.tests.test_creation.TestDataShapeCreation.test_type_decl": {
  "lineno": 63,
  "symbols_in_volume": [
   "datashape.dshape",
   "datashape.error.DataShapeTypeError",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "datashape.tests.test_creation.TestDataShapeCreation.test_type_decl_concrete": {
  "lineno": 67,
  "symbols_in_volume": [
   "datashape.dshape",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "datashape.tests.test_creation.TestDataShapeCreation.test_units": {
  "lineno": 97,
  "symbols_in_volume": [
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_creation.test_intptr_size": {
  "lineno": 212,
  "symbols_in_volume": [
   "ctypes.c_void_p",
   "ctypes.sizeof",
   "datashape.dshape",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery": {
  "lineno": null,
  "symbols_in_volume": [
   "datashape.discovery.do_one",
   "datashape.discovery.unite_base",
   "datashape.discovery.unite_identical",
   "datashape.discovery.unite_merge_dimensions"
  ],
  "type": "module"
 },
 "datashape.tests.test_discovery.test_big_discover": {
  "lineno": 257,
  "symbols_in_volume": [
   "datashape.coretypes.Tuple",
   "datashape.coretypes.int64",
   "datashape.coretypes.string",
   "datashape.discovery.discover"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_datetime": {
  "lineno": 84,
  "symbols_in_volume": [
   "datashape.coretypes.datetime_",
   "datashape.discovery.discover",
   "datetime.datetime"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_discover_appropriate": {
  "lineno": 252,
  "symbols_in_volume": [
   "datashape.coretypes.Tuple",
   "datashape.coretypes.int64",
   "datashape.coretypes.real",
   "datashape.discovery.discover"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_discover_array_like": {
  "lineno": 310,
  "symbols_in_volume": [
   "datashape.discovery.discover",
   "datashape.dshape",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_discover_array_like.MyArray": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.tests.test_discovery.test_discover_array_like.MyArray.__init__": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_discover_bytes": {
  "lineno": 324,
  "symbols_in_volume": [
   "datashape.coretypes.String",
   "datashape.discovery.discover",
   "pytest.mark.xfail",
   "sys.version_info"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_discover_empty_sequence": {
  "lineno": 340,
  "symbols_in_volume": [
   "datashape.coretypes.string",
   "datashape.coretypes.var",
   "datashape.discovery.discover",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_discover_mixed": {
  "lineno": 237,
  "symbols_in_volume": [
   "datashape.coretypes.Tuple",
   "datashape.discovery.discover",
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_discover_mock": {
  "lineno": 351,
  "symbols_in_volume": [
   "datashape.discovery.discover",
   "mock.Mock",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_discover_undiscoverable": {
  "lineno": 333,
  "symbols_in_volume": [
   "datashape.discovery.discover",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_discover_undiscoverable.MyClass": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.tests.test_discovery.test_dshape_missing_data": {
  "lineno": 230,
  "symbols_in_volume": [
   "datashape.coretypes.Tuple",
   "datashape.coretypes.int64",
   "datashape.discovery.discover",
   "datashape.discovery.null"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_frozenset": {
  "lineno": 44,
  "symbols_in_volume": [
   "datashape.discovery.discover"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_heterogeneous_ordered_container": {
  "lineno": 48,
  "symbols_in_volume": [
   "datashape.coretypes.Tuple",
   "datashape.discovery.discover"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_integrative": {
  "lineno": 152,
  "symbols_in_volume": [
   "datashape.discovery.discover",
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_letters_only_strings": {
  "lineno": 303,
  "symbols_in_volume": [
   "datashape.coretypes.string",
   "datashape.discovery.discover"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_list": {
  "lineno": 35,
  "symbols_in_volume": [
   "datashape.discovery.discover"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_list_of_dicts_difference": {
  "lineno": 274,
  "symbols_in_volume": [
   "datashape.discovery.discover",
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_list_of_dicts_no_difference": {
  "lineno": 266,
  "symbols_in_volume": [
   "datashape.discovery.discover",
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_long": {
  "lineno": 30,
  "symbols_in_volume": [
   "datashape.coretypes.int64",
   "sys.version_info"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_lowest_common_dshape_varlen_strings": {
  "lineno": 345,
  "symbols_in_volume": [
   "datashape.coretypes.String",
   "datashape.coretypes.string",
   "datashape.discovery.lowest_common_dshape",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_mappingproxy": {
  "lineno": 65,
  "symbols_in_volume": [
   "datashape.discovery.discover",
   "datashape.py2help.CPYTHON",
   "datashape.py2help.PY2",
   "datashape.py2help.mappingproxy",
   "datashape.util.testing.assert_dshape_equal",
   "numpy.float32",
   "numpy.int64",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_nested_complex_record_type": {
  "lineno": 296,
  "symbols_in_volume": [
   "datashape.discovery.discover",
   "datashape.dshape",
   "numpy.dtype",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_numpy_array": {
  "lineno": 166,
  "symbols_in_volume": [
   "datashape.discovery.discover",
   "datashape.dshape",
   "numpy.int32",
   "numpy.ones"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_numpy_array_with_strings": {
  "lineno": 170,
  "symbols_in_volume": [
   "datashape.coretypes.string",
   "datashape.discovery.discover",
   "numpy.array"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_numpy_recarray_with_strings": {
  "lineno": 175,
  "symbols_in_volume": [
   "datashape.discovery.discover",
   "datashape.dshape",
   "numpy.array"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_numpy_scalars": {
  "lineno": 161,
  "symbols_in_volume": [
   "datashape.coretypes.float64",
   "datashape.coretypes.int32",
   "datashape.discovery.discover",
   "numpy.float64",
   "numpy.int32"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_ordereddict": {
  "lineno": 76,
  "symbols_in_volume": [
   "datashape.coretypes.R",
   "datashape.coretypes.float32",
   "datashape.coretypes.int64",
   "datashape.coretypes.string",
   "datashape.discovery.discover",
   "datashape.py2help.OrderedDict",
   "datashape.util.testing.assert_dshape_equal",
   "numpy.float32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_python_date": {
  "lineno": 107,
  "symbols_in_volume": [
   "datashape.coretypes.date_",
   "datashape.discovery.discover",
   "datetime.date"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_record": {
  "lineno": 59,
  "symbols_in_volume": [
   "datashape.coretypes.Record",
   "datashape.discovery.discover"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_set": {
  "lineno": 40,
  "symbols_in_volume": [
   "datashape.discovery.discover"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_simple": {
  "lineno": 21,
  "symbols_in_volume": [
   "datashape.coretypes.bool_",
   "datashape.coretypes.complex128",
   "datashape.coretypes.float64",
   "datashape.coretypes.int64",
   "datashape.coretypes.string",
   "datashape.discovery.discover",
   "datashape.discovery.null"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_single_space_string_is_not_date": {
  "lineno": 111,
  "symbols_in_volume": [
   "datashape.coretypes.string",
   "datashape.discovery.discover"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_string": {
  "lineno": 52,
  "symbols_in_volume": [
   "datashape.discovery.discover"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_string_date": {
  "lineno": 103,
  "symbols_in_volume": [
   "datashape.coretypes.date_",
   "datashape.discovery.discover"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_string_that_looks_like_date": {
  "lineno": 115,
  "symbols_in_volume": [
   "datashape.coretypes.string",
   "datashape.discovery.discover"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_string_with_overflow": {
  "lineno": 362,
  "symbols_in_volume": [
   "datashape.coretypes.string",
   "datashape.discovery.discover"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_test": {
  "lineno": 247,
  "symbols_in_volume": [
   "datashape.coretypes.Tuple",
   "datashape.coretypes.int64",
   "datashape.coretypes.string",
   "datashape.discovery.discover"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_time": {
  "lineno": 120,
  "symbols_in_volume": [
   "datashape.coretypes.time_",
   "datashape.discovery.discover",
   "datetime.time"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_time_string": {
  "lineno": 143,
  "symbols_in_volume": [
   "datashape.coretypes.datetime_",
   "datashape.coretypes.time_",
   "datashape.discovery.discover"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_timedelta": {
  "lineno": 124,
  "symbols_in_volume": [
   "datashape.coretypes.timedelta_",
   "datashape.discovery.discover",
   "datetime.timedelta",
   "itertools.starmap"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_timedelta_strings": {
  "lineno": 130,
  "symbols_in_volume": [
   "datashape.coretypes.TimeDelta",
   "datashape.discovery.discover",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_unite": {
  "lineno": 186,
  "symbols_in_volume": [
   "datashape.coretypes.int32",
   "datashape.coretypes.var"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_unite_base": {
  "lineno": 262,
  "symbols_in_volume": [
   "datashape.coretypes.date_",
   "datashape.coretypes.datetime_",
   "datashape.discovery.unite_base"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_unite_base_on_records": {
  "lineno": 283,
  "symbols_in_volume": [
   "datashape.coretypes.Null",
   "datashape.discovery.unite_base",
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_unite_missing_values": {
  "lineno": 193,
  "symbols_in_volume": [
   "datashape.coretypes.Option",
   "datashape.coretypes.int32",
   "datashape.coretypes.string",
   "datashape.discovery.null"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_unite_records": {
  "lineno": 210,
  "symbols_in_volume": [
   "datashape.coretypes.Option",
   "datashape.coretypes.Record",
   "datashape.coretypes.float64",
   "datashape.coretypes.int64",
   "datashape.coretypes.string",
   "datashape.discovery.discover"
  ],
  "type": "function"
 },
 "datashape.tests.test_discovery.test_unite_tuples": {
  "lineno": 198,
  "symbols_in_volume": [
   "datashape.coretypes.Option",
   "datashape.coretypes.Tuple",
   "datashape.coretypes.int64",
   "datashape.coretypes.string",
   "datashape.discovery.discover"
  ],
  "type": "function"
 },
 "datashape.tests.test_lexer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "datashape.tests.test_lexer.TestDataShapeLexer": {
  "lineno": 13,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "datashape.tests.test_lexer.TestDataShapeLexer.check_failing_token": {
  "lineno": 22,
  "symbols_in_volume": [
   "datashape.DataShapeSyntaxError",
   "datashape.lexer.lex"
  ],
  "type": "function"
 },
 "datashape.tests.test_lexer.TestDataShapeLexer.check_isolated_token": {
  "lineno": 15,
  "symbols_in_volume": [
   "datashape.lexer",
   "datashape.lexer.Token",
   "datashape.lexer.lex"
  ],
  "type": "function"
 },
 "datashape.tests.test_lexer.TestDataShapeLexer.test_failing_tokens": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.tests.test_lexer.TestDataShapeLexer.test_integer": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.tests.test_lexer.TestDataShapeLexer.test_isolated_tokens": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.tests.test_lexer.TestDataShapeLexer.test_string": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.tests.test_lexer.TestDataShapeLexer.test_whitespace": {
  "lineno": 120,
  "symbols_in_volume": [
   "datashape.lexer.ASTERISK",
   "datashape.lexer.COLON",
   "datashape.lexer.EQUAL",
   "datashape.lexer.INTEGER",
   "datashape.lexer.NAME_OTHER",
   "datashape.lexer.RARROW",
   "datashape.lexer.STRING",
   "datashape.lexer.lex"
  ],
  "type": "function"
 },
 "datashape.tests.test_operations": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "datashape.tests.test_operations.test_array_subarray": {
  "lineno": 14,
  "symbols_in_volume": [
   "datashape.DataShape",
   "datashape.dshape",
   "datashape.float64",
   "datashape.int32"
  ],
  "type": "function"
 },
 "datashape.tests.test_operations.test_dshape_compare": {
  "lineno": 25,
  "symbols_in_volume": [
   "datashape.dshape",
   "datashape.int32"
  ],
  "type": "function"
 },
 "datashape.tests.test_operations.test_scalar_subarray": {
  "lineno": 5,
  "symbols_in_volume": [
   "datashape.int32",
   "datashape.int32.subarray",
   "datashape.string",
   "datashape.string.subarray",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "datashape.tests.test_parser.TestDataShapeParseBasicDType": {
  "lineno": 22,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "datashape.tests.test_parser.TestDataShapeParseBasicDType.setUp": {
  "lineno": 24,
  "symbols_in_volume": [
   "datashape.TypeSymbolTable"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParseBasicDType.test_bool": {
  "lineno": 28,
  "symbols_in_volume": [
   "datashape.coretypes.DataShape",
   "datashape.coretypes.bool_",
   "datashape.parser.parse"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParseBasicDType.test_complex": {
  "lineno": 89,
  "symbols_in_volume": [
   "datashape.coretypes.DataShape",
   "datashape.coretypes.complex_",
   "datashape.coretypes.complex_float32",
   "datashape.coretypes.complex_float64",
   "datashape.parser.parse"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParseBasicDType.test_float": {
  "lineno": 65,
  "symbols_in_volume": [
   "datashape.coretypes.DataShape",
   "datashape.coretypes.float16",
   "datashape.coretypes.float32",
   "datashape.coretypes.float64",
   "datashape.coretypes.real",
   "datashape.parser.parse"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParseBasicDType.test_null": {
  "lineno": 80,
  "symbols_in_volume": [
   "datashape.coretypes.DataShape",
   "datashape.coretypes.null",
   "datashape.parser.parse"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParseBasicDType.test_object": {
  "lineno": 86,
  "symbols_in_volume": [
   "datashape.coretypes.DataShape",
   "datashape.coretypes.object_",
   "datashape.parser.parse"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParseBasicDType.test_option": {
  "lineno": 100,
  "symbols_in_volume": [
   "datashape.coretypes.DataShape",
   "datashape.coretypes.Fixed",
   "datashape.coretypes.Option",
   "datashape.coretypes.int32",
   "datashape.parser.parse"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParseBasicDType.test_raise": {
  "lineno": 120,
  "symbols_in_volume": [
   "datashape.DataShapeSyntaxError",
   "datashape.parser.parse"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParseBasicDType.test_signed_integers": {
  "lineno": 32,
  "symbols_in_volume": [
   "datashape.coretypes.DataShape",
   "datashape.coretypes.int16",
   "datashape.coretypes.int32",
   "datashape.coretypes.int64",
   "datashape.coretypes.int8",
   "datashape.coretypes.int_",
   "datashape.coretypes.intptr",
   "datashape.parser.parse"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParseBasicDType.test_unsigned_integers": {
  "lineno": 51,
  "symbols_in_volume": [
   "datashape.coretypes.DataShape",
   "datashape.coretypes.uint16",
   "datashape.coretypes.uint32",
   "datashape.coretypes.uint64",
   "datashape.coretypes.uint8",
   "datashape.coretypes.uintptr",
   "datashape.parser.parse"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParseBasicDType.test_void": {
  "lineno": 83,
  "symbols_in_volume": [
   "datashape.coretypes.DataShape",
   "datashape.coretypes.void",
   "datashape.parser.parse"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParseStruct": {
  "lineno": 349,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "datashape.tests.test_parser.TestDataShapeParseStruct.setUp": {
  "lineno": 351,
  "symbols_in_volume": [
   "datashape.TypeSymbolTable"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParseStruct.test_fields_with_dshape_names": {
  "lineno": 394,
  "symbols_in_volume": [
   "datashape.coretypes.Record",
   "datashape.parser.parse"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParseStruct.test_kiva_datashape": {
  "lineno": 431,
  "symbols_in_volume": [
   "datashape.coretypes.Record",
   "datashape.parser.parse"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParseStruct.test_strings_in_ds": {
  "lineno": 514,
  "symbols_in_volume": [
   "datashape.parser.parse"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParseStruct.test_struct": {
  "lineno": 355,
  "symbols_in_volume": [
   "datashape.coretypes.DataShape",
   "datashape.coretypes.Fixed",
   "datashape.coretypes.Record",
   "datashape.coretypes.Var",
   "datashape.coretypes.date_",
   "datashape.coretypes.int16",
   "datashape.coretypes.int32",
   "datashape.coretypes.string",
   "datashape.parser.parse"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParseStruct.test_struct_errors": {
  "lineno": 530,
  "symbols_in_volume": [
   "datashape.DataShapeSyntaxError",
   "datashape.parser.parse"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParseTuple": {
  "lineno": 570,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "datashape.tests.test_parser.TestDataShapeParseTuple.setUp": {
  "lineno": 572,
  "symbols_in_volume": [
   "datashape.TypeSymbolTable"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParseTuple.test_tuple": {
  "lineno": 576,
  "symbols_in_volume": [
   "datashape.coretypes.DataShape",
   "datashape.coretypes.Tuple",
   "datashape.coretypes.float32",
   "datashape.coretypes.int16",
   "datashape.coretypes.int32",
   "datashape.parser.parse"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParserDTypeConstr": {
  "lineno": 129,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "datashape.tests.test_parser.TestDataShapeParserDTypeConstr.test_binary_dtype_constr": {
  "lineno": 205,
  "symbols_in_volume": [
   "datashape.TypeSymbolTable",
   "datashape.coretypes.DataShape",
   "datashape.coretypes.TypeVar",
   "datashape.coretypes.float64",
   "datashape.coretypes.int8",
   "datashape.coretypes.uint16"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParserDTypeConstr.test_binary_dtype_constr._binary_type_constr": {
  "lineno": 218,
  "symbols_in_volume": [
   "datashape.coretypes.float32"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParserDTypeConstr.test_binary_dtype_constr.assertExpectedParse": {
  "lineno": 226,
  "symbols_in_volume": [
   "datashape.coretypes.DataShape",
   "datashape.coretypes.float32",
   "datashape.parser.parse"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParserDTypeConstr.test_dtype_constr_errors": {
  "lineno": 258,
  "symbols_in_volume": [
   "datashape.DataShapeSyntaxError",
   "datashape.TypeSymbolTable",
   "datashape.coretypes.float64",
   "datashape.coretypes.int8",
   "datashape.coretypes.uint16",
   "datashape.parser.parse"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParserDTypeConstr.test_dtype_constr_errors._type_constr": {
  "lineno": 268,
  "symbols_in_volume": [
   "datashape.coretypes.float32"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParserDTypeConstr.test_unary_dtype_constr": {
  "lineno": 131,
  "symbols_in_volume": [
   "datashape.TypeSymbolTable",
   "datashape.coretypes.DataShape",
   "datashape.coretypes.TypeVar",
   "datashape.coretypes.float64",
   "datashape.coretypes.int8",
   "datashape.coretypes.uint16"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParserDTypeConstr.test_unary_dtype_constr._unary_type_constr": {
  "lineno": 144,
  "symbols_in_volume": [
   "datashape.coretypes.float32"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParserDTypeConstr.test_unary_dtype_constr.assertExpectedParse": {
  "lineno": 150,
  "symbols_in_volume": [
   "datashape.coretypes.DataShape",
   "datashape.coretypes.float32",
   "datashape.parser.parse"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParserDims": {
  "lineno": 304,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "datashape.tests.test_parser.TestDataShapeParserDims.setUp": {
  "lineno": 306,
  "symbols_in_volume": [
   "datashape.TypeSymbolTable"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParserDims.test_ellipses": {
  "lineno": 339,
  "symbols_in_volume": [
   "datashape.coretypes.DataShape",
   "datashape.coretypes.Ellipsis",
   "datashape.coretypes.Fixed",
   "datashape.coretypes.TypeVar",
   "datashape.coretypes.bool_",
   "datashape.parser.parse"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParserDims.test_fixed_dims": {
  "lineno": 310,
  "symbols_in_volume": [
   "datashape.coretypes.DataShape",
   "datashape.coretypes.Fixed",
   "datashape.coretypes.bool_",
   "datashape.parser.parse"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParserDims.test_typevar_dims": {
  "lineno": 322,
  "symbols_in_volume": [
   "datashape.coretypes.DataShape",
   "datashape.coretypes.Ellipsis",
   "datashape.coretypes.Fixed",
   "datashape.coretypes.TypeVar",
   "datashape.coretypes.bool_",
   "datashape.parser.parse"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.TestDataShapeParserDims.test_var_dims": {
  "lineno": 331,
  "symbols_in_volume": [
   "datashape.coretypes.DataShape",
   "datashape.coretypes.Fixed",
   "datashape.coretypes.TypeVar",
   "datashape.coretypes.Var",
   "datashape.coretypes.bool_",
   "datashape.parser.parse"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.sym": {
  "lineno": 17,
  "symbols_in_volume": [
   "datashape.TypeSymbolTable",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.test_dim_constructor_fail": {
  "lineno": 652,
  "symbols_in_volume": [
   "datashape.DataShapeSyntaxError",
   "datashape.parser.parse",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.test_empty_tuple": {
  "lineno": 627,
  "symbols_in_volume": [
   "datashape.coretypes.DataShape",
   "datashape.coretypes.Tuple",
   "datashape.parser.parse"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.test_funcproto": {
  "lineno": 591,
  "symbols_in_volume": [
   "datashape.coretypes.DataShape",
   "datashape.coretypes.Function",
   "datashape.coretypes.bool_",
   "datashape.coretypes.float32",
   "datashape.coretypes.float64",
   "datashape.coretypes.int16",
   "datashape.coretypes.int32",
   "datashape.parser.parse",
   "datashape.util.testing.assert_dshape_equal"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.test_funcproto_no_return_type": {
  "lineno": 622,
  "symbols_in_volume": [
   "datashape.DataShapeSyntaxError",
   "datashape.parser.parse",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.test_garbage_at_end": {
  "lineno": 639,
  "symbols_in_volume": [
   "datashape.DataShapeSyntaxError",
   "datashape.parser.parse",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.test_invalid_dtype": {
  "lineno": 659,
  "symbols_in_volume": [
   "datashape.DataShapeSyntaxError",
   "datashape.parser.parse",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.test_no_right_paren_tuple": {
  "lineno": 634,
  "symbols_in_volume": [
   "datashape.DataShapeSyntaxError",
   "datashape.parser.parse",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_parser.test_type_constructor_fail": {
  "lineno": 644,
  "symbols_in_volume": [
   "datashape.DataShapeSyntaxError",
   "datashape.parser.parse",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_predicates": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "datashape.tests.test_predicates.test_isfixed": {
  "lineno": 8,
  "symbols_in_volume": [
   "datashape.coretypes.TypeVar",
   "datashape.coretypes.int32",
   "datashape.predicates.isfixed"
  ],
  "type": "function"
 },
 "datashape.tests.test_predicates.test_isscalar": {
  "lineno": 12,
  "symbols_in_volume": [
   "datashape.coretypes.Categorical",
   "datashape.coretypes.int32",
   "datashape.predicates.isscalar"
  ],
  "type": "function"
 },
 "datashape.tests.test_predicates.test_option": {
  "lineno": 20,
  "symbols_in_volume": [
   "datashape.predicates._dimensions"
  ],
  "type": "function"
 },
 "datashape.tests.test_predicates.test_time": {
  "lineno": 25,
  "symbols_in_volume": [
   "datashape.predicates.isnumeric"
  ],
  "type": "function"
 },
 "datashape.tests.test_promote": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "datashape.tests.test_promote.test_no_promote_option": {
  "lineno": 21,
  "symbols_in_volume": [
   "datashape.Option",
   "datashape.float64",
   "datashape.int64",
   "datashape.promote"
  ],
  "type": "function"
 },
 "datashape.tests.test_promote.test_option": {
  "lineno": 14,
  "symbols_in_volume": [
   "datashape.Option",
   "datashape.float32",
   "datashape.float64",
   "datashape.int64",
   "datashape.promote"
  ],
  "type": "function"
 },
 "datashape.tests.test_promote.test_option_in_parent": {
  "lineno": 28,
  "symbols_in_volume": [
   "datashape.Option",
   "datashape.float32",
   "datashape.int64",
   "datashape.optionify"
  ],
  "type": "function"
 },
 "datashape.tests.test_promote.test_promote_datetime_with_option": {
  "lineno": 84,
  "symbols_in_volume": [
   "datashape.Option",
   "datashape.datetime_",
   "datashape.dshape",
   "datashape.promote",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "datashape.tests.test_promote.test_promote_string_with_option": {
  "lineno": 35,
  "symbols_in_volume": [
   "datashape.Option",
   "datashape.dshape",
   "datashape.promote",
   "datashape.string",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "datashape.tests.test_promote.test_simple": {
  "lineno": 7,
  "symbols_in_volume": [
   "datashape.float32",
   "datashape.float64",
   "datashape.int64",
   "datashape.promote"
  ],
  "type": "function"
 },
 "datashape.tests.test_str": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "datashape.tests.test_str.TestDataShapeStr": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "datashape.tests.test_str.TestDataShapeStr.test_array_repr": {
  "lineno": 52,
  "symbols_in_volume": [
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_str.TestDataShapeStr.test_array_str": {
  "lineno": 28,
  "symbols_in_volume": [
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_str.TestDataShapeStr.test_primitive_measure_repr": {
  "lineno": 32,
  "symbols_in_volume": [
   "datashape.String",
   "datashape.float32",
   "datashape.float64",
   "datashape.int16",
   "datashape.int32",
   "datashape.int64",
   "datashape.int8",
   "datashape.string",
   "datashape.uint16",
   "datashape.uint32",
   "datashape.uint64",
   "datashape.uint8"
  ],
  "type": "function"
 },
 "datashape.tests.test_str.TestDataShapeStr.test_primitive_measure_str": {
  "lineno": 9,
  "symbols_in_volume": [
   "datashape.String",
   "datashape.float32",
   "datashape.float64",
   "datashape.int16",
   "datashape.int32",
   "datashape.int64",
   "datashape.int8",
   "datashape.string",
   "datashape.uint16",
   "datashape.uint32",
   "datashape.uint64",
   "datashape.uint8"
  ],
  "type": "function"
 },
 "datashape.tests.test_str.TestDataShapeStr.test_structure_repr": {
  "lineno": 48,
  "symbols_in_volume": [
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_str.TestDataShapeStr.test_structure_str": {
  "lineno": 24,
  "symbols_in_volume": [
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_str.test_arbitrary_string": {
  "lineno": 57,
  "symbols_in_volume": [
   "datashape.DataShapeSyntaxError",
   "datashape.dshape",
   "pytest.mark.parametrize",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "datashape.tests.test_typeset": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "datashape.tests.test_typeset.test_custom_typeset_repr": {
  "lineno": 14,
  "symbols_in_volume": [
   "datashape.TypeSet",
   "datashape.float64",
   "datashape.int64"
  ],
  "type": "function"
 },
 "datashape.tests.test_typeset.test_equal": {
  "lineno": 5,
  "symbols_in_volume": [
   "datashape.floating",
   "datashape.integral"
  ],
  "type": "function"
 },
 "datashape.tests.test_typeset.test_getitem": {
  "lineno": 27,
  "symbols_in_volume": [
   "datashape.integral",
   "datashape.typesets.registry"
  ],
  "type": "function"
 },
 "datashape.tests.test_typeset.test_getitem_non_existent_typeset": {
  "lineno": 31,
  "symbols_in_volume": [
   "datashape.typesets.registry",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_typeset.test_register_already_existing_typeset_fails": {
  "lineno": 20,
  "symbols_in_volume": [
   "datashape.TypeSet",
   "datashape.float64",
   "datashape.int64",
   "datashape.typesets.register_typeset",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_typeset.test_repr": {
  "lineno": 10,
  "symbols_in_volume": [
   "datashape.integral"
  ],
  "type": "function"
 },
 "datashape.tests.test_user": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "datashape.tests.test_user.test_datetimes": {
  "lineno": 39,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "datetime.time"
  ],
  "type": "function"
 },
 "datashape.tests.test_user.test_integration": {
  "lineno": 57,
  "symbols_in_volume": [
   "datetime.date"
  ],
  "type": "function"
 },
 "datashape.tests.test_user.test_issubschema": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.tests.test_user.test_nested_iteratables": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.tests.test_user.test_numeric_tower": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.int32",
   "numpy.integer",
   "numpy.number"
  ],
  "type": "function"
 },
 "datashape.tests.test_user.test_numpy": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "datashape.tests.test_user.test_tuples_can_be_records_too": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.tests.test_user.test_validate": {
  "lineno": 6,
  "symbols_in_volume": [
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_user.test_validate_dicts": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.tests.test_util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "datashape.tests.test_util.test_cat_dshapes": {
  "lineno": 7,
  "symbols_in_volume": [
   "datashape.cat_dshapes",
   "datashape.dshape"
  ],
  "type": "function"
 },
 "datashape.tests.test_util.test_cat_dshapes_errors": {
  "lineno": 17,
  "symbols_in_volume": [
   "datashape.cat_dshapes",
   "datashape.dshape",
   "pytest.raises"
  ],
  "type": "function"
 },
 "datashape.tests.test_util.test_has_ellipsis": {
  "lineno": 49,
  "symbols_in_volume": [
   "datashape.dshape",
   "datashape.has_ellipsis",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "datashape.tests.test_util.test_has_var_dim": {
  "lineno": 28,
  "symbols_in_volume": [
   "datashape.dshape",
   "datashape.has_var_dim",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "datashape.tests.test_util.test_not_has_ellipsis": {
  "lineno": 62,
  "symbols_in_volume": [
   "datashape.dshape",
   "datashape.has_ellipsis",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "datashape.tests.test_util.test_not_has_var_dim": {
  "lineno": 39,
  "symbols_in_volume": [
   "datashape.dshape",
   "datashape.has_var_dim",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "datashape.tests.test_version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "datashape.tests.test_version.test_version": {
  "lineno": 1,
  "symbols_in_volume": [
   "datashape.__version__"
  ],
  "type": "function"
 },
 "datashape.type_symbol_table": {
  "lineno": null,
  "symbols_in_volume": [
   "ctypes.c_void_p",
   "ctypes.sizeof"
  ],
  "type": "module"
 },
 "datashape.type_symbol_table.TypeSymbolTable": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.type_symbol_table.TypeSymbolTable.__init__": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.type_symbol_table.TypeSymbolTable.add_default_types": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.type_symbol_table._complex": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.type_symbol_table._ellipsis": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.type_symbol_table._funcproto": {
  "lineno": 33,
  "symbols_in_volume": [
   "itertools.chain"
  ],
  "type": "function"
 },
 "datashape.type_symbol_table._struct": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.type_symbol_table._typevar_dim": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.type_symbol_table._typevar_dtype": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.typesets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "datashape.typesets.TypeSet": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.typesets.TypeSet.__contains__": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.typesets.TypeSet.__eq__": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.typesets.TypeSet.__hash__": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.typesets.TypeSet.__init__": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.typesets.TypeSet.__iter__": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.typesets.TypeSet.__len__": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.typesets.TypeSet.__or__": {
  "lineno": 54,
  "symbols_in_volume": [
   "itertools.chain"
  ],
  "type": "function"
 },
 "datashape.typesets.TypeSet.__repr__": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.typesets.TypeSet._set": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.typesets.TypeSet.types": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.typesets.TypesetRegistry": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "class"
 },
 "datashape.typesets.TypesetRegistry.__getitem__": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.typesets.TypesetRegistry.__init__": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.typesets.TypesetRegistry.register_typeset": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.typesets.matches_typeset": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.typesets.maxtype": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.typesets.supertype": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.user": {
  "lineno": null,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "datetime.time"
  ],
  "type": "module"
 },
 "datashape.user.issubschema": {
  "lineno": 90,
  "symbols_in_volume": [
   "datashape.dispatch.dispatch"
  ],
  "type": "function"
 },
 "datashape.user.validate": {
  "lineno": 80,
  "symbols_in_volume": [
   "datashape.dispatch.dispatch"
  ],
  "type": "function"
 },
 "datashape.user.validate_always_true": {
  "lineno": 72,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "datetime.time"
  ],
  "type": "function"
 },
 "datashape.util": {
  "lineno": null,
  "symbols_in_volume": [
   "operator.methodcaller"
  ],
  "type": "module"
 },
 "datashape.util.cat_dshapes": {
  "lineno": 59,
  "symbols_in_volume": [
   "operator.index"
  ],
  "type": "function"
 },
 "datashape.util.collect": {
  "lineno": 91,
  "symbols_in_volume": [
   "itertools.chain.from_iterable"
  ],
  "type": "function"
 },
 "datashape.util.dshape": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.util.dshapes": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.util.has": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.util.has_ellipsis": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.util.has_var_dim": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.util.testing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "datashape.util.testing.Slotted": {
  "lineno": 102,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "datashape.util.testing.Slotted.__subclasshook__": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.util.testing._base_case": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.util.testing._check_slots": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.util.testing._fmt_path": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.util.testing.assert_dshape_equal": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.validation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "datashape.validation._validate": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.validation.traverse": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "datashape.validation.validate": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 }
}