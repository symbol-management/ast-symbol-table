{
 "gmso": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.abc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.abc.abstract_connection": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.abc.abstract_connection.Connection": {
  "lineno": 10,
  "symbols_in_volume": [
   "gmso.abc.abstract_site.Site",
   "gmso.abc.gmso_base.GMSOBase",
   "pydantic.Field",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "gmso.abc.abstract_connection.Connection.Config": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.abc.abstract_connection.Connection.__repr__": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.abc.abstract_connection.Connection.connection_members": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.abc.abstract_connection.Connection.name": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.abc.abstract_connection.Connection.validate_fields": {
  "lineno": 35,
  "symbols_in_volume": [
   "gmso.abc.abstract_site.Site",
   "gmso.exceptions.GMSOError",
   "pydantic.root_validator"
  ],
  "type": "function"
 },
 "gmso.abc.abstract_potential": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.abc.abstract_potential.AbstractPotential": {
  "lineno": 10,
  "symbols_in_volume": [
   "gmso.abc.gmso_base.GMSOBase",
   "gmso.utils.expression._PotentialExpression",
   "pydantic.Field"
  ],
  "type": "class"
 },
 "gmso.abc.abstract_potential.AbstractPotential.Config": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.abc.abstract_potential.AbstractPotential.__eq__": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.abc.abstract_potential.AbstractPotential.__hash__": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.abc.abstract_potential.AbstractPotential.__init__": {
  "lineno": 32,
  "symbols_in_volume": [
   "gmso.utils.expression._PotentialExpression"
  ],
  "type": "function"
 },
 "gmso.abc.abstract_potential.AbstractPotential.__repr__": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.abc.abstract_potential.AbstractPotential.__setattr__": {
  "lineno": 96,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "gmso.abc.abstract_potential.AbstractPotential.expression": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.abc.abstract_potential.AbstractPotential.independent_variables": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.abc.abstract_potential.AbstractPotential.name": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.abc.abstract_potential.AbstractPotential.potential_expression": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.abc.abstract_potential.AbstractPotential.set_expression": {
  "lineno": 75,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gmso.abc.abstract_site": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.ndarray",
   "typing.Sequence",
   "typing.TypeVar",
   "typing.Union",
   "unyt.unyt_array"
  ],
  "type": "module"
 },
 "gmso.abc.abstract_site.Site": {
  "lineno": 20,
  "symbols_in_volume": [
   "gmso.abc.gmso_base.GMSOBase",
   "numpy.nan",
   "pydantic.Field",
   "typing.ClassVar",
   "unyt.nm",
   "unyt.unyt_array"
  ],
  "type": "class"
 },
 "gmso.abc.abstract_site.Site.Config": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.abc.abstract_site.Site.__new__": {
  "lineno": 94,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "gmso.abc.abstract_site.Site.__repr__": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.abc.abstract_site.Site.inject_name": {
  "lineno": 88,
  "symbols_in_volume": [
   "pydantic.root_validator"
  ],
  "type": "function"
 },
 "gmso.abc.abstract_site.Site.is_valid_position": {
  "lineno": 65,
  "symbols_in_volume": [
   "gmso.exceptions.GMSOError",
   "numpy.nan",
   "numpy.reshape",
   "pydantic.validator",
   "unyt.exceptions.InvalidUnitOperation",
   "unyt.nm",
   "unyt.unyt_array",
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.abc.abstract_site.Site.label": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.abc.abstract_site.Site.name": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.abc.abstract_site.Site.position": {
  "lineno": 54,
  "symbols_in_volume": [
   "unyt.unyt_array"
  ],
  "type": "function"
 },
 "gmso.abc.auto_doc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.abc.auto_doc.AutoDocGenerator": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.abc.auto_doc.AutoDocGenerator.__del__": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.abc.auto_doc.AutoDocGenerator.__get__": {
  "lineno": 209,
  "symbols_in_volume": [
   "copy.deepcopy",
   "inspect.signature",
   "typing.Any"
  ],
  "type": "function"
 },
 "gmso.abc.auto_doc.AutoDocGenerator.__init__": {
  "lineno": 176,
  "symbols_in_volume": [
   "pydantic.BaseModel",
   "typing.Type"
  ],
  "type": "function"
 },
 "gmso.abc.auto_doc.AutoDocGenerator._name_map": {
  "lineno": 199,
  "symbols_in_volume": [
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "gmso.abc.auto_doc.AutoDocGenerator._should_inject_init": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.abc.auto_doc.AutoDocGenerator.get_docstring": {
  "lineno": 238,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "gmso.abc.auto_doc._base_doc_to_sections": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.abc.auto_doc._find_extended_summary": {
  "lineno": 25,
  "symbols_in_volume": [
   "re.match",
   "typing.List"
  ],
  "type": "function"
 },
 "gmso.abc.auto_doc._find_extra_params": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.abc.auto_doc._find_section_at": {
  "lineno": 42,
  "symbols_in_volume": [
   "re.match",
   "typing.List"
  ],
  "type": "function"
 },
 "gmso.abc.auto_doc._infer_type": {
  "lineno": 16,
  "symbols_in_volume": [
   "typing.Type"
  ],
  "type": "function"
 },
 "gmso.abc.auto_doc._inject_parameters_from_fields": {
  "lineno": 96,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "gmso.abc.auto_doc.apply_docs": {
  "lineno": 275,
  "symbols_in_volume": [
   "pydantic.BaseModel",
   "typing.Type"
  ],
  "type": "function"
 },
 "gmso.abc.gmso_base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.abc.gmso_base.GMSOBase": {
  "lineno": 11,
  "symbols_in_volume": [
   "abc.ABC",
   "pydantic.BaseModel",
   "typing.ClassVar"
  ],
  "type": "class"
 },
 "gmso.abc.gmso_base.GMSOBase.Config": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.abc.gmso_base.GMSOBase.__eq__": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.abc.gmso_base.GMSOBase.__get_validators__": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.abc.gmso_base.GMSOBase.__hash__": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.abc.gmso_base.GMSOBase.__init_subclass__": {
  "lineno": 34,
  "symbols_in_volume": [
   "gmso.abc.auto_doc.apply_docs"
  ],
  "type": "function"
 },
 "gmso.abc.gmso_base.GMSOBase.__setattr__": {
  "lineno": 23,
  "symbols_in_volume": [
   "typing.Any",
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.abc.gmso_base.GMSOBase.validate": {
  "lineno": 45,
  "symbols_in_volume": [
   "pydantic.validators.dict_validator"
  ],
  "type": "function"
 },
 "gmso.core": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.core.angle": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.core.angle.Angle": {
  "lineno": 10,
  "symbols_in_volume": [
   "gmso.abc.abstract_connection.Connection",
   "gmso.core.angle_type.AngleType",
   "gmso.core.atom.Atom",
   "pydantic.Field",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "gmso.core.angle.Angle.Config": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.core.angle.Angle.__setattr__": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.angle.Angle._equivalent_members_hash": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.angle.Angle.angle_type": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.angle.Angle.connection_type": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.angle.Angle.equivalent_members": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.angle_type": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.core.angle_type.AngleType": {
  "lineno": 10,
  "symbols_in_volume": [
   "gmso.core.parametric_potential.ParametricPotential",
   "pydantic.Field",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "gmso.core.angle_type.AngleType.Config": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.core.angle_type.AngleType.__init__": {
  "lineno": 33,
  "symbols_in_volume": [
   "gmso.utils._constants.ANGLE_TYPE_DICT",
   "unyt.Unit",
   "unyt.deg"
  ],
  "type": "function"
 },
 "gmso.core.angle_type.AngleType.member_types": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.atom": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.core.atom.Atom": {
  "lineno": 15,
  "symbols_in_volume": [
   "gmso.abc.abstract_site.Site",
   "gmso.core.atom_type.AtomType",
   "gmso.core.element.Element",
   "pydantic.Field",
   "typing.Optional",
   "typing.Union",
   "unyt.unyt_quantity"
  ],
  "type": "class"
 },
 "gmso.core.atom.Atom.Config": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.core.atom.Atom.__le__": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.atom.Atom.__lt__": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.atom.Atom.atom_type": {
  "lineno": 88,
  "symbols_in_volume": [
   "gmso.core.atom_type.AtomType",
   "typing.Union"
  ],
  "type": "function"
 },
 "gmso.core.atom.Atom.charge": {
  "lineno": 62,
  "symbols_in_volume": [
   "typing.Union",
   "unyt.unyt_quantity"
  ],
  "type": "function"
 },
 "gmso.core.atom.Atom.element": {
  "lineno": 84,
  "symbols_in_volume": [
   "gmso.core.element.Element",
   "typing.Union"
  ],
  "type": "function"
 },
 "gmso.core.atom.Atom.is_valid_charge": {
  "lineno": 108,
  "symbols_in_volume": [
   "gmso.utils._constants.UNIT_WARNING_STRING.format",
   "gmso.utils.misc.ensure_valid_dimensions",
   "pydantic.validator",
   "unyt.elementary_charge",
   "unyt.unyt_array",
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.core.atom.Atom.is_valid_mass": {
  "lineno": 120,
  "symbols_in_volume": [
   "gmso.utils._constants.UNIT_WARNING_STRING.format",
   "gmso.utils.misc.ensure_valid_dimensions",
   "pydantic.validator",
   "unyt.gram",
   "unyt.mol",
   "unyt.unyt_array",
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.core.atom.Atom.mass": {
  "lineno": 73,
  "symbols_in_volume": [
   "typing.Union",
   "unyt.unyt_quantity"
  ],
  "type": "function"
 },
 "gmso.core.atom_type": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.core.atom_type.AtomType": {
  "lineno": 12,
  "symbols_in_volume": [
   "gmso.core.parametric_potential.ParametricPotential",
   "pydantic.Field",
   "typing.Optional",
   "typing.Set",
   "unyt.elementary_charge",
   "unyt.gram",
   "unyt.mol",
   "unyt.unyt_array"
  ],
  "type": "class"
 },
 "gmso.core.atom_type.AtomType.Config": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.core.atom_type.AtomType.__hash__": {
  "lineno": 123,
  "symbols_in_volume": [
   "gmso.utils.misc.unyt_to_hashable"
  ],
  "type": "function"
 },
 "gmso.core.atom_type.AtomType.__init__": {
  "lineno": 60,
  "symbols_in_volume": [
   "gmso.utils._constants.ATOM_TYPE_DICT",
   "unyt.Unit",
   "unyt.elementary_charge",
   "unyt.gram",
   "unyt.mol",
   "unyt.nm"
  ],
  "type": "function"
 },
 "gmso.core.atom_type.AtomType.atomclass": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.atom_type.AtomType.charge": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.atom_type.AtomType.definition": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.atom_type.AtomType.description": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.atom_type.AtomType.doi": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.atom_type.AtomType.mass": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.atom_type.AtomType.overrides": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.atom_type.AtomType.validate_charge": {
  "lineno": 150,
  "symbols_in_volume": [
   "gmso.utils._constants.UNIT_WARNING_STRING.format",
   "gmso.utils.misc.ensure_valid_dimensions",
   "pydantic.validator",
   "unyt.elementary_charge",
   "unyt.unyt_array",
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.core.atom_type.AtomType.validate_mass": {
  "lineno": 138,
  "symbols_in_volume": [
   "gmso.utils._constants.UNIT_WARNING_STRING.format",
   "gmso.utils.misc.ensure_valid_dimensions",
   "pydantic.validator",
   "unyt.gram",
   "unyt.mol",
   "unyt.unyt_array",
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.core.bond": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.core.bond.Bond": {
  "lineno": 10,
  "symbols_in_volume": [
   "gmso.abc.abstract_connection.Connection",
   "gmso.core.atom.Atom",
   "gmso.core.bond_type.BondType",
   "pydantic.Field",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "gmso.core.bond.Bond.Config": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.core.bond.Bond.__setattr__": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.bond.Bond._equivalent_members_hash": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.bond.Bond.bond_type": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.bond.Bond.connection_type": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.bond.Bond.equivalent_members": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.bond_type": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.core.bond_type.BondType": {
  "lineno": 10,
  "symbols_in_volume": [
   "gmso.core.parametric_potential.ParametricPotential",
   "pydantic.Field",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "gmso.core.bond_type.BondType.Config": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.core.bond_type.BondType.__init__": {
  "lineno": 33,
  "symbols_in_volume": [
   "gmso.utils._constants.BOND_TYPE_DICT",
   "unyt.Unit",
   "unyt.nm"
  ],
  "type": "function"
 },
 "gmso.core.bond_type.BondType.member_types": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.box": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.core.box.Box": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.core.box.Box.__eq__": {
  "lineno": 167,
  "symbols_in_volume": [
   "unyt.array.allclose_units"
  ],
  "type": "function"
 },
 "gmso.core.box.Box.__init__": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.box.Box.__repr__": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.box.Box._unit_vectors_from_angles": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.float",
   "numpy.power",
   "numpy.sin",
   "numpy.sqrt",
   "unyt.dimensionless",
   "unyt.unyt_array"
  ],
  "type": "function"
 },
 "gmso.core.box.Box.angles": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.box.Box.get_unit_vectors": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.box.Box.get_vectors": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.box.Box.lengths": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.box._validate_angles": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.reshape",
   "unyt.degree",
   "unyt.unyt_array",
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.core.box._validate_lengths": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.asarray",
   "numpy.equal",
   "numpy.less",
   "numpy.reshape",
   "unyt.nm",
   "unyt.unyt_array",
   "unyt.unyt_quantity",
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.core.dihedral": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.core.dihedral.Dihedral": {
  "lineno": 10,
  "symbols_in_volume": [
   "gmso.abc.abstract_connection.Connection",
   "gmso.core.atom.Atom",
   "gmso.core.dihedral_type.DihedralType",
   "pydantic.Field",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "gmso.core.dihedral.Dihedral.Config": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.core.dihedral.Dihedral.__setattr__": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.dihedral.Dihedral._equivalent_members_hash": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.dihedral.Dihedral.connection_type": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.dihedral.Dihedral.dihedral_type": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.dihedral.Dihedral.equivalent_members": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.dihedral_type": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.core.dihedral_type.DihedralType": {
  "lineno": 10,
  "symbols_in_volume": [
   "gmso.core.parametric_potential.ParametricPotential",
   "pydantic.Field",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "gmso.core.dihedral_type.DihedralType.Config": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.core.dihedral_type.DihedralType.__init__": {
  "lineno": 39,
  "symbols_in_volume": [
   "gmso.utils._constants.DIHEDRAL_TYPE_DICT",
   "unyt.Unit",
   "unyt.deg",
   "unyt.dimensionless"
  ],
  "type": "function"
 },
 "gmso.core.dihedral_type.DihedralType.member_types": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.element": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.round",
   "unyt.amu"
  ],
  "type": "module"
 },
 "gmso.core.element.Element": {
  "lineno": 13,
  "symbols_in_volume": [
   "gmso.abc.gmso_base.GMSOBase",
   "pydantic.Field",
   "unyt.unyt_quantity"
  ],
  "type": "class"
 },
 "gmso.core.element.Element.Config": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.core.element.Element.__eq__": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.element.Element.__hash__": {
  "lineno": 37,
  "symbols_in_volume": [
   "gmso.utils.misc.unyt_to_hashable"
  ],
  "type": "function"
 },
 "gmso.core.element.Element.__repr__": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.element.element_by_atom_type": {
  "lineno": 230,
  "symbols_in_volume": [
   "gmso.exceptions.GMSOError"
  ],
  "type": "function"
 },
 "gmso.core.element.element_by_atomic_number": {
  "lineno": 102,
  "symbols_in_volume": [
   "gmso.exceptions.GMSOError",
   "re.sub",
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.core.element.element_by_mass": {
  "lineno": 132,
  "symbols_in_volume": [
   "numpy.round",
   "re.sub",
   "unyt.unyt_quantity",
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.core.element.element_by_name": {
  "lineno": 77,
  "symbols_in_volume": [
   "re.sub",
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.core.element.element_by_smarts_string": {
  "lineno": 180,
  "symbols_in_volume": [
   "foyer.smarts.SMARTS",
   "gmso.exceptions.GMSOError"
  ],
  "type": "function"
 },
 "gmso.core.element.element_by_symbol": {
  "lineno": 52,
  "symbols_in_volume": [
   "re.sub",
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.core.forcefield": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.core.forcefield.ForceField": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.core.forcefield.ForceField.__init__": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.forcefield.ForceField.__repr__": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.forcefield.ForceField.atom_class_groups": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.forcefield.ForceField.from_xml": {
  "lineno": 97,
  "symbols_in_volume": [
   "collections.ChainMap",
   "gmso.utils.ff_utils.parse_ff_atomtypes",
   "gmso.utils.ff_utils.parse_ff_connection_types",
   "gmso.utils.ff_utils.parse_ff_metadata",
   "gmso.utils.ff_utils.validate",
   "lxml.etree.parse"
  ],
  "type": "function"
 },
 "gmso.core.improper": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.core.improper.Improper": {
  "lineno": 10,
  "symbols_in_volume": [
   "gmso.abc.abstract_connection.Connection",
   "gmso.core.atom.Atom",
   "gmso.core.improper_type.ImproperType",
   "pydantic.Field",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "gmso.core.improper.Improper.Config": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.core.improper.Improper.__setattr__": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.improper.Improper._equivalent_members_hash": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.improper.Improper.connection_type": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.improper.Improper.equivalent_members": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.improper.Improper.improper_type": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.improper_type": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.core.improper_type.ImproperType": {
  "lineno": 10,
  "symbols_in_volume": [
   "gmso.core.parametric_potential.ParametricPotential",
   "pydantic.Field",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "gmso.core.improper_type.ImproperType.Config": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.core.improper_type.ImproperType.__init__": {
  "lineno": 43,
  "symbols_in_volume": [
   "gmso.utils._constants.IMPROPER_TYPE_DICT",
   "unyt.Unit",
   "unyt.deg"
  ],
  "type": "function"
 },
 "gmso.core.improper_type.ImproperType.member_types": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.parametric_potential": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.core.parametric_potential.ParametricPotential": {
  "lineno": 12,
  "symbols_in_volume": [
   "gmso.abc.abstract_potential.AbstractPotential",
   "pydantic.Field",
   "typing.Any",
   "typing.Optional"
  ],
  "type": "class"
 },
 "gmso.core.parametric_potential.ParametricPotential.Config": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.core.parametric_potential.ParametricPotential.__init__": {
  "lineno": 37,
  "symbols_in_volume": [
   "gmso.utils.expression._PotentialExpression",
   "unyt.dimensionless"
  ],
  "type": "function"
 },
 "gmso.core.parametric_potential.ParametricPotential.__setattr__": {
  "lineno": 94,
  "symbols_in_volume": [
   "gmso.utils.decorators.confirm_dict_existence",
   "typing.Any"
  ],
  "type": "function"
 },
 "gmso.core.parametric_potential.ParametricPotential.from_template": {
  "lineno": 127,
  "symbols_in_volume": [
   "gmso.exceptions.GMSOError",
   "gmso.lib.potential_templates.PotentialTemplate"
  ],
  "type": "function"
 },
 "gmso.core.parametric_potential.ParametricPotential.is_valid_topology": {
  "lineno": 84,
  "symbols_in_volume": [
   "gmso.core.topology.Topology",
   "pydantic.validator"
  ],
  "type": "function"
 },
 "gmso.core.parametric_potential.ParametricPotential.parameters": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.parametric_potential.ParametricPotential.set_expression": {
  "lineno": 101,
  "symbols_in_volume": [
   "gmso.utils.decorators.confirm_dict_existence"
  ],
  "type": "function"
 },
 "gmso.core.parametric_potential.ParametricPotential.set_ref": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.parametric_potential.ParametricPotential.topology": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.subtopology": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.core.subtopology.SubTopology": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.core.subtopology.SubTopology.__init__": {
  "lineno": 32,
  "symbols_in_volume": [
   "boltons.setutils.IndexedSet"
  ],
  "type": "function"
 },
 "gmso.core.subtopology.SubTopology.__repr__": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.subtopology.SubTopology.add_site": {
  "lineno": 73,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.core.subtopology.SubTopology.n_sites": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.subtopology.SubTopology.name": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.subtopology.SubTopology.parent": {
  "lineno": 61,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.core.subtopology.SubTopology.sites": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.subtopology._validate_parent": {
  "lineno": 106,
  "symbols_in_volume": [
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.core.subtopology._validate_site_addability": {
  "lineno": 112,
  "symbols_in_volume": [
   "gmso.core.atom.Atom"
  ],
  "type": "function"
 },
 "gmso.core.topology": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.core.topology.Topology": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.core.topology.Topology.__init__": {
  "lineno": 126,
  "symbols_in_volume": [
   "boltons.setutils.IndexedSet",
   "gmso.utils._constants.ANGLE_TYPE_DICT",
   "gmso.utils._constants.ATOM_TYPE_DICT",
   "gmso.utils._constants.BOND_TYPE_DICT",
   "gmso.utils._constants.DIHEDRAL_TYPE_DICT",
   "gmso.utils._constants.IMPROPER_TYPE_DICT"
  ],
  "type": "function"
 },
 "gmso.core.topology.Topology.__repr__": {
  "lineno": 628,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology._reindex_connection_types": {
  "lineno": 620,
  "symbols_in_volume": [
   "gmso.exceptions.GMSOError",
   "gmso.utils._constants.ANGLE_TYPE_DICT",
   "gmso.utils._constants.BOND_TYPE_DICT",
   "gmso.utils._constants.DIHEDRAL_TYPE_DICT",
   "gmso.utils._constants.IMPROPER_TYPE_DICT"
  ],
  "type": "function"
 },
 "gmso.core.topology.Topology.add_connection": {
  "lineno": 372,
  "symbols_in_volume": [
   "gmso.core.angle.Angle",
   "gmso.core.bond.Bond",
   "gmso.core.dihedral.Dihedral",
   "gmso.core.improper.Improper",
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.core.topology.Topology.add_site": {
  "lineno": 317,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.add_subtopology": {
  "lineno": 494,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.angle_type_expressions": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.angle_types": {
  "lineno": 281,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.angles": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.atom_type_expressions": {
  "lineno": 293,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.atom_types": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.bond_type_expressions": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.bond_types": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.bonds": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.box": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.combining_rule": {
  "lineno": 200,
  "symbols_in_volume": [
   "gmso.exceptions.GMSOError"
  ],
  "type": "function"
 },
 "gmso.core.topology.Topology.connection_type_expressions": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.connection_types": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.connections": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.dihedral_type_expressions": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.dihedral_types": {
  "lineno": 285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.dihedrals": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.get_index": {
  "lineno": 580,
  "symbols_in_volume": [
   "gmso.core.angle.Angle",
   "gmso.core.angle_type.AngleType",
   "gmso.core.atom.Atom",
   "gmso.core.atom_type.AtomType",
   "gmso.core.bond.Bond",
   "gmso.core.bond_type.BondType",
   "gmso.core.dihedral.Dihedral",
   "gmso.core.dihedral_type.DihedralType",
   "gmso.core.improper.Improper",
   "gmso.core.improper_type.ImproperType"
  ],
  "type": "function"
 },
 "gmso.core.topology.Topology.identify_connections": {
  "lineno": 424,
  "symbols_in_volume": [
   "gmso.utils.connectivity.identify_connections"
  ],
  "type": "function"
 },
 "gmso.core.topology.Topology.improper_type_expressions": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.improper_types": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.impropers": {
  "lineno": 265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.is_typed": {
  "lineno": 514,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.n_angles": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.n_bonds": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.n_connections": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.n_dihedrals": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.n_impropers": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.n_sites": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.n_subtops": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.name": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.positions": {
  "lineno": 206,
  "symbols_in_volume": [
   "numpy.empty",
   "unyt.nm"
  ],
  "type": "function"
 },
 "gmso.core.topology.Topology.sites": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.subtops": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.typed": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.update_angle_types": {
  "lineno": 525,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.update_atom_types": {
  "lineno": 469,
  "symbols_in_volume": [
   "gmso.core.atom_type.AtomType",
   "gmso.exceptions.GMSOError",
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.core.topology.Topology.update_bond_types": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.update_connection_types": {
  "lineno": 427,
  "symbols_in_volume": [
   "gmso.core.angle_type.AngleType",
   "gmso.core.bond_type.BondType",
   "gmso.core.dihedral_type.DihedralType",
   "gmso.core.improper_type.ImproperType",
   "gmso.core.parametric_potential.ParametricPotential",
   "gmso.exceptions.GMSOError",
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.core.topology.Topology.update_dihedral_types": {
  "lineno": 549,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.update_improper_types": {
  "lineno": 561,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.update_sites": {
  "lineno": 344,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.core.topology.Topology.update_topology": {
  "lineno": 573,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.exceptions.EngineIncompatibilityError": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.exceptions.ForceFieldError": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.exceptions.ForceFieldParseError": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.exceptions.GMSOError": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.exceptions.NotYetImplementedWarning": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.external": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.external.convert_mbuild": {
  "lineno": null,
  "symbols_in_volume": [
   "gmso.utils.io.has_mbuild"
  ],
  "type": "module"
 },
 "gmso.external.convert_mbuild.from_mbuild": {
  "lineno": 21,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.bond.Bond",
   "gmso.core.box.Box",
   "gmso.core.element.element_by_symbol",
   "gmso.core.subtopology.SubTopology",
   "gmso.core.topology.Topology",
   "mbuild.Compound",
   "numpy.allclose",
   "numpy.zeros",
   "unyt.nanometer",
   "unyt.nm"
  ],
  "type": "function"
 },
 "gmso.external.convert_mbuild.from_mbuild_box": {
  "lineno": 172,
  "symbols_in_volume": [
   "gmso.core.box.Box",
   "mbuild.Box",
   "numpy.allclose",
   "numpy.asarray",
   "unyt.degree",
   "unyt.nm",
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.external.convert_mbuild.to_mbuild": {
  "lineno": 135,
  "symbols_in_volume": [
   "gmso.core.bond.Bond",
   "gmso.core.topology.Topology",
   "mbuild.Compound"
  ],
  "type": "function"
 },
 "gmso.external.convert_openmm": {
  "lineno": null,
  "symbols_in_volume": [
   "gmso.utils.io.has_openmm",
   "gmso.utils.io.has_simtk_unit",
   "gmso.utils.io.import_"
  ],
  "type": "module"
 },
 "gmso.external.convert_openmm.to_openmm": {
  "lineno": 11,
  "symbols_in_volume": [
   "unyt.nanometer"
  ],
  "type": "function"
 },
 "gmso.external.convert_openmm.to_system": {
  "lineno": 67,
  "symbols_in_volume": [
   "unyt.Kelvin",
   "unyt.Unit",
   "unyt.nm"
  ],
  "type": "function"
 },
 "gmso.external.convert_parmed": {
  "lineno": null,
  "symbols_in_volume": [
   "gmso.utils.io.has_parmed",
   "gmso.utils.io.import_"
  ],
  "type": "module"
 },
 "gmso.external.convert_parmed._angle_types_from_gmso": {
  "lineno": 527,
  "symbols_in_volume": [
   "sympy.parsing.sympy_parser.parse_expr"
  ],
  "type": "function"
 },
 "gmso.external.convert_parmed._angle_types_from_pmd": {
  "lineno": 248,
  "symbols_in_volume": [
   "gmso.AngleType",
   "unyt.Unit",
   "unyt.degree"
  ],
  "type": "function"
 },
 "gmso.external.convert_parmed._atom_types_from_gmso": {
  "lineno": 455,
  "symbols_in_volume": [
   "gmso.core.element.element_by_atom_type",
   "sympy.parsing.sympy_parser.parse_expr"
  ],
  "type": "function"
 },
 "gmso.external.convert_parmed._atom_types_from_pmd": {
  "lineno": 181,
  "symbols_in_volume": [
   "gmso.AtomType",
   "unyt.Unit",
   "unyt.angstrom",
   "unyt.elementary_charge"
  ],
  "type": "function"
 },
 "gmso.external.convert_parmed._bond_types_from_gmso": {
  "lineno": 494,
  "symbols_in_volume": [
   "sympy.parsing.sympy_parser.parse_expr"
  ],
  "type": "function"
 },
 "gmso.external.convert_parmed._bond_types_from_pmd": {
  "lineno": 218,
  "symbols_in_volume": [
   "gmso.BondType",
   "unyt.Unit",
   "unyt.angstrom"
  ],
  "type": "function"
 },
 "gmso.external.convert_parmed._dihedral_types_from_gmso": {
  "lineno": 560,
  "symbols_in_volume": [
   "sympy.parsing.sympy_parser.parse_expr"
  ],
  "type": "function"
 },
 "gmso.external.convert_parmed._dihedral_types_from_pmd": {
  "lineno": 281,
  "symbols_in_volume": [
   "gmso.DihedralType",
   "unyt.Unit",
   "unyt.degree",
   "unyt.dimensionless"
  ],
  "type": "function"
 },
 "gmso.external.convert_parmed.from_parmed": {
  "lineno": 14,
  "symbols_in_volume": [
   "gmso.Angle",
   "gmso.Atom",
   "gmso.Bond",
   "gmso.Box",
   "gmso.Dihedral",
   "gmso.SubTopology",
   "gmso.Topology",
   "numpy.all",
   "unyt.angstrom.in_units",
   "unyt.degree",
   "unyt.elementary_charge",
   "unyt.nm",
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.external.convert_parmed.to_parmed": {
  "lineno": 330,
  "symbols_in_volume": [
   "gmso.Topology",
   "numpy.concatenate",
   "sympy.parsing.sympy_parser.parse_expr"
  ],
  "type": "function"
 },
 "gmso.formats": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.formats.gro": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.formats.gro._prepare_topology_to_gro": {
  "lineno": 167,
  "symbols_in_volume": [
   "numpy.min",
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.formats.gro.read_gro": {
  "lineno": 13,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.box.Box",
   "gmso.core.topology.Topology",
   "numpy.array",
   "numpy.zeros",
   "unyt.nm"
  ],
  "type": "function"
 },
 "gmso.formats.gro.write_gro": {
  "lineno": 92,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "gmso.exceptions.NotYetImplementedWarning",
   "unyt.array.allclose_units",
   "unyt.degree",
   "unyt.nm",
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.formats.gsd": {
  "lineno": null,
  "symbols_in_volume": [
   "gmso.utils.io.has_gsd"
  ],
  "type": "module"
 },
 "gmso.formats.gsd._write_angle_information": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.formats.gsd._write_bond_information": {
  "lineno": 185,
  "symbols_in_volume": [
   "gmso.core.bond.Bond",
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.formats.gsd._write_dihedral_information": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.formats.gsd._write_pair_information": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.formats.gsd._write_particle_information": {
  "lineno": 107,
  "symbols_in_volume": [
   "gmso.exceptions.NotYetImplementedWarning",
   "numpy.array",
   "numpy.pi",
   "unyt.Unit",
   "unyt.elementary_charge",
   "unyt.physical_constants.eps_0.in_units",
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.formats.gsd.write_gsd": {
  "lineno": 19,
  "symbols_in_volume": [
   "gmso.exceptions.NotYetImplementedWarning",
   "gmso.utils.geometry.coord_shift",
   "gsd.hoomd.Snapshot",
   "gsd.hoomd.open",
   "numpy.array",
   "numpy.hstack",
   "numpy.zeros",
   "unyt.Unit",
   "unyt.array.allclose_units",
   "unyt.degree",
   "unyt.nm",
   "unyt.unyt_array",
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.formats.lammpsdata": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.formats.lammpsdata._get_atoms": {
  "lineno": 393,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.element.element_by_mass",
   "unyt.angstrom",
   "unyt.unyt_array",
   "unyt.unyt_quantity"
  ],
  "type": "function"
 },
 "gmso.formats.lammpsdata._get_box_coordinates": {
  "lineno": 425,
  "symbols_in_volume": [
   "gmso.core.box.Box",
   "numpy.arccos",
   "numpy.max",
   "numpy.min",
   "numpy.sqrt",
   "unyt.radian",
   "unyt.unyt_array"
  ],
  "type": "function"
 },
 "gmso.formats.lammpsdata._get_connection": {
  "lineno": 322,
  "symbols_in_volume": [
   "gmso.core.angle.Angle",
   "gmso.core.angle_type.AngleType",
   "gmso.core.bond.Bond",
   "gmso.core.bond_type.BondType",
   "unyt.Unit"
  ],
  "type": "function"
 },
 "gmso.formats.lammpsdata._get_ff_information": {
  "lineno": 478,
  "symbols_in_volume": [
   "gmso.core.atom_type.AtomType",
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.formats.lammpsdata.get_units": {
  "lineno": 305,
  "symbols_in_volume": [
   "unyt.angstrom",
   "unyt.degree",
   "unyt.elementary_charge",
   "unyt.g",
   "unyt.kcal",
   "unyt.mol",
   "unyt.radian"
  ],
  "type": "function"
 },
 "gmso.formats.lammpsdata.read_lammpsdata": {
  "lineno": 242,
  "symbols_in_volume": [
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.formats.lammpsdata.write_lammpsdata": {
  "lineno": 22,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "gmso.lib.potential_templates.PotentialTemplateLibrary",
   "gmso.utils.conversions.convert_ryckaert_to_opls",
   "numpy.cos",
   "numpy.max",
   "numpy.min",
   "numpy.sqrt",
   "sympy.sympify",
   "unyt.Unit",
   "unyt.angstrom",
   "unyt.array.allclose_units",
   "unyt.elementary_charge",
   "unyt.g",
   "unyt.mol",
   "unyt.radian",
   "unyt.unyt_array",
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.formats.mcf": {
  "lineno": null,
  "symbols_in_volume": [
   "gmso.lib.potential_templates.PotentialTemplateLibrary"
  ],
  "type": "module"
 },
 "gmso.formats.mcf._check_compatibility": {
  "lineno": 653,
  "symbols_in_volume": [
   "gmso.core.topology.Topology",
   "gmso.exceptions.GMSOError",
   "gmso.utils.compatibility.check_compatibility"
  ],
  "type": "function"
 },
 "gmso.formats.mcf._get_dihedral_style": {
  "lineno": 682,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.formats.mcf._get_potential_style": {
  "lineno": 695,
  "symbols_in_volume": [
   "sympy.simplify"
  ],
  "type": "function"
 },
 "gmso.formats.mcf._get_vdw_style": {
  "lineno": 673,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.formats.mcf._id_rings_fragments": {
  "lineno": 93,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.cycle_basis",
   "networkx.is_connected",
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.formats.mcf._write_angle_information": {
  "lineno": 376,
  "symbols_in_volume": [
   "unyt.degree",
   "unyt.kb.in_units"
  ],
  "type": "function"
 },
 "gmso.formats.mcf._write_atom_information": {
  "lineno": 207,
  "symbols_in_volume": [
   "gmso.exceptions.GMSOError",
   "unyt.amu",
   "unyt.charge_electron",
   "unyt.kb.in_units",
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.formats.mcf._write_bond_information": {
  "lineno": 339,
  "symbols_in_volume": [
   "unyt.Angstrom"
  ],
  "type": "function"
 },
 "gmso.formats.mcf._write_dihedral_information": {
  "lineno": 423,
  "symbols_in_volume": [
   "gmso.exceptions.GMSOError",
   "gmso.utils.conversions.convert_ryckaert_to_opls",
   "unyt.degrees"
  ],
  "type": "function"
 },
 "gmso.formats.mcf._write_fragment_information": {
  "lineno": 574,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.formats.mcf._write_improper_information": {
  "lineno": 536,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.formats.mcf._write_intrascaling_information": {
  "lineno": 627,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.formats.mcf.write_mcf": {
  "lineno": 20,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "gmso.exceptions.GMSOError"
  ],
  "type": "function"
 },
 "gmso.formats.top": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.formats.top._accepted_potentials": {
  "lineno": 183,
  "symbols_in_volume": [
   "gmso.lib.potential_templates.PotentialTemplateLibrary"
  ],
  "type": "function"
 },
 "gmso.formats.top._get_top_vars": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.formats.top._harmonic_angle_potential_writer": {
  "lineno": 268,
  "symbols_in_volume": [
   "unyt.Unit",
   "unyt.degree"
  ],
  "type": "function"
 },
 "gmso.formats.top._harmonic_bond_potential_writer": {
  "lineno": 256,
  "symbols_in_volume": [
   "unyt.Unit",
   "unyt.nm"
  ],
  "type": "function"
 },
 "gmso.formats.top._lookup_atomic_number": {
  "lineno": 222,
  "symbols_in_volume": [
   "gmso.core.element.element_by_atom_type",
   "gmso.exceptions.GMSOError"
  ],
  "type": "function"
 },
 "gmso.formats.top._lookup_element_symbol": {
  "lineno": 231,
  "symbols_in_volume": [
   "gmso.core.element.element_by_atom_type",
   "gmso.exceptions.GMSOError"
  ],
  "type": "function"
 },
 "gmso.formats.top._periodic_torsion_writer": {
  "lineno": 298,
  "symbols_in_volume": [
   "unyt.Unit",
   "unyt.degree"
  ],
  "type": "function"
 },
 "gmso.formats.top._ryckaert_bellemans_torsion_writer": {
  "lineno": 281,
  "symbols_in_volume": [
   "unyt.Unit"
  ],
  "type": "function"
 },
 "gmso.formats.top._validate_compatibility": {
  "lineno": 198,
  "symbols_in_volume": [
   "gmso.utils.compatibility.check_compatibility"
  ],
  "type": "function"
 },
 "gmso.formats.top._write_connection": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.formats.top.write_top": {
  "lineno": 11,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "unyt.Unit",
   "unyt.amu",
   "unyt.charge_electron",
   "unyt.nanometer"
  ],
  "type": "function"
 },
 "gmso.formats.xyz": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.formats.xyz.read_xyz": {
  "lineno": 10,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.topology.Topology",
   "numpy.array",
   "numpy.float",
   "numpy.zeros",
   "unyt.angstrom",
   "unyt.nanometer"
  ],
  "type": "function"
 },
 "gmso.formats.xyz.write_xyz": {
  "lineno": 54,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "unyt.angstrom"
  ],
  "type": "function"
 },
 "gmso.lib": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.lib.potential_templates": {
  "lineno": null,
  "symbols_in_volume": [
   "pathlib.Path",
   "pathlib.Path.joinpath"
  ],
  "type": "module"
 },
 "gmso.lib.potential_templates.PotentialTemplate": {
  "lineno": 27,
  "symbols_in_volume": [
   "gmso.abc.abstract_potential.AbstractPotential"
  ],
  "type": "class"
 },
 "gmso.lib.potential_templates.PotentialTemplate.Config": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.lib.potential_templates.PotentialTemplate.__init__": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.lib.potential_templates.PotentialTemplate.set_expression": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.lib.potential_templates.PotentialTemplateLibrary": {
  "lineno": 49,
  "symbols_in_volume": [
   "gmso.utils.singleton.Singleton"
  ],
  "type": "class"
 },
 "gmso.lib.potential_templates.PotentialTemplateLibrary.__getitem__": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.lib.potential_templates.PotentialTemplateLibrary.__init__": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.lib.potential_templates.PotentialTemplateLibrary._load_from_json": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.lib.potential_templates.PotentialTemplateLibrary.get_available_template_names": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.lib.potential_templates._load_template_json": {
  "lineno": 20,
  "symbols_in_volume": [
   "json.load"
  ],
  "type": "function"
 },
 "gmso.lib.potential_templates._verify_potential_template_keys": {
  "lineno": 12,
  "symbols_in_volume": [
   "gmso.exceptions.GMSOError"
  ],
  "type": "function"
 },
 "gmso.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.tests.base_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.tests.base_test.BaseTest": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.tests.base_test.BaseTest.angles": {
  "lineno": 30,
  "symbols_in_volume": [
   "pytest.fixture",
   "unyt.degree"
  ],
  "type": "function"
 },
 "gmso.tests.base_test.BaseTest.ar_system": {
  "lineno": 51,
  "symbols_in_volume": [
   "gmso.external.from_mbuild",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "gmso.tests.base_test.BaseTest.box": {
  "lineno": 42,
  "symbols_in_volume": [
   "gmso.core.box.Box",
   "numpy.ones",
   "pytest.fixture",
   "unyt.nm"
  ],
  "type": "function"
 },
 "gmso.tests.base_test.BaseTest.charge": {
  "lineno": 34,
  "symbols_in_volume": [
   "pytest.fixture",
   "unyt.elementary_charge"
  ],
  "type": "function"
 },
 "gmso.tests.base_test.BaseTest.ethane": {
  "lineno": 245,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.bond.Bond",
   "gmso.core.topology.Topology",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "gmso.tests.base_test.BaseTest.initdir": {
  "lineno": 22,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "gmso.tests.base_test.BaseTest.lengths": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.ones",
   "pytest.fixture",
   "unyt.nm"
  ],
  "type": "function"
 },
 "gmso.tests.base_test.BaseTest.mass": {
  "lineno": 38,
  "symbols_in_volume": [
   "pytest.fixture",
   "unyt.gram",
   "unyt.mol"
  ],
  "type": "function"
 },
 "gmso.tests.base_test.BaseTest.methane": {
  "lineno": 220,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.bond.Bond",
   "gmso.core.topology.Topology",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "gmso.tests.base_test.BaseTest.n_ar_system": {
  "lineno": 55,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "gmso.tests.base_test.BaseTest.n_ar_system._topology": {
  "lineno": 57,
  "symbols_in_volume": [
   "mbuild.Box",
   "mbuild.Compound",
   "mbuild.fill_box"
  ],
  "type": "function"
 },
 "gmso.tests.base_test.BaseTest.n_typed_ar_system": {
  "lineno": 98,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "gmso.tests.base_test.BaseTest.n_typed_ar_system._typed_topology": {
  "lineno": 100,
  "symbols_in_volume": [
   "gmso.core.forcefield.ForceField",
   "gmso.external.from_mbuild",
   "gmso.utils.io.get_fn"
  ],
  "type": "function"
 },
 "gmso.tests.base_test.BaseTest.n_typed_xe_mie": {
  "lineno": 70,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "gmso.tests.base_test.BaseTest.n_typed_xe_mie._typed_topology": {
  "lineno": 72,
  "symbols_in_volume": [
   "gmso.core.forcefield.ForceField",
   "gmso.external.from_mbuild",
   "gmso.tests.utils.get_path",
   "mbuild.Box",
   "mbuild.Compound",
   "mbuild.fill_box"
  ],
  "type": "function"
 },
 "gmso.tests.base_test.BaseTest.parmed_chloroethanol": {
  "lineno": 171,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "mbuild.load",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "gmso.tests.base_test.BaseTest.parmed_ethane": {
  "lineno": 148,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "mbuild.lib.molecules.Ethane",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "gmso.tests.base_test.BaseTest.parmed_hexane_box": {
  "lineno": 186,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "mbuild.fill_box",
   "mbuild.recipes.Alkane",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "gmso.tests.base_test.BaseTest.parmed_methylnitroaniline": {
  "lineno": 156,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "mbuild.load",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "gmso.tests.base_test.BaseTest.top": {
  "lineno": 46,
  "symbols_in_volume": [
   "gmso.core.topology.Topology",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "gmso.tests.base_test.BaseTest.typed_ar_system": {
  "lineno": 94,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "gmso.tests.base_test.BaseTest.typed_chloroethanol": {
  "lineno": 178,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "gmso.external.from_parmed",
   "mbuild.load",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "gmso.tests.base_test.BaseTest.typed_ethane": {
  "lineno": 135,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "gmso.external.from_parmed",
   "mbuild.lib.molecules.Ethane",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "gmso.tests.base_test.BaseTest.typed_methylnitroaniline": {
  "lineno": 163,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "gmso.external.from_parmed",
   "mbuild.load",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "gmso.tests.base_test.BaseTest.typed_water_system": {
  "lineno": 195,
  "symbols_in_volume": [
   "gmso.core.angle.Angle",
   "gmso.core.forcefield.ForceField",
   "gmso.tests.utils.get_path",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "gmso.tests.base_test.BaseTest.water_system": {
  "lineno": 114,
  "symbols_in_volume": [
   "gmso.external.from_mbuild",
   "gmso.tests.utils.get_path",
   "mbuild.Box",
   "mbuild.fill_box",
   "mbuild.load",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "gmso.tests.test_angle": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.tests.test_angle.TestAngle": {
  "lineno": 13,
  "symbols_in_volume": [
   "gmso.tests.base_test.BaseTest"
  ],
  "type": "class"
 },
 "gmso.tests.test_angle.TestAngle.test_add_equivalent_connections": {
  "lineno": 84,
  "symbols_in_volume": [
   "gmso.core.angle.Angle",
   "gmso.core.atom.Atom",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_angle.TestAngle.test_angle_constituent_types": {
  "lineno": 52,
  "symbols_in_volume": [
   "gmso.core.angle.Angle",
   "gmso.core.angle_type.AngleType",
   "gmso.core.atom.Atom",
   "gmso.core.atom_type.AtomType"
  ],
  "type": "function"
 },
 "gmso.tests.test_angle.TestAngle.test_angle_eq": {
  "lineno": 64,
  "symbols_in_volume": [
   "gmso.core.angle.Angle",
   "gmso.core.atom.Atom"
  ],
  "type": "function"
 },
 "gmso.tests.test_angle.TestAngle.test_angle_fake": {
  "lineno": 37,
  "symbols_in_volume": [
   "gmso.core.angle.Angle",
   "gmso.core.atom.Atom",
   "pydantic.ValidationError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_angle.TestAngle.test_angle_fake_angletype": {
  "lineno": 44,
  "symbols_in_volume": [
   "gmso.core.angle.Angle",
   "gmso.core.atom.Atom",
   "pydantic.ValidationError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_angle.TestAngle.test_angle_nonparametrized": {
  "lineno": 14,
  "symbols_in_volume": [
   "gmso.core.angle.Angle",
   "gmso.core.atom.Atom"
  ],
  "type": "function"
 },
 "gmso.tests.test_angle.TestAngle.test_angle_parametrized": {
  "lineno": 22,
  "symbols_in_volume": [
   "gmso.core.angle.Angle",
   "gmso.core.angle_type.AngleType",
   "gmso.core.atom.Atom"
  ],
  "type": "function"
 },
 "gmso.tests.test_angle.TestAngle.test_equivalent_members_set": {
  "lineno": 107,
  "symbols_in_volume": [
   "gmso.core.angle.Angle",
   "gmso.core.atom.Atom"
  ],
  "type": "function"
 },
 "gmso.tests.test_atom": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.tests.test_atom.TestSite": {
  "lineno": 13,
  "symbols_in_volume": [
   "gmso.tests.base_test.BaseTest"
  ],
  "type": "class"
 },
 "gmso.tests.test_atom.TestSite.test_atom_invalid_position": {
  "lineno": 92,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_atom.TestSite.test_atom_list_position": {
  "lineno": 84,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "unyt.assert_allclose_units",
   "unyt.nm"
  ],
  "type": "function"
 },
 "gmso.tests.test_atom.TestSite.test_atom_tuple_position": {
  "lineno": 76,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "unyt.assert_allclose_units",
   "unyt.nm"
  ],
  "type": "function"
 },
 "gmso.tests.test_atom.TestSite.test_bad_pos_input": {
  "lineno": 59,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "pytest.mark.parametrize",
   "pytest.raises",
   "unyt.exceptions.InvalidUnitOperation",
   "unyt.nm"
  ],
  "type": "function"
 },
 "gmso.tests.test_atom.TestSite.test_dtype": {
  "lineno": 20,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "numpy.ndarray",
   "numpy.zeros",
   "unyt.nm",
   "unyt.unyt_array"
  ],
  "type": "function"
 },
 "gmso.tests.test_atom.TestSite.test_equivalence": {
  "lineno": 66,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "numpy.ones",
   "numpy.zeros",
   "unyt.nm"
  ],
  "type": "function"
 },
 "gmso.tests.test_atom.TestSite.test_name_none": {
  "lineno": 26,
  "symbols_in_volume": [
   "gmso.core.atom.Atom"
  ],
  "type": "function"
 },
 "gmso.tests.test_atom.TestSite.test_new_site": {
  "lineno": 14,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "numpy.all",
   "numpy.isnan",
   "unyt.nm"
  ],
  "type": "function"
 },
 "gmso.tests.test_atom.TestSite.test_position_assignment_invalid": {
  "lineno": 100,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "pydantic.ValidationError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_atom.TestSite.test_set_with_atom_type": {
  "lineno": 51,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.atom_type.AtomType",
   "unyt.elementary_charge",
   "unyt.gram",
   "unyt.mol"
  ],
  "type": "function"
 },
 "gmso.tests.test_atom.TestSite.test_setters_and_getters": {
  "lineno": 30,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.element.Lithium",
   "gmso.core.element.Sulfur",
   "unyt.elementary_charge",
   "unyt.gram",
   "unyt.mol"
  ],
  "type": "function"
 },
 "gmso.tests.test_atom_type": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.tests.test_atom_type.TestAtomType": {
  "lineno": 12,
  "symbols_in_volume": [
   "gmso.tests.base_test.BaseTest"
  ],
  "type": "class"
 },
 "gmso.tests.test_atom_type.TestAtomType.test_atom_type_with_topology_and_site": {
  "lineno": 178,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.atom_type.AtomType",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_atom_type.TestAtomType.test_atom_type_with_topology_and_site_change_properties": {
  "lineno": 194,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.atom_type.AtomType",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_atom_type.TestAtomType.test_equivalance": {
  "lineno": 62,
  "symbols_in_volume": [
   "gmso.core.atom_type.AtomType",
   "unyt.kg",
   "unyt.m",
   "unyt.mol"
  ],
  "type": "function"
 },
 "gmso.tests.test_atom_type.TestAtomType.test_expression_consistency": {
  "lineno": 49,
  "symbols_in_volume": [
   "gmso.core.atom_type.AtomType",
   "sympy.symbols",
   "sympy.sympify",
   "unyt.m"
  ],
  "type": "function"
 },
 "gmso.tests.test_atom_type.TestAtomType.test_incorrect_expression": {
  "lineno": 45,
  "symbols_in_volume": [
   "gmso.core.atom_type.AtomType",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_atom_type.TestAtomType.test_incorrect_indep_vars": {
  "lineno": 41,
  "symbols_in_volume": [
   "gmso.core.atom_type.AtomType",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_atom_type.TestAtomType.test_metadata": {
  "lineno": 158,
  "symbols_in_volume": [
   "gmso.core.atom_type.AtomType",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_atom_type.TestAtomType.test_new_atom_type": {
  "lineno": 13,
  "symbols_in_volume": [
   "gmso.core.atom_type.AtomType",
   "unyt.Unit",
   "unyt.nm",
   "unyt.testing.assert_allclose_units"
  ],
  "type": "function"
 },
 "gmso.tests.test_atom_type.TestAtomType.test_set_nb_func": {
  "lineno": 86,
  "symbols_in_volume": [
   "gmso.core.atom_type.AtomType",
   "sympy.sympify",
   "unyt.m"
  ],
  "type": "function"
 },
 "gmso.tests.test_atom_type.TestAtomType.test_set_nb_func_bad": {
  "lineno": 96,
  "symbols_in_volume": [
   "gmso.core.atom_type.AtomType",
   "pytest.raises",
   "unyt.m"
  ],
  "type": "function"
 },
 "gmso.tests.test_atom_type.TestAtomType.test_set_nb_func_params": {
  "lineno": 105,
  "symbols_in_volume": [
   "gmso.core.atom_type.AtomType",
   "sympy.sympify",
   "unyt.m"
  ],
  "type": "function"
 },
 "gmso.tests.test_atom_type.TestAtomType.test_set_nb_func_params_bad": {
  "lineno": 116,
  "symbols_in_volume": [
   "gmso.core.atom_type.AtomType",
   "pytest.raises",
   "unyt.J",
   "unyt.g",
   "unyt.m"
  ],
  "type": "function"
 },
 "gmso.tests.test_atom_type.TestAtomType.test_set_nb_func_params_both_correct": {
  "lineno": 137,
  "symbols_in_volume": [
   "gmso.core.atom_type.AtomType",
   "sympy.sympify",
   "unyt.J",
   "unyt.m"
  ],
  "type": "function"
 },
 "gmso.tests.test_atom_type.TestAtomType.test_set_nb_func_params_both_incorrect": {
  "lineno": 148,
  "symbols_in_volume": [
   "gmso.core.atom_type.AtomType",
   "pytest.raises",
   "unyt.J",
   "unyt.m",
   "unyt.newton",
   "unyt.year"
  ],
  "type": "function"
 },
 "gmso.tests.test_atom_type.TestAtomType.test_set_nb_func_params_partial": {
  "lineno": 126,
  "symbols_in_volume": [
   "gmso.core.atom_type.AtomType",
   "sympy.sympify",
   "unyt.J",
   "unyt.m"
  ],
  "type": "function"
 },
 "gmso.tests.test_atom_type.TestAtomType.test_setters": {
  "lineno": 24,
  "symbols_in_volume": [
   "gmso.core.atom_type.AtomType",
   "sympy.symbols",
   "sympy.sympify",
   "unyt.Unit",
   "unyt.nm",
   "unyt.testing.assert_allclose_units"
  ],
  "type": "function"
 },
 "gmso.tests.test_atom_type.TestAtomType.test_with_1000_atom_types": {
  "lineno": 208,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.atom_type.AtomType",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_bond": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.tests.test_bond.TestBond": {
  "lineno": 13,
  "symbols_in_volume": [
   "gmso.tests.base_test.BaseTest"
  ],
  "type": "class"
 },
 "gmso.tests.test_bond.TestBond.test_add_equivalent_connections": {
  "lineno": 76,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.bond.Bond",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_bond.TestBond.test_bond_constituent_types": {
  "lineno": 49,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.atom_type.AtomType",
   "gmso.core.bond.Bond",
   "gmso.core.bond_type.BondType"
  ],
  "type": "function"
 },
 "gmso.tests.test_bond.TestBond.test_bond_eq": {
  "lineno": 57,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.bond.Bond"
  ],
  "type": "function"
 },
 "gmso.tests.test_bond.TestBond.test_bond_fake": {
  "lineno": 36,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.bond.Bond",
   "pydantic.ValidationError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_bond.TestBond.test_bond_fake_bondtype": {
  "lineno": 42,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.bond.Bond",
   "pydantic.ValidationError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_bond.TestBond.test_bond_nonparametrized": {
  "lineno": 14,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.bond.Bond"
  ],
  "type": "function"
 },
 "gmso.tests.test_bond.TestBond.test_bond_parametrized": {
  "lineno": 22,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.bond.Bond",
   "gmso.core.bond_type.BondType"
  ],
  "type": "function"
 },
 "gmso.tests.test_bond.TestBond.test_equivalent_members_set": {
  "lineno": 92,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.bond.Bond"
  ],
  "type": "function"
 },
 "gmso.tests.test_box": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.tests.test_box.TestBox": {
  "lineno": 11,
  "symbols_in_volume": [
   "gmso.tests.base_test.BaseTest"
  ],
  "type": "class"
 },
 "gmso.tests.test_box.TestBox.test_angles_setter": {
  "lineno": 42,
  "symbols_in_volume": [
   "gmso.core.box.Box",
   "numpy.ones",
   "pytest.mark.parametrize",
   "unyt.degree"
  ],
  "type": "function"
 },
 "gmso.tests.test_box.TestBox.test_bad_lengths": {
  "lineno": 20,
  "symbols_in_volume": [
   "gmso.core.box.Box",
   "pytest.mark.parametrize",
   "pytest.raises",
   "unyt.nm"
  ],
  "type": "function"
 },
 "gmso.tests.test_box.TestBox.test_build_2D_Box": {
  "lineno": 26,
  "symbols_in_volume": [
   "gmso.core.box.Box",
   "pytest.warns",
   "unyt.nm"
  ],
  "type": "function"
 },
 "gmso.tests.test_box.TestBox.test_default_angles": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.array",
   "unyt.degree.all"
  ],
  "type": "function"
 },
 "gmso.tests.test_box.TestBox.test_dtype": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.ndarray",
   "unyt.unyt_array"
  ],
  "type": "function"
 },
 "gmso.tests.test_box.TestBox.test_eq": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.tests.test_box.TestBox.test_eq_bad_angles": {
  "lineno": 94,
  "symbols_in_volume": [
   "copy.deepcopy",
   "unyt.degree"
  ],
  "type": "function"
 },
 "gmso.tests.test_box.TestBox.test_eq_bad_lengths": {
  "lineno": 89,
  "symbols_in_volume": [
   "copy.deepcopy",
   "unyt.nm"
  ],
  "type": "function"
 },
 "gmso.tests.test_box.TestBox.test_init_angles": {
  "lineno": 16,
  "symbols_in_volume": [
   "gmso.core.box.Box",
   "numpy.array_equal"
  ],
  "type": "function"
 },
 "gmso.tests.test_box.TestBox.test_init_lengths": {
  "lineno": 12,
  "symbols_in_volume": [
   "gmso.core.box.Box",
   "numpy.array_equal"
  ],
  "type": "function"
 },
 "gmso.tests.test_box.TestBox.test_lengths_setter": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.ones",
   "unyt.nm",
   "unyt.nm.all"
  ],
  "type": "function"
 },
 "gmso.tests.test_box.TestBox.test_list_to_unyt_array": {
  "lineno": 99,
  "symbols_in_volume": [
   "gmso.core.box.Box",
   "unyt.nm",
   "unyt.unyt_array"
  ],
  "type": "function"
 },
 "gmso.tests.test_box.TestBox.test_scaled_vectors": {
  "lineno": 76,
  "symbols_in_volume": [
   "gmso.core.box.Box",
   "numpy.array",
   "unyt.degree",
   "unyt.nm",
   "unyt.testing.assert_allclose_units",
   "unyt.unyt_array"
  ],
  "type": "function"
 },
 "gmso.tests.test_box.TestBox.test_scaling_unit_vectors": {
  "lineno": 66,
  "symbols_in_volume": [
   "gmso.core.box.Box",
   "unyt.degree",
   "unyt.nm",
   "unyt.testing.assert_allclose_units",
   "unyt.unyt_array"
  ],
  "type": "function"
 },
 "gmso.tests.test_box.TestBox.test_setters_with_lists": {
  "lineno": 51,
  "symbols_in_volume": [
   "gmso.core.box.Box",
   "numpy.ones",
   "pytest.mark.parametrize",
   "unyt.nm"
  ],
  "type": "function"
 },
 "gmso.tests.test_box.TestBox.test_unit_vectors": {
  "lineno": 61,
  "symbols_in_volume": [
   "gmso.core.box.Box",
   "numpy.ones",
   "unyt.degree",
   "unyt.nm"
  ],
  "type": "function"
 },
 "gmso.tests.test_connectivity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.tests.test_connectivity.TestConnectivity": {
  "lineno": 9,
  "symbols_in_volume": [
   "gmso.tests.base_test.BaseTest"
  ],
  "type": "class"
 },
 "gmso.tests.test_connectivity.TestConnectivity.test_ethane_connectivity": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.tests.test_connectivity.TestConnectivity.test_methane_connectivity": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.tests.test_connectivity.TestConnectivity.test_square": {
  "lineno": 37,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.bond.Bond",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_connectivity.TestConnectivity.test_square_with_bridge": {
  "lineno": 66,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.bond.Bond",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_convert_mbuild": {
  "lineno": null,
  "symbols_in_volume": [
   "gmso.utils.io.has_mbuild"
  ],
  "type": "module"
 },
 "gmso.tests.test_convert_mbuild.TestConvertMBuild": {
  "lineno": 17,
  "symbols_in_volume": [
   "gmso.tests.base_test.BaseTest",
   "gmso.utils.io.has_mbuild",
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "gmso.tests.test_convert_mbuild.TestConvertMBuild.mb_ethane": {
  "lineno": 19,
  "symbols_in_volume": [
   "gmso.utils.io.get_fn",
   "mbuild.load",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "gmso.tests.test_convert_mbuild.TestConvertMBuild.test_3_layer_compound": {
  "lineno": 72,
  "symbols_in_volume": [
   "gmso.external.convert_mbuild.from_mbuild",
   "mbuild.Compound"
  ],
  "type": "function"
 },
 "gmso.tests.test_convert_mbuild.TestConvertMBuild.test_3_layer_top": {
  "lineno": 88,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.subtopology.SubTopology",
   "gmso.core.topology.Topology",
   "gmso.external.convert_mbuild.to_mbuild"
  ],
  "type": "function"
 },
 "gmso.tests.test_convert_mbuild.TestConvertMBuild.test_4_layer_compound": {
  "lineno": 102,
  "symbols_in_volume": [
   "gmso.external.convert_mbuild.from_mbuild",
   "mbuild.Compound"
  ],
  "type": "function"
 },
 "gmso.tests.test_convert_mbuild.TestConvertMBuild.test_from_mbuild_argon": {
  "lineno": 35,
  "symbols_in_volume": [
   "gmso.Element"
  ],
  "type": "function"
 },
 "gmso.tests.test_convert_mbuild.TestConvertMBuild.test_from_mbuild_ethane": {
  "lineno": 23,
  "symbols_in_volume": [
   "gmso.Element",
   "gmso.external.convert_mbuild.from_mbuild"
  ],
  "type": "function"
 },
 "gmso.tests.test_convert_mbuild.TestConvertMBuild.test_from_mbuild_single_particle": {
  "lineno": 48,
  "symbols_in_volume": [
   "gmso.external.convert_mbuild.from_mbuild",
   "mbuild.Compound"
  ],
  "type": "function"
 },
 "gmso.tests.test_convert_mbuild.TestConvertMBuild.test_full_conversion": {
  "lineno": 64,
  "symbols_in_volume": [
   "gmso.external.convert_mbuild.to_mbuild"
  ],
  "type": "function"
 },
 "gmso.tests.test_convert_mbuild.TestConvertMBuild.test_pass_box": {
  "lineno": 143,
  "symbols_in_volume": [
   "gmso.external.convert_mbuild.from_mbuild",
   "mbuild.box.Box",
   "unyt.nm",
   "unyt.testing.assert_allclose_units"
  ],
  "type": "function"
 },
 "gmso.tests.test_convert_mbuild.TestConvertMBuild.test_pass_box_bounding": {
  "lineno": 159,
  "symbols_in_volume": [
   "gmso.external.convert_mbuild.from_mbuild",
   "unyt.nm",
   "unyt.testing.assert_allclose_units"
  ],
  "type": "function"
 },
 "gmso.tests.test_convert_mbuild.TestConvertMBuild.test_pass_box_periodicity": {
  "lineno": 154,
  "symbols_in_volume": [
   "gmso.external.convert_mbuild.from_mbuild",
   "unyt.nm",
   "unyt.testing.assert_allclose_units"
  ],
  "type": "function"
 },
 "gmso.tests.test_convert_mbuild.TestConvertMBuild.test_pass_failed_box": {
  "lineno": 150,
  "symbols_in_volume": [
   "gmso.external.convert_mbuild.from_mbuild",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_convert_mbuild.TestConvertMBuild.test_to_mbuild_name_none": {
  "lineno": 56,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.topology.Topology",
   "gmso.external.convert_mbuild.to_mbuild"
  ],
  "type": "function"
 },
 "gmso.tests.test_convert_mbuild.TestConvertMBuild.test_uneven_hierarchy": {
  "lineno": 121,
  "symbols_in_volume": [
   "gmso.external.convert_mbuild.from_mbuild",
   "mbuild.Compound"
  ],
  "type": "function"
 },
 "gmso.tests.test_convert_openmm": {
  "lineno": null,
  "symbols_in_volume": [
   "gmso.utils.io.has_openmm",
   "gmso.utils.io.has_simtk_unit",
   "gmso.utils.io.import_"
  ],
  "type": "module"
 },
 "gmso.tests.test_convert_openmm.TestOpenMM": {
  "lineno": 14,
  "symbols_in_volume": [
   "gmso.tests.base_test.BaseTest",
   "gmso.utils.io.has_openmm",
   "gmso.utils.io.has_simtk_unit",
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "gmso.tests.test_convert_openmm.TestOpenMM.test_box_dims": {
  "lineno": 30,
  "symbols_in_volume": [
   "gmso.external.convert_openmm.to_openmm",
   "unyt.testing.assert_allclose_units"
  ],
  "type": "function"
 },
 "gmso.tests.test_convert_openmm.TestOpenMM.test_n_atoms": {
  "lineno": 23,
  "symbols_in_volume": [
   "gmso.external.convert_openmm.to_openmm"
  ],
  "type": "function"
 },
 "gmso.tests.test_convert_openmm.TestOpenMM.test_openmm_modeller": {
  "lineno": 17,
  "symbols_in_volume": [
   "gmso.external.convert_openmm.to_openmm"
  ],
  "type": "function"
 },
 "gmso.tests.test_convert_openmm.TestOpenMM.test_openmm_topology": {
  "lineno": 20,
  "symbols_in_volume": [
   "gmso.external.convert_openmm.to_openmm"
  ],
  "type": "function"
 },
 "gmso.tests.test_convert_openmm.TestOpenMM.test_particle_positions": {
  "lineno": 38,
  "symbols_in_volume": [
   "gmso.external.convert_openmm.to_openmm",
   "unyt.nanometer",
   "unyt.testing.assert_allclose_units"
  ],
  "type": "function"
 },
 "gmso.tests.test_convert_openmm.TestOpenMM.test_position_units": {
  "lineno": 45,
  "symbols_in_volume": [
   "gmso.core.box.Box",
   "gmso.external.convert_openmm.to_openmm"
  ],
  "type": "function"
 },
 "gmso.tests.test_convert_parmed": {
  "lineno": null,
  "symbols_in_volume": [
   "gmso.utils.io.has_parmed",
   "gmso.utils.io.import_"
  ],
  "type": "module"
 },
 "gmso.tests.test_convert_parmed.TestConvertParmEd": {
  "lineno": 17,
  "symbols_in_volume": [
   "gmso.tests.base_test.BaseTest",
   "gmso.utils.io.has_parmed",
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "gmso.tests.test_convert_parmed.TestConvertParmEd.test_box_info": {
  "lineno": 189,
  "symbols_in_volume": [
   "gmso.external.convert_parmed.from_parmed",
   "gmso.external.convert_parmed.to_parmed",
   "unyt.testing.assert_allclose_units"
  ],
  "type": "function"
 },
 "gmso.tests.test_convert_parmed.TestConvertParmEd.test_from_parmed_basic": {
  "lineno": 19,
  "symbols_in_volume": [
   "gmso.external.convert_parmed.from_parmed",
   "gmso.utils.io.get_fn",
   "unyt.nm",
   "unyt.testing.assert_allclose_units"
  ],
  "type": "function"
 },
 "gmso.tests.test_convert_parmed.TestConvertParmEd.test_from_parmed_parametrized_structure": {
  "lineno": 34,
  "symbols_in_volume": [
   "gmso.external.convert_parmed.from_parmed",
   "gmso.utils.io.get_fn",
   "unyt.nm",
   "unyt.testing.assert_allclose_units"
  ],
  "type": "function"
 },
 "gmso.tests.test_convert_parmed.TestConvertParmEd.test_residues_info": {
  "lineno": 173,
  "symbols_in_volume": [
   "gmso.external.convert_parmed.from_parmed",
   "gmso.external.convert_parmed.to_parmed"
  ],
  "type": "function"
 },
 "gmso.tests.test_convert_parmed.TestConvertParmEd.test_to_parmed_full": {
  "lineno": 69,
  "symbols_in_volume": [
   "gmso.external.convert_parmed.from_parmed",
   "gmso.external.convert_parmed.to_parmed",
   "gmso.utils.io.get_fn"
  ],
  "type": "function"
 },
 "gmso.tests.test_convert_parmed.TestConvertParmEd.test_to_parmed_incompatible_expression": {
  "lineno": 109,
  "symbols_in_volume": [
   "gmso.external.convert_parmed.from_parmed",
   "gmso.external.convert_parmed.to_parmed",
   "gmso.utils.io.get_fn",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_convert_parmed.TestConvertParmEd.test_to_parmed_loop": {
  "lineno": 129,
  "symbols_in_volume": [
   "gmso.external.convert_parmed.from_parmed",
   "gmso.external.convert_parmed.to_parmed"
  ],
  "type": "function"
 },
 "gmso.tests.test_convert_parmed.TestConvertParmEd.test_to_parmed_simple": {
  "lineno": 55,
  "symbols_in_volume": [
   "gmso.external.convert_parmed.from_parmed",
   "gmso.external.convert_parmed.to_parmed",
   "gmso.utils.io.get_fn"
  ],
  "type": "function"
 },
 "gmso.tests.test_dihedral": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.tests.test_dihedral.TestDihedral": {
  "lineno": 13,
  "symbols_in_volume": [
   "gmso.tests.base_test.BaseTest"
  ],
  "type": "class"
 },
 "gmso.tests.test_dihedral.TestDihedral.test_add_equivalent_connections": {
  "lineno": 101,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.dihedral.Dihedral",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_dihedral.TestDihedral.test_dihedral_constituent_types": {
  "lineno": 62,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.atom_type.AtomType",
   "gmso.core.dihedral.Dihedral",
   "gmso.core.dihedral_type.DihedralType"
  ],
  "type": "function"
 },
 "gmso.tests.test_dihedral.TestDihedral.test_dihedral_eq": {
  "lineno": 80,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.dihedral.Dihedral"
  ],
  "type": "function"
 },
 "gmso.tests.test_dihedral.TestDihedral.test_dihedral_fake": {
  "lineno": 43,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.dihedral.Dihedral",
   "pydantic.ValidationError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_dihedral.TestDihedral.test_dihedral_fake_dihedraltype": {
  "lineno": 51,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.dihedral.Dihedral",
   "pydantic.ValidationError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_dihedral.TestDihedral.test_dihedral_nonparametrized": {
  "lineno": 14,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.dihedral.Dihedral"
  ],
  "type": "function"
 },
 "gmso.tests.test_dihedral.TestDihedral.test_dihedral_parametrized": {
  "lineno": 24,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.dihedral.Dihedral",
   "gmso.core.dihedral_type.DihedralType"
  ],
  "type": "function"
 },
 "gmso.tests.test_dihedral.TestDihedral.test_equivalent_members_set": {
  "lineno": 125,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.dihedral.Dihedral"
  ],
  "type": "function"
 },
 "gmso.tests.test_element": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.tests.test_element.TestElement": {
  "lineno": 12,
  "symbols_in_volume": [
   "gmso.tests.base_test.BaseTest"
  ],
  "type": "class"
 },
 "gmso.tests.test_element.TestElement.test_all_elements": {
  "lineno": 86,
  "symbols_in_volume": [
   "gmso.core.element.__hash__",
   "gmso.core.element.element_by_atomic_number"
  ],
  "type": "function"
 },
 "gmso.tests.test_element.TestElement.test_bad_atomic_number": {
  "lineno": 92,
  "symbols_in_volume": [
   "gmso.core.element.element_by_atomic_number",
   "gmso.exceptions.GMSOError",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_element.TestElement.test_element": {
  "lineno": 13,
  "symbols_in_volume": [
   "gmso.core.element.Carbon",
   "gmso.core.element.Carbon.mass"
  ],
  "type": "function"
 },
 "gmso.tests.test_element.TestElement.test_element_by_atom_type": {
  "lineno": 73,
  "symbols_in_volume": [
   "gmso.core.atom_type.AtomType",
   "gmso.core.element.Carbon.mass",
   "gmso.core.element.Carbon.name",
   "gmso.core.element.Carbon.symbol",
   "gmso.core.element.element_by_atom_type"
  ],
  "type": "function"
 },
 "gmso.tests.test_element.TestElement.test_element_by_atomic_number": {
  "lineno": 36,
  "symbols_in_volume": [
   "gmso.core.element.Oxygen.mass",
   "gmso.core.element.Oxygen.name",
   "gmso.core.element.Oxygen.symbol",
   "gmso.core.element.element_by_atomic_number"
  ],
  "type": "function"
 },
 "gmso.tests.test_element.TestElement.test_element_by_mass": {
  "lineno": 44,
  "symbols_in_volume": [
   "gmso.core.element.Fluorine.mass",
   "gmso.core.element.Fluorine.name",
   "gmso.core.element.Fluorine.symbol",
   "gmso.core.element.element_by_mass",
   "unyt.amu"
  ],
  "type": "function"
 },
 "gmso.tests.test_element.TestElement.test_element_by_mass_exactness": {
  "lineno": 52,
  "symbols_in_volume": [
   "gmso.core.element.Chlorine",
   "gmso.core.element.Cobalt",
   "gmso.core.element.Nickel",
   "gmso.core.element.element_by_mass"
  ],
  "type": "function"
 },
 "gmso.tests.test_element.TestElement.test_element_by_name": {
  "lineno": 20,
  "symbols_in_volume": [
   "gmso.core.element.Carbon.mass",
   "gmso.core.element.Carbon.name",
   "gmso.core.element.Carbon.symbol",
   "gmso.core.element.element_by_name"
  ],
  "type": "function"
 },
 "gmso.tests.test_element.TestElement.test_element_by_smarts_string": {
  "lineno": 61,
  "symbols_in_volume": [
   "gmso.core.element.Carbon.mass",
   "gmso.core.element.Carbon.name",
   "gmso.core.element.Carbon.symbol",
   "gmso.core.element.element_by_smarts_string"
  ],
  "type": "function"
 },
 "gmso.tests.test_element.TestElement.test_element_by_symbol": {
  "lineno": 28,
  "symbols_in_volume": [
   "gmso.core.element.Nitrogen.mass",
   "gmso.core.element.Nitrogen.name",
   "gmso.core.element.Nitrogen.symbol",
   "gmso.core.element.element_by_symbol"
  ],
  "type": "function"
 },
 "gmso.tests.test_expression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.tests.test_expression.TestExpression": {
  "lineno": 10,
  "symbols_in_volume": [
   "gmso.tests.base_test.BaseTest"
  ],
  "type": "class"
 },
 "gmso.tests.test_expression.TestExpression.test_expression": {
  "lineno": 12,
  "symbols_in_volume": [
   "gmso.utils.expression._PotentialExpression",
   "sympy.sympify",
   "unyt.dimensionless"
  ],
  "type": "function"
 },
 "gmso.tests.test_expression.TestExpression.test_expression_equality": {
  "lineno": 194,
  "symbols_in_volume": [
   "gmso.utils.expression._PotentialExpression"
  ],
  "type": "function"
 },
 "gmso.tests.test_expression.TestExpression.test_expression_multiple_indep_vars": {
  "lineno": 28,
  "symbols_in_volume": [
   "gmso.utils.expression._PotentialExpression",
   "sympy.Symbol",
   "unyt.nm",
   "unyt.rad"
  ],
  "type": "function"
 },
 "gmso.tests.test_expression.TestExpression.test_invalid_expression": {
  "lineno": 44,
  "symbols_in_volume": [
   "gmso.utils.expression._PotentialExpression",
   "pytest.raises",
   "unyt.nm",
   "unyt.rad"
  ],
  "type": "function"
 },
 "gmso.tests.test_expression.TestExpression.test_invalid_indep_vars": {
  "lineno": 57,
  "symbols_in_volume": [
   "gmso.utils.expression._PotentialExpression",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_expression.TestExpression.test_non_parametric_expression": {
  "lineno": 68,
  "symbols_in_volume": [
   "gmso.utils.expression._PotentialExpression",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_expression.TestExpression.test_parametric_equality": {
  "lineno": 215,
  "symbols_in_volume": [
   "gmso.utils.expression._PotentialExpression",
   "unyt.dimensionless"
  ],
  "type": "function"
 },
 "gmso.tests.test_expression.TestExpression.test_set_expression": {
  "lineno": 102,
  "symbols_in_volume": [
   "gmso.utils.expression._PotentialExpression",
   "sympy.Symbol",
   "unyt.hertz",
   "unyt.nm"
  ],
  "type": "function"
 },
 "gmso.tests.test_expression.TestExpression.test_set_expression_invalid": {
  "lineno": 115,
  "symbols_in_volume": [
   "gmso.utils.expression._PotentialExpression",
   "pytest.raises",
   "sympy.sympify",
   "unyt.hertz",
   "unyt.nm"
  ],
  "type": "function"
 },
 "gmso.tests.test_expression.TestExpression.test_set_indep_variables": {
  "lineno": 80,
  "symbols_in_volume": [
   "gmso.utils.expression._PotentialExpression",
   "sympy.Symbol"
  ],
  "type": "function"
 },
 "gmso.tests.test_expression.TestExpression.test_set_indep_variables_invalid": {
  "lineno": 90,
  "symbols_in_volume": [
   "gmso.utils.expression._PotentialExpression",
   "pytest.raises",
   "sympy.Symbol"
  ],
  "type": "function"
 },
 "gmso.tests.test_expression.TestExpression.test_set_parameters": {
  "lineno": 130,
  "symbols_in_volume": [
   "gmso.utils.expression._PotentialExpression",
   "unyt.hertz",
   "unyt.nm",
   "unyt.unyt_quantity"
  ],
  "type": "function"
 },
 "gmso.tests.test_expression.TestExpression.test_set_parameters_extra": {
  "lineno": 149,
  "symbols_in_volume": [
   "gmso.utils.expression._PotentialExpression",
   "unyt.hertz",
   "unyt.nm",
   "unyt.unyt_quantity"
  ],
  "type": "function"
 },
 "gmso.tests.test_expression.TestExpression.test_set_parameters_invalid": {
  "lineno": 172,
  "symbols_in_volume": [
   "gmso.utils.expression._PotentialExpression",
   "pytest.raises",
   "unyt.hertz",
   "unyt.nm",
   "unyt.unyt_quantity"
  ],
  "type": "function"
 },
 "gmso.tests.test_forcefield_xml": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.tests.test_forcefield_xml.TestForceFieldFromXML": {
  "lineno": 13,
  "symbols_in_volume": [
   "gmso.tests.base_test.BaseTest"
  ],
  "type": "class"
 },
 "gmso.tests.test_forcefield_xml.TestForceFieldFromXML.ff": {
  "lineno": 15,
  "symbols_in_volume": [
   "gmso.core.forcefield.ForceField",
   "gmso.tests.utils.get_path",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "gmso.tests.test_forcefield_xml.TestForceFieldFromXML.named_groups_ff": {
  "lineno": 19,
  "symbols_in_volume": [
   "gmso.core.forcefield.ForceField",
   "gmso.tests.utils.get_path",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "gmso.tests.test_forcefield_xml.TestForceFieldFromXML.test_atomclass_groups_charm_buck_ff": {
  "lineno": 151,
  "symbols_in_volume": [
   "gmso.core.forcefield.ForceField",
   "gmso.tests.utils.get_path"
  ],
  "type": "function"
 },
 "gmso.tests.test_forcefield_xml.TestForceFieldFromXML.test_elementary_charge_to_coulomb": {
  "lineno": 147,
  "symbols_in_volume": [
   "unyt.Unit",
   "unyt.elementary_charge"
  ],
  "type": "function"
 },
 "gmso.tests.test_forcefield_xml.TestForceFieldFromXML.test_ff_angletypes_from_xml": {
  "lineno": 82,
  "symbols_in_volume": [
   "sympy.sympify",
   "unyt.kJ",
   "unyt.mol",
   "unyt.nm",
   "unyt.unyt_quantity"
  ],
  "type": "function"
 },
 "gmso.tests.test_forcefield_xml.TestForceFieldFromXML.test_ff_atomtypes_from_xml": {
  "lineno": 39,
  "symbols_in_volume": [
   "sympy.sympify",
   "unyt.amu",
   "unyt.coulomb",
   "unyt.kcal",
   "unyt.mol",
   "unyt.nm",
   "unyt.unyt_quantity"
  ],
  "type": "function"
 },
 "gmso.tests.test_forcefield_xml.TestForceFieldFromXML.test_ff_bondtypes_from_xml": {
  "lineno": 67,
  "symbols_in_volume": [
   "sympy.sympify",
   "unyt.kJ",
   "unyt.mol",
   "unyt.nm",
   "unyt.unyt_quantity"
  ],
  "type": "function"
 },
 "gmso.tests.test_forcefield_xml.TestForceFieldFromXML.test_ff_charmm_xml": {
  "lineno": 122,
  "symbols_in_volume": [
   "gmso.core.forcefield.ForceField",
   "gmso.tests.utils.get_path",
   "unyt.kJ",
   "unyt.unyt_quantity"
  ],
  "type": "function"
 },
 "gmso.tests.test_forcefield_xml.TestForceFieldFromXML.test_ff_dihedraltypes_from_xml": {
  "lineno": 97,
  "symbols_in_volume": [
   "sympy.sympify",
   "unyt.kJ",
   "unyt.mol",
   "unyt.nm",
   "unyt.unyt_quantity"
  ],
  "type": "function"
 },
 "gmso.tests.test_forcefield_xml.TestForceFieldFromXML.test_ff_impropertypes_from_xml": {
  "lineno": 112,
  "symbols_in_volume": [
   "sympy.sympify",
   "unyt.kJ",
   "unyt.mol",
   "unyt.nm",
   "unyt.unyt_quantity"
  ],
  "type": "function"
 },
 "gmso.tests.test_forcefield_xml.TestForceFieldFromXML.test_ff_name_version_from_xml": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.tests.test_forcefield_xml.TestForceFieldFromXML.test_ff_periodic_dihedrals_from_alphanumeric_symbols": {
  "lineno": 155,
  "symbols_in_volume": [
   "gmso.core.forcefield.ForceField",
   "gmso.tests.utils.get_path",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_forcefield_xml.TestForceFieldFromXML.test_missing_params": {
  "lineno": 143,
  "symbols_in_volume": [
   "gmso.core.forcefield.ForceField",
   "gmso.exceptions.ForceFieldParseError",
   "gmso.tests.utils.get_path",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_forcefield_xml.TestForceFieldFromXML.test_named_potential_groups": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.tests.test_forcefield_xml.TestForceFieldFromXML.test_non_unique_params": {
  "lineno": 139,
  "symbols_in_volume": [
   "gmso.core.forcefield.ForceField",
   "gmso.tests.utils.get_path",
   "lxml.etree.DocumentInvalid",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_forcefield_xml.TestForceFieldFromXML.test_scaling_factors_from_xml": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.tests.test_forcefield_xml.TestForceFieldFromXML.test_units_from_xml": {
  "lineno": 31,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "unyt.K",
   "unyt.Unit",
   "unyt.coulomb",
   "unyt.gram",
   "unyt.kb",
   "unyt.mol",
   "unyt.nm",
   "unyt.ps",
   "unyt.rad"
  ],
  "type": "function"
 },
 "gmso.tests.test_gro": {
  "lineno": null,
  "symbols_in_volume": [
   "gmso.utils.io.has_parmed",
   "gmso.utils.io.import_"
  ],
  "type": "module"
 },
 "gmso.tests.test_gro.TestGro": {
  "lineno": 15,
  "symbols_in_volume": [
   "gmso.tests.base_test.BaseTest",
   "gmso.utils.io.has_parmed",
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "gmso.tests.test_gro.TestGro.test_read_gro": {
  "lineno": 17,
  "symbols_in_volume": [
   "gmso.formats.gro.read_gro",
   "gmso.utils.io.get_fn",
   "numpy.ones",
   "unyt.nm",
   "unyt.testing.assert_allclose_units"
  ],
  "type": "function"
 },
 "gmso.tests.test_gro.TestGro.test_write_gro": {
  "lineno": 36,
  "symbols_in_volume": [
   "gmso.external.convert_parmed.from_parmed",
   "gmso.formats.gro.write_gro",
   "gmso.utils.io.get_fn"
  ],
  "type": "function"
 },
 "gmso.tests.test_gro.TestGro.test_write_gro_non_orthogonal": {
  "lineno": 41,
  "symbols_in_volume": [
   "gmso.external.convert_parmed.from_parmed",
   "gmso.formats.gro.write_gro",
   "gmso.utils.io.get_fn",
   "unyt.degree"
  ],
  "type": "function"
 },
 "gmso.tests.test_gro.TestGro.test_wrong_n_atoms": {
  "lineno": 30,
  "symbols_in_volume": [
   "gmso.formats.gro.read_gro",
   "gmso.utils.io.get_fn",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_gsd": {
  "lineno": null,
  "symbols_in_volume": [
   "gmso.utils.io.has_parmed",
   "gmso.utils.io.import_"
  ],
  "type": "module"
 },
 "gmso.tests.test_gsd.TestGsd": {
  "lineno": 14,
  "symbols_in_volume": [
   "gmso.tests.base_test.BaseTest",
   "gmso.utils.io.has_gsd",
   "gmso.utils.io.has_parmed",
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "gmso.tests.test_gsd.TestGsd.test_write_gsd": {
  "lineno": 18,
  "symbols_in_volume": [
   "gmso.external.convert_parmed.from_parmed",
   "gmso.formats.gsd.write_gsd",
   "gmso.utils.io.get_fn"
  ],
  "type": "function"
 },
 "gmso.tests.test_gsd.TestGsd.test_write_gsd_non_orthogonal": {
  "lineno": 24,
  "symbols_in_volume": [
   "gmso.external.convert_parmed.from_parmed",
   "gmso.formats.gsd.write_gsd",
   "gmso.utils.io.get_fn",
   "unyt.degree"
  ],
  "type": "function"
 },
 "gmso.tests.test_improper": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.tests.test_improper.TestImproper": {
  "lineno": 13,
  "symbols_in_volume": [
   "gmso.tests.base_test.BaseTest"
  ],
  "type": "class"
 },
 "gmso.tests.test_improper.TestImproper.test_add_equivalent_connections": {
  "lineno": 101,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.improper.Improper",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_improper.TestImproper.test_equivalent_members_set": {
  "lineno": 124,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.improper.Improper"
  ],
  "type": "function"
 },
 "gmso.tests.test_improper.TestImproper.test_improper_constituent_types": {
  "lineno": 62,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.atom_type.AtomType",
   "gmso.core.improper.Improper",
   "gmso.core.improper_type.ImproperType"
  ],
  "type": "function"
 },
 "gmso.tests.test_improper.TestImproper.test_improper_eq": {
  "lineno": 80,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.improper.Improper"
  ],
  "type": "function"
 },
 "gmso.tests.test_improper.TestImproper.test_improper_fake": {
  "lineno": 43,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.improper.Improper",
   "pydantic.ValidationError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_improper.TestImproper.test_improper_fake_impropertype": {
  "lineno": 51,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.improper.Improper",
   "pydantic.ValidationError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_improper.TestImproper.test_improper_nonparametrized": {
  "lineno": 14,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.improper.Improper"
  ],
  "type": "function"
 },
 "gmso.tests.test_improper.TestImproper.test_improper_parametrized": {
  "lineno": 24,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.improper.Improper",
   "gmso.core.improper_type.ImproperType"
  ],
  "type": "function"
 },
 "gmso.tests.test_internal_conversions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.tests.test_internal_conversions.TestInternalConversions": {
  "lineno": 12,
  "symbols_in_volume": [
   "gmso.tests.base_test.BaseTest"
  ],
  "type": "class"
 },
 "gmso.tests.test_internal_conversions.TestInternalConversions.templates": {
  "lineno": 14,
  "symbols_in_volume": [
   "gmso.lib.potential_templates.PotentialTemplateLibrary",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "gmso.tests.test_internal_conversions.TestInternalConversions.test_double_conversion": {
  "lineno": 172,
  "symbols_in_volume": [
   "gmso.core.dihedral_type.DihedralType",
   "gmso.utils.conversions.convert_opls_to_ryckaert",
   "gmso.utils.conversions.convert_ryckaert_to_opls",
   "unyt.Unit",
   "unyt.testing.assert_allclose_units"
  ],
  "type": "function"
 },
 "gmso.tests.test_internal_conversions.TestInternalConversions.test_invalid_connection_type": {
  "lineno": 18,
  "symbols_in_volume": [
   "gmso.core.dihedral_type.DihedralType",
   "gmso.exceptions.GMSOError",
   "gmso.utils.conversions.convert_opls_to_ryckaert",
   "gmso.utils.conversions.convert_ryckaert_to_opls",
   "pytest.raises",
   "unyt.Unit"
  ],
  "type": "function"
 },
 "gmso.tests.test_internal_conversions.TestInternalConversions.test_opls_to_ryckaert": {
  "lineno": 132,
  "symbols_in_volume": [
   "gmso.core.dihedral_type.DihedralType",
   "gmso.utils.conversions.convert_opls_to_ryckaert",
   "numpy.isclose",
   "numpy.pi.items",
   "unyt.Unit"
  ],
  "type": "function"
 },
 "gmso.tests.test_internal_conversions.TestInternalConversions.test_ryckaert_to_opls": {
  "lineno": 90,
  "symbols_in_volume": [
   "gmso.core.dihedral_type.DihedralType",
   "gmso.utils.conversions.convert_ryckaert_to_opls",
   "numpy.isclose",
   "numpy.pi.items",
   "unyt.Unit"
  ],
  "type": "function"
 },
 "gmso.tests.test_lammps": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.tests.test_lammps.TestLammpsWriter": {
  "lineno": 9,
  "symbols_in_volume": [
   "gmso.tests.base_test.BaseTest"
  ],
  "type": "class"
 },
 "gmso.tests.test_lammps.TestLammpsWriter.test_ethane_lammps": {
  "lineno": 17,
  "symbols_in_volume": [
   "gmso.formats.lammpsdata.write_lammpsdata"
  ],
  "type": "function"
 },
 "gmso.tests.test_lammps.TestLammpsWriter.test_read_charge": {
  "lineno": 44,
  "symbols_in_volume": [
   "gmso.formats.lammpsdata.read_lammpsdata",
   "gmso.tests.utils.get_path",
   "unyt.C",
   "unyt.testing.assert_allclose_units",
   "unyt.unyt_array"
  ],
  "type": "function"
 },
 "gmso.tests.test_lammps.TestLammpsWriter.test_read_epsilon": {
  "lineno": 57,
  "symbols_in_volume": [
   "gmso.formats.lammpsdata.read_lammpsdata",
   "gmso.tests.utils.get_path",
   "unyt.kcal",
   "unyt.mol",
   "unyt.testing.assert_allclose_units",
   "unyt.unyt_array"
  ],
  "type": "function"
 },
 "gmso.tests.test_lammps.TestLammpsWriter.test_read_lammps": {
  "lineno": 23,
  "symbols_in_volume": [
   "gmso.formats.lammpsdata.read_lammpsdata",
   "gmso.tests.utils.get_path"
  ],
  "type": "function"
 },
 "gmso.tests.test_lammps.TestLammpsWriter.test_read_lammps_triclinic": {
  "lineno": 74,
  "symbols_in_volume": [
   "gmso.core.box.Box",
   "gmso.formats.lammpsdata.read_lammpsdata",
   "gmso.formats.lammpsdata.write_lammpsdata",
   "unyt.degree",
   "unyt.nm",
   "unyt.testing.assert_allclose_units",
   "unyt.unyt_array"
  ],
  "type": "function"
 },
 "gmso.tests.test_lammps.TestLammpsWriter.test_read_mass": {
  "lineno": 38,
  "symbols_in_volume": [
   "gmso.formats.lammpsdata.read_lammpsdata",
   "gmso.tests.utils.get_path",
   "unyt.g",
   "unyt.testing.assert_allclose_units",
   "unyt.unyt_array"
  ],
  "type": "function"
 },
 "gmso.tests.test_lammps.TestLammpsWriter.test_read_n_sites": {
  "lineno": 31,
  "symbols_in_volume": [
   "gmso.formats.lammpsdata.read_lammpsdata",
   "gmso.formats.lammpsdata.write_lammpsdata"
  ],
  "type": "function"
 },
 "gmso.tests.test_lammps.TestLammpsWriter.test_read_sigma": {
  "lineno": 50,
  "symbols_in_volume": [
   "gmso.formats.lammpsdata.read_lammpsdata",
   "gmso.tests.utils.get_path",
   "unyt.angstrom",
   "unyt.testing.assert_allclose_units",
   "unyt.unyt_array"
  ],
  "type": "function"
 },
 "gmso.tests.test_lammps.TestLammpsWriter.test_read_sites": {
  "lineno": 26,
  "symbols_in_volume": [
   "gmso.core.box.Box",
   "gmso.formats.lammpsdata.read_lammpsdata",
   "gmso.tests.utils.get_path"
  ],
  "type": "function"
 },
 "gmso.tests.test_lammps.TestLammpsWriter.test_read_water": {
  "lineno": 64,
  "symbols_in_volume": [
   "gmso.formats.lammpsdata.read_lammpsdata",
   "gmso.formats.lammpsdata.write_lammpsdata",
   "unyt.elementary_charge",
   "unyt.testing.assert_allclose_units",
   "unyt.unyt_array"
  ],
  "type": "function"
 },
 "gmso.tests.test_lammps.TestLammpsWriter.test_water_lammps": {
  "lineno": 20,
  "symbols_in_volume": [
   "gmso.formats.lammpsdata.write_lammpsdata"
  ],
  "type": "function"
 },
 "gmso.tests.test_lammps.TestLammpsWriter.test_write_lammps": {
  "lineno": 10,
  "symbols_in_volume": [
   "gmso.formats.lammpsdata.write_lammpsdata"
  ],
  "type": "function"
 },
 "gmso.tests.test_lammps.TestLammpsWriter.test_write_lammps_triclinic": {
  "lineno": 13,
  "symbols_in_volume": [
   "gmso.core.box.Box",
   "gmso.formats.lammpsdata.write_lammpsdata"
  ],
  "type": "function"
 },
 "gmso.tests.test_mcf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.tests.test_mcf.TestMCF": {
  "lineno": 10,
  "symbols_in_volume": [
   "gmso.tests.base_test.BaseTest"
  ],
  "type": "class"
 },
 "gmso.tests.test_mcf.TestMCF.test_modified_potentials": {
  "lineno": 102,
  "symbols_in_volume": [
   "gmso.exceptions.EngineIncompatibilityError",
   "gmso.formats.mcf.write_mcf",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_mcf.TestMCF.test_write_lj_full": {
  "lineno": 19,
  "symbols_in_volume": [
   "gmso.formats.mcf.write_mcf",
   "numpy.isclose",
   "unyt.Angstrom",
   "unyt.K",
   "unyt.amu",
   "unyt.elementary_charge",
   "unyt.kb.in_units"
  ],
  "type": "function"
 },
 "gmso.tests.test_mcf.TestMCF.test_write_lj_simple": {
  "lineno": 11,
  "symbols_in_volume": [
   "gmso.formats.mcf.write_mcf"
  ],
  "type": "function"
 },
 "gmso.tests.test_mcf.TestMCF.test_write_mie_full": {
  "lineno": 56,
  "symbols_in_volume": [
   "gmso.formats.mcf.write_mcf",
   "numpy.isclose",
   "unyt.Angstrom",
   "unyt.K",
   "unyt.amu",
   "unyt.elementary_charge",
   "unyt.kb.in_units"
  ],
  "type": "function"
 },
 "gmso.tests.test_mcf.TestMCF.test_write_mie_simple": {
  "lineno": 15,
  "symbols_in_volume": [
   "gmso.formats.mcf.write_mcf"
  ],
  "type": "function"
 },
 "gmso.tests.test_potential": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.tests.test_potential.TestPotential": {
  "lineno": 12,
  "symbols_in_volume": [
   "gmso.tests.base_test.BaseTest"
  ],
  "type": "class"
 },
 "gmso.tests.test_potential.TestPotential.test_class_method": {
  "lineno": 228,
  "symbols_in_volume": [
   "gmso.core.parametric_potential.ParametricPotential",
   "gmso.core.parametric_potential.ParametricPotential.from_template",
   "gmso.lib.potential_templates.PotentialTemplateLibrary",
   "unyt.dimensionless"
  ],
  "type": "function"
 },
 "gmso.tests.test_potential.TestPotential.test_class_method_with_error": {
  "lineno": 241,
  "symbols_in_volume": [
   "gmso.core.parametric_potential.ParametricPotential.from_template",
   "gmso.exceptions.GMSOError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_potential.TestPotential.test_equivalance": {
  "lineno": 69,
  "symbols_in_volume": [
   "gmso.core.parametric_potential.ParametricPotential",
   "unyt.g",
   "unyt.m"
  ],
  "type": "function"
 },
 "gmso.tests.test_potential.TestPotential.test_expression_consistency": {
  "lineno": 56,
  "symbols_in_volume": [
   "gmso.core.parametric_potential.ParametricPotential",
   "sympy.symbols",
   "sympy.sympify",
   "unyt.m"
  ],
  "type": "function"
 },
 "gmso.tests.test_potential.TestPotential.test_incorrect_expression": {
  "lineno": 52,
  "symbols_in_volume": [
   "gmso.core.parametric_potential.ParametricPotential",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_potential.TestPotential.test_incorrect_indep_vars": {
  "lineno": 48,
  "symbols_in_volume": [
   "gmso.core.parametric_potential.ParametricPotential",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_potential.TestPotential.test_new_potential": {
  "lineno": 13,
  "symbols_in_volume": [
   "gmso.core.parametric_potential.ParametricPotential",
   "sympy.symbols",
   "sympy.sympify",
   "unyt.g",
   "unyt.m",
   "unyt.testing.assert_allclose_units"
  ],
  "type": "function"
 },
 "gmso.tests.test_potential.TestPotential.test_set_expression": {
  "lineno": 121,
  "symbols_in_volume": [
   "gmso.core.parametric_potential.ParametricPotential",
   "sympy.sympify",
   "unyt.g",
   "unyt.m"
  ],
  "type": "function"
 },
 "gmso.tests.test_potential.TestPotential.test_set_expression_and_params": {
  "lineno": 190,
  "symbols_in_volume": [
   "gmso.core.parametric_potential.ParametricPotential",
   "sympy.sympify",
   "unyt.g",
   "unyt.m"
  ],
  "type": "function"
 },
 "gmso.tests.test_potential.TestPotential.test_set_expression_and_params_mismatch": {
  "lineno": 210,
  "symbols_in_volume": [
   "gmso.core.parametric_potential.ParametricPotential",
   "pytest.raises",
   "unyt.g",
   "unyt.m"
  ],
  "type": "function"
 },
 "gmso.tests.test_potential.TestPotential.test_set_expression_bad": {
  "lineno": 136,
  "symbols_in_volume": [
   "gmso.core.parametric_potential.ParametricPotential",
   "pytest.raises",
   "unyt.g",
   "unyt.m"
  ],
  "type": "function"
 },
 "gmso.tests.test_potential.TestPotential.test_set_params": {
  "lineno": 149,
  "symbols_in_volume": [
   "gmso.core.parametric_potential.ParametricPotential",
   "sympy.sympify",
   "unyt.g",
   "unyt.m"
  ],
  "type": "function"
 },
 "gmso.tests.test_potential.TestPotential.test_set_params_bad": {
  "lineno": 163,
  "symbols_in_volume": [
   "gmso.core.parametric_potential.ParametricPotential",
   "pytest.raises",
   "unyt.g",
   "unyt.m"
  ],
  "type": "function"
 },
 "gmso.tests.test_potential.TestPotential.test_set_params_partial": {
  "lineno": 176,
  "symbols_in_volume": [
   "gmso.core.parametric_potential.ParametricPotential",
   "sympy.sympify",
   "unyt.g",
   "unyt.m"
  ],
  "type": "function"
 },
 "gmso.tests.test_potential.TestPotential.test_setters": {
  "lineno": 28,
  "symbols_in_volume": [
   "gmso.core.parametric_potential.ParametricPotential",
   "sympy.symbols",
   "sympy.sympify",
   "unyt.Unit",
   "unyt.nm"
  ],
  "type": "function"
 },
 "gmso.tests.test_potential_templates": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.tests.test_potential_templates.TestPotentialTemplates": {
  "lineno": 11,
  "symbols_in_volume": [
   "gmso.tests.base_test.BaseTest"
  ],
  "type": "class"
 },
 "gmso.tests.test_potential_templates.TestPotentialTemplates.templates": {
  "lineno": 12,
  "symbols_in_volume": [
   "gmso.lib.potential_templates.PotentialTemplateLibrary",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "gmso.tests.test_potential_templates.TestPotentialTemplates.test_available_template": {
  "lineno": 86,
  "symbols_in_volume": [
   "glob.glob",
   "gmso.lib.potential_templates.JSON_DIR",
   "os.path.join"
  ],
  "type": "function"
 },
 "gmso.tests.test_potential_templates.TestPotentialTemplates.test_buckingham_potential": {
  "lineno": 80,
  "symbols_in_volume": [
   "sympy.sympify"
  ],
  "type": "function"
 },
 "gmso.tests.test_potential_templates.TestPotentialTemplates.test_harmonic_angle_potential": {
  "lineno": 74,
  "symbols_in_volume": [
   "sympy.sympify"
  ],
  "type": "function"
 },
 "gmso.tests.test_potential_templates.TestPotentialTemplates.test_harmonic_bond_potential": {
  "lineno": 68,
  "symbols_in_volume": [
   "sympy.sympify"
  ],
  "type": "function"
 },
 "gmso.tests.test_potential_templates.TestPotentialTemplates.test_harmonic_improper_potential": {
  "lineno": 62,
  "symbols_in_volume": [
   "sympy.sympify"
  ],
  "type": "function"
 },
 "gmso.tests.test_potential_templates.TestPotentialTemplates.test_harmonic_torsion_potential": {
  "lineno": 56,
  "symbols_in_volume": [
   "sympy.sympify"
  ],
  "type": "function"
 },
 "gmso.tests.test_potential_templates.TestPotentialTemplates.test_lennard_jones_potential": {
  "lineno": 20,
  "symbols_in_volume": [
   "sympy.sympify"
  ],
  "type": "function"
 },
 "gmso.tests.test_potential_templates.TestPotentialTemplates.test_mie_potential": {
  "lineno": 26,
  "symbols_in_volume": [
   "sympy.sympify"
  ],
  "type": "function"
 },
 "gmso.tests.test_potential_templates.TestPotentialTemplates.test_opls_torsion_potential": {
  "lineno": 33,
  "symbols_in_volume": [
   "sympy.sympify"
  ],
  "type": "function"
 },
 "gmso.tests.test_potential_templates.TestPotentialTemplates.test_periodic_torsion_potential": {
  "lineno": 42,
  "symbols_in_volume": [
   "sympy.sympify"
  ],
  "type": "function"
 },
 "gmso.tests.test_potential_templates.TestPotentialTemplates.test_ryckaert_bellemans_torsion_potential": {
  "lineno": 48,
  "symbols_in_volume": [
   "sympy.sympify"
  ],
  "type": "function"
 },
 "gmso.tests.test_potential_templates.TestPotentialTemplates.test_singleton_behavior": {
  "lineno": 16,
  "symbols_in_volume": [
   "gmso.lib.potential_templates.PotentialTemplateLibrary"
  ],
  "type": "function"
 },
 "gmso.tests.test_reference_xmls": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.tests.test_reference_xmls.TestForceFieldFromXML": {
  "lineno": 12,
  "symbols_in_volume": [
   "gmso.tests.base_test.BaseTest"
  ],
  "type": "class"
 },
 "gmso.tests.test_reference_xmls.TestForceFieldFromXML.test_carbon_force_field": {
  "lineno": 13,
  "symbols_in_volume": [
   "gmso.core.forcefield.ForceField",
   "gmso.tests.utils.get_path",
   "numpy.pi",
   "sympy.simplify",
   "sympy.sympify",
   "unyt.Unit",
   "unyt.dimensionless",
   "unyt.nm",
   "unyt.radian",
   "unyt.testing.assert_allclose_units"
  ],
  "type": "function"
 },
 "gmso.tests.test_reference_xmls.TestForceFieldFromXML.test_ethylene_forcefield": {
  "lineno": 156,
  "symbols_in_volume": [
   "gmso.core.forcefield.ForceField",
   "gmso.tests.utils.get_path",
   "sympy.simplify",
   "sympy.sympify",
   "unyt.Unit",
   "unyt.elementary_charge",
   "unyt.nm",
   "unyt.rad",
   "unyt.testing.assert_allclose_units"
  ],
  "type": "function"
 },
 "gmso.tests.test_reference_xmls.TestForceFieldFromXML.test_noble_mie_xml": {
  "lineno": 119,
  "symbols_in_volume": [
   "gmso.core.forcefield.ForceField",
   "gmso.lib.potential_templates.PotentialTemplateLibrary",
   "gmso.tests.utils.get_path",
   "sympy.simplify",
   "unyt.Angstrom",
   "unyt.Unit",
   "unyt.dimensionless",
   "unyt.testing.assert_allclose_units"
  ],
  "type": "function"
 },
 "gmso.tests.test_reference_xmls.TestForceFieldFromXML.test_spce_xml": {
  "lineno": 84,
  "symbols_in_volume": [
   "gmso.core.forcefield.ForceField",
   "gmso.tests.utils.get_path",
   "sympy.simplify",
   "sympy.sympify",
   "unyt.Unit",
   "unyt.degree",
   "unyt.elementary_charge",
   "unyt.nm",
   "unyt.testing.assert_allclose_units"
  ],
  "type": "function"
 },
 "gmso.tests.test_reference_xmls.TestForceFieldFromXML.test_tip3p_force_field": {
  "lineno": 50,
  "symbols_in_volume": [
   "gmso.core.forcefield.ForceField",
   "gmso.tests.utils.get_path",
   "sympy.simplify",
   "sympy.sympify",
   "unyt.Unit",
   "unyt.nm",
   "unyt.radian",
   "unyt.testing.assert_allclose_units"
  ],
  "type": "function"
 },
 "gmso.tests.test_singleton": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.tests.test_singleton.TestSingleton": {
  "lineno": 5,
  "symbols_in_volume": [
   "gmso.tests.base_test.BaseTest"
  ],
  "type": "class"
 },
 "gmso.tests.test_singleton.TestSingleton.test_unique_id": {
  "lineno": 6,
  "symbols_in_volume": [
   "gmso.utils.singleton.Singleton"
  ],
  "type": "function"
 },
 "gmso.tests.test_subtopology": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.tests.test_subtopology.TestSubTopology": {
  "lineno": 10,
  "symbols_in_volume": [
   "gmso.tests.base_test.BaseTest"
  ],
  "type": "class"
 },
 "gmso.tests.test_subtopology.TestSubTopology.test_add_site_parent": {
  "lineno": 68,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.subtopology.SubTopology",
   "gmso.core.topology.Topology",
   "numpy.ones",
   "numpy.zeros",
   "unyt.nm"
  ],
  "type": "function"
 },
 "gmso.tests.test_subtopology.TestSubTopology.test_subtop_add_site": {
  "lineno": 41,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.subtopology.SubTopology"
  ],
  "type": "function"
 },
 "gmso.tests.test_subtopology.TestSubTopology.test_subtop_add_site_parent": {
  "lineno": 57,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.subtopology.SubTopology",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_subtopology.TestSubTopology.test_subtop_assign_parent": {
  "lineno": 49,
  "symbols_in_volume": [
   "gmso.core.subtopology.SubTopology",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_subtopology.TestSubTopology.test_subtop_init": {
  "lineno": 11,
  "symbols_in_volume": [
   "gmso.core.subtopology.SubTopology",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_subtopology.TestSubTopology.test_subtop_setters": {
  "lineno": 28,
  "symbols_in_volume": [
   "gmso.core.subtopology.SubTopology",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_template": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.tests.test_template.TestTemplate": {
  "lineno": 8,
  "symbols_in_volume": [
   "gmso.tests.base_test.BaseTest"
  ],
  "type": "class"
 },
 "gmso.tests.test_template.TestTemplate.test_potential_template": {
  "lineno": 9,
  "symbols_in_volume": [
   "gmso.lib.potential_templates.PotentialTemplate",
   "sympy.sympify"
  ],
  "type": "function"
 },
 "gmso.tests.test_template.TestTemplate.test_template_set_expression": {
  "lineno": 19,
  "symbols_in_volume": [
   "gmso.lib.potential_templates.PotentialTemplate",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_top": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.tests.test_top.TestTop": {
  "lineno": 14,
  "symbols_in_volume": [
   "gmso.tests.base_test.BaseTest"
  ],
  "type": "class"
 },
 "gmso.tests.test_top.TestTop.test_custom_defaults": {
  "lineno": 99,
  "symbols_in_volume": [
   "gmso.formats.top.write_top",
   "parmed.load_file"
  ],
  "type": "function"
 },
 "gmso.tests.test_top.TestTop.test_ethane_periodic": {
  "lineno": 78,
  "symbols_in_volume": [
   "gmso.core.parametric_potential.ParametricPotential.from_template",
   "gmso.formats.top.write_top",
   "gmso.lib.potential_templates.PotentialTemplateLibrary",
   "parmed.load_file",
   "unyt.Unit"
  ],
  "type": "function"
 },
 "gmso.tests.test_top.TestTop.test_modified_potentials": {
  "lineno": 28,
  "symbols_in_volume": [
   "gmso.ForceField",
   "gmso.exceptions.EngineIncompatibilityError",
   "gmso.formats.top.write_top",
   "gmso.utils.io.get_fn",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_top.TestTop.test_pmd_loop": {
  "lineno": 20,
  "symbols_in_volume": [
   "gmso.formats.top.write_top",
   "parmed.load_file",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "gmso.tests.test_top.TestTop.test_water_top": {
  "lineno": 49,
  "symbols_in_volume": [
   "gmso.ForceField",
   "gmso.core.angle.Angle",
   "gmso.formats.top.write_top",
   "gmso.tests.utils.get_path"
  ],
  "type": "function"
 },
 "gmso.tests.test_top.TestTop.test_write_top": {
  "lineno": 15,
  "symbols_in_volume": [
   "gmso.formats.top.write_top"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology": {
  "lineno": null,
  "symbols_in_volume": [
   "gmso.utils.io.has_parmed",
   "gmso.utils.io.import_"
  ],
  "type": "module"
 },
 "gmso.tests.test_topology.TestTopology": {
  "lineno": 32,
  "symbols_in_volume": [
   "gmso.tests.base_test.BaseTest"
  ],
  "type": "class"
 },
 "gmso.tests.test_topology.TestTopology.test_add_box": {
  "lineno": 66,
  "symbols_in_volume": [
   "gmso.core.box.Box",
   "gmso.core.topology.Topology",
   "numpy.ones",
   "unyt.nm",
   "unyt.testing.assert_allclose_units"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_add_connection": {
  "lineno": 54,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.bond.Bond",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_add_duplicate_connected_atom": {
  "lineno": 422,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.bond.Bond",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_add_site": {
  "lineno": 46,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_add_subtopology": {
  "lineno": 381,
  "symbols_in_volume": [
   "gmso.core.subtopology.SubTopology",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_add_typed_bond_update": {
  "lineno": 215,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.bond.Bond",
   "gmso.core.bond_type.BondType",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_add_typed_site_update": {
  "lineno": 187,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.atom_type.AtomType",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_add_untyped_bond_update": {
  "lineno": 200,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.bond.Bond",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_add_untyped_site_update": {
  "lineno": 174,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_angle_angletype_update": {
  "lineno": 317,
  "symbols_in_volume": [
   "gmso.core.angle.Angle",
   "gmso.core.angle_type.AngleType",
   "gmso.core.atom.Atom",
   "gmso.core.atom_type.AtomType",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_atomtype_update": {
  "lineno": 282,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.atom_type.AtomType",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_bond_bondtype_update": {
  "lineno": 300,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.atom_type.AtomType",
   "gmso.core.bond.Bond",
   "gmso.core.bond_type.BondType",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_change_comb_rule": {
  "lineno": 38,
  "symbols_in_volume": [
   "gmso.core.topology.Topology",
   "gmso.exceptions.GMSOError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_dihedral_dihedraltype_update": {
  "lineno": 337,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.atom_type.AtomType",
   "gmso.core.dihedral.Dihedral",
   "gmso.core.dihedral_type.DihedralType",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_eq_angles": {
  "lineno": 134,
  "symbols_in_volume": [
   "copy.deepcopy",
   "gmso.utils.io.get_fn",
   "gmso.utils.io.has_parmed",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_eq_bonds": {
  "lineno": 119,
  "symbols_in_volume": [
   "copy.deepcopy",
   "gmso.utils.io.get_fn",
   "gmso.utils.io.has_parmed",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_eq_dihedrals": {
  "lineno": 149,
  "symbols_in_volume": [
   "copy.deepcopy",
   "gmso.utils.io.get_fn",
   "gmso.utils.io.has_parmed",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_eq_overall": {
  "lineno": 164,
  "symbols_in_volume": [
   "gmso.external.convert_parmed.from_parmed",
   "gmso.utils.io.get_fn",
   "gmso.utils.io.has_parmed",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_eq_sites": {
  "lineno": 94,
  "symbols_in_volume": [
   "copy.deepcopy",
   "gmso.core.atom.Atom",
   "gmso.core.atom_type.AtomType",
   "unyt.nm"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_eq_types": {
  "lineno": 87,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_improper_impropertype_update": {
  "lineno": 359,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.atom_type.AtomType",
   "gmso.core.improper.Improper",
   "gmso.core.improper_type.ImproperType",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_new_topology": {
  "lineno": 34,
  "symbols_in_volume": [
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_parametrization": {
  "lineno": 389,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.atom_type.AtomType",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_parametrization_setter": {
  "lineno": 399,
  "symbols_in_volume": [
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_positions_dtype": {
  "lineno": 75,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.topology.Topology",
   "unyt.nm",
   "unyt.unyt_array"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_top_update": {
  "lineno": 231,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.atom_type.AtomType",
   "gmso.core.bond.Bond",
   "gmso.core.bond_type.BondType",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_topology_atom_type_changes": {
  "lineno": 408,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.atom_type.AtomType",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_topology_get_index": {
  "lineno": 438,
  "symbols_in_volume": [
   "gmso.core.angle.Angle",
   "gmso.core.atom.Atom",
   "gmso.core.bond.Bond",
   "gmso.core.dihedral.Dihedral",
   "gmso.core.improper.Improper",
   "gmso.core.topology.Topology"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_topology_get_index_angle_type": {
  "lineno": 520,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_topology_get_index_angle_type_after_change": {
  "lineno": 524,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_topology_get_index_atom_type": {
  "lineno": 501,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_topology_get_index_atom_type_after_change": {
  "lineno": 505,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_topology_get_index_bond_type": {
  "lineno": 510,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_topology_get_index_bond_type_after_change": {
  "lineno": 516,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_topology_get_index_dihedral_type": {
  "lineno": 530,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_topology_get_index_dihedral_type_after_change": {
  "lineno": 534,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_topology_get_index_non_existing_member": {
  "lineno": 495,
  "symbols_in_volume": [
   "gmso.core.atom.Atom",
   "gmso.core.topology.Topology",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_topology.TestTopology.test_topology_get_index_wrong_member_type": {
  "lineno": 490,
  "symbols_in_volume": [
   "gmso.core.topology.Topology",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.tests.test_utils.test_unyt_to_hashable": {
  "lineno": 6,
  "symbols_in_volume": [
   "gmso.utils.misc.unyt_to_hashable",
   "unyt.angstrom",
   "unyt.g",
   "unyt.kg",
   "unyt.nm",
   "unyt.second"
  ],
  "type": "function"
 },
 "gmso.tests.test_xyz": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.tests.test_xyz.TestXYZ": {
  "lineno": 9,
  "symbols_in_volume": [
   "gmso.tests.base_test.BaseTest"
  ],
  "type": "class"
 },
 "gmso.tests.test_xyz.TestXYZ.test_full_io": {
  "lineno": 34,
  "symbols_in_volume": [
   "gmso.formats.xyz.read_xyz",
   "gmso.formats.xyz.write_xyz",
   "gmso.utils.io.get_fn",
   "unyt.testing.assert_allclose_units"
  ],
  "type": "function"
 },
 "gmso.tests.test_xyz.TestXYZ.test_read_xyz": {
  "lineno": 10,
  "symbols_in_volume": [
   "gmso.formats.xyz.read_xyz",
   "gmso.utils.io.get_fn",
   "unyt.nm",
   "unyt.unyt_array"
  ],
  "type": "function"
 },
 "gmso.tests.test_xyz.TestXYZ.test_write_xyz": {
  "lineno": 30,
  "symbols_in_volume": [
   "gmso.formats.xyz.read_xyz",
   "gmso.formats.xyz.write_xyz",
   "gmso.utils.io.get_fn"
  ],
  "type": "function"
 },
 "gmso.tests.test_xyz.TestXYZ.test_wrong_n_atoms": {
  "lineno": 24,
  "symbols_in_volume": [
   "gmso.formats.xyz.read_xyz",
   "gmso.utils.io.get_fn",
   "pytest.raises"
  ],
  "type": "function"
 },
 "gmso.tests.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.tests.utils.get_path": {
  "lineno": 5,
  "symbols_in_volume": [
   "os.path.join",
   "os.path.split"
  ],
  "type": "function"
 },
 "gmso.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.utils._constants": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.utils.compatibility": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.utils.compatibility._check_single_potential": {
  "lineno": 44,
  "symbols_in_volume": [
   "sympy.simplify"
  ],
  "type": "function"
 },
 "gmso.utils.compatibility.check_compatibility": {
  "lineno": 6,
  "symbols_in_volume": [
   "gmso.exceptions.EngineIncompatibilityError"
  ],
  "type": "function"
 },
 "gmso.utils.connectivity": {
  "lineno": null,
  "symbols_in_volume": [
   "gmso.core.angle.Angle",
   "gmso.core.dihedral.Dihedral",
   "gmso.core.improper.Improper"
  ],
  "type": "module"
 },
 "gmso.utils.connectivity._add_connections": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.utils.connectivity._detect_connections": {
  "lineno": 66,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.isomorphism.GraphMatcher"
  ],
  "type": "function"
 },
 "gmso.utils.connectivity._format_subgraph_angle": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.utils.connectivity._format_subgraph_dihedral": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.utils.connectivity._format_subgraph_improper": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.utils.connectivity._get_sorted_by_n_connections": {
  "lineno": 91,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "gmso.utils.connectivity._trim_duplicates": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.utils.connectivity.identify_connections": {
  "lineno": 20,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.line_graph"
  ],
  "type": "function"
 },
 "gmso.utils.conversions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.utils.conversions.convert_opls_to_ryckaert": {
  "lineno": 9,
  "symbols_in_volume": [
   "gmso.DihedralType",
   "gmso.exceptions.GMSOError",
   "gmso.lib.potential_templates.PotentialTemplateLibrary",
   "sympy.simplify",
   "unyt.Unit"
  ],
  "type": "function"
 },
 "gmso.utils.conversions.convert_ryckaert_to_opls": {
  "lineno": 60,
  "symbols_in_volume": [
   "gmso.DihedralType",
   "gmso.exceptions.GMSOError",
   "gmso.lib.potential_templates.PotentialTemplateLibrary",
   "sympy.simplify"
  ],
  "type": "function"
 },
 "gmso.utils.decorators": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.utils.decorators.confirm_dict_existence": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.utils.decorators.confirm_dict_existence.setter_with_dict_removal": {
  "lineno": 9,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "gmso.utils.expression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.utils.expression._PotentialExpression": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.utils.expression._PotentialExpression.__eq__": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.utils.expression._PotentialExpression.__hash__": {
  "lineno": 179,
  "symbols_in_volume": [
   "gmso.utils.misc.unyt_to_hashable"
  ],
  "type": "function"
 },
 "gmso.utils.expression._PotentialExpression.__init__": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.utils.expression._PotentialExpression.__repr__": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.utils.expression._PotentialExpression._validate_expression": {
  "lineno": 211,
  "symbols_in_volume": [
   "sympy.Expr",
   "sympy.sympify"
  ],
  "type": "function"
 },
 "gmso.utils.expression._PotentialExpression._validate_independent_variables": {
  "lineno": 243,
  "symbols_in_volume": [
   "sympy.Symbol",
   "sympy.symbols"
  ],
  "type": "function"
 },
 "gmso.utils.expression._PotentialExpression._validate_parameters": {
  "lineno": 225,
  "symbols_in_volume": [
   "unyt.unyt_array"
  ],
  "type": "function"
 },
 "gmso.utils.expression._PotentialExpression._verify_validity": {
  "lineno": 270,
  "symbols_in_volume": [
   "sympy.symbols",
   "warnings.warn"
  ],
  "type": "function"
 },
 "gmso.utils.expression._PotentialExpression.expression": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.utils.expression._PotentialExpression.independent_variables": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.utils.expression._PotentialExpression.is_parametric": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.utils.expression._PotentialExpression.parameters": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.utils.expression._PotentialExpression.set": {
  "lineno": 110,
  "symbols_in_volume": [
   "sympy.Symbol"
  ],
  "type": "function"
 },
 "gmso.utils.ff_utils": {
  "lineno": null,
  "symbols_in_volume": [
   "gmso.core.angle_type.AngleType",
   "gmso.core.bond_type.BondType",
   "gmso.core.dihedral_type.DihedralType",
   "gmso.core.improper_type.ImproperType",
   "unyt",
   "unyt.Unit",
   "unyt.unyt_quantity"
  ],
  "type": "module"
 },
 "gmso.utils.ff_utils._check_atomtype_existence": {
  "lineno": 88,
  "symbols_in_volume": [
   "gmso.exceptions.ForceFieldParseError"
  ],
  "type": "function"
 },
 "gmso.utils.ff_utils._check_valid_string": {
  "lineno": 31,
  "symbols_in_volume": [
   "gmso.exceptions.ForceFieldError"
  ],
  "type": "function"
 },
 "gmso.utils.ff_utils._consolidate_params": {
  "lineno": 70,
  "symbols_in_volume": [
   "re.match",
   "sympy.sympify"
  ],
  "type": "function"
 },
 "gmso.utils.ff_utils._parse_default_units": {
  "lineno": 104,
  "symbols_in_volume": [
   "unyt.K",
   "unyt.coulomb",
   "unyt.gram",
   "unyt.kcal",
   "unyt.mol",
   "unyt.nm",
   "unyt.ps",
   "unyt.rad"
  ],
  "type": "function"
 },
 "gmso.utils.ff_utils._parse_param_units": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.utils.ff_utils._parse_params_values": {
  "lineno": 44,
  "symbols_in_volume": [
   "gmso.exceptions.ForceFieldError",
   "gmso.exceptions.ForceFieldParseError",
   "unyt.unyt_quantity"
  ],
  "type": "function"
 },
 "gmso.utils.ff_utils._parse_scaling_factors": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.utils.ff_utils._parse_unit_string": {
  "lineno": 254,
  "symbols_in_volume": [
   "sympy.sympify",
   "unyt.Unit",
   "unyt.exceptions.UnitParseError",
   "unyt.unyt_quantity"
  ],
  "type": "function"
 },
 "gmso.utils.ff_utils.parse_ff_atomtypes": {
  "lineno": 157,
  "symbols_in_volume": [
   "collections.ChainMap",
   "gmso.core.atom_type.AtomType",
   "sympy.sympify",
   "unyt.elementary_charge",
   "unyt.g",
   "unyt.mol",
   "unyt.unyt_quantity"
  ],
  "type": "function"
 },
 "gmso.utils.ff_utils.parse_ff_connection_types": {
  "lineno": 217,
  "symbols_in_volume": [
   "sympy.sympify"
  ],
  "type": "function"
 },
 "gmso.utils.ff_utils.parse_ff_metadata": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.utils.ff_utils.validate": {
  "lineno": 121,
  "symbols_in_volume": [
   "lxml.etree.XMLSchema",
   "lxml.etree.parse",
   "os.path.abspath",
   "os.path.join",
   "os.path.split"
  ],
  "type": "function"
 },
 "gmso.utils.geometry": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.utils.geometry.coord_shift": {
  "lineno": 3,
  "symbols_in_volume": [
   "numpy.greater",
   "numpy.less"
  ],
  "type": "function"
 },
 "gmso.utils.io": {
  "lineno": null,
  "symbols_in_volume": [
   "gsd",
   "mbuild",
   "mdtraj",
   "parmed",
   "simtk.openmm",
   "simtk.unit"
  ],
  "type": "module"
 },
 "gmso.utils.io.DelayImportError": {
  "lineno": 10,
  "symbols_in_volume": [
   "unittest.SkipTest"
  ],
  "type": "class"
 },
 "gmso.utils.io.get_fn": {
  "lineno": 13,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join",
   "pkg_resources.resource_filename"
  ],
  "type": "function"
 },
 "gmso.utils.io.import_": {
  "lineno": 36,
  "symbols_in_volume": [
   "importlib.import_module",
   "inspect.currentframe",
   "inspect.getouterframes",
   "os.linesep",
   "os.path.basename",
   "sys.stderr",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "gmso.utils.misc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.utils.misc._unyt_to_hashable_single": {
  "lineno": 18,
  "symbols_in_volume": [
   "unyt.coulomb",
   "unyt.elementary_charge",
   "unyt.unyt_array",
   "unyt.unyt_quantity"
  ],
  "type": "function"
 },
 "gmso.utils.misc.ensure_valid_dimensions": {
  "lineno": 28,
  "symbols_in_volume": [
   "unyt.exceptions.UnitConversionError",
   "unyt.unyt_quantity"
  ],
  "type": "function"
 },
 "gmso.utils.misc.unyt_to_hashable": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.utils.singleton": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.utils.singleton.Singleton": {
  "lineno": 1,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gmso.utils.singleton.Singleton.__new__": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.utils.sorting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gmso.utils.sorting._atoi": {
  "lineno": 3,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gmso.utils.sorting.natural_sort": {
  "lineno": 6,
  "symbols_in_volume": [
   "re.split"
  ],
  "type": "function"
 }
}