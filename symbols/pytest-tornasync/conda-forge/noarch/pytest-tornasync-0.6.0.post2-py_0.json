{
 "pytest_tornasync": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pytest_tornasync.plugin": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pytest_tornasync.plugin.AsyncHTTPServerClient": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_tornasync.plugin.AsyncHTTPServerClient.fetch": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_tornasync.plugin.AsyncHTTPServerClient.get_http_port": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_tornasync.plugin.AsyncHTTPServerClient.get_protocol": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_tornasync.plugin.AsyncHTTPServerClient.get_url": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_tornasync.plugin.AsyncHTTPServerClient.initialize": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_tornasync.plugin.get_test_timeout": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_tornasync.plugin.http_client": {
  "lineno": 136,
  "symbols_in_volume": [
   "contextlib.closing",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pytest_tornasync.plugin.http_server": {
  "lineno": 79,
  "symbols_in_volume": [
   "pytest.yield_fixture"
  ],
  "type": "function"
 },
 "pytest_tornasync.plugin.http_server_client": {
  "lineno": 127,
  "symbols_in_volume": [
   "contextlib.closing",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pytest_tornasync.plugin.http_server_port": {
  "lineno": 71,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pytest_tornasync.plugin.io_loop": {
  "lineno": 59,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pytest_tornasync.plugin.pytest_addoption": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_tornasync.plugin.pytest_pycollect_makeitem": {
  "lineno": 33,
  "symbols_in_volume": [
   "inspect.iscoroutinefunction",
   "pytest.mark.tryfirst"
  ],
  "type": "function"
 },
 "pytest_tornasync.plugin.pytest_pyfunc_call": {
  "lineno": 39,
  "symbols_in_volume": [
   "inspect.iscoroutinefunction",
   "pytest.mark.tryfirst"
  ],
  "type": "function"
 }
}